{
"version":3,
"file":"OpenFLStarlingSamples.js",
"sourceRoot":"file:///",
"sources":["C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/bin/html5/haxe/ApplicationMain.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/EventDispatcher.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/DisplayObject.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/InteractiveObject.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/DisplayObjectContainer.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/Sprite.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/sample/Main.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/Constants.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/Assets.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/bin/html5/haxe/DefaultAssetLibrary.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/text/Font.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/text/Font.hx","C:/_sdks/haxe/3.2/haxe/std/js/_std/EReg.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/EmbeddedAssets.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/events/EventDispatcher.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/geom/Matrix.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/utils/Float32Array.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/geom/Matrix3D.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/ds/Vector.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/Vector.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/geom/Point.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/geom/Vector3D.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/geom/Rectangle.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/DisplayObject.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/rendering/BatchToken.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/DisplayObjectContainer.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/Sprite.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/Game.hx","C:/_sdks/haxe/3.2/haxe/std/js/_std/HxOverrides.hx","C:/_sdks/haxe/3.2/haxe/std/IntIterator.hx","C:/_sdks/haxe/3.2/haxe/std/Lambda.hx","C:/_sdks/haxe/3.2/haxe/std/List.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/MainMenu.hx","C:/_sdks/haxe/3.2/haxe/std/Map.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/bin/html5/haxe/NMEPreloader.hx","C:/_sdks/haxe/3.2/haxe/std/js/_std/Reflect.hx","C:/_sdks/haxe/3.2/haxe/std/js/_std/Std.hx","C:/_sdks/haxe/3.2/haxe/std/StringBuf.hx","C:/_sdks/haxe/3.2/haxe/std/StringTools.hx","C:/_sdks/haxe/3.2/haxe/std/js/_std/Type.hx","C:/_sdks/haxe/3.2/haxe/std/UInt.hx","C:/_sdks/haxe/3.2/haxe/std/Xml.hx","C:/_sdks/haxe/3.2/haxe/std/cpp/Callable.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/haxe/CallStack.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/EnumFlags.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/Int32.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/Int64.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/Log.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/haxe/Timer.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/Unserializer.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/Utf8.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/crypto/BaseCode.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/crypto/Md5.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/ds/BalancedTree.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/ds/EnumValueMap.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/ds/HashMap.hx","C:/_sdks/haxe/3.2/haxe/std/js/_std/haxe/ds/IntMap.hx","C:/_sdks/haxe/3.2/haxe/std/js/_std/haxe/ds/ObjectMap.hx","C:/_sdks/haxe/3.2/haxe/std/js/_std/haxe/ds/StringMap.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/ds/WeakMap.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/format/JsonParser.hx","C:/_sdks/haxe/3.2/haxe/std/js/_std/haxe/io/Bytes.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/io/BytesBuffer.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/io/Input.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/io/BytesInput.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/io/Output.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/io/BytesOutput.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/io/Eof.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/io/FPHelper.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/io/Path.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/macro/Expr.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/xml/Parser.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/xml/Printer.hx","C:/_sdks/haxe/3.2/haxe/std/js/Boot.hx","C:/_sdks/haxe/3.2/haxe/std/js/Browser.hx","C:/_sdks/haxe/3.2/haxe/std/js/Lib.hx","C:/_sdks/haxe/3.2/haxe/std/js/html/CanvasElement.hx","C:/_sdks/haxe/3.2/haxe/std/js/html/compat/ArrayBuffer.hx","C:/_sdks/haxe/3.2/haxe/std/js/html/compat/DataView.hx","C:/_sdks/haxe/3.2/haxe/std/js/html/compat/Uint8Array.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/app/Event.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/app/Preloader.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/_backend/html5/HTML5Application.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/_backend/html5/HTML5Mouse.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/_backend/html5/HTML5Renderer.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/_backend/html5/HTML5Window.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/app/Module.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/app/Application.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/system/ThreadPool.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/ui/Window.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/ui/Joystick.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/Renderer.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/ui/Gamepad.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/ui/Touch.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/app/Future.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/app/Promise.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/audio/ALAudioContext.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/audio/ALCAudioContext.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/audio/AudioBuffer.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/audio/AudioManager.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/audio/AudioSource.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/audio/FlashAudioContext.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/audio/HTML5AudioContext.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/audio/openal/AL.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/audio/openal/ALC.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/audio/openal/ALContext.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/audio/openal/ALDevice.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/ConsoleRenderContext.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/FlashRenderContext.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/Image.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/utils/UInt8Array.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/math/color/ARGB.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/math/color/BGRA.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/math/color/RGBA.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/ImageBuffer.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/cairo/Cairo.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/cairo/CairoFTFontFace.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/cairo/CairoFontFace.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/cairo/CairoFontOptions.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/cairo/CairoImageSurface.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/cairo/CairoPattern.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/cairo/CairoSurface.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/console/IndexBuffer.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/console/Shader.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/console/VertexBuffer.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/console/VertexOutput.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/format/BMP.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/format/JPEG.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/format/PNG.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/opengl/GL.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/utils/ImageCanvasUtil.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/graphics/utils/ImageDataUtil.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/math/ColorMatrix.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/math/Matrix3.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/math/Matrix4.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/math/Rectangle.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/math/Vector2.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/math/Vector4.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/net/HTTPRequest.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/net/curl/CURL.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/net/curl/CURLEasy.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/system/BackgroundWorker.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/system/CFFI.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/system/CFFIPointer.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/system/Clipboard.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/system/Display.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/system/DisplayMode.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/system/System.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/text/Glyph.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/text/GlyphMetrics.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/text/GlyphPosition.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/text/TextDirection.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/text/TextLayout.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/text/TextScript.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/ui/GamepadAxis.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/ui/GamepadButton.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/ui/JoystickHatPosition.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/ui/KeyCode.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/ui/KeyModifier.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/ui/Mouse.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/utils/Bytes.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/utils/GLUtils.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/utils/Int16Array.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/utils/Int32Array.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/utils/LZMA.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/utils/UInt16Array.hx","C:/_sdks/haxe/3.2/haxe/lib/lime/2,9,0/lime/utils/UInt32Array.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/Assets.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/MovieClip.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/LoaderInfo.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/system/ApplicationDomain.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/UncaughtErrorEvents.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/geom/ColorTransform.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/Lib.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/AGALTokenizer.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/AGLSLCompiler.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/AGLSLParser.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/Sampler.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/Description.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/Destination.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/Header.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/Mapping.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/OpLUT.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/Token.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/assembler/FS.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/assembler/Flags.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/assembler/Opcode.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/assembler/OpcodeMap.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/assembler/Part.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/assembler/Reg.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/assembler/RegMap.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/assembler/Sampler.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/assembler/SamplerMap.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/AbstractMaskManager.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/AbstractRenderer.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/DrawCommandBuffer.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/DrawCommandReader.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/GraphicsPaths.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/PolyK.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/RenderSession.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/cairo/CairoBitmap.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/cairo/CairoGraphics.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/cairo/CairoMaskManager.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/cairo/CairoRenderer.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/cairo/CairoShape.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/cairo/CairoTextField.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/canvas/CanvasBitmap.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/canvas/CanvasGraphics.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/canvas/CanvasMaskManager.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/canvas/CanvasRenderer.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/canvas/CanvasShape.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/canvas/CanvasTextField.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/console/ConsoleRenderer.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/dom/DOMBitmap.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/dom/DOMMaskManager.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/dom/DOMRenderer.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/dom/DOMShape.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/dom/DOMTextField.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/GLBitmap.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/GLRenderer.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/shaders2/Shader.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/shaders2/DefaultShader.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/shaders2/DrawTrianglesShader.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/shaders2/FillShader.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/shaders2/PatternFillShader.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/shaders2/PrimitiveShader.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/utils/DrawPath.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/utils/FilterManager.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/utils/GLMaskManager.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/utils/VertexAttribute.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/utils/PingPongTexture.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/utils/RenderTexture.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/utils/ShaderManager.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/utils/StencilManager.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/renderer/opengl/utils/VertexArray.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/text/TextEngine.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/text/TextFormatRange.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/text/TextLayoutGroup.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/Application.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/Bitmap.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/BitmapData.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/BlendMode.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/CapsStyle.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/DirectRenderer.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/FrameLabel.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/GradientType.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/Graphics.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/GraphicsBitmapFill.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/GraphicsEndFill.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/GraphicsGradientFill.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/GraphicsPath.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/GraphicsSolidFill.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/GraphicsStroke.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/InterpolationMethod.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/JPEGEncoderOptions.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/JointStyle.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/LineScaleMode.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/Loader.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/OpenGLView.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/PNGEncoderOptions.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/PixelSnapping.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/Preloader.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/Shader.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/Shape.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/SpreadMethod.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/Stage.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/Stage3D.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/StageAlign.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/StageDisplayState.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/StageQuality.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/StageScaleMode.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/Tilesheet.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/TriangleCulling.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display/Window.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/Context3D.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/Context3DBlendFactor.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/Context3DCompareMode.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/Context3DStencilAction.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/Context3DTriangleFace.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/IndexBuffer3D.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/Program3D.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/VertexBuffer3D.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/_shaders/AGLSLShaderUtils.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/textures/TextureBase.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/textures/CubeTexture.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/textures/RectangleTexture.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/textures/Texture.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/errors/Error.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/errors/ArgumentError.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/errors/IOError.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/errors/EOFError.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/errors/IllegalOperationError.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/errors/RangeError.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/errors/TypeError.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/Event.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/ActivityEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/TextEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/ErrorEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/FocusEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/FullScreenEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/GameInputEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/HTTPStatusEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/IOErrorEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/KeyboardEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/MouseEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/NetStatusEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/ProgressEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/SecurityErrorEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/StageVideoAvailabilityEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/events/TouchEvent.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/filters/BitmapFilter.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/geom/Orientation3D.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/geom/Transform.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/media/ID3Info.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/media/Sound.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/media/SoundChannel.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/media/SoundLoaderContext.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/media/SoundTransform.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/media/StageVideo.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/media/StageVideoAvailability.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/net/NetConnection.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/net/NetStream.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/net/URLLoader.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/net/URLLoaderDataFormat.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/net/URLRequest.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/net/URLRequestHeader.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/net/URLRequestMethod.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/net/URLVariables.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/system/Capabilities.hx","C:/_sdks/haxe/3.2/haxe/std/haxe/macro/Compiler.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/system/LoaderContext.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/system/SecurityDomain.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/system/System.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/system/TouchscreenType.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/text/AntiAliasType.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/text/FontStyle.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/text/FontType.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/text/GridFitType.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/text/TextField.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/text/TextFieldAutoSize.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/text/TextFieldType.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/text/TextFormat.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/text/TextFormatAlign.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/text/TextLineMetrics.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/ui/GameInput.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/ui/GameInputControl.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/ui/GameInputDevice.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/ui/Keyboard.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/ui/Mouse.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/ui/Multitouch.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/ui/MultitouchInputMode.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/utils/AGALMiniAssembler.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/utils/ByteArray.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/utils/CompressionAlgorithm.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/utils/Dictionary.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/utils/Endian.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/utils/Object.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/scenes/Scene.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/scenes/AnimationScene.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/scenes/BenchmarkScene.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/scenes/BlendModeScene.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/scenes/CustomHitTestScene.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/scenes/FilterScene.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/scenes/MaskScene.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/scenes/MovieScene.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/scenes/RenderTextureScene.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/scenes/Sprite3DScene.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/scenes/TextScene.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/scenes/TextureScene.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/scenes/TouchScene.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/animation/DelayedCall.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/animation/Juggler.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/animation/Transitions.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/animation/Tween.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/core/Starling.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/core/StatsDisplay.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/BlendMode.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/Button.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/ButtonState.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/Canvas.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/rendering/VertexDataFormat.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/rendering/Effect.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/rendering/FilterEffect.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/rendering/MeshEffect.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/rendering/MeshStyle.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/Mesh.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/Quad.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/Image.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/MeshSubset.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/MeshBatch.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/MovieClip.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/Sprite3D.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/display/Stage.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/errors/AbstractClassError.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/errors/AbstractMethodError.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/errors/MissingContextError.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/errors/NotSupportedError.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/events/Event.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/events/EnterFrameEvent.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/events/KeyboardEvent.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/events/ResizeEvent.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/events/Touch.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/events/TouchEvent.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/events/TouchMarker.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/events/TouchPhase.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/events/TouchProcessor.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/filters/FragmentFilter.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/filters/BlurFilter.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/filters/ColorMatrixFilter.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/filters/CompositeFilter.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/filters/DisplacementMapFilter.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/filters/DropShadowFilter.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/Padding.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/filters/FilterChain.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/filters/GlowFilter.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/filters/TexturePool.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/geom/Polygon.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/openfl/OpenFLOverrides.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/rendering/BatchProcessor.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/rendering/IndexData.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/rendering/Painter.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/rendering/Program.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/rendering/RenderState.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/rendering/VertexData.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/rendering/VertexDataAttribute.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/text/BitmapChar.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/text/TextOptions.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/text/BitmapFont.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/text/MiniBitmapFont.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/text/TrueTypeCompositor.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/text/TextField.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/text/TextFieldAutoSize.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/text/TextFormat.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/textures/AtfData.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/textures/TextureOptions.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/textures/Texture.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/textures/ConcreteTexture.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/textures/ConcretePotTexture.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/textures/ConcreteRectangleTexture.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/textures/SubTexture.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/textures/RenderTexture.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/textures/TextureAtlas.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/textures/TextureSmoothing.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/Align.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/AssetManager.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/Color.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/Deg2rad.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/Execute.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/FloatUtil.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/MathUtil.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/MatrixUtil.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/MeshUtil.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/Pool.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/Rad2deg.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/RectangleUtil.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/RenderUtil.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/ScaleMode.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/StringUtil.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/starling/src/starling/utils/SystemUtil.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/utils/DeviceInfo.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/utils/MenuButton.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/utils/ProgressBar.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/utils/RoundButton.hx","C:/_projects/HaxeLibraries/Starling/Starling-Framework-Hx-v2/haxe-sample/src/utils/TouchSheet.hx","C:/_sdks/haxe/3.2/haxe/std/js/_std/Math.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/_internal/aglsl/Context3D.hx","C:/_projects/HaxeLibraries/Imagination/openfl/openfl/display3D/Context3DClearMask.hx"],
"sourcesContent":["#if !macro\r\n\r\n\r\n@:access(lime.app.Application)\r\n@:access(lime.Assets)\r\n@:access(openfl.display.Stage)\r\n\r\n\r\nclass ApplicationMain {\r\n\t\r\n\t\r\n\tpublic static var config:lime.app.Config;\r\n\tpublic static var preloader:openfl.display.Preloader;\r\n\t\r\n\t\r\n\tpublic static function create ():Void {\r\n\t\t\r\n\t\tvar app = new openfl.display.Application ();\r\n\t\tapp.create (config);\r\n\t\t\r\n\t\tvar display = new NMEPreloader ();\r\n\t\t\r\n\t\tpreloader = new openfl.display.Preloader (display);\r\n\t\tapp.setPreloader (preloader);\r\n\t\tpreloader.onComplete.add (init);\r\n\t\tpreloader.create (config);\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tvar urls = [];\r\n\t\tvar types = [];\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/audio/wing_flap.mp3\");\r\n\t\ttypes.push (lime.Assets.AssetType.MUSIC);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/fonts/1x/desyrel.fnt\");\r\n\t\ttypes.push (lime.Assets.AssetType.TEXT);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/fonts/1x/desyrel.png\");\r\n\t\ttypes.push (lime.Assets.AssetType.IMAGE);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/fonts/2x/desyrel.fnt\");\r\n\t\ttypes.push (lime.Assets.AssetType.TEXT);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/fonts/2x/desyrel.png\");\r\n\t\ttypes.push (lime.Assets.AssetType.IMAGE);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/fonts/Ubuntu-License.txt\");\r\n\t\ttypes.push (lime.Assets.AssetType.TEXT);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"Ubuntu\");\r\n\t\ttypes.push (lime.Assets.AssetType.FONT);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/textures/1x/atlas.png\");\r\n\t\ttypes.push (lime.Assets.AssetType.IMAGE);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/textures/1x/atlas.xml\");\r\n\t\ttypes.push (lime.Assets.AssetType.TEXT);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/textures/1x/background.jpg\");\r\n\t\ttypes.push (lime.Assets.AssetType.IMAGE);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/textures/1x/compressed_texture.atf\");\r\n\t\ttypes.push (lime.Assets.AssetType.BINARY);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/textures/2x/atlas.png\");\r\n\t\ttypes.push (lime.Assets.AssetType.IMAGE);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/textures/2x/atlas.xml\");\r\n\t\ttypes.push (lime.Assets.AssetType.TEXT);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/textures/2x/atlas2.png\");\r\n\t\ttypes.push (lime.Assets.AssetType.IMAGE);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/textures/2x/background.jpg\");\r\n\t\ttypes.push (lime.Assets.AssetType.IMAGE);\r\n\t\t\r\n\t\t\r\n\t\turls.push (\"assets/textures/2x/compressed_texture.atf\");\r\n\t\ttypes.push (lime.Assets.AssetType.BINARY);\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif (config.assetsPrefix != null) {\r\n\t\t\t\r\n\t\t\tfor (i in 0...urls.length) {\r\n\t\t\t\t\r\n\t\t\t\tif (types[i] != lime.Assets.AssetType.FONT) {\r\n\t\t\t\t\t\r\n\t\t\t\t\turls[i] = config.assetsPrefix + urls[i];\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tpreloader.load (urls, types);\r\n\t\t#end\r\n\t\t\r\n\t\tvar result = app.exec ();\r\n\t\t\r\n\t\t#if (sys && !nodejs && !emscripten)\r\n\t\tSys.exit (result);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function init ():Void {\r\n\t\t\r\n\t\tvar loaded = 0;\r\n\t\tvar total = 0;\r\n\t\tvar library_onLoad = function (__) {\r\n\t\t\t\r\n\t\t\tloaded++;\r\n\t\t\t\r\n\t\t\tif (loaded == total) {\r\n\t\t\t\t\r\n\t\t\t\tstart ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tpreloader = null;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif (total == 0) {\r\n\t\t\t\r\n\t\t\tstart ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function main () {\r\n\t\t\r\n\t\tconfig = {\r\n\t\t\t\r\n\t\t\tbuild: \"1372\",\r\n\t\t\tcompany: \"P.J.Shand\",\r\n\t\t\tfile: \"OpenFLStarlingSamples\",\r\n\t\t\tfps: 60,\r\n\t\t\tname: \"OpenFLStarlingSamples\",\r\n\t\t\torientation: \"portrait\",\r\n\t\t\tpackageName: \"starling.samples\",\r\n\t\t\tversion: \"1.0.0\",\r\n\t\t\twindows: [\r\n\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tantialiasing: 0,\r\n\t\t\t\t\tbackground: 3355443,\r\n\t\t\t\t\tborderless: false,\r\n\t\t\t\t\tdepthBuffer: false,\r\n\t\t\t\t\tdisplay: 0,\r\n\t\t\t\t\tfullscreen: false,\r\n\t\t\t\t\thardware: false,\r\n\t\t\t\t\theight: 960,\r\n\t\t\t\t\tparameters: \"{}\",\r\n\t\t\t\t\tresizable: true,\r\n\t\t\t\t\tstencilBuffer: true,\r\n\t\t\t\t\ttitle: \"OpenFLStarlingSamples\",\r\n\t\t\t\t\tvsync: true,\r\n\t\t\t\t\twidth: 640,\r\n\t\t\t\t\tx: null,\r\n\t\t\t\t\ty: null\r\n\t\t\t\t},\r\n\t\t\t]\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t#if hxtelemetry\r\n\t\tvar telemetry = new hxtelemetry.HxTelemetry.Config ();\r\n\t\ttelemetry.allocations = true;\r\n\t\ttelemetry.host = \"localhost\";\r\n\t\ttelemetry.app_name = config.name;\r\n\t\tReflect.setField (config, \"telemetry\", telemetry);\r\n\t\t#end\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t#if (munit || utest)\r\n\t\topenfl.Lib.embed (null, 640, 960, \"333333\");\r\n\t\t#end\r\n\t\t#else\r\n\t\tcreate ();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function start ():Void {\r\n\t\t\r\n\t\tvar hasMain = false;\r\n\t\tvar entryPoint = Type.resolveClass (\"sample.Main\");\r\n\t\t\r\n\t\tfor (methodName in Type.getClassFields (entryPoint)) {\r\n\t\t\t\r\n\t\t\tif (methodName == \"main\") {\r\n\t\t\t\t\r\n\t\t\t\thasMain = true;\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tlime.Assets.initialize ();\r\n\t\t\r\n\t\tif (hasMain) {\r\n\t\t\t\r\n\t\t\tReflect.callMethod (entryPoint, Reflect.field (entryPoint, \"main\"), []);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar instance:DocumentClass = Type.createInstance (DocumentClass, []);\r\n\t\t\t\r\n\t\t\t/*if (Std.is (instance, openfl.display.DisplayObject)) {\r\n\t\t\t\t\r\n\t\t\t\topenfl.Lib.current.addChild (cast instance);\r\n\t\t\t\t\r\n\t\t\t}*/\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#if !flash\r\n\t\tif (openfl.Lib.current.stage.window.fullscreen) {\r\n\t\t\t\r\n\t\t\topenfl.Lib.current.stage.dispatchEvent (new openfl.events.FullScreenEvent (openfl.events.FullScreenEvent.FULL_SCREEN, false, false, true, true));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\topenfl.Lib.current.stage.dispatchEvent (new openfl.events.Event (openfl.events.Event.RESIZE, false, false));\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if neko\r\n\t@:noCompletion @:dox(hide) public static function __init__ () {\r\n\t\t\r\n\t\tvar loader = new neko.vm.Loader (untyped $loader);\r\n\t\tloader.addPath (haxe.io.Path.directory (Sys.executablePath ()));\r\n\t\tloader.addPath (\"./\");\r\n\t\tloader.addPath (\"@executable_path/\");\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n}\r\n\r\n\r\n@:build(DocumentClass.build())\r\n@:keep class DocumentClass extends sample.Main {}\r\n\r\n\r\n#else\r\n\r\n\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\n\r\n\r\nclass DocumentClass {\r\n\t\r\n\t\r\n\tmacro public static function build ():Array<Field> {\r\n\t\t\r\n\t\tvar classType = Context.getLocalClass ().get ();\r\n\t\tvar searchTypes = classType;\r\n\t\t\r\n\t\twhile (searchTypes.superClass != null) {\r\n\t\t\t\r\n\t\t\tif (searchTypes.pack.length == 2 && searchTypes.pack[1] == \"display\" && searchTypes.name == \"DisplayObject\") {\r\n\t\t\t\t\r\n\t\t\t\tvar fields = Context.getBuildFields ();\r\n\t\t\t\t\r\n\t\t\t\tvar method = macro {\r\n\t\t\t\t\t\r\n\t\t\t\t\topenfl.Lib.current.addChild (this);\r\n\t\t\t\t\tsuper ();\r\n\t\t\t\t\tdispatchEvent (new openfl.events.Event (openfl.events.Event.ADDED_TO_STAGE, false, false));\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: [], expr: method, params: [], ret: macro :Void }), pos: Context.currentPos () });\r\n\t\t\t\t\r\n\t\t\t\treturn fields;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsearchTypes = searchTypes.superClass.t.get ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#end\r\n","package openfl.events; #if !openfl_legacy\r\n\r\n\r\nimport openfl.events.EventPhase;\r\nimport openfl.events.IEventDispatcher;\r\n\r\n@:access(openfl.events.Event)\r\n\r\n\r\nclass EventDispatcher implements IEventDispatcher {\r\n\t\r\n\t\r\n\tprivate var __dispatching:Map<String, Bool>;\r\n\tprivate var __targetDispatcher:IEventDispatcher;\r\n\tprivate var __eventMap:Map<String, Array<Listener>>;\r\n\tprivate var __newEventMap:Map<String, Array<Listener>>;\r\n\t\r\n\t\r\n\tpublic function new (target:IEventDispatcher = null):Void {\r\n\t\t\r\n\t\tif (target != null) {\r\n\t\t\t\r\n\t\t\t__targetDispatcher = target;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function addEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {\r\n\t\t\r\n\t\tif (__eventMap == null) {\r\n\t\t\t\r\n\t\t\t__dispatching = new Map ();\r\n\t\t\t__eventMap = new Map ();\r\n\t\t\t__newEventMap = new Map ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!__eventMap.exists (type)) {\r\n\t\t\t\r\n\t\t\tvar list = new Array<Listener> ();\r\n\t\t\tlist.push (new Listener (listener, useCapture, priority));\r\n\t\t\t__eventMap.set (type, list);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar list;\r\n\t\t\t\r\n\t\t\tif (__dispatching.get (type) == true) {\r\n\t\t\t\t\r\n\t\t\t\tif (!__newEventMap.exists (type)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tlist = __eventMap.get (type).copy ();\r\n\t\t\t\t\t__newEventMap.set (type, list);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tlist = __newEventMap.get (type);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tlist = __eventMap.get (type);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (i in 0...list.length) {\r\n\t\t\t\t\r\n\t\t\t\tif (Reflect.compareMethods (list[i].callback, listener)) return;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlist.push (new Listener (listener, useCapture, priority));\r\n\t\t\tlist.sort (__sortByPriority);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function dispatchEvent (event:Event):Bool {\r\n\t\t\r\n\t\tif (__targetDispatcher != null) {\r\n\t\t\t\r\n\t\t\tevent.target = __targetDispatcher;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tevent.target = this;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __dispatchEvent (event);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function hasEventListener (type:String):Bool {\r\n\t\t\r\n\t\tif (__eventMap == null) return false;\r\n\t\t\r\n\t\tif (__dispatching.get (type) == true && __newEventMap.exists (type)) {\r\n\t\t\t\r\n\t\t\treturn __newEventMap.get (type).length > 0;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn __eventMap.exists (type);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function removeEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false):Void {\r\n\t\t\r\n\t\tif (__eventMap == null) return;\r\n\t\t\r\n\t\tvar list = __eventMap.get (type);\r\n\t\tif (list == null) return;\r\n\t\t\r\n\t\tvar dispatching = (__dispatching.get (type) == true);\r\n\t\t\r\n\t\tif (dispatching) {\r\n\t\t\t\r\n\t\t\tif (!__newEventMap.exists (type)) {\r\n\t\t\t\t\r\n\t\t\t\tlist = __eventMap.get (type).copy ();\r\n\t\t\t\t__newEventMap.set (type, list);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tlist = __newEventMap.get (type);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (i in 0...list.length) {\r\n\t\t\t\r\n\t\t\tif (list[i].match (listener, useCapture)) {\r\n\t\t\t\t\r\n\t\t\t\tlist.splice (i, 1);\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!dispatching) {\r\n\t\t\t\r\n\t\t\tif (list.length == 0) {\r\n\t\t\t\t\r\n\t\t\t\t__eventMap.remove (type);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!__eventMap.iterator ().hasNext ()) {\r\n\t\t\t\t\r\n\t\t\t\t__eventMap = null;\r\n\t\t\t\t__newEventMap = null;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function toString ():String { \r\n\t\t\r\n\t\tvar full = Type.getClassName (Type.getClass (this));\r\n\t\tvar short = full.split (\".\").pop ();\r\n\t\t\r\n\t\treturn untyped \"[object \" + short + \"]\";\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function willTrigger (type:String):Bool {\r\n\t\t\r\n\t\treturn hasEventListener (type);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __dispatchEvent (event:Event):Bool {\r\n\t\t\r\n\t\tif (__eventMap == null || event == null) return false;\r\n\t\t\r\n\t\tvar type = event.type;\r\n\t\tvar list;\r\n\t\t\r\n\t\tif (__dispatching.get (type) == true) {\r\n\t\t\t\r\n\t\t\tlist = __newEventMap.get (type);\r\n\t\t\tif (list == null) return false;\r\n\t\t\tlist = list.copy ();\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tlist = __eventMap.get (type);\r\n\t\t\tif (list == null) return false;\r\n\t\t\t__dispatching.set (type, true);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (event.target == null) {\r\n\t\t\t\r\n\t\t\tif (__targetDispatcher != null) {\r\n\t\t\t\t\r\n\t\t\t\tevent.target = __targetDispatcher;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tevent.target = this;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tevent.currentTarget = this;\r\n\t\t\r\n\t\tvar capture = (event.eventPhase == EventPhase.CAPTURING_PHASE);\r\n\t\tvar index = 0;\r\n\t\tvar listener;\r\n\t\t\r\n\t\twhile (index < list.length) {\r\n\t\t\t\r\n\t\t\tlistener = list[index];\r\n\t\t\t\r\n\t\t\tif (listener.useCapture == capture) {\r\n\t\t\t\t\r\n\t\t\t\t//listener.callback (event.clone ());\r\n\t\t\t\tlistener.callback (event);\r\n\t\t\t\t\r\n\t\t\t\tif (event.__isCanceledNow) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (listener == list[index]) {\r\n\t\t\t\t\r\n\t\t\t\tindex++;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__newEventMap != null && __newEventMap.exists (type)) {\r\n\t\t\t\r\n\t\t\tvar list = __newEventMap.get (type);\r\n\t\t\t\r\n\t\t\tif (list.length > 0) {\r\n\t\t\t\t\r\n\t\t\t\t__eventMap.set (type, list);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t__eventMap.remove (type);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!__eventMap.iterator ().hasNext ()) {\r\n\t\t\t\t\r\n\t\t\t\t__eventMap = null;\r\n\t\t\t\t__newEventMap = null;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t__newEventMap.remove (type);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__dispatching.set (event.type, false);\r\n\t\t\r\n\t\treturn true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function __sortByPriority (l1:Listener, l2:Listener):Int {\r\n\t\t\r\n\t\treturn l1.priority == l2.priority ? 0 : (l1.priority > l2.priority ? -1 : 1);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nprivate class Listener {\r\n\t\r\n\t\r\n\tpublic var callback:Dynamic->Void;\r\n\tpublic var priority:Int;\r\n\tpublic var useCapture:Bool;\r\n\t\r\n\t\r\n\tpublic function new (callback:Dynamic->Void, useCapture:Bool, priority:Int) {\r\n\t\t\r\n\t\tthis.callback = callback;\r\n\t\tthis.useCapture = useCapture;\r\n\t\tthis.priority = priority;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function match (callback:Dynamic->Void, useCapture:Bool) {\r\n\t\t\r\n\t\treturn (Reflect.compareMethods (this.callback, callback) && this.useCapture == useCapture);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef EventDispatcher = openfl._legacy.events.EventDispatcher;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport lime.graphics.cairo.Cairo;\r\nimport lime.ui.MouseCursor;\r\nimport openfl._internal.renderer.cairo.CairoGraphics;\r\nimport openfl._internal.renderer.cairo.CairoShape;\r\nimport openfl._internal.renderer.canvas.CanvasGraphics;\r\nimport openfl._internal.renderer.canvas.CanvasShape;\r\nimport openfl._internal.renderer.dom.DOMShape;\r\nimport openfl._internal.renderer.opengl.GLRenderer;\r\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.Stage;\r\nimport openfl.errors.TypeError;\r\nimport openfl.events.Event;\r\nimport openfl.events.EventPhase;\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.filters.BitmapFilter;\r\nimport openfl.geom.ColorTransform;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.geom.Transform;\r\nimport openfl.Lib;\r\n\r\n#if (js && html5)\r\nimport js.html.CanvasElement;\r\nimport js.html.CanvasRenderingContext2D;\r\nimport js.html.CSSStyleDeclaration;\r\nimport js.html.Element;\r\n#end\r\n\r\n\r\n@:access(openfl.events.Event)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.display.Stage)\r\n@:access(openfl.geom.ColorTransform)\r\n@:access(openfl.geom.Matrix)\r\n@:access(openfl.geom.Rectangle)\r\n\r\n\r\nclass DisplayObject extends EventDispatcher implements IBitmapDrawable implements Dynamic<DisplayObject> {\r\n\t\r\n\t\r\n\tprivate static var __instanceCount = 0;\r\n\tprivate static var __worldRenderDirty = 0;\r\n\tprivate static var __worldTransformDirty = 0;\r\n\t\r\n\tprivate static var __cacheAsBitmapMode = false;\r\n\t\r\n\tpublic var alpha (get, set):Float;\r\n\tpublic var blendMode (default, set):BlendMode;\r\n\tpublic var cacheAsBitmap (get, set):Bool;\r\n\tpublic var cacheAsBitmapMatrix (get, set):Matrix;\r\n\tpublic var cacheAsBitmapSmooth (get, set):Bool;\r\n\tpublic var cacheAsBitmapBounds:Rectangle;\r\n\tpublic var filters (get, set):Array<BitmapFilter>;\r\n\tpublic var height (get, set):Float;\r\n\tpublic var loaderInfo (default, null):LoaderInfo;\r\n\tpublic var mask (get, set):DisplayObject;\r\n\tpublic var mouseX (get, null):Float;\r\n\tpublic var mouseY (get, null):Float;\r\n\tpublic var name (get, set):String;\r\n\tpublic var opaqueBackground:Null <Int>;\r\n\tpublic var parent (default, null):DisplayObjectContainer;\r\n\tpublic var root (get, null):DisplayObject;\r\n\tpublic var rotation (get, set):Float;\r\n\tpublic var scale9Grid:Rectangle;\r\n\tpublic var scaleX (get, set):Float;\r\n\tpublic var scaleY (get, set):Float;\r\n\tpublic var scrollRect (get, set):Rectangle;\r\n\tpublic var shader (default, set):Shader;\r\n\tpublic var stage (default, null):Stage;\r\n\tpublic var transform (get, set):Transform;\r\n\tpublic var visible (get, set):Bool;\r\n\tpublic var width (get, set):Float;\r\n\tpublic var x (get, set):Float;\r\n\tpublic var y (get, set):Float;\r\n\t\r\n\tpublic var __renderTransform:Matrix;\r\n\tpublic var __worldColorTransform:ColorTransform;\r\n\tpublic var __worldOffset:Point;\r\n\tpublic var __worldTransform:Matrix;\r\n\t\r\n\tprivate var __alpha:Float;\r\n\tprivate var __blendMode:BlendMode;\r\n\tprivate var __cairo:Cairo;\r\n\tprivate var __children:Array<DisplayObject>;\r\n\tprivate var __filters:Array<BitmapFilter>;\r\n\tprivate var __graphics:Graphics;\r\n\tprivate var __interactive:Bool;\r\n\tprivate var __isMask:Bool;\r\n\tprivate var __mask:DisplayObject;\r\n\tprivate var __maskGraphics:Graphics;\r\n\tprivate var __maskCached:Bool = false;\r\n\tprivate var __name:String;\r\n\tprivate var __objectTransform:Transform;\r\n\tprivate var __offset:Point;\r\n\tprivate var __renderable:Bool;\r\n\tprivate var __renderDirty:Bool;\r\n\tprivate var __rotation:Float;\r\n\tprivate var __rotationCosine:Float;\r\n\tprivate var __rotationSine:Float;\r\n\tprivate var __scrollRect:Rectangle;\r\n\tprivate var __shader:Shader;\r\n\tprivate var __transform:Matrix;\r\n\tprivate var __transformDirty:Bool;\r\n\tprivate var __visible:Bool;\r\n\tprivate var __worldAlpha:Float;\r\n\tprivate var __worldAlphaChanged:Bool;\r\n\tprivate var __worldClip:Rectangle;\r\n\tprivate var __worldClipChanged:Bool;\r\n\tprivate var __worldTransformCache:Matrix;\r\n\tprivate var __worldTransformChanged:Bool;\r\n\tprivate var __worldVisible:Bool;\r\n\tprivate var __worldVisibleChanged:Bool;\r\n\tprivate var __worldZ:Int;\r\n\tprivate var __cacheAsBitmap:Bool = false;\r\n\tprivate var __cacheAsBitmapMatrix:Matrix;\r\n\tprivate var __cacheAsBitmapSmooth:Bool = true;\r\n\tprivate var __forceCacheAsBitmap:Bool;\r\n\tprivate var __updateCachedBitmap:Bool;\r\n\tprivate var __cachedBitmap:BitmapData;\r\n\tprivate var __cachedBitmapBounds:Rectangle;\r\n\tprivate var __cachedFilterBounds:Rectangle;\r\n\tprivate var __cacheGLMatrix:Matrix;\r\n\tprivate var __updateFilters:Bool;\r\n\t\r\n\t#if (js && html5)\r\n\tprivate var __canvas:CanvasElement;\r\n\tprivate var __context:CanvasRenderingContext2D;\r\n\tprivate var __style:CSSStyleDeclaration;\r\n\t#end\r\n\t\r\n\t\r\n\tprivate function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\t__alpha = 1;\r\n\t\t__transform = new Matrix ();\r\n\t\t__visible = true;\r\n\t\t\r\n\t\t__rotation = 0;\r\n\t\t__rotationSine = 0;\r\n\t\t__rotationCosine = 1;\r\n\t\t\r\n\t\t__renderTransform = new Matrix ();\r\n\t\t\r\n\t\t__offset = new Point ();\r\n\t\t__worldOffset = new Point ();\r\n\t\t\r\n\t\t__worldAlpha = 1;\r\n\t\t__worldTransform = new Matrix ();\r\n\t\t__worldColorTransform = new ColorTransform ();\r\n\t\t\r\n\t\t#if dom\r\n\t\t__worldVisible = true;\r\n\t\t#end\r\n\t\t\r\n\t\tname = \"instance\" + (++__instanceCount);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getBounds (targetCoordinateSpace:DisplayObject):Rectangle {\r\n\t\t\r\n\t\tvar matrix;\r\n\t\t\r\n\t\tif (targetCoordinateSpace != null) {\r\n\t\t\t\r\n\t\t\tmatrix = __getWorldTransform ().clone ();\r\n\t\t\tmatrix.concat (targetCoordinateSpace.__getWorldTransform ().clone ().invert ());\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tmatrix = Matrix.__temp;\r\n\t\t\tmatrix.identity ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar bounds = new Rectangle ();\r\n\t\t__getBounds (bounds, matrix);\r\n\t\t\r\n\t\treturn bounds;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getRect (targetCoordinateSpace:DisplayObject):Rectangle {\r\n\t\t\r\n\t\t// should not account for stroke widths, but is that possible?\r\n\t\treturn getBounds (targetCoordinateSpace);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function globalToLocal (pos:Point):Point {\r\n\t\t\r\n\t\tpos = pos.clone ();\r\n\t\t__getWorldTransform ().__transformInversePoint (pos);\r\n\t\treturn pos;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function hitTestObject (obj:DisplayObject):Bool {\r\n\t\t\r\n\t\tif (obj != null && obj.parent != null && parent != null) {\r\n\t\t\t\r\n\t\t\tvar currentBounds = getBounds (this);\r\n\t\t\tvar targetBounds = obj.getBounds (this);\r\n\t\t\t\r\n\t\t\treturn currentBounds.intersects (targetBounds);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function hitTestPoint (x:Float, y:Float, shapeFlag:Bool = false):Bool {\r\n\t\t\r\n\t\tif (parent != null) {\r\n\t\t\t\r\n\t\t\tvar bounds = new Rectangle ();\r\n\t\t\t__getBounds (bounds, __getWorldTransform ());\r\n\t\t\t\r\n\t\t\treturn bounds.containsPoint (new Point (x, y));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function localToGlobal (point:Point):Point {\r\n\t\t\r\n\t\treturn __getWorldTransform ().transformPoint (point);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __broadcast (event:Event, notifyChilden:Bool):Bool {\r\n\t\t\r\n\t\tif (__eventMap != null && hasEventListener (event.type)) {\r\n\t\t\t\r\n\t\t\tvar result = super.__dispatchEvent (event);\r\n\t\t\t\r\n\t\t\tif (event.__isCanceled) {\r\n\t\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn result;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __dispatchEvent (event:Event):Bool {\r\n\t\t\r\n\t\tvar result = super.__dispatchEvent (event);\r\n\t\t\r\n\t\tif (event.__isCanceled) {\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (event.bubbles && parent != null && parent != this) {\r\n\t\t\t\r\n\t\t\tevent.eventPhase = EventPhase.BUBBLING_PHASE;\r\n\t\t\t\r\n\t\t\tif (event.target == null) {\r\n\t\t\t\t\r\n\t\t\t\tevent.target = this;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tparent.__dispatchEvent (event);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __enterFrame (deltaTime:Int):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __getBounds (rect:Rectangle, matrix:Matrix):Void {\r\n\t\t\r\n\t\tif (__graphics != null) {\r\n\t\t\t\r\n\t\t\t__graphics.__getBounds (rect, matrix);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __getCursor ():MouseCursor {\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __getInteractive (stack:Array<DisplayObject>):Bool {\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function __getLocalBounds (rect:Rectangle):Void {\r\n\t\t\r\n\t\t__getBounds (rect, __transform);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __getRenderBounds (rect:Rectangle, matrix:Matrix):Void {\r\n\t\t\r\n\t\tif (__scrollRect == null) {\r\n\t\t\t\r\n\t\t\t__getBounds (rect, matrix);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar r = openfl.geom.Rectangle.__temp;\r\n\t\t\tr.copyFrom (__scrollRect);\r\n\t\t\tr.__transform (r, matrix);\r\n\t\t\trect.__expand (matrix.tx, matrix.ty, r.width, r.height);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __getWorldTransform ():Matrix {\r\n\t\t\r\n\t\tif (__transformDirty || __worldTransformDirty > 0) {\r\n\t\t\t\r\n\t\t\tvar list = [];\r\n\t\t\tvar current = this;\r\n\t\t\tvar transformDirty = __transformDirty;\r\n\t\t\t\r\n\t\t\tif (parent == null) {\r\n\t\t\t\t\r\n\t\t\t\tif (transformDirty) __update (true, false);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\twhile (current.parent != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tlist.push (current);\r\n\t\t\t\t\tcurrent = current.parent;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (current.__transformDirty) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttransformDirty = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (transformDirty) {\r\n\t\t\t\t\r\n\t\t\t\tvar i = list.length;\r\n\t\t\t\twhile (--i >= 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tlist[i].__update (true, false);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __worldTransform;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\r\n\t\t\r\n\t\tif (__graphics != null) {\r\n\t\t\t\r\n\t\t\tif (!hitObject.visible || __isMask) return false;\r\n\t\t\tif (mask != null && !mask.__hitTestMask (x, y)) return false;\r\n\t\t\t\r\n\t\t\tif (__graphics.__hitTest (x, y, shapeFlag, __getWorldTransform ())) {\r\n\t\t\t\t\r\n\t\t\t\tif (stack != null && !interactiveOnly) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tstack.push (hitObject);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __hitTestMask (x:Float, y:Float):Bool {\r\n\t\t\r\n\t\tif (__graphics != null) {\r\n\t\t\t\r\n\t\t\tif (__graphics.__hitTest (x, y, true, __getWorldTransform ())) {\r\n\t\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __renderCairo (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (__graphics != null) {\r\n\t\t\t\r\n\t\t\tCairoShape.render (this, renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __renderCairoMask (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (__graphics != null) {\r\n\t\t\t\r\n\t\t\tCairoGraphics.renderMask (__graphics, renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __renderCanvas (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (__graphics != null) {\r\n\t\t\t\r\n\t\t\tCanvasShape.render (this, renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __renderCanvasMask (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (__graphics != null) {\r\n\t\t\t\r\n\t\t\tCanvasGraphics.renderMask (__graphics, renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __renderDOM (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (__graphics != null) {\r\n\t\t\t\r\n\t\t\tDOMShape.render (this, renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __renderGL (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (!__renderable || __worldAlpha <= 0) return;\r\n\t\t\r\n\t\tif (__cacheAsBitmap) {\r\n\t\t\t__cacheGL(renderSession);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t__preRenderGL (renderSession);\r\n\t\t__drawGraphicsGL (renderSession);\r\n\t\t__postRenderGL (renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic inline function __drawGraphicsGL (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (__graphics != null) {\r\n\t\t\t\r\n\t\t\tif (#if !disable_cairo_graphics __graphics.__hardware #else true #end) {\r\n\t\t\t\t\r\n\t\t\t\tGraphicsRenderer.render (this, renderSession);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t#if (js && html5)\r\n\t\t\t\tCanvasGraphics.render (__graphics, renderSession);\r\n\t\t\t\t#elseif lime_cairo\r\n\t\t\t\tCairoGraphics.render (__graphics, renderSession);\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\tGLRenderer.renderBitmap (this, renderSession);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic inline function __preRenderGL (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (__scrollRect != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.pushRect (__scrollRect, __renderTransform);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__mask != null && __maskGraphics != null && __maskGraphics.__commands.length > 0) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.pushMask (this);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function __postRenderGL (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (__mask != null && __maskGraphics != null && __maskGraphics.__commands.length > 0) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.popMask ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__scrollRect != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.popRect ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function __cacheGL (renderSession:RenderSession):Void {\r\n\r\n\t\tvar hasCacheMatrix = __cacheAsBitmapMatrix != null;\r\n\t\tvar x = __cachedBitmapBounds.x;\r\n\t\tvar y = __cachedBitmapBounds.y;\r\n\t\tvar w = __cachedBitmapBounds.width;\r\n\t\tvar h = __cachedBitmapBounds.height;\r\n\t\t\r\n\t\t// can't use Matrix.__temp here, it's not safe\r\n\t\tif (__cacheGLMatrix == null) __cacheGLMatrix = new Matrix();\r\n\t\t\r\n\t\tif (hasCacheMatrix) {\r\n\t\t\t\r\n\t\t\t// Transform the bounds\r\n\t\t\tvar bmpBounds = openfl.geom.Rectangle.__temp;\r\n\t\t\t__cachedBitmapBounds.__transform(bmpBounds, __cacheAsBitmapMatrix);\r\n\t\t\tx = bmpBounds.x;\r\n\t\t\ty = bmpBounds.y;\r\n\t\t\tw = bmpBounds.width;\r\n\t\t\th = bmpBounds.height;\r\n\t\t\t\r\n\t\t\t__cacheGLMatrix = __cacheAsBitmapMatrix.clone();\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t__cacheGLMatrix.identity();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (w <= 0 && h <= 0) {\r\n\t\t\tthrow 'Error creating a cached bitmap. The texture size is ${w}x${h}';\r\n\t\t}\r\n\t\t\r\n\t\tif (__updateCachedBitmap || __updateFilters) {\r\n\t\t\t\r\n\t\t\tif (__cachedFilterBounds != null) {\r\n\t\t\t\tw += Math.abs(__cachedFilterBounds.x) + Math.abs(__cachedFilterBounds.width);\r\n\t\t\t\th += Math.abs(__cachedFilterBounds.y) + Math.abs(__cachedFilterBounds.height);\r\n\t\t\t}\r\n\r\n\t\t\tif (__cachedBitmap == null) {\r\n\t\t\t\t__cachedBitmap = @:privateAccess BitmapData.__asRenderTexture ();\r\n\t\t\t}\r\n\t\t\t@:privateAccess __cachedBitmap.__resize(Math.ceil(w), Math.ceil(h));\r\n\t\t\t\r\n\t\t\t// we need to position the drawing origin to 0,0 in the texture\r\n\t\t\tvar m = __cacheGLMatrix.clone();\r\n\t\t\tm.translate( -x, -y);\r\n\t\t\t// we disable the container shader, it will be applied to the final texture\r\n\t\t\tvar shader = __shader;\r\n\t\t\tthis.__shader = null;\r\n\t\t\t@:privateAccess __cachedBitmap.__drawGL(renderSession, this, m, true, false, true);\r\n\t\t\tthis.__shader = shader;\r\n\t\t\t\r\n\t\t\t__updateCachedBitmap = false;\r\n\t\t}\r\n\t\t\r\n\t\tif (__updateFilters) {\r\n\t\t\t@:privateAccess BitmapFilter.__applyFilters(__filters, renderSession, __cachedBitmap, __cachedBitmap, null, null);\r\n\t\t\t__updateFilters = false;\r\n\t\t}\r\n\t\t\r\n\t\t// Calculate the correct position\r\n\t\t__cacheGLMatrix.invert();\r\n\t\t__cacheGLMatrix.__translateTransformed(x, y);\r\n\t\t__cacheGLMatrix.concat(__renderTransform);\r\n\t\t__cacheGLMatrix.translate ( __offset.x, __offset.y);\r\n\t\t\r\n\t\trenderSession.spriteBatch.renderBitmapData(__cachedBitmap, __cacheAsBitmapSmooth, __cacheGLMatrix, __worldColorTransform, __worldAlpha, blendMode, __shader, ALWAYS);\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __setStageReference (stage:Stage):Void {\r\n\t\t\r\n\t\tif (this.stage != stage) {\r\n\t\t\t\r\n\t\t\tif (this.stage != null) {\r\n\t\t\t\t\r\n\t\t\t\tif (this.stage.focus == this) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.stage.focus = null;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdispatchEvent (new Event (Event.REMOVED_FROM_STAGE, false, false));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.stage = stage;\r\n\t\t\t\r\n\t\t\tif (stage != null) {\r\n\t\t\t\t\r\n\t\t\t\tdispatchEvent (new Event (Event.ADDED_TO_STAGE, false, false));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function __setRenderDirty ():Void {\r\n\t\t\r\n\t\tif (!__renderDirty) {\r\n\t\t\t\r\n\t\t\t__updateCachedBitmap = true;\r\n\t\t\t__updateFilters = filters != null && filters.length > 0;\r\n\t\t\t__renderDirty = true;\r\n\t\t\t__worldRenderDirty++;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function __setTransformDirty ():Void {\r\n\t\t\r\n\t\tif (!__transformDirty) {\r\n\t\t\t\r\n\t\t\t__transformDirty = true;\r\n\t\t\t__worldTransformDirty++;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __update (transformOnly:Bool, updateChildren:Bool, ?maskGraphics:Graphics = null):Void {\r\n\t\t\r\n\t\t__renderable = (visible && scaleX != 0 && scaleY != 0 && !__isMask);\r\n\t\t\r\n\t\t__updateTransforms ();\r\n\t\t\r\n\t\t// TODO this?\r\n\t\tif (parent != null && __isMask) {\r\n\t\t\t\r\n\t\t\t__maskCached = false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (updateChildren && __transformDirty) {\r\n\t\t\t\r\n\t\t\t__transformDirty = false;\r\n\t\t\t__worldTransformDirty--;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!transformOnly && __mask != null && !__mask.__maskCached) {\r\n\t\t\t\r\n\t\t\tif (__maskGraphics == null) {\r\n\t\t\t\t\r\n\t\t\t\t__maskGraphics = new Graphics ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__maskGraphics.clear ();\r\n\t\t\t\r\n\t\t\t__mask.__update (true, true, __maskGraphics);\r\n\t\t\t__mask.__maskCached = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (maskGraphics != null) {\r\n\t\t\t\r\n\t\t\t__updateMask (maskGraphics);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!transformOnly && __cacheAsBitmap) {\r\n\t\t\t\r\n\t\t\t// we need to update the bounds\r\n\t\t\tif (__updateCachedBitmap || __updateFilters) {\r\n\t\t\t\t\r\n\t\t\t\tif (__cachedBitmapBounds == null) {\r\n\t\t\t\t\t__cachedBitmapBounds = new Rectangle();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(cacheAsBitmapBounds != null) {\r\n\t\t\t\t\t__cachedBitmapBounds.copyFrom(cacheAsBitmapBounds);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__cachedBitmapBounds.setEmpty();\r\n\t\t\t\t\t__getRenderBounds(__cachedBitmapBounds, @:privateAccess Matrix.__identity);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif (__filters != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (__cachedFilterBounds == null) {\r\n\t\t\t\t\t\t__cachedFilterBounds = new Rectangle();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t__cachedFilterBounds.setEmpty();\r\n\t\t\t\t\t@:privateAccess BitmapFilter.__expandBounds (__filters, __cachedFilterBounds, @:privateAccess Matrix.__identity);\r\n\t\t\t\t\t\r\n\t\t\t\t\t__cachedBitmapBounds.x += __cachedFilterBounds.x;\r\n\t\t\t\t\t__cachedBitmapBounds.y += __cachedFilterBounds.y;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!transformOnly) {\r\n\t\t\t\r\n\t\t\t#if dom\r\n\t\t\t__worldTransformChanged = !__worldTransform.equals (__worldTransformCache);\r\n\t\t\t\r\n\t\t\tif (__worldTransformCache == null) {\r\n\t\t\t\t\r\n\t\t\t\t__worldTransformCache = __worldTransform.clone ();\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t__worldTransformCache.copyFrom (__worldTransform);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar worldClip:Rectangle = null;\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tif (!__worldColorTransform.__equals (transform.colorTransform)) {\r\n\t\t\t\t\r\n\t\t\t\t__worldColorTransform = transform.colorTransform.__clone ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (parent != null) {\r\n\t\t\t\t\r\n\t\t\t\t#if !dom\r\n\t\t\t\t\r\n\t\t\t\t__worldAlpha = alpha * parent.__worldAlpha;\r\n\t\t\t\t__worldColorTransform.__combine (parent.__worldColorTransform);\r\n\t\t\t\t\r\n\t\t\t\tif ((blendMode == null || blendMode == NORMAL)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__blendMode = parent.__blendMode;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (shader == null) {\r\n\t\t\t\t\t__shader = parent.__shader;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t#else\r\n\t\t\t\t\r\n\t\t\t\tvar worldVisible = (parent.__worldVisible && visible);\r\n\t\t\t\t__worldVisibleChanged = (__worldVisible != worldVisible);\r\n\t\t\t\t__worldVisible = worldVisible;\r\n\t\t\t\t\r\n\t\t\t\tvar worldAlpha = alpha * parent.__worldAlpha;\r\n\t\t\t\t__worldAlphaChanged = (__worldAlpha != worldAlpha);\r\n\t\t\t\t__worldAlpha = worldAlpha;\r\n\t\t\t\t\r\n\t\t\t\tif (parent.__worldClip != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tworldClip = parent.__worldClip.clone ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (scrollRect != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar bounds = scrollRect.clone ();\r\n\t\t\t\t\tbounds.__transform (bounds, __worldTransform);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (worldClip != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbounds.__contract (worldClip.x - scrollRect.x, worldClip.y - scrollRect.y, worldClip.width, worldClip.height);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tworldClip = bounds;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t__worldAlpha = alpha;\r\n\t\t\t\t\r\n\t\t\t\t#if dom\r\n\t\t\t\t\r\n\t\t\t\t__worldVisibleChanged = (__worldVisible != visible);\r\n\t\t\t\t__worldVisible = visible;\r\n\t\t\t\t\r\n\t\t\t\t__worldAlphaChanged = (__worldAlpha != alpha);\r\n\t\t\t\t\r\n\t\t\t\tif (scrollRect != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tworldClip = scrollRect.clone ();\r\n\t\t\t\t\tworldClip.__transform (worldClip, __worldTransform);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#if dom\r\n\t\t\t__worldClipChanged = ((worldClip == null && __worldClip != null) || (worldClip != null && !worldClip.equals (__worldClip)));\r\n\t\t\t__worldClip = worldClip;\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tif (updateChildren && __renderDirty) {\r\n\t\t\t\t\r\n\t\t\t\t__renderDirty = false;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __updateChildren (transformOnly:Bool):Void {\r\n\t\t\r\n\t\t__renderable = (visible && scaleX != 0 && scaleY != 0 && !__isMask);\r\n\t\tif (!__renderable && !__isMask) return;\r\n\t\t__worldAlpha = alpha;\r\n\t\t\r\n\t\tif (__transformDirty) {\r\n\t\t\t\r\n\t\t\t__transformDirty = false;\r\n\t\t\t__worldTransformDirty--;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __updateMask (maskGraphics:Graphics):Void {\r\n\t\t\r\n\t\tif (__graphics != null) {\r\n\t\t\t\r\n\t\t\tmaskGraphics.__commands.overrideMatrix (this.__worldTransform);\r\n\t\t\tmaskGraphics.__commands.append (__graphics.__commands);\r\n\t\t\tmaskGraphics.__dirty = true;\r\n\t\t\tmaskGraphics.__visible = true;\r\n\t\t\t\r\n\t\t\tif (maskGraphics.__bounds == null) {\r\n\t\t\t\t\r\n\t\t\t\tmaskGraphics.__bounds = new Rectangle();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__graphics.__getBounds (maskGraphics.__bounds, @:privateAccess Matrix.__identity);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __updateTransforms (overrideTransform:Matrix = null):Void {\r\n\t\t\r\n\t\tvar overrided = overrideTransform != null;\r\n\t\tvar local = overrided ? overrideTransform.clone () : __transform;\r\n\t\t\r\n\t\tif (__worldTransform == null) {\r\n\t\t\t\r\n\t\t\t__worldTransform = new Matrix ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!overrided && parent != null) {\r\n\t\t\t\r\n\t\t\tvar parentTransform = parent.__worldTransform;\r\n\t\t\t\r\n\t\t\t__worldTransform.a = local.a * parentTransform.a + local.b * parentTransform.c;\r\n\t\t\t__worldTransform.b = local.a * parentTransform.b + local.b * parentTransform.d;\r\n\t\t\t__worldTransform.c = local.c * parentTransform.a + local.d * parentTransform.c;\r\n\t\t\t__worldTransform.d = local.c * parentTransform.b + local.d * parentTransform.d;\r\n\t\t\t__worldTransform.tx = local.tx * parentTransform.a + local.ty * parentTransform.c + parentTransform.tx;\r\n\t\t\t__worldTransform.ty = local.tx * parentTransform.b + local.ty * parentTransform.d + parentTransform.ty;\r\n\t\t\t\r\n\t\t\t__worldOffset.copyFrom (parent.__worldOffset);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t__worldTransform.copyFrom (local);\r\n\t\t\t__worldOffset.setTo (0, 0);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__scrollRect != null) {\r\n\t\t\t\r\n\t\t\t__offset = __worldTransform.deltaTransformPoint (__scrollRect.topLeft);\r\n\t\t\t__worldOffset.offset (__offset.x, __offset.y);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t__offset.setTo (0, 0);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__renderTransform.copyFrom (__worldTransform);\r\n\t\t__renderTransform.translate ( -__worldOffset.x, -__worldOffset.y);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_alpha ():Float {\r\n\t\t\r\n\t\treturn __alpha;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_alpha (value:Float):Float {\r\n\t\t\r\n\t\tif (value > 1.0) value = 1.0;\r\n\t\tif (value != __alpha) __setRenderDirty ();\r\n\t\treturn __alpha = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_blendMode (value:BlendMode):BlendMode {\r\n\t\t\r\n\t\t__blendMode = value;\r\n\t\treturn blendMode = value;\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function set_shader (value:Shader):Shader {\r\n\t\t\r\n\t\t__shader = value;\r\n\t\treturn shader = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_cacheAsBitmap ():Bool {\r\n\t\t\r\n\t\treturn __cacheAsBitmap;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_cacheAsBitmap (value:Bool):Bool {\r\n\t\t\r\n\t\t__setRenderDirty ();\r\n\t\treturn __cacheAsBitmap = __forceCacheAsBitmap ? true : value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_cacheAsBitmapMatrix ():Matrix {\r\n\t\t\r\n\t\treturn __cacheAsBitmapMatrix;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_cacheAsBitmapMatrix (value:Matrix):Matrix {\r\n\t\t\r\n\t\t__setRenderDirty ();\r\n\t\treturn __cacheAsBitmapMatrix = value.clone();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_cacheAsBitmapSmooth ():Bool {\r\n\t\t\r\n\t\treturn __cacheAsBitmapSmooth;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_cacheAsBitmapSmooth (value:Bool):Bool {\r\n\t\t\r\n\t\treturn __cacheAsBitmapSmooth = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_filters ():Array<BitmapFilter> {\r\n\t\t\r\n\t\tif (__filters == null) {\r\n\t\t\t\r\n\t\t\treturn new Array ();\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn __filters.copy ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_filters (value:Array<BitmapFilter>):Array<BitmapFilter> {\r\n\t\t\r\n\t\tif (value != null && value.length > 0) {\r\n\t\t\t\r\n\t\t\t__filters = value;\r\n\t\t\t__forceCacheAsBitmap = true;\r\n\t\t\t__cacheAsBitmap = true;\r\n\t\t\t__updateFilters = true;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t__filters = null;\r\n\t\t\t__forceCacheAsBitmap = false;\r\n\t\t\t__cacheAsBitmap = false;\r\n\t\t\t__updateFilters = false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__setRenderDirty ();\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_height ():Float {\r\n\t\t\r\n\t\tvar bounds = new Rectangle ();\r\n\t\t__getLocalBounds (bounds);\r\n\t\t\r\n\t\treturn bounds.height;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_height (value:Float):Float {\r\n\t\t\r\n\t\tvar bounds = new Rectangle ();\r\n\t\t\r\n\t\tvar matrix = Matrix.__temp;\r\n\t\tmatrix.identity ();\r\n\t\t\r\n\t\t__getBounds (bounds, matrix);\r\n\t\t\r\n\t\tif (value != bounds.height) {\r\n\t\t\t\r\n\t\t\tscaleY = value / bounds.height;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tscaleY = 1;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_mask ():DisplayObject {\r\n\t\t\r\n\t\treturn __mask;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_mask (value:DisplayObject):DisplayObject {\r\n\t\t\r\n\t\tif (value != __mask) {\r\n\t\t\t__setTransformDirty ();\r\n\t\t\t__setRenderDirty ();\r\n\t\t}\r\n\t\tif (__mask != null) {\r\n\t\t\t__mask.__isMask = false;\r\n\t\t\t__mask.__maskCached = false;\r\n\t\t\t__mask.__setTransformDirty();\r\n\t\t\t__mask.__setRenderDirty();\r\n\t\t\t__maskGraphics = null;\r\n\t\t}\r\n\t\tif (value != null) value.__isMask = true;\r\n\t\treturn __mask = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_mouseX ():Float {\r\n\t\t\r\n\t\tvar mouseX = (stage != null ? stage.__mouseX : Lib.current.stage.__mouseX);\r\n\t\tvar mouseY = (stage != null ? stage.__mouseY : Lib.current.stage.__mouseY);\r\n\t\t\r\n\t\treturn __getWorldTransform ().__transformInverseX (mouseX, mouseY);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_mouseY ():Float {\r\n\t\t\r\n\t\tvar mouseX = (stage != null ? stage.__mouseX : Lib.current.stage.__mouseX);\r\n\t\tvar mouseY = (stage != null ? stage.__mouseY : Lib.current.stage.__mouseY);\r\n\t\t\r\n\t\treturn __getWorldTransform ().__transformInverseY (mouseX, mouseY);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_name ():String {\r\n\t\t\r\n\t\treturn __name;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_name (value:String):String {\r\n\t\t\r\n\t\treturn __name = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_root ():DisplayObject {\r\n\t\t\r\n\t\tif (stage != null) {\r\n\t\t\t\r\n\t\t\treturn Lib.current;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_rotation ():Float {\r\n\t\t\r\n\t\treturn __rotation;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_rotation (value:Float):Float {\r\n\t\t\r\n\t\tif (value != __rotation) {\r\n\t\t\t\r\n\t\t\t__rotation = value;\r\n\t\t\tvar radians = __rotation * (Math.PI / 180);\r\n\t\t\t__rotationSine = Math.sin (radians);\r\n\t\t\t__rotationCosine = Math.cos (radians);\r\n\t\t\t\r\n\t\t\tvar __scaleX = this.scaleX;\r\n\t\t\tvar __scaleY = this.scaleY;\r\n\t\t\t\r\n\t\t\t__transform.a = __rotationCosine * __scaleX;\r\n\t\t\t__transform.b = __rotationSine * __scaleX;\r\n\t\t\t__transform.c = -__rotationSine * __scaleY;\r\n\t\t\t__transform.d = __rotationCosine * __scaleY;\r\n\t\t\t\r\n\t\t\t__setTransformDirty ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_scaleX ():Float {\r\n\t\t\r\n\t\tif (__transform.b == 0) {\r\n\t\t\t\r\n\t\t\treturn __transform.a;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn Math.sqrt (__transform.a * __transform.a + __transform.b * __transform.b);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_scaleX (value:Float):Float {\r\n\t\t\r\n\t\tif (__transform.c == 0) {\r\n\t\t\t\r\n\t\t\tif (value != __transform.a) __setTransformDirty ();\r\n\t\t\t__transform.a = value;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar a = __rotationCosine * value;\r\n\t\t\tvar b = __rotationSine * value;\r\n\t\t\t\r\n\t\t\tif (__transform.a != a || __transform.b != b) {\r\n\t\t\t\t\r\n\t\t\t\t__setTransformDirty ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__transform.a = a;\r\n\t\t\t__transform.b = b;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_scaleY ():Float {\r\n\t\t\r\n\t\tif (__transform.c == 0) {\r\n\t\t\t\r\n\t\t\treturn __transform.d;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn Math.sqrt (__transform.c * __transform.c + __transform.d * __transform.d);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_scaleY (value:Float):Float {\r\n\t\t\r\n\t\tif (__transform.c == 0) {\r\n\t\t\t\r\n\t\t\tif (value != __transform.d) __setTransformDirty ();\r\n\t\t\t__transform.d = value;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar c = -__rotationSine * value;\r\n\t\t\tvar d = __rotationCosine * value;\r\n\t\t\t\r\n\t\t\tif (__transform.d != d || __transform.c != c) {\r\n\t\t\t\t\r\n\t\t\t\t__setTransformDirty ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__transform.c = c;\r\n\t\t\t__transform.d = d;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_scrollRect ():Rectangle {\r\n\t\t\r\n\t\tif ( __scrollRect == null ) return null;\r\n\t\t\r\n\t\treturn __scrollRect.clone();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_scrollRect (value:Rectangle):Rectangle {\r\n\t\t\r\n\t\tif (value != __scrollRect) {\r\n\t\t\t\r\n\t\t\t__setTransformDirty ();\r\n\t\t\t#if dom __setRenderDirty (); #end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __scrollRect = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_transform ():Transform {\r\n\t\t\r\n\t\tif (__objectTransform == null) {\r\n\t\t\t\r\n\t\t\t__objectTransform = new Transform (this);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __objectTransform;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_transform (value:Transform):Transform {\r\n\t\t\r\n\t\tif (value == null) {\r\n\t\t\t\r\n\t\t\tthrow new TypeError (\"Parameter transform must be non-null.\");\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__objectTransform == null) {\r\n\t\t\t\r\n\t\t\t__objectTransform = new Transform (this);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__setTransformDirty ();\r\n\t\t__objectTransform.matrix = value.matrix;\r\n\t\t__objectTransform.colorTransform = value.colorTransform.__clone();\r\n\t\t\r\n\t\treturn __objectTransform;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_visible ():Bool {\r\n\t\t\r\n\t\treturn __visible;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_visible (value:Bool):Bool {\r\n\t\t\r\n\t\tif (value != __visible) __setRenderDirty ();\r\n\t\treturn __visible = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_width ():Float {\r\n\t\t\r\n\t\tvar bounds = new Rectangle ();\r\n\t\t__getLocalBounds (bounds);\r\n\t\t\r\n\t\treturn bounds.width;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_width (value:Float):Float {\r\n\t\t\r\n\t\tvar bounds = new Rectangle ();\r\n\t\t\r\n\t\tvar matrix = Matrix.__temp;\r\n\t\tmatrix.identity ();\r\n\t\t\r\n\t\t__getBounds (bounds, matrix);\r\n\t\t\r\n\t\tif (value != bounds.width) {\r\n\t\t\t\r\n\t\t\tscaleX = value / bounds.width;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tscaleX = 1;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_x ():Float {\r\n\t\t\r\n\t\treturn __transform.tx;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_x (value:Float):Float {\r\n\t\t\r\n\t\tif (value != __transform.tx) __setTransformDirty ();\r\n\t\treturn __transform.tx = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_y ():Float {\r\n\t\t\r\n\t\treturn __transform.ty;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_y (value:Float):Float {\r\n\t\t\r\n\t\tif (value != __transform.ty) __setTransformDirty ();\r\n\t\treturn __transform.ty = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef DisplayObject = openfl._legacy.display.DisplayObject;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport openfl.geom.Rectangle;\r\n\r\n\r\nclass InteractiveObject extends DisplayObject {\r\n\t\r\n\t\r\n\tpublic var doubleClickEnabled:Bool;\r\n\tpublic var focusRect:Dynamic;\r\n\tpublic var mouseEnabled:Bool;\r\n\tpublic var needsSoftKeyboard:Bool;\r\n\t\r\n\tpublic var softKeyboardInputAreaOfInterest:Rectangle;\r\n\tpublic var tabEnabled (get, set):Bool;\r\n\tpublic var tabIndex:Int;\r\n\t\r\n\tprivate var __tabEnabled:Bool;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\tdoubleClickEnabled = false;\r\n\t\tmouseEnabled = true;\r\n\t\tneedsSoftKeyboard = false;\r\n\t\t__tabEnabled = false;\r\n\t\ttabIndex = -1;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function requestSoftKeyboard ():Bool {\r\n\t\t\r\n\t\topenfl.Lib.notImplemented (\"InteractiveObject.requestSoftKeyboard\");\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __getInteractive (stack:Array<DisplayObject>):Bool {\r\n\t\t\r\n\t\tif (stack != null) {\r\n\t\t\t\r\n\t\t\tstack.push (this);\r\n\t\t\t\r\n\t\t\tif (parent != null) {\r\n\t\t\t\t\r\n\t\t\t\tparent.__getInteractive (stack);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\r\n\t\t\r\n\t\tif (!hitObject.visible || __isMask || (interactiveOnly && !mouseEnabled)) return false;\r\n\t\treturn super.__hitTest (x, y, shapeFlag, stack, interactiveOnly, hitObject);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_tabEnabled ():Bool {\r\n\t\t\r\n\t\treturn __tabEnabled;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_tabEnabled (value:Bool):Bool {\r\n\t\t\r\n\t\treturn __tabEnabled = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef InteractiveObject = openfl._legacy.display.InteractiveObject;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport openfl._internal.renderer.cairo.CairoGraphics;\r\nimport openfl._internal.renderer.cairo.CairoRenderer;\r\nimport openfl._internal.renderer.canvas.CanvasGraphics;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.Stage;\r\nimport openfl.errors.RangeError;\r\nimport openfl.events.Event;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\n\r\n@:access(openfl.events.Event)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.geom.Rectangle)\r\n\r\n\r\nclass DisplayObjectContainer extends InteractiveObject {\r\n\t\r\n\t\r\n\tpublic var mouseChildren:Bool;\r\n\tpublic var numChildren (get, null):Int;\r\n\tpublic var tabChildren:Bool;\r\n\t\r\n\tprivate var __removedChildren:Array<DisplayObject>;\r\n\t\r\n\t\r\n\tprivate function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\tmouseChildren = true;\r\n\t\t\r\n\t\t__children = new Array<DisplayObject> ();\r\n\t\t__removedChildren = new Array<DisplayObject> ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function addChild (child:DisplayObject):DisplayObject {\r\n\t\t\r\n\t\tif (child != null) {\r\n\t\t\t\r\n\t\t\tif (child.parent != null) {\r\n\t\t\t\t\r\n\t\t\t\tchild.parent.removeChild (child);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__children.push (child);\r\n\t\t\tchild.parent = this;\r\n\t\t\t\r\n\t\t\tif (stage != null) {\r\n\t\t\t\t\r\n\t\t\t\t// TODO: Dispatch ADDED_TO_STAGE after ADDED (but parent and stage must be set)\r\n\t\t\t\t\r\n\t\t\t\tchild.__setStageReference (stage);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tchild.__setTransformDirty ();\r\n\t\t\tchild.__setRenderDirty ();\r\n\t\t\t__setRenderDirty();\r\n\t\t\t\r\n\t\t\tvar event = new Event (Event.ADDED, true);\r\n\t\t\tevent.target = child;\r\n\t\t\tchild.__dispatchEvent (event);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn child;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function addChildAt (child:DisplayObject, index:Int):DisplayObject {\r\n\t\t\r\n\t\tif (index > __children.length || index < 0) {\r\n\t\t\t\r\n\t\t\tthrow \"Invalid index position \" + index;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (child.parent == this) {\r\n\t\t\t\r\n\t\t\t__children.remove (child);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tif (child.parent != null) {\r\n\t\t\t\t\r\n\t\t\t\tchild.parent.removeChild (child);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tchild.parent = this;\r\n\t\t\t\r\n\t\t\tif (stage != null) {\r\n\t\t\t\t\r\n\t\t\t\t// TODO: Dispatch ADDED_TO_STAGE after ADDED (but parent and stage must be set)\r\n\t\t\t\t\r\n\t\t\t\tchild.__setStageReference (stage);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tchild.__setTransformDirty ();\r\n\t\t\tchild.__setRenderDirty ();\r\n\t\t\t__setRenderDirty();\r\n\t\t\t\r\n\t\t\tvar event = new Event (Event.ADDED, true);\r\n\t\t\tevent.target = child;\r\n\t\t\tchild.__dispatchEvent (event);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__children.insert (index, child);\r\n\t\t\r\n\t\treturn child;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function areInaccessibleObjectsUnderPoint (point:Point):Bool {\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function contains (child:DisplayObject):Bool {\r\n\t\t\r\n\t\twhile (child != this && child != null) {\r\n\t\t\t\r\n\t\t\tchild = child.parent;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn child == this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getChildAt (index:Int):DisplayObject {\r\n\t\t\r\n\t\tif (index >= 0 && index < __children.length) {\r\n\t\t\t\r\n\t\t\treturn __children[index];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getChildByName (name:String):DisplayObject {\r\n\t\t\r\n\t\tfor (child in __children) {\r\n\t\t\t\r\n\t\t\tif (child.name == name) return child;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getChildIndex (child:DisplayObject):Int {\r\n\t\t\r\n\t\tfor (i in 0...__children.length) {\r\n\t\t\t\r\n\t\t\tif (__children[i] == child) return i;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn -1;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getObjectsUnderPoint (point:Point):Array<DisplayObject> {\r\n\t\t\r\n\t\tvar stack = new Array<DisplayObject> ();\r\n\t\t__hitTest (point.x, point.y, false, stack, false, this);\r\n\t\tstack.reverse ();\r\n\t\treturn stack;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function removeChild (child:DisplayObject):DisplayObject {\r\n\t\t\r\n\t\tif (child != null && child.parent == this) {\r\n\t\t\t\r\n\t\t\tchild.__dispatchEvent (new Event (Event.REMOVED, true));\r\n\t\t\t\r\n\t\t\tif (stage != null) {\r\n\t\t\t\t\r\n\t\t\t\tchild.__setStageReference (null);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tchild.parent = null;\r\n\t\t\t__children.remove (child);\r\n\t\t\t__removedChildren.push (child);\r\n\t\t\tchild.__setTransformDirty ();\r\n\t\t\tchild.__setRenderDirty ();\r\n\t\t\t__setRenderDirty();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn child;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function removeChildAt (index:Int):DisplayObject {\r\n\t\t\r\n\t\tif (index >= 0 && index < __children.length) {\r\n\t\t\t\r\n\t\t\treturn removeChild (__children[index]);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function removeChildren (beginIndex:Int = 0, endIndex:Int = 0x7FFFFFFF):Void {\r\n\t\t\r\n\t\tif (endIndex == 0x7FFFFFFF) { \r\n\t\t\t\r\n\t\t\tendIndex = __children.length - 1;\r\n\t\t\t\r\n\t\t\tif (endIndex < 0) {\r\n\t\t\t\t\r\n\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (beginIndex > __children.length - 1) {\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t} else if (endIndex < beginIndex || beginIndex < 0 || endIndex > __children.length) {\r\n\t\t\t\r\n\t\t\tthrow new RangeError (\"The supplied index is out of bounds.\");\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar numRemovals = endIndex - beginIndex;\r\n\t\twhile (numRemovals >= 0) {\r\n\t\t\t\r\n\t\t\tremoveChildAt (beginIndex);\r\n\t\t\tnumRemovals--;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function resolve (fieldName:String):DisplayObject {\r\n\t\t\r\n\t\tif (__children == null) return null;\r\n\t\t\r\n\t\tfor (child in __children) {\r\n\t\t\t\r\n\t\t\tif (child.name == fieldName) {\r\n\t\t\t\t\r\n\t\t\t\treturn child;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setChildIndex (child:DisplayObject, index:Int):Void {\r\n\t\t\r\n\t\tif (index >= 0 && index <= __children.length && child.parent == this) {\r\n\t\t\t\r\n\t\t\t__children.remove (child);\r\n\t\t\t__children.insert (index, child);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function swapChildren (child1:DisplayObject, child2:DisplayObject):Void {\r\n\t\t\r\n\t\tif (child1.parent == this && child2.parent == this) {\r\n\t\t\t\r\n\t\t\t#if (haxe_ver > 3.100)\r\n\t\t\t\r\n\t\t\tvar index1 = __children.indexOf (child1);\r\n\t\t\tvar index2 = __children.indexOf (child2);\r\n\t\t\t\r\n\t\t\t#else\r\n\t\t\t\r\n\t\t\tvar index1 = -1;\r\n\t\t\tvar index2 = -1;\r\n\t\t\t\r\n\t\t\tfor (i in 0...__children.length) {\r\n\t\t\t\t\r\n\t\t\t\tif (__children[i] == child1) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tindex1 = i;\r\n\t\t\t\t\t\r\n\t\t\t\t} else if (__children[i] == child2) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tindex2 = i;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\t__children[index1] = child2;\r\n\t\t\t__children[index2] = child1;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function swapChildrenAt (index1:Int, index2:Int):Void {\r\n\t\t\r\n\t\tvar swap:DisplayObject = __children[index1];\r\n\t\t__children[index1] = __children[index2];\r\n\t\t__children[index2] = swap;\r\n\t\tswap = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __broadcast (event:Event, notifyChilden:Bool):Bool {\r\n\t\t\r\n\t\tif (event.target == null) {\r\n\t\t\t\r\n\t\t\tevent.target = this;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar result = super.__broadcast (event, notifyChilden);\r\n\t\t\r\n\t\tif (!event.__isCanceled && notifyChilden) {\r\n\t\t\t\r\n\t\t\tfor (child in __children) {\r\n\t\t\t\t\r\n\t\t\t\tchild.__broadcast (event, true);\r\n\t\t\t\t\r\n\t\t\t\tif (event.__isCanceled) {\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __enterFrame (deltaTime:Int):Void {\r\n\t\t\r\n\t\tfor (child in __children) {\r\n\t\t\t\r\n\t\t\tchild.__enterFrame (deltaTime);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __getBounds (rect:Rectangle, matrix:Matrix):Void {\r\n\t\t\r\n\t\tsuper.__getBounds (rect, matrix);\r\n\t\t\r\n\t\tif (__children.length == 0) return;\r\n\t\t\r\n\t\tif (matrix != null) {\r\n\t\t\t\r\n\t\t\t__updateTransforms (matrix);\r\n\t\t\t__updateChildren (true);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (child in __children) {\r\n\t\t\t\r\n\t\t\tif (child.scaleX == 0 || child.scaleY == 0) continue;\r\n\t\t\tchild.__getBounds (rect, child.__worldTransform);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (matrix != null) {\r\n\t\t\t\r\n\t\t\t__updateTransforms ();\r\n\t\t\t__updateChildren (true);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __getRenderBounds (rect:Rectangle, matrix:Matrix):Void {\r\n\t\t\r\n\t\tif (__scrollRect != null) {\r\n\t\t\t\r\n\t\t\tsuper.__getRenderBounds (rect, matrix);\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tsuper.__getBounds (rect, matrix);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__children.length == 0) return;\r\n\t\t\r\n\t\tif (matrix != null) {\r\n\t\t\t\r\n\t\t\t__updateTransforms (matrix);\r\n\t\t\t__updateChildren (true);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (child in __children) {\r\n\t\t\t\r\n\t\t\tif (child.scaleX == 0 || child.scaleY == 0 || child.__isMask) continue;\r\n\t\t\tchild.__getRenderBounds (rect, child.__worldTransform);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (matrix != null) {\r\n\t\t\t\r\n\t\t\t__updateTransforms ();\r\n\t\t\t__updateChildren (true);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\r\n\t\t\r\n\t\tif (!hitObject.visible || __isMask || (interactiveOnly && !mouseEnabled && !mouseChildren)) return false;\r\n\t\tif (mask != null && !mask.__hitTestMask (x, y)) return false;\r\n\t\tif (scrollRect != null && !scrollRect.containsPoint (globalToLocal (new Point (x, y)))) return false;\r\n\t\t\r\n\t\tvar i = __children.length;\r\n\t\tif (interactiveOnly) {\r\n\t\t\t\r\n\t\t\tif (stack == null || !mouseChildren) {\r\n\t\t\t\t\r\n\t\t\t\twhile (--i >= 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (__children[i].__hitTest (x, y, shapeFlag, null, true, cast __children[i])) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (stack != null) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tstack.push (hitObject);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else if (stack != null) {\r\n\t\t\t\t\r\n\t\t\t\tvar length = stack.length;\r\n\t\t\t\t\r\n\t\t\t\tvar interactive = false;\r\n\t\t\t\tvar hitTest = false;\r\n\t\t\t\t\r\n\t\t\t\twhile (--i >= 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tinteractive = __children[i].__getInteractive (null);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (interactive || (mouseEnabled && !hitTest)) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (__children[i].__hitTest (x, y, shapeFlag, stack, true, cast __children[i])) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\thitTest = true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (interactive) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (hitTest) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tstack.insert (length, hitObject);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\twhile (--i >= 0) {\r\n\t\t\t\t\r\n\t\t\t\t__children[i].__hitTest (x, y, shapeFlag, stack, false, cast __children[i]);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __hitTestMask (x:Float, y:Float):Bool {\r\n\t\t\r\n\t\tvar i = __children.length;\r\n\t\t\r\n\t\twhile (--i >= 0) {\r\n\t\t\t\r\n\t\t\tif (__children[i].__hitTestMask (x, y)) {\r\n\t\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderCairo (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (!__renderable || __worldAlpha <= 0) return;\r\n\t\t\r\n\t\tsuper.__renderCairo (renderSession);\r\n\t\t\r\n\t\tif (scrollRect != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.pushRect (scrollRect, __worldTransform);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__mask != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.pushMask (__mask);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (child in __children) {\r\n\t\t\t\r\n\t\t\tchild.__renderCairo (renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__removedChildren.length > 0) {\r\n\t\t\t\r\n\t\t\t__removedChildren.splice (0, __removedChildren.length);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__mask != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.popMask ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (scrollRect != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.popRect ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderCairoMask (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (__graphics != null) {\r\n\t\t\t\r\n\t\t\tCairoGraphics.renderMask (__graphics, renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t//var bounds = new Rectangle ();\r\n\t\t//__getLocalBounds (bounds);\r\n\t\t//\r\n\t\t//renderSession.cairo.rectangle (0, 0, bounds.width, bounds.height);\r\n\t\t\r\n\t\tfor (child in __children) {\r\n\t\t\t\r\n\t\t\tchild.__renderCairoMask (renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderCanvas (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (!__renderable || __worldAlpha <= 0) return;\r\n\t\t\r\n\t\t#if !neko\r\n\t\t\r\n\t\tsuper.__renderCanvas (renderSession);\r\n\t\t\r\n\t\tif (scrollRect != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.pushRect (scrollRect, __worldTransform);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__mask != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.pushMask (__mask);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (child in __children) {\r\n\t\t\t\r\n\t\t\tchild.__renderCanvas (renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__removedChildren.length > 0) {\r\n\t\t\t\r\n\t\t\t__removedChildren.splice (0, __removedChildren.length);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__mask != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.popMask ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (scrollRect != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.popRect ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderCanvasMask (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (__graphics != null) {\r\n\t\t\t\r\n\t\t\tCanvasGraphics.renderMask (__graphics, renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar bounds = new Rectangle ();\r\n\t\t__getLocalBounds (bounds);\r\n\t\t\r\n\t\trenderSession.context.rect (0, 0, bounds.width, bounds.height);\r\n\t\t\r\n\t\t/*for (child in __children) {\r\n\t\t\t\r\n\t\t\tchild.__renderMask (renderSession);\r\n\t\t\t\r\n\t\t}*/\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderDOM (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if !neko\r\n\t\t\r\n\t\t//if (!__renderable) return;\r\n\t\t\r\n\t\tsuper.__renderDOM (renderSession);\r\n\t\t\r\n\t\tif (__mask != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.pushMask (__mask);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: scrollRect\r\n\t\t\r\n\t\tfor (child in __children) {\r\n\t\t\t\r\n\t\t\tchild.__renderDOM (renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (orphan in __removedChildren) {\r\n\t\t\t\r\n\t\t\tif (orphan.stage == null) {\r\n\t\t\t\t\r\n\t\t\t\torphan.__renderDOM (renderSession);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__removedChildren.length > 0) {\r\n\t\t\t\r\n\t\t\t__removedChildren.splice (0, __removedChildren.length);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__mask != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.popMask ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderGL (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (!__renderable || __worldAlpha <= 0) return;\r\n\t\t\r\n\t\tif (__cacheAsBitmap) {\r\n\t\t\t__cacheGL(renderSession);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t__preRenderGL (renderSession);\r\n\t\t__drawGraphicsGL (renderSession);\r\n\t\t\r\n\t\tfor (child in __children) {\r\n\t\t\t\r\n\t\t\tchild.__renderGL (renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__postRenderGL (renderSession);\r\n\t\t\r\n\t\tif (__removedChildren.length > 0) {\r\n\t\t\t\r\n\t\t\t__removedChildren.splice (0, __removedChildren.length);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __setStageReference (stage:Stage):Void {\r\n\t\t\r\n\t\tif (this.stage != stage) {\r\n\t\t\t\r\n\t\t\tif (this.stage != null) {\r\n\t\t\t\t\r\n\t\t\t\t__dispatchEvent (new Event (Event.REMOVED_FROM_STAGE, false, false));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.stage = stage;\r\n\t\t\t\r\n\t\t\tif (stage != null) {\r\n\t\t\t\t\r\n\t\t\t\t__dispatchEvent (new Event (Event.ADDED_TO_STAGE, false, false));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (__children != null) {\r\n\t\t\t\t\r\n\t\t\t\tfor (child in __children) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tchild.__setStageReference (stage);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __update (transformOnly:Bool, updateChildren:Bool, ?maskGraphics:Graphics = null):Void {\r\n\t\t\r\n\t\tsuper.__update (transformOnly, updateChildren, maskGraphics);\r\n\t\t\r\n\t\t// nested objects into a mask are non renderables but are part of the mask\r\n\t\tif (!__renderable && !__isMask #if dom && !__worldAlphaChanged && !__worldClipChanged && !__worldTransformChanged && !__worldVisibleChanged #end) {\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t//if (!__renderable) return;\r\n\t\t\r\n\t\tif (updateChildren) {\r\n\t\t\t\r\n\t\t\tfor (child in __children) {\r\n\t\t\t\t\r\n\t\t\t\tchild.__update (transformOnly, true, maskGraphics);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __updateChildren (transformOnly:Bool):Void {\r\n\t\t\r\n\t\tsuper.__updateChildren (transformOnly);\r\n\t\t\r\n\t\tfor (child in __children) {\r\n\t\t\t\r\n\t\t\tchild.__update (transformOnly, true);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_numChildren ():Int {\r\n\t\t\r\n\t\treturn __children.length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef DisplayObjectContainer = openfl._legacy.display.DisplayObjectContainer;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport lime.ui.MouseCursor;\r\nimport openfl._internal.renderer.canvas.CanvasGraphics;\r\nimport openfl._internal.renderer.canvas.CanvasShape;\r\nimport openfl._internal.renderer.dom.DOMShape;\r\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\n\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.display.Stage)\r\n\r\n\r\nclass Sprite extends DisplayObjectContainer {\r\n\t\r\n\t\r\n\tpublic var buttonMode:Bool;\r\n\tpublic var graphics (get, null):Graphics;\r\n\tpublic var hitArea:Sprite;\r\n\tpublic var useHandCursor:Bool;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\tbuttonMode = false;\r\n\t\tuseHandCursor = true;\r\n\t\tloaderInfo = LoaderInfo.create (null);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function startDrag (lockCenter:Bool = false, bounds:Rectangle = null):Void {\r\n\t\t\r\n\t\tif (stage != null) {\r\n\t\t\t\r\n\t\t\tstage.__startDrag (this, lockCenter, bounds);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function stopDrag ():Void {\r\n\t\t\r\n\t\tif (stage != null) {\r\n\t\t\t\r\n\t\t\tstage.__stopDrag (this);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __getCursor ():MouseCursor {\r\n\t\t\r\n\t\treturn (buttonMode && useHandCursor) ? POINTER : null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\r\n\t\t\r\n\t\tif (hitArea != null) {\r\n\r\n\t\t\tif (!hitArea.mouseEnabled)\r\n\t\t\t{\r\n\t\t\t\thitArea.mouseEnabled = true;\r\n\t\t\t\tvar hitTest = hitArea.__hitTest (x, y, shapeFlag, null, true, hitObject);\r\n\t\t\t\thitArea.mouseEnabled = false;\r\n\r\n\t\t\t\tif( hitTest ){\r\n\t\t\t\t\tstack[stack.length] = hitObject;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn hitTest;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tif (!hitObject.visible || __isMask || (interactiveOnly && !mouseEnabled && !mouseChildren)) return false;\r\n\t\t\tif (mask != null && !mask.__hitTestMask (x, y)) return false;\r\n\t\t\t\r\n\t\t\tif (super.__hitTest (x, y, shapeFlag, stack, interactiveOnly, hitObject)) {\r\n\t\t\t\t\r\n\t\t\t\treturn interactiveOnly;\r\n\t\t\t\t\r\n\t\t\t} else if ((!interactiveOnly || mouseEnabled) && __graphics != null && __graphics.__hitTest (x, y, shapeFlag, __getWorldTransform ())) {\r\n\t\t\t\t\r\n\t\t\t\tif (stack != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tstack.push (hitObject);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __hitTestMask (x:Float, y:Float):Bool {\r\n\t\t\r\n\t\tif (super.__hitTestMask (x, y)) {\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t} else if (__graphics != null && __graphics.__hitTest (x, y, true, __getWorldTransform ())) {\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_graphics ():Graphics {\r\n\t\t\r\n\t\tif (__graphics == null) {\r\n\t\t\t\r\n\t\t\t__graphics = new Graphics ();\r\n\t\t\t@:privateAccess __graphics.__owner = this;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __graphics;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function get_tabEnabled ():Bool {\r\n\t\t\r\n\t\treturn (__tabEnabled || buttonMode);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Sprite = openfl._legacy.display.Sprite;\r\n#end","package sample;\r\n\r\nimport haxe.Timer;\r\nimport openfl.display3D.Context3DRenderMode;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.text.TextField;\r\nimport openfl.text.TextFieldType;\r\n\r\n#if js\r\nimport js.Browser;\r\nimport js.html.CanvasElement;\r\nimport js.html.Element;\r\nimport js.html.Node;\r\nimport js.html.NodeList;\r\n#end\r\n\r\nimport openfl.events.Event;\r\nimport openfl.Assets;\r\nimport openfl.display.Bitmap;\r\nimport openfl.display.Sprite;\r\nimport openfl.display3D.Context3DProfile;\r\nimport openfl.events.MouseEvent;\r\nimport openfl.Lib;\r\n\r\nimport starling.core.Starling;\r\nimport starling.events.Event;\r\nimport starling.textures.RenderTexture;\r\nimport starling.utils.AssetManager;\r\nimport starling.events.EventDispatcher;\r\nimport starling.textures.TextureOptions;\r\n\r\nimport utils.ProgressBar;\r\nimport utils.DeviceInfo;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n\r\nclass Main extends Sprite \r\n{\r\n\tprivate var StageWidth:Int = Constants.GameWidth;\r\n\tprivate var StageHeight:Int = Constants.GameHeight;\r\n\t\r\n\tprivate var mStarling:Starling;\r\n\tpublic static var _mouseOnStage:Bool = false;\r\n\tpublic static var mouseOnStageDispatcher:EventDispatcher;\r\n\tpublic static var _root:Sprite;\r\n\t\r\n\tprivate var mouseOnStage(get, set):Bool;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tMain._root = this;\r\n\t\tMain.mouseOnStageDispatcher = new EventDispatcher();\r\n\t\t\r\n\t\tif (stage != null) start();\r\n\t\telse addEventListener(openfl.events.Event.ADDED_TO_STAGE, onAddedToStage);\r\n\t}\r\n\r\n\tprivate function onAddedToStage(event:Dynamic):Void\r\n\t{\r\n\t\tremoveEventListener(openfl.events.Event.ADDED_TO_STAGE, onAddedToStage);\r\n\t\tstart();\r\n\t}\r\n\r\n\tprivate function start():Void\r\n\t{\r\n\t\t// We develop the game in a *fixed* coordinate system of 320x480. The game might\r\n\t\t// then run on a device with a different resolution; for that case, we zoom the\r\n\t\t// viewPort to the optimal size for any display and load the optimal textures.\r\n\t\t\r\n\t\tStarling.MultitouchEnabled = true; // for Multitouch Scene\r\n\t\tStarling.MultitouchEnabled = true; // recommended everywhere when using AssetManager\r\n\t\t//RenderTexture.optimizePersistentBuffers = true; // should be safe on Desktop\r\n\t\t\r\n\t\tvar viewPort:Rectangle = new Rectangle(0, 0, StageWidth * 2, StageHeight * 2);\r\n\t\tvar scaleFactor:Int = viewPort.width < (480) ? 1:2;  // midway between 320 and 640  \r\n\t\t\r\n\t\tmStarling = new Starling(Game, stage, viewPort, null,Context3DRenderMode.AUTO, [Context3DProfile.BASELINE]);\r\n\t\tmStarling.stage.stageWidth = StageWidth;  // <- same size on all devices!  \r\n\t\tmStarling.stage.stageHeight = StageHeight;  // <- same size on all devices!  \r\n\t\tmStarling.antiAliasing = 2;\r\n\t\tmStarling.simulateMultitouch = false;\r\n\t\t//mStarling.enableErrorChecking = Capabilities.isDebugger;\r\n\t\tmStarling.addEventListener(starling.events.Event.ROOT_CREATED, function():Void\r\n\t\t{\r\n\t\t\tloadAssets(scaleFactor, startGame);\r\n\t\t\tswitchRendering();\r\n\t\t});\r\n\t\t\r\n\t\tmStarling.start();\r\n\t\t\r\n\t\t#if js\r\n\t\ttrace(\"DeviceInfo.isMobile = \" + DeviceInfo.isMobile);\t\r\n\t\tif (DeviceInfo.isMobile) {\r\n\t\t\t\tmouseOnStage = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar firstElementChild:Element = Browser.document.body.firstElementChild.firstElementChild;\r\n\t\t\t\tfirstElementChild.onmousemove = onMouseMove;\r\n\t\t\t\tfirstElementChild.onmouseout = onLeaveHandler;\r\n\t\t\t}\r\n\t\t#else\r\n\t\t\tstage.addEventListener(openfl.events.Event.MOUSE_LEAVE, onLeaveHandler);\r\n\t\t\tstage.addEventListener(MouseEvent.MOUSE_MOVE, onMouseMove);\r\n\t\t#end\r\n\t}\r\n\t\r\n\tprivate function onMouseMove(e:MouseEvent):Void \r\n\t{\r\n\t\tmouseOnStage = true;\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function onLeaveHandler(e:openfl.events.Event):Void \r\n\t{\r\n\t\tmouseOnStage = false;\r\n\t}\r\n\r\n\tprivate function loadAssets(scaleFactor:Int, onComplete:Function):Void\r\n\t{\r\n\t\t// Our assets are loaded and managed by the 'AssetManager'. To use that class,\r\n\t\t// we first have to enqueue pointers to all assets we want it to load.\r\n\t\tvar assets:AssetManager = new AssetManager(scaleFactor);\r\n\t\t\r\n\t\t//assets.verbose = Capabilities.isDebugger;\r\n\t\t//assets.enqueue(EmbeddedAssets);\r\n\t\tassets.enqueueWithName(EmbeddedAssets.atlas, \"atlas\", new TextureOptions(2));\r\n\t\tassets.enqueueWithName(EmbeddedAssets.atlas_xml, \"atlas_xml\");\r\n\t\tassets.enqueueWithName(EmbeddedAssets.background, \"background\");\r\n\t\tassets.enqueueWithName(EmbeddedAssets.compressed_texture, \"compressed_texture\");\r\n\t\tassets.enqueueWithName(EmbeddedAssets.desyrel, \"desyrel\", new TextureOptions(2));\r\n\t\tassets.enqueueWithName(EmbeddedAssets.desyrel_fnt, \"desyrel_fnt\");\r\n\t\tassets.enqueueWithName(EmbeddedAssets.wing_flap, \"wing_flap\");\r\n\t\t\r\n\t\t// Now, while the AssetManager now contains pointers to all the assets, it actually\r\n\t\t// has not loaded them yet. This happens in the \"loadQueue\" method; and since this\r\n\t\t// will take a while, we'll update the progress bar accordingly.\r\n\r\n\t\tassets.loadQueue(function(ratio:Float):Void\r\n\t\t{\r\n\t\t\tif (ratio == 1) onComplete(assets);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate function startGame(assets:AssetManager):Void\r\n\t{\r\n\t\tvar game:Game = cast mStarling.root;\r\n\t\tgame.start(assets);\r\n\t}\r\n\t\r\n\tpublic function get_mouseOnStage():Bool \r\n\t{\r\n\t\treturn Main._mouseOnStage;\r\n\t}\r\n\t\r\n\tpublic function set_mouseOnStage(value:Bool):Bool \r\n\t{\r\n\t\tif (mouseOnStage == value) return value;\r\n\t\tMain._mouseOnStage = value;\r\n\t\tswitchRendering();\r\n\t\tMain.mouseOnStageDispatcher.dispatchEvent(new starling.events.Event(starling.events.Event.CHANGE));\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function switchRendering():Void\r\n\t{\r\n\t\tif (mouseOnStage) {\r\n\t\t\tmStarling.start();\r\n\t\t\tthis.graphics.clear();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmStarling.stop();\r\n\t\t\tthis.graphics.beginFill(0x000000, 0.8);\r\n\t\t\tthis.graphics.drawRect(0, 0, stage.stageWidth, stage.stageHeight);\r\n\t\t}\r\n\t}\r\n}\r\n\r\ntypedef Function = Dynamic -> Void;","\r\nclass Constants\r\n{\r\n\t//public static var GameWidth:Int = 640;\r\n\t//public static var GameHeight:Int = 960;\r\n\tpublic static var GameWidth:Int = 320;\r\n\tpublic static var GameHeight:Int = 480;\r\n\t\r\n\tpublic static var CenterX:Int = untyped GameWidth / 2;\r\n\tpublic static var CenterY:Int = untyped GameHeight / 2;\r\n\r\n\tpublic function new()\r\n\t{\r\n\t}\r\n}\r\n","package lime; #if (!lime_legacy || lime_hybrid)\n\n\n#if !macro\n\n\nimport haxe.Json;\nimport haxe.Unserializer;\nimport lime.app.Event;\nimport lime.app.Promise;\nimport lime.app.Future;\nimport lime.audio.AudioBuffer;\nimport lime.graphics.Image;\nimport lime.text.Font;\nimport lime.utils.Bytes;\n\n/**\n * <p>The Assets class provides a cross-platform interface to access \n * embedded images, fonts, sounds and other resource files.</p>\n * \n * <p>The contents are populated automatically when an application\n * is compiled using the Lime command-line tools, based on the\n * contents of the *.xml project file.</p>\n * \n * <p>For most platforms, the assets are included in the same directory\n * or package as the application, and the paths are handled\n * automatically. For web content, the assets are preloaded before\n * the start of the rest of the application. You can customize the \n * preloader by extending the <code>NMEPreloader</code> class,\n * and specifying a custom preloader using <window preloader=\"\" />\n * in the project file.</p>\n */\n\n@:access(lime.AssetLibrary)\n\n\nclass Assets {\n\t\n\t\n\tpublic static var cache = new AssetCache ();\n\tpublic static var libraries (default, null) = new Map <String, AssetLibrary> ();\n\tpublic static var onChange = new Event<Void->Void> ();\n\t\n\tprivate static var initialized = false;\n\t\n\t\n\tpublic static function exists (id:String, type:AssetType = null):Bool {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (type == null) {\n\t\t\t\n\t\t\ttype = BINARY;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\treturn library.exists (symbolName, cast type);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Gets an instance of an embedded sound\n\t * @usage\t\tvar sound = Assets.getSound(\"sound.wav\");\n\t * @param\tid\t\tThe ID or asset path for the sound\n\t * @return\t\tA new Sound object\n\t */\n\tpublic static function getAudioBuffer (id:String, useCache:Bool = true):AudioBuffer {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (useCache && cache.enabled && cache.audio.exists (id)) {\n\t\t\t\n\t\t\tvar audio = cache.audio.get (id);\n\t\t\t\n\t\t\tif (isValidAudio (audio)) {\n\t\t\t\t\n\t\t\t\treturn audio;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tif (library.exists (symbolName, cast AssetType.SOUND)) {\n\t\t\t\t\n\t\t\t\tif (library.isLocal (symbolName, cast AssetType.SOUND)) {\n\t\t\t\t\t\n\t\t\t\t\tvar audio = library.getAudioBuffer (symbolName);\n\t\t\t\t\t\n\t\t\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcache.audio.set (id, audio);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn audio;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttrace (\"[Assets] Audio asset \\\"\" + id + \"\\\" exists, but only asynchronously\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ttrace (\"[Assets] There is no audio asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttrace (\"[Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Gets an instance of an embedded binary asset\n\t * @usage\t\tvar bytes = Assets.getBytes(\"file.zip\");\n\t * @param\tid\t\tThe ID or asset path for the file\n\t * @return\t\tA new Bytes object\n\t */\n\tpublic static function getBytes (id:String):Bytes {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf(\":\"));\n\t\tvar symbolName = id.substr (id.indexOf(\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tif (library.exists (symbolName, cast AssetType.BINARY)) {\n\t\t\t\t\n\t\t\t\tif (library.isLocal (symbolName, cast AssetType.BINARY)) {\n\t\t\t\t\t\n\t\t\t\t\treturn library.getBytes (symbolName);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttrace (\"[Assets] String or Bytes asset \\\"\" + id + \"\\\" exists, but only asynchronously\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ttrace (\"[Assets] There is no String or Bytes asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttrace (\"[Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Gets an instance of an embedded font\n\t * @usage\t\tvar fontName = Assets.getFont(\"font.ttf\").fontName;\n\t * @param\tid\t\tThe ID or asset path for the font\n\t * @return\t\tA new Font object\n\t */\n\tpublic static function getFont (id:String, useCache:Bool = true):Font {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (useCache && cache.enabled && cache.font.exists (id)) {\n\t\t\t\n\t\t\treturn cache.font.get (id);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tif (library.exists (symbolName, cast AssetType.FONT)) {\n\t\t\t\t\n\t\t\t\tif (library.isLocal (symbolName, cast AssetType.FONT)) {\n\t\t\t\t\t\n\t\t\t\t\tvar font = library.getFont (symbolName);\n\t\t\t\t\t\n\t\t\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcache.font.set (id, font);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn font;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttrace (\"[Assets] Font asset \\\"\" + id + \"\\\" exists, but only asynchronously\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ttrace (\"[Assets] There is no Font asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttrace (\"[Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Gets an instance of an embedded bitmap\n\t * @usage\t\tvar bitmap = new Bitmap(Assets.getBitmapData(\"image.jpg\"));\n\t * @param\tid\t\tThe ID or asset path for the bitmap\n\t * @param\tuseCache\t\t(Optional) Whether to use BitmapData from the cache(Default: true)\n\t * @return\t\tA new BitmapData object\n\t */\n\tpublic static function getImage (id:String, useCache:Bool = true):Image {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (useCache && cache.enabled && cache.image.exists (id)) {\n\t\t\t\n\t\t\tvar image = cache.image.get (id);\n\t\t\t\n\t\t\tif (isValidImage (image)) {\n\t\t\t\t\n\t\t\t\treturn image;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tif (library.exists (symbolName, cast AssetType.IMAGE)) {\n\t\t\t\t\n\t\t\t\tif (library.isLocal (symbolName, cast AssetType.IMAGE)) {\n\t\t\t\t\t\n\t\t\t\t\tvar image = library.getImage (symbolName);\n\t\t\t\t\t\n\t\t\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcache.image.set (id, image);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn image;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttrace (\"[Assets] Image asset \\\"\" + id + \"\\\" exists, but only asynchronously\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ttrace (\"[Assets] There is no Image asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttrace (\"[Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate static function getLibrary (name:String):AssetLibrary {\n\t\t\n\t\tif (name == null || name == \"\") {\n\t\t\t\n\t\t\tname = \"default\";\n\t\t\t\n\t\t}\n\t\t\n\t\treturn libraries.get (name);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Gets the file path (if available) for an asset\n\t * @usage\t\tvar path = Assets.getPath(\"image.jpg\");\n\t * @param\tid\t\tThe ID or asset path for the asset\n\t * @return\t\tThe path to the asset (or null)\n\t */\n\tpublic static function getPath (id:String):String {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tif (library.exists (symbolName, null)) {\n\t\t\t\t\n\t\t\t\treturn library.getPath (symbolName);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ttrace (\"[Assets] There is no asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttrace (\"[Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Gets an instance of an embedded text asset\n\t * @usage\t\tvar text = Assets.getText(\"text.txt\");\n\t * @param\tid\t\tThe ID or asset path for the file\n\t * @return\t\tA new String object\n\t */\n\tpublic static function getText (id:String):String {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf(\":\"));\n\t\tvar symbolName = id.substr (id.indexOf(\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tif (library.exists (symbolName, cast AssetType.TEXT)) {\n\t\t\t\t\n\t\t\t\tif (library.isLocal (symbolName, cast AssetType.TEXT)) {\n\t\t\t\t\t\n\t\t\t\t\treturn library.getText (symbolName);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttrace (\"[Assets] String asset \\\"\" + id + \"\\\" exists, but only asynchronously\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ttrace (\"[Assets] There is no String asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttrace (\"[Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate static function initialize ():Void {\n\t\t\n\t\tif (!initialized) {\n\t\t\t\n\t\t\t#if (tools && !display)\n\t\t\t\n\t\t\tregisterLibrary (\"default\", new DefaultAssetLibrary ());\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t\tinitialized = true;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function isLocal (id:String, type:AssetType = null, useCache:Bool = true):Bool {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (useCache && cache.enabled) {\n\t\t\t\n\t\t\tif (type == AssetType.IMAGE || type == null) {\n\t\t\t\t\n\t\t\t\tif (cache.image.exists (id)) return true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (type == AssetType.FONT || type == null) {\n\t\t\t\t\n\t\t\t\tif (cache.font.exists (id)) return true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (type == AssetType.SOUND || type == AssetType.MUSIC || type == null) {\n\t\t\t\t\n\t\t\t\tif (cache.audio.exists (id)) return true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\treturn library.isLocal (symbolName, cast type);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate static function isValidAudio (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\treturn (buffer != null);\n\t\t//return (sound.__handle != null && sound.__handle != 0);\n\t\t\n\t\t#else\n\t\t\n\t\treturn true;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function isValidImage (buffer:Image):Bool {\n\t\t\n\t\t#if (tools && !display)\n\t\t#if (cpp || neko || nodejs)\n\t\t\n\t\treturn (buffer != null);\n\t\t//return (bitmapData.__handle != null);\n\t\t\n\t\t#elseif flash\n\t\t\n\t\t/*try {\n\t\t\t\n\t\t\timage.bytes.width;\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}*/\n\t\treturn (buffer != null);\n\t\t\n\t\t#end\n\t\t#end\n\t\t\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function list (type:AssetType = null):Array<String> {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\tvar items = [];\n\t\t\n\t\tfor (library in libraries) {\n\t\t\t\n\t\t\tvar libraryItems = library.list (cast type);\n\t\t\t\n\t\t\tif (libraryItems != null) {\n\t\t\t\t\n\t\t\t\titems = items.concat (libraryItems);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn items;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadAudioBuffer (id:String, useCache:Bool = true):Future<AudioBuffer> {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\tvar promise = new Promise<AudioBuffer> ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (useCache && cache.enabled && cache.audio.exists (id)) {\n\t\t\t\n\t\t\tvar audio = cache.audio.get (id);\n\t\t\t\n\t\t\tif (isValidAudio (audio)) {\n\t\t\t\t\n\t\t\t\tpromise.complete (audio);\n\t\t\t\treturn promise.future;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tif (library.exists (symbolName, cast AssetType.SOUND)) {\n\t\t\t\t\n\t\t\t\tvar future = library.loadAudioBuffer (symbolName);\n\t\t\t\t\n\t\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\t\n\t\t\t\t\tfuture.onComplete (function (audio) cache.audio.set (id, audio));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpromise.completeWith (future);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tpromise.error (\"[Assets] There is no audio asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.error (\"[Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadBytes (id:String):Future<Bytes> {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\tvar promise = new Promise<Bytes> ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tif (library.exists (symbolName, cast AssetType.BINARY)) {\n\t\t\t\t\n\t\t\t\tpromise.completeWith (library.loadBytes (symbolName));\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tpromise.error (\"[Assets] There is no String or Bytes asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.error (\"[Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFont (id:String):Future<Font> {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\tvar promise = new Promise<Font> ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tif (library.exists (symbolName, cast AssetType.FONT)) {\n\t\t\t\t\n\t\t\t\tpromise.completeWith (library.loadFont (symbolName));\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tpromise.error (\"[Assets] There is no Font asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.error (\"[Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadImage (id:String, useCache:Bool = true):Future<Image> {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\tvar promise = new Promise<Image> ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (useCache && cache.enabled && cache.image.exists (id)) {\n\t\t\t\n\t\t\tvar image = cache.image.get (id);\n\t\t\t\n\t\t\tif (isValidImage (image)) {\n\t\t\t\t\n\t\t\t\tpromise.complete (image);\n\t\t\t\treturn promise.future;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tif (library.exists (symbolName, cast AssetType.IMAGE)) {\n\t\t\t\t\n\t\t\t\tvar future = library.loadImage (symbolName);\n\t\t\t\t\n\t\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\t\n\t\t\t\t\tfuture.onComplete (function (image) cache.image.set (id, image));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpromise.completeWith (future);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tpromise.error (\"[Assets] There is no Image asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.error (\"[Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadLibrary (name:String):Future<AssetLibrary> {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\tvar promise = new Promise<AssetLibrary> ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tvar data = getText (\"libraries/\" + name + \".json\");\n\t\t\n\t\tif (data != null && data != \"\") {\n\t\t\t\n\t\t\tvar info = Json.parse (data);\n\t\t\tvar library = Type.createInstance (Type.resolveClass (info.type), info.args);\n\t\t\tlibraries.set (name, library);\n\t\t\tlibrary.onChange.add (onChange.dispatch);\n\t\t\tpromise.completeWith (library.load ());\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.error (\"[Assets] There is no asset library named \\\"\" + name + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadText (id:String):Future<String> {\n\t\t\n\t\tinitialize ();\n\t\t\n\t\tvar promise = new Promise<String> ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tif (library.exists (symbolName, cast AssetType.TEXT)) {\n\t\t\t\t\n\t\t\t\tpromise.completeWith (library.loadText (symbolName));\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tpromise.error (\"[Assets] There is no String asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.error (\"[Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function registerLibrary (name:String, library:AssetLibrary):Void {\n\t\t\n\t\tif (libraries.exists (name)) {\n\t\t\t\n\t\t\tif (libraries.get (name) == library) {\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tunloadLibrary (name);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tlibrary.onChange.add (library_onChange);\n\t\t\t\n\t\t}\n\t\t\n\t\tlibraries.set (name, library);\n\t\t\n\t}\n\t\n\t\n\tpublic static function unloadLibrary (name:String):Void {\n\t\t\n\t\tinitialize();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tvar library = libraries.get (name);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tcache.clear (name + \":\");\n\t\t\tlibrary.onChange.remove (library_onChange);\n\t\t\tlibrary.unload ();\n\t\t\t\n\t\t}\n\t\t\n\t\tlibraries.remove (name);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate static function library_onChange ():Void {\n\t\t\n\t\tcache.clear ();\n\t\tonChange.dispatch ();\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass AssetLibrary {\n\t\n\t\n\tpublic var onChange = new Event<Void->Void> ();\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function exists (id:String, type:String):Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getAudioBuffer (id:String):AudioBuffer {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getBytes (id:String):Bytes {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getFont (id:String):Font {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getImage (id:String):Image {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPath (id:String):String {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getText (id:String):String {\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tvar bytes = getBytes (id);\n\t\t\n\t\tif (bytes == null) {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn bytes.getString (0, bytes.length);\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function isLocal (id:String, type:String):Bool {\n\t\t\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tpublic function list (type:String):Array<String> {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate function load ():Future<AssetLibrary> {\n\t\t\n\t\treturn new Future<AssetLibrary> (function () return this);\n\t\t\n\t}\n\t\n\t\n\tpublic function loadAudioBuffer (id:String):Future<AudioBuffer> {\n\t\t\n\t\treturn new Future<AudioBuffer> (function () return getAudioBuffer (id));\n\t\t\n\t}\n\t\n\t\n\tpublic function loadBytes (id:String):Future<Bytes> {\n\t\t\n\t\treturn new Future<Bytes> (function () return getBytes (id));\n\t\t\n\t}\n\t\n\t\n\tpublic function loadFont (id:String):Future<Font> {\n\t\t\n\t\treturn new Future<Font> (function () return getFont (id));\n\t\t\n\t}\n\t\n\t\n\tpublic function loadImage (id:String):Future<Image> {\n\t\t\n\t\treturn new Future<Image> (function () return getImage (id));\n\t\t\n\t}\n\t\n\t\n\tpublic function loadText (id:String):Future<String> {\n\t\t\n\t\treturn loadBytes (id).then (function (bytes) {\n\t\t\t\n\t\t\treturn new Future<String> (function () {\n\t\t\t\t\n\t\t\t\tif (bytes == null) {\n\t\t\t\t\t\n\t\t\t\t\treturn null;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\treturn bytes.getString (0, bytes.length);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tpublic function unload ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass AssetCache {\n\t\n\t\n\tpublic var audio:Map<String, AudioBuffer>;\n\tpublic var enabled:Bool = true;\n\tpublic var image:Map<String, Image>;\n\tpublic var font:Map<String, Dynamic /*Font*/>;\n\tpublic var version:Int;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\taudio = new Map<String, AudioBuffer> ();\n\t\tfont = new Map<String, Dynamic /*Font*/> ();\n\t\timage = new Map<String, Image> ();\n\t\tversion = Std.int (Math.random () * 1000000);\n\t\t\n\t}\n\t\n\t\n\tpublic function clear (prefix:String = null):Void {\n\t\t\n\t\tif (prefix == null) {\n\t\t\t\n\t\t\taudio = new Map<String, AudioBuffer> ();\n\t\t\tfont = new Map<String, Dynamic /*Font*/> ();\n\t\t\timage = new Map<String, Image> ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar keys = audio.keys ();\n\t\t\t\n\t\t\tfor (key in keys) {\n\t\t\t\t\n\t\t\t\tif (StringTools.startsWith (key, prefix)) {\n\t\t\t\t\t\n\t\t\t\t\taudio.remove (key);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar keys = font.keys ();\n\t\t\t\n\t\t\tfor (key in keys) {\n\t\t\t\t\n\t\t\t\tif (StringTools.startsWith (key, prefix)) {\n\t\t\t\t\t\n\t\t\t\t\tfont.remove (key);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar keys = image.keys ();\n\t\t\t\n\t\t\tfor (key in keys) {\n\t\t\t\t\n\t\t\t\tif (StringTools.startsWith (key, prefix)) {\n\t\t\t\t\t\n\t\t\t\t\timage.remove (key);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\n\n\nimport haxe.crypto.BaseCode;\nimport haxe.io.Bytes;\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nimport haxe.Serializer;\nimport lime.graphics.ImageBuffer;\nimport sys.io.File;\n\n\nclass Assets {\n\t\n\t\n\tprivate static var base64Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\tprivate static var base64Encoder:BaseCode;\n\t\n\t\n\tprivate static function base64Encode (bytes:Bytes):String {\n\t\t\n\t\tvar extension = switch (bytes.length % 3) {\n\t\t\t\n\t\t\tcase 1: \"==\";\n\t\t\tcase 2: \"=\";\n\t\t\tdefault: \"\";\n\t\t\t\n\t\t}\n\t\t\n\t\tif (base64Encoder == null) {\n\t\t\t\n\t\t\tbase64Encoder = new BaseCode (Bytes.ofString (base64Chars));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn base64Encoder.encodeBytes (bytes).toString () + extension;\n\t\t\n\t}\n\t\n\t\n\tmacro public static function embedBytes ():Array<Field> {\n\t\t\n\t\tvar fields = embedData (\":file\");\n\t\t\n\t\t#if lime_console\n\t\tif (false) {\n\t\t#else\n\t\tif (fields != null) {\n\t\t#end\n\t\t\t\n\t\t\tvar constructor = macro {\n\t\t\t\t\n\t\t\t\tvar bytes = haxe.Resource.getBytes (resourceName);\n\t\t\t\t\n\t\t\t\tsuper (bytes.length, bytes.b);\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tvar args = [ { name: \"length\", opt: false, type: macro :Int }, { name: \"bytesData\", opt: false, type: macro :haxe.io.BytesData } ];\n\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: args, expr: constructor, params: [], ret: null }), pos: Context.currentPos () });\n\t\t\t\n\t\t}\n\t\t\n\t\treturn fields;\n\t\t\n\t}\n\t\n\t\n\tmacro public static function embedByteArray ():Array<Field> {\n\t\t\n\t\tvar fields = embedData (\":file\");\n\t\t\n\t\t#if lime_console\n\t\tif (false) {\n\t\t#else\n\t\tif (fields != null) {\n\t\t#end\n\t\t\t\n\t\t\tvar constructor = macro {\n\t\t\t\t\n\t\t\t\tsuper ();\n\t\t\t\t\n\t\t\t\tvar bytes = haxe.Resource.getBytes (resourceName);\n\t\t\t\t__fromBytes (bytes);\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tvar args = [ { name: \"length\", opt: true, type: macro :Int, value: macro 0 } ];\n\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: args, expr: constructor, params: [], ret: null }), pos: Context.currentPos () });\n\t\t\t\n\t\t}\n\t\t\n\t\treturn fields;\n\t\t\n\t}\n\t\n\t\n\t#if lime_console\n\t\n\tprivate static function embedData (metaName:String, encode:Bool = false):Array<Field> {\n\t\t\n\t\tvar classType = Context.getLocalClass().get();\n\t\tvar metaData = classType.meta.get();\n\t\tvar position = Context.currentPos();\n\t\tvar fields = Context.getBuildFields();\n\t\t\n\t\tfor (meta in metaData) {\n\t\t\t\n\t\t\tif (meta.name != metaName || meta.params.length <= 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\t\n\t\t\tswitch (meta.params[0].expr) {\n\t\t\t\t\n\t\t\t\tcase EConst(CString(filePath)):\n\t\t\t\t\t\n\t\t\t\t\tvar fieldValue = {\n\t\t\t\t\t\tpos: position,\n\t\t\t\t\t\texpr: EConst(CString(filePath))\n\t\t\t\t\t};\n\t\t\t\t\tfields.push ({\n\t\t\t\t\t\tkind: FVar(macro :String, fieldValue),\n\t\t\t\t\t\tname: \"filePath\",\n\t\t\t\t\t\taccess: [ APrivate, AStatic ],\n\t\t\t\t\t\tpos: position\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn fields;\n\t\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\n\t#else\n\t\n\tprivate static function embedData (metaName:String, encode:Bool = false):Array<Field> {\n\t\t\n\t\tvar classType = Context.getLocalClass().get();\n\t\tvar metaData = classType.meta.get();\n\t\tvar position = Context.currentPos();\n\t\tvar fields = Context.getBuildFields();\n\t\t\n\t\tfor (meta in metaData) {\n\t\t\t\n\t\t\tif (meta.name == metaName) {\n\t\t\t\t\n\t\t\t\tif (meta.params.length > 0) {\n\t\t\t\t\t\n\t\t\t\t\tswitch (meta.params[0].expr) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase EConst(CString(filePath)):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar path = filePath;\n\t\t\t\t\t\t\tif (!sys.FileSystem.exists(filePath)) {\n\t\t\t\t\t\t\t\tpath = Context.resolvePath (filePath);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar bytes = File.getBytes (path);\n\t\t\t\t\t\t\tvar resourceName = \"__ASSET__\" + metaName + \"_\" + (classType.pack.length > 0 ? classType.pack.join (\"_\") + \"_\" : \"\") + classType.name;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (encode) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar resourceType = \"image/png\";\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (bytes.get (0) == 0xFF && bytes.get (1) == 0xD8) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tresourceType = \"image/jpg\";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else if (bytes.get (0) == 0x47 && bytes.get (1) == 0x49 && bytes.get (2) == 0x46) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tresourceType = \"image/gif\";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar fieldValue = { pos: position, expr: EConst(CString(resourceType)) };\n\t\t\t\t\t\t\t\tfields.push ({ kind: FVar(macro :String, fieldValue), name: \"resourceType\", access: [ APrivate, AStatic ], pos: position });\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar base64 = base64Encode (bytes);\n\t\t\t\t\t\t\t\tContext.addResource (resourceName, Bytes.ofString (base64));\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tContext.addResource (resourceName, bytes);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar fieldValue = { pos: position, expr: EConst(CString(resourceName)) };\n\t\t\t\t\t\t\tfields.push ({ kind: FVar(macro :String, fieldValue), name: \"resourceName\", access: [ APrivate, AStatic ], pos: position });\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn fields;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\n\t#end\n\t\n\t\n\tmacro public static function embedFont ():Array<Field> {\n\t\t\n\t\tvar fields = null;\n\t\t\n\t\tvar classType = Context.getLocalClass().get();\n\t\tvar metaData = classType.meta.get();\n\t\tvar position = Context.currentPos();\n\t\tvar fields = Context.getBuildFields();\n\t\t\n\t\tvar path = \"\";\n\t\tvar glyphs = \"32-255\";\n\t\t\n\t\tfor (meta in metaData) {\n\t\t\t\n\t\t\tif (meta.name == \":font\") {\n\t\t\t\t\n\t\t\t\tif (meta.params.length > 0) {\n\t\t\t\t\t\n\t\t\t\t\tswitch (meta.params[0].expr) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase EConst(CString(filePath)):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpath = filePath;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!sys.FileSystem.exists(filePath)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tpath = Context.resolvePath (filePath);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (path != null && path != \"\") {\n\t\t\t\n\t\t\t#if html5\n\t\t\tSys.command (\"haxelib\", [ \"run\", \"lime\", \"generate\", \"-font-hash\", sys.FileSystem.fullPath(path) ]);\n\t\t\tpath += \".hash\";\n\t\t\t#end\n\t\t\t\n\t\t\tvar bytes = File.getBytes (path);\n\t\t\tvar resourceName = \"LIME_font_\" + (classType.pack.length > 0 ? classType.pack.join (\"_\") + \"_\" : \"\") + classType.name;\n\t\t\t\n\t\t\tContext.addResource (resourceName, bytes);\n\t\t\t\n\t\t\tfor (field in fields) {\n\t\t\t\t\n\t\t\t\tif (field.name == \"new\") {\n\t\t\t\t\t\n\t\t\t\t\tfields.remove (field);\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar fieldValue = { pos: position, expr: EConst(CString(resourceName)) };\n\t\t\tfields.push ({ kind: FVar(macro :String, fieldValue), name: \"resourceName\", access: [ APublic, AStatic ], pos: position });\n\t\t\t\n\t\t\tvar constructor = macro {\n\t\t\t\t\n\t\t\t\tsuper ();\n\t\t\t\t\n\t\t\t\t__fromBytes (haxe.Resource.getBytes (resourceName));\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: [], expr: constructor, params: [], ret: null }), pos: Context.currentPos() });\n\t\t\t\n\t\t\treturn fields;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn fields;\n\t\t\n\t}\n\t\n\t\n\tmacro public static function embedImage ():Array<Field> {\n\t\t\n\t\t#if html5\n\t\tvar fields = embedData (\":image\", true);\n\t\t#else\n\t\tvar fields = embedData (\":image\");\n\t\t#end\n\t\t\n\t\tif (fields != null) {\n\t\t\t\n\t\t\tvar constructor = macro { \n\t\t\t\t\n\t\t\t\t#if html5\n\t\t\t\t\n\t\t\t\tsuper ();\n\t\t\t\t\n\t\t\t\tif (preload != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar buffer = new lime.graphics.ImageBuffer ();\n\t\t\t\t\tbuffer.__srcImage = preload;\n\t\t\t\t\tbuffer.width = preload.width;\n\t\t\t\t\tbuffer.width = preload.height;\n\t\t\t\t\t\n\t\t\t\t\t__fromImageBuffer (buffer);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\t__fromBase64 (haxe.Resource.getString (resourceName), resourceType, function (image) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (preload == null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpreload = image.buffer.__srcImage;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (onload != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tonload (image);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#else\n\t\t\t\t\n\t\t\t\tsuper ();\n\t\t\t\t\n\t\t\t\t#if lime_console\n\t\t\t\tthrow \"not implemented\";\n\t\t\t\t#else\n\t\t\t\t__fromBytes (haxe.Resource.getBytes (resourceName), null);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tvar args = [ { name: \"buffer\", opt: true, type: macro :lime.graphics.ImageBuffer, value: null }, { name: \"offsetX\", opt: true, type: macro :Int, value: null }, { name: \"offsetY\", opt: true, type: macro :Int, value: null }, { name: \"width\", opt: true, type: macro :Int, value: null }, { name: \"height\", opt: true, type: macro :Int, value: null }, { name: \"color\", opt: true, type: macro :Null<Int>, value: null }, { name: \"type\", opt: true, type: macro :lime.graphics.ImageType, value: null } ];\n\t\t\t\n\t\t\t#if html5\n\t\t\targs.push ({ name: \"onload\", opt: true, type: macro :Dynamic, value: null });\n\t\t\tfields.push ({ kind: FVar(macro :js.html.Image, null), name: \"preload\", doc: null, meta: [], access: [ APublic, AStatic ], pos: Context.currentPos() });\n\t\t\t#end\n\t\t\t\n\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: args, expr: constructor, params: [], ret: null }), pos: Context.currentPos() });\n\t\t\t\n\t\t}\n\t\t\n\t\treturn fields;\n\t\t\n\t}\n\t\n\t\n\tmacro public static function embedSound ():Array<Field> {\n\t\t\n\t\tvar fields = embedData (\":sound\");\n\t\t\n\t\tif (fields != null) {\n\t\t\t\n\t\t\t#if (openfl && !html5) // CFFILoader.h(248) : NOT Implemented:api_buffer_data\n\t\t\t\n\t\t\tvar constructor = macro { \n\t\t\t\t\n\t\t\t\tsuper();\n\t\t\t\t\n\t\t\t\t#if lime_console\n\t\t\t\tthrow \"not implemented\";\n\t\t\t\t#else\n\t\t\t\tvar byteArray = openfl.utils.ByteArray.fromBytes (haxe.Resource.getBytes(resourceName));\n\t\t\t\tloadCompressedDataFromByteArray(byteArray, byteArray.length, forcePlayAsMusic);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tvar args = [ { name: \"stream\", opt: true, type: macro :openfl.net.URLRequest, value: null }, { name: \"context\", opt: true, type: macro :openfl.media.SoundLoaderContext, value: null }, { name: \"forcePlayAsMusic\", opt: true, type: macro :Bool, value: macro false } ];\n\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: args, expr: constructor, params: [], ret: null }), pos: Context.currentPos() });\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn fields;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#end\n#end\n\n\n@:enum abstract AssetType(String) {\n\t\n\tvar BINARY = \"BINARY\";\n\tvar FONT = \"FONT\";\n\tvar IMAGE = \"IMAGE\";\n\tvar MUSIC = \"MUSIC\";\n\tvar SOUND = \"SOUND\";\n\tvar TEMPLATE = \"TEMPLATE\";\n\tvar TEXT = \"TEXT\";\n\t\n}\n","package;\n\n\nimport haxe.Timer;\nimport haxe.Unserializer;\nimport lime.app.Future;\nimport lime.app.Preloader;\nimport lime.app.Promise;\nimport lime.audio.AudioSource;\nimport lime.audio.openal.AL;\nimport lime.audio.AudioBuffer;\nimport lime.graphics.Image;\nimport lime.net.HTTPRequest;\nimport lime.system.CFFI;\nimport lime.text.Font;\nimport lime.utils.Bytes;\nimport lime.utils.UInt8Array;\nimport lime.Assets;\n\n#if sys\nimport sys.FileSystem;\n#end\n\n#if flash\nimport flash.display.Bitmap;\nimport flash.display.BitmapData;\nimport flash.display.Loader;\nimport flash.events.Event;\nimport flash.events.IOErrorEvent;\nimport flash.events.ProgressEvent;\nimport flash.media.Sound;\nimport flash.net.URLLoader;\nimport flash.net.URLRequest;\n#end\n\n\nclass DefaultAssetLibrary extends AssetLibrary {\n\t\n\t\n\tpublic var className (default, null) = new Map <String, Dynamic> ();\n\tpublic var path (default, null) = new Map <String, String> ();\n\tpublic var type (default, null) = new Map <String, AssetType> ();\n\t\n\tprivate var lastModified:Float;\n\tprivate var timer:Timer;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t#if (openfl && !flash)\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\topenfl.text.Font.registerFont (__ASSET__OPENFL__assets_fonts_ubuntu_r_ttf);\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t#end\n\t\t\n\t\t#if flash\n\t\t\n\t\tclassName.set (\"assets/audio/wing_flap.mp3\", __ASSET__assets_audio_wing_flap_mp3);\n\t\ttype.set (\"assets/audio/wing_flap.mp3\", AssetType.MUSIC);\n\t\tclassName.set (\"assets/fonts/1x/desyrel.fnt\", __ASSET__assets_fonts_1x_desyrel_fnt);\n\t\ttype.set (\"assets/fonts/1x/desyrel.fnt\", AssetType.TEXT);\n\t\tclassName.set (\"assets/fonts/1x/desyrel.png\", __ASSET__assets_fonts_1x_desyrel_png);\n\t\ttype.set (\"assets/fonts/1x/desyrel.png\", AssetType.IMAGE);\n\t\tclassName.set (\"assets/fonts/2x/desyrel.fnt\", __ASSET__assets_fonts_2x_desyrel_fnt);\n\t\ttype.set (\"assets/fonts/2x/desyrel.fnt\", AssetType.TEXT);\n\t\tclassName.set (\"assets/fonts/2x/desyrel.png\", __ASSET__assets_fonts_2x_desyrel_png);\n\t\ttype.set (\"assets/fonts/2x/desyrel.png\", AssetType.IMAGE);\n\t\tclassName.set (\"assets/fonts/Ubuntu-License.txt\", __ASSET__assets_fonts_ubuntu_license_txt);\n\t\ttype.set (\"assets/fonts/Ubuntu-License.txt\", AssetType.TEXT);\n\t\tclassName.set (\"assets/fonts/Ubuntu-R.ttf\", __ASSET__assets_fonts_ubuntu_r_ttf);\n\t\ttype.set (\"assets/fonts/Ubuntu-R.ttf\", AssetType.FONT);\n\t\tclassName.set (\"assets/textures/1x/atlas.png\", __ASSET__assets_textures_1x_atlas_png);\n\t\ttype.set (\"assets/textures/1x/atlas.png\", AssetType.IMAGE);\n\t\tclassName.set (\"assets/textures/1x/atlas.xml\", __ASSET__assets_textures_1x_atlas_xml);\n\t\ttype.set (\"assets/textures/1x/atlas.xml\", AssetType.TEXT);\n\t\tclassName.set (\"assets/textures/1x/background.jpg\", __ASSET__assets_textures_1x_background_jpg);\n\t\ttype.set (\"assets/textures/1x/background.jpg\", AssetType.IMAGE);\n\t\tclassName.set (\"assets/textures/1x/compressed_texture.atf\", __ASSET__assets_textures_1x_compressed_texture_atf);\n\t\ttype.set (\"assets/textures/1x/compressed_texture.atf\", AssetType.BINARY);\n\t\tclassName.set (\"assets/textures/2x/atlas.png\", __ASSET__assets_textures_2x_atlas_png);\n\t\ttype.set (\"assets/textures/2x/atlas.png\", AssetType.IMAGE);\n\t\tclassName.set (\"assets/textures/2x/atlas.xml\", __ASSET__assets_textures_2x_atlas_xml);\n\t\ttype.set (\"assets/textures/2x/atlas.xml\", AssetType.TEXT);\n\t\tclassName.set (\"assets/textures/2x/atlas2.png\", __ASSET__assets_textures_2x_atlas2_png);\n\t\ttype.set (\"assets/textures/2x/atlas2.png\", AssetType.IMAGE);\n\t\tclassName.set (\"assets/textures/2x/background.jpg\", __ASSET__assets_textures_2x_background_jpg);\n\t\ttype.set (\"assets/textures/2x/background.jpg\", AssetType.IMAGE);\n\t\tclassName.set (\"assets/textures/2x/compressed_texture.atf\", __ASSET__assets_textures_2x_compressed_texture_atf);\n\t\ttype.set (\"assets/textures/2x/compressed_texture.atf\", AssetType.BINARY);\n\t\t\n\t\t\n\t\t#elseif html5\n\t\t\n\t\tvar id;\n\t\tid = \"assets/audio/wing_flap.mp3\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.MUSIC);\n\t\tid = \"assets/fonts/1x/desyrel.fnt\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.TEXT);\n\t\tid = \"assets/fonts/1x/desyrel.png\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.IMAGE);\n\t\tid = \"assets/fonts/2x/desyrel.fnt\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.TEXT);\n\t\tid = \"assets/fonts/2x/desyrel.png\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.IMAGE);\n\t\tid = \"assets/fonts/Ubuntu-License.txt\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.TEXT);\n\t\tid = \"assets/fonts/Ubuntu-R.ttf\";\n\t\tclassName.set (id, __ASSET__assets_fonts_ubuntu_r_ttf);\n\t\t\n\t\ttype.set (id, AssetType.FONT);\n\t\tid = \"assets/textures/1x/atlas.png\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.IMAGE);\n\t\tid = \"assets/textures/1x/atlas.xml\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.TEXT);\n\t\tid = \"assets/textures/1x/background.jpg\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.IMAGE);\n\t\tid = \"assets/textures/1x/compressed_texture.atf\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.BINARY);\n\t\tid = \"assets/textures/2x/atlas.png\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.IMAGE);\n\t\tid = \"assets/textures/2x/atlas.xml\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.TEXT);\n\t\tid = \"assets/textures/2x/atlas2.png\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.IMAGE);\n\t\tid = \"assets/textures/2x/background.jpg\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.IMAGE);\n\t\tid = \"assets/textures/2x/compressed_texture.atf\";\n\t\tpath.set (id, id);\n\t\t\n\t\ttype.set (id, AssetType.BINARY);\n\t\t\n\t\t\n\t\tvar assetsPrefix = null;\n\t\tif (ApplicationMain.config != null && Reflect.hasField (ApplicationMain.config, \"assetsPrefix\")) {\n\t\t\tassetsPrefix = ApplicationMain.config.assetsPrefix;\n\t\t}\n\t\tif (assetsPrefix != null) {\n\t\t\tfor (k in path.keys()) {\n\t\t\t\tpath.set(k, assetsPrefix + path[k]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\t#if (windows || mac || linux)\n\t\t\n\t\tvar useManifest = false;\n\t\t\n\t\tclassName.set (\"assets/audio/wing_flap.mp3\", __ASSET__assets_audio_wing_flap_mp3);\n\t\ttype.set (\"assets/audio/wing_flap.mp3\", AssetType.MUSIC);\n\t\t\n\t\tclassName.set (\"assets/fonts/1x/desyrel.fnt\", __ASSET__assets_fonts_1x_desyrel_fnt);\n\t\ttype.set (\"assets/fonts/1x/desyrel.fnt\", AssetType.TEXT);\n\t\t\n\t\tclassName.set (\"assets/fonts/1x/desyrel.png\", __ASSET__assets_fonts_1x_desyrel_png);\n\t\ttype.set (\"assets/fonts/1x/desyrel.png\", AssetType.IMAGE);\n\t\t\n\t\tclassName.set (\"assets/fonts/2x/desyrel.fnt\", __ASSET__assets_fonts_2x_desyrel_fnt);\n\t\ttype.set (\"assets/fonts/2x/desyrel.fnt\", AssetType.TEXT);\n\t\t\n\t\tclassName.set (\"assets/fonts/2x/desyrel.png\", __ASSET__assets_fonts_2x_desyrel_png);\n\t\ttype.set (\"assets/fonts/2x/desyrel.png\", AssetType.IMAGE);\n\t\t\n\t\tclassName.set (\"assets/fonts/Ubuntu-License.txt\", __ASSET__assets_fonts_ubuntu_license_txt);\n\t\ttype.set (\"assets/fonts/Ubuntu-License.txt\", AssetType.TEXT);\n\t\t\n\t\tclassName.set (\"assets/fonts/Ubuntu-R.ttf\", __ASSET__assets_fonts_ubuntu_r_ttf);\n\t\ttype.set (\"assets/fonts/Ubuntu-R.ttf\", AssetType.FONT);\n\t\t\n\t\tclassName.set (\"assets/textures/1x/atlas.png\", __ASSET__assets_textures_1x_atlas_png);\n\t\ttype.set (\"assets/textures/1x/atlas.png\", AssetType.IMAGE);\n\t\t\n\t\tclassName.set (\"assets/textures/1x/atlas.xml\", __ASSET__assets_textures_1x_atlas_xml);\n\t\ttype.set (\"assets/textures/1x/atlas.xml\", AssetType.TEXT);\n\t\t\n\t\tclassName.set (\"assets/textures/1x/background.jpg\", __ASSET__assets_textures_1x_background_jpg);\n\t\ttype.set (\"assets/textures/1x/background.jpg\", AssetType.IMAGE);\n\t\t\n\t\tclassName.set (\"assets/textures/1x/compressed_texture.atf\", __ASSET__assets_textures_1x_compressed_texture_atf);\n\t\ttype.set (\"assets/textures/1x/compressed_texture.atf\", AssetType.BINARY);\n\t\t\n\t\tclassName.set (\"assets/textures/2x/atlas.png\", __ASSET__assets_textures_2x_atlas_png);\n\t\ttype.set (\"assets/textures/2x/atlas.png\", AssetType.IMAGE);\n\t\t\n\t\tclassName.set (\"assets/textures/2x/atlas.xml\", __ASSET__assets_textures_2x_atlas_xml);\n\t\ttype.set (\"assets/textures/2x/atlas.xml\", AssetType.TEXT);\n\t\t\n\t\tclassName.set (\"assets/textures/2x/atlas2.png\", __ASSET__assets_textures_2x_atlas2_png);\n\t\ttype.set (\"assets/textures/2x/atlas2.png\", AssetType.IMAGE);\n\t\t\n\t\tclassName.set (\"assets/textures/2x/background.jpg\", __ASSET__assets_textures_2x_background_jpg);\n\t\ttype.set (\"assets/textures/2x/background.jpg\", AssetType.IMAGE);\n\t\t\n\t\tclassName.set (\"assets/textures/2x/compressed_texture.atf\", __ASSET__assets_textures_2x_compressed_texture_atf);\n\t\ttype.set (\"assets/textures/2x/compressed_texture.atf\", AssetType.BINARY);\n\t\t\n\t\t\n\t\tif (useManifest) {\n\t\t\t\n\t\t\tloadManifest ();\n\t\t\t\n\t\t\tif (Sys.args ().indexOf (\"-livereload\") > -1) {\n\t\t\t\t\n\t\t\t\tvar path = FileSystem.fullPath (\"manifest\");\n\t\t\t\tlastModified = FileSystem.stat (path).mtime.getTime ();\n\t\t\t\t\n\t\t\t\ttimer = new Timer (2000);\n\t\t\t\ttimer.run = function () {\n\t\t\t\t\t\n\t\t\t\t\tvar modified = FileSystem.stat (path).mtime.getTime ();\n\t\t\t\t\t\n\t\t\t\t\tif (modified > lastModified) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlastModified = modified;\n\t\t\t\t\t\tloadManifest ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tonChange.dispatch ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tloadManifest ();\n\t\t\n\t\t#end\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic override function exists (id:String, type:String):Bool {\n\t\t\n\t\tvar requestedType = type != null ? cast (type, AssetType) : null;\n\t\tvar assetType = this.type.get (id);\n\t\t\n\t\tif (assetType != null) {\n\t\t\t\n\t\t\tif (assetType == requestedType || ((requestedType == SOUND || requestedType == MUSIC) && (assetType == MUSIC || assetType == SOUND))) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#if flash\n\t\t\t\n\t\t\tif (requestedType == BINARY && (assetType == BINARY || assetType == TEXT || assetType == IMAGE)) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t} else if (requestedType == TEXT && assetType == BINARY) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t} else if (requestedType == null || path.exists (id)) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tif (requestedType == BINARY || requestedType == null || (assetType == BINARY && requestedType == TEXT)) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic override function getAudioBuffer (id:String):AudioBuffer {\n\t\t\n\t\t#if flash\n\t\t\n\t\tvar buffer = new AudioBuffer ();\n\t\tbuffer.src = cast (Type.createInstance (className.get (id), []), Sound);\n\t\treturn buffer;\n\t\t\n\t\t#elseif html5\n\t\t\n\t\treturn null;\n\t\t//return new Sound (new URLRequest (path.get (id)));\n\t\t\n\t\t#else\n\t\t\n\t\tif (className.exists(id)) return AudioBuffer.fromBytes (cast (Type.createInstance (className.get (id), []), Bytes));\n\t\telse return AudioBuffer.fromFile (path.get (id));\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic override function getBytes (id:String):Bytes {\n\t\t\n\t\t#if flash\n\t\t\n\t\tswitch (type.get (id)) {\n\t\t\t\n\t\t\tcase TEXT, BINARY:\n\t\t\t\t\n\t\t\t\treturn Bytes.ofData (cast (Type.createInstance (className.get (id), []), flash.utils.ByteArray));\n\t\t\t\n\t\t\tcase IMAGE:\n\t\t\t\t\n\t\t\t\tvar bitmapData = cast (Type.createInstance (className.get (id), []), BitmapData);\n\t\t\t\treturn Bytes.ofData (bitmapData.getPixels (bitmapData.rect));\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn cast (Type.createInstance (className.get (id), []), Bytes);\n\t\t\n\t\t#elseif html5\n\t\t\n\t\tvar loader = Preloader.loaders.get (path.get (id));\n\t\t\n\t\tif (loader == null) {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar bytes = loader.bytes;\n\t\t\n\t\tif (bytes != null) {\n\t\t\t\n\t\t\treturn bytes;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tif (className.exists(id)) return cast (Type.createInstance (className.get (id), []), Bytes);\n\t\telse return Bytes.readFile (path.get (id));\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic override function getFont (id:String):Font {\n\t\t\n\t\t#if flash\n\t\t\n\t\tvar src = Type.createInstance (className.get (id), []);\n\t\t\n\t\tvar font = new Font (src.fontName);\n\t\tfont.src = src;\n\t\treturn font;\n\t\t\n\t\t#elseif html5\n\t\t\n\t\treturn cast (Type.createInstance (className.get (id), []), Font);\n\t\t\n\t\t#else\n\t\t\n\t\tif (className.exists (id)) {\n\t\t\t\n\t\t\tvar fontClass = className.get (id);\n\t\t\treturn cast (Type.createInstance (fontClass, []), Font);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn Font.fromFile (path.get (id));\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic override function getImage (id:String):Image {\n\t\t\n\t\t#if flash\n\t\t\n\t\treturn Image.fromBitmapData (cast (Type.createInstance (className.get (id), []), BitmapData));\n\t\t\n\t\t#elseif html5\n\t\t\n\t\treturn Image.fromImageElement (Preloader.images.get (path.get (id)));\n\t\t\n\t\t#else\n\t\t\n\t\tif (className.exists (id)) {\n\t\t\t\n\t\t\tvar fontClass = className.get (id);\n\t\t\treturn cast (Type.createInstance (fontClass, []), Image);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn Image.fromFile (path.get (id));\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t/*public override function getMusic (id:String):Dynamic {\n\t\t\n\t\t#if flash\n\t\t\n\t\treturn cast (Type.createInstance (className.get (id), []), Sound);\n\t\t\n\t\t#elseif openfl_html5\n\t\t\n\t\t//var sound = new Sound ();\n\t\t//sound.__buffer = true;\n\t\t//sound.load (new URLRequest (path.get (id)));\n\t\t//return sound;\n\t\treturn null;\n\t\t\n\t\t#elseif html5\n\t\t\n\t\treturn null;\n\t\t//return new Sound (new URLRequest (path.get (id)));\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t//if (className.exists(id)) return cast (Type.createInstance (className.get (id), []), Sound);\n\t\t//else return new Sound (new URLRequest (path.get (id)), null, true);\n\t\t\n\t\t#end\n\t\t\n\t}*/\n\t\n\t\n\tpublic override function getPath (id:String):String {\n\t\t\n\t\t//#if ios\n\t\t\n\t\t//return SystemPath.applicationDirectory + \"/assets/\" + path.get (id);\n\t\t\n\t\t//#else\n\t\t\n\t\treturn path.get (id);\n\t\t\n\t\t//#end\n\t\t\n\t}\n\t\n\t\n\tpublic override function getText (id:String):String {\n\t\t\n\t\t#if html5\n\t\t\n\t\tvar loader = Preloader.loaders.get (path.get (id));\n\t\t\n\t\tif (loader == null) {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar bytes = loader.bytes;\n\t\t\n\t\tif (bytes != null) {\n\t\t\t\n\t\t\treturn bytes.getString (0, bytes.length);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tvar bytes = getBytes (id);\n\t\t\n\t\tif (bytes == null) {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn bytes.getString (0, bytes.length);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic override function isLocal (id:String, type:String):Bool {\n\t\t\n\t\tvar requestedType = type != null ? cast (type, AssetType) : null;\n\t\t\n\t\t#if flash\n\t\t\n\t\t//if (requestedType != AssetType.MUSIC && requestedType != AssetType.SOUND) {\n\t\t\t\n\t\t\treturn className.exists (id);\n\t\t\t\n\t\t//}\n\t\t\n\t\t#end\n\t\t\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tpublic override function list (type:String):Array<String> {\n\t\t\n\t\tvar requestedType = type != null ? cast (type, AssetType) : null;\n\t\tvar items = [];\n\t\t\n\t\tfor (id in this.type.keys ()) {\n\t\t\t\n\t\t\tif (requestedType == null || exists (id, type)) {\n\t\t\t\t\n\t\t\t\titems.push (id);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn items;\n\t\t\n\t}\n\t\n\t\n\tpublic override function loadAudioBuffer (id:String):Future<AudioBuffer> {\n\t\t\n\t\tvar promise = new Promise<AudioBuffer> ();\n\t\t\n\t\t#if (flash)\n\t\t\n\t\tif (path.exists (id)) {\n\t\t\t\n\t\t\tvar soundLoader = new Sound ();\n\t\t\tsoundLoader.addEventListener (Event.COMPLETE, function (event) {\n\t\t\t\t\n\t\t\t\tvar audioBuffer:AudioBuffer = new AudioBuffer();\n\t\t\t\taudioBuffer.src = event.currentTarget;\n\t\t\t\tpromise.complete (audioBuffer);\n\t\t\t\t\n\t\t\t});\n\t\t\tsoundLoader.addEventListener (ProgressEvent.PROGRESS, function (event) {\n\t\t\t\t\n\t\t\t\tif (event.bytesTotal == 0) {\n\t\t\t\t\t\n\t\t\t\t\tpromise.progress (0);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tpromise.progress (event.bytesLoaded / event.bytesTotal);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t\tsoundLoader.addEventListener (IOErrorEvent.IO_ERROR, promise.error);\n\t\t\tsoundLoader.load (new URLRequest (path.get (id)));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.complete (getAudioBuffer (id));\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tpromise.completeWith (new Future<AudioBuffer> (function () return getAudioBuffer (id)));\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic override function loadBytes (id:String):Future<Bytes> {\n\t\t\n\t\tvar promise = new Promise<Bytes> ();\n\t\t\n\t\t#if flash\n\t\t\n\t\tif (path.exists (id)) {\n\t\t\t\n\t\t\tvar loader = new URLLoader ();\n\t\t\tloader.addEventListener (Event.COMPLETE, function (event:Event) {\n\t\t\t\t\n\t\t\t\tvar bytes = Bytes.ofString (event.currentTarget.data);\n\t\t\t\tpromise.complete (bytes);\n\t\t\t\t\n\t\t\t});\n\t\t\tloader.addEventListener (ProgressEvent.PROGRESS, function (event) {\n\t\t\t\t\n\t\t\t\tif (event.bytesTotal == 0) {\n\t\t\t\t\t\n\t\t\t\t\tpromise.progress (0);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tpromise.progress (event.bytesLoaded / event.bytesTotal);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t\tloader.addEventListener (IOErrorEvent.IO_ERROR, promise.error);\n\t\t\tloader.load (new URLRequest (path.get (id)));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.complete (getBytes (id));\n\t\t\t\n\t\t}\n\t\t\n\t\t#elseif html5\n\t\t\n\t\tif (path.exists (id)) {\n\t\t\t\n\t\t\tvar request = new HTTPRequest ();\n\t\t\tpromise.completeWith (request.load (path.get (id) + \"?\" + Assets.cache.version));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.complete (getBytes (id));\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tpromise.completeWith (new Future<Bytes> (function () return getBytes (id)));\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic override function loadImage (id:String):Future<Image> {\n\t\t\n\t\tvar promise = new Promise<Image> ();\n\t\t\n\t\t#if flash\n\t\t\n\t\tif (path.exists (id)) {\n\t\t\t\n\t\t\tvar loader = new Loader ();\n\t\t\tloader.contentLoaderInfo.addEventListener (Event.COMPLETE, function (event:Event) {\n\t\t\t\t\n\t\t\t\tvar bitmapData = cast (event.currentTarget.content, Bitmap).bitmapData;\n\t\t\t\tpromise.complete (Image.fromBitmapData (bitmapData));\n\t\t\t\t\n\t\t\t});\n\t\t\tloader.contentLoaderInfo.addEventListener (ProgressEvent.PROGRESS, function (event) {\n\t\t\t\t\n\t\t\t\tif (event.bytesTotal == 0) {\n\t\t\t\t\t\n\t\t\t\t\tpromise.progress (0);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tpromise.progress (event.bytesLoaded / event.bytesTotal);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t\tloader.contentLoaderInfo.addEventListener (IOErrorEvent.IO_ERROR, promise.error);\n\t\t\tloader.load (new URLRequest (path.get (id)));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.complete (getImage (id));\n\t\t\t\n\t\t}\n\t\t\n\t\t#elseif html5\n\t\t\n\t\tif (path.exists (id)) {\n\t\t\t\n\t\t\tvar image = new js.html.Image ();\n\t\t\timage.onload = function (_):Void {\n\t\t\t\t\n\t\t\t\tpromise.complete (Image.fromImageElement (image));\n\t\t\t\t\n\t\t\t}\n\t\t\timage.onerror = promise.error;\n\t\t\timage.src = path.get (id) + \"?\" + Assets.cache.version;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.complete (getImage (id));\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tpromise.completeWith (new Future<Image> (function () return getImage (id)));\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\t#if (!flash && !html5)\n\tprivate function loadManifest ():Void {\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t#if blackberry\n\t\t\tvar bytes = Bytes.readFile (\"app/native/manifest\");\n\t\t\t#elseif tizen\n\t\t\tvar bytes = Bytes.readFile (\"../res/manifest\");\n\t\t\t#elseif emscripten\n\t\t\tvar bytes = Bytes.readFile (\"assets/manifest\");\n\t\t\t#elseif (mac && java)\n\t\t\tvar bytes = Bytes.readFile (\"../Resources/manifest\");\n\t\t\t#elseif (ios || tvos)\n\t\t\tvar bytes = Bytes.readFile (\"assets/manifest\");\n\t\t\t#else\n\t\t\tvar bytes = Bytes.readFile (\"manifest\");\n\t\t\t#end\n\t\t\t\n\t\t\tif (bytes != null) {\n\t\t\t\t\n\t\t\t\tif (bytes.length > 0) {\n\t\t\t\t\t\n\t\t\t\t\tvar data = bytes.getString (0, bytes.length);\n\t\t\t\t\t\n\t\t\t\t\tif (data != null && data.length > 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar manifest:Array<Dynamic> = Unserializer.run (data);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (asset in manifest) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!className.exists (asset.id)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t#if (ios || tvos)\n\t\t\t\t\t\t\t\tpath.set (asset.id, \"assets/\" + asset.path);\n\t\t\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\tpath.set (asset.id, asset.path);\n\t\t\t\t\t\t\t\t#end\n\t\t\t\t\t\t\t\ttype.set (asset.id, cast (asset.type, AssetType));\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ttrace (\"Warning: Could not load asset manifest (bytes was null)\");\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\ttrace ('Warning: Could not load asset manifest (${e})');\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic override function loadText (id:String):Future<String> {\n\t\t\n\t\tvar promise = new Promise<String> ();\n\t\t\n\t\t#if html5\n\t\t\n\t\tif (path.exists (id)) {\n\t\t\t\n\t\t\tvar request = new HTTPRequest ();\n\t\t\tvar future = request.load (path.get (id) + \"?\" + Assets.cache.version);\n\t\t\tfuture.onProgress (function (progress) promise.progress (progress));\n\t\t\tfuture.onError (function (msg) promise.error (msg));\n\t\t\tfuture.onComplete (function (bytes) promise.complete (bytes.getString (0, bytes.length)));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.complete (getText (id));\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tpromise.completeWith (loadBytes (id).then (function (bytes) {\n\t\t\t\n\t\t\treturn new Future<String> (function () {\n\t\t\t\t\n\t\t\t\tif (bytes == null) {\n\t\t\t\t\t\n\t\t\t\t\treturn null;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\treturn bytes.getString (0, bytes.length);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t}));\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !display\n#if flash\n\n@:keep @:bind #if display private #end class __ASSET__assets_audio_wing_flap_mp3 extends null { }\n@:keep @:bind #if display private #end class __ASSET__assets_fonts_1x_desyrel_fnt extends null { }\n@:keep @:bind #if display private #end class __ASSET__assets_fonts_1x_desyrel_png extends flash.display.BitmapData { public function new () { super (0, 0, true, 0); } }\n@:keep @:bind #if display private #end class __ASSET__assets_fonts_2x_desyrel_fnt extends null { }\n@:keep @:bind #if display private #end class __ASSET__assets_fonts_2x_desyrel_png extends flash.display.BitmapData { public function new () { super (0, 0, true, 0); } }\n@:keep @:bind #if display private #end class __ASSET__assets_fonts_ubuntu_license_txt extends null { }\n@:keep @:bind #if display private #end class __ASSET__assets_fonts_ubuntu_r_ttf extends null { }\n@:keep @:bind #if display private #end class __ASSET__assets_textures_1x_atlas_png extends flash.display.BitmapData { public function new () { super (0, 0, true, 0); } }\n@:keep @:bind #if display private #end class __ASSET__assets_textures_1x_atlas_xml extends null { }\n@:keep @:bind #if display private #end class __ASSET__assets_textures_1x_background_jpg extends flash.display.BitmapData { public function new () { super (0, 0, true, 0); } }\n@:keep @:bind #if display private #end class __ASSET__assets_textures_1x_compressed_texture_atf extends null { }\n@:keep @:bind #if display private #end class __ASSET__assets_textures_2x_atlas_png extends flash.display.BitmapData { public function new () { super (0, 0, true, 0); } }\n@:keep @:bind #if display private #end class __ASSET__assets_textures_2x_atlas_xml extends null { }\n@:keep @:bind #if display private #end class __ASSET__assets_textures_2x_atlas2_png extends flash.display.BitmapData { public function new () { super (0, 0, true, 0); } }\n@:keep @:bind #if display private #end class __ASSET__assets_textures_2x_background_jpg extends flash.display.BitmapData { public function new () { super (0, 0, true, 0); } }\n@:keep @:bind #if display private #end class __ASSET__assets_textures_2x_compressed_texture_atf extends null { }\n\n\n#elseif html5\n\n\n\n\n\n\n\n@:keep #if display private #end class __ASSET__assets_fonts_ubuntu_r_ttf extends lime.text.Font { public function new () { super (); name = \"Ubuntu\"; } } \n\n\n\n\n\n\n\n\n\n\n\n#else\n\n\n\n#if (windows || mac || linux || cpp)\n\n\n@:file(\"assets/audio/wing_flap.mp3\") #if display private #end class __ASSET__assets_audio_wing_flap_mp3 extends lime.utils.Bytes {}\n@:file(\"assets/fonts/1x/desyrel.fnt\") #if display private #end class __ASSET__assets_fonts_1x_desyrel_fnt extends lime.utils.Bytes {}\n@:image(\"assets/fonts/1x/desyrel.png\") #if display private #end class __ASSET__assets_fonts_1x_desyrel_png extends lime.graphics.Image {}\n@:file(\"assets/fonts/2x/desyrel.fnt\") #if display private #end class __ASSET__assets_fonts_2x_desyrel_fnt extends lime.utils.Bytes {}\n@:image(\"assets/fonts/2x/desyrel.png\") #if display private #end class __ASSET__assets_fonts_2x_desyrel_png extends lime.graphics.Image {}\n@:file(\"assets/fonts/Ubuntu-License.txt\") #if display private #end class __ASSET__assets_fonts_ubuntu_license_txt extends lime.utils.Bytes {}\n@:font(\"assets/fonts/Ubuntu-R.ttf\") #if display private #end class __ASSET__assets_fonts_ubuntu_r_ttf extends lime.text.Font {}\n@:image(\"assets/textures/1x/atlas.png\") #if display private #end class __ASSET__assets_textures_1x_atlas_png extends lime.graphics.Image {}\n@:file(\"assets/textures/1x/atlas.xml\") #if display private #end class __ASSET__assets_textures_1x_atlas_xml extends lime.utils.Bytes {}\n@:image(\"assets/textures/1x/background.jpg\") #if display private #end class __ASSET__assets_textures_1x_background_jpg extends lime.graphics.Image {}\n@:file(\"assets/textures/1x/compressed_texture.atf\") #if display private #end class __ASSET__assets_textures_1x_compressed_texture_atf extends lime.utils.Bytes {}\n@:image(\"assets/textures/2x/atlas.png\") #if display private #end class __ASSET__assets_textures_2x_atlas_png extends lime.graphics.Image {}\n@:file(\"assets/textures/2x/atlas.xml\") #if display private #end class __ASSET__assets_textures_2x_atlas_xml extends lime.utils.Bytes {}\n@:image(\"assets/textures/2x/atlas2.png\") #if display private #end class __ASSET__assets_textures_2x_atlas2_png extends lime.graphics.Image {}\n@:image(\"assets/textures/2x/background.jpg\") #if display private #end class __ASSET__assets_textures_2x_background_jpg extends lime.graphics.Image {}\n@:file(\"assets/textures/2x/compressed_texture.atf\") #if display private #end class __ASSET__assets_textures_2x_compressed_texture_atf extends lime.utils.Bytes {}\n\n\n\n#end\n#end\n\n#if (openfl && !flash)\n@:keep #if display private #end class __ASSET__OPENFL__assets_fonts_ubuntu_r_ttf extends openfl.text.Font { public function new () { var font = new __ASSET__assets_fonts_ubuntu_r_ttf (); src = font.src; name = font.name; super (); }}\n\n#end\n\n#end","package lime.text;\n\n\nimport haxe.io.Bytes;\nimport lime.graphics.Image;\nimport lime.graphics.ImageBuffer;\nimport lime.math.Vector2;\nimport lime.system.System;\nimport lime.utils.UInt8Array;\n\n#if (js && html5)\nimport js.html.CanvasElement;\nimport js.html.CanvasRenderingContext2D;\n#end\n\n#if ((cpp || neko || nodejs) && !macro)\nimport haxe.io.Path;\n#end\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n#if (!display && !nodejs && !macro)\n@:autoBuild(lime.Assets.embedFont())\n#end\n\n@:access(lime.text.Glyph)\n\n\nclass Font {\n\t\n\t\n\tpublic var ascender (get, null):Int;\n\tpublic var descender (get, null):Int;\n\tpublic var height (get, null):Int;\n\tpublic var name (default, null):String;\n\tpublic var numGlyphs (get, null):Int;\n\tpublic var src:Dynamic;\n\tpublic var underlinePosition (get, null):Int;\n\tpublic var underlineThickness (get, null):Int;\n\tpublic var unitsPerEM (get, null):Int;\n\t\n\t@:noCompletion private var __fontPath:String;\n\t#if (cpp || neko || nodejs)\n\t@:noCompletion private var __fontPathWithoutDirectory:String;\n\t#end\n\t\n\tpublic function new (name:String = null) {\n\t\t\n\t\tif (name != null) {\n\t\t\t\n\t\t\tthis.name = name;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__fontPath != null) {\n\t\t\t\n\t\t\t__fromFile (__fontPath);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function decompose ():NativeFontData {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\t\n\t\tif (src == null) throw \"Uninitialized font handle.\";\n\t\tvar data:Dynamic = lime_font_outline_decompose (src, 1024 * 20);\n\t\treturn data;\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:Bytes):Font {\n\t\t\n\t\tvar font = new Font ();\n\t\tfont.__fromBytes (bytes);\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn (font.src != null) ? font : null;\n\t\t#else\n\t\treturn font;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String):Font {\n\t\t\n\t\tvar font = new Font ();\n\t\tfont.__fromFile (path);\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn (font.src != null) ? font : null;\n\t\t#else\n\t\treturn font;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function getGlyph (character:String):Glyph {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_font_get_glyph_index (src, character);\n\t\t#else\n\t\treturn -1;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function getGlyphs (characters:String = #if (display && haxe_ver < \"3.2\") \"\" #else \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^`'\\\"/\\\\&*()[]{}<>|:;_-+=?,. \" #end):Array<Glyph> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\tvar glyphs:Dynamic = lime_font_get_glyph_indices (src, characters);\n\t\treturn glyphs;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function getGlyphMetrics (glyph:Glyph):GlyphMetrics {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\tvar value:Dynamic = lime_font_get_glyph_metrics (src, glyph);\n\t\tvar metrics = new GlyphMetrics ();\n\t\t\n\t\tmetrics.advance = new Vector2 (value.horizontalAdvance, value.verticalAdvance);\n\t\tmetrics.height = value.height;\n\t\tmetrics.horizontalBearing = new Vector2 (value.horizontalBearingX, value.horizontalBearingY);\n\t\tmetrics.verticalBearing = new Vector2 (value.verticalBearingX, value.verticalBearingY);\n\t\t\n\t\treturn metrics;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function renderGlyph (glyph:Glyph, fontSize:Int):Image {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\t\n\t\tlime_font_set_size (src, fontSize);\n\t\t\n\t\tvar bytes = Bytes.alloc (0);\n\t\t//bytes.endian = (System.endianness == BIG_ENDIAN ? \"bigEndian\" : \"littleEndian\");\n\t\t\n\t\tvar dataPosition = 0;\n\t\t\n\t\tif (lime_font_render_glyph (src, glyph, bytes)) {\n\t\t\t\n\t\t\tvar index = bytes.getInt32 (dataPosition); dataPosition += 4;\n\t\t\tvar width = bytes.getInt32 (dataPosition); dataPosition += 4;\n\t\t\tvar height = bytes.getInt32 (dataPosition); dataPosition += 4;\n\t\t\tvar x = bytes.getInt32 (dataPosition); dataPosition += 4;\n\t\t\tvar y = bytes.getInt32 (dataPosition); dataPosition += 4;\n\t\t\t\n\t\t\tvar data = bytes.sub (dataPosition, width * height);\n\t\t\tdataPosition += (width * height);\n\t\t\t\n\t\t\tvar buffer = new ImageBuffer (new UInt8Array (data), width, height, 1);\n\t\t\tvar image = new Image (buffer, 0, 0, width, height);\n\t\t\timage.x = x;\n\t\t\timage.y = y;\n\t\t\t\n\t\t\treturn image;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\n\t\n\tpublic function renderGlyphs (glyphs:Array<Glyph>, fontSize:Int):Map<Glyph, Image> {\n\t\t\n\t\t//#if ((cpp || neko || nodejs) && !macro)\n\t\t//\n\t\t//var uniqueGlyphs = new Map<Int, Bool> ();\n\t\t//\n\t\t//for (glyph in glyphs) {\n\t\t\t//\n\t\t\t//uniqueGlyphs.set (glyph, true);\n\t\t\t//\n\t\t//}\n\t\t//\n\t\t//var glyphList = [];\n\t\t//\n\t\t//for (key in uniqueGlyphs.keys ()) {\n\t\t\t//\n\t\t\t//glyphList.push (key);\n\t\t\t//\n\t\t//}\n\t\t//\n\t\t//lime_font_set_size (src, fontSize);\n\t\t//\n\t\t//var bytes = new ByteArray ();\n\t\t//bytes.endian = (System.endianness == BIG_ENDIAN ? \"bigEndian\" : \"littleEndian\");\n\t\t//\n\t\t//if (lime_font_render_glyphs (src, glyphList, bytes)) {\n\t\t\t//\n\t\t\t//bytes.position = 0;\n\t\t\t//\n\t\t\t//var count = bytes.readUnsignedInt ();\n\t\t\t//\n\t\t\t//var bufferWidth = 128;\n\t\t\t//var bufferHeight = 128;\n\t\t\t//var offsetX = 0;\n\t\t\t//var offsetY = 0;\n\t\t\t//var maxRows = 0;\n\t\t\t//\n\t\t\t//var width, height;\n\t\t\t//var i = 0;\n\t\t\t//\n\t\t\t//while (i < count) {\n\t\t\t\t//\n\t\t\t\t//bytes.position += 4;\n\t\t\t\t//width = bytes.readUnsignedInt ();\n\t\t\t\t//height = bytes.readUnsignedInt ();\n\t\t\t\t//bytes.position += (4 * 2) + width * height;\n\t\t\t\t//\n\t\t\t\t//if (offsetX + width > bufferWidth) {\n\t\t\t\t\t//\n\t\t\t\t\t//offsetY += maxRows + 1;\n\t\t\t\t\t//offsetX = 0;\n\t\t\t\t\t//maxRows = 0;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t\t//if (offsetY + height > bufferHeight) {\n\t\t\t\t\t//\n\t\t\t\t\t//if (bufferWidth < bufferHeight) {\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//bufferWidth *= 2;\n\t\t\t\t\t\t//\n\t\t\t\t\t//} else {\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//bufferHeight *= 2;\n\t\t\t\t\t\t//\n\t\t\t\t\t//}\n\t\t\t\t\t//\n\t\t\t\t\t//offsetX = 0;\n\t\t\t\t\t//offsetY = 0;\n\t\t\t\t\t//maxRows = 0;\n\t\t\t\t\t//\n\t\t\t\t\t//// TODO: make this better\n\t\t\t\t\t//\n\t\t\t\t\t//bytes.position = 4;\n\t\t\t\t\t//i = 0;\n\t\t\t\t\t//continue;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t\t//offsetX += width + 1;\n\t\t\t\t//\n\t\t\t\t//if (height > maxRows) {\n\t\t\t\t\t//\n\t\t\t\t\t//maxRows = height;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t\t//i++;\n\t\t\t\t//\n\t\t\t//}\n\t\t\t//\n\t\t\t//var map = new Map<Int, Image> ();\n\t\t\t//var buffer = new ImageBuffer (null, bufferWidth, bufferHeight, 8);\n\t\t\t//var data = new ByteArray (bufferWidth * bufferHeight);\n\t\t\t//\n\t\t\t//bytes.position = 4;\n\t\t\t//offsetX = 0;\n\t\t\t//offsetY = 0;\n\t\t\t//maxRows = 0;\n\t\t\t//\n\t\t\t//var index, x, y, image;\n\t\t\t//\n\t\t\t//for (i in 0...count) {\n\t\t\t\t//\n\t\t\t\t//index = bytes.readUnsignedInt ();\n\t\t\t\t//width = bytes.readUnsignedInt ();\n\t\t\t\t//height = bytes.readUnsignedInt ();\n\t\t\t\t//x = bytes.readUnsignedInt ();\n\t\t\t\t//y = bytes.readUnsignedInt ();\n\t\t\t\t//\n\t\t\t\t//if (offsetX + width > bufferWidth) {\n\t\t\t\t\t//\n\t\t\t\t\t//offsetY += maxRows + 1;\n\t\t\t\t\t//offsetX = 0;\n\t\t\t\t\t//maxRows = 0;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t\t//for (i in 0...height) {\n\t\t\t\t\t//\n\t\t\t\t\t//data.position = ((i + offsetY) * bufferWidth) + offsetX;\n\t\t\t\t\t////bytes.readBytes (data, 0, width);\n\t\t\t\t\t//\n\t\t\t\t\t//for (x in 0...width) {\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//var byte = bytes.readUnsignedByte ();\n\t\t\t\t\t\t//data.writeByte (byte);\n\t\t\t\t\t\t//\n\t\t\t\t\t//}\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t\t//image = new Image (buffer, offsetX, offsetY, width, height);\n\t\t\t\t//image.x = x;\n\t\t\t\t//image.y = y;\n\t\t\t\t//\n\t\t\t\t//map.set (index, image);\n\t\t\t\t//\n\t\t\t\t//offsetX += width + 1;\n\t\t\t\t//\n\t\t\t\t//if (height > maxRows) {\n\t\t\t\t\t//\n\t\t\t\t\t//maxRows = height;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t//}\n\t\t\t//\n\t\t\t//#if js\n\t\t\t//buffer.data = data.byteView;\n\t\t\t//#else\n\t\t\t//buffer.data = new UInt8Array (data);\n\t\t\t//#end\n\t\t\t//\n\t\t\t//return map;\n\t\t\t//\n\t\t//}\n\t\t//\n\t\t//#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\t\n\t@:noCompletion private function __fromBytes (bytes:Bytes):Void {\n\t\t\n\t\t__fontPath = null;\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\t\n\t\t__fontPathWithoutDirectory = null;\n\t\t\n\t\tsrc = lime_font_load (bytes);\n\t\t\n\t\tif (src != null && name == null) {\n\t\t\t\n\t\t\tname = cast lime_font_get_family_name (src);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __fromFile (path:String):Void {\n\t\t\n\t\t__fontPath = path;\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\t\n\t\t__fontPathWithoutDirectory = Path.withoutDirectory (__fontPath);\n\t\t\n\t\tsrc = lime_font_load (__fontPath);\n\t\t\n\t\tif (src != null && name == null) {\n\t\t\t\n\t\t\tname = cast lime_font_get_family_name (src);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_ascender ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_font_get_ascender (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_descender ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_font_get_descender (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_height ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_font_get_height (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_numGlyphs ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_font_get_num_glyphs (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_underlinePosition ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_font_get_underline_position (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_underlineThickness ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_font_get_underline_thickness (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_unitsPerEM ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_font_get_units_per_em (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_font_get_ascender (handle:Dynamic):Int;\n\t@:cffi private static function lime_font_get_descender (handle:Dynamic):Int;\n\t@:cffi private static function lime_font_get_family_name (handle:Dynamic):Dynamic;\n\t@:cffi private static function lime_font_get_glyph_index (handle:Dynamic, character:String):Int;\n\t@:cffi private static function lime_font_get_glyph_indices (handle:Dynamic, characters:String):Dynamic;\n\t@:cffi private static function lime_font_get_glyph_metrics (handle:Dynamic, index:Int):Dynamic;\n\t@:cffi private static function lime_font_get_height (handle:Dynamic):Int;\n\t@:cffi private static function lime_font_get_num_glyphs (handle:Dynamic):Int;\n\t@:cffi private static function lime_font_get_underline_position (handle:Dynamic):Int;\n\t@:cffi private static function lime_font_get_underline_thickness (handle:Dynamic):Int;\n\t@:cffi private static function lime_font_get_units_per_em (handle:Dynamic):Int;\n\t@:cffi private static function lime_font_load (data:Dynamic):Dynamic;\n\t@:cffi private static function lime_font_outline_decompose (handle:Dynamic, size:Int):Dynamic;\n\t@:cffi private static function lime_font_render_glyph (handle:Dynamic, index:Int, data:Dynamic):Bool;\n\t@:cffi private static function lime_font_render_glyphs (handle:Dynamic, indices:Dynamic, data:Dynamic):Bool;\n\t@:cffi private static function lime_font_set_size (handle:Dynamic, size:Int):Void;\n\t#end\n\t\n\t\n}\n\n\ntypedef NativeFontData = {\n\t\n\tvar has_kerning:Bool;\n\tvar is_fixed_width:Bool;\n\tvar has_glyph_names:Bool;\n\tvar is_italic:Bool;\n\tvar is_bold:Bool;\n\tvar num_glyphs:Int;\n\tvar family_name:String;\n\tvar style_name:String;\n\tvar em_size:Int;\n\tvar ascend:Int;\n\tvar descend:Int;\n\tvar height:Int;\n\tvar glyphs:Array<NativeGlyphData>;\n\tvar kerning:Array<NativeKerningData>;\n\t\n}\n\n\ntypedef NativeGlyphData = {\n\t\n\tvar char_code:Int;\n\tvar advance:Int;\n\tvar min_x:Int;\n\tvar max_x:Int;\n\tvar min_y:Int;\n\tvar max_y:Int;\n\tvar points:Array<Int>;\n\t\n}\n\n\ntypedef NativeKerningData = {\n\t\n\tvar left_glyph:Int;\n\tvar right_glyph:Int;\n\tvar x:Int;\n\tvar y:Int;\n\t\n}\n","package openfl.text; #if !openfl_legacy\r\n\r\n\r\nimport lime.text.Font in LimeFont;\r\nimport openfl.utils.ByteArray;\r\n\r\n\r\nclass Font extends LimeFont {\r\n\t\r\n\t\r\n\tpublic var fontName (get, set):String;\r\n\tpublic var fontStyle:FontStyle;\r\n\tpublic var fontType:FontType;\r\n\t\r\n\tprivate static var __registeredFonts = new Array<Font> ();\r\n\t\r\n\t\r\n\tpublic function new (name:String = null) {\r\n\t\t\r\n\t\tsuper (name);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function enumerateFonts (enumerateDeviceFonts:Bool = false):Array<Font> {\r\n\t\t\r\n\t\treturn __registeredFonts;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function fromBytes (bytes:ByteArray):Font {\r\n\t\t\r\n\t\tvar font = new Font ();\r\n\t\tfont.__fromBytes (bytes);\r\n\t\t\r\n\t\t#if (cpp || neko || nodejs)\r\n\t\treturn (font.src != null) ? font : null;\r\n\t\t#else\r\n\t\treturn font;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function fromFile (path:String):Font {\r\n\t\t\r\n\t\tvar font = new Font ();\r\n\t\tfont.__fromFile (path);\r\n\t\t\r\n\t\t#if (cpp || neko || nodejs)\r\n\t\treturn (font.src != null) ? font : null;\r\n\t\t#else\r\n\t\treturn font;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function registerFont (font:Class<Dynamic>) {\r\n\t\t\r\n\t\tvar instance = cast (Type.createInstance (font, []), Font);\r\n\t\t\r\n\t\tif (instance != null) {\r\n\t\t\t\r\n\t\t\t/*if (Reflect.hasField (font, \"resourceName\")) {\r\n\t\t\t\t\r\n\t\t\t\tinstance.fontName = __ofResource (Reflect.field (font, \"resourceName\"));\r\n\t\t\t\t\r\n\t\t\t}*/\r\n\t\t\t\r\n\t\t\t__registeredFonts.push (instance);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function __fromLimeFont (value:LimeFont):Font {\r\n\t\t\r\n\t\tvar font = new Font ();\r\n\t\tfont.name = value.name;\r\n\t\tfont.src = value.src;\r\n\t\treturn font;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate inline function get_fontName ():String {\r\n\t\t\r\n\t\treturn name;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function set_fontName (value:String):String {\r\n\t\t\r\n\t\treturn name = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Font = openfl._legacy.text.Font;\r\n#end","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : HaxeRegExp;\n\n\tpublic function new( r : String, opt : String ) : Void {\n\t\topt = opt.split(\"u\").join(\"\"); // 'u' (utf8) depends on page encoding\n\t\tthis.r = new HaxeRegExp(r, opt);\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.RegExp {\n\tvar m:js.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","package;\r\n\r\nimport openfl.Assets;\r\nimport openfl.display.BitmapData;\r\nimport openfl.media.Sound;\r\nimport openfl.utils.ByteArray;\r\n\r\nclass EmbeddedAssets\r\n{\r\n\t/** ATTENTION: Naming conventions!\r\n\t *  \r\n\t *  - Classes for embedded IMAGES should have the exact same name as the file,\r\n\t *    without extension. This is required so that references from XMLs (atlas, bitmap font)\r\n\t *    won't break.\r\n\t *    \r\n\t *  - Atlas and Font XML files can have an arbitrary name, since they are never\r\n\t *    referenced by file name.\r\n\t * \r\n\t */\r\n\t\r\n\t// Texture Atlas\r\n\t\r\n\t//public static var atlas_xml:String = \"assets/textures/1x/atlas.xml\";\r\n\t@:isVar public static var atlas_xml(get, null):Xml;\r\n\t\r\n\t//public static var atlas:String = \"assets/textures/1x/atlas.png\";\r\n\t@:isVar public static var atlas(get, null):BitmapData;\r\n//public static var atlas:String = \"assets/textures/1x/atlas.png\";\r\n\t@:isVar public static var atlas2(get, null):BitmapData;\r\n\r\n\t// Bitmap textures\r\n\r\n\t//public static var background:String = \"assets/textures/1x/background.jpg\";\r\n\t@:isVar public static var background(get, null):BitmapData;\r\n\r\n\t// Compressed textures\r\n\t\r\n\t//public static var compressed_texture:String = \"assets/textures/1x/compressed_texture.atf\";\r\n\t@:isVar public static var compressed_texture(get, null):ByteArray;\r\n\t\r\n\t// Bitmap Fonts\r\n\t\r\n\t//public static var desyrel_fnt:String = \"assets/fonts/1x/desyrel.fnt\";\r\n\t@:isVar public static var desyrel_fnt(get, null):Xml;\r\n\t\r\n\t//public static var desyrel:String = \"assets/fonts/1x/desyrel.png\";\r\n\t@:isVar public static var desyrel(get, null):BitmapData;\r\n\t\r\n\t// Sounds\r\n\t\r\n\t//public static var wing_flap:String = \"assets/audio/wing_flap.mp3\";\r\n\t@:isVar public static var wing_flap(get, null):Sound;\r\n\t\r\n\tstatic function get_atlas_xml():Xml \r\n\t{\r\n\t\treturn Xml.parse(Assets.getText(\"assets/textures/2x/atlas.xml\"));\r\n\t}\r\n\t\r\n\tstatic function get_atlas():BitmapData \r\n\t{\r\n\t\treturn Assets.getBitmapData(\"assets/textures/2x/atlas.png\");\r\n\t}\r\n\t\r\n\tstatic function get_atlas2():BitmapData \r\n\t{\r\n\t\treturn Assets.getBitmapData(\"assets/textures/2x/atlas2.png\");\r\n\t}\r\n\t\r\n\tstatic function get_background():BitmapData \r\n\t{\r\n\t\treturn Assets.getBitmapData(\"assets/textures/2x/background.jpg\");\r\n\t}\r\n\t\r\n\tstatic function get_compressed_texture():ByteArray \r\n\t{\r\n\t\treturn Assets.getBytes(\"assets/textures/2x/compressed_texture.atf\");\r\n\t}\r\n\t\r\n\tstatic function get_desyrel_fnt():Xml \r\n\t{\r\n\t\treturn Xml.parse(Assets.getText(\"assets/fonts/2x/desyrel.fnt\"));\r\n\t}\r\n\t\r\n\tstatic function get_desyrel():BitmapData \r\n\t{\r\n\t\treturn Assets.getBitmapData(\"assets/fonts/2x/desyrel.png\");\r\n\t}\r\n\t\r\n\tstatic function get_wing_flap():Sound \r\n\t{\r\n\t\treturn Assets.getSound(\"assets/audio/wing_flap.mp3\");\r\n\t}\r\n}","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.events;\r\n\r\nimport haxe.Constraints.Function;\r\n\r\nimport starling.display.DisplayObject;\r\n\r\n\r\n\r\n/** The EventDispatcher class is the base class for all classes that dispatch events. \r\n *  This is the Starling version of the Flash class with the same name. \r\n *  \r\n *  <p>The event mechanism is a key feature of Starling's architecture. Objects can communicate \r\n *  with each other through events. Compared the the Flash event system, Starling's event system\r\n *  was simplified. The main difference is that Starling events have no \"Capture\" phase.\r\n *  They are simply dispatched at the target and may optionally bubble up. They cannot move \r\n *  in the opposite direction.</p>  \r\n *  \r\n *  <p>As in the conventional Flash classes, display objects inherit from EventDispatcher \r\n *  and can thus dispatch events. Beware, though, that the Starling event classes are \r\n *  <em>not compatible with Flash events:</em> Starling display objects dispatch \r\n *  Starling events, which will bubble along Starling display objects - but they cannot \r\n *  dispatch Flash events or bubble along Flash display objects.</p>\r\n *  \r\n *  @see Event\r\n *  @see starling.display.DisplayObject DisplayObject\r\n */\r\nclass EventDispatcher\r\n{\r\n\tprivate var _eventListeners:Map<String, Array<Function>>;\r\n\t\r\n\t/** Helper object. */\r\n\tprivate static var sBubbleChains:Array<Dynamic> = [];\r\n\t\r\n\t/** Creates an EventDispatcher. */\r\n\tpublic function new()\r\n\t{\r\n\t}\r\n\t\r\n\t/** Registers an event listener at a certain object. */\r\n\tpublic function addEventListener(type:String, listener:Function):Void\r\n\t{\r\n\t\tif (_eventListeners == null) \r\n\t\t\t_eventListeners = new Map<String, Array<Function>>();\r\n\t\t\r\n\t\t/*var listeners:Array<Function> = _eventListeners.get(type);\r\n\t\tif (listeners == null) {\r\n\t\t\t_eventListeners.set(type, [listener]);\r\n\t\t}\r\n\t\t// avoid 'push'\r\n\t\telse if (Lambda.indexOf(listeners, listener) == -1)\t\t\t   // check for duplicates  \r\n\t\tlisteners[listeners.length] = listener;*/\r\n\t\t\r\n\t\tvar listeners:Array<Function> = _eventListeners.get(type);\r\n\t\tif (listeners == null) {\r\n\t\t\t_eventListeners.set(type, [listener]);\r\n\t\t}\r\n\t\telse if (listeners.indexOf(listener) == -1) {// check for duplicates\r\n\t\t\tlisteners[listeners.length] = listener; // avoid 'push'\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Removes an event listener from the object. */\r\n\tpublic function removeEventListener(type:String, listener:Function):Void\r\n\t{\r\n\t\tif (_eventListeners != null) \r\n\t\t{\r\n\t\t\tvar listeners:Array<Function> = _eventListeners.get(type);\r\n\t\t\tvar numListeners:Int = (listeners != null) ? listeners.length:0;\r\n\t\t\t\r\n\t\t\tif (numListeners > 0) \r\n\t\t\t{\r\n\t\t\t\t// we must not modify the original vector, but work on a copy.\r\n\t\t\t\t// (see comment in 'invokeEvent')\r\n\t\t\t\t\r\n\t\t\t\tvar index:Int = Lambda.indexOf(listeners, listener);\r\n\t\t\t\t\r\n\t\t\t\tif (index != -1) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar restListeners:Array<Function> = listeners.splice(0, index);\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (i in index + 1...numListeners){restListeners[i - 1] = listeners[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t_eventListeners.set(type, restListeners);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Removes all event listeners with a certain type, or all of them if type is null. \r\n\t *  Be careful when removing all event listeners: you never know who else was listening. */\r\n\tpublic function removeEventListeners(type:String = null):Void\r\n\t{\r\n\t\tif (type != null && _eventListeners != null) \r\n\t\t\t_eventListeners.remove(type);\r\n\t\telse\r\n\t\t\t_eventListeners = null;\r\n\t}\r\n\t\r\n\t/** Dispatches an event to all objects that have registered listeners for its type. \r\n\t *  If an event with enabled 'bubble' property is dispatched to a display object, it will \r\n\t *  travel up along the line of parents, until it either hits the root object or someone\r\n\t *  stops its propagation manually. */\r\n\tpublic function dispatchEvent(event:Event):Void\r\n\t{\r\n\t\tvar bubbles:Bool = event.bubbles;\r\n\t\t\r\n\t\tif (!bubbles && (_eventListeners == null || !_eventListeners.exists(event.type))) {\r\n\t\t\treturn;  // no need to do anything;\r\n\t\t}\r\n\t\t\r\n\t\t// we save the current target and restore it later;\r\n\t\t// this allows users to re-dispatch events without creating a clone.\r\n\t\t\r\n\t\tvar previousTarget:EventDispatcher = event.target;\r\n\t\tevent.setTarget(this);\r\n\t\t\r\n\t\tif (bubbles && Std.is(this, DisplayObject)) bubbleEvent(event)\r\n\t\telse\t\t\t\t\t\t\t\t\t\tinvokeEvent(event);\r\n\t\t\r\n\t\tif (previousTarget != null) {\r\n\t\t\tevent.setTarget(previousTarget);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @private\r\n\t *  Invokes an event on the current object. This method does not do any bubbling, nor\r\n\t *  does it back-up and restore the previous target on the event. The 'dispatchEvent' \r\n\t *  method uses this method internally. */\r\n\t@:allow(starling.events)\r\n\tprivate function invokeEvent(event:Event):Bool\r\n\t{\r\n\t\tvar listeners:Array<Function> = (_eventListeners != null) ?\r\n\t\t\t_eventListeners[event.type] : null;\r\n\t\t\r\n\t\tvar numListeners:Int = (listeners == null) ? 0 : listeners.length;\r\n\t\t\r\n\t\tif (numListeners != 0) \r\n\t\t{\r\n\t\t\tevent.setCurrentTarget(this);\r\n\t\t\t\r\n\t\t\t// we can enumerate directly over the vector, because:\r\n\t\t\t// when somebody modifies the list while we're looping, \"addEventListener\" is not\r\n\t\t\t// problematic, and \"removeEventListener\" will create a new Vector, anyway.\r\n\t\t\t\r\n\t\t\tvar i:Int = numListeners - 1;\r\n\t\t\twhile (i >= 0) \r\n\t\t\t{\r\n\t\t\t\tvar listener:Function = listeners[i];\r\n\t\t\t\t#if flash\r\n\t\t\t\t\tvar numArgs:Int = untyped listener[\"length\"];\r\n\t\t\t\t\tif (numArgs == 0) listener();\r\n\t\t\t\t\telse if (numArgs == 1) {\r\n\t\t\t\t\t\tlistener(event);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse listener(event, event.data);\r\n\t\t\t\t#else\r\n\t\t\t\t\tif (listener != null) listener(event, event.data);\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\tif (event.stopsImmediatePropagation) \r\n\t\t\t\t\treturn true;\r\n\t\t\t\t\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn event.stopsPropagation;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.events)\r\n\tprivate function bubbleEvent(event:Event):Void\r\n\t{\r\n\t\t// we determine the bubble chain before starting to invoke the listeners.\r\n\t\t// that way, changes done by the listeners won't affect the bubble chain.\r\n\t\t\r\n\t\tvar chain:Array<EventDispatcher>;\r\n\t\tvar element:DisplayObject = cast(this, DisplayObject);\r\n\t\tvar length:Int = 1;\r\n\t\t\r\n\t\tif (sBubbleChains.length > 0) {chain = sBubbleChains.pop();chain[0] = element;\r\n\t\t}\r\n\t\telse chain = [element];\r\n\t\t\r\n\t\twhile ((element = element.parent) != null)\r\n\t\t\tchain[cast(length++, Int)] = element;\r\n\t\t\r\n\t\tfor (i in 0...length){\r\n\t\t\tvar stopPropagation:Bool = chain[i].invokeEvent(event);\r\n\t\t\tif (stopPropagation)\t\t\t\t break;\r\n\t\t}\r\n\t\t\r\n\t\tchain.splice(0, chain.length);\r\n\t\tsBubbleChains[sBubbleChains.length] = chain;\r\n\t}\r\n\t\r\n\t/** Dispatches an event with the given parameters to all objects that have registered \r\n\t *  listeners for the given type. The method uses an internal pool of event objects to \r\n\t *  avoid allocations. */\r\n\tpublic function dispatchEventWith(type:String, bubbles:Bool = false, data:Dynamic = null):Void\r\n\t{\r\n\t\tvar _hasEventListener:Bool = hasEventListener(type);\r\n\t\tif (bubbles || _hasEventListener) \r\n\t\t{\r\n\t\t\tvar event:Event = Event.fromPool(type, bubbles, data);\r\n\t\t\tdispatchEvent(event);\r\n\t\t\tEvent.toPool(event);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** If called with one argument, figures out if there are any listeners registered for\r\n\t *  the given event type. If called with two arguments, also determines if a specific\r\n\t *  listener is registered. */\r\n\tpublic function hasEventListener(type:String, listener:Function = null):Bool\r\n\t{\r\n\t\tvar listeners:Array<Function> = (_eventListeners != null) ? _eventListeners.get(type):null;\r\n\t\tif (listeners == null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tif (listener != null) {\r\n\t\t\t\tfor (i in 0...listeners.length) if (listeners[i] == listener) return true;\r\n\t\t\t\treturn false;// Lambda.indexOf(listeners, listener) != -1\r\n\t\t\t}\r\n\t\t\telse return listeners.length != 0;\r\n\t\t}\r\n\t}\r\n}\r\n","package openfl.geom; #if !openfl_legacy\r\n\r\n\r\nimport lime.math.Matrix3;\r\nimport lime.utils.Float32Array;\r\nimport openfl.geom.Point;\r\n\r\n\r\nclass Matrix {\r\n\t\r\n\t\r\n\tprivate static var __identity = new Matrix ();\r\n\tprivate static var __temp = new Matrix ();\r\n\t\r\n\tpublic var a:Float;\r\n\tpublic var b:Float;\r\n\tpublic var c:Float;\r\n\tpublic var d:Float;\r\n\tpublic var tx:Float;\r\n\tpublic var ty:Float;\r\n\t\r\n\tprivate var __array:Float32Array;\r\n\t\r\n\t\r\n\tpublic function new (a:Float = 1, b:Float = 0, c:Float = 0, d:Float = 1, tx:Float = 0, ty:Float = 0) {\r\n\t\t\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clone ():Matrix {\r\n\t\t\r\n\t\treturn new Matrix (a, b, c, d, tx, ty);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function concat (m:Matrix):Void {\r\n\t\t\r\n\t\tvar a1 = a * m.a + b * m.c;\r\n\t\tb = a * m.b + b * m.d;\r\n\t\ta = a1;\r\n\t\t\r\n\t\tvar c1 = c * m.a + d * m.c;\r\n\t\td = c * m.b + d * m.d;\r\n\t\tc = c1;\r\n\t\t\r\n\t\tvar tx1 = tx * m.a + ty * m.c + m.tx;\r\n\t\tty = tx * m.b + ty * m.d + m.ty;\r\n\t\ttx = tx1;\r\n\t\t\r\n\t\t//__cleanValues ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyColumnFrom (column:Int, vector3D:Vector3D):Void {\r\n\t\t\r\n\t\tif (column > 2) {\r\n\t\t\t\r\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\r\n\t\t\t\r\n\t\t} else if (column == 0) {\r\n\t\t\t\r\n\t\t\ta = vector3D.x;\r\n\t\t\tc = vector3D.y;\r\n\t\t\t\r\n\t\t}else if (column == 1) {\r\n\t\t\t\r\n\t\t\tb = vector3D.x;\r\n\t\t\td = vector3D.y;\r\n\t\t\t\r\n\t\t}else {\r\n\t\t\t\r\n\t\t\ttx = vector3D.x;\r\n\t\t\tty = vector3D.y;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyColumnTo (column:Int, vector3D:Vector3D):Void {\r\n\t\t\r\n\t\tif (column > 2) {\r\n\t\t\t\r\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\r\n\t\t\t\r\n\t\t} else if (column == 0) {\r\n\t\t\t\r\n\t\t\tvector3D.x = a;\r\n\t\t\tvector3D.y = c;\r\n\t\t\tvector3D.z = 0;\r\n\t\t\t\r\n\t\t} else if (column == 1) {\r\n\t\t\t\r\n\t\t\tvector3D.x = b;\r\n\t\t\tvector3D.y = d;\r\n\t\t\tvector3D.z = 0;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvector3D.x = tx;\r\n\t\t\tvector3D.y = ty;\r\n\t\t\tvector3D.z = 1;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyFrom (sourceMatrix:Matrix):Void {\r\n\t\t\r\n\t\ta = sourceMatrix.a;\r\n\t\tb = sourceMatrix.b;\r\n\t\tc = sourceMatrix.c;\r\n\t\td = sourceMatrix.d;\r\n\t\ttx = sourceMatrix.tx;\r\n\t\tty = sourceMatrix.ty;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyRowFrom (row:Int, vector3D:Vector3D):Void {\r\n\t\t\r\n\t\tif (row > 2) {\r\n\t\t\t\r\n\t\t\tthrow \"Row \" + row + \" out of bounds (2)\";\r\n\t\t\t\r\n\t\t} else if (row == 0) {\r\n\t\t\t\r\n\t\t\ta = vector3D.x;\r\n\t\t\tc = vector3D.y;\r\n\t\t\t\r\n\t\t} else if (row == 1) {\r\n\t\t\t\r\n\t\t\tb = vector3D.x;\r\n\t\t\td = vector3D.y;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\ttx = vector3D.x;\r\n\t\t\tty = vector3D.y;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyRowTo (row:Int, vector3D:Vector3D):Void {\r\n\t\t\r\n\t\tif (row > 2) {\r\n\t\t\t\r\n\t\t\tthrow \"Row \" + row + \" out of bounds (2)\";\r\n\t\t\t\r\n\t\t} else if (row == 0) {\r\n\t\t\t\r\n\t\t\tvector3D.x = a;\r\n\t\t\tvector3D.y = b;\r\n\t\t\tvector3D.z = tx;\r\n\t\t\t\r\n\t\t} else if (row == 1) {\r\n\t\t\t\r\n\t\t\tvector3D.x = c;\r\n\t\t\tvector3D.y = d;\r\n\t\t\tvector3D.z = ty;\r\n\t\t\t\r\n\t\t}else {\r\n\t\t\t\r\n\t\t\tvector3D.setTo (0, 0, 1);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function createBox (scaleX:Float, scaleY:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {\r\n\t\t\r\n\t\t//identity ();\r\n\t\t//rotate (rotation);\r\n\t\t//scale (scaleX, scaleY);\r\n\t\t//translate (tx, ty);\r\n\t\t\r\n\t\tif (rotation != 0) {\r\n\t\t\t\r\n\t\t\tvar cos = Math.cos (rotation);\r\n\t\t\tvar sin = Math.sin (rotation);\r\n\t\t\t\r\n\t\t\ta = cos * scaleX;\r\n\t\t\tb = sin * scaleY;\r\n\t\t\tc = -sin * scaleX;\r\n\t\t\td = cos * scaleY;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\ta = scaleX;\r\n\t\t\tb = 0;\r\n\t\t\tc = 0;\r\n\t\t\td = scaleY;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function createGradientBox (width:Float, height:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {\r\n\t\t\r\n\t\ta = width / 1638.4;\r\n\t\td = height / 1638.4;\r\n\t\t\r\n\t\t// rotation is clockwise\r\n\t\tif (rotation != 0) {\r\n\t\t\t\r\n\t\t\tvar cos = Math.cos (rotation);\r\n\t\t\tvar sin = Math.sin (rotation);\r\n\t\t\t\r\n\t\t\tb = sin * d;\r\n\t\t\tc = -sin * a;\r\n\t\t\ta *= cos;\r\n\t\t\td *= cos;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tb = 0;\r\n\t\t\tc = 0;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.tx = tx + width / 2;\r\n\t\tthis.ty = ty + height / 2;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function deltaTransformPoint (point:Point):Point {\r\n\t\t\r\n\t\treturn new Point (point.x * a + point.y * c, point.x * b + point.y * d);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function equals (matrix):Bool {\r\n\t\t\r\n\t\treturn (matrix != null && tx == matrix.tx && ty == matrix.ty && a == matrix.a && b == matrix.b && c == matrix.c && d == matrix.d);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function identity ():Void {\r\n\t\t\r\n\t\ta = 1;\r\n\t\tb = 0;\r\n\t\tc = 0;\r\n\t\td = 1;\r\n\t\ttx = 0;\r\n\t\tty = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function invert ():Matrix {\r\n\t\t\r\n\t\tvar norm = a * d - b * c;\r\n\t\t\r\n\t\tif (norm == 0) {\r\n\t\t\t\r\n\t\t\ta = b = c = d = 0;\r\n\t\t\ttx = -tx;\r\n\t\t\tty = -ty;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tnorm = 1.0 / norm;\r\n\t\t\tvar a1 = d * norm;\r\n\t\t\td = a * norm;\r\n\t\t\ta = a1;\r\n\t\t\tb *= -norm;\r\n\t\t\tc *= -norm;\r\n\t\t\t\r\n\t\t\tvar tx1 = - a * tx - c * ty;\r\n\t\t\tty = - b * tx - d * ty;\r\n\t\t\ttx = tx1;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t//__cleanValues ();\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function rotate (theta:Float):Void {\r\n\t\t\r\n\t\t/*\r\n\t\t   Rotate object \"after\" other transforms\r\n\t\t\t\r\n\t\t   [  a  b   0 ][  ma mb  0 ]\r\n\t\t   [  c  d   0 ][  mc md  0 ]\r\n\t\t   [  tx ty  1 ][  mtx mty 1 ]\r\n\t\t\t\r\n\t\t   ma = md = cos\r\n\t\t   mb = sin\r\n\t\t   mc = -sin\r\n\t\t   mtx = my = 0\r\n\t\t\t\r\n\t\t */\r\n\t\t\r\n\t\tvar cos = Math.cos (theta);\r\n\t\tvar sin = Math.sin (theta);\r\n\t\t\r\n\t\tvar a1 = a * cos - b * sin;\r\n\t\tb = a * sin + b * cos;\r\n\t\ta = a1;\r\n\t\t\r\n\t\tvar c1 = c * cos - d * sin;\r\n\t\td = c * sin + d * cos;\r\n\t\tc = c1;\r\n\t\t\r\n\t\tvar tx1 = tx * cos - ty * sin;\r\n\t\tty = tx * sin + ty * cos;\r\n\t\ttx = tx1;\r\n\t\t\r\n\t\t//__cleanValues ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function scale (sx:Float, sy:Float):Void {\r\n\t\t\r\n\t\t/*\r\n\t\t\t\r\n\t\t   Scale object \"after\" other transforms\r\n\t\t\t\r\n\t\t   [  a  b   0 ][  sx  0   0 ]\r\n\t\t   [  c  d   0 ][  0   sy  0 ]\r\n\t\t   [  tx ty  1 ][  0   0   1 ]\r\n\t\t */\r\n\t\t\r\n\t\ta *= sx;\r\n\t\tb *= sy;\r\n\t\tc *= sx;\r\n\t\td *= sy;\r\n\t\ttx *= sx;\r\n\t\tty *= sy;\r\n\t\t\r\n\t\t//__cleanValues ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function setRotation (theta:Float, scale:Float = 1):Void {\r\n\t\t\r\n\t\ta = Math.cos (theta) * scale;\r\n\t\tc = Math.sin (theta) * scale;\r\n\t\tb = -c;\r\n\t\td = a;\r\n\t\t\r\n\t\t//__cleanValues ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setTo (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float):Void {\r\n\t\t\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\tthis.d = d;\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function to3DString (roundPixels:Bool = false):String {\r\n\t\t\r\n\t\tif (roundPixels) {\r\n\t\t\t\r\n\t\t\treturn 'matrix3d($a, $b, 0, 0, $c, $d, 0, 0, 0, 0, 1, 0, ${Std.int (tx)}, ${Std.int (ty)}, 0, 1)';\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn 'matrix3d($a, $b, 0, 0, $c, $d, 0, 0, 0, 0, 1, 0, $tx, $ty, 0, 1)';\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function toMozString () {\r\n\t\t\r\n\t\treturn 'matrix($a, $b, $c, $d, ${tx}px, ${ty}px)';\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function toString ():String {\r\n\t\t\r\n\t\treturn 'matrix($a, $b, $c, $d, $tx, $ty)';\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function transformPoint (pos:Point):Point {\r\n\t\t\r\n\t\treturn new Point (__transformX (pos.x, pos.y), __transformY (pos.x, pos.y));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function translate (dx:Float, dy:Float):Void {\r\n\t\t\r\n\t\ttx += dx;\r\n\t\tty += dy;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function toArray (transpose:Bool = false):Float32Array {\r\n\t\t\r\n\t\tif (__array == null) {\r\n\t\t\t\r\n\t\t\t__array = new Float32Array (9);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (transpose) {\r\n\t\t\t\r\n\t\t\t__array[0] = a;\r\n\t\t\t__array[1] = b;\r\n\t\t\t__array[2] = 0;\r\n\t\t\t__array[3] = c;\r\n\t\t\t__array[4] = d;\r\n\t\t\t__array[5] = 0;\r\n\t\t\t__array[6] = tx;\r\n\t\t\t__array[7] = ty;\r\n\t\t\t__array[8] = 1;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t__array[0] = a;\r\n\t\t\t__array[1] = c;\r\n\t\t\t__array[2] = tx;\r\n\t\t\t__array[3] = b;\r\n\t\t\t__array[4] = d;\r\n\t\t\t__array[5] = ty;\r\n\t\t\t__array[6] = 0;\r\n\t\t\t__array[7] = 0;\r\n\t\t\t__array[8] = 1;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __array;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function __cleanValues ():Void {\r\n\t\t\r\n\t\ta = Math.round (a * 1000) / 1000;\r\n\t\tb = Math.round (b * 1000) / 1000;\r\n\t\tc = Math.round (c * 1000) / 1000;\r\n\t\td = Math.round (d * 1000) / 1000;\r\n\t\ttx = Math.round (tx * 10) / 10;\r\n\t\tty = Math.round (ty * 10) / 10;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __toMatrix3 ():Matrix3 {\r\n\t\t\r\n\t\treturn new Matrix3 (a, b, c, d, tx, ty);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function __transformInversePoint (point:Point):Void {\r\n\t\t\r\n\t\tvar norm = a * d - b * c;\r\n\t\t\r\n\t\tif (norm == 0) {\r\n\t\t\t\r\n\t\t\tpoint.x = -tx;\r\n\t\t\tpoint.y = -ty;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar px = (1.0 / norm) * (c * (ty - point.y) + d * (point.x - tx));\r\n\t\t\tpoint.y = (1.0 / norm) * ( a * (point.y - ty) + b * (tx - point.x) );\r\n\t\t\tpoint.x = px;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function __transformInverseX (px:Float, py:Float):Float {\r\n\t\t\r\n\t\tvar norm = a * d - b * c;\r\n\t\t\r\n\t\tif (norm == 0) {\r\n\t\t\t\r\n\t\t\treturn -tx;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn (1.0 / norm) * (c * (ty - py) + d * (px - tx));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function __transformInverseY (px:Float, py:Float):Float {\r\n\t\t\r\n\t\tvar norm = a * d - b * c;\r\n\t\t\r\n\t\tif (norm == 0) {\r\n\t\t\t\r\n\t\t\treturn -ty;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn (1.0 / norm) * (a * (py - ty) + b * (tx - px));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function __transformPoint (point:Point):Void {\r\n\t\t\r\n\t\tvar px = point.x;\r\n\t\tvar py = point.y;\r\n\t\t\r\n\t\tpoint.x = __transformX (px, py);\r\n\t\tpoint.y = __transformY (px, py);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function __transformX (px:Float, py:Float):Float {\r\n\t\t\r\n\t\treturn px * a + py * c + tx;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function __transformY (px:Float, py:Float):Float {\r\n\t\t\r\n\t\treturn px * b + py * d + ty;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function __translateTransformed (px:Float, py:Float):Void {\r\n\t\t\r\n\t\ttx = __transformX (px, py);\r\n\t\tty = __transformY (px, py);\r\n\t\t\r\n\t\t//__cleanValues ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Matrix = openfl._legacy.geom.Matrix;\r\n#end","package lime.utils;\n\n#if (js && !display)\n\n    @:forward\n    @:arrayAccess\n    abstract Float32Array(js.html.Float32Array)\n        from js.html.Float32Array\n        to js.html.Float32Array {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 4;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n            if(elements != null) {\n                this = new js.html.Float32Array( elements );\n            } else if(array != null) {\n                this = new js.html.Float32Array( untyped array );\n            } else if(view != null) {\n                this = new js.html.Float32Array( untyped view );\n            } else if(buffer != null) {\n                if(len == null) {\n                    this = new js.html.Float32Array( buffer, byteoffset );\n                } else {\n                    this = new js.html.Float32Array( buffer, byteoffset, len );\n                }\n            } else {\n                this = null;\n            }\n        }\n\n        @:arrayAccess inline function __set(idx:Int, val:Float) return this[idx] = val;\n        @:arrayAccess inline function __get(idx:Int) : Float return this[idx];\n\n\n            //non spec haxe conversions\n        public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Float32Array {\n            if(byteOffset == null) return new js.html.Float32Array(cast bytes.getData());\n            if(len == null) return new js.html.Float32Array(cast bytes.getData(), byteOffset);\n            return new js.html.Float32Array(cast bytes.getData(), byteOffset, len);\n        }\n\n        public function toBytes() : haxe.io.Bytes {\n            #if (haxe_ver < 3.2)\n            return @:privateAccess new haxe.io.Bytes( this.byteLength, cast new js.html.Uint8Array(this.buffer) );\n            #else\n                return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\n            #end\n    }\n\n        function toString() return this != null ? 'Float32Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#else\n\n    import lime.utils.ArrayBuffer;\n    import lime.utils.ArrayBufferView;\n\n@:forward()\n@:arrayAccess\nabstract Float32Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\n\n    public inline static var BYTES_PER_ELEMENT : Int = 4;\n\n    public var length (get, never):Int;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n\n            if(elements != null) {\n                this = new ArrayBufferView( elements, Float32 );\n            } else if(array != null) {\n                this = new ArrayBufferView(0, Float32).initArray(array);\n            } else if(view != null) {\n                this = new ArrayBufferView(0, Float32).initTypedArray(view);\n            } else if(buffer != null) {\n                this = new ArrayBufferView(0, Float32).initBuffer(buffer, byteoffset, len);\n            } else {\n                throw \"Invalid constructor arguments for Float32Array\";\n            }\n        }\n\n//Public API\n\n    public inline function subarray( begin:Int, end:Null<Int> = null) : Float32Array return this.subarray(begin, end);\n\n\n            //non spec haxe conversions\n        public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Float32Array {\n            return new Float32Array(bytes, byteOffset, len);\n        }\n\n        public function toBytes() : haxe.io.Bytes {\n            return this.buffer;\n        }\n\n//Internal\n\n        function toString() return this != null ? 'Float32Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    inline function get_length() return this.length;\n\n\n    @:noCompletion\n    @:arrayAccess\n    public inline function __get(idx:Int) : Float {\n        return ArrayBufferIO.getFloat32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT) );\n    }\n\n    @:noCompletion\n    @:arrayAccess\n    public inline function __set(idx:Int, val:Float) : Float {\n        return ArrayBufferIO.setFloat32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT), val);\n    }\n\n}\n\n#end //!js","package openfl.geom;\r\n\r\n\r\nimport openfl.geom.Orientation3D;\r\nimport openfl.geom.Vector3D;\r\nimport openfl.errors.Error;\r\nimport openfl.Vector;\r\n\r\n\r\nclass Matrix3D {\r\n\t\r\n\t\r\n\tpublic var determinant (get, null):Float;\r\n\tpublic var position (get, set):Vector3D;\r\n\tpublic var rawData:Vector<Float>;\r\n\t\r\n\t\r\n\tpublic function new (v:Vector<Float> = null) {\r\n\t\t\r\n\t\tif (v != null && v.length == 16) {\r\n\t\t\t\r\n\t\t\trawData = v;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\trawData = [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function append (lhs:Matrix3D):Void {\r\n\t\t\r\n\t\tvar m111:Float = this.rawData[0], m121:Float = this.rawData[4], m131:Float = this.rawData[8], m141:Float = this.rawData[12],\r\n\t\t\tm112:Float = this.rawData[1], m122:Float = this.rawData[5], m132:Float = this.rawData[9], m142:Float = this.rawData[13],\r\n\t\t\tm113:Float = this.rawData[2], m123:Float = this.rawData[6], m133:Float = this.rawData[10], m143:Float = this.rawData[14],\r\n\t\t\tm114:Float = this.rawData[3], m124:Float = this.rawData[7], m134:Float = this.rawData[11], m144:Float = this.rawData[15],\r\n\t\t\tm211:Float = lhs.rawData[0], m221:Float = lhs.rawData[4], m231:Float = lhs.rawData[8], m241:Float = lhs.rawData[12],\r\n\t\t\tm212:Float = lhs.rawData[1], m222:Float = lhs.rawData[5], m232:Float = lhs.rawData[9], m242:Float = lhs.rawData[13],\r\n\t\t\tm213:Float = lhs.rawData[2], m223:Float = lhs.rawData[6], m233:Float = lhs.rawData[10], m243:Float = lhs.rawData[14],\r\n\t\t\tm214:Float = lhs.rawData[3], m224:Float = lhs.rawData[7], m234:Float = lhs.rawData[11], m244:Float = lhs.rawData[15];\r\n\t\t\r\n\t\trawData[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\r\n\t\trawData[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\r\n\t\trawData[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\r\n\t\trawData[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\r\n\t\t\r\n\t\trawData[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\r\n\t\trawData[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\r\n\t\trawData[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\r\n\t\trawData[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\r\n\t\t\r\n\t\trawData[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\r\n\t\trawData[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\r\n\t\trawData[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\r\n\t\trawData[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\r\n\t\t\r\n\t\trawData[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\r\n\t\trawData[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\r\n\t\trawData[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\r\n\t\trawData[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function appendRotation (degrees:Float, axis:Vector3D, pivotPoint:Vector3D = null):Void {\r\n\t\t\r\n\t\tvar m = __getAxisRotation (axis.x, axis.y, axis.z, degrees);\r\n\t\t\r\n\t\tif (pivotPoint != null) {\r\n\t\t\t\r\n\t\t\tvar p = pivotPoint;\r\n\t\t\tm.appendTranslation (p.x, p.y, p.z);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.append (m);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function appendScale (xScale:Float, yScale:Float, zScale:Float):Void {\r\n\t\t\r\n\t\tthis.append (new Matrix3D ([ xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0 ]));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function appendTranslation (x:Float, y:Float, z:Float):Void {\r\n\t\t\r\n\t\trawData[12] += x;\r\n\t\trawData[13] += y;\r\n\t\trawData[14] += z;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clone ():Matrix3D {\r\n\t\t\r\n\t\treturn new Matrix3D (this.rawData.copy ());\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyColumnFrom (column:Int, vector3D:Vector3D):Void {\r\n\t\t\r\n\t\tswitch (column) {\r\n\t\t\t\r\n\t\t\tcase 0:\r\n\t\t\t\t\r\n\t\t\t\trawData[0] = vector3D.x;\r\n\t\t\t\trawData[1] = vector3D.y;\r\n\t\t\t\trawData[2] = vector3D.z;\r\n\t\t\t\trawData[3] = vector3D.w;\r\n\t\t\t\r\n\t\t\tcase 1:\r\n\t\t\t\t\r\n\t\t\t\trawData[4] = vector3D.x;\r\n\t\t\t\trawData[5] = vector3D.y;\r\n\t\t\t\trawData[6] = vector3D.z;\r\n\t\t\t\trawData[7] = vector3D.w;\r\n\t\t\t\r\n\t\t\tcase 2:\r\n\t\t\t\t\r\n\t\t\t\trawData[8] = vector3D.x;\r\n\t\t\t\trawData[9] = vector3D.y;\r\n\t\t\t\trawData[10] = vector3D.z;\r\n\t\t\t\trawData[11] = vector3D.w;\r\n\t\t\t\r\n\t\t\tcase 3:\r\n\t\t\t\t\r\n\t\t\t\trawData[12] = vector3D.x;\r\n\t\t\t\trawData[13] = vector3D.y;\r\n\t\t\t\trawData[14] = vector3D.z;\r\n\t\t\t\trawData[15] = vector3D.w;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyColumnTo (column:Int, vector3D:Vector3D):Void {\r\n\t\t\r\n\t\tswitch (column) {\r\n\t\t\t\r\n\t\t\tcase 0:\r\n\t\t\t\t\r\n\t\t\t\tvector3D.x = rawData[0];\r\n\t\t\t\tvector3D.y = rawData[1];\r\n\t\t\t\tvector3D.z = rawData[2];\r\n\t\t\t\tvector3D.w = rawData[3];\r\n\t\t\t\r\n\t\t\tcase 1:\r\n\t\t\t\t\r\n\t\t\t\tvector3D.x = rawData[4];\r\n\t\t\t\tvector3D.y = rawData[5];\r\n\t\t\t\tvector3D.z = rawData[6];\r\n\t\t\t\tvector3D.w = rawData[7];\r\n\t\t\t\r\n\t\t\tcase 2:\r\n\t\t\t\t\r\n\t\t\t\tvector3D.x = rawData[8];\r\n\t\t\t\tvector3D.y = rawData[9];\r\n\t\t\t\tvector3D.z = rawData[10];\r\n\t\t\t\tvector3D.w = rawData[11];\r\n\t\t\t\r\n\t\t\tcase 3:\r\n\t\t\t\t\r\n\t\t\t\tvector3D.x = rawData[12];\r\n\t\t\t\tvector3D.y = rawData[13];\r\n\t\t\t\tvector3D.z = rawData[14];\r\n\t\t\t\tvector3D.w = rawData[15];\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyFrom (other:Matrix3D):Void {\r\n\t\t\r\n\t\trawData = other.rawData.copy();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyRawDataFrom (vector:Vector<Float>, index:UInt = 0, transpose:Bool = false):Void {\r\n\t\t\r\n\t\tif (transpose) {\r\n\t\t\t\r\n\t\t\tthis.transpose ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar length = vector.length - index;\r\n\t\t\r\n\t\tfor (i in 0...length) {\r\n\t\t\t\r\n\t\t\trawData[i] = vector[i + index];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (transpose) {\r\n\t\t\t\r\n\t\t\tthis.transpose ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyRawDataTo (vector:Vector<Float>, index:UInt = 0, transpose:Bool = false):Void {\r\n\t\t\r\n\t\tif (transpose) {\r\n\t\t\t\r\n\t\t\tthis.transpose ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (i in 0...rawData.length) {\r\n\t\t\t\r\n\t\t\tvector[i + index] = rawData[i];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (transpose) {\r\n\t\t\t\r\n\t\t\tthis.transpose ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyRowFrom (row:UInt, vector3D:Vector3D):Void {\r\n\t\t\r\n\t\tswitch (row) {\r\n\t\t\t\r\n\t\t\tcase 0:\r\n\t\t\t\t\r\n\t\t\t\trawData[0] = vector3D.x;\r\n\t\t\t\trawData[4] = vector3D.y;\r\n\t\t\t\trawData[8] = vector3D.z;\r\n\t\t\t\trawData[12] = vector3D.w;\r\n\t\t\t\r\n\t\t\tcase 1:\r\n\t\t\t\t\r\n\t\t\t\trawData[1] = vector3D.x;\r\n\t\t\t\trawData[5] = vector3D.y;\r\n\t\t\t\trawData[9] = vector3D.z;\r\n\t\t\t\trawData[13] = vector3D.w;\r\n\t\t\t\r\n\t\t\tcase 2:\r\n\t\t\t\t\r\n\t\t\t\trawData[2] = vector3D.x;\r\n\t\t\t\trawData[6] = vector3D.y;\r\n\t\t\t\trawData[10] = vector3D.z;\r\n\t\t\t\trawData[14] = vector3D.w;\r\n\t\t\t\r\n\t\t\tcase 3:\r\n\t\t\t\t\r\n\t\t\t\trawData[3] = vector3D.x;\r\n\t\t\t\trawData[7] = vector3D.y;\r\n\t\t\t\trawData[11] = vector3D.z;\r\n\t\t\t\trawData[15] = vector3D.w;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyRowTo (row:Int, vector3D:Vector3D):Void {\r\n\t\t\r\n\t\tswitch (row) {\r\n\t\t\t\r\n\t\t\tcase 0:\r\n\t\t\t\t\r\n\t\t\t\tvector3D.x = rawData[0];\r\n\t\t\t\tvector3D.y = rawData[4];\r\n\t\t\t\tvector3D.z = rawData[8];\r\n\t\t\t\tvector3D.w = rawData[12];\r\n\t\t\t\r\n\t\t\tcase 1:\r\n\t\t\t\t\r\n\t\t\t\tvector3D.x = rawData[1];\r\n\t\t\t\tvector3D.y = rawData[5];\r\n\t\t\t\tvector3D.z = rawData[9];\r\n\t\t\t\tvector3D.w = rawData[13];\r\n\t\t\t\r\n\t\t\tcase 2:\r\n\t\t\t\t\r\n\t\t\t\tvector3D.x = rawData[2];\r\n\t\t\t\tvector3D.y = rawData[6];\r\n\t\t\t\tvector3D.z = rawData[10];\r\n\t\t\t\tvector3D.w = rawData[14];\r\n\t\t\t\r\n\t\t\tcase 3:\r\n\t\t\t\t\r\n\t\t\t\tvector3D.x = rawData[3];\r\n\t\t\t\tvector3D.y = rawData[7];\r\n\t\t\t\tvector3D.z = rawData[11];\r\n\t\t\t\tvector3D.w = rawData[15];\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyToMatrix3D (other:Matrix3D):Void {\r\n\t\t\r\n\t\tother.rawData = rawData.copy ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function create2D (x:Float, y:Float, scale:Float = 1, rotation:Float = 0):Matrix3D {\r\n\t\t\r\n\t\tvar theta = rotation * Math.PI / 180.0;\r\n\t\tvar c = Math.cos (theta);\r\n\t\tvar s = Math.sin (theta);\r\n\t\t\r\n\t\treturn new Matrix3D ([ c * scale, -s * scale, 0, 0, s * scale, c * scale, 0, 0, 0, 0, 1, 0, x, y, 0, 1 ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function createABCD (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float):Matrix3D {\r\n\t\t\r\n\t\treturn new Matrix3D ([ a, b, 0, 0, c, d, 0, 0, 0, 0, 1, 0, tx, ty, 0, 1 ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function createOrtho (x0:Float, x1:Float, y0:Float, y1:Float, zNear:Float, zFar:Float):Matrix3D {\r\n\t\t\r\n\t\tvar sx = 1.0 / (x1 - x0);\r\n\t\tvar sy = 1.0 / (y1 - y0);\r\n\t\tvar sz = 1.0 / (zFar - zNear);\r\n\t\t\r\n\t\treturn new Matrix3D ([ 2.0 * sx, 0, 0, 0, 0, 2.0 * sy, 0, 0, 0, 0, -2.0 * sz, 0, -(x0 + x1) * sx, -(y0 + y1) * sy, -(zNear + zFar) * sz, 1 ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function decompose (?orientationStyle:Orientation3D):Vector<Vector3D> {\r\n\t\t\r\n\t\tif (orientationStyle == null) {\r\n\t\t\t\r\n\t\t\torientationStyle = Orientation3D.EULER_ANGLES;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar vec = new Vector<Vector3D> ();\r\n\t\tvar m = clone ();\r\n\t\tvar mr = m.rawData.copy ();\r\n\t\t\r\n\t\tvar pos = new Vector3D (mr[12], mr[13], mr[14]);\r\n\t\tmr[12] = 0;\r\n\t\tmr[13] = 0;\r\n\t\tmr[14] = 0;\r\n\t\t\r\n\t\tvar scale = new Vector3D ();\r\n\t\t\r\n\t\tscale.x = Math.sqrt(mr[0] * mr[0] + mr[1] * mr[1] + mr[2] * mr[2]);\r\n\t\tscale.y = Math.sqrt(mr[4] * mr[4] + mr[5] * mr[5] + mr[6] * mr[6]);\r\n\t\tscale.z = Math.sqrt(mr[8] * mr[8] + mr[9] * mr[9] + mr[10] * mr[10]);\r\n\t\t\r\n\t\tif (mr[0] * (mr[5] * mr[10] - mr[6] * mr[9]) - mr[1] * (mr[4] * mr[10] - mr[6] * mr[8]) + mr[2] * (mr[4] * mr[9] - mr[5] * mr[8]) < 0) {\r\n\t\t\t\r\n\t\t\tscale.z = -scale.z;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tmr[0] /= scale.x;\r\n\t\tmr[1] /= scale.x;\r\n\t\tmr[2] /= scale.x;\r\n\t\tmr[4] /= scale.y;\r\n\t\tmr[5] /= scale.y;\r\n\t\tmr[6] /= scale.y;\r\n\t\tmr[8] /= scale.z;\r\n\t\tmr[9] /= scale.z;\r\n\t\tmr[10] /= scale.z;\r\n\t\t\r\n\t\tvar rot = new Vector3D ();\r\n\t\t\r\n\t\tswitch (orientationStyle) {\r\n\t\t\t\r\n\t\t\tcase Orientation3D.AXIS_ANGLE:\r\n\t\t\t\t\r\n\t\t\t\trot.w = Math.acos ((mr[0] + mr[5] + mr[10] - 1) / 2);\r\n\t\t\t\t\r\n\t\t\t\tvar len = Math.sqrt ((mr[6] - mr[9]) * (mr[6] - mr[9]) + (mr[8] - mr[2]) * (mr[8] - mr[2]) + (mr[1] - mr[4]) * (mr[1] - mr[4]));\r\n\t\t\t\t\r\n\t\t\t\tif (len != 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\trot.x = (mr[6] - mr[9]) / len;\r\n\t\t\t\t\trot.y = (mr[8] - mr[2]) / len;\r\n\t\t\t\t\trot.z = (mr[1] - mr[4]) / len;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\trot.x = rot.y = rot.z = 0;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tcase Orientation3D.QUATERNION:\r\n\t\t\t\t\r\n\t\t\t\tvar tr = mr[0] + mr[5] + mr[10];\r\n\t\t\t\t\r\n\t\t\t\tif (tr > 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\trot.w = Math.sqrt (1 + tr) / 2;\r\n\t\t\t\t\t\r\n\t\t\t\t\trot.x = (mr[6] - mr[9]) / (4 * rot.w);\r\n\t\t\t\t\trot.y = (mr[8] - mr[2]) / (4 * rot.w);\r\n\t\t\t\t\trot.z = (mr[1] - mr[4]) / (4 * rot.w);\r\n\t\t\t\t\t\r\n\t\t\t\t} else if ((mr[0] > mr[5]) && (mr[0] > mr[10])) {\r\n\t\t\t\t\t\r\n\t\t\t\t\trot.x = Math.sqrt (1 + mr[0] - mr[5] - mr[10]) / 2;\r\n\t\t\t\t\t\r\n\t\t\t\t\trot.w = (mr[6] - mr[9]) / (4 * rot.x);\r\n\t\t\t\t\trot.y = (mr[1] + mr[4]) / (4 * rot.x);\r\n\t\t\t\t\trot.z = (mr[8] + mr[2]) / (4 * rot.x);\r\n\t\t\t\t\t\r\n\t\t\t\t} else if (mr[5] > mr[10]) {\r\n\t\t\t\t\t\r\n\t\t\t\t\trot.y = Math.sqrt (1 + mr[5] - mr[0] - mr[10]) / 2;\r\n\t\t\t\t\t\r\n\t\t\t\t\trot.x = (mr[1] + mr[4]) / (4 * rot.y);\r\n\t\t\t\t\trot.w = (mr[8] - mr[2]) / (4 * rot.y);\r\n\t\t\t\t\trot.z = (mr[6] + mr[9]) / (4 * rot.y);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\trot.z = Math.sqrt (1 + mr[10] - mr[0] - mr[5]) / 2;\r\n\t\t\t\t\t\r\n\t\t\t\t\trot.x = (mr[8] + mr[2]) / (4 * rot.z);\r\n\t\t\t\t\trot.y = (mr[6] + mr[9]) / (4 * rot.z);\r\n\t\t\t\t\trot.w = (mr[1] - mr[4]) / (4 * rot.z);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tcase Orientation3D.EULER_ANGLES:\r\n\t\t\t\t\r\n\t\t\t\trot.y = Math.asin (-mr[2]);\r\n\t\t\t\t\r\n\t\t\t\tif (mr[2] != 1 && mr[2] != -1) {\r\n\t\t\t\t\t\r\n\t\t\t\t\trot.x = Math.atan2 (mr[6], mr[10]);\r\n\t\t\t\t\trot.z = Math.atan2 (mr[1], mr[0]);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\trot.z = 0;\r\n\t\t\t\t\trot.x = Math.atan2 (mr[4], mr[5]);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvec.push (pos);\r\n\t\tvec.push (rot);\r\n\t\tvec.push (scale);\r\n\t\t\r\n\t\treturn vec;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function deltaTransformVector (v:Vector3D):Vector3D {\r\n\t\t\r\n\t\tvar x:Float = v.x, y:Float = v.y, z:Float = v.z;\r\n\t\t\r\n\t\treturn new Vector3D ((x * rawData[0] + y * rawData[4] + z * rawData[8] + rawData[3]), (x * rawData[1] + y * rawData[5] + z * rawData[9] + rawData[7]), (x * rawData[2] + y * rawData[6] + z * rawData[10] + rawData[11]), 0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function identity ():Void {\r\n\t\t\r\n\t\trawData = [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function interpolate (thisMat:Matrix3D, toMat:Matrix3D, percent:Float):Matrix3D {\r\n\t\t\r\n\t\tvar m = new Matrix3D ();\r\n\t\t\r\n\t\tfor (i in 0...16) {\r\n\t\t\t\r\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i]) * percent;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn m;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function interpolateTo (toMat:Matrix3D, percent:Float):Void {\r\n\t\t\r\n\t\tfor (i in 0...16) {\r\n\t\t\t\r\n\t\t\trawData[i] = rawData[i] + (toMat.rawData[i] - rawData[i]) * percent;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function invert ():Bool {\r\n\t\t\r\n\t\tvar d = determinant;\r\n\t\tvar invertable = Math.abs (d) > 0.00000000001;\r\n\t\t\r\n\t\tif (invertable) {\r\n\t\t\t\r\n\t\t\td = 1 / d;\r\n\t\t\t\r\n\t\t\tvar m11:Float = rawData[0]; var m21:Float = rawData[4]; var m31:Float = rawData[8]; var m41:Float = rawData[12];\r\n\t\t\tvar m12:Float = rawData[1]; var m22:Float = rawData[5]; var m32:Float = rawData[9]; var m42:Float = rawData[13];\r\n\t\t\tvar m13:Float = rawData[2]; var m23:Float = rawData[6]; var m33:Float = rawData[10]; var m43:Float = rawData[14];\r\n\t\t\tvar m14:Float = rawData[3]; var m24:Float = rawData[7]; var m34:Float = rawData[11]; var m44:Float = rawData[15];\r\n\t\t\t\r\n\t\t\trawData[0] = d * (m22 * (m33 * m44 - m43 * m34) - m32 * (m23 * m44 - m43 * m24) + m42 * (m23 * m34 - m33 * m24));\r\n\t\t\trawData[1] = -d * (m12 * (m33 * m44 - m43 * m34) - m32 * (m13 * m44 - m43 * m14) + m42 * (m13 * m34 - m33 * m14));\r\n\t\t\trawData[2] = d * (m12 * (m23 * m44 - m43 * m24) - m22 * (m13 * m44 - m43 * m14) + m42 * (m13 * m24 - m23 * m14));\r\n\t\t\trawData[3] = -d * (m12 * (m23 * m34 - m33 * m24) - m22 * (m13 * m34 - m33 * m14) + m32 * (m13 * m24 - m23 * m14));\r\n\t\t\trawData[4] = -d * (m21 * (m33 * m44 - m43 * m34) - m31 * (m23 * m44 - m43 * m24) + m41 * (m23 * m34 - m33 * m24));\r\n\t\t\trawData[5] = d * (m11 * (m33 * m44 - m43 * m34) - m31 * (m13 * m44 - m43 * m14) + m41 * (m13 * m34 - m33 * m14));\r\n\t\t\trawData[6] = -d * (m11 * (m23 * m44 - m43 * m24) - m21 * (m13 * m44 - m43 * m14) + m41 * (m13 * m24 - m23 * m14));\r\n\t\t\trawData[7] = d * (m11 * (m23 * m34 - m33 * m24) - m21 * (m13 * m34 - m33 * m14) + m31 * (m13 * m24 - m23 * m14));\r\n\t\t\trawData[8] = d * (m21 * (m32 * m44 - m42 * m34) - m31 * (m22 * m44 - m42 * m24) + m41 * (m22 * m34 - m32 * m24));\r\n\t\t\trawData[9] = -d * (m11 * (m32 * m44 - m42 * m34) - m31 * (m12 * m44 - m42 * m14) + m41 * (m12 * m34 - m32 * m14));\r\n\t\t\trawData[10] = d * (m11 * (m22 * m44 - m42 * m24) - m21 * (m12 * m44 - m42 * m14) + m41 * (m12 * m24 - m22 * m14));\r\n\t\t\trawData[11] = -d * (m11 * (m22 * m34 - m32 * m24) - m21 * (m12 * m34 - m32 * m14) + m31 * (m12 * m24 - m22 * m14));\r\n\t\t\trawData[12] = -d * (m21 * (m32 * m43 - m42 * m33) - m31 * (m22 * m43 - m42 * m23) + m41 * (m22 * m33 - m32 * m23));\r\n\t\t\trawData[13] = d * (m11 * (m32 * m43 - m42 * m33) - m31 * (m12 * m43 - m42 * m13) + m41 * (m12 * m33 - m32 * m13));\r\n\t\t\trawData[14] = -d * (m11 * (m22 * m43 - m42 * m23) - m21 * (m12 * m43 - m42 * m13) + m41 * (m12 * m23 - m22 * m13));\r\n\t\t\trawData[15] = d * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn invertable;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function pointAt (pos:Vector3D, at:Vector3D = null, up:Vector3D = null):Void {\r\n\t\t\r\n\t\tif (at == null) {\r\n\t\t\t\r\n\t\t\tat = new Vector3D (0, 0, -1);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (up == null) {\r\n\t\t\t\r\n\t\t\tup = new Vector3D (0, -1, 0);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar dir = at.subtract (pos);\r\n\t\tvar vup = up.clone ();\r\n\t\tvar right:Vector3D;\r\n\t\t\r\n\t\tdir.normalize ();\r\n\t\tvup.normalize ();\r\n\t\t\r\n\t\tvar dir2 = dir.clone ();\r\n\t\tdir2.scaleBy (vup.dotProduct (dir));\r\n\t\t\r\n\t\tvup = vup.subtract (dir2);\r\n\t\t\r\n\t\tif (vup.length > 0) {\r\n\t\t\t\r\n\t\t\tvup.normalize ();\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tif (dir.x != 0) {\r\n\t\t\t\t\r\n\t\t\t\tvup = new Vector3D (-dir.y, dir.x, 0);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tvup = new Vector3D (1, 0, 0);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tright = vup.crossProduct (dir);\r\n\t\tright.normalize ();\r\n\t\t\r\n\t\trawData[0] = right.x;\r\n\t\trawData[4] = right.y;\r\n\t\trawData[8] = right.z;\r\n\t\trawData[12] = 0.0;\r\n\t\trawData[1] = vup.x;\r\n\t\trawData[5] = vup.y;\r\n\t\trawData[9] = vup.z;\r\n\t\trawData[13] = 0.0;\r\n\t\trawData[2] = dir.x;\r\n\t\trawData[6] = dir.y;\r\n\t\trawData[10] = dir.z;\r\n\t\trawData[14] = 0.0;\r\n\t\trawData[3] = pos.x;\r\n\t\trawData[7] = pos.y;\r\n\t\trawData[11] = pos.z;\r\n\t\trawData[15] = 1.0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function prepend (rhs:Matrix3D):Void {\r\n\t\t\r\n\t\tvar m111:Float = rhs.rawData[0], m121:Float = rhs.rawData[4], m131:Float = rhs.rawData[8], m141:Float = rhs.rawData[12],\r\n\t\t\tm112:Float = rhs.rawData[1], m122:Float = rhs.rawData[5], m132:Float = rhs.rawData[9], m142:Float = rhs.rawData[13],\r\n\t\t\tm113:Float = rhs.rawData[2], m123:Float = rhs.rawData[6], m133:Float = rhs.rawData[10], m143:Float = rhs.rawData[14],\r\n\t\t\tm114:Float = rhs.rawData[3], m124:Float = rhs.rawData[7], m134:Float = rhs.rawData[11], m144:Float = rhs.rawData[15],\r\n\t\t\tm211:Float = this.rawData[0], m221:Float = this.rawData[4], m231:Float = this.rawData[8], m241:Float = this.rawData[12],\r\n\t\t\tm212:Float = this.rawData[1], m222:Float = this.rawData[5], m232:Float = this.rawData[9], m242:Float = this.rawData[13],\r\n\t\t\tm213:Float = this.rawData[2], m223:Float = this.rawData[6], m233:Float = this.rawData[10], m243:Float = this.rawData[14],\r\n\t\t\tm214:Float = this.rawData[3], m224:Float = this.rawData[7], m234:Float = this.rawData[11], m244:Float = this.rawData[15];\r\n\t\t\r\n\t\trawData[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\r\n\t\trawData[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\r\n\t\trawData[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\r\n\t\trawData[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\r\n\t\t\r\n\t\trawData[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\r\n\t\trawData[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\r\n\t\trawData[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\r\n\t\trawData[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\r\n\t\t\r\n\t\trawData[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\r\n\t\trawData[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\r\n\t\trawData[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\r\n\t\trawData[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\r\n\t\t\r\n\t\trawData[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\r\n\t\trawData[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\r\n\t\trawData[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\r\n\t\trawData[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function prependRotation (degrees:Float, axis:Vector3D, pivotPoint:Vector3D = null):Void {\r\n\t\t\r\n\t\tvar m = __getAxisRotation (axis.x, axis.y, axis.z, degrees);\r\n\t\t\r\n\t\tif (pivotPoint != null) {\r\n\t\t\t\r\n\t\t\tvar p = pivotPoint;\r\n\t\t\tm.appendTranslation (p.x, p.y, p.z);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.prepend (m);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function prependScale (xScale:Float, yScale:Float, zScale:Float):Void {\r\n\t\t\r\n\t\tthis.prepend (new Matrix3D ([xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0]));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function prependTranslation (x:Float, y:Float, z:Float):Void {\r\n\t\t\r\n\t\tvar m = new Matrix3D ();\r\n\t\tm.position = new Vector3D (x, y, z);\r\n\t\tthis.prepend (m);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function recompose (components:Vector<Vector3D>, ?orientationStyle:Orientation3D):Bool {\r\n\t\t\r\n\t\tif (components.length < 3 || components[2].x == 0 || components[2].y == 0 || components[2].z == 0) {\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t}\r\n\t  \r\n\t\tif (orientationStyle == null) {\r\n\t\t\t\r\n\t\t\torientationStyle = Orientation3D.EULER_ANGLES;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tidentity ();\r\n\t\t\r\n\t\tvar scale = [];\r\n\t\tscale[0] = scale[1] = scale[2] = components[2].x;\r\n\t\tscale[4] = scale[5] = scale[6] = components[2].y;\r\n\t\tscale[8] = scale[9] = scale[10] = components[2].z;\r\n\t\t\r\n\t\tswitch (orientationStyle) {\r\n\t\t\t\r\n\t\t\tcase Orientation3D.EULER_ANGLES:\r\n\t\t\t\t\r\n\t\t\t\tvar cx = Math.cos (components[1].x);\r\n\t\t\t\tvar cy = Math.cos (components[1].y);\r\n\t\t\t\tvar cz = Math.cos (components[1].z);\r\n\t\t\t\tvar sx = Math.sin (components[1].x);\r\n\t\t\t\tvar sy = Math.sin (components[1].y);\r\n\t\t\t\tvar sz = Math.sin (components[1].z);\r\n\t\t\t\t\r\n\t\t\t\trawData[0] = cy * cz * scale[0];\r\n\t\t\t\trawData[1] = cy * sz * scale[1];\r\n\t\t\t\trawData[2] = - sy * scale[2];\r\n\t\t\t\trawData[3] = 0;\r\n\t\t\t\trawData[4] = (sx * sy * cz - cx * sz) * scale[4];\r\n\t\t\t\trawData[5] = (sx * sy * sz + cx * cz) * scale[5];\r\n\t\t\t\trawData[6] = sx * cy * scale[6];\r\n\t\t\t\trawData[7] = 0;\r\n\t\t\t\trawData[8] = (cx * sy * cz + sx * sz) * scale[8];\r\n\t\t\t\trawData[9] = (cx * sy * sz - sx * cz) * scale[9];\r\n\t\t\t\trawData[10] = cx * cy * scale[10];\r\n\t\t\t\trawData[11] = 0;\r\n\t\t\t\trawData[12] = components[0].x;\r\n\t\t\t\trawData[13] = components[0].y;\r\n\t\t\t\trawData[14] = components[0].z;\r\n\t\t\t\trawData[15] = 1;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t\tvar x = components[1].x;\r\n\t\t\t\tvar y = components[1].y;\r\n\t\t\t\tvar z = components[1].z;\r\n\t\t\t\tvar w = components[1].w;\r\n\t\t\t\t\r\n\t\t\t\tif (Type.enumEq(orientationStyle, Orientation3D.AXIS_ANGLE)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tx *= Math.sin (w / 2);\r\n\t\t\t\t\ty *= Math.sin (w / 2);\r\n\t\t\t\t\tz *= Math.sin (w / 2);\r\n\t\t\t\t\tw = Math.cos (w / 2);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\trawData[0] = (1 - 2 * y * y - 2 * z * z) * scale[0];\r\n\t\t\t\trawData[1] = (2 * x * y + 2 * w * z) * scale[1];\r\n\t\t\t\trawData[2] = (2 * x * z - 2 * w * y) * scale[2];\r\n\t\t\t\trawData[3] = 0;\r\n\t\t\t\trawData[4] = (2 * x * y - 2 * w * z) * scale[4];\r\n\t\t\t\trawData[5] = (1 - 2 * x * x - 2 * z * z) * scale[5];\r\n\t\t\t\trawData[6] = (2 * y * z + 2 * w * x) * scale[6];\r\n\t\t\t\trawData[7] = 0;\r\n\t\t\t\trawData[8] = (2 * x * z + 2 * w * y) * scale[8];\r\n\t\t\t\trawData[9] = (2 * y * z - 2 * w * x) * scale[9];\r\n\t\t\t\trawData[10] = (1 - 2 * x * x - 2 * y * y) * scale[10];\r\n\t\t\t\trawData[11] = 0;\r\n\t\t\t\trawData[12] = components[0].x;\r\n\t\t\t\trawData[13] = components[0].y;\r\n\t\t\t\trawData[14] = components[0].z;\r\n\t\t\t\trawData[15] = 1;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (components[2].x == 0) {\r\n\t\t\t\r\n\t\t\trawData[0] = 1e-15;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (components[2].y == 0) {\r\n\t\t\t\r\n\t\t\trawData[5] = 1e-15;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (components[2].z == 0) {\r\n\t\t\t\r\n\t\t\trawData[10] = 1e-15;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn !(components[2].x == 0 || components[2].y == 0 || components[2].y == 0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function transformVector (v:Vector3D):Vector3D {\r\n\t\t\r\n\t\tvar x = v.x;\r\n\t\tvar y = v.y;\r\n\t\tvar z = v.z;\r\n\t\t\r\n\t\treturn new Vector3D ((x * rawData[0] + y * rawData[4] + z * rawData[8] + rawData[12]), (x * rawData[1] + y * rawData[5] + z * rawData[9] + rawData[13]), (x * rawData[2] + y * rawData[6] + z * rawData[10] + rawData[14]), (x * rawData[3] + y * rawData[7] + z * rawData[11] + rawData[15]));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function transformVectors (vin:Vector<Float>, vout:Vector<Float>):Void {\r\n\t\t\r\n\t\tvar i = 0;\r\n\t\tvar x, y, z;\r\n\t\t\r\n\t\twhile (i + 3 <= vin.length) {\r\n\t\t\t\r\n\t\t\tx = vin[i];\r\n\t\t\ty = vin[i + 1];\r\n\t\t\tz = vin[i + 2];\r\n\t\t\t\r\n\t\t\tvout[i] = x * rawData[0] + y * rawData[4] + z * rawData[8] + rawData[12];\r\n\t\t\tvout[i + 1] = x * rawData[1] + y * rawData[5] + z * rawData[9] + rawData[13];\r\n\t\t\tvout[i + 2] = x * rawData[2] + y * rawData[6] + z * rawData[10] + rawData[14];\r\n\t\t\t\r\n\t\t\ti += 3;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function transpose ():Void {\r\n\t\t\r\n\t\tvar oRawData = rawData.copy ();\r\n\t\trawData[1] = oRawData[4];\r\n\t\trawData[2] = oRawData[8];\r\n\t\trawData[3] = oRawData[12];\r\n\t\trawData[4] = oRawData[1];\r\n\t\trawData[6] = oRawData[9];\r\n\t\trawData[7] = oRawData[13];\r\n\t\trawData[8] = oRawData[2];\r\n\t\trawData[9] = oRawData[6];\r\n\t\trawData[11] = oRawData[14];\r\n\t\trawData[12] = oRawData[3];\r\n\t\trawData[13] = oRawData[7];\r\n\t\trawData[14] = oRawData[11];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function __getAxisRotation (x:Float, y:Float, z:Float, degrees:Float):Matrix3D {\r\n\t\t\r\n\t\tvar m = new Matrix3D ();\r\n\t\t\r\n\t\tvar a1 = new Vector3D (x, y, z);\r\n\t\tvar rad = -degrees * (Math.PI / 180);\r\n\t\tvar c = Math.cos (rad);\r\n\t\tvar s = Math.sin (rad);\r\n\t\tvar t = 1.0 - c;\r\n\t\t\r\n\t\tm.rawData[0] = c + a1.x * a1.x * t;\r\n\t\tm.rawData[5] = c + a1.y * a1.y * t;\r\n\t\tm.rawData[10] = c + a1.z * a1.z * t;\r\n\t\t\r\n\t\tvar tmp1 = a1.x * a1.y * t;\r\n\t\tvar tmp2 = a1.z * s;\r\n\t\tm.rawData[4] = tmp1 + tmp2;\r\n\t\tm.rawData[1] = tmp1 - tmp2;\r\n\t\ttmp1 = a1.x * a1.z * t;\r\n\t\ttmp2 = a1.y * s;\r\n\t\tm.rawData[8] = tmp1 - tmp2;\r\n\t\tm.rawData[2] = tmp1 + tmp2;\r\n\t\ttmp1 = a1.y * a1.z * t;\r\n\t\ttmp2 = a1.x*s;\r\n\t\tm.rawData[9] = tmp1 + tmp2;\r\n\t\tm.rawData[6] = tmp1 - tmp2;\r\n\t\t\r\n\t\treturn m;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tpublic function get_determinant ():Float {\r\n\t\t\r\n\t\treturn 1 * ((rawData[0] * rawData[5] - rawData[4] * rawData[1]) * (rawData[10] * rawData[15] - rawData[14] * rawData[11]) \r\n\t\t\t- (rawData[0] * rawData[9] - rawData[8] * rawData[1]) * (rawData[6] * rawData[15] - rawData[14] * rawData[7])\r\n\t\t\t+ (rawData[0] * rawData[13] - rawData[12] * rawData[1]) * (rawData[6] * rawData[11] - rawData[10] * rawData[7])\r\n\t\t\t+ (rawData[4] * rawData[9] - rawData[8] * rawData[5]) * (rawData[2] * rawData[15] - rawData[14] * rawData[3])\r\n\t\t\t- (rawData[4] * rawData[13] - rawData[12] * rawData[5]) * (rawData[2] * rawData[11] - rawData[10] * rawData[3])\r\n\t\t\t+ (rawData[8] * rawData[13] - rawData[12] * rawData[9]) * (rawData[2] * rawData[7] - rawData[6] * rawData[3]));\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function get_position ():Vector3D {\r\n\t\t\r\n\t\treturn new Vector3D (rawData[12], rawData[13], rawData[14]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function set_position (val:Vector3D):Vector3D {\r\n\t\t\r\n\t\trawData[12] = val.x;\r\n\t\trawData[13] = val.y;\r\n\t\trawData[14] = val.z;\r\n\t\treturn val;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n#if cpp\nusing cpp.NativeArray;\n#end\n\nprivate typedef VectorData<T> = #if flash10\n\tflash.Vector<T>\n#elseif neko\n\tneko.NativeArray<T>\n#elseif cs\n\tcs.NativeArray<T>\n#elseif java\n\tjava.NativeArray<T>\n#else\n\tArray<T>\n#end\n\n/**\n\tA Vector is a storage of fixed size. It can be faster than Array on some\n\ttargets, and is never slower.\n**/\nabstract Vector<T>(VectorData<T>) {\n\t/**\n\t\tCreates a new Vector of length `length`.\n\n\t\tInitially `this` Vector contains `length` neutral elements:\n\n\t\t- always null on dynamic targets\n\t\t- 0, 0.0 or false for Int, Float and Bool respectively on static targets\n\t\t- null for other types on static targets\n\n\t\tIf `length` is less than or equal to 0, the result is unspecified.\n\t**/\n\tpublic inline function new(length:Int) {\n\t\t#if flash10\n\t\t\tthis = new flash.Vector<T>(length, true);\n\t\t#elseif neko\n\t\t\tthis = untyped __dollar__amake(length);\n\t\t#elseif js\n\t\t\tthis = untyped __new__(Array, length);\n\t\t#elseif cs\n\t\t\tthis = new cs.NativeArray(length);\n\t\t#elseif java\n\t\t\tthis = new java.NativeArray(length);\n\t\t#elseif cpp\n\t\t\tthis = new Array<T>();\n\t\t\tuntyped this.__SetSizeExact(length);\n\t\t#elseif python\n\t\t\tthis = python.Syntax.pythonCode(\"[{0}]*{1}\", null, length);\n\t\t#else\n\t\t\tthis = [];\n\t\t\tuntyped this.length = length;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the value at index `index`.\n\n\t\tIf `index` is negative or exceeds `this.length`, the result is\n\t\tunspecified.\n\t**/\n\t@:arrayAccess public inline function get(index:Int):T {\n\t\t#if cpp\n\t\treturn this.unsafeGet(index);\n\t\t#elseif python\n\t\treturn python.internal.ArrayImpl.unsafeGet(this, index);\n\t\t#else\n\t\treturn this[index];\n\t\t#end\n\t}\n\n\t/**\n\t\tSets the value at index `index` to `val`.\n\n\t\tIf `index` is negative or exceeds `this.length`, the result is\n\t\tunspecified.\n\t**/\n\t@:arrayAccess public inline function set(index:Int, val:T):T {\n\t\t#if cpp\n\t\treturn this.unsafeSet(index,val);\n\t\t#elseif python\n\t\treturn python.internal.ArrayImpl.unsafeSet(this, index, val);\n\t\t#else\n\t\treturn this[index] = val;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the length of `this` Vector.\n\t**/\n\tpublic var length(get, never):Int;\n\n\tinline function get_length():Int {\n\t\t#if neko\n\t\t\treturn untyped __dollar__asize(this);\n\t\t#elseif cs\n\t\t\treturn this.Length;\n\t\t#elseif java\n\t\t\treturn this.length;\n\t\t#elseif python\n\t\t\treturn this.length;\n\t\t#else\n\t\t\treturn untyped this.length;\n\t\t#end\n\t}\n\n\t/**\n\t\tCopies `length` of elements from `src` Vector, beginning at `srcPos` to\n\t\t`dest` Vector, beginning at `destPos`\n\n\t\tThe results are unspecified if `length` results in out-of-bounds access,\n\t\tor if `src` or `dest` are null\n\t**/\n\tpublic static #if (cs || java || neko || cpp) inline #end function blit<T>(src:Vector<T>, srcPos:Int, dest:Vector<T>, destPos:Int, len:Int):Void\n\t{\n\t\t#if neko\n\t\t\tuntyped __dollar__ablit(dest,destPos,src,srcPos,len);\n\t\t#elseif java\n\t\t\tjava.lang.System.arraycopy(src, srcPos, dest, destPos, len);\n\t\t#elseif cs\n\t\t\tcs.system.Array.Copy(cast src, srcPos,cast dest, destPos, len);\n\t\t#elseif cpp\n\t\t\tdest.toData().blit(destPos,src.toData(), srcPos,len);\n\t\t#else\n\t\t\tfor (i in 0...len)\n\t\t\t{\n\t\t\t\tdest[destPos + i] = src[srcPos + i];\n\t\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tCreates a new Array, copy the content from the Vector to it, and returns it.\n\t**/\n\tpublic #if (flash || cpp) inline #end function toArray():Array<T> {\n\t\t#if cpp\n\t\t\treturn this.copy();\n\t\t#elseif python\n\t\t\treturn this.copy();\n\t\t#else\n\t\t\tvar a = new Array();\n\t\t\tvar len = length;\n\t\t\t#if (neko)\n\t\t\t// prealloc good size\n\t\t\tif( len > 0 ) a[len - 1] = get(0);\n\t\t\t#end\n\t\t\tfor( i in 0...len )\n\t\t\t\ta[i] = get(i);\n\t\t\treturn a;\n\t\t#end\n\t}\n\n\t/**\n\t\tExtracts the data of `this` Vector.\n\n\t\tThis returns the internal representation type.\n\t**/\n\tpublic inline function toData():VectorData<T>\n\t\treturn cast this;\n\n\t/**\n\t\tInitializes a new Vector from `data`.\n\n\t\tSince `data` is the internal representation of Vector, this is a no-op.\n\n\t\tIf `data` is null, the corresponding Vector is also `null`.\n\t**/\n\tstatic public inline function fromData<T>(data:VectorData<T>):Vector<T>\n\t\treturn cast data;\n\n\t/**\n\t\tCreates a new Vector by copying the elements of `array`.\n\n\t\tThis always creates a copy, even on platforms where the internal\n\t\trepresentation is Array.\n\n\t\tThe elements are not copied and retain their identity, so\n\t\t`a[i] == Vector.fromArrayCopy(a).get(i)` is true for any valid i.\n\n\t\tIf `array` is null, the result is unspecified.\n\t**/\n\t#if as3 @:extern #end\n\tstatic public inline function fromArrayCopy<T>(array:Array<T>):Vector<T> {\n\t\t#if python\n\t\treturn cast array.copy();\n\t\t#elseif flash10\n\t\treturn fromData(flash.Vector.ofArray(array));\n\t\t#elseif java\n\t\treturn fromData(java.Lib.nativeArray(array,false));\n\t\t#elseif cs\n\t\treturn fromData(cs.Lib.nativeArray(array,false));\n\t\t#else\n\t\t// TODO: Optimize this for flash (and others?)\n\t\tvar vec = new Vector<T>(array.length);\n\t\tfor (i in 0...array.length)\n\t\t\tvec.set(i, array[i]);\n\t\treturn vec;\n\t\t#end\n\t}\n}\n","package openfl; #if (!flash || display)\r\n\r\n\r\n// Haxe abstracts resolve to Dynamic types, which are slower on C++\r\n// ...by using Array directly, instead of haxe.ds.Vector, we can eliminate\r\n// some of this performance overhead, but not completely. Should probably\r\n// switch to the haxe.ds.Vector type for every target when this is resolved\r\n\r\n#if java\r\n\r\n@:arrayAccess abstract Vector<T>(Array<T>) from Array<T> to Array<T> {\r\n\t\r\n\t\r\n\tpublic var length (get, set):Int;\r\n\tpublic var fixed (get, set):Bool;\r\n\t\r\n\t\r\n\tpublic function new (?length:Int, ?fixed:Bool):Void {\r\n\t\t\r\n\t\tthis = new Array<T> ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function concat (?a:Array<T>):Vector<T> {\r\n\t\t\r\n\t\treturn this.concat (a);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copy ():Vector<T> {\r\n\t\t\r\n\t\treturn this.copy ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function iterator<T> ():Iterator<T> {\r\n\t\t\r\n\t\treturn this.iterator ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function join (sep:String):String {\r\n\t\t\r\n\t\treturn this.join (sep);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function pop ():Null<T> {\r\n\t\t\r\n\t\treturn this.pop ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function push (x:T):Int {\r\n\t\t\r\n\t\treturn this.push (x);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function reverse ():Void {\r\n\t\t\r\n\t\tthis.reverse ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function shift ():Null<T> {\r\n\t\t\r\n\t\treturn this.shift ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function unshift (x:T):Void {\r\n\t\t\r\n\t\tthis.unshift (x);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function slice (?pos:Int, ?end:Int):Vector<T> {\r\n\t\t\r\n\t\treturn this.slice (pos, end);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function sort (f:T -> T -> Int):Void {\r\n\t\t\r\n\t\tthis.sort (f);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function splice (pos:Int, len:Int):Vector<T> {\r\n\t\t\r\n\t\treturn this.splice (pos, len);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function toString ():String {\r\n\t\t\r\n\t\treturn this.toString ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function indexOf (x:T, ?from:Int = 0):Int {\r\n\t\t\r\n\t\tfor (i in from...this.length) {\r\n\t\t\t\r\n\t\t\tif (this[i] == x) {\r\n\t\t\t\t\r\n\t\t\t\treturn i;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn -1;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function lastIndexOf (x:T, ?from:Int = 0):Int {\r\n\t\t\r\n\t\tvar i = this.length - 1;\r\n\t\t\r\n\t\twhile (i >= from) {\r\n\t\t\t\r\n\t\t\tif (this[i] == x) return i;\r\n\t\t\ti--;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn -1;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline static function ofArray<T> (a:Array<Dynamic>):Vector<T> {\r\n\t\t\r\n\t\treturn new Vector<T> ().concat (cast a);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline static function convert<T,U> (v:Array<T>):Vector<U> {\r\n\t\t\r\n\t\treturn cast v;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t@:noCompletion private inline function get_length ():Int {\r\n\t\t\r\n\t\treturn this.length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function set_length (value:Int):Int {\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function get_fixed ():Bool {\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function set_fixed (value:Bool):Bool {\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\ntypedef VectorData<T> = Array<T>;\r\ntypedef VectorDataIterator<T> = Iterator<T>;\r\n\r\n\r\n#elseif (!cpp || display)\r\n\r\n\r\nabstract Vector<T>(VectorData<T>) {\r\n\t\r\n\t\r\n\tpublic var length (get, set):Int;\r\n\tpublic var fixed (get, set):Bool;\r\n\t\r\n\t\r\n\tpublic inline function new (?length:Int = 0, ?fixed:Bool = false):Void {\r\n\t\t\r\n\t\tthis = new VectorData<T> ();\r\n\t\t#if cpp\r\n\t\tthis.data = untyped (new Array<T>()).__SetSizeExact(length);\r\n\t\t#else\r\n\t\tthis.data = new haxe.ds.Vector<T> (length);\r\n\t\t#end\r\n\t\tthis.length = length;\r\n\t\tthis.fixed = fixed;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function concat (?a:VectorData<T>):Vector<T> {\r\n\t\t\r\n\t\tvar vectorData = new VectorData<T> ();\r\n\t\tvectorData.length = (a != null) ? this.length + a.length : this.length;\r\n\t\tvectorData.fixed = false;\r\n\t\t\r\n\t\t#if cpp\r\n\t\tvectorData.data = this.data.slice (0, this.length).concat (a.data);\r\n\t\t#else\r\n\t\tvectorData.data = new haxe.ds.Vector<T> (vectorData.length);\r\n\t\thaxe.ds.Vector.blit (this.data, 0, vectorData.data, 0, this.length);\r\n\t\tif (a != null) {\r\n\t\t\thaxe.ds.Vector.blit (a.data, 0, vectorData.data, this.length, a.length);\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t\treturn cast vectorData;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function copy ():Vector<T> {\r\n\t\t\r\n\t\tvar vectorData = new VectorData<T> ();\r\n\t\tvectorData.length = length;\r\n\t\tvectorData.fixed = fixed;\r\n\t\t#if cpp\r\n\t\tvectorData.data = this.data.copy ();\r\n\t\t#else\r\n\t\tvectorData.data = new haxe.ds.Vector<T> (length);\r\n\t\thaxe.ds.Vector.blit (this.data, 0, vectorData.data, 0, this.length);\r\n\t\t#end\r\n\t\treturn cast vectorData;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function iterator<T> ():Iterator<T> {\r\n\t\t\r\n\t\treturn new VectorDataIterator<T> (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function join (sep:String):String {\r\n\t\t\r\n\t\tvar output = \"\";\r\n\t\t\r\n\t\tfor (i in 0...this.length) {\r\n\t\t\t\r\n\t\t\tif (i > 0) output += sep;\r\n\t\t\toutput += this.data[i];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn output;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function pop ():Null<T> {\r\n\t\t\r\n\t\tvar value = null;\r\n\t\t\r\n\t\tif (!this.fixed) {\r\n\t\t\t\r\n\t\t\tif (this.length > 0) {\r\n\t\t\t\t\r\n\t\t\t\tthis.length--;\r\n\t\t\t\tvalue = this.data[this.length];\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function push (x:T):Int {\r\n\t\t\r\n\t\tif (!this.fixed) {\r\n\t\t\t\r\n\t\t\tthis.length++;\r\n\t\t\t\r\n\t\t\tif (this.data.length < this.length) {\r\n\t\t\t\t\r\n\t\t\t\t#if cpp\r\n\t\t\t\tuntyped (this.data).__SetSizeExact (this.data.length + 10);\r\n\t\t\t\t#else\r\n\t\t\t\tvar data = new haxe.ds.Vector<T> (this.data.length + 10);\r\n\t\t\t\thaxe.ds.Vector.blit (this.data, 0, data, 0, this.data.length);\r\n\t\t\t\tthis.data = data;\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.data[this.length - 1] = x;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn this.length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function reverse ():Void {\r\n\t\t\r\n\t\t#if cpp\r\n\t\tuntyped (this.data).__SetSizeExact (this.length);\r\n\t\tthis.data.reverse ();\r\n\t\t#else\r\n\t\tvar data = new haxe.ds.Vector<T> (this.length);\r\n\t\tfor (i in 0...this.length) {\r\n\t\t\tdata[this.length - 1 - i] = this.data[i];\r\n\t\t}\r\n\t\tthis.data = data;\r\n\t\t#end\r\n\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function shift ():Null<T> {\r\n\t\t\r\n\t\tif (!this.fixed && this.length > 0) {\r\n\t\t\t\r\n\t\t\tthis.length--;\r\n\t\t\t\r\n\t\t\t#if cpp\r\n\t\t\treturn this.data.shift ();\r\n\t\t\t#else\r\n\t\t\tvar value = this.data[0];\r\n\t\t\thaxe.ds.Vector.blit (this.data, 1, this.data, 0, this.length);\r\n\t\t\treturn value;\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function unshift (x:T):Void {\r\n\t\t\r\n\t\tif (!this.fixed) {\r\n\t\t\t\r\n\t\t\tthis.length++;\r\n\t\t\t\r\n\t\t\tif (this.data.length < this.length) {\r\n\t\t\t\t\r\n\t\t\t\t#if cpp\r\n\t\t\t\tuntyped (this.data).__SetSizeExact (this.length + 10);\r\n\t\t\t\t#else\r\n\t\t\t\tvar data = new haxe.ds.Vector<T> (this.length + 10);\r\n\t\t\t\thaxe.ds.Vector.blit (this.data, 0, data, 1, this.data.length);\r\n\t\t\t\tthis.data = data;\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t#if !cpp\r\n\t\t\t\thaxe.ds.Vector.blit (this.data, 0, this.data, 1, this.length - 1);\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#if cpp\r\n\t\t\tthis.data.unshift (x);\r\n\t\t\t#else\r\n\t\t\tthis.data[0] = x;\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function slice (?pos:Int = 0, ?end:Int = 0):Vector<T> {\r\n\t\t\r\n\t\tif (pos < 0) pos += this.length;\r\n\t\tif (end <= 0) end += this.length;\r\n\t\tif (end > this.length) end = this.length;\r\n\t\tvar length = end - pos;\r\n\t\tif (length <= 0 || length > this.length) length = this.length;\r\n\t\t\r\n\t\tvar vectorData = new VectorData<T> ();\r\n\t\tvectorData.length = end - pos;\r\n\t\tvectorData.fixed = true;\r\n\t\t#if cpp\r\n\t\tvectorData.data = this.data.slice (pos, end);\r\n\t\t#else\r\n\t\tvectorData.data = new haxe.ds.Vector<T> (length);\r\n\t\thaxe.ds.Vector.blit (this.data, pos, vectorData.data, 0, length);\r\n\t\t#end\r\n\t\treturn cast vectorData;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function sort (f:T -> T -> Int):Void {\r\n\t\t\r\n\t\t#if cpp\r\n\t\tthis.data.sort (f);\r\n\t\t#else\r\n\t\tvar array = this.data.toArray ();\r\n\t\tarray.sort (f);\r\n\t\tthis.data = haxe.ds.Vector.fromArrayCopy (array);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function splice (pos:Int, len:Int):Vector<T> {\r\n\t\t\r\n\t\tif (pos < 0) pos += this.length;\r\n\t\tif (pos + len > this.length) len = this.length - pos;\r\n\t\tif (len < 0) len = 0;\r\n\t\t\r\n\t\tvar vectorData = new VectorData<T> ();\r\n\t\tvectorData.length = len;\r\n\t\tvectorData.fixed = false;\r\n\t\t\r\n\t\t#if cpp\r\n\t\tvectorData.data = this.data.splice (pos, len);\r\n\t\t#else\r\n\t\tvectorData.data = new haxe.ds.Vector<T> (len);\r\n\t\thaxe.ds.Vector.blit (this.data, pos, vectorData.data, 0, len);\r\n\t\t#end\r\n\t\t\r\n\t\tif (len > 0) {\r\n\t\t\t\r\n\t\t\tthis.length -= len;\r\n\t\t\t#if !cpp\r\n\t\t\thaxe.ds.Vector.blit (this.data, pos + len, this.data, pos, this.length - pos);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn cast vectorData;\r\n\t\t//return this.splice (pos, len);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function toString ():String {\r\n\t\t\r\n\t\t#if cpp\r\n\t\treturn this.data.toString ();\r\n\t\t#else\r\n\t\treturn this.data.toArray ().toString ();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function indexOf (x:T, ?from:Int = 0):Int {\r\n\t\t\r\n\t\tvar value = -1;\r\n\t\t\r\n\t\tfor (i in from...this.length) {\r\n\t\t\t\r\n\t\t\tif (this.data[i] == x) {\r\n\t\t\t\t\r\n\t\t\t\tvalue = i;\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function lastIndexOf (x:T, ?from:Int = 0):Int {\r\n\t\t\r\n\t\tvar value = -1;\r\n\t\tvar i = this.length - 1;\r\n\t\t\r\n\t\twhile (i >= from) {\r\n\t\t\t\r\n\t\t\tif (this.data[i] == x) {\r\n\t\t\t\t\r\n\t\t\t\tvalue = i;\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ti--;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline static function ofArray<T> (a:Array<Dynamic>):Vector<T> {\r\n\t\t\r\n\t\tvar vectorData = new VectorData<T> ();\r\n\t\tvectorData.length = a.length;\r\n\t\tvectorData.fixed = true;\r\n\t\t#if cpp\r\n\t\tvectorData.data = cast a.copy ();\r\n\t\t#else\r\n\t\tvectorData.data = haxe.ds.Vector.fromArrayCopy (a);\r\n\t\t#end\r\n\t\treturn cast vectorData;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline static function convert<T,U> (v:Vector<T>):Vector<U> {\r\n\t\t\r\n\t\treturn cast v;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:arrayAccess public inline function get (index:Int):Null<T> {\r\n\t\t\r\n\t\treturn this.data[index];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:arrayAccess public inline function set (key:Int, value:T):T {\r\n\t\t\r\n\t\tif (!this.fixed) {\r\n\t\t\t\r\n\t\t\tif (key >= this.length) {\r\n\t\t\t\tthis.length = key + 1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this.data.length < this.length) {\r\n\t\t\t\t\r\n\t\t\t\tvar data = new haxe.ds.Vector<T> (this.data.length + 10);\r\n\t\t\t\thaxe.ds.Vector.blit (cast this.data, 0, data, 0, this.data.length);\r\n\t\t\t\tthis.data = cast data;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn this.data[key] = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:from public static inline function fromArray<T> (value:Array<T>):Vector<T> {\r\n\t\t\r\n\t\tvar vectorData = new VectorData<T> ();\r\n\t\tvectorData.length = value.length;\r\n\t\tvectorData.fixed = true;\r\n\t\t#if cpp\r\n\t\tvectorData.data = value.copy ();\r\n\t\t#else\r\n\t\tvectorData.data = haxe.ds.Vector.fromArrayCopy (value);\r\n\t\t#end\r\n\t\treturn cast vectorData;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:to public inline function toArray<T> ():Array<T> {\r\n\t\t\r\n\t\t#if cpp\r\n\t\treturn cast this.data;\r\n\t\t#else\r\n\t\tvar value = new Array ();\r\n\t\tfor (i in 0...this.data.length) {\r\n\t\t\tvalue.push (this.data[i]);\r\n\t\t}\r\n\t\treturn value;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:from public static inline function fromHaxeVector<T> (value:haxe.ds.Vector<T>):Vector<T> {\r\n\t\t\r\n\t\tvar vectorData = new VectorData<T> ();\r\n\t\tvectorData.length = value.length;\r\n\t\tvectorData.fixed = true;\r\n\t\t#if cpp\r\n\t\tvectorData.data = new Array ();\r\n\t\tuntyped (vectorData.data).__SetSize (value.length);\r\n\t\tfor (i in 0...value.length) {\r\n\t\t\tvectorData.data[i] = value[i];\r\n\t\t}\r\n\t\t#else\r\n\t\tvectorData.data = value;\r\n\t\t#end\r\n\t\treturn cast vectorData;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:to public inline function toHaxeVector<T> ():haxe.ds.Vector<T> {\r\n\t\t\r\n\t\t#if cpp\r\n\t\treturn haxe.ds.Vector.fromArrayCopy (this.data);\r\n\t\t#else\r\n\t\treturn this.data;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:from public static inline function fromVectorData<T> (value:VectorData<T>):Vector<T> {\r\n\t\t\r\n\t\treturn cast value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:to public inline function toVectorData<T> ():VectorData<T> {\r\n\t\t\r\n\t\treturn cast this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t@:noCompletion private inline function get_length ():Int {\r\n\t\t\r\n\t\treturn this.length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function set_length (value:Int):Int {\r\n\t\t\r\n\t\tif (!fixed) {\r\n\t\t\t\r\n\t\t\tif (value > this.length) {\r\n\t\t\t\t\r\n\t\t\t\t#if cpp\r\n\t\t\t\tuntyped (this.data).__SetSizeExact (value);\r\n\t\t\t\t#else\r\n\t\t\t\tvar data = new haxe.ds.Vector<T> (value);\r\n\t\t\t\thaxe.ds.Vector.blit (this.data, 0, data, 0, Std.int (Math.min (this.data.length, value)));\r\n\t\t\t\tthis.data = data;\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.length = value;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function get_fixed ():Bool {\r\n\t\t\r\n\t\treturn this.fixed;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function set_fixed (value:Bool):Bool {\r\n\t\t\r\n\t\treturn this.fixed = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n@:dox(hide) class VectorData<T> {\r\n\t\r\n\t\r\n\t#if cpp\r\n\tpublic var data:Array<T>;\r\n\t#else\r\n\tpublic var data:haxe.ds.Vector<T>;\r\n\t#end\r\n\tpublic var fixed:Bool;\r\n\tpublic var length:Int;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tlength = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n@:dox(hide) class VectorDataIterator<T> {\r\n\t\r\n\t\r\n\tprivate var index:Int;\r\n\tprivate var vectorData:VectorData<T>;\r\n\t\r\n\t\r\n\tpublic function new (data:VectorData<T>) {\r\n\t\t\r\n\t\tindex = 0;\r\n\t\tvectorData = data;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function hasNext ():Bool {\r\n\t\t\r\n\t\treturn index < vectorData.length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function next ():T {\r\n\t\t\r\n\t\treturn vectorData.data[index++];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\n\r\n\r\n#if (haxe_ver > 3.101)\r\nusing cpp.NativeArray;\r\n#end\r\n\r\n\r\n@:arrayAccess abstract Vector<T>(Array<T>) from Array<T> to Array<T> {\r\n\t\r\n\t\r\n\tpublic var length (get, set):Int;\r\n\tpublic var fixed (get, set):Bool;\r\n\t\r\n\t\r\n\tpublic inline function new (?length:Int, ?fixed:Bool):Void {\r\n\t\t\r\n\t\tthis = untyped (new Array<T> ()).__SetSizeExact (length);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function concat (?a:Array<T>):Vector<T> {\r\n\t\t\r\n\t\treturn this.concat (a);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function copy ():Vector<T> {\r\n\t\t\r\n\t\treturn this.copy ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function iterator<T> ():Iterator<T> {\r\n\t\t\r\n\t\treturn this.iterator ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function join (sep:String):String {\r\n\t\t\r\n\t\treturn this.join (sep);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function pop ():Null<T> {\r\n\t\t\r\n\t\treturn this.pop ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function push (x:T):Int {\r\n\t\t\r\n\t\treturn this.push (x);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function reverse ():Void {\r\n\t\t\r\n\t\tthis.reverse ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function shift ():Null<T> {\r\n\t\t\r\n\t\treturn this.shift ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function unshift (x:T):Void {\r\n\t\t\r\n\t\tthis.unshift (x);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function slice (?pos:Int, ?end:Int):Vector<T> {\r\n\t\t\r\n\t\treturn this.slice (pos, end);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function sort (f:T -> T -> Int):Void {\r\n\t\t\r\n\t\tthis.sort (f);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function splice (pos:Int, len:Int):Vector<T> {\r\n\t\t\r\n\t\treturn this.splice (pos, len);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function toString ():String {\r\n\t\t\r\n\t\treturn this.toString ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function indexOf (x:T, ?from:Int = 0):Int {\r\n\t\t\r\n\t\treturn this.indexOf (x, from);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function lastIndexOf (x:T, ?from:Int):Int {\r\n\t\t\r\n\t\treturn this.lastIndexOf (x, from);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:arrayAccess public inline function get (index:Int):Null<T> {\r\n\t\t\r\n\t\t//#if (haxe_ver > 3.100)\r\n\t\t//return this.unsafeGet (index);\r\n\t\t//#else\r\n\t\treturn this[index];\r\n\t\t//#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:arrayAccess public inline function set (index:Int, value:T):T {\r\n\t\t\r\n\t\t//#if (haxe_ver > 3.100)\r\n\t\t//return this.unsafeSet (index, value);\r\n\t\t//#else\r\n\t\treturn this[index] = value;\r\n\t\t//#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline static function ofArray<T> (a:Array<Dynamic>):Vector<T> {\r\n\t\t\r\n\t\treturn new Vector<T> ().concat (cast a);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline static function convert<T,U> (v:Array<T>):Vector<U> {\r\n\t\t\r\n\t\treturn cast v;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:from public static inline function fromHaxeVector<T> (value:haxe.ds.Vector<T>):Vector<T> {\r\n\t\t\r\n\t\treturn cast value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:to public inline function toHaxeVector<T> ():haxe.ds.Vector<T> {\r\n\t\t\r\n\t\treturn cast this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t@:noCompletion private inline function get_length ():Int {\r\n\t\t\r\n\t\treturn this.length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function set_length (value:Int):Int {\r\n\t\t\r\n\t\tuntyped (this).__SetSizeExact (value);\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function get_fixed ():Bool {\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function set_fixed (value:Bool):Bool {\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\ntypedef VectorData<T> = Array<T>;\r\ntypedef VectorDataIterator<T> = Iterator<T>;\r\n\r\n\r\n#end\r\n#else\r\n\r\n\r\nabstract Vector<T>(VectorData<T>) {\r\n\t\r\n\t\r\n\tpublic var length (get, set):Int;\r\n\tpublic var fixed (get, set):Bool;\r\n\t\r\n\t\r\n\tpublic inline function new (length:Int = 0, fixed:Bool = false):Void {\r\n\t\t\r\n\t\tthis = new VectorData<T> (length, fixed);\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function concat (?a:VectorData<T>):Vector<T> {\r\n\t\t\r\n\t\treturn this.concat (a);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function copy ():Vector<T> {\r\n\t\t\r\n\t\tvar vec = new VectorData<T> (this.length, this.fixed);\r\n\t\t\r\n\t\tfor (i in 0...this.length) {\r\n\t\t\t\r\n\t\t\tvec[i] = this[i];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn vec;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function iterator<T> ():Iterator<T> {\r\n\t\t\r\n\t\treturn new VectorDataIterator<T> (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function join (sep:String):String {\r\n\t\t\r\n\t\treturn this.join (sep);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function pop ():Null<T> {\r\n\t\t\r\n\t\treturn this.pop ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function push (x:T):Int {\r\n\t\t\r\n\t\treturn this.push (x);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function reverse ():Void {\r\n\t\t\r\n\t\tthis.reverse ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function shift ():Null<T> {\r\n\t\t\r\n\t\treturn this.shift ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function unshift (x:T):Void {\r\n\t\t\r\n\t\tthis.unshift (x);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function slice (pos:Int = 0, end:Int = 16777215):Vector<T> {\r\n\t\t\r\n\t\treturn this.slice (pos, end);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function sort (f:T -> T -> Int):Void {\r\n\t\t\r\n\t\tthis.sort (f);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function splice (pos:Int, len:Int):Vector<T> {\r\n\t\t\r\n\t\treturn this.splice (pos, len);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function toString ():String {\r\n\t\t\r\n\t\treturn this.toString ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function indexOf (x:T, from:Int = 0):Int {\r\n\t\t\r\n\t\treturn this.indexOf (x, from);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function lastIndexOf (x:T, from:Int = 0x7fffffff):Int {\r\n\t\t\r\n\t\treturn this.lastIndexOf (x, from);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline static function ofArray<T> (a:Array<Dynamic>):Vector<T> {\r\n\t\t\r\n\t\treturn VectorData.ofArray (a);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline static function convert<T,U> (v:Vector<T>):Vector<U> {\r\n\t\t\r\n\t\treturn cast VectorData.convert (v);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:arrayAccess public inline function get (index:Int):Null<T> {\r\n\t\t\r\n\t\treturn this[index];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:arrayAccess public inline function set (index:Int, value:T):T {\r\n\t\t\r\n\t\treturn this[index] = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:from public static inline function fromArray<T> (value:Array<T>):Vector<T> {\r\n\t\t\r\n\t\treturn VectorData.ofArray (value);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:to public inline function toArray<T> ():Array<T> {\r\n\t\t\r\n\t\tvar array = new Array<T> ();\r\n\t\t\r\n\t\tfor (value in this) {\r\n\t\t\t\r\n\t\t\tarray.push (value);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn array;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:from public static inline function fromHaxeVector<T> (value:haxe.ds.Vector<T>):Vector<T> {\r\n\t\t\r\n\t\treturn cast value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:to public inline function toHaxeVector<T> ():haxe.ds.Vector<T> {\r\n\t\t\r\n\t\treturn cast this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:from public static inline function fromVectorData<T> (value:VectorData<T>):Vector<T> {\r\n\t\t\r\n\t\treturn cast value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) @:to public inline function toVectorData<T> ():VectorData<T> {\r\n\t\t\r\n\t\treturn cast this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t@:noCompletion private inline function get_length ():Int {\r\n\t\t\r\n\t\treturn this.length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function set_length (value:Int):Int {\r\n\t\t\r\n\t\treturn this.length = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function get_fixed ():Bool {\r\n\t\t\r\n\t\treturn this.fixed;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function set_fixed (value:Bool):Bool {\r\n\t\t\r\n\t\treturn this.fixed = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nprivate class VectorDataIterator<T> {\r\n\t\r\n\t\r\n\tprivate var index:Int;\r\n\tprivate var vectorData:VectorData<T>;\r\n\t\r\n\t\r\n\tpublic function new (data:VectorData<T>) {\r\n\t\t\r\n\t\tindex = 0;\r\n\t\tvectorData = data;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function hasNext ():Bool {\r\n\t\t\r\n\t\treturn index < vectorData.length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function next ():T {\r\n\t\t\r\n\t\treturn vectorData[index++];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nprivate typedef VectorData<T> = flash.Vector<T>;\r\n\r\n\r\n#end","package openfl.geom; #if !openfl_legacy\r\n\r\n\r\nimport lime.math.Vector2;\r\n\r\n\r\nclass Point {\r\n\t\r\n\t\r\n\tpublic var length (get, null):Float;\r\n\tpublic var x:Float;\r\n\tpublic var y:Float;\r\n\t\r\n\t\r\n\tpublic function new (x:Float = 0, y:Float = 0) {\r\n\t\t\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function add (v:Point):Point {\r\n\t\t\r\n\t\treturn new Point (v.x + x, v.y + y);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clone ():Point {\r\n\t\t\r\n\t\treturn new Point (x, y);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyFrom (sourcePoint:Point):Void {\r\n\t\t\r\n\t\tx = sourcePoint.x;\r\n\t\ty = sourcePoint.y;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function distance (pt1:Point, pt2:Point):Float {\r\n\t\t\r\n\t\tvar dx = pt1.x - pt2.x;\r\n\t\tvar dy = pt1.y - pt2.y;\r\n\t\treturn Math.sqrt (dx * dx + dy * dy);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function equals (toCompare:Point):Bool {\r\n\t\t\r\n\t\treturn toCompare != null && toCompare.x == x && toCompare.y == y;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function interpolate (pt1:Point, pt2:Point, f:Float):Point {\r\n\t\t\r\n\t\treturn new Point (pt2.x + f * (pt1.x - pt2.x), pt2.y + f * (pt1.y - pt2.y));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function normalize (thickness:Float):Void {\r\n\t\t\r\n\t\tif (x == 0 && y == 0) {\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar norm = thickness / Math.sqrt (x * x + y * y);\r\n\t\t\tx *= norm;\r\n\t\t\ty *= norm;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function offset (dx:Float, dy:Float):Void {\r\n\t\t\r\n\t\tx += dx;\r\n\t\ty += dy;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function polar (len:Float, angle:Float):Point {\r\n\t\t\r\n\t\treturn new Point (len * Math.cos (angle), len * Math.sin (angle));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setTo (xa:Float, ya:Float):Void {\r\n\t\t\r\n\t\tx = xa;\r\n\t\ty = ya;\r\n\t}\r\n\t\r\n\t\r\n\tpublic function subtract (v:Point):Point {\r\n\t\t\r\n\t\treturn new Point (x - v.x, y - v.y);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function toString ():String {\r\n\t\t\r\n\t\treturn '(x=$x, y=$y)';\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __toLimeVector2 ():Vector2 {\r\n\t\t\r\n\t\treturn new Vector2 (x, y);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_length ():Float {\r\n\t\t\r\n\t\treturn Math.sqrt (x * x + y * y);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Point = openfl._legacy.geom.Point;\r\n#end","package openfl.geom;\r\n\r\n\r\nclass Vector3D {\r\n\t\r\n\t\r\n\tpublic static var X_AXIS (get, null):Vector3D;\r\n\tpublic static var Y_AXIS (get, null):Vector3D;\r\n\tpublic static var Z_AXIS (get, null):Vector3D;\r\n\t\r\n\tpublic var length (get, null):Float;\r\n\tpublic var lengthSquared (get, null):Float;\r\n\tpublic var w:Float;\r\n\tpublic var x:Float;\r\n\tpublic var y:Float;\r\n\tpublic var z:Float;\r\n\t\r\n\t\r\n\tpublic function new (x:Float = 0, y:Float = 0, z:Float = 0, w:Float = 0) {\r\n\t\t\r\n\t\tthis.w = w;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function add (a:Vector3D):Vector3D {\r\n\t\t\r\n\t\treturn new Vector3D (this.x + a.x, this.y + a.y, this.z + a.z);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function angleBetween (a:Vector3D, b:Vector3D):Float {\r\n\t\t\r\n\t\tvar la = a.length;\r\n\t\tvar lb = b.length;\r\n\t\tvar dot = a.dotProduct (b);\r\n\t\t\r\n\t\tif (la != 0) {\r\n\t\t\t\r\n\t\t\tdot /= la;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (lb != 0) {\r\n\t\t\t\r\n\t\t\tdot /= lb;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn Math.acos (dot);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clone ():Vector3D {\r\n\t\t\r\n\t\treturn new Vector3D (x, y, z, w);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyFrom (sourceVector3D:Vector3D):Void {\r\n\t\t\r\n\t\tx = sourceVector3D.x;\r\n\t\ty = sourceVector3D.y;\r\n\t\tz = sourceVector3D.z;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function crossProduct (a:Vector3D):Vector3D {\r\n\t\t\r\n\t\treturn new Vector3D (y * a.z - z * a.y, z * a.x - x * a.z, x * a.y - y * a.x, 1);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function decrementBy (a:Vector3D):Void {\r\n\t\t\r\n\t\tx -= a.x;\r\n\t\ty -= a.y;\r\n\t\tz -= a.z;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function distance (pt1:Vector3D, pt2:Vector3D):Float {\r\n\t\t\r\n\t\tvar x:Float = pt2.x - pt1.x;\r\n\t\tvar y:Float = pt2.y - pt1.y;\r\n\t\tvar z:Float = pt2.z - pt1.z;\r\n\t\t\r\n\t\treturn Math.sqrt (x * x + y * y + z * z);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function dotProduct (a:Vector3D):Float {\r\n\t\t\r\n\t\treturn x * a.x + y * a.y + z * a.z;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function equals (toCompare:Vector3D, allFour:Bool = false):Bool {\r\n\t\t\r\n\t\treturn x == toCompare.x && y == toCompare.y && z == toCompare.z && (!allFour || w == toCompare.w);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function incrementBy (a:Vector3D):Void {\r\n\t\t\r\n\t\tx += a.x;\r\n\t\ty += a.y;\r\n\t\tz += a.z;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function nearEquals (toCompare:Vector3D, tolerance:Float, ?allFour:Bool = false):Bool {\r\n\t\t\r\n\t\treturn Math.abs (x - toCompare.x) < tolerance && Math.abs (y - toCompare.y) < tolerance && Math.abs (z - toCompare.z) < tolerance && (!allFour || Math.abs (w - toCompare.w) < tolerance);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function negate ():Void {\r\n\t\t\r\n\t\tx *= -1;\r\n\t\ty *= -1;\r\n\t\tz *= -1;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function normalize ():Float {\r\n\t\t\r\n\t\tvar l = length;\r\n\t\t\r\n\t\tif (l != 0) {\r\n\t\t\t\r\n\t\t\tx /= l;\r\n\t\t\ty /= l;\r\n\t\t\tz /= l;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn l;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function project ():Void {\r\n\t\t\r\n\t\tx /= w;\r\n\t\ty /= w;\r\n\t\tz /= w;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function scaleBy (s:Float):Void {\r\n\t\t\r\n\t\tx *= s;\r\n\t\ty *= s;\r\n\t\tz *= s;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setTo (xa:Float, ya:Float, za:Float):Void {\r\n\t\t\r\n\t\tx = xa;\r\n\t\ty = ya;\r\n\t\tz = za;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function subtract (a:Vector3D):Vector3D {\r\n\t\t\r\n\t\treturn new Vector3D (x - a.x, y - a.y, z - a.z);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function toString ():String {\r\n\t\t\r\n\t\treturn 'Vector3D($x, $y, $z)';\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_length ():Float {\r\n\t\t\r\n\t\treturn Math.sqrt (x * x + y * y + z * z);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_lengthSquared ():Float {\r\n\t\t\r\n\t\treturn x * x + y * y + z * z;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline static function get_X_AXIS ():Vector3D {\r\n\t\t\r\n\t\treturn new Vector3D (1, 0, 0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline static function get_Y_AXIS ():Vector3D {\r\n\t\t\r\n\t\treturn new Vector3D (0, 1, 0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline static function get_Z_AXIS ():Vector3D {\r\n\t\t\r\n\t\treturn new Vector3D (0, 0, 1);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.geom; #if !openfl_legacy\r\n\r\n\r\nimport lime.math.Rectangle in LimeRectangle;\r\n\r\n\r\nclass Rectangle {\r\n\t\r\n\t\r\n\tprivate static var __temp = new Rectangle ();\r\n\t\r\n\tpublic var bottom (get, set):Float;\r\n\tpublic var bottomRight (get, set):Point;\r\n\tpublic var height:Float;\r\n\tpublic var left (get, set):Float;\r\n\tpublic var right (get, set):Float;\r\n\tpublic var size (get, set):Point;\r\n\tpublic var top (get, set):Float;\r\n\tpublic var topLeft (get, set):Point;\r\n\tpublic var width:Float;\r\n\tpublic var x:Float;\r\n\tpublic var y:Float;\r\n\t\r\n\t\r\n\tpublic function new (x:Float = 0, y:Float = 0, width:Float = 0, height:Float = 0):Void {\r\n\t\t\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clone ():Rectangle {\r\n\t\t\r\n\t\treturn new Rectangle (x, y, width, height);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function contains (x:Float, y:Float):Bool {\r\n\t\t\r\n\t\treturn x >= this.x && y >= this.y && x < right && y < bottom;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function containsPoint (point:Point):Bool {\r\n\t\t\r\n\t\treturn contains (point.x, point.y);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function containsRect (rect:Rectangle):Bool {\r\n\t\t\r\n\t\tif (rect.width <= 0 || rect.height <= 0) {\r\n\t\t\t\r\n\t\t\treturn rect.x > x && rect.y > y && rect.right < right && rect.bottom < bottom;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn rect.x >= x && rect.y >= y && rect.right <= right && rect.bottom <= bottom;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyFrom (sourceRect:Rectangle):Void {\r\n\t\t\r\n\t\tx = sourceRect.x;\r\n\t\ty = sourceRect.y;\r\n\t\twidth = sourceRect.width;\r\n\t\theight = sourceRect.height;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function equals (toCompare:Rectangle):Bool {\r\n\t\t\r\n\t\treturn toCompare != null && x == toCompare.x && y == toCompare.y && width == toCompare.width && height == toCompare.height;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function inflate (dx:Float, dy:Float):Void {\r\n\t\t\r\n\t\tx -= dx; width += dx * 2;\r\n\t\ty -= dy; height += dy * 2;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function inflatePoint (point:Point):Void {\r\n\t\t\r\n\t\tinflate (point.x, point.y);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function intersection (toIntersect:Rectangle):Rectangle {\r\n\t\t\r\n\t\tvar x0 = x < toIntersect.x ? toIntersect.x : x;\r\n\t\tvar x1 = right > toIntersect.right ? toIntersect.right : right;\r\n\t\t\r\n\t\tif (x1 <= x0) {\r\n\t\t\t\r\n\t\t\treturn new Rectangle ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar y0 = y < toIntersect.y ? toIntersect.y : y;\r\n\t\tvar y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;\r\n\t\t\r\n\t\tif (y1 <= y0) {\r\n\t\t\t\r\n\t\t\treturn new Rectangle ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn new Rectangle (x0, y0, x1 - x0, y1 - y0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function intersects (toIntersect:Rectangle):Bool {\r\n\t\t\r\n\t\tvar x0 = x < toIntersect.x ? toIntersect.x : x;\r\n\t\tvar x1 = right > toIntersect.right ? toIntersect.right : right;\r\n\t\t\r\n\t\tif (x1 <= x0) {\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar y0 = y < toIntersect.y ? toIntersect.y : y;\r\n\t\tvar y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;\r\n\t\t\r\n\t\treturn y1 > y0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function isEmpty ():Bool {\r\n\t\t\r\n\t\treturn (width <= 0 || height <= 0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function offset (dx:Float, dy:Float):Void {\r\n\t\t\r\n\t\tx += dx;\r\n\t\ty += dy;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function offsetPoint (point:Point):Void {\r\n\t\t\r\n\t\tx += point.x;\r\n\t\ty += point.y;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setEmpty ():Void {\r\n\t\t\r\n\t\tx = y = width = height = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setTo (xa:Float, ya:Float, widtha:Float, heighta:Float):Void {\r\n\t\t\r\n\t\tx = xa;\r\n\t\ty = ya;\r\n\t\twidth = widtha;\r\n\t\theight = heighta;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function toString ():String {\r\n\t\t\r\n\t\treturn '(x=$x, y=$y, width=$width, height=$height)';\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function union (toUnion:Rectangle):Rectangle {\r\n\t\t\r\n\t\tif (width == 0 || height == 0) {\r\n\t\t\t\r\n\t\t\treturn toUnion.clone ();\r\n\t\t\t\r\n\t\t} else if (toUnion.width == 0 || toUnion.height == 0) {\r\n\t\t\t\r\n\t\t\treturn clone ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar x0 = x > toUnion.x ? toUnion.x : x;\r\n\t\tvar x1 = right < toUnion.right ? toUnion.right : right;\r\n\t\tvar y0 = y > toUnion.y ? toUnion.y : y;\r\n\t\tvar y1 = bottom < toUnion.bottom ? toUnion.bottom : bottom;\r\n\t\t\r\n\t\treturn new Rectangle (x0, y0, x1 - x0, y1 - y0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __contract (x:Float, y:Float, width:Float, height:Float):Void {\r\n\t\t\r\n\t\tif (this.width == 0 && this.height == 0) {\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar cacheRight = right;\r\n\t\tvar cacheBottom = bottom;\r\n\t\t\r\n\t\tif (this.x < x) this.x = x;\r\n\t\tif (this.y < y) this.y = y;\r\n\t\tif (this.right > x + width) this.width = x + width - this.x;\r\n\t\tif (this.bottom > y + height) this.height = y + height - this.y;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __expand (x:Float, y:Float, width:Float, height:Float):Void {\r\n\t\t\r\n\t\tif (this.width == 0 && this.height == 0) {\r\n\t\t\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar cacheRight = right;\r\n\t\tvar cacheBottom = bottom;\r\n\t\t\r\n\t\tif (this.x > x)\r\n\t\t{\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.width = cacheRight - x;\r\n\t\t}\r\n\t\tif (this.y > y)\r\n\t\t{\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.height = cacheBottom - y;\r\n\t\t}\r\n\t\tif (cacheRight < x + width) this.width = x + width - this.x;\r\n\t\tif (cacheBottom < y + height) this.height = y + height - this.y;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __toLimeRectangle ():LimeRectangle {\r\n\t\t\r\n\t\treturn new LimeRectangle (x, y, width, height);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __transform (rect:Rectangle, m:Matrix):Void {\r\n\t\t\r\n\t\tvar tx0 = m.a * x + m.c * y;\r\n\t\tvar tx1 = tx0;\r\n\t\tvar ty0 = m.b * x + m.d * y;\r\n\t\tvar ty1 = ty0;\r\n\t\t\r\n\t\tvar tx = m.a * (x + width) + m.c * y;\r\n\t\tvar ty = m.b * (x + width) + m.d * y;\r\n\t\t\r\n\t\tif (tx < tx0) tx0 = tx;\r\n\t\tif (ty < ty0) ty0 = ty;\r\n\t\tif (tx > tx1) tx1 = tx;\r\n\t\tif (ty > ty1) ty1 = ty;\r\n\t\t\r\n\t\ttx = m.a * (x + width) + m.c * (y + height);\r\n\t\tty = m.b * (x + width) + m.d * (y + height);\r\n\t\t\r\n\t\tif (tx < tx0) tx0 = tx;\r\n\t\tif (ty < ty0) ty0 = ty;\r\n\t\tif (tx > tx1) tx1 = tx;\r\n\t\tif (ty > ty1) ty1 = ty;\r\n\t\t\r\n\t\ttx = m.a * x + m.c * (y + height);\r\n\t\tty = m.b * x + m.d * (y + height);\r\n\t\t\r\n\t\tif (tx < tx0) tx0 = tx;\r\n\t\tif (ty < ty0) ty0 = ty;\r\n\t\tif (tx > tx1) tx1 = tx;\r\n\t\tif (ty > ty1) ty1 = ty;\r\n\t\t\r\n\t\trect.setTo (tx0 + m.tx, ty0 + m.ty, tx1 - tx0, ty1 - ty0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_bottom ():Float { return y + height; }\r\n\tprivate function set_bottom (b:Float):Float { height = b - y; return b; }\r\n\tprivate function get_bottomRight ():Point { return new Point (x + width, y + height); }\r\n\tprivate function set_bottomRight (p:Point):Point { width = p.x - x; height = p.y - y; return p.clone (); }\r\n\tprivate function get_left ():Float { return x; }\r\n\tprivate function set_left (l:Float):Float { width -= l - x; x = l; return l; }\r\n\tprivate function get_right ():Float { return x + width; }\r\n\tprivate function set_right (r:Float):Float { width = r - x; return r; }\r\n\tprivate function get_size ():Point { return new Point (width, height); }\r\n\tprivate function set_size (p:Point):Point { width = p.x; height = p.y; return p.clone (); }\r\n\tprivate function get_top ():Float { return y; }\r\n\tprivate function set_top (t:Float):Float { height -= t - y; y = t; return t; }\r\n\tprivate function get_topLeft ():Point { return new Point (x, y); }\r\n\tprivate function set_topLeft (p:Point):Point { x = p.x; y = p.y; return p.clone (); }\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Rectangle = openfl._legacy.geom.Rectangle;\r\n#end","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport haxe.Constraints.Function;\r\nimport starling.display.DisplayObjectContainer;\r\nimport starling.display.Stage;\r\n\r\nimport openfl.errors.IllegalOperationError;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Matrix3D;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.geom.Vector3D;\r\nimport openfl.system.Capabilities;\r\n\r\n#if flash\r\nimport flash.ui.Mouse;\r\nimport flash.ui.MouseCursor;\r\n#end\r\n\r\nimport starling.core.Starling;\r\nimport starling.errors.AbstractClassError;\r\nimport starling.errors.AbstractMethodError;\r\nimport starling.events.Event;\r\nimport starling.events.EventDispatcher;\r\nimport starling.events.TouchEvent;\r\nimport starling.filters.FragmentFilter;\r\nimport starling.rendering.BatchToken;\r\nimport starling.rendering.Painter;\r\nimport starling.utils.Align;\r\nimport starling.utils.MathUtil;\r\nimport starling.utils.MatrixUtil;\r\n\r\n\r\n\r\n/** Dispatched when an object is added to a parent. */\r\n@:meta(Event(name=\"added\",type=\"starling.events.Event\"))\r\n\r\n\r\n/** Dispatched when an object is connected to the stage (directly or indirectly). */\r\n@:meta(Event(name=\"addedToStage\",type=\"starling.events.Event\"))\r\n\r\n\r\n/** Dispatched when an object is removed from its parent. */\r\n@:meta(Event(name=\"removed\",type=\"starling.events.Event\"))\r\n\r\n\r\n/** Dispatched when an object is removed from the stage and won't be rendered any longer. */\r\n@:meta(Event(name=\"removedFromStage\",type=\"starling.events.Event\"))\r\n\r\n\r\n/** Dispatched once every frame on every object that is connected to the stage. */\r\n@:meta(Event(name=\"enterFrame\",type=\"starling.events.EnterFrameEvent\"))\r\n\r\n\r\n/** Dispatched when an object is touched. Bubbles. */\r\n@:meta(Event(name=\"touch\",type=\"starling.events.TouchEvent\"))\r\n\r\n\r\n/** Dispatched when a key on the keyboard is released. */\r\n@:meta(Event(name=\"keyUp\",type=\"starling.events.KeyboardEvent\"))\r\n\r\n\r\n/** Dispatched when a key on the keyboard is pressed. */\r\n@:meta(Event(name=\"keyDown\",type=\"starling.events.KeyboardEvent\"))\r\n\r\n\r\n/**\r\n *  The DisplayObject class is the base class for all objects that are rendered on the \r\n *  screen.\r\n *  \r\n *  <p><strong>The Display Tree</strong></p> \r\n *  \r\n *  <p>In Starling, all displayable objects are organized in a display tree. Only objects that\r\n *  are part of the display tree will be displayed (rendered).</p> \r\n *   \r\n *  <p>The display tree consists of leaf nodes (Image, Quad) that will be rendered directly to\r\n *  the screen, and of container nodes (subclasses of \"DisplayObjectContainer\", like \"Sprite\").\r\n *  A container is simply a display object that has child nodes - which can, again, be either\r\n *  leaf nodes or other containers.</p> \r\n *  \r\n *  <p>At the base of the display tree, there is the Stage, which is a container, too. To create\r\n *  a Starling application, you create a custom Sprite subclass, and Starling will add an\r\n *  instance of this class to the stage.</p>\r\n *  \r\n *  <p>A display object has properties that define its position in relation to its parent\r\n *  (x, y), as well as its rotation and scaling factors (scaleX, scaleY). Use the \r\n *  <code>alpha</code> and <code>visible</code> properties to make an object translucent or \r\n *  invisible.</p>\r\n *  \r\n *  <p>Every display object may be the target of touch events. If you don't want an object to be\r\n *  touchable, you can disable the \"touchable\" property. When it's disabled, neither the object\r\n *  nor its children will receive any more touch events.</p>\r\n *\t\r\n *  <strong>Transforming coordinates</strong>\r\n *  \r\n *  <p>Within the display tree, each object has its own local coordinate system. If you rotate\r\n *  a container, you rotate that coordinate system - and thus all the children of the \r\n *  container.</p>\r\n *  \r\n *  <p>Sometimes you need to know where a certain point lies relative to another coordinate \r\n *  system. That's the purpose of the method <code>getTransformationMatrix</code>. It will  \r\n *  create a matrix that represents the transformation of a point in one coordinate system to \r\n *  another.</p> \r\n *  \r\n *  <strong>Subclassing</strong>\r\n *  \r\n *  <p>Since DisplayObject is an abstract class, you cannot instantiate it directly, but have \r\n *  to use one of its subclasses instead. There are already a lot of them available, and most \r\n *  of the time they will suffice.</p> \r\n *  \r\n *  <p>However, you can create custom subclasses as well. That way, you can create an object\r\n *  with a custom render function. You will need to implement the following methods when you \r\n *  subclass DisplayObject:</p>\r\n *  \r\n *  <ul>\r\n *\t<li><code>function render(support:RenderSupport):void</code></li>\r\n *\t<li><code>function getBounds(targetSpace:DisplayObject, \r\n *\t\t\t\t\t\t\t\t out:Rectangle=null):Rectangle</code></li>\r\n *  </ul>\r\n *  \r\n *  <p>Have a look at the Quad class for a sample implementation of the 'getBounds' method.\r\n *  For a sample on how to write a custom render function, you can have a look at this\r\n *  <a href=\"http://wiki.starling-framework.org/manual/custom_display_objects\">article</a>\r\n *  in the Starling Wiki.</p> \r\n * \r\n *  <p>When you override the render method, it is important that you call the method\r\n *  'finishQuadBatch' of the support object. This forces Starling to render all quads that \r\n *  were accumulated before by different render methods (for performance reasons). Otherwise, \r\n *  the z-ordering will be incorrect.</p> \r\n * \r\n *  @see DisplayObjectContainer\r\n *  @see Sprite\r\n *  @see Stage \r\n */\r\nclass DisplayObject extends EventDispatcher\r\n{\r\n\tprivate var isMask(get, never):Bool;\r\n\tprivate var supportsRenderCache(get, never):Bool;\r\n\tpublic var transformationMatrix(get, set):Matrix;\r\n\tpublic var transformationMatrix3D(get, never):Matrix3D;\r\n\tpublic var is3D(get, never):Bool;\r\n\tpublic var useHandCursor(get, set):Bool;\r\n\tpublic var bounds(get, never):Rectangle;\r\n\tpublic var width(get, set):Float;\r\n\tpublic var height(get, set):Float;\r\n\tpublic var x(get, set):Float;\r\n\tpublic var y(get, set):Float;\r\n\tpublic var pivotX(get, set):Float;\r\n\tpublic var pivotY(get, set):Float;\r\n\tpublic var scaleX(get, set):Float;\r\n\tpublic var scaleY(get, set):Float;\r\n\tpublic var scale(get, set):Float;\r\n\tpublic var skewX(get, set):Float;\r\n\tpublic var skewY(get, set):Float;\r\n\tpublic var rotation(get, set):Float;\r\n\tpublic var alpha(get, set):Float;\r\n\tpublic var visible(get, set):Bool;\r\n\tpublic var touchable(get, set):Bool;\r\n\tpublic var blendMode(get, set):String;\r\n\tpublic var name(get, set):String;\r\n\tpublic var filter(get, set):FragmentFilter;\r\n\tpublic var mask(get, set):DisplayObject;\r\n\tpublic var parent(get, never):DisplayObjectContainer;\r\n\tpublic var base(get, never):DisplayObject;\r\n\tpublic var root(get, never):DisplayObject;\r\n\tpublic var stage(get, never):Stage;\r\n\r\n\t// private members\r\n\t\r\n\tprivate var _x:Float;\r\n\tprivate var _y:Float;\r\n\tprivate var _pivotX:Float;\r\n\tprivate var _pivotY:Float;\r\n\tprivate var _scaleX:Float;\r\n\tprivate var _scaleY:Float;\r\n\tprivate var _skewX:Float;\r\n\tprivate var _skewY:Float;\r\n\tprivate var _rotation:Float;\r\n\tprivate var _alpha:Float;\r\n\tprivate var _visible:Bool;\r\n\tprivate var _touchable:Bool;\r\n\tprivate var _blendMode:String;\r\n\tprivate var _name:String;\r\n\tprivate var _useHandCursor:Bool;\r\n\tprivate var _parent:DisplayObjectContainer;\r\n\tprivate var _transformationMatrix:Matrix;\r\n\tprivate var _transformationMatrix3D:Matrix3D;\r\n\tprivate var _orientationChanged:Bool;\r\n\tprivate var _is3D:Bool;\r\n\tprivate var _isMask:Bool;\r\n\t\r\n\t// internal members (for fast access on rendering)\r\n\t\r\n\t/** @private */@:allow(starling.display)\r\n\tprivate var _lastParentOrSelfChangeFrameID:Int;\r\n\t/** @private */@:allow(starling.display)\r\n\tprivate var _lastChildChangeFrameID:Int;\r\n\t/** @private */@:allow(starling.display)\r\n\tprivate var _tokenFrameID:Int;\r\n\t/** @private */@:allow(starling.display)\r\n\tprivate var _pushToken:BatchToken = new BatchToken();\r\n\t/** @private */@:allow(starling.display)\r\n\tprivate var _popToken:BatchToken = new BatchToken();\r\n\t/** @private */@:allow(starling.display)\r\n\tprivate var _hasVisibleArea:Bool;\r\n\t/** @private */@:allow(starling.display)\r\n\tprivate var _filter:FragmentFilter;\r\n\t/** @private */@:allow(starling.display)\r\n\tprivate var _mask:DisplayObject;\r\n\t\r\n\t// helper objects\r\n\t\r\n\tprivate static var sAncestors:Array<DisplayObject> = [];\r\n\tprivate static var sHelperPoint:Point = new Point();\r\n\tprivate static var sHelperPoint3D:Vector3D = new Vector3D();\r\n\tprivate static var sHelperPointAlt3D:Vector3D = new Vector3D();\r\n\tprivate static var sHelperRect:Rectangle = new Rectangle();\r\n\tprivate static var sHelperMatrix:Matrix = new Matrix();\r\n\tprivate static var sHelperMatrixAlt:Matrix = new Matrix();\r\n\tprivate static var sHelperMatrix3D:Matrix3D = new Matrix3D();\r\n\tprivate static var sHelperMatrixAlt3D:Matrix3D = new Matrix3D();\r\n\t\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\tif (Capabilities.isDebugger &&\r\n\t\t\tType.getClassName(Type.getClass(this)) == \"starling.display::DisplayObject\") \r\n\t\t{\r\n\t\t\tthrow new AbstractClassError();\r\n\t\t}\r\n\t\t\r\n\t\t_x = _y = _pivotX = _pivotY = _rotation = _skewX = _skewY = 0.0;\r\n\t\t_scaleX = _scaleY = _alpha = 1.0;\r\n\t\t_visible = _touchable = _hasVisibleArea = true;\r\n\t\t_blendMode = BlendMode.AUTO;\r\n\t\t_transformationMatrix = new Matrix();\r\n\t}\r\n\t\r\n\t/** Disposes all resources of the display object. \r\n\t  * GPU buffers are released, event listeners are removed, filters and masks are disposed. */\r\n\tpublic function dispose():Void\r\n\t{\r\n\t\tif (_filter != null)\t\t\t _filter.dispose();\r\n\t\tif (_mask != null)\t\t\t _mask.dispose();\r\n\t\tremoveEventListeners();\r\n\t\tmask = null;\r\n\t}\r\n\t\r\n\t/** Removes the object from its parent, if it has one, and optionally disposes it. */\r\n\tpublic function removeFromParent(dispose:Bool = false):Void\r\n\t{\r\n\t\tif (_parent != null)\t\t\t _parent.removeChild(this, dispose)\r\n\t\telse if (dispose)\t\t\t this.dispose();\r\n\t}\r\n\t\r\n\t/** Creates a matrix that represents the transformation from the local coordinate system \r\n\t *  to another. If you pass an <code>out</code>-matrix, the result will be stored in this\r\n\t *  matrix instead of creating a new object. */\r\n\tpublic function getTransformationMatrix(targetSpace:DisplayObject, out:Matrix = null):Matrix\r\n\t{\r\n\t\tvar commonParent:DisplayObject;\r\n\t\tvar currentObject:DisplayObject;\r\n\t\t\r\n\t\tif (out != null)\t\t\t out.identity()\r\n\t\telse out = new Matrix();\r\n\t\t\r\n\t\tif (targetSpace == this) \r\n\t\t{\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (targetSpace == _parent || (targetSpace == null && _parent == null)) \r\n\t\t{\r\n\t\t\tout.copyFrom(transformationMatrix);\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (targetSpace == null || targetSpace == base) \r\n\t\t{\r\n\t\t\t// targetCoordinateSpace 'null' represents the target space of the base object.\r\n\t\t\t// -> move up from this to base\r\n\t\t\t\r\n\t\t\tcurrentObject = this;\r\n\t\t\twhile (currentObject != targetSpace)\r\n\t\t\t{\r\n\t\t\t\tout.concat(currentObject.transformationMatrix);\r\n\t\t\t\tcurrentObject = currentObject._parent;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (targetSpace._parent == this)   // optimization  \r\n\t\t{\r\n\t\t\ttargetSpace.getTransformationMatrix(this, out);\r\n\t\t\tout.invert();\r\n\t\t\t\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\t\r\n\t\t// 1. find a common parent of this and the target space\r\n\t\t\r\n\t\tcommonParent = findCommonParent(this, targetSpace);\r\n\t\t\r\n\t\t// 2. move up from this to common parent\r\n\t\t\r\n\t\tcurrentObject = this;\r\n\t\twhile (currentObject != commonParent)\r\n\t\t{\r\n\t\t\tout.concat(currentObject.transformationMatrix);\r\n\t\t\tcurrentObject = currentObject._parent;\r\n\t\t}\r\n\t\t\r\n\t\tif (commonParent == targetSpace) \r\n\t\t\treturn out;\r\n\t\t\t\r\n\t\t// 3. now move up from target until we reach the common parent  ;\r\n\t\t\r\n\t\tsHelperMatrix.identity();\r\n\t\tcurrentObject = targetSpace;\r\n\t\twhile (currentObject != commonParent)\r\n\t\t{\r\n\t\t\tsHelperMatrix.concat(currentObject.transformationMatrix);\r\n\t\t\tcurrentObject = currentObject._parent;\r\n\t\t}\r\n\t\t\r\n\t\t// 4. now combine the two matrices  \r\n\t\t\r\n\t\tsHelperMatrix.invert();\r\n\t\tout.concat(sHelperMatrix);\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Returns a rectangle that completely encloses the object as it appears in another \r\n\t *  coordinate system. If you pass an <code>out</code>-rectangle, the result will be\r\n\t *  stored in this rectangle instead of creating a new object. */\r\n\tpublic function getBounds(targetSpace:DisplayObject, out:Rectangle = null):Rectangle\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\t\r\n\t/** Returns the object that is found topmost beneath a point in local coordinates, or nil\r\n\t *  if the test fails. Untouchable and invisible objects will cause the test to fail. */\r\n\tpublic function hitTest(localPoint:Point):DisplayObject\r\n\t{\r\n\t\t// on a touch test, invisible or untouchable objects cause the test to fail\r\n\t\tif (!_visible || !_touchable)\t\t\t return null;\r\n\t\t\r\n\t\t// if we've got a mask and the hit occurs outside, fail  ;\r\n\t\tif (_mask != null && !hitTestMask(localPoint))\t\t\t return null;\r\n\t\t\r\n\t\t// otherwise, check bounding box  ;\r\n\t\tif (getBounds(this, sHelperRect).containsPoint(localPoint)) return this;\r\n\t\telse return null;\r\n\t}\r\n\t\r\n\t/** Checks if a certain point is inside the display object's mask. If there is no mask,\r\n\t *  this method always returns <code>true</code> (because having no mask is equivalent\r\n\t *  to having one that's infinitely big). */\r\n\tpublic function hitTestMask(localPoint:Point):Bool\r\n\t{\r\n\t\tif (_mask != null) \r\n\t\t{\r\n\t\t\tif (_mask.stage != null) getTransformationMatrix(_mask, sHelperMatrixAlt)\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tsHelperMatrixAlt.copyFrom(_mask.transformationMatrix);\r\n\t\t\t\tsHelperMatrixAlt.invert();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar helperPoint:Point = localPoint == sHelperPoint ? new Point() : sHelperPoint;\r\n\t\t\tMatrixUtil.transformPoint(sHelperMatrixAlt, localPoint, helperPoint);\r\n\t\t\treturn _mask.hitTest(helperPoint) != null;\r\n\t\t}\r\n\t\telse return true;\r\n\t}\r\n\t\r\n\t/** Transforms a point from the local coordinate system to global (stage) coordinates.\r\n\t *  If you pass an <code>out</code>-point, the result will be stored in this point instead\r\n\t *  of creating a new object. */\r\n\tpublic function localToGlobal(localPoint:Point, out:Point = null):Point\r\n\t{\r\n\t\tif (is3D) \r\n\t\t{\r\n\t\t\tsHelperPoint3D.setTo(localPoint.x, localPoint.y, 0);\r\n\t\t\treturn local3DToGlobal(sHelperPoint3D, out);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tgetTransformationMatrix(base, sHelperMatrixAlt);\r\n\t\t\treturn MatrixUtil.transformPoint(sHelperMatrixAlt, localPoint, out);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Transforms a point from global (stage) coordinates to the local coordinate system.\r\n\t *  If you pass an <code>out</code>-point, the result will be stored in this point instead\r\n\t *  of creating a new object. */\r\n\tpublic function globalToLocal(globalPoint:Point, out:Point = null):Point\r\n\t{\r\n\t\tif (is3D) \r\n\t\t{\r\n\t\t\tglobalToLocal3D(globalPoint, sHelperPoint3D);\r\n\t\t\tstage.getCameraPosition(this, sHelperPointAlt3D);\r\n\t\t\treturn MathUtil.intersectLineWithXYPlane(sHelperPointAlt3D, sHelperPoint3D, out);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tgetTransformationMatrix(base, sHelperMatrixAlt);\r\n\t\t\tsHelperMatrixAlt.invert();\r\n\t\t\treturn MatrixUtil.transformPoint(sHelperMatrixAlt, globalPoint, out);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Renders the display object with the help of a painter object. Never call this method\r\n\t *  directly, except from within another render method.\r\n\t *\r\n\t *  @param painter Captures the current render state and provides utility functions\r\n\t *\t\t\t\t for rendering.\r\n\t */\r\n\tpublic function render(painter:Painter):Void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\t\r\n\t/** Moves the pivot point to a certain position within the local coordinate system\r\n\t *  of the object. If you pass no arguments, it will be centered. */\r\n\tpublic function alignPivot(horizontalAlign:String = \"center\",\r\n\t\t\tverticalAlign:String = \"center\"):Void\r\n\t{\r\n\t\tvar bounds:Rectangle = getBounds(this, sHelperRect);\r\n\t\tsetOrientationChanged();\r\n\t\t\r\n\t\tif (horizontalAlign == Align.LEFT)\t\t\t _pivotX = bounds.x\r\n\t\telse if (horizontalAlign == Align.CENTER)\t\t\t _pivotX = bounds.x + bounds.width / 2.0\r\n\t\telse if (horizontalAlign == Align.RIGHT)\t\t\t _pivotX = bounds.x + bounds.width\r\n\t\telse throw new ArgumentError(\"Invalid horizontal alignment: \" + horizontalAlign);\r\n\t\t\r\n\t\tif (verticalAlign == Align.TOP)\t\t\t _pivotY = bounds.y\r\n\t\telse if (verticalAlign == Align.CENTER)\t\t\t _pivotY = bounds.y + bounds.height / 2.0\r\n\t\telse if (verticalAlign == Align.BOTTOM)\t\t\t _pivotY = bounds.y + bounds.height\r\n\t\telse throw new ArgumentError(\"Invalid vertical alignment: \" + verticalAlign);\r\n\t}\r\n\t\r\n\t// 3D transformation\r\n\t\r\n\t/** Creates a matrix that represents the transformation from the local coordinate system\r\n\t *  to another. This method supports three dimensional objects created via 'Sprite3D'.\r\n\t *  If you pass an <code>out</code>-matrix, the result will be stored in this matrix\r\n\t *  instead of creating a new object. */\r\n\tpublic function getTransformationMatrix3D(targetSpace:DisplayObject, out:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar commonParent:DisplayObject;\r\n\t\tvar currentObject:DisplayObject;\r\n\t\t\r\n\t\tif (out != null) out.identity()\r\n\t\telse out = new Matrix3D();\r\n\t\t\r\n\t\tif (targetSpace == this) \r\n\t\t{\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (targetSpace == _parent || (targetSpace == null && _parent == null)) \r\n\t\t{\r\n\t\t\tout.copyFrom(transformationMatrix3D);\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse if (targetSpace == null || targetSpace == base) \r\n\t\t{\r\n\t\t\t// targetCoordinateSpace 'null' represents the target space of the base object.\r\n\t\t\t// -> move up from this to base\r\n\t\t\t\r\n\t\t\tcurrentObject = this;\r\n\t\t\twhile (currentObject != targetSpace)\r\n\t\t\t{\r\n\t\t\t\tout.append(currentObject.transformationMatrix3D);\r\n\t\t\t\tcurrentObject = currentObject._parent;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\t// 1. find a common parent of this and the target space\r\n\t\telse if (targetSpace._parent == this)   // optimization  \r\n\t\t{\r\n\t\t\ttargetSpace.getTransformationMatrix3D(this, out);\r\n\t\t\tout.invert();\r\n\t\t\t\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tcommonParent = findCommonParent(this, targetSpace);\r\n\t\t\r\n\t\t// 2. move up from this to common parent\r\n\t\t\r\n\t\tcurrentObject = this;\r\n\t\twhile (currentObject != commonParent)\r\n\t\t{\r\n\t\t\tout.append(currentObject.transformationMatrix3D);\r\n\t\t\tcurrentObject = currentObject._parent;\r\n\t\t}\r\n\t\t\r\n\t\tif (commonParent == targetSpace) \r\n\t\t\treturn out;\r\n\t\t// 3. now move up from target until we reach the common parent  ;\r\n\t\t\r\n\t\tsHelperMatrix3D.identity();\r\n\t\tcurrentObject = targetSpace;\r\n\t\twhile (currentObject != commonParent)\r\n\t\t{\r\n\t\t\tsHelperMatrix3D.append(currentObject.transformationMatrix3D);\r\n\t\t\tcurrentObject = currentObject._parent;\r\n\t\t}  // 4. now combine the two matrices  \r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tsHelperMatrix3D.invert();\r\n\t\tout.append(sHelperMatrix3D);\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Transforms a 3D point from the local coordinate system to global (stage) coordinates.\r\n\t *  This is achieved by projecting the 3D point onto the (2D) view plane.\r\n\t *\r\n\t *  <p>If you pass an <code>out</code>-point, the result will be stored in this point\r\n\t *  instead of creating a new object.</p> */\r\n\tpublic function local3DToGlobal(localPoint:Vector3D, out:Point = null):Point\r\n\t{\r\n\t\tvar stage:Stage = this.stage;\r\n\t\tif (stage == null)\t\t\t throw new IllegalOperationError(\"Object not connected to stage\");\r\n\t\t\r\n\t\tgetTransformationMatrix3D(stage, sHelperMatrixAlt3D);\r\n\t\tMatrixUtil.transformPoint3D(sHelperMatrixAlt3D, localPoint, sHelperPoint3D);\r\n\t\treturn MathUtil.intersectLineWithXYPlane(stage.cameraPosition, sHelperPoint3D, out);\r\n\t}\r\n\t\r\n\t/** Transforms a point from global (stage) coordinates to the 3D local coordinate system.\r\n\t *  If you pass an <code>out</code>-vector, the result will be stored in this vector\r\n\t *  instead of creating a new object. */\r\n\tpublic function globalToLocal3D(globalPoint:Point, out:Vector3D = null):Vector3D\r\n\t{\r\n\t\tvar stage:Stage = this.stage;\r\n\t\tif (stage == null)\t\t\t throw new IllegalOperationError(\"Object not connected to stage\");\r\n\t\t\r\n\t\tgetTransformationMatrix3D(stage, sHelperMatrixAlt3D);\r\n\t\tsHelperMatrixAlt3D.invert();\r\n\t\treturn MatrixUtil.transformCoords3D(\r\n\t\t\t\tsHelperMatrixAlt3D, globalPoint.x, globalPoint.y, 0, out);\r\n\t}\r\n\t\r\n\t// internal methods\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.display)\r\n\tprivate function setParent(value:DisplayObjectContainer):Void\r\n\t{\r\n\t\t// check for a recursion\r\n\t\tvar ancestor:DisplayObject = value;\r\n\t\twhile (ancestor != this && ancestor != null)\r\n\t\tancestor = ancestor._parent;\r\n\t\t\r\n\t\tif (ancestor == this) \r\n\t\t\tthrow new ArgumentError(\"An object cannot be added as a child to itself or one \" +\r\n\t\t\"of its children (or children's children, etc.)\")\r\n\t\telse \r\n\t\t_parent = value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.display)\r\n\tprivate function setIs3D(value:Bool):Void\r\n\t{\r\n\t\t_is3D = value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.display)\r\n\tprivate function get_isMask():Bool\r\n\t{\r\n\t\treturn _isMask;\r\n\t}\r\n\t\r\n\t// render cache\r\n\t\r\n\t/** Forces the object to be redrawn in the next frame.\r\n\t *  This will prevent the object to be drawn from the render cache.\r\n\t *\r\n\t *  <p>This method is called every time the object changes in any way. When creating\r\n\t *  custom mesh styles or any other custom rendering code, call this method if the object\r\n\t *  needs to be redrawn.</p>\r\n\t *\r\n\t *  <p>If a class does not support the render cache (like <code>Sprite3D</code>),\r\n\t *  it may override <code>supportsRenderCache</code>. That way, the object will be\r\n\t *  redrawn automatically each frame.</p>\r\n\t */\r\n\tpublic function setRequiresRedraw():Void\r\n\t{\r\n\t\tvar parent:DisplayObject = _parent;\r\n\t\tvar frameID:Int = Starling.FrameID;\r\n\t\t\r\n\t\t_hasVisibleArea = _alpha != 0.0 && _visible && !_isMask && _scaleX != 0.0 && _scaleY != 0.0;\r\n\t\t_lastParentOrSelfChangeFrameID = frameID;\r\n\t\t\r\n\t\twhile (parent != null && parent._lastChildChangeFrameID != frameID)\r\n\t\t{\r\n\t\t\tparent._lastChildChangeFrameID = frameID;\r\n\t\t\tparent = parent._parent;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Indicates if this class supports the render cache.\r\n\t *  Subclasses that need to circumvent the cache have to override this method and call\r\n\t *  <code>updateSupportsRenderCache</code> whenever that boolean changes. Don't forget\r\n\t *  to combine the result with <code>super.supportsRenderCache</code> when overriding\r\n\t *  the method!\r\n\t *\r\n\t *  <p>Note that when a container does not support the render cache, its children will\r\n\t *  still be cached! This just means that batching is interrupted at this object when\r\n\t *  the display tree is traversed.</p>\r\n\t */\r\n\tprivate function get_supportsRenderCache():Bool\r\n\t{\r\n\t\treturn _mask == null;\r\n\t}\r\n\t\r\n\t/** Must be called when support for the render cache changes. The actual value is read\r\n\t *  from the <code>supportsRenderCache</code> property. */\r\n\tprivate function updateSupportsRenderCache():Void\r\n\t{\r\n\t\tif (supportsRenderCache) \r\n\t\t\tremoveEventListener(Event.ENTER_FRAME, onEnterFrameWithoutRenderCache)\r\n\t\telse \r\n\t\taddEventListener(Event.ENTER_FRAME, onEnterFrameWithoutRenderCache);\r\n\t}\r\n\t\r\n\tprivate function onEnterFrameWithoutRenderCache():Void\r\n\t{\r\n\t\t// by wrapping 'setRequiresRedraw' in a private method, we can make sure that no\r\n\t\t// subclasses are messing with this event handler.\r\n\t\t\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\t// helpers\r\n\t\r\n\tprivate function setOrientationChanged():Void\r\n\t{\r\n\t\t_orientationChanged = true;\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\tprivate static function findCommonParent(object1:DisplayObject,\r\n\t\t\tobject2:DisplayObject):DisplayObject\r\n\t{\r\n\t\tvar currentObject:DisplayObject = object1;\r\n\t\t\r\n\t\twhile (currentObject != null)\r\n\t\t{\r\n\t\t\tsAncestors[sAncestors.length] = currentObject;  // avoiding 'push'  \r\n\t\t\tcurrentObject = currentObject._parent;\r\n\t\t}\r\n\t\t\r\n\t\tcurrentObject = object2;\r\n\t\twhile (currentObject != null && Lambda.indexOf(sAncestors, currentObject) == -1)\r\n\t\tcurrentObject = currentObject._parent;\r\n\t\t\r\n\t\tsAncestors.splice(0, sAncestors.length);\r\n\t\t\r\n\t\tif (currentObject != null)\t\t\t return currentObject\r\n\t\telse throw new ArgumentError(\"Object not connected to target\");\r\n\t}\r\n\t\r\n\t// stage event handling\r\n\t\r\n\t/** @private */\r\n\toverride public function dispatchEvent(event:Event):Void\r\n\t{\r\n\t\tif (event.type == Event.REMOVED_FROM_STAGE && stage == null) \r\n\t\t\treturn\r\n\t\t// special check to avoid double-dispatch of RfS-event.\r\n\t\telse \r\n\t\tsuper.dispatchEvent(event);\r\n\t}\r\n\t\r\n\t// enter frame event optimization\r\n\t\r\n\t// To avoid looping through the complete display tree each frame to find out who's\r\n\t// listening to ENTER_FRAME events, we manage a list of them manually in the Stage class.\r\n\t// We need to take care that (a) it must be dispatched only when the object is\r\n\t// part of the stage, (b) it must not cause memory leaks when the user forgets to call\r\n\t// dispose and (c) there might be multiple listeners for this event.\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function addEventListener(type:String, listener:Function):Void\r\n\t{\r\n\t\tif (type == Event.ENTER_FRAME && !hasEventListener(type)) \r\n\t\t{\r\n\t\t\taddEventListener(Event.ADDED_TO_STAGE, addEnterFrameListenerToStage);\r\n\t\t\taddEventListener(Event.REMOVED_FROM_STAGE, removeEnterFrameListenerFromStage);\r\n\t\t\tif (this.stage != null) addEnterFrameListenerToStage();\r\n\t\t}\r\n\t\t\r\n\t\tsuper.addEventListener(type, listener);\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function removeEventListener(type:String, listener:Function):Void\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\t\t\r\n\t\tif (type == Event.ENTER_FRAME && !hasEventListener(type)) \r\n\t\t{\r\n\t\t\tremoveEventListener(Event.ADDED_TO_STAGE, addEnterFrameListenerToStage);\r\n\t\t\tremoveEventListener(Event.REMOVED_FROM_STAGE, removeEnterFrameListenerFromStage);\r\n\t\t\tremoveEnterFrameListenerFromStage();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function removeEventListeners(type:String = null):Void\r\n\t{\r\n\t\tif ((type == null || type == Event.ENTER_FRAME) && hasEventListener(Event.ENTER_FRAME)) \r\n\t\t{\r\n\t\t\tremoveEventListener(Event.ADDED_TO_STAGE, addEnterFrameListenerToStage);\r\n\t\t\tremoveEventListener(Event.REMOVED_FROM_STAGE, removeEnterFrameListenerFromStage);\r\n\t\t\tremoveEnterFrameListenerFromStage();\r\n\t\t}\r\n\t\t\r\n\t\tsuper.removeEventListeners(type);\r\n\t}\r\n\t\r\n\tprivate function addEnterFrameListenerToStage():Void\r\n\t{\r\n\t\tStarling.Current.stage.addEnterFrameListener(this);\r\n\t}\r\n\t\r\n\tprivate function removeEnterFrameListenerFromStage():Void\r\n\t{\r\n\t\tStarling.Current.stage.removeEnterFrameListener(this);\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** The transformation matrix of the object relative to its parent.\r\n\t * \r\n\t *  <p>If you assign a custom transformation matrix, Starling will try to figure out  \r\n\t *  suitable values for <code>x, y, scaleX, scaleY,</code> and <code>rotation</code>.\r\n\t *  However, if the matrix was created in a different way, this might not be possible. \r\n\t *  In that case, Starling will apply the matrix, but not update the corresponding \r\n\t *  properties.</p>\r\n\t * \r\n\t *  <p>CAUTION: not a copy, but the actual object!</p> */\r\n\tprivate function get_transformationMatrix():Matrix\r\n\t{\r\n\t\tif (_orientationChanged) \r\n\t\t{\r\n\t\t\t_orientationChanged = false;\r\n\t\t\t\r\n\t\t\tif (_skewX == 0.0 && _skewY == 0.0) \r\n\t\t\t{\r\n\t\t\t\t// optimization: no skewing / rotation simplifies the matrix math\r\n\t\t\t\t\r\n\t\t\t\tif (_rotation == 0.0) \r\n\t\t\t\t{\r\n\t\t\t\t\t_transformationMatrix.setTo(_scaleX, 0.0, 0.0, _scaleY,\r\n\t\t\t\t\t\t\t_x - _pivotX * _scaleX, _y - _pivotY * _scaleY);\r\n\t\t\t\t}\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\t\t\t\t\tvar cos:Float = Math.cos(_rotation);\r\n\t\t\t\t\tvar sin:Float = Math.sin(_rotation);\r\n\t\t\t\t\tvar a:Float = _scaleX * cos;\r\n\t\t\t\t\tvar b:Float = _scaleX * sin;\r\n\t\t\t\t\tvar c:Float = _scaleY * -sin;\r\n\t\t\t\t\tvar d:Float = _scaleY * cos;\r\n\t\t\t\t\tvar tx:Float = _x - _pivotX * a - _pivotY * c;\r\n\t\t\t\t\tvar ty:Float = _y - _pivotX * b - _pivotY * d;\r\n\t\t\t\t\t\r\n\t\t\t\t\t_transformationMatrix.setTo(a, b, c, d, tx, ty);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t_transformationMatrix.identity();\r\n\t\t\t\t_transformationMatrix.scale(_scaleX, _scaleY);\r\n\t\t\t\tMatrixUtil.skew(_transformationMatrix, _skewX, _skewY);\r\n\t\t\t\t_transformationMatrix.rotate(_rotation);\r\n\t\t\t\t_transformationMatrix.translate(_x, _y);\r\n\t\t\t\t\r\n\t\t\t\tif (_pivotX != 0.0 || _pivotY != 0.0) \r\n\t\t\t\t{\r\n\t\t\t\t\t// prepend pivot transformation\r\n\t\t\t\t\t_transformationMatrix.tx = _x - _transformationMatrix.a * _pivotX - _transformationMatrix.c * _pivotY;\r\n\t\t\t\t\t_transformationMatrix.ty = _y - _transformationMatrix.b * _pivotX - _transformationMatrix.d * _pivotY;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn _transformationMatrix;\r\n\t}\r\n\t\r\n\tprivate function set_transformationMatrix(matrix:Matrix):Matrix\r\n\t{\r\n\t\tvar PI_Q:Float = Math.PI / 4.0;\r\n\t\t\r\n\t\tsetRequiresRedraw();\r\n\t\t_orientationChanged = false;\r\n\t\t_transformationMatrix.copyFrom(matrix);\r\n\t\t_pivotX = _pivotY = 0;\r\n\t\t\r\n\t\t_x = matrix.tx;\r\n\t\t_y = matrix.ty;\r\n\t\t\r\n\t\t_skewX = Math.atan(-matrix.c / matrix.d);\r\n\t\t_skewY = Math.atan(matrix.b / matrix.a);\r\n\t\t\r\n\t\t// NaN check (\"isNaN\" causes allocation)\r\n\t\tif (_skewX != _skewX) _skewX = 0.0;\r\n\t\tif (_skewY != _skewY) _skewY = 0.0;\r\n\t\t\r\n\t\t_scaleY = ((_skewX > -PI_Q && _skewX < PI_Q)) ? matrix.d / Math.cos(_skewX):-matrix.c / Math.sin(_skewX);\r\n\t\t_scaleX = ((_skewY > -PI_Q && _skewY < PI_Q)) ? matrix.a / Math.cos(_skewY):matrix.b / Math.sin(_skewY);\r\n\t\t\r\n\t\tif (MathUtil.isEquivalent(_skewX, _skewY)) \r\n\t\t{\r\n\t\t\t_rotation = _skewX;\r\n\t\t\t_skewX = _skewY = 0;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\t_rotation = 0;\r\n\t\t}\r\n\t\treturn matrix;\r\n\t}\r\n\t\r\n\t/** The 3D transformation matrix of the object relative to its parent.\r\n\t *\r\n\t *  <p>For 2D objects, this property returns just a 3D version of the 2D transformation\r\n\t *  matrix. Only the 'Sprite3D' class supports real 3D transformations.</p>\r\n\t *\r\n\t *  <p>CAUTION: not a copy, but the actual object!</p> */\r\n\tprivate function get_transformationMatrix3D():Matrix3D\r\n\t{\r\n\t\t// this method needs to be overridden in 3D-supporting subclasses (like Sprite3D).\r\n\t\t\r\n\t\tif (_transformationMatrix3D == null) \r\n\t\t\t_transformationMatrix3D = new Matrix3D();\r\n\t\t\r\n\t\treturn MatrixUtil.convertTo3D(transformationMatrix, _transformationMatrix3D);\r\n\t}\r\n\t\r\n\t/** Indicates if this object or any of its parents is a 'Sprite3D' object. */\r\n\tprivate function get_is3D():Bool\r\n\t{\r\n\t\treturn _is3D;\r\n\t}\r\n\t\r\n\t/** Indicates if the mouse cursor should transform into a hand while it's over the sprite.\r\n\t *  @default false */\r\n\tprivate function get_useHandCursor():Bool\r\n\t{\r\n\t\treturn _useHandCursor;\r\n\t}\r\n\t\r\n\tprivate function set_useHandCursor(value:Bool):Bool\r\n\t{\r\n\t\tif (value == _useHandCursor) return value;\r\n\t\t_useHandCursor = value;\r\n\t\t\r\n\t\tif (_useHandCursor) \r\n\t\t\taddEventListener(TouchEvent.TOUCH, onTouch)\r\n\t\telse \r\n\t\tremoveEventListener(TouchEvent.TOUCH, onTouch);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function onTouch(event:TouchEvent):Void\r\n\t{\r\n\t\t#if flash\r\n\t\tMouse.cursor = (event.interactsWith(this)) ? MouseCursor.BUTTON:MouseCursor.AUTO;\r\n\t\t#end\r\n\t}\r\n\t\r\n\t/** The bounds of the object relative to the local coordinates of the parent. */\r\n\tprivate function get_bounds():Rectangle\r\n\t{\r\n\t\treturn getBounds(_parent);\r\n\t}\r\n\t\r\n\t/** The width of the object in pixels.\r\n\t *  Note that for objects in a 3D space (connected to a Sprite3D), this value might not\r\n\t *  be accurate until the object is part of the display list. */\r\n\tprivate function get_width():Float\r\n\t{\r\n\t\treturn getBounds(_parent, sHelperRect).width;\r\n\t}\r\n\t\r\n\tprivate function set_width(value:Float):Float\r\n\t{\r\n\t\t// this method calls 'this.scaleX' instead of changing _scaleX directly.\r\n\t\t// that way, subclasses reacting on size changes need to override only the scaleX method.\r\n\t\t\r\n\t\tscaleX = 1.0;\r\n\t\tvar actualWidth:Float = width;\r\n\t\tif (actualWidth != 0.0)\t\t\t scaleX = value / actualWidth;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The height of the object in pixels.\r\n\t *  Note that for objects in a 3D space (connected to a Sprite3D), this value might not\r\n\t *  be accurate until the object is part of the display list. */\r\n\tprivate function get_height():Float\r\n\t{\r\n\t\treturn getBounds(_parent, sHelperRect).height;\r\n\t}\r\n\t\r\n\tprivate function set_height(value:Float):Float\r\n\t{\r\n\t\tscaleY = 1.0;\r\n\t\tvar actualHeight:Float = height;\r\n\t\tif (actualHeight != 0.0)\t\t\t scaleY = value / actualHeight;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The x coordinate of the object relative to the local coordinates of the parent. */\r\n\tprivate function get_x():Float\r\n\t{\r\n\t\treturn _x;\r\n\t}\r\n\t\r\n\tprivate function set_x(value:Float):Float\r\n\t{\r\n\t\tif (_x != value) \r\n\t\t{\r\n\t\t\t_x = value;\r\n\t\t\tsetOrientationChanged();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The y coordinate of the object relative to the local coordinates of the parent. */\r\n\tprivate function get_y():Float\r\n\t{\r\n\t\treturn _y;\r\n\t}\r\n\t\r\n\tprivate function set_y(value:Float):Float\r\n\t{\r\n\t\tif (_y != value) \r\n\t\t{\r\n\t\t\t_y = value;\r\n\t\t\tsetOrientationChanged();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The x coordinate of the object's origin in its own coordinate space (default: 0). */\r\n\tprivate function get_pivotX():Float\r\n\t{\r\n\t\treturn _pivotX;\r\n\t}\r\n\t\r\n\tprivate function set_pivotX(value:Float):Float\r\n\t{\r\n\t\tif (_pivotX != value) \r\n\t\t{\r\n\t\t\t_pivotX = value;\r\n\t\t\tsetOrientationChanged();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The y coordinate of the object's origin in its own coordinate space (default: 0). */\r\n\tprivate function get_pivotY():Float\r\n\t{\r\n\t\treturn _pivotY;\r\n\t}\r\n\t\r\n\tprivate function set_pivotY(value:Float):Float\r\n\t{\r\n\t\tif (_pivotY != value) \r\n\t\t{\r\n\t\t\t_pivotY = value;\r\n\t\t\tsetOrientationChanged();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The horizontal scale factor. '1' means no scale, negative values flip the object.\r\n\t *  @default 1 */\r\n\tprivate function get_scaleX():Float\r\n\t{\r\n\t\treturn _scaleX;\r\n\t}\r\n\t\r\n\tprivate function set_scaleX(value:Float):Float\r\n\t{\r\n\t\tif (_scaleX != value) \r\n\t\t{\r\n\t\t\t_scaleX = value;\r\n\t\t\tsetOrientationChanged();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The vertical scale factor. '1' means no scale, negative values flip the object.\r\n\t *  @default 1 */\r\n\tprivate function get_scaleY():Float\r\n\t{\r\n\t\treturn _scaleY;\r\n\t}\r\n\t\r\n\tprivate function set_scaleY(value:Float):Float\r\n\t{\r\n\t\tif (_scaleY != value) \r\n\t\t{\r\n\t\t\t_scaleY = value;\r\n\t\t\tsetOrientationChanged();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Sets both 'scaleX' and 'scaleY' to the same value. The getter simply returns the\r\n\t *  value of 'scaleX' (even if the scaling values are different). @default 1 */\r\n\tprivate function get_scale():Float\r\n\t{\r\n\t\treturn scaleX;\r\n\t}\r\n\t\r\n\tprivate function set_scale(value:Float):Float\r\n\t{\r\n\t\tscaleX = scaleY = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The horizontal skew angle in radians. */\r\n\tprivate function get_skewX():Float\r\n\t{\r\n\t\treturn _skewX;\r\n\t}\r\n\t\r\n\tprivate function set_skewX(value:Float):Float\r\n\t{\r\n\t\tvalue = MathUtil.normalizeAngle(value);\r\n\t\t\r\n\t\tif (_skewX != value) \r\n\t\t{\r\n\t\t\t_skewX = value;\r\n\t\t\tsetOrientationChanged();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The vertical skew angle in radians. */\r\n\tprivate function get_skewY():Float\r\n\t{\r\n\t\treturn _skewY;\r\n\t}\r\n\t\r\n\tprivate function set_skewY(value:Float):Float\r\n\t{\r\n\t\tvalue = MathUtil.normalizeAngle(value);\r\n\t\t\r\n\t\tif (_skewY != value) \r\n\t\t{\r\n\t\t\t_skewY = value;\r\n\t\t\tsetOrientationChanged();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The rotation of the object in radians. (In Starling, all angles are measured \r\n\t *  in radians.) */\r\n\tprivate function get_rotation():Float\r\n\t{\r\n\t\treturn _rotation;\r\n\t}\r\n\t\r\n\tprivate function set_rotation(value:Float):Float\r\n\t{\r\n\t\tvalue = MathUtil.normalizeAngle(value);\r\n\t\t\r\n\t\tif (_rotation != value) \r\n\t\t{\r\n\t\t\t_rotation = value;\r\n\t\t\tsetOrientationChanged();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The opacity of the object. 0 = transparent, 1 = opaque. @default 1 */\r\n\tprivate function get_alpha():Float\r\n\t{\r\n\t\treturn _alpha;\r\n\t}\r\n\t\r\n\tprivate function set_alpha(value:Float):Float\r\n\t{\r\n\t\tif (value != _alpha) \r\n\t\t{\r\n\t\t\t_alpha = value < (0.0) ? 0.0:(value > (1.0) ? 1.0:value);\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The visibility of the object. An invisible object will be untouchable. */\r\n\tprivate function get_visible():Bool\r\n\t{\r\n\t\treturn _visible;\r\n\t}\r\n\t\r\n\tprivate function set_visible(value:Bool):Bool\r\n\t{\r\n\t\tif (value != _visible) \r\n\t\t{\r\n\t\t\t_visible = value;\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if this object (and its children) will receive touch events. */\r\n\tprivate function get_touchable():Bool\r\n\t{\r\n\t\treturn _touchable;\r\n\t}\r\n\t\r\n\tprivate function set_touchable(value:Bool):Bool\r\n\t{\r\n\t\t_touchable = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The blend mode determines how the object is blended with the objects underneath. \r\n\t *   @default auto\r\n\t *   @see starling.display.BlendMode */\r\n\tprivate function get_blendMode():String\r\n\t{\r\n\t\treturn _blendMode;\r\n\t}\r\n\t\r\n\tprivate function set_blendMode(value:String):String\r\n\t{\r\n\t\tif (value != _blendMode) \r\n\t\t{\r\n\t\t\t_blendMode = value;\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The name of the display object (default: null). Used by 'getChildByName()' of \r\n\t *  display object containers. */\r\n\tprivate function get_name():String\r\n\t{\r\n\t\treturn _name;\r\n\t}\r\n\t\r\n\tprivate function set_name(value:String):String\r\n\t{\r\n\t\t_name = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The filter that is attached to the display object. The starling.filters\r\n\t *  package contains several classes that define specific filters you can use. \r\n\t *  Beware that a filter should NOT be attached to different objects simultaneously (for\r\n\t *  performance reasons). Furthermore, when you set this property to 'null' or\r\n\t *  assign a different filter, the previous filter is NOT disposed automatically\r\n\t *  (since you might want to reuse it). */\r\n\tprivate function get_filter():FragmentFilter\r\n\t{\r\n\t\treturn _filter;\r\n\t}\r\n\t\r\n\tprivate function set_filter(value:FragmentFilter):FragmentFilter\r\n\t{\r\n\t\tif (value != _filter) \r\n\t\t{\r\n\t\t\tif (_filter != null) _filter.setTarget(null);\r\n\t\t\tif (value != null) value.setTarget(this);\r\n\t\t\t\r\n\t\t\t_filter = value;\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The display object that acts as a mask for the current object.\r\n\t *  Assign <code>null</code> to remove it.\r\n\t *\r\n\t *  <p>A pixel of the masked display object will only be drawn if it is within one of the\r\n\t *  mask's polygons. Texture pixels and alpha values of the mask are not taken into\r\n\t *  account. The mask object itself is never visible.</p>\r\n\t *\r\n\t *  <p>If the mask is part of the display list, masking will occur at exactly the\r\n\t *  location it occupies on the stage. If it is not, the mask will be placed in the local\r\n\t *  coordinate system of the target object (as if it was one of its children).</p>\r\n\t *\r\n\t *  <p>For rectangular masks, you can use simple quads; for other forms (like circles\r\n\t *  or arbitrary shapes) it is recommended to use a 'Canvas' instance.</p>\r\n\t *\r\n\t *  <p>Beware that a mask will typically cause at least two additional draw calls:\r\n\t *  one to draw the mask to the stencil buffer and one to erase it. However, if the\r\n\t *  mask object is an instance of <code>starling.display.Quad</code> and is aligned\r\n\t *  parallel to the stage axes, rendering will be optimized: instead of using the\r\n\t *  stencil buffer, the object will be clipped using the scissor rectangle. That's\r\n\t *  faster and reduces the number of draw calls, so make use of this when possible.</p>\r\n\t *\r\n\t *  @see Canvas\r\n\t *  @default null\r\n\t */\r\n\tprivate function get_mask():DisplayObject\r\n\t{\r\n\t\treturn _mask;\r\n\t}\r\n\t\r\n\tprivate function set_mask(value:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (_mask != value) \r\n\t\t{\r\n\t\t\tif (_mask != null) _mask._isMask = false;\r\n\t\t\tif (value != null) \r\n\t\t\t{\r\n\t\t\t\tvalue._isMask = true;\r\n\t\t\t\tvalue._hasVisibleArea = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t_mask = value;\r\n\t\t\tsetRequiresRedraw();\r\n\t\t\tupdateSupportsRenderCache();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The display object container that contains this display object. */\r\n\tprivate function get_parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn _parent;\r\n\t}\r\n\t\r\n\t/** The topmost object in the display tree the object is part of. */\r\n\tprivate function get_base():DisplayObject\r\n\t{\r\n\t\tvar currentObject:DisplayObject = this;\r\n\t\twhile (currentObject._parent != null) currentObject = currentObject._parent;\r\n\t\treturn currentObject;\r\n\t}\r\n\t\r\n\t/** The root object the display object is connected to (i.e. an instance of the class \r\n\t *  that was passed to the Starling constructor), or null if the object is not connected\r\n\t *  to the stage. */\r\n\tprivate function get_root():DisplayObject\r\n\t{\r\n\t\tvar currentObject:DisplayObject = this;\r\n\t\twhile (currentObject._parent != null)\r\n\t\t{\r\n\t\t\tif (Std.is(currentObject._parent, Stage)) return currentObject\r\n\t\t\telse currentObject = currentObject.parent;\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/** The stage the display object is connected to, or null if it is not connected \r\n\t *  to the stage. */\r\n\tprivate function get_stage():Stage\r\n\t{\r\n\t\tvar base = this.base;\r\n\t\tif (base == null) {\r\n\t\t\treturn null;\r\n\t\t}else if(Std.is(base, Stage)) {\r\n\t\t\treturn cast (base);\r\n\t\t}else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.rendering;\r\n\r\n\r\nimport starling.utils.StringUtil;\r\n\r\n/** Points to a location within a list of MeshBatches.\r\n *\r\n *  <p>Starling uses these tokens in its render cache. Each call to\r\n *  <code>painter.pushState()</code> or <code>painter.popState()</code> provides a token\r\n *  referencing the current location within the cache. In the next frame, if the relevant\r\n *  part of the display tree has not changed, these tokens can be used to render directly\r\n *  from the cache instead of constructing new MeshBatches.</p>\r\n *\r\n *  @see Painter\r\n */\r\nclass BatchToken\r\n{\r\n\t/** The ID of the current MeshBatch. */\r\n\t@:isVar public var batchID(get, set):Int;\r\n\t\r\n\t/** The ID of the next vertex within the current MeshBatch. */\r\n\tpublic var vertexID:Int = 0;\r\n\t\r\n\t/** The ID of the next index within the current MeshBatch. */\r\n\tpublic var indexID:Int = 0;\r\n\t\r\n\t/** Creates a new BatchToken. */\r\n\tpublic function new(batchID:Int = 0, vertexID:Int = 0, indexID:Int = 0)\r\n\t{\r\n\t\tsetTo(batchID, vertexID, indexID);\r\n\t}\r\n\t\r\n\t/** Copies the properties from the given token to this instance. */\r\n\tpublic function copyFrom(token:BatchToken):Void\r\n\t{\r\n\t\tbatchID = token.batchID;\r\n\t\tvertexID = token.vertexID;\r\n\t\tindexID = token.indexID;\r\n\t}\r\n\t\r\n\t/** Changes all properties at once. */\r\n\tpublic function setTo(batchID:Int = 0, vertexID:Int = 0, indexID:Int = 0):Void\r\n\t{\r\n\t\tthis.batchID = batchID;\r\n\t\tthis.vertexID = vertexID;\r\n\t\tthis.indexID = indexID;\r\n\t}\r\n\t\r\n\t/** Resets all properties to zero. */\r\n\tpublic function reset():Void\r\n\t{\r\n\t\tbatchID = vertexID = indexID = 0;\r\n\t}\r\n\t\r\n\t/** Indicates if this token contains the same values as the given one. */\r\n\tpublic function equals(other:BatchToken):Bool\r\n\t{\r\n\t\treturn batchID == other.batchID && vertexID == other.vertexID && indexID == other.indexID;\r\n\t}\r\n\t\r\n\t/** Creates a String representation of this instance. */\r\n\tpublic function toString():String\r\n\t{\r\n\t\treturn StringUtil.format(\r\n\t\t\t\"[BatchToken batchID={0} vertexID={1} indexID={2}]\",\r\n\t\t\t[batchID, vertexID, indexID]\r\n\t\t);\r\n\t}\r\n\t\r\n\tfunction get_batchID():Int \r\n\t{\r\n\t\treturn batchID;\r\n\t}\r\n\t\r\n\tfunction set_batchID(value:Int):Int \r\n\t{\r\n\t\tbatchID = value;\r\n\t\treturn batchID;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport openfl.errors.RangeError;\r\nimport haxe.Constraints.Function;\r\n\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.system.Capabilities;\r\n\r\n\r\nimport starling.errors.AbstractClassError;\r\nimport starling.events.Event;\r\nimport starling.filters.FragmentFilter;\r\nimport starling.rendering.BatchToken;\r\nimport starling.rendering.Painter;\r\nimport starling.utils.MatrixUtil;\r\n\r\n\r\n\r\n/**\r\n *  A DisplayObjectContainer represents a collection of display objects.\r\n *  It is the base class of all display objects that act as a container for other objects. By \r\n *  maintaining an ordered list of children, it defines the back-to-front positioning of the \r\n *  children within the display tree.\r\n *  \r\n *  <p>A container does not a have size in itself. The width and height properties represent the \r\n *  extents of its children. Changing those properties will scale all children accordingly.</p>\r\n *  \r\n *  <p>As this is an abstract class, you can't instantiate it directly, but have to \r\n *  use a subclass instead. The most lightweight container class is \"Sprite\".</p>\r\n *  \r\n *  <strong>Adding and removing children</strong>\r\n *  \r\n *  <p>The class defines methods that allow you to add or remove children. When you add a child, \r\n *  it will be added at the frontmost position, possibly occluding a child that was added \r\n *  before. You can access the children via an index. The first child will have index 0, the \r\n *  second child index 1, etc.</p> \r\n *  \r\n *  Adding and removing objects from a container triggers non-bubbling events.\r\n *  \r\n *  <ul>\r\n *   <li><code>Event.ADDED</code>: the object was added to a parent.</li>\r\n *   <li><code>Event.ADDED_TO_STAGE</code>: the object was added to a parent that is \r\n *\t   connected to the stage, thus becoming visible now.</li>\r\n *   <li><code>Event.REMOVED</code>: the object was removed from a parent.</li>\r\n *   <li><code>Event.REMOVED_FROM_STAGE</code>: the object was removed from a parent that \r\n *\t   is connected to the stage, thus becoming invisible now.</li>\r\n *  </ul>\r\n *  \r\n *  Especially the <code>ADDED_TO_STAGE</code> event is very helpful, as it allows you to \r\n *  automatically execute some logic (e.g. start an animation) when an object is rendered the \r\n *  first time.\r\n *  \r\n *  @see Sprite\r\n *  @see DisplayObject\r\n */\r\nclass DisplayObjectContainer extends DisplayObject\r\n{\r\n\tpublic var numChildren(get, never):Int;\r\n\tpublic var touchGroup(get, set):Bool;\r\n\r\n\t// members\r\n\t\r\n\tprivate var _children:Array<DisplayObject> = [];\r\n\tprivate var _touchGroup:Bool;\r\n\t\r\n\t// helper objects\r\n\tprivate static var sHelperMatrix:Matrix = new Matrix();\r\n\tprivate static var sHelperPoint:Point = new Point();\r\n\tprivate static var sBroadcastListeners:Array<DisplayObject> = [];\r\n\tprivate static var sSortBuffer:Array<DisplayObject> = [];\r\n\tprivate static var sCacheToken:BatchToken = new BatchToken();\r\n\t\r\n\t// construction\r\n\t\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\tif (Capabilities.isDebugger &&\r\n\t\t\tType.getClassName(Type.getClass(this)) == \"starling.display::DisplayObjectContainer\") \r\n\t\t{\r\n\t\t\tthrow new AbstractClassError();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Disposes the resources of all children. */\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\tvar i:Int = _children.length - 1;\r\n\t\twhile (i >= 0) {\r\n\t\t\t_children[i].dispose();\r\n\t\t\t_children.splice(i, 1);\r\n\t\t\t--i;\r\n\t\t}\r\n\t\t\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t// child management\r\n\t\r\n\t/** Adds a child to the container. It will be at the frontmost position. */\r\n\tpublic function addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn addChildAt(child, _children.length);\r\n\t}\r\n\t\r\n\t/** Adds a child to the container at a certain index. */\r\n\tpublic function addChildAt(child:DisplayObject, index:Int):DisplayObject\r\n\t{\r\n\t\tvar numChildren:Int = _children.length;\r\n\t\t\r\n\t\tif (index >= 0 && index <= numChildren) \r\n\t\t{\r\n\t\t\tsetRequiresRedraw();\r\n\t\t\t\r\n\t\t\tif (child.parent == this) \r\n\t\t\t{\r\n\t\t\t\tsetChildIndex(child, index);\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t_children.insert(index, child);\r\n\t\t\t\t\r\n\t\t\t\tchild.removeFromParent();\r\n\t\t\t\tchild.setParent(this);\r\n\t\t\t\tchild.dispatchEventWith(Event.ADDED, true);\r\n\t\t\t\t\r\n\t\t\t\tif (stage != null) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar isDisplayObjectContainer:Bool = Std.is(child, DisplayObjectContainer);\r\n\t\t\t\t\tif (isDisplayObjectContainer)\r\n                    {\r\n                        var container:DisplayObjectContainer = cast(child, DisplayObjectContainer);\r\n\t\t\t\t\t\tcontainer.broadcastEventWith(Event.ADDED_TO_STAGE);\r\n                    }\r\n                    else child.dispatchEventWith(Event.ADDED_TO_STAGE);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn child;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tthrow new RangeError(\"Invalid child index\");\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t/** Removes a child from the container. If the object is not a child, nothing happens. \r\n\t *  If requested, the child will be disposed right away. */\r\n\tpublic function removeChild(child:DisplayObject, dispose:Bool = false):DisplayObject\r\n\t{\r\n\t\tvar childIndex:Int = getChildIndex(child);\r\n\t\tif (childIndex != -1)\t\t\t removeChildAt(childIndex, dispose);\r\n\t\treturn child;\r\n\t}\r\n\t\r\n\t/** Removes a child at a certain index. The index positions of any display objects above\r\n\t *  the child are decreased by 1. If requested, the child will be disposed right away. */\r\n\tpublic function removeChildAt(index:Int, dispose:Bool = false):DisplayObject\r\n\t{\r\n\t\tif (index >= 0 && index < _children.length) \r\n\t\t{\r\n\t\t\tsetRequiresRedraw();\r\n\t\t\t\r\n\t\t\tvar child:DisplayObject = _children[index];\r\n\t\t\tchild.dispatchEventWith(Event.REMOVED, true);\r\n\t\t\t\r\n\t\t\tif (stage != null) \r\n\t\t\t{\r\n\t\t\t\tvar isDisplayObjectContainer:Bool = Std.is(child, DisplayObjectContainer);\r\n\t\t\t\tif (isDisplayObjectContainer)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar container:DisplayObjectContainer = cast(child, DisplayObjectContainer);\r\n\t\t\t\t\tcontainer.broadcastEventWith(Event.REMOVED_FROM_STAGE);\r\n\t\t\t\t}\r\n\t\t\t\telse child.dispatchEventWith(Event.REMOVED_FROM_STAGE);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tchild.setParent(null);\r\n\t\t\tindex = Lambda.indexOf(_children, child);  // index might have changed by event handler  \r\n\t\t\tif (index >= 0) _children.splice(index, 1);\r\n\t\t\tif (dispose) child.dispose();\r\n\t\t\t\r\n\t\t\treturn child;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tthrow new RangeError(\"Invalid child index\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Removes a range of children from the container (endIndex included). \r\n\t *  If no arguments are given, all children will be removed. */\r\n\tpublic function removeChildren(beginIndex:Int = 0, endIndex:Int = -1, dispose:Bool = false):Void\r\n\t{\r\n\t\tif (endIndex < 0 || endIndex >= numChildren) \r\n\t\t\tendIndex = numChildren - 1;\r\n\t\t\r\n\t\tfor (i in beginIndex...endIndex + 1){removeChildAt(beginIndex, dispose);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Returns a child object at a certain index. If you pass a negative index,\r\n\t *  '-1' will return the last child, '-2' the second to last child, etc. */\r\n\tpublic function getChildAt(index:Int):DisplayObject\r\n\t{\r\n\t\tvar numChildren:Int = _children.length;\r\n\t\t\r\n\t\tif (index < 0) \r\n\t\t\tindex = numChildren + index;\r\n\t\t\r\n\t\tif (index >= 0 && index < numChildren) \r\n\t\t\treturn _children[index]\r\n\t\telse \r\n\t\tthrow new RangeError(\"Invalid child index\");\r\n\t}\r\n\t\r\n\t/** Returns a child object with a certain name (non-recursively). */\r\n\tpublic function getChildByName(name:String):DisplayObject\r\n\t{\r\n\t\tvar numChildren:Int = _children.length;\r\n\t\tfor (i in 0...numChildren){if (_children[i].name == name)\t\t\t\t return _children[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/** Returns the index of a child within the container, or \"-1\" if it is not found. */\r\n\tpublic function getChildIndex(child:DisplayObject):Int\r\n\t{\r\n\t\treturn Lambda.indexOf(_children, child);\r\n\t}\r\n\t\r\n\t/** Moves a child to a certain index. Children at and after the replaced position move up.*/\r\n\tpublic function setChildIndex(child:DisplayObject, index:Int):Void\r\n\t{\r\n\t\tvar oldIndex:Int = getChildIndex(child);\r\n\t\tif (oldIndex == index) return;\r\n\t\tif (oldIndex == -1) throw new ArgumentError(\"Not a child of this container\");\r\n\t\t\r\n\t\t_children.splice(oldIndex, 1);\r\n\t\t_children.insert(index, child);\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\t/** Swaps the indexes of two children. */\r\n\tpublic function swapChildren(child1:DisplayObject, child2:DisplayObject):Void\r\n\t{\r\n\t\tvar index1:Int = getChildIndex(child1);\r\n\t\tvar index2:Int = getChildIndex(child2);\r\n\t\tif (index1 == -1 || index2 == -1) throw new ArgumentError(\"Not a child of this container\");\r\n\t\tswapChildrenAt(index1, index2);\r\n\t}\r\n\t\r\n\t/** Swaps the indexes of two children. */\r\n\tpublic function swapChildrenAt(index1:Int, index2:Int):Void\r\n\t{\r\n\t\tvar child1:DisplayObject = getChildAt(index1);\r\n\t\tvar child2:DisplayObject = getChildAt(index2);\r\n\t\t_children[index1] = child2;\r\n\t\t_children[index2] = child1;\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\t/** Sorts the children according to a given function (that works just like the sort function\r\n\t *  of the Vector class). */\r\n\tpublic function sortChildren(compareFunction:Function):Void\r\n\t{\r\n\t\tsSortBuffer.splice(_children.length, sSortBuffer.length - _children.length);\r\n\t\tmergeSort(_children, compareFunction, 0, _children.length, sSortBuffer);\r\n\t\tsSortBuffer.splice(0, sSortBuffer.length);\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\t/** Determines if a certain object is a child of the container (recursively). */\r\n\tpublic function contains(child:DisplayObject):Bool\r\n\t{\r\n\t\twhile (child != null)\r\n\t\t{\r\n\t\t\tif (child == this) return true;\r\n\t\t\telse child = child.parent;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// other methods\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function getBounds(targetSpace:DisplayObject, out:Rectangle = null):Rectangle\r\n\t{\r\n\t\tif (out == null) out = new Rectangle();\r\n\t\t\r\n\t\tvar numChildren:Int = _children.length;\r\n\t\t\r\n\t\tif (numChildren == 0) \r\n\t\t{\r\n\t\t\tgetTransformationMatrix(targetSpace, sHelperMatrix);\r\n\t\t\tMatrixUtil.transformCoords(sHelperMatrix, 0.0, 0.0, sHelperPoint);\r\n\t\t\tout.setTo(sHelperPoint.x, sHelperPoint.y, 0, 0);\r\n\t\t}\r\n\t\telse if (numChildren == 1) \r\n\t\t{\r\n\t\t\t_children[0].getBounds(targetSpace, out);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar minX:Float = Math.POSITIVE_INFINITY;\r\n\t\t\tvar maxX:Float = Math.NEGATIVE_INFINITY;\r\n\t\t\tvar minY:Float = Math.POSITIVE_INFINITY;\r\n\t\t\tvar maxY:Float = Math.NEGATIVE_INFINITY;\r\n\t\t\t\r\n\t\t\tfor (i in 0...numChildren){\r\n\t\t\t\t_children[i].getBounds(targetSpace, out);\r\n\t\t\t\t\r\n\t\t\t\tif (minX > out.x) minX = out.x;\r\n\t\t\t\tif (maxX < out.right) maxX = out.right;\r\n\t\t\t\tif (minY > out.y) minY = out.y;\r\n\t\t\t\tif (maxY < out.bottom) maxY = out.bottom;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tout.setTo(minX, minY, maxX - minX, maxY - minY);\r\n\t\t}\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function hitTest(localPoint:Point):DisplayObject\r\n\t{\r\n\t\tif (!visible || !touchable || !hitTestMask(localPoint))\t\t\t return null;\r\n\t\t\r\n\t\tvar target:DisplayObject = null;\r\n\t\tvar localX:Float = localPoint.x;\r\n\t\tvar localY:Float = localPoint.y;\r\n\t\tvar numChildren:Int = _children.length;\r\n\t\t\r\n\t\tvar i:Int = numChildren - 1;\r\n\t\twhile (i >= 0){  // front to back!  \r\n\t\t\t{\r\n\t\t\t\tvar child:DisplayObject = _children[i];\r\n\t\t\t\tif (child.isMask) {\r\n\t\t\t\t\t--i;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tsHelperMatrix.copyFrom(child.transformationMatrix);\r\n\t\t\t\tsHelperMatrix.invert();\r\n\t\t\t\t\r\n\t\t\t\tMatrixUtil.transformCoords(sHelperMatrix, localX, localY, sHelperPoint);\r\n\t\t\t\ttarget = child.hitTest(sHelperPoint);\r\n\t\t\t\t\r\n\t\t\t\tif (target != null)\t\t\t\t\t return (_touchGroup) ? this:target;\r\n\t\t\t}\r\n\t\t\t--i;\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function render(painter:Painter):Void\r\n\t{\r\n\t\tvar numChildren:Int = _children.length;\r\n\t\tvar frameID:Int = painter.frameID;\r\n\t\tvar selfOrParentChanged:Bool = _lastParentOrSelfChangeFrameID == frameID;\r\n\t\t\r\n\t\tfor (i in 0...numChildren){\r\n\t\t\tvar child:DisplayObject = _children[i];\r\n\t\t\t\r\n\t\t\tif (child._hasVisibleArea) \r\n\t\t\t{\r\n\t\t\t\tif (selfOrParentChanged) \r\n\t\t\t\t\tchild._lastParentOrSelfChangeFrameID = frameID;\r\n\t\t\t\t\r\n\t\t\t\tif (child._lastParentOrSelfChangeFrameID != frameID &&\r\n\t\t\t\t\tchild._lastChildChangeFrameID != frameID &&\r\n\t\t\t\t\tchild._tokenFrameID == frameID - 1) \r\n\t\t\t\t{\r\n\t\t\t\t\tpainter.pushState(sCacheToken);\r\n\t\t\t\t\tpainter.drawFromCache(child._pushToken, child._popToken);\r\n\t\t\t\t\t\r\n\t\t\t\t\tpainter.popState(child._popToken);\r\n\t\t\t\t\tchild._pushToken.copyFrom(sCacheToken);\r\n\t\t\t\t}\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\t\t\t\t\tvar mask:DisplayObject = child._mask;\r\n\t\t\t\t\tvar filter:FragmentFilter = child._filter;\r\n\t\t\t\t\t\r\n\t\t\t\t\tpainter.pushState(child._pushToken);\r\n\t\t\t\t\tpainter.setStateTo(child.transformationMatrix, child.alpha, child.blendMode);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (mask != null) painter.drawMask(mask);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (filter != null) filter.render(painter)\r\n\t\t\t\t\telse child.render(painter);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (mask != null) painter.eraseMask(mask);\r\n\t\t\t\t\t\r\n\t\t\t\t\tpainter.popState(child._popToken);\r\n\t\t\t\t}\r\n\t\t\t\tchild._tokenFrameID = frameID;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Dispatches an event on all children (recursively). The event must not bubble. */\r\n\tpublic function broadcastEvent(event:Event):Void\r\n\t{\r\n\t\tif (event.bubbles) \r\n\t\t\tthrow new ArgumentError(\"Broadcast of bubbling events is prohibited\");\r\n\t\t\t\r\n\t\t// care that the static helper vector does not get corrupted.\t// And since another listener could call this method internally, we have to take\t// Thus, we collect them in a list and iterate over that list instead.\t// The event listeners might modify the display tree, which could make the loop crash.\r\n\t\tvar fromIndex:Int = sBroadcastListeners.length;\r\n\t\tgetChildEventListeners(this, event.type, sBroadcastListeners);\r\n\t\tvar toIndex:Int = sBroadcastListeners.length;\r\n\t\t\r\n\t\tfor (i in fromIndex...toIndex){sBroadcastListeners[i].dispatchEvent(event);\r\n\t\t}\r\n\t\t\r\n\t\tsBroadcastListeners.splice(fromIndex, sBroadcastListeners.length-fromIndex);\r\n\t}\r\n\t\r\n\t/** Dispatches an event with the given parameters on all children (recursively). \r\n\t *  The method uses an internal pool of event objects to avoid allocations. */\r\n\tpublic function broadcastEventWith(eventType:String, data:Dynamic = null):Void\r\n\t{\r\n\t\tvar event:Event = Event.fromPool(eventType, false, data);\r\n\t\tbroadcastEvent(event);\r\n\t\tEvent.toPool(event);\r\n\t}\r\n\t\r\n\t/** The number of children of this container. */\r\n\tprivate function get_numChildren():Int\r\n\t{\r\n\t\treturn _children.length;\r\n\t}\r\n\t\r\n\t/** If a container is a 'touchGroup', it will act as a single touchable object.\r\n\t *  Touch events will have the container as target, not the touched child.\r\n\t *  (Similar to 'mouseChildren' in the classic display list, but with inverted logic.)\r\n\t *  @default false */\r\n\tprivate function get_touchGroup():Bool\r\n\t{\r\n\t\treturn _touchGroup;\r\n\t}\r\n\t\r\n\tprivate function set_touchGroup(value:Bool):Bool\r\n\t{\r\n\t\t_touchGroup = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t// helpers\r\n\t\r\n\tprivate static function mergeSort(input:Array<DisplayObject>, compareFunc:Function,\r\n\t\t\tstartIndex:Int, length:Int,\r\n\t\t\tbuffer:Array<DisplayObject>):Void\r\n\t{\r\n\t\t// This is a port of the C++ merge sort algorithm shown here:\r\n\t\t// http://www.cprogramming.com/tutorial/computersciencetheory/mergesort.html\r\n\t\t\r\n\t\tif (length > 1) \r\n\t\t{\r\n\t\t\tvar i:Int;\r\n\t\t\tvar endIndex:Int = startIndex + length;\r\n\t\t\tvar halfLength:Int = untyped length / 2;\r\n\t\t\tvar l:Int = startIndex;  // current position in the left subvector  \r\n\t\t\tvar r:Int = startIndex + halfLength;  // current position in the right subvector  \r\n\t\t\t\r\n\t\t\t// sort each subvector\r\n\t\t\tmergeSort(input, compareFunc, startIndex, halfLength, buffer);\r\n\t\t\tmergeSort(input, compareFunc, startIndex + halfLength, length - halfLength, buffer);\r\n\t\t\t\r\n\t\t\t// merge the vectors, using the buffer vector for temporary storage\r\n\t\t\tfor (i in 0...length){\r\n\t\t\t\t// Check to see if any elements remain in the left vector;\r\n\t\t\t\t// if so, we check if there are any elements left in the right vector;\r\n\t\t\t\t// if so, we compare them. Otherwise, we know that the merge must\r\n\t\t\t\t// take the element from the left vector. */\r\n\t\t\t\tif (l < startIndex + halfLength &&\r\n\t\t\t\t\t(r == endIndex || compareFunc(input[l], input[r]) <= 0)) \r\n\t\t\t\t{\r\n\t\t\t\t\tbuffer[i] = input[l];\r\n\t\t\t\t\tl++;\r\n\t\t\t\t}\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\t\t\t\t\tbuffer[i] = input[r];\r\n\t\t\t\t\tr++;\r\n\t\t\t\t}\r\n\t\t\t}  // copy the sorted subvector back to the input  \r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tfor (i in startIndex...endIndex){input[i] = buffer[cast(i - startIndex, Int)];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.display)\r\n\tprivate function getChildEventListeners(object:DisplayObject, eventType:String, listeners:Array<DisplayObject>):Void\r\n\t{\r\n\t\tvar isDisplayObjectContainer:Bool = Std.is(object, DisplayObjectContainer);\r\n\t\tvar container:DisplayObjectContainer = isDisplayObjectContainer ? cast(object, DisplayObjectContainer) : null;\r\n\t\t\r\n\t\tif (object.hasEventListener(eventType)) \r\n\t\t\tlisteners[listeners.length] = object;\r\n\t\t\r\n\t\t// avoiding 'push'\r\n\t\tif (container != null) \r\n\t\t{\r\n\t\t\tvar children:Array<DisplayObject> = container._children;\r\n\t\t\tvar numChildren:Int = children.length;\r\n\t\t\t\r\n\t\t\tfor (i in 0...numChildren) {\r\n\t\t\t\tgetChildEventListeners(children[i], eventType, listeners);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\n\r\n/** A Sprite is the most lightweight, non-abstract container class.\r\n *  Use it as a simple means of grouping objects together in one coordinate system.\r\n *\r\n *  @see DisplayObject\r\n *  @see DisplayObjectContainer\r\n */\r\nclass Sprite extends DisplayObjectContainer\r\n{\r\n\t/** Creates an empty sprite. */\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n","package;\r\n\r\nimport openfl.system.System;\r\nimport openfl.ui.Keyboard;\r\n\r\nimport scenes.AnimationScene;\r\nimport scenes.BenchmarkScene;\r\nimport scenes.BlendModeScene;\r\nimport scenes.CustomHitTestScene;\r\nimport scenes.FilterScene;\r\nimport scenes.MaskScene;\r\nimport scenes.MovieScene;\r\nimport scenes.RenderTextureScene;\r\nimport scenes.Sprite3DScene;\r\nimport scenes.TextScene;\r\nimport scenes.TextureScene;\r\nimport scenes.TouchScene;\r\n\r\nimport scenes.Scene;\r\n\r\nimport starling.core.Starling;\r\nimport starling.display.Button;\r\nimport starling.display.Image;\r\nimport starling.display.Sprite;\r\nimport starling.events.Event;\r\nimport starling.events.KeyboardEvent;\r\nimport starling.utils.AssetManager;\r\nimport starling.display.Quad;\r\nimport starling.rendering.BatchToken;\r\nimport starling.textures.Texture;\r\n\r\nclass Game extends Sprite\r\n{\r\n\tpublic static var assets(get, never):AssetManager;\r\n\r\n\t// Embed the Ubuntu Font. Beware: the 'embedAsCFF'-part IS REQUIRED!!!\r\n\t@:meta(Embed(source=\"../../demo/assets/fonts/Ubuntu-R.ttf\",embedAsCFF=\"false\",fontFamily=\"Ubuntu\"))\r\n\r\n\tprivate static var UbuntuRegular:Class<Dynamic>;\r\n\t\r\n\tprivate var _mainMenu:MainMenu;\r\n\tprivate var _currentScene:Scene;\r\n\t\r\n\tprivate static var sAssets:AssetManager;\r\n\t\r\n\tprivate var sceneMap:Map<String, Class<Dynamic>>;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t// nothing to do here -- Startup will call \"start\" immediately.\r\n\t\t\r\n\t\tsceneMap = new Map<String, Class<Dynamic>>();\r\n\t\tsceneMap[\"scenes.TextureScene\"] = TextureScene;\r\n\t\tsceneMap[\"scenes.TouchScene\"] = TouchScene;\r\n\t\tsceneMap[\"scenes.TextScene\"] = TextScene;\r\n\t\tsceneMap[\"scenes.AnimationScene\"] = AnimationScene;\r\n\t\tsceneMap[\"scenes.CustomHitTestScene\"] = CustomHitTestScene;\r\n\t\tsceneMap[\"scenes.MovieScene\"] = MovieScene;\r\n\t\tsceneMap[\"scenes.FilterScene\"] = FilterScene;\r\n\t\tsceneMap[\"scenes.BlendModeScene\"] = BlendModeScene;\r\n\t\tsceneMap[\"scenes.RenderTextureScene\"] = RenderTextureScene;\r\n\t\tsceneMap[\"scenes.BenchmarkScene\"] = BenchmarkScene;\r\n\t\tsceneMap[\"scenes.MaskScene\"] = MaskScene;\r\n\t\tsceneMap[\"scenes.Sprite3DScene\"] = Sprite3DScene;\r\n\t}\r\n\t\r\n\tpublic function start(assets:AssetManager):Void\r\n\t{\r\n\t\tsAssets = assets;\r\n\t\t\r\n\t\tvar bgTexture:Texture = assets.getTexture(\"background\");\r\n\t\tvar bgImage:Image = new Image(bgTexture);\r\n\t\taddChild(bgImage);\r\n\t\t\r\n\t\tshowMainMenu();\r\n\t\t\r\n\t\taddEventListener(Event.TRIGGERED, onButtonTriggered);\r\n\t\tstage.addEventListener(KeyboardEvent.KEY_DOWN, onKey);\r\n\t}\r\n\t\r\n\tprivate function showMainMenu():Void\r\n\t{\r\n\t\t// now would be a good time for a clean-up\r\n\t\t#if flash\r\n\t\tSystem.pauseForGCIfCollectionImminent(0);\r\n\t\t#end\r\n\t\tSystem.gc();\r\n\t\t\r\n\t\tif (_mainMenu == null) \r\n\t\t\t_mainMenu = new MainMenu();\r\n\t\t\r\n\t\taddChild(_mainMenu);\r\n\t}\r\n\t\r\n\tprivate function onKey(event:KeyboardEvent):Void\r\n\t{\r\n\t\tif (event.keyCode == Keyboard.SPACE) \r\n\t\t\tStarling.Current.showStats = !Starling.Current.showStats\r\n\t\telse if (event.keyCode == Keyboard.X) \r\n\t\t\tStarling.Context.dispose();\r\n\t}\r\n\t\r\n\tprivate function onButtonTriggered(event:Event):Void\r\n\t{\r\n\t\tvar button:Button = cast(event.target, Button);\r\n\t\t\r\n\t\tif (button.name == \"backButton\") \r\n\t\t\tcloseScene()\r\n\t\telse \r\n\t\tshowScene(button.name);\r\n\t}\r\n\t\r\n\tprivate function closeScene():Void\r\n\t{\r\n\t\t_currentScene.removeFromParent(true);\r\n\t\t_currentScene.dispose();\r\n\t\t_currentScene = null;\r\n\t\t\r\n\t\tshowMainMenu();\r\n\t}\r\n\t\r\n\tprivate function showScene(name:String):Void\r\n\t{\r\n\t\tif (name == null) return;\r\n\t\tvar sceneClass:Class<Dynamic> = sceneMap.get(name);\r\n\t\t_currentScene = Type.createInstance(sceneClass, []);\r\n\t\t_mainMenu.removeFromParent();\r\n\t\taddChild(_currentScene);\r\n\t}\r\n\t\r\n\tprivate static function get_assets():AssetManager\r\n\t{\r\n\t\treturn sAssets;\r\n\t}\r\n}\r\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n /**\n\tIntIterator is used for implementing interval iterations.\n\n\tIt is usually not used explicitly, but through its special syntax:\n\t`min...max`\n\n\tWhile it is possible to assign an instance of IntIterator to a variable or\n\tfield, it is worth noting that IntIterator does not reset after being used\n\tin a for-loop. Subsequent uses of the same instance will then have no\n\teffect.\n**/\nclass IntIterator {\n\n\tvar min : Int;\n\tvar max : Int;\n\n\t/**\n\t\tIterates from `min` (inclusive) to `max` (exclusive).\n\n\t\tIf `max <= min`, the iterator will not act as a countdown.\n\t**/\n\tpublic inline function new( min : Int, max : Int ) {\n\t\tthis.min = min;\n\t\tthis.max = max;\n\t}\n\n\t/**\n\t\tReturns true if the iterator has other items, false otherwise.\n\t**/\n\tpublic inline function hasNext() {\n\t\treturn min < max;\n\t}\n\n\t/**\n\t\tMoves to the next item of the iterator.\n\n\t\tIf this is called while hasNext() is false, the result is unspecified.\n\t**/\n\tpublic inline function next() {\n\t\treturn min++;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe `Lambda` class is a collection of methods to support functional\n\tprogramming. It is ideally used with 'using Lambda' and then acts as an\n\textension to Iterable types.\n\n\tOn static platforms, working with the Iterable structure might be slower\n\tthan performing the operations directly on known types, such as Array and\n\tList.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\nclass Lambda {\n\n\t/**\n\t\tCreates an Array from Iterable `it`.\n\n\t\tIf `it` is an Array, this function returns a copy of it.\n\t**/\n\tpublic static function array<A>( it : Iterable<A> ) : Array<A> {\n\t\tvar a = new Array<A>();\n\t\tfor(i in it)\n\t\t\ta.push(i);\n\t\treturn a;\n\t}\n\n\t/**\n\t\tCreates a List form Iterable `it`.\n\n\t\tIf `it` is a List, this function returns a copy of it.\n\t**/\n\tpublic static function list<A>( it : Iterable<A> ) : List<A> {\n\t\tvar l = new List<A>();\n\t\tfor(i in it)\n\t\t\tl.add(i);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tCreates a new List by applying function `f` to all elements of `it`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function map<A,B>( it : Iterable<A>, f : A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tfor( x in it )\n\t\t\tl.add(f(x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tSimilar to map, but also passes the index of each element to `f`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function mapi<A,B>( it : Iterable<A>, f : Int -> A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tvar i = 0;\n\t\tfor( x in it )\n\t\t\tl.add(f(i++,x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tTells if `it` contains `elt`.\n\n\t\tThis function returns true as soon as an element is found which is equal\n\t\tto `elt` according to the `==` operator.\n\n\t\tIf no such element is found, the result is false.\n\t**/\n\tpublic static function has<A>( it : Iterable<A>, elt : A ) : Bool {\n\t\tfor( x in it )\n\t\t\tif( x == elt )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `it` contains an element for which `f` is true.\n\n\t\tThis function returns true as soon as an element is found for which a\n\t\tcall to `f` returns true.\n\n\t\tIf no such element is found, the result is false.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function exists<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `f` is true for all elements of `it`.\n\n\t\tThis function returns false as soon as an element is found for which a\n\t\tcall to `f` returns false.\n\n\t\tIf no such element is found, the result is true.\n\n\t\tIn particular, this function always returns true if `it` is empty.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function foreach<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( !f(x) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t/**\n\t\tCalls `f` on all elements of `it`, in order.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function iter<A>( it : Iterable<A>, f : A -> Void ) {\n\t\tfor( x in it )\n\t\t\tf(x);\n\t}\n\n\t/**\n\t\tReturns a List containing those elements of `it` for which `f` returned\n\t\ttrue.\n\n\t\tIf `it` is empty, the result is the empty List even if `f` is null.\n\n\t\tOtherwise if `f` is null, the result is unspecified.\n\t**/\n\tpublic static function filter<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tvar l = new List<A>();\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tFunctional fold on Iterable `it`, using function `f` with start argument\n\t\t`first`.\n\n\t\tIf `it` has no elements, the result is `first`.\n\n\t\tOtherwise the first element of `it` is passed to `f` alongside `first`.\n\t\tThe result of that call is then passed to `f` with the next element of\n\t\t`it`, and so on until `it` has no more elements.\n\n\t\tIf `it` or `f` are null, the result is unspecified.\n\t**/\n\tpublic static function fold<A,B>( it : Iterable<A>, f : A -> B -> B, first : B ) : B {\n\t\tfor( x in it )\n\t\t\tfirst = f(x,first);\n\t\treturn first;\n\t}\n\n\t/**\n\t\tReturns the number of elements in `it` for which `pred` is true, or the\n\t\ttotal number of elements in `it` if `pred` is null.\n\n\t\tThis function traverses all elements.\n\t**/\n\tpublic static function count<A>( it : Iterable<A>, ?pred : A -> Bool ) {\n\t\tvar n = 0;\n\t\tif( pred == null )\n\t\t\tfor( _ in it )\n\t\t\t\tn++;\n\t\telse\n\t\t\tfor( x in it )\n\t\t\t\tif( pred(x) )\n\t\t\t\t\tn++;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tTells if Iterable `it` does not contain any element.\n\t**/\n\tpublic static function empty<T>( it : Iterable<T> ) : Bool {\n\t\treturn !it.iterator().hasNext();\n\t}\n\n\t/**\n\t\tReturns the index of the first element `v` within Iterable `it`.\n\n\t\tThis function uses operator `==` to check for equality.\n\n\t\tIf `v` does not exist in `it`, the result is -1.\n\t**/\n\tpublic static function indexOf<T>( it : Iterable<T>, v : T ) : Int {\n\t\tvar i = 0;\n\t\tfor( v2 in it ) {\n\t\t\tif( v == v2 )\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t\tReturns the first element of `it` for which `f` is true.\n\n\t\tThis function returns as soon as an element is found for which a call to\n\t\t`f` returns true.\n\n\t\tIf no such element is found, the result is null.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function find<T>( it : Iterable<T>, f : T -> Bool ) : Null<T> {\n\t\tfor( v in it ) {\n\t\t\tif(f(v)) return v;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tReturns a new List containing all elements of Iterable `a` followed by\n\t\tall elements of Iterable `b`.\n\n\t\tIf `a` or `b` are null, the result is unspecified.\n\t**/\n\tpublic static function concat<T>( a : Iterable<T>, b : Iterable<T> ) : List<T> {\n\t\tvar l = new List();\n\t\tfor( x in a )\n\t\t\tl.add(x);\n\t\tfor( x in b )\n\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA linked-list of elements. The list is composed of two-elements arrays\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole array content every time.\n**/\nclass List<T> {\n\n\tprivate var h : Array<Dynamic>;\n\tprivate var q : Array<Dynamic>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default,null) : Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add( item : T ) {\n\t\tvar x:Array<Dynamic> = #if neko untyped __dollar__array(item,null) #else [item] #end;\n\t\tif( h == null )\n\t\t\th = x;\n\t\telse\n\t\t\tq[1] = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push( item : T ) {\n\t\tvar x : Array<Dynamic> = #if neko\n\t\t\tuntyped __dollar__array(item,h)\n\t\t#else\n\t\t\t[item,h]\n\t\t#end;\n\t\th = x;\n\t\tif( q == null )\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first() : Null<T> {\n\t\treturn if( h == null ) null else h[0];\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last() : Null<T> {\n\t\treturn if( q == null ) null else q[0];\n\t}\n\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop() : Null<T> {\n\t\tif( h == null )\n\t\t\treturn null;\n\t\tvar x = h[0];\n\t\th = h[1];\n\t\tif( h == null )\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty() : Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear() : Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev = null;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( l[0] == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\th = l[1];\n\t\t\t\telse\n\t\t\t\t\tprev[1] = l[1];\n\t\t\t\tif( q == l )\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l[1];\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic inline function iterator() : ListIterator<T> {\n\t\treturn new ListIterator<T>(h);\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l[0]));\n\t\t\tl = l[1];\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep : String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l[0]);\n\t\t\tl = l[1];\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter( f : T -> Bool ) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tif( f(v) )\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f : T -> X) : List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n\n}\n\nprivate class ListIterator<T> {\n\tvar head:Array<Dynamic>;\n\tvar val:Dynamic;\n\n\tpublic inline function new(head:Array<Dynamic>) {\n\t\tthis.head = head;\n\t\tthis.val = null;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():T {\n\t\tval = head[0];\n\t\thead = head[1];\n\t\treturn val;\n\t}\n}\n","\r\n\r\n\r\nimport scenes.AnimationScene;\r\nimport scenes.BenchmarkScene;\r\nimport scenes.BlendModeScene;\r\nimport scenes.CustomHitTestScene;\r\nimport scenes.FilterScene;\r\nimport scenes.MaskScene;\r\nimport scenes.MovieScene;\r\nimport scenes.RenderTextureScene;\r\nimport scenes.Sprite3DScene;\r\nimport scenes.TextScene;\r\nimport scenes.TextureScene;\r\nimport scenes.TouchScene;\r\n\r\nimport starling.core.Starling;\r\nimport starling.display.Button;\r\nimport starling.display.Image;\r\nimport starling.display.Sprite;\r\nimport starling.events.TouchEvent;\r\nimport starling.events.TouchPhase;\r\nimport starling.text.TextField;\r\nimport starling.utils.Align;\r\n\r\nimport utils.MenuButton;\r\n\r\nclass MainMenu extends Sprite\r\n{\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\tinit();\r\n\t}\r\n\t\r\n\tprivate function init():Void\r\n\t{\r\n\t\tvar logo:Image = new Image(Game.assets.getTexture(\"logo\"));\r\n\t\taddChild(logo);\r\n\t\t\r\n\t\ttrace(\"MainMenu\");\r\n\t\tvar scenesToCreate:Array<Dynamic> = [\r\n\t\t[\"Textures\", TextureScene], \r\n\t\t[\"Multitouch\", TouchScene], \r\n\t\t[\"TextFields\", TextScene], \r\n\t\t[\"Animations\", AnimationScene], \r\n\t\t[\"Custom hit-test\", CustomHitTestScene], \r\n\t\t[\"Movie Clip\", MovieScene], \r\n\t\t[\"Filters\", FilterScene], \r\n\t\t[\"Blend Modes\", BlendModeScene], \r\n\t\t[\"Render Texture\", RenderTextureScene], \r\n\t\t[\"Benchmark\", BenchmarkScene], \r\n\t\t[\"Masks\", MaskScene], \r\n\t\t[\"Sprite 3D\", Sprite3DScene]];\r\n\t\t\r\n\t\tvar count:Int = 0;\r\n\t\t\r\n\t\tfor (sceneToCreate in scenesToCreate)\r\n\t\t{\r\n\t\t\tvar sceneTitle:String = sceneToCreate[0];\r\n\t\t\tvar sceneClass:Class<Dynamic> = sceneToCreate[1];\r\n\t\t\t\r\n\t\t\tvar button:Button = new MenuButton(sceneTitle);\r\n\t\t\tbutton.height = 42;\r\n\t\t\tbutton.readjustSize();\r\n\t\t\tbutton.x = count % 2 == (0) ? 28:167;\r\n\t\t\tbutton.y = 155 + (count / 2) * 46;\r\n\t\t\tbutton.name = Type.getClassName(sceneClass);\r\n\t\t\taddChild(button);\r\n\t\t\t\r\n\t\t\tif (scenesToCreate.length % 2 != 0 && count % 2 == 1) {\r\n\t\t\t\tbutton.y += 24;\r\n\t\t\t}\r\n\t\t\tcount++;\r\n\t\t}  // show information about rendering method (hardware/software)  \r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tvar driverInfo:String = Starling.Context.driverInfo;\r\n\t\tvar infoText:TextField = new TextField(310, 64, driverInfo);\r\n\t\tinfoText.format.size = 10;\r\n\t\tinfoText.format.verticalAlign = Align.BOTTOM;\r\n\t\tinfoText.x = 5;\r\n\t\tinfoText.y = 475 - infoText.height;\r\n\t\tinfoText.addEventListener(TouchEvent.TOUCH, onInfoTextTouched);\r\n\t\taddChildAt(infoText, 0);\r\n\t}\r\n\t\r\n\tprivate function onInfoTextTouched(event:TouchEvent):Void\r\n\t{\r\n\t\t//if (event.getTouch(this, TouchPhase.ENDED) != null) \r\n\t\t//\tStarling.Current.showStats = !Starling.Current.showStats;\r\n\t}\r\n}\r\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport haxe.ds.StringMap;\nimport haxe.ds.IntMap;\nimport haxe.ds.HashMap;\nimport haxe.ds.ObjectMap;\nimport haxe.ds.WeakMap;\nimport haxe.ds.EnumValueMap;\nimport haxe.Constraints.IMap;\n\n /**\n\tMap allows key to value mapping for arbitrary value types, and many key\n\ttypes.\n\n\tThis is a multi-type abstract, it is instantiated as one of its\n\tspecialization types depending on its type parameters.\n\n\tA Map can be instantiated without explicit type parameters. Type inference\n\twill then determine the type parameters from the usage.\n\n\tMaps can also be created with `key1 => value1, key2 => value2` syntax.\n\n\tMap is an abstract type, it is not available at runtime.\n**/\n@:multiType(K)\nabstract Map<K,V>(IMap<K,V> ) {\n\n\t/**\n\t\tCreates a new Map.\n\n\t\tThis becomes a constructor call to one of the specialization types in\n\t\tthe output. The rules for that are as follows:\n\n\t\t1. if K is a `String`, `haxe.ds.StringMap` is used\n\t\t2. if K is an `Int`, `haxe.ds.IntMap` is used\n\t\t3. if K is an `EnumValue`, `haxe.ds.EnumValueMap` is used\n\t\t4. if K is any other class or structure, `haxe.ds.ObjectMap` is used\n\t\t5. if K is any other type, it causes a compile-time error\n\n\t\t(Cpp) Map does not use weak keys on ObjectMap by default.\n\t**/\n\tpublic function new();\n\n\t/**\n\t\tMaps `key` to `value`.\n\n\t\tIf `key` already has a mapping, the previous value disappears.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic inline function set(key:K, value:V) this.set(key, value);\n\n\t/**\n\t\tReturns the current mapping of `key`.\n\n\t\tIf no such mapping exists, null is returned.\n\n\t\tNote that a check like `map.get(key) == null` can hold for two reasons:\n\n\t\t1. the map has no mapping for `key`\n\t\t2. the map has a mapping with a value of `null`\n\n\t\tIf it is important to distinguish these cases, `exists()` should be\n\t\tused.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\t@:arrayAccess public inline function get(key:K) return this.get(key);\n\n\t/**\n\t\tReturns true if `key` has a mapping, false otherwise.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic inline function exists(key:K) return this.exists(key);\n\n\t/**\n\t\tRemoves the mapping of `key` and returns true if such a mapping existed,\n\t\tfalse otherwise.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic inline function remove(key:K) return this.remove(key);\n\n\t/**\n\t\tReturns an Iterator over the keys of `this` Map.\n\n\t\tThe order of keys is undefined.\n\t**/\n\tpublic inline function keys():Iterator<K> {\n\t\treturn this.keys();\n\t}\n\n\t/**\n\t\tReturns an Iterator over the values of `this` Map.\n\n\t\tThe order of values is undefined.\n\t**/\n\tpublic inline function iterator():Iterator<V> {\n\t\treturn this.iterator();\n\t}\n\n\t/**\n\t\tReturns a String representation of `this` Map.\n\n\t\tThe exact representation depends on the platform and key-type.\n\t**/\n\tpublic inline function toString():String {\n\t\treturn this.toString();\n\t}\n\n\t@:arrayAccess @:noCompletion public inline function arrayWrite(k:K, v:V):V {\n\t\tthis.set(k, v);\n\t\treturn v;\n\t}\n\n\t@:to static inline function toStringMap<K:String,V>(t:IMap<K,V>):StringMap<V> {\n\t\treturn new StringMap<V>();\n\t}\n\n\t@:to static inline function toIntMap<K:Int,V>(t:IMap<K,V>):IntMap<V> {\n\t\treturn new IntMap<V>();\n\t}\n\n\t@:to static inline function toEnumValueMapMap<K:EnumValue,V>(t:IMap<K,V>):EnumValueMap<K,V> {\n\t\treturn new EnumValueMap<K, V>();\n\t}\n\n\t@:to static inline function toObjectMap<K:{ },V>(t:IMap<K,V>):ObjectMap<K,V> {\n\t\treturn new ObjectMap<K, V>();\n\t}\n\n\t@:from static inline function fromStringMap<V>(map:StringMap<V>):Map< String, V > {\n\t\treturn cast map;\n\t}\n\n\t@:from static inline function fromIntMap<V>(map:IntMap<V>):Map< Int, V > {\n\t\treturn cast map;\n\t}\n\n\t@:from static inline function fromObjectMap<K:{ }, V>(map:ObjectMap<K,V>):Map<K,V> {\n\t\treturn cast map;\n\t}\n}\n\n@:deprecated\ntypedef IMap<K, V> = haxe.Constraints.IMap<K, V>;","package;\r\n\r\n\r\nimport openfl.display.Sprite;\r\nimport openfl.events.Event;\r\n\r\n\r\nclass NMEPreloader extends Sprite {\r\n\t\r\n\t\r\n\tprivate var outline:Sprite;\r\n\tprivate var progress:Sprite;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\tvar backgroundColor = getBackgroundColor ();\r\n\t\tvar r = backgroundColor >> 16 & 0xFF;\r\n\t\tvar g = backgroundColor >> 8  & 0xFF;\r\n\t\tvar b = backgroundColor & 0xFF;\r\n\t\tvar perceivedLuminosity = (0.299 * r + 0.587 * g + 0.114 * b);\r\n\t\tvar color = 0x000000;\r\n\t\t\r\n\t\tif (perceivedLuminosity < 70) {\r\n\t\t\t\r\n\t\t\tcolor = 0xFFFFFF;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar x = 30;\r\n\t\tvar height = 7;\r\n\t\tvar y = getHeight () / 2 - height / 2;\r\n\t\tvar width = getWidth () - x * 2;\r\n\t\t\r\n\t\tvar padding = 2;\r\n\t\t\r\n\t\toutline = new Sprite ();\r\n\t\toutline.graphics.beginFill (color, 0.07);\r\n\t\toutline.graphics.drawRect (0, 0, width, height);\r\n\t\toutline.x = x;\r\n\t\toutline.y = y;\r\n\t\taddChild (outline);\r\n\t\t\r\n\t\tprogress = new Sprite ();\r\n\t\tprogress.graphics.beginFill (color, 0.35);\r\n\t\tprogress.graphics.drawRect (0, 0, width - padding * 2, height - padding * 2);\r\n\t\tprogress.x = x + padding;\r\n\t\tprogress.y = y + padding;\r\n\t\tprogress.scaleX = 0;\r\n\t\taddChild (progress);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getBackgroundColor ():Int {\r\n\t\t\r\n\t\treturn 3355443;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getHeight ():Float {\r\n\t\t\r\n\t\tvar height = 960;\r\n\t\t\r\n\t\tif (height > 0) {\r\n\t\t\t\r\n\t\t\treturn height;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn flash.Lib.current.stage.stageHeight;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getWidth ():Float {\r\n\t\t\r\n\t\tvar width = 640;\r\n\t\t\r\n\t\tif (width > 0) {\r\n\t\t\t\r\n\t\t\treturn width;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn flash.Lib.current.stage.stageWidth;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onInit () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onLoaded () {\r\n\t\t\r\n\t\tdispatchEvent (new Event (Event.COMPLETE));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onUpdate (bytesLoaded:Int, bytesTotal:Int):Void {\r\n\t\t\r\n\t\tvar percentLoaded = bytesLoaded / bytesTotal;\r\n\t\t\r\n\t\tif (percentLoaded > 1) {\r\n\t\t\t\r\n\t\t\tpercentLoaded = 1;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tprogress.scaleX = percentLoaded;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic {\n\t\ttry return untyped o[field] catch( e : Dynamic ) return null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : haxe.Constraints.Function, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\n\tvar b:String;\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get,never) : Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic inline function new() {\n\t\tb = \"\";\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>( x : T ) : Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub( s : String, pos : Int, ?len : Int) : Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn b;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t'using StringTools' and then acts as an extension to the String class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cpp\nusing cpp.NativeString;\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlEncode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLEncoder.encode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.EscapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.quote(s, \"\");\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlDecode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: htmlUnescape(htmlEscape(s)) == s\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is null, the result is unspecified.\n\n\t\tIf `start` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#elseif cpp\n\t\tif (s.length<start.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str();\n\t\tvar p1 = start.c_str();\n\t\tfor(i in 0...start.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is null, the result is unspecified.\n\n\t\tIf `end` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#elseif cpp\n\t\tif (s.length<end.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str().add( s.length-end.length );\n\t\tvar p1 = end.c_str();\n\t\tfor(i in 0...end.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String \"\", or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\t#if python\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length) return false;\n\t\t#end\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for ltrim(rtrim(s)).\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String \"\", `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String \"\", `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits length equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than String.charCodeAt() on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the \\0\n\t\tcharacter.\n\t**/\n\tpublic static inline function fastCodeAt( s : String, index : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (untyped s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash || cpp)\n\t\treturn c == 0;\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif neko\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#elseif python\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static inline function getClass<T>( o : T ) : Class<T> {\n\t\treturn if (o == null) null else @:privateAccess js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\tif (a == null)\n\t\t\treturn null;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f:Dynamic = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\tvar a : Array<String> = untyped e.__constructs__;\n\t\treturn a.copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped e.__empty_constructs__;\n\t}\n\n}\n\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n#if ((flash || flash9doc || cs) && !doc_gen)\n/**\n\tThe unsigned Int type is only defined for Flash and C#. It's currently\n\thandled the same as a normal Int.\n**/\n@:coreType\n@:notNull\n@:runtimeValue\n@:analyzer(no_const_propagation)\nabstract UInt to Int from Int\n{\n\t@:commutative @:op(A+B) private static function addI(lhs:UInt, rhs:Int):UInt;\n\t@:commutative @:op(A+B) private static function addF(lhs:UInt, rhs:Float):Float;\n\t@:op(A+B) private static function add(lhs:UInt, rhs:UInt):UInt;\n\n\t@:commutative @:op(A*B) private static function mulI(lhs:UInt, rhs:Int):UInt;\n\t@:commutative @:op(A*B) private static function mulF(lhs:UInt, rhs:Float):Float;\n\t@:op(A*B) private static function mul(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A%B) private static function modI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A%B) private static function modF(lhs:UInt, rhs:Float):Float;\n\t@:op(A%B) private static function mod(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A-B) private static function subI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A-B) private static function subF(lhs:UInt, rhs:Float):Float;\n\t@:op(A-B) private static function sub(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A/B) private static function divI(lhs:UInt, rhs:Int):Float;\n\t@:op(A/B) private static function divF(lhs:UInt, rhs:Float):Float;\n\t@:op(A/B) private static function div(lhs:UInt, rhs:UInt):Float;\n\n\t@:commutative @:op(A|B) private static function orI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A|B) private static function or(lhs:UInt, rhs:UInt):UInt;\n\n\t@:commutative @:op(A^B) private static function xorI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A^B) private static function xor(lhs:UInt, rhs:UInt):UInt;\n\n\t@:commutative @:op(A&B) private static function andI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A&B) private static function and(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A<<B) private static function shl(lhs:UInt, rhs:Int):UInt;\n\t@:op(A>>B) private static function shr(lhs:UInt, rhs:Int):UInt;\n\t@:op(A>>>B) private static function ushr(lhs:UInt, rhs:Int):UInt;\n\n\t@:op(A>B) private static function gt(lhs:UInt, rhs:UInt):Bool;\n\t@:op(A>=B) private static function gte(lhs:UInt, rhs:UInt):Bool;\n\t@:op(A<B) private static function lt(lhs:UInt, rhs:UInt):Bool;\n\t@:op(A<=B) private static function lte(lhs:UInt, rhs:UInt):Bool;\n\n\t@:op(A>B) private static function gtf(lhs:UInt, rhs:Float):Bool;\n\t@:op(A>B) private static function gtf(lhs:Float, rhs:UInt):Bool;\n\t@:op(A>=B) private static function gtef(lhs:UInt, rhs:Float):Bool;\n\t@:op(A>=B) private static function gtef(lhs:Float, rhs:UInt):Bool;\n\t@:op(A<B) private static function ltf(lhs:UInt, rhs:Float):Bool;\n\t@:op(A<B) private static function ltf(lhs:Float, rhs:UInt):Bool;\n\t@:op(A<=B) private static function ltef(lhs:UInt, rhs:Float):Bool;\n\t@:op(A<=B) private static function ltef(lhs:Float, rhs:UInt):Bool;\n\n\t@:op(~A) private static function bneg(t:UInt):UInt;\n\n\t@:commutative @:op(A == B) private static function equalsInt<T:Int>(a:UInt, b:T):Bool;\n\t@:commutative @:op(A != B) private static function notEqualsInt<T:Int>(a:UInt, b:T):Bool;\n\t@:commutative @:op(A == B) private static function equalsFloat<T:Float>(a:UInt, b:T):Bool;\n\t@:commutative @:op(A != B) private static function notEqualsFloat<T:Float>(a:UInt, b:T):Bool;\n\n\t@:op(++A) private function prefixIncrement():UInt;\n\t@:op(A++) private function postfixIncrement():UInt;\n\t@:op(--A) private function prefixDecrement():UInt;\n\t@:op(A--) private function postfixDecrement():UInt;\n}\n#else\n/**\n\tThe unsigned Int type is only defined for Flash and C#.\n\tSimulate it for other platforms.\n**/\nabstract UInt(Int) from Int to Int {\n\n\t@:op(A + B) private static inline function add(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() + b.toInt();\n\t}\n\n\t@:op(A / B) private static inline function div(a:UInt, b:UInt):Float {\n\t\treturn a.toFloat() / b.toFloat();\n\t}\n\n\t@:op(A * B) private static inline function mul(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() * b.toInt();\n\t}\n\n\t@:op(A - B) private static inline function sub(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() - b.toInt();\n\t}\n\n\t@:op(A > B) private static #if !js inline #end function gt(a:UInt, b:UInt):Bool {\n\t\tvar aNeg = a.toInt() < 0;\n\t\tvar bNeg = b.toInt() < 0;\n\t\treturn\n\t\t\tif( aNeg != bNeg ) aNeg;\n\t\t\telse a.toInt() > b.toInt();\n\t}\n\n\t@:op(A >= B) private static #if !js inline #end function gte(a:UInt, b:UInt):Bool {\n\t\tvar aNeg = a.toInt() < 0;\n\t\tvar bNeg = b.toInt() < 0;\n\t\treturn\n\t\t\tif( aNeg != bNeg ) aNeg;\n\t\t\telse a.toInt() >= b.toInt();\n\t}\n\n\t@:op(A < B) private static inline function lt(a:UInt, b:UInt):Bool {\n\t\treturn gt(b, a);\n\t}\n\n\t@:op(A <= B) private static inline function lte(a:UInt, b:UInt):Bool {\n\t\treturn gte(b, a);\n\t}\n\n\t@:op(A & B) private static inline function and(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() & b.toInt();\n\t}\n\n\t@:op(A | B) private static inline function or(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() | b.toInt();\n\t}\n\n\t@:op(A ^ B) private static inline function xor(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() ^ b.toInt();\n\t}\n\n\t@:op(A << B) private static inline function shl(a:UInt, b:Int):UInt {\n\t\treturn a.toInt() << b;\n\t}\n\n\t@:op(A >> B) private static inline function shr(a:UInt, b:Int):UInt {\n\t\treturn a.toInt() >> b;\n\t}\n\n\t@:op(A >>> B) private static inline function ushr(a:UInt, b:Int):UInt {\n\t\treturn a.toInt() >>> b;\n\t}\n\n\t@:op(A % B) private static inline function mod(a:UInt, b:UInt):UInt {\n\t\treturn Std.int( a.toFloat() % b.toFloat() );\n\t}\n\n\t@:commutative @:op(A + B) private static inline function addWithFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() + b;\n\t}\n\n\t@:commutative @:op(A * B) private static inline function mulWithFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() * b;\n\t}\n\n\t@:op(A / B) private static inline function divFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() / b;\n\t}\n\n\t@:op(A / B) private static inline function floatDiv(a:Float, b:UInt):Float {\n\t\treturn a / b.toFloat();\n\t}\n\n\t@:op(A - B) private static inline function subFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() - b;\n\t}\n\n\t@:op(A - B) private static inline function floatSub(a:Float, b:UInt):Float {\n\t\treturn a - b.toFloat();\n\t}\n\n\t@:op(A > B) private static inline function gtFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() > b;\n\t}\n\n\t@:commutative @:op(A == B) private static inline function equalsInt<T:Int>(a:UInt, b:T):Bool {\n\t\treturn a.toInt() == b;\n\t}\n\n\t@:commutative @:op(A != B) private static inline function notEqualsInt<T:Int>(a:UInt, b:T):Bool {\n\t\treturn a.toInt() != b;\n\t}\n\n\t@:commutative @:op(A == B) private static inline function equalsFloat<T:Float>(a:UInt, b:T):Bool {\n        return a.toFloat() == b;\n    }\n\n    @:commutative @:op(A != B) private static inline function notEqualsFloat<T:Float>(a:UInt, b:T):Bool {\n        return a.toFloat() != b;\n    }\n\n\t@:op(A >= B) private static inline function gteFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() >= b;\n\t}\n\n\n\t@:op(A > B) private static inline function floatGt(a:Float, b:UInt):Bool {\n\t\treturn a > b.toFloat();\n\t}\n\n\t@:op(A >= B) private static inline function floatGte(a:Float, b:UInt):Bool {\n\t\treturn a >= b.toFloat();\n\t}\n\n\t@:op(A < B) private static inline function ltFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() < b;\n\t}\n\n\t@:op(A <= B) private static inline function lteFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() <= b;\n\t}\n\n\t@:op(A < B) private static inline function floatLt(a:Float, b:UInt):Bool {\n\t\treturn a < b.toFloat();\n\t}\n\n\t@:op(A <= B) private static inline function floatLte(a:Float, b:UInt):Bool {\n\t\treturn a <= b.toFloat();\n\t}\n\n\t@:op(A % B) private static inline function modFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() % b;\n\t}\n\n\t@:op(A % B) private static inline function floatMod(a:Float, b:UInt):Float {\n\t\treturn a % b.toFloat();\n\t}\n\n\t@:op(~A) private inline function negBits():UInt {\n\t\treturn ~this;\n\t}\n\n\t@:op(++A) private inline function prefixIncrement():UInt {\n\t\treturn ++this;\n\t}\n\n\t@:op(A++) private inline function postfixIncrement():UInt {\n\t\treturn this++;\n\t}\n\n\t@:op(--A) private inline function prefixDecrement():UInt {\n\t\treturn --this;\n\t}\n\n\t@:op(A--) private inline function postfixDecrement():UInt {\n\t\treturn this--;\n\t}\n\n\t// TODO: radix is just defined to deal with doc_gen issues\n\tprivate inline function toString(?radix:Int):String {\n\t\treturn Std.string(toFloat());\n\t}\n\n\tprivate inline function toInt():Int {\n\t\treturn this;\n\t}\n\n\t@:to private #if (!js || analyzer) inline #end function toFloat():Float {\n\t\tvar int = toInt();\n\t\tif (int < 0) {\n\t\t\treturn 4294967296.0 + int;\n\t\t}\n\t\telse {\n\t\t\t// + 0.0 here to make sure we promote to Float on some platforms\n\t\t\t// In particular, PHP was having issues when comparing to Int in the == op.\n\t\t\treturn int + 0.0;\n\t\t}\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2015 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n@:enum abstract XmlType(Int) {\n\tvar Element = 0;\n\tvar PCData = 1;\n\tvar CData = 2;\n\tvar Comment = 3;\n\tvar DocType = 4;\n\tvar ProcessingInstruction = 5;\n\tvar Document = 6;\n}\n\nclass Xml {\n\n\tstatic public var Element(default,null) = XmlType.Element;\n\tstatic public var PCData(default,null) = XmlType.PCData;\n\tstatic public var CData(default,null) = XmlType.CData;\n\tstatic public var Comment(default,null) = XmlType.Comment;\n\tstatic public var DocType(default,null) = XmlType.DocType;\n\tstatic public var ProcessingInstruction(default,null) = XmlType.ProcessingInstruction;\n\tstatic public var Document(default,null) = XmlType.Document;\n\n\tstatic public function parse( str : String ) : Xml {\n\t\treturn haxe.xml.Parser.parse(str);\n\t}\n\n\t/**\n\t\tReturns the type of the Xml Node. This should be used before\n\t\taccessing other functions since some might raise an exception\n\t\tif the node type is not correct.\n\t**/\n\tpublic var nodeType(default, null) : XmlType;\n\n\t/**\n\t\tReturns the node name of an Element.\n\t**/\n\t@:isVar public var nodeName(get, set) : String;\n\n\t/**\n\t\tReturns the node value. Only works if the Xml node is not an Element or a Document.\n\t**/\n\t@:isVar public var nodeValue(get, set) : String;\n\n\t/**\n\t\tReturns the parent object in the Xml hierarchy.\n\t\tThe parent can be [null], an Element or a Document.\n\t**/\n\tpublic var parent(default, null) : Xml;\n\n\tvar children:Array<Xml>;\n\tvar attributeMap:Map<String, String>;\n\n\tinline function get_nodeName() {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn nodeName;\n\t}\n\n\tinline function set_nodeName(v) {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn this.nodeName = v;\n\t}\n\n\tinline function get_nodeValue() {\n\t\tif (nodeType == Document || nodeType == Element) {\n\t\t\tthrow 'Bad node type, unexpected $nodeType';\n\t\t}\n\t\treturn nodeValue;\n\t}\n\n\tinline function set_nodeValue(v) {\n\t\tif (nodeType == Document || nodeType == Element) {\n\t\t\tthrow 'Bad node type, unexpected $nodeType';\n\t\t}\n\t\treturn this.nodeValue = v;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createElement( name : String ) : Xml {\n\t\tvar xml = new Xml(Element);\n\t\txml.nodeName = name;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createPCData( data : String ) : Xml {\n\t\tvar xml = new Xml(PCData);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createCData( data : String ) : Xml {\n\t\tvar xml = new Xml(CData);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createComment( data : String ) : Xml {\n\t\tvar xml = new Xml(Comment);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createDocType( data : String ) : Xml {\n\t\tvar xml = new Xml(DocType);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createProcessingInstruction( data : String ) : Xml {\n\t\tvar xml = new Xml(ProcessingInstruction);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createDocument() : Xml {\n\t\treturn new Xml(Document);\n\t}\n\n\t/**\n\t\tGet the given attribute of an Element node. Returns [null] if not found.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function get( att : String ) : String {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn attributeMap[att];\n\t}\n\n\t/**\n\t\tSet the given attribute value for an Element node.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function set( att : String, value : String ) : Void {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\tattributeMap.set(att, value);\n\t}\n\n\t/**\n\t\tRemoves an attribute for an Element node.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function remove( att : String ) : Void {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\tattributeMap.remove(att);\n\t}\n\n\t/**\n\t\tTells if the Element node has a given attribute.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function exists( att : String ) : Bool {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn attributeMap.exists(att);\n\t}\n\n\t/**\n\t\tReturns an [Iterator] on all the attribute names.\n\t**/\n\tpublic function attributes() : Iterator<String> {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn attributeMap.keys();\n\t}\n\n\t/**\n\t\tReturns an iterator of all child nodes.\n\t\tOnly works if the current node is an Element or a Document.\n\t**/\n\tpublic inline function iterator() : Iterator<Xml> {\n\t\tensureElementType();\n\t\treturn children.iterator();\n\t}\n\n\t/**\n\t\tReturns an iterator of all child nodes which are Elements.\n\t\tOnly works if the current node is an Element or a Document.\n\t**/\n\tpublic function elements() : Iterator<Xml> {\n\t\tensureElementType();\n\t\tvar ret = [for (child in children) if (child.nodeType == Element) child];\n\t\treturn ret.iterator();\n\t}\n\n\t/**\n\t\tReturns an iterator of all child nodes which are Elements with the given nodeName.\n\t\tOnly works if the current node is an Element or a Document.\n\t**/\n\tpublic function elementsNamed( name : String ) : Iterator<Xml> {\n\t\tensureElementType();\n\t\tvar ret = [for (child in children) if (child.nodeType == Element && child.nodeName == name) child];\n\t\treturn ret.iterator();\n\t}\n\n\t/**\n\t\tReturns the first child node.\n\t**/\n\tpublic inline function firstChild() : Xml {\n\t\tensureElementType();\n\t\treturn children[0];\n\t}\n\n\t/**\n\t\tReturns the first child node which is an Element.\n\t**/\n\tpublic function firstElement() : Xml {\n\t\tensureElementType();\n\t\tfor (child in children) {\n\t\t\tif (child.nodeType == Element) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tAdds a child node to the Document or Element.\n\t\tA child node can only be inside one given parent node, which is indicated by the [parent] property.\n\t\tIf the child is already inside this Document or Element, it will be moved to the last position among the Document or Element's children.\n\t\tIf the child node was previously inside a different node, it will be moved to this Document or Element.\n\t**/\n\tpublic function addChild( x : Xml ) : Void {\n\t\tensureElementType();\n\t\tif (x.parent != null) {\n\t\t\tx.parent.removeChild(x);\n\t\t}\n\t\tchildren.push(x);\n\t\tx.parent = this;\n\t}\n\n\t/**\n\t\tRemoves a child from the Document or Element.\n\t\tReturns true if the child was successfuly removed.\n\t**/\n\tpublic function removeChild( x : Xml ) : Bool {\n\t\tensureElementType();\n\t\tif (children.remove(x)) {\n\t\t\tx.parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tInserts a child at the given position among the other childs.\n\t\tA child node can only be inside one given parent node, which is indicated by the [parent] property.\n\t\tIf the child is already inside this Document or Element, it will be moved to the new position among the Document or Element's children.\n\t\tIf the child node was previously inside a different node, it will be moved to this Document or Element.\n\t**/\n\tpublic function insertChild( x : Xml, pos : Int ) : Void {\n\t\tensureElementType();\n\t\tif (x.parent != null) {\n\t\t\tx.parent.children.remove(x);\n\t\t}\n\t\tchildren.insert(pos, x);\n\t\tx.parent = this;\n\t}\n\n\t/**\n\t\tReturns a String representation of the Xml node.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn haxe.xml.Printer.print(this);\n\t}\n\n\tfunction new(nodeType:XmlType) {\n\t\tthis.nodeType = nodeType;\n\t\tchildren = [];\n\t\tattributeMap = new Map();\n\t}\n\n\tinline function ensureElementType() {\n\t\tif (nodeType != Document && nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element or Document but found $nodeType';\n\t\t}\n\t}\n}\n","package cpp;\n\n#if cpp\n\ntypedef Callable<T> = Function<T, cpp.abi.Abi >\n\n#else\n\n@:noPackageRestrict\nabstract Callable<T>(T)\n{\n   public var call(get,never):T;\n\n   inline public function new(inValue:T) this = inValue;\n\n   inline function get_call():T return this;\n}\n\n\n#end\n\n\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tElements return by `CallStack` methods.\n**/\nenum StackItem {\n\tCFunction;\n\tModule( m : String );\n\tFilePos( s : Null<StackItem>, file : String, line : Int );\n\tMethod( classname : String, method : String );\n\tLocalFunction( ?v : Int );\n}\n\n/**\n\tGet informations about the call stack.\n**/\nclass CallStack {\n\t#if js\n\tstatic var lastException:js.Error;\n\n\tstatic function getStack(e:js.Error):Array<StackItem> {\n\t\tif (e == null) return [];\n\t\t// https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n\t\tvar oldValue = (untyped Error).prepareStackTrace;\n\t\t(untyped Error).prepareStackTrace = function (error, callsites :Array<Dynamic>) {\n\t\t\tvar stack = [];\n\t\t\tfor (site in callsites) {\n\t\t\t\tif (wrapCallSite != null) site = wrapCallSite(site);\n\t\t\t\tvar method = null;\n\t\t\t\tvar fullName :String = site.getFunctionName();\n\t\t\t\tif (fullName != null) {\n\t\t\t\t\tvar idx = fullName.lastIndexOf(\".\");\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tvar className = fullName.substr(0, idx);\n\t\t\t\t\t\tvar methodName = fullName.substr(idx+1);\n\t\t\t\t\t\tmethod = Method(className, methodName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstack.push(FilePos(method, site.getFileName(), site.getLineNumber()));\n\t\t\t}\n\t\t\treturn stack;\n\t\t}\n\t\tvar a = makeStack(e.stack);\n\t\t(untyped Error).prepareStackTrace = oldValue;\n\t\treturn a;\n\t}\n\n\t// support for source-map-support module\n\t@:noCompletion\n\tpublic static var wrapCallSite:Dynamic->Dynamic;\n\t#end\n\n\t/**\n\t\tReturn the call stack elements, or an empty array if not available.\n\t**/\n\tpublic static function callStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\tvar a = makeStack(untyped __dollar__callstack());\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\tvar a = makeStack( new flash.errors.Error().getStackTrace() );\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\treturn makeStack(\"%s\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_call_stack(true);\n\t\t\treturn makeStack(s);\n\t\t#elseif js\n\t\t\ttry {\n\t\t\t\tthrow new js.Error();\n\t\t\t} catch( e : Dynamic ) {\n\t\t\t\tvar a = getStack(e);\n\t\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.lang.Thread.currentThread().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\tstack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(1, true));\n\t\t#elseif python\n\t\t\tvar stack = [];\n\t\t\tvar infos = python.lib.Traceback.extract_stack();\n\t\t\tinfos.pop();\n\t\t\tinfos.reverse();\n\t\t\tfor (elem in infos)\n\t\t\t\tstack.push(FilePos(null, elem._1, elem._2));\n\t\t\treturn stack;\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t/**\n\t\tReturn the exception stack : this is the stack elements between\n\t\tthe place the last exception was thrown and the place it was\n\t\tcaught, or an empty array if not available.\n\t**/\n\t#if cpp @:noStack #end /* Do not mess up the exception stack */\n\tpublic static function exceptionStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\treturn makeStack(untyped __dollar__excstack());\n\t\t#elseif as3\n\t\t\treturn new Array();\n\t\t#elseif flash\n\t\t\tvar err : flash.errors.Error = untyped flash.Boot.lastError;\n\t\t\tif( err == null ) return new Array();\n\t\t\tvar a = makeStack( err.getStackTrace() );\n\t\t\tvar c = callStack();\n\t\t\tvar i = c.length - 1;\n\t\t\twhile( i > 0 ) {\n\t\t\t\tif( Std.string(a[a.length-1]) == Std.string(c[i]) )\n\t\t\t\t\ta.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t\ti--;\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\treturn makeStack(\"%e\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_exception_stack();\n\t\t\treturn makeStack(s);\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.internal.Exceptions.currentException().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// stack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(cs.internal.Exceptions.exception, true));\n\t\t#elseif python\n\t\t\tvar stack = [];\n\t\t\tvar exc = python.lib.Sys.exc_info();\n\t\t\tif (exc._3 != null)\n\t\t\t{\n\t\t\t\tvar infos = python.lib.Traceback.extract_tb(exc._3);\n\t\t\t\tinfos.reverse();\n\t\t\t\tfor (elem in infos)\n\t\t\t\t\tstack.push(FilePos(null, elem._1, elem._2));\n\t\t\t}\n\t\t\treturn stack;\n\t\t#elseif js\n\t\t\treturn untyped __define_feature__(\"haxe.CallStack.exceptionStack\", getStack(lastException));\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a representation of the stack as a printable string.\n\t**/\n\tpublic static function toString( stack : Array<StackItem> ) {\n\t\tvar b = new StringBuf();\n\t\t#if cpp\n\t\tstack = stack.copy ();\n\t\tstack.reverse();\n\t\t#end\n\t\tfor( s in stack ) {\n\t\t\tb.add(\"\\nCalled from \");\n\t\t\titemToString(b,s);\n\t\t}\n\t\treturn b.toString();\n\t}\n\n\tprivate static function itemToString( b : StringBuf, s ) {\n\t\tswitch( s ) {\n\t\tcase CFunction:\n\t\t\tb.add(\"a C function\");\n\t\tcase Module(m):\n\t\t\tb.add(\"module \");\n\t\t\tb.add(m);\n\t\tcase FilePos(s,file,line):\n\t\t\tif( s != null ) {\n\t\t\t\titemToString(b,s);\n\t\t\t\tb.add(\" (\");\n\t\t\t}\n\t\t\tb.add(file);\n\t\t\tb.add(\" line \");\n\t\t\tb.add(line);\n\t\t\tif( s != null ) b.add(\")\");\n\t\tcase Method(cname,meth):\n\t\t\tb.add(cname);\n\t\t\tb.add(\".\");\n\t\t\tb.add(meth);\n\t\tcase LocalFunction(n):\n\t\t\tb.add(\"local function #\");\n\t\t\tb.add(n);\n\t\t}\n\t}\n\n\t#if cpp @:noStack #end /* Do not mess up the exception stack */\n\tprivate static function makeStack(s #if cs : cs.system.diagnostics.StackTrace #end) {\n\t\t#if neko\n\t\t\tvar a = new Array();\n\t\t\tvar l = untyped __dollar__asize(s);\n\t\t\tvar i = 0;\n\t\t\twhile( i < l ) {\n\t\t\t\tvar x = s[i++];\n\t\t\t\tif( x == null )\n\t\t\t\t\ta.unshift(CFunction);\n\t\t\t\telse if( untyped __dollar__typeof(x) == __dollar__tstring )\n\t\t\t\t\ta.unshift(Module(new String(x)));\n\t\t\t\telse\n\t\t\t\t\ta.unshift(FilePos(null,new String(untyped x[0]),untyped x[1]));\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\tvar a = new Array();\n\t\t\tvar r = ~/at ([^\\/]+?)\\$?(\\/[^\\(]+)?\\(\\)(\\[(.*?):([0-9]+)\\])?/;\n\t\t\tvar rlambda = ~/^MethodInfo-([0-9]+)$/g;\n\t\t\twhile( r.match(s) ) {\n\t\t\t\tvar cl = r.matched(1).split(\"::\").join(\".\");\n\t\t\t\tvar meth = r.matched(2);\n\t\t\t\tvar item;\n\t\t\t\tif( meth == null ) {\n\t\t\t\t\tif( rlambda.match(cl) )\n\t\t\t\t\t\titem = LocalFunction(Std.parseInt(rlambda.matched(1)));\n\t\t\t\t\telse\n\t\t\t\t\t\titem = Method(cl,\"new\");\n\t\t\t\t} else\n\t\t\t\t\titem = Method(cl,meth.substr(1));\n\t\t\t\tif( r.matched(3) != null )\n\t\t\t\t\titem = FilePos( item, r.matched(4), Std.parseInt(r.matched(5)) );\n\t\t\t\ta.push(item);\n\t\t\t\ts = r.matchedRight();\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\tif (!untyped __call__(\"isset\", __var__(\"GLOBALS\", s)))\n\t\t\t\treturn [];\n\t\t\tvar a : Array<String> = untyped __var__(\"GLOBALS\", s);\n\t\t\tvar m = [];\n\t\t\tfor( i in 0...a.length - ((s == \"%s\") ? 2 : 0)) {\n\t\t\t\tvar d = a[i].split(\"::\");\n\t\t\t\tm.unshift(Method(d[0],d[1]));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif cpp\n\t\t\tvar stack : Array<String> = s;\n\t\t\tvar m = new Array<StackItem>();\n\t\t\tfor(func in stack) {\n\t\t\t\tvar words = func.split(\"::\");\n\t\t\t\tif (words.length==0)\n\t\t\t\t\tm.push(CFunction)\n\t\t\t\telse if (words.length==2)\n\t\t\t\t\tm.push(Method(words[0],words[1]));\n\t\t\t\telse if (words.length==4)\n\t\t\t\t\tm.push(FilePos( Method(words[0],words[1]),words[2],Std.parseInt(words[3])));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif js\n\t\t\tif (s == null) {\n\t\t\t\treturn [];\n\t\t\t} else if ((untyped __js__(\"typeof\"))(s) == \"string\") {\n\t\t\t\t// Return the raw lines in browsers that don't support prepareStackTrace\n\t\t\t\tvar stack : Array<String> = s.split(\"\\n\");\n\t\t\t\tif( stack[0] == \"Error\" ) stack.shift();\n\t\t\t\tvar m = [];\n\t\t\t\tvar rie10 = ~/^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$/;\n\t\t\t\tfor( line in stack ) {\n\t\t\t\t\tif( rie10.match(line) ) {\n\t\t\t\t\t\tvar path = rie10.matched(1).split(\".\");\n\t\t\t\t\t\tvar meth = path.pop();\n\t\t\t\t\t\tvar file = rie10.matched(2);\n\t\t\t\t\t\tvar line = Std.parseInt(rie10.matched(3));\n\t\t\t\t\t\tm.push(FilePos( meth == \"Anonymous function\" ? LocalFunction() : meth == \"Global code\" ? null : Method(path.join(\".\"),meth), file, line ));\n\t\t\t\t\t} else\n\t\t\t\t\t\tm.push(Module(StringTools.trim(line))); // A little weird, but better than nothing\n\t\t\t\t}\n\t\t\t\treturn m;\n\t\t\t} else {\n\t\t\t\treturn cast s;\n\t\t\t}\n\t\t#elseif cs\n\t\t\tvar stack = [];\n\t\t\tfor (i in 0...s.FrameCount)\n\t\t\t{\n\t\t\t\tvar frame = s.GetFrame(i);\n\t\t\t\tvar m = frame.GetMethod();\n\n\t\t\t\tvar method = StackItem.Method(m.ReflectedType.ToString(), m.Name);\n\n\t\t\t\tvar fileName = frame.GetFileName();\n\t\t\t\tvar lineNumber = frame.GetFileLineNumber();\n\n\t\t\t\tif (fileName != null || lineNumber >= 0)\n\t\t\t\t\tstack.push(FilePos(method, fileName, lineNumber));\n\t\t\t\telse\n\t\t\t\t\tstack.push(method);\n\t\t\t}\n\t\t\treturn stack;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tA typed interface for bit flags. This is not a real object, only a typed\n\tinterface for an actual Int. Each flag can be tested/set with the\n\tcorresponding enum instance. Up to 32 flags can be stored that way.\n\n\tEnum constructor indices are preserved from haxe syntax, so the first\n\tdeclared is index 0, the next index 1 etc. The methods are optimized if the\n\tenum instance is passed directly, e.g. as has(EnumCtor). Otherwise\n\tType.enumIndex() reflection is used.\n**/\nabstract EnumFlags<T:EnumValue>(Int) {\n\n\t/**\n\t\tInitializes the bitflags to `i`.\n\t**/\n\tpublic inline function new(i = 0) {\n\t\tthis = i;\n\t}\n\n\t/**\n\t\tChecks if the index of enum instance `v` is set.\n\n\t\tThis method is optimized if `v` is an enum instance expression such as\n\t\tSomeEnum.SomeCtor.\n\n\t\tIf `v` is null, the result is unspecified.\n\t**/\n\tpublic inline function has( v : T ) : Bool {\n\t\treturn this & (1 << Type.enumIndex(v)) != 0;\n\t}\n\n\t/**\n\t\tSets the index of enum instance `v`.\n\n\t\tThis method is optimized if `v` is an enum instance expression such as\n\t\tSomeEnum.SomeCtor.\n\n\t\tIf `v` is null, the result is unspecified.\n\t**/\n\tpublic inline function set( v : T ) : Void {\n\t\tthis |= 1 << Type.enumIndex(v);\n\t}\n\n\t/**\n\t\tUnsets the index of enum instance `v`.\n\n\t\tThis method is optimized if `v` is an enum instance expression such as\n\t\tSomeEnum.SomeCtor.\n\n\t\tIf `v` is null, the result is unspecified.\n\t**/\n\tpublic inline function unset( v : T ) : Void {\n\t\tthis &= 0xFFFFFFF - (1 << Type.enumIndex(v));\n\t}\n\n\t/**\n\t\tConvert a integer bitflag into a typed one (this is a no-op, it does not\n\t\thave any impact on speed).\n\t**/\n\tpublic inline static function ofInt<T:EnumValue>( i : Int ) : EnumFlags<T> {\n\t\treturn new EnumFlags<T>(i);\n\t}\n\n\t/**\n\t\tConvert the typed bitflag into the corresponding int value (this is a\n\t\tno-op, it doesn't have any impact on speed).\n\t**/\n\tpublic inline function toInt() : Int {\n\t\treturn this;\n\t}\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n package haxe;\n\n /**\n \tInt32 provides a 32-bit integer with consistent overflow behavior across\n \tall platforms.\n **/\nabstract Int32(Int) from Int to Int {\n\t@:op(-A) private function negate():Int32;\n\n\t@:op(++A) private inline function preIncrement():Int32\n\t\treturn this = clamp(++this);\n\n\t@:op(A++) private inline function postIncrement():Int32 {\n\t\tvar ret = this++;\n\t\tthis = clamp(this);\n\t\treturn ret;\n\t}\n\n\t@:op(--A) private inline function preDecrement():Int32\n\t\treturn this = clamp(--this);\n\n\t@:op(A--) private inline function postDecrement():Int32 {\n\t\tvar ret = this--;\n\t\tthis = clamp(this);\n\t\treturn ret;\n\t}\n\n\t@:op(A + B) private static inline function add(a:Int32, b:Int32):Int32\n\t\treturn clamp( (a : Int) + (b : Int) );\n\n\t@:op(A + B) @:commutative private static inline function addInt(a:Int32, b:Int):Int32\n\t\treturn clamp( (a : Int) + (b : Int) );\n\n\t@:op(A + B) @:commutative private static function addFloat(a:Int32, b:Float):Float;\n\n\t@:op(A - B) private static inline function sub(a:Int32, b:Int32):Int32\n\t\treturn clamp( (a : Int) - (b : Int) );\n\n\t@:op(A - B) private static inline function subInt(a:Int32, b:Int):Int32\n\t\treturn clamp( (a : Int) - (b : Int) );\n\n\t@:op(A - B) private static inline function intSub(a:Int, b:Int32):Int32\n\t\treturn clamp( (a : Int) - (b : Int) );\n\n\t@:op(A - B) private static function subFloat(a:Int32, b:Float):Float;\n\n\t@:op(A - B) public static function floatSub(a:Float, b:Int32):Float;\n\n\t#if (as3 || js || php || python)\n\n\t@:op(A * B) private static function mul(a:Int32, b:Int32):Int32\n\t\treturn clamp( (a : Int) * ((b : Int) & 0xFFFF) + clamp( (a : Int) * ((b : Int) >>> 16) << 16 ) );\n\n\t@:op(A * B) @:commutative private static inline function mulInt(a:Int32, b:Int):Int32\n\t\treturn mul(a, b);\n\n\t#else\n\n\t@:op(A * B) private static function mul(a:Int32, b:Int32):Int32;\n\t@:op(A * B) @:commutative private static function mulInt(a:Int32, b:Int):Int32;\n\n\t#end\n\n\t@:op(A * B) @:commutative private static function mulFloat(a:Int32, b:Float):Float;\n\n\t@:op(A / B) private static function div(a:Int32, b:Int32):Float;\n\t@:op(A / B) private static function divInt(a:Int32, b:Int):Float;\n\t@:op(A / B) private static function intDiv(a:Int, b:Int32):Float;\n\t@:op(A / B) private static function divFloat(a:Int32, b:Float):Float;\n\t@:op(A / B) private static function floatDiv(a:Float, b:Int32):Float;\n\n\t@:op(A % B) private static function mod(a:Int32, b:Int32):Int32;\n\t@:op(A % B) private static function modInt(a:Int32, b:Int):Int;\n\t@:op(A % B) private static function intMod(a:Int, b:Int32):Int;\n\t@:op(A % B) private static function modFloat(a:Int32, b:Float):Float;\n\t@:op(A % B) private static function floatMod(a:Float, b:Int32):Float;\n\n\t@:op(A == B) private static function eq(a:Int32, b:Int32):Bool;\n\t@:op(A == B) @:commutative private static function eqInt(a:Int32, b:Int):Bool;\n\t@:op(A == B) @:commutative private static function eqFloat(a:Int32, b:Float):Bool;\n\n\t@:op(A != B) private static function neq(a:Int32, b:Int32):Bool;\n\t@:op(A != B) @:commutative private static function neqInt(a:Int32, b:Int):Bool;\n\t@:op(A != B) @:commutative private static function neqFloat(a:Int32, b:Float):Bool;\n\n\t@:op(A < B) private static function lt(a:Int32, b:Int32):Bool;\n\t@:op(A < B) private static function ltInt(a:Int32, b:Int):Bool;\n\t@:op(A < B) private static function intLt(a:Int, b:Int32):Bool;\n\t@:op(A < B) private static function ltFloat(a:Int32, b:Float):Bool;\n\t@:op(A < B) private static function floatLt(a:Float, b:Int32):Bool;\n\n\t@:op(A <= B) private static function lte(a:Int32, b:Int32):Bool;\n\t@:op(A <= B) private static function lteInt(a:Int32, b:Int):Bool;\n\t@:op(A <= B) private static function intLte(a:Int, b:Int32):Bool;\n\t@:op(A <= B) private static function lteFloat(a:Int32, b:Float):Bool;\n\t@:op(A <= B) private static function floatLte(a:Float, b:Int32):Bool;\n\n\t@:op(A > B) private static function gt(a:Int32, b:Int32):Bool;\n\t@:op(A > B) private static function gtInt(a:Int32, b:Int):Bool;\n\t@:op(A > B) private static function intGt(a:Int, b:Int32):Bool;\n\t@:op(A > B) private static function gtFloat(a:Int32, b:Float):Bool;\n\t@:op(A > B) private static function floatGt(a:Float, b:Int32):Bool;\n\n\t@:op(A >= B) private static function gte(a:Int32, b:Int32):Bool;\n\t@:op(A >= B) private static function gteInt(a:Int32, b:Int):Bool;\n\t@:op(A >= B) private static function intGte(a:Int, b:Int32):Bool;\n\t@:op(A >= B) private static function gteFloat(a:Int32, b:Float):Bool;\n\t@:op(A >= B) private static function floatGte(a:Float, b:Int32):Bool;\n\n\t@:op(~A) private function complement():Int32;\n\n\t@:op(A & B) private static function and(a:Int32, b:Int32):Int32;\n\t@:op(A & B) @:commutative private static function andInt(a:Int32, b:Int):Int32;\n\n\t@:op(A | B) private static function or(a:Int32, b:Int32):Int32;\n\t@:op(A | B) @:commutative private static function orInt(a:Int32, b:Int):Int32;\n\n\t@:op(A ^ B) private static function xor(a:Int32, b:Int32):Int32;\n\t@:op(A ^ B) @:commutative private static function xorInt(a:Int32, b:Int):Int32;\n\n\n\t@:op(A >> B) private static function shr(a:Int32, b:Int32):Int32;\n\t@:op(A >> B) private static function shrInt(a:Int32, b:Int):Int32;\n\t@:op(A >> B) private static function intShr(a:Int, b:Int32):Int32;\n\n\t@:op(A >>> B) private static function ushr(a:Int32, b:Int32):Int32;\n\t@:op(A >>> B) private static function ushrInt(a:Int32, b:Int):Int32;\n\t@:op(A >>> B) private static function intUshr(a:Int, b:Int32):Int32;\n\n\t#if (php || python)\n\n\t// PHP may be 64-bit, so shifts must be clamped\n\t@:op(A << B) private static inline function shl(a:Int32, b:Int32):Int32\n\t\treturn clamp( (a : Int) << (b : Int) );\n\n\t@:op(A << B) private static inline function shlInt(a:Int32, b:Int):Int32\n\t\treturn clamp( (a : Int) << b );\n\n\t@:op(A << B) private static inline function intShl(a:Int, b:Int32):Int32\n\t\treturn clamp( a << (b : Int) );\n\n\t#else\n\n\t@:op(A << B) private static function shl(a:Int32, b:Int32):Int32;\n\t@:op(A << B) private static function shlInt(a:Int32, b:Int):Int32;\n\t@:op(A << B) private static function intShl(a:Int, b:Int32):Int32;\n\n\t#end\n\n\t@:to private inline function toFloat():Float\n\t\treturn this;\n\n\t/**\n\t\tCompare `a` and `b` in unsigned mode.\n\t**/\n\tpublic static function ucompare( a : Int32, b : Int32 ) : Int {\n\t\tif( a < 0 )\n\t\t\treturn b < 0 ? ( ~b - ~a ) : 1;\n\t\treturn b < 0 ? -1 : (a - b);\n\t}\n\n\t#if php\n\tstatic var extraBits : Int = untyped __php__(\"PHP_INT_SIZE\") * 8 - 32;\n\t#end\n\n\tstatic inline function clamp( x : Int ) : Int {\n\t\t// force to-int conversion on platforms that require it\n\t\t#if (as3 || js)\n\t\treturn x | 0;\n\t\t#elseif php\n\t\t// we might be on 64-bit php, so sign extend from 32-bit\n\t\treturn (x << extraBits) >> extraBits;\n\t\t#elseif python\n\t\treturn python.Syntax.pythonCode(\"{0} % {1}\", (x + python.Syntax.opPow(2, 31)), python.Syntax.opPow(2, 32)) - python.Syntax.opPow(2, 31);\n\t\t#else\n\t\treturn (x);\n\t\t#end\n\t}\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\nusing haxe.Int64;\n\n /**\n\tA cross-platform signed 64-bit integer.\n\tInt64 instances can be created from two 32-bit words using `Int64.make()`.\n **/\n#if flash\n@:notNull\n#end\nabstract Int64(__Int64) from __Int64 to __Int64\n{\n\tprivate inline function new( x : __Int64 )\n\t\tthis = x;\n\n\t/**\n\t\tMakes a copy of `this` Int64.\n\t**/\n\tpublic inline function copy():Int64\n\t\treturn make( high, low );\n\n\t/**\n\t\tConstruct an Int64 from two 32-bit words `high` and `low`.\n\t**/\n\tpublic static inline function make( high:Int32, low:Int32 ) : Int64\n\t\treturn new Int64( new __Int64(high, low) );\n\n\t/**\n\t\tReturns an Int64 with the value of the Int `x`.\n\t\t`x` is sign-extended to fill 64 bits.\n\t**/\n\t@:from public static inline function ofInt( x : Int ) : Int64\n\t\treturn make( x >> 31, x );\n\n\t/**\n\t\tReturns an Int with the value of the Int64 `x`.\n\t\tThrows an exception  if `x` cannot be represented in 32 bits.\n\t**/\n\tpublic static inline function toInt( x : Int64 ) : Int {\n\t\tif( x.high != x.low >> 31 )\n\t\t\tthrow \"Overflow\";\n\n\t\treturn x.low;\n\t}\n\n\t/**\n\t\tReturns whether the value `val` is of type `haxe.Int64`\n\t**/\n\tinline public static function is( val : Dynamic ) : Bool\n\t\treturn Std.is(val,__Int64);\n\n\t/**\n\t\tReturns the high 32-bit word of `x`.\n\t**/\n\t@:deprecated(\"Use high instead\")\n\tpublic static inline function getHigh( x : Int64 ) : Int32\n\t\treturn x.high;\n\n\t/**\n\t\tReturns the low 32-bit word of `x`.\n\t**/\n\t@:deprecated(\"Use low instead\")\n\tpublic static inline function getLow( x : Int64 ) : Int32\n\t\treturn x.low;\n\n\t/**\n\t\tReturns `true` if `x` is less than zero.\n\t**/\n\tpublic static inline function isNeg( x : Int64) : Bool\n\t\treturn x.high < 0;\n\n\t/**\n\t\tReturns `true` if `x` is exactly zero.\n\t**/\n\tpublic static inline function isZero( x : Int64 ) : Bool\n\t\treturn x == 0;\n\n\t/**\n\t\tCompares `a` and `b` in signed mode.\n\t\tReturns a negative value if `a < b`, positive if `a > b`,\n\t\tor 0 if `a == b`.\n\t**/\n\tpublic static inline function compare( a : Int64, b : Int64 ) : Int {\n\t\tvar v = a.high - b.high;\n\t\tv = if( v != 0 ) v else Int32.ucompare(a.low, b.low);\n\t\treturn a.high < 0 ? (b.high < 0 ? v : -1) : (b.high >= 0 ? v : 1);\n\t}\n\n\t/**\n\t\tCompares `a` and `b` in unsigned mode.\n\t\tReturns a negative value if `a < b`, positive if `a > b`,\n\t\tor 0 if `a == b`.\n\t**/\n\tpublic static inline function ucompare( a : Int64, b : Int64 ) : Int {\n\t\tvar v = Int32.ucompare(a.high, b.high);\n\t\treturn if( v != 0 ) v else Int32.ucompare(a.low, b.low);\n\t}\n\n\t/**\n\t\tReturns a signed decimal `String` representation of `x`.\n\t**/\n\tpublic static inline function toStr(x:Int64) : String\n\t\treturn x.toString();\n\n\t#if as3 public #else private #end function toString() : String\n\t{\n\t\tvar i : Int64 = cast this;\n\t\tif ( i == 0 )\n\t\t\treturn \"0\";\n\t\tvar str = \"\";\n\t\tvar neg = false;\n\t\tif( i.isNeg() ) {\n\t\t\tneg = true;\n\t\t\ti = -i;\n\t\t}\n\t\tvar ten : Int64 = 10;\n\t\twhile( i != 0 ) {\n\t\t\tvar r = i.divMod( ten );\n\t\t\tstr = r.modulus.low + str;\n\t\t\ti = r.quotient;\n\t\t}\n\t\tif( neg ) str = \"-\" + str;\n\t\treturn str;\n\t}\n\n\t/**\n\t\tPerforms signed integer divison of `dividend` by `divisor`.\n\t\tReturns `{ quotient : Int64, modulus : Int64 }`.\n\t**/\n\tpublic static function divMod( dividend : Int64, divisor : Int64 ) : { quotient : Int64, modulus : Int64 }\n\t{\n\t\t// Handle special cases of 0 and 1\n\t\tif( divisor.high == 0 )\n\t\t{\n\t\t\tswitch( divisor.low ) {\n\t\t\t\tcase 0: throw \"divide by zero\";\n\t\t\t\tcase 1: return { quotient : dividend.copy(), modulus : 0 };\n\t\t\t}\n\t\t}\n\n\t\tvar divSign = dividend.isNeg() != divisor.isNeg();\n\n\t\tvar modulus = dividend.isNeg() ? -dividend : dividend.copy();\n\t\tdivisor = divisor.isNeg() ? -divisor : divisor;\n\n\t\tvar quotient : Int64 = 0;\n\t\tvar mask : Int64 = 1;\n\n\t\twhile( !divisor.isNeg() ) {\n\t\t\tvar cmp = ucompare( divisor, modulus );\n\t\t\tdivisor <<= 1;\n\t\t\tmask <<= 1;\n\t\t\tif( cmp >= 0 ) break;\n\t\t}\n\n\t\twhile( mask != 0 ) {\n\t\t\tif( ucompare(modulus, divisor) >= 0 ) {\n\t\t\t\tquotient |= mask;\n\t\t\t\tmodulus -= divisor;\n\t\t\t}\n\t\t\tmask >>>= 1;\n\t\t\tdivisor >>>= 1;\n\t\t}\n\n\t\tif( divSign ) quotient = -quotient;\n\t\tif( dividend.isNeg() ) modulus = -modulus;\n\n\t\treturn {\n\t\t\tquotient : quotient,\n\t\t\tmodulus  : modulus\n\t\t};\n\t}\n\n\t/**\n\t\tReturns the negative of `x`.\n\t**/\n\t@:op(-A) public static inline function neg( x : Int64 ) : Int64 {\n\t\tvar high = ~x.high;\n\t\tvar low = -x.low;\n\t\tif( low == 0 )\n\t\t\thigh++;\n\t\treturn make( high, low );\n\t}\n\n\t@:op(++A) private inline function preIncrement() : Int64 {\n\t\tthis.low++;\n\t\tif( this.low == 0 ) this.high++;\n\t\treturn cast this;\n\t}\n\n\t@:op(A++) private inline function postIncrement() : Int64 {\n\t\tvar ret = copy();\n\t\tpreIncrement();\n\t\treturn ret;\n\t}\n\n\t@:op(--A) private inline function preDecrement() : Int64 {\n\t\tif( this.low == 0 ) this.high--;\n\t\tthis.low--;\n\t\treturn cast this;\n\t}\n\n\t@:op(A--) private inline function postDecrement() : Int64 {\n\t\tvar ret = copy();\n\t\tpreDecrement();\n\t\treturn ret;\n\t}\n\n\t/**\n\t\tReturns the sum of `a` and `b`.\n\t**/\n\t@:op(A + B) public static inline function add( a : Int64, b : Int64 ) : Int64 {\n\t\tvar high = a.high + b.high;\n\t\tvar low = a.low + b.low;\n\t\tif( Int32.ucompare( low, a.low ) < 0 ) high++;\n\t\treturn make( high, low );\n\t}\n\n\t@:op(A + B) @:commutative private static inline function addInt( a : Int64, b : Int ) : Int64\n\t\treturn add( a, b );\n\n\t/**\n\t\tReturns `a` minus `b`.\n\t**/\n\t@:op(A - B) public static inline function sub( a : Int64, b : Int64 ) : Int64 {\n\t\tvar high = a.high - b.high;\n\t\tvar low = a.low - b.low;\n\t\tif( Int32.ucompare( a.low, b.low ) < 0 ) high--;\n        return make( high, low );\n\t}\n\n\t@:op(A - B) private static inline function subInt( a : Int64, b : Int ) : Int64\n\t\treturn sub( a, b );\n\n\t@:op(A - B) private static inline function intSub( a : Int, b : Int64 ) : Int64\n\t\treturn sub( a, b );\n\n\t/**\n\t\tReturns the product of `a` and `b`.\n\t**/\n\t@:op(A * B) public static inline function mul( a : Int64, b : Int64 ) : Int64 {\n\t\tvar mask = 0xFFFF;\n\t\tvar al = a.low & mask, ah = a.low >>> 16;\n\t\tvar bl = b.low & mask, bh = b.low >>> 16;\n\t\tvar p00 = al * bl;\n\t\tvar p10 = ah * bl;\n\t\tvar p01 = al * bh;\n\t\tvar p11 = ah * bh;\n\t\tvar low = p00;\n\t\tvar high = p11 + (p01 >>> 16) + (p10 >>> 16);\n\t\tp01 <<= 16;\n\t\tlow += p01;\n\t\tif( Int32.ucompare(low, p01) < 0 ) high++;\n\t\tp10 <<= 16;\n\t\tlow += p10;\n\t\tif( Int32.ucompare(low, p10) < 0 ) high++;\n\t\thigh += a.low * b.high + a.high * b.low;\n\t\treturn make( high, low );\n\t}\n\n\t@:op(A * B) @:commutative private static inline function mulInt( a : Int64, b : Int ) : Int64\n\t\treturn mul( a, b );\n\n\t/**\n\t\tReturns the quotient of `a` divided by `b`.\n\t**/\n\t@:op(A / B) public static inline function div( a : Int64, b : Int64 ) : Int64\n\t\treturn divMod(a, b).quotient;\n\n\t@:op(A / B) private static inline function divInt( a : Int64, b : Int ) : Int64\n\t\treturn div( a, b );\n\n\t@:op(A / B) private static inline function intDiv( a : Int, b : Int64 ) : Int64\n\t\treturn div( a, b ).toInt();\n\n\t/**\n\t\tReturns the modulus of `a` divided by `b`.\n\t**/\n\t@:op(A % B) public static inline function mod( a : Int64, b : Int64 ) : Int64\n\t\treturn divMod(a, b).modulus;\n\n\t@:op(A % B) private static inline function modInt( a : Int64, b : Int ) : Int64\n\t\treturn mod( a, b ).toInt();\n\n\t@:op(A % B) private static inline function intMod( a : Int, b : Int64 ) : Int64\n\t\treturn mod( a, b ).toInt();\n\n\t/**\n\t\tReturns `true` if `a` is equal to `b`.\n\t**/\n\t@:op(A == B) public static inline function eq( a : Int64, b : Int64 ) : Bool\n\t\treturn a.high == b.high && a.low == b.low;\n\n\t@:op(A == B) @:commutative private static inline function eqInt( a : Int64, b : Int ) : Bool\n\t\treturn eq( a, b );\n\n\t/**\n\t\tReturns `true` if `a` is not equal to `b`.\n\t**/\n\t@:op(A != B) public static inline function neq( a : Int64, b : Int64 ) : Bool\n\t\treturn a.high != b.high || a.low != b.low;\n\n\t@:op(A != B) @:commutative private static inline function neqInt( a : Int64, b : Int ) : Bool\n\t\treturn neq(a, b);\n\n\t@:op(A < B) private static inline function lt( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) < 0;\n\n\t@:op(A < B) private static inline function ltInt( a : Int64, b : Int ) : Bool\n\t\treturn lt(a, b);\n\n\t@:op(A < B) private static inline function intLt( a : Int, b : Int64 ) : Bool\n\t\treturn lt(a, b);\n\n\t@:op(A <= B) private static inline function lte( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) <= 0;\n\n\t@:op(A <= B) private static inline function lteInt( a : Int64, b : Int ) : Bool\n\t\treturn lte(a, b);\n\n\t@:op(A <= B) private static inline function intLte( a : Int, b : Int64 ) : Bool\n\t\treturn lte(a, b);\n\n\t@:op(A > B) private static inline function gt( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) > 0;\n\n\t@:op(A > B) private static inline function gtInt( a : Int64, b : Int ) : Bool\n\t\treturn gt(a, b);\n\n\t@:op(A > B) private static inline function intGt( a : Int, b : Int64 ) : Bool\n\t\treturn gt( a, b );\n\n\t@:op(A >= B) private static inline function gte( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) >= 0;\n\n\t@:op(A >= B) private static inline function gteInt( a : Int64, b : Int ) : Bool\n\t\treturn gte(a, b);\n\n\t@:op(A >= B) private static inline function intGte( a : Int, b : Int64 ) : Bool\n\t\treturn gte(a, b);\n\n\t/**\n\t\tReturns the bitwise NOT of `a`.\n\t**/\n\t@:op(~A) private static inline function complement( a : Int64 ) : Int64\n\t\treturn make( ~a.high, ~a.low );\n\n\t/**\n\t\tReturns the bitwise AND of `a` and `b`.\n\t**/\n\t@:op(A & B) public static inline function and( a : Int64, b : Int64 ) : Int64\n\t\treturn make( a.high & b.high, a.low & b.low );\n\n\t/**\n\t\tReturns the bitwise OR of `a` and `b`.\n\t**/\n\t@:op(A | B) public static inline function or( a : Int64, b : Int64 ) : Int64\n\t\treturn make( a.high | b.high, a.low | b.low );\n\n\t/**\n\t\tReturns the bitwise XOR of `a` and `b`.\n\t**/\n\t@:op(A ^ B) public static inline function xor( a : Int64, b : Int64 ) : Int64\n\t\treturn make( a.high ^ b.high, a.low ^ b.low );\n\n\t/**\n\t\tReturns `a` left-shifted by `b` bits.\n\t**/\n\t@:op(A << B) public static inline function shl( a : Int64, b : Int ) : Int64 {\n\t\tb &= 63;\n\t\treturn if( b == 0 ) a.copy()\n\t\t\telse if( b < 32 ) make( (a.high << b) | (a.low >>> (32-b)), a.low << b)\n\t\t\telse make( a.low << (b-32), 0 );\n\t}\n\n\t/**\n\t\tReturns `a` right-shifted by `b` bits in signed mode.\n\t\t`a` is sign-extended.\n\t**/\n\t@:op(A >> B) public static inline function shr( a : Int64, b : Int) : Int64 {\n\t\tb &= 63;\n\t\treturn if( b == 0 ) a.copy()\n\t\t\telse if( b < 32 ) make( a.high >> b, (a.high << (32-b)) | (a.low >>> b) )\n\t\t\telse make( a.high >> 31, a.high >> (b - 32) );\n\t}\n\n\t/**\n\t\tReturns `a` right-shifted by `b` bits in unsigned mode.\n\t\t`a` is padded with zeroes.\n\t**/\n\t@:op(A >>> B) public static inline function ushr( a : Int64, b : Int ) : Int64 {\n\t\tb &= 63;\n\t\treturn if( b == 0 ) a.copy()\n\t\t\telse if( b < 32 ) make( a.high >>> b, (a.high << (32-b)) | (a.low >>> b) )\n\t\t\telse make( 0, a.high >>> (b - 32) );\n\t}\n\n\tpublic var high(get, never) : Int32;\n\tprivate inline function get_high() return this.high;\n\tprivate inline function set_high(x) return this.high = x;\n\n\tpublic var low(get, never) : Int32;\n\tprivate inline function get_low() return this.low;\n\tprivate inline function set_low(x) return this.low = x;\n}\n\n/**\n  * This typedef will fool @:coreApi into thinking that we are using\n  * the same underlying type, even though it might be different on\n  * specific platforms.\n  */\nprivate typedef __Int64 = ___Int64;\n\nprivate class ___Int64 {\n\tpublic var high : Int32;\n\tpublic var low : Int32;\n\n\tpublic inline function new( high, low ) {\n\t\tthis.high = high;\n\t\tthis.low = low;\n\t}\n\n\t/**\n\t\tWe also define toString here to ensure we always get a pretty string\n\t\twhen tracing or calling Std.string. This tends not to happen when\n\t\ttoString is only in the abstract.\n\t**/\n\tpublic function toString() : String\n\t\treturn Int64.toStr( cast this );\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tLog primarily provides the trace() method, which is invoked upon a call to\n\ttrace() in haxe code.\n**/\nclass Log {\n\n\t/**\n\t\tOutputs `v` in a platform-dependent way.\n\n\t\tThe second parameter `infos` is injected by the compiler and contains\n\t\tinformation about the position where the trace() call was made.\n\n\t\tThis method can be rebound to a custom function:\n\t\t\tvar oldTrace = haxe.Log.trace; // store old function\n\t\t\thaxe.Log.trace = function(v,infos) { // handle trace }\n\t\t\t...\n\t\t\thaxe.Log.trace = oldTrace;\n\n\t\tIf it is bound to null, subsequent calls to trace() will cause an\n\t\texception.\n\t**/\n\tpublic static dynamic function trace( v : Dynamic, ?infos : PosInfos ) : Void {\n\t\t#if flash\n\t\t\t#if (fdb || native_trace)\n\t\t\t\tvar pstr = infos == null ? \"(null)\" : infos.fileName + \":\" + infos.lineNumber;\n\t\t\t\tvar str = flash.Boot.__string_rec(v, \"\");\n\t\t\t\tif( infos != null && infos.customParams != null ) for( v in infos.customParams ) str += \",\" + flash.Boot.__string_rec(v, \"\");\n\t\t\t\tuntyped __global__[\"trace\"](pstr+\": \"+str);\n\t\t\t#else\n\t\t\t\tuntyped flash.Boot.__trace(v,infos);\n\t\t\t#end\n\t\t#elseif neko\n\t\t\tuntyped {\n\t\t\t\t$print(infos.fileName + \":\" + infos.lineNumber + \": \", v);\n\t\t\t\tif( infos.customParams != null ) for( v in infos.customParams ) $print(\",\", v);\n\t\t\t\t$print(\"\\n\");\n\t\t\t}\n\t\t#elseif js\n\t\t\tuntyped js.Boot.__trace(v,infos);\n\t\t#elseif php\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __call__('_hx_trace', v + extra, infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __call__('_hx_trace', v, infos);\n\t\t#elseif cpp\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __trace(v + extra,infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __trace(v,infos);\n\t\t#elseif (cs || java)\n\t\t\tvar str:String = null;\n\t\t\tif (infos != null) {\n\t\t\t\tstr = infos.fileName + \":\" + infos.lineNumber + \": \" + v;\n\t\t\t\tif (infos.customParams != null)\n\t\t\t\t{\n\t\t\t\t\tstr += \",\" + infos.customParams.join(\",\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = v;\n\t\t\t}\n\t\t\t#if cs\n\t\t\tcs.system.Console.WriteLine(str);\n\t\t\t#elseif java\n\t\t\tuntyped __java__(\"java.lang.System.out.println(str)\");\n\t\t\t#end\n\t\t#elseif (python)\n\t\t\tvar str:String = null;\n\t\t\tif (infos != null) {\n\t\t\t\tstr = infos.fileName + \":\" + Std.string(infos.lineNumber) + \": \" + v;\n\t\t\t\tif (infos.customParams != null) {\n\t\t\t\t\tstr += \",\" + infos.customParams.join(\",\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = v;\n\t\t\t}\n\t\t\tpython.Lib.println(str);\n\t\t#end\n\t}\n\n\t#if (flash || js)\n\t/**\n\t\tClears the trace output.\n\t**/\n\tpublic static dynamic function clear() : Void {\n\t\t#if flash\n\t\tuntyped flash.Boot.__clear_trace();\n\t\t#elseif js\n\t\tuntyped js.Boot.__clear_trace();\n\t\t#end\n\t}\n\t#end\n\n\t#if flash\n\t/**\n\t\tSets the color of the trace output to `rgb`.\n\t**/\n\tpublic static dynamic function setColor( rgb : Int ) {\n\t\tuntyped flash.Boot.__set_trace_color(rgb);\n\t}\n\t#end\n\n}\n","package haxe;\n#if (!neko && !cpp && !nodejs)\n\n\n// Original haxe.Timer class\n\n/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe Timer class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the Timer class with a given\n\tinterval, set its run() method to a custom function to be invoked and\n\teventually call stop() to stop the Timer.\n\n\tNote that a running Timer may or may not prevent the program to exit\n\tautomatically when main() returns.\n\n\tIt is also possible to extend this class and override its run() method in\n\tthe child class.\n**/\nclass Timer {\n\t#if (flash || js || java || python)\n\n\t#if (flash || js)\n\t\tprivate var id : Null<Int>;\n\t#elseif java\n\t\tprivate var timer : java.util.Timer;\n\t\tprivate var task : java.util.TimerTask;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this].run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new( time_ms : Int ){\n\t\t#if flash\n\t\t\tvar me = this;\n\t\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif js\n\t\t\tvar me = this;\n\t\t\tid = untyped setInterval(function() me.run(),time_ms);\n\t\t#elseif java\n\t\t\ttimer = new java.util.Timer();\n\t\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\t\tif( id == null )\n\t\t\t\treturn;\n\t\t\t#if flash\n\t\t\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t\t#elseif js\n\t\t\t\tuntyped clearInterval(id);\n\t\t\t#end\n\t\t\tid = null;\n\t\t#elseif java\n\t\t\ttimer.cancel();\n\t\t\ttimer = null;\n\t\t\ttask = null;\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\t\ttimer.run = function() { ... }\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {\n\n\t}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t#end\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\tTimer.stamp() before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static function stamp() : Float {\n\t\t#if flash\n\t\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif (neko || php)\n\t\t\treturn Sys.time();\n\t\t#elseif js\n\t\t\treturn Date.now().getTime() / 1000;\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif sys\n\t\t\treturn Sys.time();\n\t\t#else\n\t\t\treturn 0;\n\t\t#end\n\t}\n\n}\n\n#if java\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload override public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end\n\n\n#else\n\n\n#if !lime_legacy\nimport lime.system.System;\n#end\n\n\nclass Timer {\n\t\n\t\n\tprivate static var sRunningTimers:Array <Timer> = [];\n\t\n\tprivate var mTime:Float;\n\tprivate var mFireAt:Float;\n\tprivate var mRunning:Bool;\n\t\n\t\n\tpublic function new (time:Float) {\n\t\t\n\t\tmTime = time;\n\t\tsRunningTimers.push (this);\n\t\tmFireAt = getMS () + mTime;\n\t\tmRunning = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function delay (f:Void -> Void, time:Int) {\n\t\t\n\t\tvar t = new Timer (time);\n\t\t\n\t\tt.run = function () {\n\t\t\t\n\t\t\tt.stop ();\n\t\t\tf ();\n\t\t\t\n\t\t};\n\t\t\n\t\treturn t;\n\t\t\n\t}\n\t\n\t\n\tprivate static function getMS ():Float {\n\t\t\n\t\t#if lime_legacy\n\t\treturn lime_time_stamp () * 1000.0;\n\t\t#else\n\t\treturn System.getTimer ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function measure<T> (f:Void -> T, ?pos:PosInfos):T {\n\t\t\n\t\tvar t0 = stamp ();\n\t\tvar r = f ();\n\t\tLog.trace ((stamp () - t0) + \"s\", pos);\n\t\treturn r;\n\t\t\n\t}\n\t\n\t\n\tdynamic public function run () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic static function stamp ():Float {\n\t\t\n\t\t#if lime_legacy\n\t\treturn lime_time_stamp ();\n\t\t#else\n\t\treturn System.getTimer () / 1000;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function stop ():Void {\n\t\t\n\t\tif (mRunning) {\n\t\t\t\n\t\t\tmRunning = false;\n\t\t\t\n\t\t\tfor (i in 0...sRunningTimers.length) {\n\t\t\t\t\n\t\t\t\tif (sRunningTimers[i] == this) {\n\t\t\t\t\t\n\t\t\t\t\tsRunningTimers[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __check (inTime:Float) {\n\t\t\n\t\tif (inTime >= mFireAt) {\n\t\t\t\n\t\t\tmFireAt += mTime;\n\t\t\trun ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public static function __checkTimers () {\n\t\t\n\t\tvar now = getMS ();\n\t\tvar foundNull = false;\n\t\tvar timer;\n\t\t\n\t\tfor (i in 0...sRunningTimers.length) {\n\t\t\t\n\t\t\ttimer = sRunningTimers[i];\n\t\t\t\n\t\t\tif (timer != null) {\n\t\t\t\t\n\t\t\t\ttimer.__check (now);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfoundNull = (foundNull || sRunningTimers[i] == null);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (foundNull) {\n\t\t\t\n\t\t\tsRunningTimers = sRunningTimers.filter (function (val) { return val != null; });\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t#if (lime_legacy || lime_hybrid)\n\t@:noCompletion @:dox(hide) public static function __nextWake (limit:Float):Float {\n\t\t\n\t\tvar now = getMS ();\n\t\tvar sleep;\n\t\t\n\t\tfor (timer in sRunningTimers) {\n\t\t\t\n\t\t\tif (timer == null)\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\tsleep = timer.mFireAt - now;\n\t\t\t\n\t\t\tif (sleep < limit) {\n\t\t\t\t\n\t\t\t\tlimit = sleep;\n\t\t\t\t\n\t\t\t\tif (limit < 0) {\n\t\t\t\t\t\n\t\t\t\t\treturn 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn limit * 0.001;\n\t\t\n\t}\n\t#end\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if lime_legacy\n\tstatic var lime_time_stamp:Void->Float = flash.Lib.load (\"lime-legacy\", \"lime_legacy_time_stamp\", 0);\n\t#end\n\t\n\t\n}\n\n\n#end","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n@:noDoc\ntypedef TypeResolver = {\n\tfunction resolveClass( name : String ) : Class<Dynamic>;\n\tfunction resolveEnum( name : String ) : Enum<Dynamic>;\n}\n\n/**\n\tThe Unserializer class is the complement to the Serializer class. It parses\n\ta serialization String and creates objects from the contained data.\n\n\tThis class can be used in two ways:\n\n\t- create a new Unserializer() instance with a given serialization\n\t\tString, then call its unserialize() method until all values are\n\t\textracted\n\t- call Unserializer.run() to unserialize a single value from a given\n\t\tString\n**/\nclass Unserializer {\n\n\t/**\n\t\tThis value can be set to use custom type resolvers.\n\n\t\tA type resolver finds a Class or Enum instance from a given String. By\n\t\tdefault, the haxe Type Api is used.\n\n\t\tA type resolver must provide two methods:\n\n\t\t1. resolveClass(name:String):Class<Dynamic> is called to determine a\n\t\t\t\tClass from a class name\n\t\t2. resolveEnum(name:String):Enum<Dynamic> is called to determine an\n\t\t\t\tEnum from an enum name\n\n\t\tThis value is applied when a new Unserializer instance is created.\n\t\tChanging it afterwards has no effect on previously created instances.\n\t**/\n\tpublic static var DEFAULT_RESOLVER : TypeResolver = Type;\n\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\n\n\t#if !neko\n\tstatic var CODES = null;\n\n\tstatic function initCodes() {\n\t\tvar codes =\n\t\t\t#if flash\n\t\t\t\tnew flash.utils.ByteArray();\n\t\t\t#else\n\t\t\t\tnew Array();\n\t\t\t#end\n\t\tfor( i in 0...BASE64.length )\n\t\t\tcodes[StringTools.fastCodeAt(BASE64,i)] = i;\n\t\treturn codes;\n\t}\n\t#end\n\n \tvar buf : String;\n \tvar pos : Int;\n \tvar length : Int;\n \tvar cache : Array<Dynamic>;\n \tvar scache : Array<String>;\n \tvar resolver : TypeResolver;\n \t#if neko\n \tvar upos : Int;\n \t#end\n\n\t/**\n\t\tCreates a new Unserializer instance, with its internal buffer\n\t\tinitialized to `buf`.\n\n\t\tThis does not parse `buf` immediately. It is parsed only when calls to\n\t\t`this.unserialize` are made.\n\n\t\tEach Unserializer instance maintains its own cache.\n\t**/\n \tpublic function new( buf : String ) {\n \t\tthis.buf = buf;\n \t\tlength = buf.length;\n \t\tpos = 0;\n \t\t#if neko\n \t\tupos = 0;\n \t\t#end\n \t\tscache = new Array();\n \t\tcache = new Array();\n\t\tvar r = DEFAULT_RESOLVER;\n\t\tif( r == null ) {\n\t\t\tr = Type;\n\t\t\tDEFAULT_RESOLVER = r;\n\t\t}\n \t\tsetResolver(r);\n \t}\n\n\t/**\n\t\tSets the type resolver of `this` Unserializer instance to `r`.\n\n\t\tIf `r` is null, a special resolver is used which returns null for all\n\t\tinput values.\n\n\t\tSee DEFAULT_RESOLVER for more information on type resolvers.\n\t**/\n \tpublic function setResolver( r ) {\n\t\tif( r == null )\n\t\t\tresolver = {\n\t\t\t\tresolveClass : function(_) { return null; },\n\t\t\t\tresolveEnum : function(_) { return null; }\n\t\t\t};\n\t\telse\n\t\t\tresolver = r;\n\t}\n\n\t/**\n\t\tGets the type resolver of `this` Unserializer instance.\n\n\t\tSee DEFAULT_RESOLVER for more information on type resolvers.\n\t**/\n \tpublic function getResolver() {\n\t\treturn resolver;\n\t}\n\n\tinline function get(p) : Int {\n\t\treturn StringTools.fastCodeAt(buf, p);\n\t}\n\n \tfunction readDigits() {\n \t\tvar k = 0;\n \t\tvar s = false;\n \t\tvar fpos = pos;\n \t\twhile( true ) {\n \t\t\tvar c = get(pos);\n\t\t\tif( StringTools.isEof(c) )\n\t\t\t\tbreak;\n \t\t\tif( c == \"-\".code ) {\n \t\t\t\tif( pos != fpos )\n \t\t\t\t\tbreak;\n \t\t\t\ts = true;\n \t\t\t\tpos++;\n \t\t\t\tcontinue;\n \t\t\t}\n \t\t\tif( c < \"0\".code || c > \"9\".code )\n \t\t\t\tbreak;\n \t\t\tk = k * 10 + (c - \"0\".code);\n \t\t\tpos++;\n \t\t}\n \t\tif( s )\n \t\t\tk *= -1;\n \t\treturn k;\n \t}\n\n\tfunction readFloat() {\n\t\tvar p1 = pos;\n \t\twhile( true ) {\n \t\t\tvar c = get(pos);\n \t\t\t// + - . , 0-9\n \t\t\tif( (c >= 43 && c < 58) || c == \"e\".code || c == \"E\".code )\n \t\t\t\tpos++;\n \t\t\telse\n \t\t\t\tbreak;\n \t\t}\n \t\treturn Std.parseFloat(buf.substr(p1,pos-p1));\n\t}\n\n\tfunction unserializeObject(o) {\n \t\twhile( true ) {\n \t\t\tif( pos >= length )\n \t\t\t\tthrow \"Invalid object\";\n \t\t\tif( get(pos) == \"g\".code )\n \t\t\t\tbreak;\n \t\t\tvar k = unserialize();\n \t\t\tif( !Std.is(k,String) )\n \t\t\t\tthrow \"Invalid object key\";\n \t\t\tvar v = unserialize();\n \t\t\tReflect.setField(o,k,v);\n \t\t}\n \t\tpos++;\n\t}\n\n\tfunction unserializeEnum( edecl, tag ) {\n\t\tif( get(pos++) != \":\".code )\n\t\t\tthrow \"Invalid enum format\";\n\t\tvar nargs = readDigits();\n\t\tif( nargs == 0 )\n\t\t\treturn Type.createEnum(edecl,tag);\n\t\tvar args = new Array();\n\t\twhile( nargs-- > 0 )\n\t\t\targs.push(unserialize());\n\t\treturn Type.createEnum(edecl,tag,args);\n\t}\n\n\t/**\n\t\tUnserializes the next part of `this` Unserializer instance and returns\n\t\tthe according value.\n\n\t\tThis function may call `this.resolver.resolveClass` to determine a\n\t\tClass from a String, and `this.resolver.resolveEnum` to determine an\n\t\tEnum from a String.\n\n\t\tIf `this` Unserializer instance contains no more or invalid data, an\n\t\texception is thrown.\n\n\t\tThis operation may fail on structurally valid data if a type cannot be\n\t\tresolved or if a field cannot be set. This can happen when unserializing\n\t\tStrings that were serialized on a different haxe target, in which the\n\t\tserialization side has to make sure not to include platform-specific\n\t\tdata.\n\n\t\tClasses are created from Type.createEmptyInstance, which means their\n\t\tconstructors are not called.\n\t**/\n \tpublic function unserialize() : Dynamic {\n \t\tswitch( get(pos++) ) {\n \t\tcase \"n\".code:\n \t\t\treturn null;\n \t\tcase \"t\".code:\n \t\t\treturn true;\n \t\tcase \"f\".code:\n \t\t\treturn false;\n \t\tcase \"z\".code:\n \t\t\treturn 0;\n \t\tcase \"i\".code:\n \t\t\treturn readDigits();\n \t\tcase \"d\".code:\n \t\t\treturn readFloat();\n\t\tcase \"y\".code:\n \t\t\tvar len = readDigits();\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n \t\t\t\tthrow \"Invalid string length\";\n\t\t\tvar s = buf.substr(pos,len);\n\t\t\tpos += len;\n\t\t\ts = StringTools.urlDecode(s);\n\t\t\tscache.push(s);\n\t\t\treturn s;\n \t\tcase \"k\".code:\n \t\t\treturn Math.NaN;\n \t\tcase \"m\".code:\n \t\t\treturn Math.NEGATIVE_INFINITY;\n \t\tcase \"p\".code:\n \t\t\treturn Math.POSITIVE_INFINITY;\n \t\tcase \"a\".code:\n\t\t\tvar buf = buf;\n \t\t\tvar a = new Array<Dynamic>();\n \t\t\tcache.push(a);\n \t\t\twhile( true ) {\n \t\t\t\tvar c = get(pos);\n \t\t\t\tif( c == \"h\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tbreak;\n\t\t\t\t}\n \t\t\t\tif( c == \"u\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tvar n = readDigits();\n \t\t\t\t\ta[a.length+n-1] = null;\n \t\t\t\t} else\n \t\t\t\t\ta.push(unserialize());\n \t\t\t}\n \t\t\treturn a;\n \t\tcase \"o\".code:\n\t \t\tvar o = {};\n\t \t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n \t\tcase \"r\".code:\n \t\t\tvar n = readDigits();\n \t\t\tif( n < 0 || n >= cache.length )\n \t\t\t\tthrow \"Invalid reference\";\n \t\t\treturn cache[n];\n \t\tcase \"R\".code:\n\t\t\tvar n = readDigits();\n\t\t\tif( n < 0 || n >= scache.length )\n\t\t\t\tthrow \"Invalid string reference\";\n\t\t\treturn scache[n];\n \t\tcase \"x\".code:\n\t\t\tthrow unserialize();\n\t\tcase \"c\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n\t\tcase \"w\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tvar e = unserializeEnum(edecl, unserialize());\n\t\t\tcache.push(e);\n\t\t\treturn e;\n \t\tcase \"j\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tpos++; /* skip ':' */\n\t\t\tvar index = readDigits();\n\t\t\tvar tag = Type.getEnumConstructs(edecl)[index];\n\t\t\tif( tag == null )\n\t\t\t\tthrow \"Unknown enum index \"+name+\"@\"+index;\n\t\t\tvar e = unserializeEnum(edecl, tag);\n\t\t\tcache.push(e);\n\t\t\treturn e;\n\t\tcase \"l\".code:\n\t\t\tvar l = new List();\n\t\t\tcache.push(l);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code )\n\t\t\t\tl.add(unserialize());\n\t\t\tpos++;\n\t\t\treturn l;\n\t\tcase \"b\".code:\n\t\t\tvar h = new haxe.ds.StringMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"q\".code:\n\t\t\tvar h = new haxe.ds.IntMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\tvar c = get(pos++);\n\t\t\twhile( c == \":\".code ) {\n\t\t\t\tvar i = readDigits();\n\t\t\t\th.set(i,unserialize());\n\t\t\t\tc = get(pos++);\n\t\t\t}\n\t\t\tif( c != \"h\".code )\n\t\t\t\tthrow \"Invalid IntMap format\";\n\t\t\treturn h;\n\t\tcase \"M\".code:\n\t\t\tvar h = new haxe.ds.ObjectMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"v\".code:\n\t\t\tvar d;\n\t\t\tif(\tget(pos) >= '0'.code && get(pos) <= '9'.code &&\n\t\t\t\tget(pos + 1) >= '0'.code && get(pos + 1) <= '9'.code &&\n\t\t\t\tget(pos + 2) >= '0'.code && get(pos + 2) <= '9'.code &&\n\t\t\t\tget(pos + 3) >= '0'.code && get(pos + 3) <= '9'.code &&\n\t\t\t\tget(pos + 4) == '-'.code\n\t\t\t\t) {\n\t\t\t\t// Included for backwards compatibility\n\t\t\t\td = Date.fromString(buf.substr(pos,19));\n\t\t\t\tpos += 19;\n\t\t\t} else\n\t\t\t\td = Date.fromTime(readFloat());\n\t\t\tcache.push(d);\n\t\t\treturn d;\n \t\tcase \"s\".code:\n \t\t\tvar len = readDigits();\n\t\t\tvar buf = buf;\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n\t\t\t\tthrow \"Invalid bytes length\";\n\t\t\t#if neko\n\t\t\tvar bytes = haxe.io.Bytes.ofData( base_decode(untyped buf.substr(pos,len).__s,untyped BASE64.__s) );\n\t\t\t#else\n\t\t\tvar codes = CODES;\n\t\t\tif( codes == null ) {\n\t\t\t\tcodes = initCodes();\n\t\t\t\tCODES = codes;\n\t\t\t}\n\t\t\tvar i = pos;\n\t\t\tvar rest = len & 3;\n\t\t\tvar size = (len >> 2) * 3 + ((rest >= 2) ? rest - 1 : 0);\n\t\t\tvar max = i + (len - rest);\n\t\t\tvar bytes = haxe.io.Bytes.alloc(size);\n\t\t\tvar bpos = 0;\n\t\t\twhile( i < max ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\tvar c4 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c3 << 6) | c4);\n\t\t\t}\n\t\t\tif( rest >= 2 ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tif( rest == 3 ) {\n\t\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\t}\n\t\t\t}\n \t\t\t#end\n\t\t\tpos += len;\n\t\t\tcache.push(bytes);\n\t\t\treturn bytes;\n\t\tcase \"C\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o : Dynamic = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\to.hxUnserialize(this);\n\t\t\tif( get(pos++) != \"g\".code )\n\t\t\t\tthrow \"Invalid custom data\";\n\t\t\treturn o;\n\t\tcase \"A\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\treturn cl;\n\t\tcase \"B\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar e = resolver.resolveEnum(name);\n\t\t\tif( e == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\treturn e;\n \t\tdefault:\n \t\t}\n \t\tpos--;\n \t\tthrow (\"Invalid char \"+buf.charAt(pos)+\" at position \"+pos);\n \t}\n\n\t/**\n\t\tUnserializes `v` and returns the according value.\n\n\t\tThis is a convenience function for creating a new instance of\n\t\tUnserializer with `v` as buffer and calling its unserialize() method\n\t\tonce.\n\t**/\n\tpublic static function run( v : String ) : Dynamic {\n\t\treturn new Unserializer(v).unserialize();\n\t}\n\n\t#if neko\n\tstatic var base_decode = neko.Lib.load(\"std\",\"base_decode\",2);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tSince all platforms does not guarantee that String always uses UTF-8 encoding, you\n\tcan use this crossplatform API to perform operations on such strings.\n**/\nclass Utf8 {\n\n\tvar __b : String;\n\n\t/**\n\t\tAllocate a new Utf8 buffer using an optional bytes size.\n\t**/\n\tpublic function new( ?size : Int ) {\n\t\t__b = \"\";\n\t}\n\n\t/**\n\t\tAdd the given UTF8 character code to the buffer.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\t__b += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tReturns the buffer converted to a String;\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn __b;\n\t}\n\n\t/**\n\t\tCall the `chars` function for each UTF8 char of the string.\n\t**/\n\tpublic static function iter( s : String, chars : Int -> Void ) {\n\t\tfor( i in 0...s.length )\n\t\t\tchars(s.charCodeAt(i));\n\t}\n\n\t/**\n\t\tEncode the input ISO string into the corresponding UTF8 one.\n\t**/\n\tpublic static function encode( s : String ) : String {\n\t\tthrow \"Not implemented\";\n\t}\n\n\t/**\n\t\tDecode an UTF8 string back to an ISO string.\n\t\tThrow an exception if a given UTF8 character is not supported by the decoder.\n\t**/\n\tpublic static function decode( s : String ) : String {\n\t\tthrow \"Not implemented\";\n\t}\n\n\t/**\n\t\tSimilar to `String.charCodeAt` but uses the UTF8 character position.\n\t**/\n\tpublic static inline function charCodeAt( s : String, index : Int ) : Int {\n\t\treturn s.charCodeAt(index);\n\t}\n\n\t/**\n\t\tTells if the String is correctly encoded as UTF8.\n\t**/\n\tpublic static inline function validate( s : String ) : Bool {\n\t\treturn true;\n\t}\n\n\t/**\n\t\tReturns the number of UTF8 chars of the String.\n\t**/\n\t#if js @:extern #end\n\tpublic static inline function length( s : String ) : Int {\n\t\treturn s.length;\n\t}\n\n\t/**\n\t\tCompare two UTF8 strings, character by character.\n\t**/\n\tpublic static function compare( a : String, b : String ) : Int {\n\t\treturn a > b ? 1 : (a == b ? 0 : -1);\n\t}\n\n\t/**\n\t\tThis is similar to `String.substr` but the `pos` and `len` parts are considering UTF8 characters.\n\t**/\n\tpublic static inline function sub( s : String, pos : Int, len : Int ) : String {\n\t\treturn s.substr(pos,len);\n\t}\n\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.crypto;\n\n/**\n\tAllows to encode/decode String and bytes using a power of two base dictionnary.\n**/\nclass BaseCode {\n\n\tvar base : haxe.io.Bytes;\n\tvar nbits : Int;\n\tvar tbl : Array<Int>;\n\n\tpublic function new( base : haxe.io.Bytes ) {\n\t\tvar len = base.length;\n\t\tvar nbits = 1;\n\t\twhile( len > 1 << nbits )\n\t\t\tnbits++;\n\t\tif( nbits > 8 || len != 1 << nbits )\n\t\t\tthrow \"BaseCode : base length must be a power of two.\";\n\t\tthis.base = base;\n\t\tthis.nbits = nbits;\n\t}\n\n\tpublic function encodeBytes( b : haxe.io.Bytes ) : haxe.io.Bytes {\n\t\t#if (neko && !interp)\n\t\treturn haxe.io.Bytes.ofData( base_encode(b.getData(),base.getData()) );\n\t\t#else\n\t\tvar nbits = this.nbits;\n\t\tvar base = this.base;\n\t\tvar size = Std.int(b.length * 8 / nbits);\n\t\tvar out = haxe.io.Bytes.alloc(size + (((b.length * 8) % nbits == 0) ? 0 : 1) );\n\t\tvar buf = 0;\n\t\tvar curbits = 0;\n\t\tvar mask = (1 << nbits) - 1;\n\t\tvar pin = 0;\n\t\tvar pout = 0;\n\t\twhile( pout < size ) {\n\t\t\twhile( curbits < nbits ) {\n\t\t\t\tcurbits += 8;\n\t\t\t\tbuf <<= 8;\n\t\t\t\tbuf |= b.get(pin++);\n\t\t\t}\n\t\t\tcurbits -= nbits;\n\t\t\tout.set(pout++,base.get((buf >> curbits) & mask));\n\t\t}\n\t\tif( curbits > 0 )\n\t\t\tout.set(pout++,base.get((buf << (nbits - curbits)) & mask));\n\t\treturn out;\n\t\t#end\n\t}\n\n\tfunction initTable() {\n\t\tvar tbl = new Array();\n\t\tfor( i in 0...256 )\n\t\t\ttbl[i] = -1;\n\t\tfor( i in 0...base.length )\n\t\t\ttbl[base.get(i)] = i;\n\t\tthis.tbl = tbl;\n\t}\n\n\tpublic function decodeBytes( b : haxe.io.Bytes ) : haxe.io.Bytes {\n\t\t#if (neko && !interp)\n\t\treturn haxe.io.Bytes.ofData( base_decode(b.getData(),base.getData()) );\n\t\t#else\n\t\tvar nbits = this.nbits;\n\t\tvar base = this.base;\n\t\tif( this.tbl == null ) initTable();\n\t\tvar tbl = this.tbl;\n\t\tvar size = (b.length * nbits) >> 3;\n\t\tvar out = haxe.io.Bytes.alloc(size);\n\t\tvar buf = 0;\n\t\tvar curbits = 0;\n\t\tvar pin = 0;\n\t\tvar pout = 0;\n\t\twhile( pout < size ) {\n\t\t\twhile( curbits < 8 ) {\n\t\t\t\tcurbits += nbits;\n\t\t\t\tbuf <<= nbits;\n\t\t\t\tvar i = tbl[b.get(pin++)];\n\t\t\t\tif( i == -1 )\n\t\t\t\t\tthrow \"BaseCode : invalid encoded char\";\n\t\t\t\tbuf |= i;\n\t\t\t}\n\t\t\tcurbits -= 8;\n\t\t\tout.set(pout++,(buf >> curbits) & 0xFF);\n\t\t}\n\t\treturn out;\n\t\t#end\n\t}\n\n\tpublic function encodeString( s : String ) {\n\t\t#if (neko && !interp)\n\t\treturn neko.NativeString.toString( base_encode(neko.NativeString.ofString(s),base.getData()) );\n\t\t#else\n\t\treturn encodeBytes(haxe.io.Bytes.ofString(s)).toString();\n\t\t#end\n\t}\n\n\tpublic function decodeString( s : String ) {\n\t\t#if (neko && !interp)\n\t\treturn neko.NativeString.toString( base_decode(neko.NativeString.ofString(s),base.getData()) );\n\t\t#else\n\t\treturn decodeBytes(haxe.io.Bytes.ofString(s)).toString();\n\t\t#end\n\t}\n\n\tpublic static function encode( s : String, base : String ) {\n\t\tvar b = new BaseCode(haxe.io.Bytes.ofString(base));\n\t\treturn b.encodeString(s);\n\t}\n\n\tpublic static function decode( s : String, base : String ) {\n\t\tvar b = new BaseCode(haxe.io.Bytes.ofString(base));\n\t\treturn b.decodeString(s);\n\t}\n\n\t#if neko\n\tprivate static var base_encode = neko.Lib.load(\"std\",\"base_encode\",2);\n\tprivate static var base_decode = neko.Lib.load(\"std\",\"base_decode\",2);\n\t#end\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.crypto;\n\n/**\n\tCreates a MD5 of a String.\n**/\nclass Md5 {\n\n\tpublic static function encode( s : String ) : String {\n\t\t#if neko\n\t\t\treturn untyped new String(base_encode(make_md5(s.__s),\"0123456789abcdef\".__s));\n\t\t#elseif php\n\t\t\treturn untyped __call__(\"md5\", s);\n\t\t#else\n\t\t\tvar m = new Md5();\n\t\t\tvar h = m.doEncode(str2blks(s));\n\t\t\treturn m.hex(h);\n\t\t#end\n\t}\n\n\tpublic static function make( b : haxe.io.Bytes ) : haxe.io.Bytes {\n\t\t#if neko\n\t\t\treturn haxe.io.Bytes.ofData(make_md5(b.getData()));\n\t\t#elseif php\n\t\t\treturn haxe.io.Bytes.ofData(untyped __call__(\"md5\", b.getData(), true));\n\t\t#else\n\t\t\tvar h = new Md5().doEncode(bytes2blks(b));\n\t\t\tvar out = haxe.io.Bytes.alloc(16);\n\t\t\tvar p = 0;\n\t\t\tfor( i in 0...4 ) {\n\t\t\t\tout.set(p++,h[i]&0xFF);\n\t\t\t\tout.set(p++,(h[i]>>8)&0xFF);\n\t\t\t\tout.set(p++,(h[i]>>16)&0xFF);\n\t\t\t\tout.set(p++,h[i]>>>24);\n\t\t\t}\n\t\t\treturn out;\n\t\t#end\n\t}\n\n\t#if neko\n\tstatic var base_encode = neko.Lib.load(\"std\",\"base_encode\",2);\n\tstatic var make_md5 = neko.Lib.load(\"std\",\"make_md5\",1);\n\t#elseif !php\n\n/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Copyright (C) Paul Johnston 1999 - 2000.\n * Updated by Greg Holt 2000 - 2001.\n * See http://pajhome.org.uk/site/legal.html for details.\n */\n\n\tfunction new() {\n\t}\n\n\tfunction bitOR(a, b){\n\t\tvar lsb = (a & 0x1) | (b & 0x1);\n\t\tvar msb31 = (a >>> 1) | (b >>> 1);\n\t\treturn (msb31 << 1) | lsb;\n\t}\n\n\tfunction bitXOR(a, b){\n\t\tvar lsb = (a & 0x1) ^ (b & 0x1);\n\t\tvar msb31 = (a >>> 1) ^ (b >>> 1);\n\t\treturn (msb31 << 1) | lsb;\n\t}\n\n\tfunction bitAND(a, b){\n\t\tvar lsb = (a & 0x1) & (b & 0x1);\n\t\tvar msb31 = (a >>> 1) & (b >>> 1);\n\t\treturn (msb31 << 1) | lsb;\n\t}\n\n\tfunction addme(x, y) {\n\t\tvar lsw = (x & 0xFFFF)+(y & 0xFFFF);\n\t\tvar msw = (x >> 16)+(y >> 16)+(lsw >> 16);\n\t\treturn (msw << 16) | (lsw & 0xFFFF);\n\t}\n\n\tfunction hex( a : Array<Int> ){\n\t\tvar str = \"\";\n\t\tvar hex_chr = \"0123456789abcdef\";\n\t\tfor( num in a )\n\t\t\tfor( j in 0...4 )\n\t\t\t\tstr += hex_chr.charAt((num >> (j * 8 + 4)) & 0x0F) +\n\t\t\t\t\t\t\t hex_chr.charAt((num >> (j * 8)) & 0x0F);\n\t\treturn str;\n\t}\n\n\tstatic function bytes2blks( b : haxe.io.Bytes ){\n\t\tvar nblk = ((b.length + 8) >> 6) + 1;\n\t\tvar blks = new Array();\n\n\t\t//preallocate size\n\t\tvar blksSize = nblk * 16;\n\t\t#if (neko || cs || cpp || java)\n\t\tblks[blksSize - 1] = 0;\n\t\t#end\n\n\t\t#if !(cpp || cs) //C++ and C# will already initialize them with zeroes.\n\t\tfor( i in 0...blksSize ) blks[i] = 0;\n\t\t#end\n\n\t\tvar i = 0;\n\t\twhile( i < b.length ) {\n\t\t\tblks[i >> 2] |= b.get(i) << ((((b.length << 3) + i) & 3) << 3);\n\t\t\ti++;\n\t\t}\n\t\tblks[i >> 2] |= 0x80 << (((b.length * 8 + i) % 4) * 8);\n\t\tvar l = b.length * 8;\n\t\tvar k = nblk * 16 - 2;\n\t\tblks[k] = (l & 0xFF);\n\t\tblks[k] |= ((l >>> 8) & 0xFF) << 8;\n\t\tblks[k] |= ((l >>> 16) & 0xFF) << 16;\n\t\tblks[k] |= ((l >>> 24) & 0xFF) << 24;\n\t\treturn blks;\n\t}\n\n\tstatic function str2blks( str : String ){\n\t\tvar nblk = ((str.length + 8) >> 6) + 1;\n\t\tvar blks = new Array();\n\n\t\t//preallocate size\n\t\tvar blksSize = nblk * 16;\n\t\t#if (neko || cs || cpp || java)\n\t\tblks[blksSize - 1] = 0;\n\t\t#end\n\n\t\t#if !(cpp || cs) //C++ and C# will already initialize them with zeroes.\n\t\tfor( i in 0...blksSize ) blks[i] = 0;\n\t\t#end\n\n\t\tvar i = 0;\n\t\twhile( i < str.length ) {\n\t\t\tblks[i >> 2] |= str.charCodeAt(i) << (((str.length * 8 + i) % 4) * 8);\n\t\t\ti++;\n\t\t}\n\t\tblks[i >> 2] |= 0x80 << (((str.length * 8 + i) % 4) * 8);\n\t\tvar l = str.length * 8;\n\t\tvar k = nblk * 16 - 2;\n\t\tblks[k] = (l & 0xFF);\n\t\tblks[k] |= ((l >>> 8) & 0xFF) << 8;\n\t\tblks[k] |= ((l >>> 16) & 0xFF) << 16;\n\t\tblks[k] |= ((l >>> 24) & 0xFF) << 24;\n\t\treturn blks;\n\t}\n\n\tfunction rol(num, cnt){\n\t\treturn (num << cnt) | (num >>> (32 - cnt));\n\t}\n\n\tfunction cmn(q, a, b, x, s, t){\n\t\treturn addme(rol((addme(addme(a, q), addme(x, t))), s), b);\n\t}\n\n\tfunction ff(a, b, c, d, x, s, t){\n\t\treturn cmn(bitOR(bitAND(b, c), bitAND((~b), d)), a, b, x, s, t);\n\t}\n\n\tfunction gg(a, b, c, d, x, s, t){\n\t\treturn cmn(bitOR(bitAND(b, d), bitAND(c, (~d))), a, b, x, s, t);\n\t}\n\n\tfunction hh(a, b, c, d, x, s, t){\n\t\treturn cmn(bitXOR(bitXOR(b, c), d), a, b, x, s, t);\n\t}\n\n\tfunction ii(a, b, c, d, x, s, t){\n\t\treturn cmn(bitXOR(c, bitOR(b, (~d))), a, b, x, s, t);\n\t}\n\n\tfunction doEncode( x : Array<Int> ) : Array<Int> {\n\n\t\tvar a =  1732584193;\n\t\tvar b = -271733879;\n\t\tvar c = -1732584194;\n\t\tvar d =  271733878;\n\n\t\tvar step;\n\n\t\tvar i = 0;\n\t\twhile( i < x.length )  {\n\t\t\tvar olda = a;\n\t\t\tvar oldb = b;\n\t\t\tvar oldc = c;\n\t\t\tvar oldd = d;\n\n\t\t\tstep = 0;\n\t\t\ta = ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n\t\t\td = ff(d, a, b, c, x[i+ 1], 12, -389564586);\n\t\t\tc = ff(c, d, a, b, x[i+ 2], 17,  606105819);\n\t\t\tb = ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n\t\t\ta = ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n\t\t\td = ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n\t\t\tc = ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n\t\t\tb = ff(b, c, d, a, x[i+ 7], 22, -45705983);\n\t\t\ta = ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n\t\t\td = ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n\t\t\tc = ff(c, d, a, b, x[i+10], 17, -42063);\n\t\t\tb = ff(b, c, d, a, x[i+11], 22, -1990404162);\n\t\t\ta = ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n\t\t\td = ff(d, a, b, c, x[i+13], 12, -40341101);\n\t\t\tc = ff(c, d, a, b, x[i+14], 17, -1502002290);\n\t\t\tb = ff(b, c, d, a, x[i+15], 22,  1236535329);\n\t\t\ta = gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n\t\t\td = gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n\t\t\tc = gg(c, d, a, b, x[i+11], 14,  643717713);\n\t\t\tb = gg(b, c, d, a, x[i+ 0], 20, -373897302);\n\t\t\ta = gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n\t\t\td = gg(d, a, b, c, x[i+10], 9 ,  38016083);\n\t\t\tc = gg(c, d, a, b, x[i+15], 14, -660478335);\n\t\t\tb = gg(b, c, d, a, x[i+ 4], 20, -405537848);\n\t\t\ta = gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n\t\t\td = gg(d, a, b, c, x[i+14], 9 , -1019803690);\n\t\t\tc = gg(c, d, a, b, x[i+ 3], 14, -187363961);\n\t\t\tb = gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n\t\t\ta = gg(a, b, c, d, x[i+13], 5 , -1444681467);\n\t\t\td = gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n\t\t\tc = gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n\t\t\tb = gg(b, c, d, a, x[i+12], 20, -1926607734);\n\t\t\ta = hh(a, b, c, d, x[i+ 5], 4 , -378558);\n\t\t\td = hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n\t\t\tc = hh(c, d, a, b, x[i+11], 16,  1839030562);\n\t\t\tb = hh(b, c, d, a, x[i+14], 23, -35309556);\n\t\t\ta = hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n\t\t\td = hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n\t\t\tc = hh(c, d, a, b, x[i+ 7], 16, -155497632);\n\t\t\tb = hh(b, c, d, a, x[i+10], 23, -1094730640);\n\t\t\ta = hh(a, b, c, d, x[i+13], 4 ,  681279174);\n\t\t\td = hh(d, a, b, c, x[i+ 0], 11, -358537222);\n\t\t\tc = hh(c, d, a, b, x[i+ 3], 16, -722521979);\n\t\t\tb = hh(b, c, d, a, x[i+ 6], 23,  76029189);\n\t\t\ta = hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n\t\t\td = hh(d, a, b, c, x[i+12], 11, -421815835);\n\t\t\tc = hh(c, d, a, b, x[i+15], 16,  530742520);\n\t\t\tb = hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\t\t\ta = ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n\t\t\td = ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n\t\t\tc = ii(c, d, a, b, x[i+14], 15, -1416354905);\n\t\t\tb = ii(b, c, d, a, x[i+ 5], 21, -57434055);\n\t\t\ta = ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n\t\t\td = ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n\t\t\tc = ii(c, d, a, b, x[i+10], 15, -1051523);\n\t\t\tb = ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n\t\t\ta = ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n\t\t\td = ii(d, a, b, c, x[i+15], 10, -30611744);\n\t\t\tc = ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n\t\t\tb = ii(b, c, d, a, x[i+13], 21,  1309151649);\n\t\t\ta = ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n\t\t\td = ii(d, a, b, c, x[i+11], 10, -1120210379);\n\t\t\tc = ii(c, d, a, b, x[i+ 2], 15,  718787259);\n\t\t\tb = ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n\t\t\ta = addme(a, olda);\n\t\t\tb = addme(b, oldb);\n\t\t\tc = addme(c, oldc);\n\t\t\td = addme(d, oldd);\n\n\t\t\ti += 16;\n\t\t}\n\t\treturn [a,b,c,d];\n\t}\n\n\t#end\n\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\tBalancedTree allows key-value mapping with arbitrary keys, as long as they\n\tcan be ordered. By default, `Reflect.compare` is used in the `compare`\n\tmethod, which can be overridden in subclasses.\n\n\tOperations have a logarithmic average and worst-case cost.\n\n\tIteration over keys and values, using `keys` and `iterator` respectively,\n\tare in-order.\n**/\nclass BalancedTree<K,V> {\n\tvar root:TreeNode<K,V>;\n\n\t/**\n\t\tCreates a new BalancedTree, which is initially empty.\n\t**/\n\tpublic function new() { }\n\n\t/**\n\t\tBinds `key` to `value`.\n\n\t\tIf `key` is already bound to a value, that binding disappears.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function set(key:K, value:V) {\n\t\troot = setLoop(key, value, root);\n\t}\n\n\t/**\n\t\tReturns the value `key` is bound to.\n\n\t\tIf `key` is not bound to any value, `null` is returned.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function get(key:K):Null<V> {\n\t\tvar node = root;\n\t\twhile (node != null) {\n\t\t\tvar c = compare(key, node.key);\n\t\t\tif (c == 0) return node.value;\n\t\t\tif (c < 0) node = node.left;\n\t\t\telse node = node.right;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tRemoves the current binding of `key`.\n\n\t\tIf `key` has no binding, `this` BalancedTree is unchanged and false is\n\t\treturned.\n\n\t\tOtherwise the binding of `key` is removed and true is returned.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function remove(key:K) {\n\t\ttry {\n\t\t\troot = removeLoop(key, root);\n\t\t\treturn true;\n\t\t}\n\t\tcatch (e:String) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t\tTells if `key` is bound to a value.\n\n\t\tThis method returns true even if `key` is bound to null.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function exists(key:K) {\n\t\tvar node = root;\n\t\twhile (node != null) {\n\t\t\tvar c = compare(key, node.key);\n\t\t\tif (c == 0) return true;\n\t\t\telse if (c < 0) node = node.left;\n\t\t\telse node = node.right;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tIterates over the bound values of `this` BalancedTree.\n\n\t\tThis operation is performed in-order.\n\t**/\n\tpublic function iterator():Iterator<V> {\n\t\tvar ret = [];\n\t\titeratorLoop(root, ret);\n\t\treturn ret.iterator();\n\t}\n\n\t/**\n\t\tIterates over the keys of `this` BalancedTree.\n\n\t\tThis operation is performed in-order.\n\t**/\n\tpublic function keys():Iterator<K> {\n\t\tvar ret = [];\n\t\tkeysLoop(root, ret);\n\t\treturn ret.iterator();\n\t}\n\n\tfunction setLoop(k:K, v:V, node:TreeNode<K,V>) {\n\t\tif (node == null) return new TreeNode<K,V>(null, k, v, null);\n\t\tvar c = compare(k, node.key);\n\t\treturn if (c == 0) new TreeNode<K,V>(node.left, k, v, node.right, node.get_height());\n\t\telse if (c < 0) {\n\t\t\tvar nl = setLoop(k, v, node.left);\n\t\t\tbalance(nl, node.key, node.value, node.right);\n\t\t} else {\n\t\t\tvar nr = setLoop(k, v, node.right);\n\t\t\tbalance(node.left, node.key, node.value, nr);\n\t\t}\n\t}\n\n\tfunction removeLoop(k:K, node:TreeNode<K,V>) {\n\t\tif (node == null) throw \"Not_found\";\n\t\tvar c = compare(k, node.key);\n\t\treturn if (c == 0) merge(node.left, node.right);\n\t\telse if (c < 0) balance(removeLoop(k, node.left), node.key, node.value, node.right);\n\t\telse balance(node.left, node.key, node.value, removeLoop(k, node.right));\n\t}\n\n\tfunction iteratorLoop(node:TreeNode<K,V>, acc:Array<V>) {\n\t\tif (node != null) {\n\t\t\titeratorLoop(node.left, acc);\n\t\t\tacc.push(node.value);\n\t\t\titeratorLoop(node.right, acc);\n\t\t}\n\t}\n\n\tfunction keysLoop(node:TreeNode<K,V>, acc:Array<K>) {\n\t\tif (node != null) {\n\t\t\tkeysLoop(node.left, acc);\n\t\t\tacc.push(node.key);\n\t\t\tkeysLoop(node.right, acc);\n\t\t}\n\t}\n\n\tfunction merge(t1, t2) {\n\t\tif (t1 == null) return t2;\n\t\tif (t2 == null) return t1;\n\t\tvar t = minBinding(t2);\n\t\treturn balance(t1, t.key, t.value, removeMinBinding(t2));\n\t}\n\n\tfunction minBinding(t:TreeNode<K,V>) {\n\t\treturn if (t == null) throw \"Not_found\";\n\t\telse if (t.left == null) t;\n\t\telse minBinding(t.left);\n\t}\n\n\tfunction removeMinBinding(t:TreeNode<K,V>) {\n\t\treturn if (t.left == null) t.right;\n\t\telse balance(removeMinBinding(t.left), t.key, t.value, t.right);\n\t}\n\n\tfunction balance(l:TreeNode<K,V>, k:K, v:V, r:TreeNode<K,V>):TreeNode<K,V> {\n\t\tvar hl = l.get_height();\n\t\tvar hr = r.get_height();\n\t\treturn if (hl > hr + 2) {\n\t\t\tif (l.left.get_height() >= l.right.get_height()) new TreeNode<K,V>(l.left, l.key, l.value, new TreeNode<K,V>(l.right, k, v, r));\n\t\t\telse new TreeNode<K,V>(new TreeNode<K,V>(l.left,l.key, l.value, l.right.left), l.right.key, l.right.value, new TreeNode<K,V>(l.right.right, k, v, r));\n\t\t} else if (hr > hl + 2) {\n\t\t\tif (r.right.get_height() > r.left.get_height()) new TreeNode<K,V>(new TreeNode<K,V>(l, k, v, r.left), r.key, r.value, r.right);\n\t\t\telse new TreeNode<K,V>(new TreeNode<K,V>(l, k, v, r.left.left), r.left.key, r.left.value, new TreeNode<K,V>(r.left.right, r.key, r.value, r.right));\n\t\t} else {\n\t\t\tnew TreeNode<K,V>(l, k, v, r, (hl > hr ? hl : hr) + 1);\n\t\t}\n\t}\n\n\tfunction compare(k1:K, k2:K) {\n\t\treturn Reflect.compare(k1, k2);\n\t}\n\n\tpublic function toString() {\n\t\treturn root == null ? '{}' : '{${root.toString()}}';\n\t}\n}\n\nclass TreeNode<K,V> {\n\tpublic var left : TreeNode<K,V>;\n\tpublic var right : TreeNode<K,V>;\n\tpublic var key : K;\n\tpublic var value : V;\n\t#if as3\n\tpublic\n\t#end\n\tvar _height : Int;\n\n\tpublic function new(l, k, v, r, h = -1) {\n\t\tleft = l;\n\t\tkey = k;\n\t\tvalue = v;\n\t\tright = r;\n\t\tif (h == -1)\n\t\t\t_height = (left.get_height() > right.get_height() ? left.get_height() : right.get_height()) + 1;\n\t\telse\n\t\t\t_height = h;\n\t}\n\n\t@:extern public inline function get_height() return this == null ? 0 : _height;\n\n\tpublic function toString() {\n\t\treturn (left == null ? \"\" : left.toString() + \", \") + '$key=$value' + (right == null ? \"\" : \", \" +right.toString());\n\t}\n}","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\tEnumValueMap allows mapping of enum value keys to arbitrary values.\n\n\tKeys are compared by value and recursively over their parameters. If any\n\tparameter is not an enum value, `Reflect.compare` is used to compare them.\n**/\nclass EnumValueMap<K:EnumValue, V> extends haxe.ds.BalancedTree<K, V> implements haxe.Constraints.IMap<K,V> {\n\n\toverride function compare(k1:EnumValue, k2:EnumValue):Int {\n\t\tvar d = k1.getIndex() - k2.getIndex();\n\t\tif (d != 0) return d;\n\t\tvar p1 = k1.getParameters();\n\t\tvar p2 = k2.getParameters();\n\t\tif (p1.length == 0 && p2.length == 0) return 0;\n\t\treturn compareArgs(p1, p2);\n\t}\n\n\tfunction compareArgs(a1:Array<Dynamic>, a2:Array<Dynamic>):Int {\n\t\tvar ld = a1.length - a2.length;\n\t\tif (ld != 0) return ld;\n\t\tfor (i in 0...a1.length) {\n\t\t\tvar d = compareArg(a1[i], a2[i]);\n\t\t\tif (d != 0) return d;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction compareArg(v1:Dynamic, v2:Dynamic):Int {\n\t\treturn if (Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {\n\t\t\tcompare(v1, v2);\n\t\t} else if (Std.is(v1, Array) && Std.is(v2, Array)) {\n\t\t\tcompareArgs(v1, v2);\n\t\t} else {\n\t\t\tReflect.compare(v1, v2);\n\t\t}\n\t}\n}","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\nabstract HashMap<K:{ function hashCode():Int; }, V >(HashMapData<K,V>) {\n\tpublic inline function new() {\n\t\tthis = new HashMapData();\n\t}\n\tpublic inline function set(k:K, v:V) {\n\t\tthis.keys.set(k.hashCode(), k);\n\t\tthis.values.set(k.hashCode(), v);\n\t}\n\tpublic inline function get(k:K) {\n\t\treturn this.values.get(k.hashCode());\n\t}\n\tpublic inline function exists(k:K) {\n\t\treturn this.values.exists(k.hashCode());\n\t}\n\tpublic inline function remove(k:K) {\n\t\tthis.values.remove(k.hashCode());\n\t\treturn this.keys.remove(k.hashCode());\n\t}\n\tpublic inline function keys() {\n\t\treturn this.keys.iterator();\n\t}\n\tpublic inline function iterator() {\n\t\treturn this.values.iterator();\n\t}\n}\n\nprivate class HashMapData<K:{ function hashCode():Int; },V> {\n\tpublic var keys:IntMap<K>;\n\tpublic var values:IntMap<V>;\n\tpublic inline function new() {\n\t\tkeys = new IntMap();\n\t\tvalues = new IntMap();\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class IntMap<T> implements haxe.Constraints.IMap<Int,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic inline function set( key : Int, value : T ) : Void {\n\t\tuntyped h[key] = value;\n\t}\n\n\tpublic inline function get( key : Int ) : Null<T> {\n\t\treturn untyped h[key];\n\t}\n\n\tpublic inline function exists( key : Int ) : Bool {\n\t\treturn untyped h.hasOwnProperty(key);\n\t}\n\n\tpublic function remove( key : Int ) : Bool {\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped  __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<Int> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(key|0);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of h software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and h permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n@:coreApi\nclass ObjectMap<K:{ }, V> implements haxe.Constraints.IMap<K,V> {\n\n\tstatic var count = 0;\n\n\tstatic inline function assignId(obj: { } ):Int {\n\t\treturn untyped obj.__id__ = ++count;\n\t}\n\n\tstatic inline function getId(obj: { } ):Int {\n\t\treturn untyped obj.__id__;\n\t}\n\n\tvar h : { };\n\n\tpublic function new() : Void {\n\t\th = { };\n\t\tuntyped h.__keys__ = { };\n\t}\n\n\tpublic function set(key:K, value:V):Void untyped {\n\t\tvar id : Int = untyped key.__id__ || assignId(key);\n\t\th[id] = value;\n\t\th.__keys__[id] = key;\n\t}\n\n\tpublic inline function get(key:K):Null<V> {\n\t\treturn untyped h[getId(key)];\n\t}\n\n\tpublic inline function exists(key:K):Bool {\n\t\treturn untyped h.__keys__[getId(key)] != null;\n\t}\n\n\tpublic function remove( key : K ) : Bool {\n\t\tvar id = getId(key);\n\t\tif ( untyped h.__keys__[id] == null ) return false;\n\t\tuntyped  __js__(\"delete\")(h[id]);\n\t\tuntyped  __js__(\"delete\")(h.__keys__[id]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<K> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h.__keys__ ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(h.__keys__[key]);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<V> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[getId(i)]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(Std.string(i));\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\nprivate class StringMapIterator<T> {\n\tvar map : StringMap<T>;\n\tvar keys : Array<String>;\n\tvar index : Int;\n\tvar count : Int;\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\tprivate var rh : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String) : Bool {\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\n\t}\n\n\tpublic inline function set( key : String, value : T ) : Void {\n\t\tif( isReserved(key) )\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get( key : String ) : Null<T> {\n\t\tif( isReserved(key) )\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists( key : String ) : Bool {\n\t\tif( isReserved(key) )\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved( key : String, value : T ) : Void {\n\t\tif( rh == null ) rh = {};\n\t\trh[cast \"$\"+key] = value;\n\t}\n\n\tfunction getReserved( key : String ) : Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\"+key];\n\t}\n\n\tfunction existsReserved( key : String ) : Bool {\n\t\tif( rh == null ) return false;\n\t\treturn untyped rh.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tif( isReserved(key) ) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif( rh == null || !rh.hasOwnProperty(key) ) return false;\n\t\t\tuntyped __js__(\"delete\")(rh[key]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif( !h.hasOwnProperty(key) )\n\t\t\t\treturn false;\n\t\t\tuntyped __js__(\"delete\")(h[key]);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\t\n\tfunction arrayKeys() : Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\tout.push(key);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\tif( rh != null ) untyped {\n\t\t\t__js__(\"for( var key in this.rh ) {\");\n\t\t\t\tif( key.charCodeAt(0) == \"$\".code )\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator() : Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor( i in 0...keys.length ) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif( i < keys.length )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __js__(\"var __map_reserved = {}\");\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\tWeakMap allows mapping of object keys to arbitrary values.\n\n\tThe keys are considered to be weak references on static targets.\n\n\tSee `Map` for documentation details.\n**/\nclass WeakMap<K: { },V> implements haxe.Constraints.IMap<K,V> {\n\n\t/**\n\t\tCreates a new WeakMap.\n\t**/\n\tpublic function new():Void {\n\t\tthrow \"Not implemented for this platform\";\n\t}\n\n\t/**\n\t\tSee `Map.set`\n\t**/\n\tpublic function set(key:K, value:V):Void {\n\t}\n\n\t/**\n\t\tSee `Map.get`\n\t**/\n\tpublic function get(key:K):Null<V> {\n\t\treturn null;\n\t}\n\n\t/**\n\t\tSee `Map.exists`\n\t**/\n\tpublic function exists(key:K):Bool {\n\t\treturn false;\n\t}\n\n\t/**\n\t\tSee `Map.remove`\n\t**/\n\tpublic function remove(key:K):Bool {\n\t\treturn false;\n\t}\n\n\t/**\n\t\tSee `Map.keys`\n\t**/\n\tpublic function keys():Iterator<K> {\n\t\treturn null;\n\t}\n\n\t/**\n\t\tSee `Map.iterator`\n\t**/\n\tpublic function iterator():Iterator<V> {\n\t\treturn null;\n\t}\n\n\t/**\n\t\tSee `Map.toString`\n\t**/\n\tpublic function toString():String {\n\t\treturn null;\n\t}\n}","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.format;\n\n/**\n\tAn implementation of JSON parser in Haxe.\n\n\tThis class is used by `haxe.Json` when native JSON implementation\n\tis not available.\n**/\nclass JsonParser {\n\n\t/**\n\t\tParses given JSON-encoded `str` and returns the resulting object.\n\n\t\tJSON objects are parsed into anonymous structures and JSON arrays\n\t\tare parsed into Array<Dynamic>.\n\n\t\tIf given `str` is not valid JSON, an exception will be thrown.\n\n\t\tIf `str` is null, the result is unspecified.\n\t**/\n\tstatic public inline function parse(str : String) : Dynamic {\n\t\treturn new JsonParser(str).parseRec();\n\t}\n\n\tvar str : String;\n\tvar pos : Int;\n\n\tfunction new( str : String ) {\n\t\tthis.str = str;\n\t\tthis.pos = 0;\n\t}\n\n\tfunction parseRec() : Dynamic {\n\t\twhile( true ) {\n\t\t\tvar c = nextChar();\n\t\t\tswitch( c ) {\n\t\t\tcase ' '.code, '\\r'.code, '\\n'.code, '\\t'.code:\n\t\t\t\t// loop\n\t\t\tcase '{'.code:\n\t\t\t\tvar obj = {}, field = null, comma : Null<Bool> = null;\n\t\t\t\twhile( true ) {\n\t\t\t\t\tvar c = nextChar();\n\t\t\t\t\tswitch( c ) {\n\t\t\t\t\tcase ' '.code, '\\r'.code, '\\n'.code, '\\t'.code:\n\t\t\t\t\t\t// loop\n\t\t\t\t\tcase '}'.code:\n\t\t\t\t\t\tif( field != null || comma == false )\n\t\t\t\t\t\t\tinvalidChar();\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\tcase ':'.code:\n\t\t\t\t\t\tif( field == null )\n\t\t\t\t\t\t\tinvalidChar();\n\t\t\t\t\t\tReflect.setField(obj,field,parseRec());\n\t\t\t\t\t\tfield = null;\n\t\t\t\t\t\tcomma = true;\n\t\t\t\t\tcase ','.code:\n\t\t\t\t\t\tif( comma ) comma = false else invalidChar();\n\t\t\t\t\tcase '\"'.code:\n\t\t\t\t\t\tif( comma ) invalidChar();\n\t\t\t\t\t\tfield = parseString();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tinvalidChar();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase '['.code:\n\t\t\t\tvar arr = [], comma : Null<Bool> = null;\n\t\t\t\twhile( true ) {\n\t\t\t\t\tvar c = nextChar();\n\t\t\t\t\tswitch( c ) {\n\t\t\t\t\tcase ' '.code, '\\r'.code, '\\n'.code, '\\t'.code:\n\t\t\t\t\t\t// loop\n\t\t\t\t\tcase ']'.code:\n\t\t\t\t\t\tif( comma == false ) invalidChar();\n\t\t\t\t\t\treturn arr;\n\t\t\t\t\tcase ','.code:\n\t\t\t\t\t\tif( comma ) comma = false else invalidChar();\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif( comma ) invalidChar();\n\t\t\t\t\t\tpos--;\n\t\t\t\t\t\tarr.push(parseRec());\n\t\t\t\t\t\tcomma = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase 't'.code:\n\t\t\t\tvar save = pos;\n\t\t\t\tif( nextChar() != 'r'.code || nextChar() != 'u'.code || nextChar() != 'e'.code ) {\n\t\t\t\t\tpos = save;\n\t\t\t\t\tinvalidChar();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\tcase 'f'.code:\n\t\t\t\tvar save = pos;\n\t\t\t\tif( nextChar() != 'a'.code || nextChar() != 'l'.code || nextChar() != 's'.code || nextChar() != 'e'.code ) {\n\t\t\t\t\tpos = save;\n\t\t\t\t\tinvalidChar();\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\tcase 'n'.code:\n\t\t\t\tvar save = pos;\n\t\t\t\tif( nextChar() != 'u'.code || nextChar() != 'l'.code || nextChar() != 'l'.code ) {\n\t\t\t\t\tpos = save;\n\t\t\t\t\tinvalidChar();\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\tcase '\"'.code:\n\t\t\t\treturn parseString();\n\t\t\tcase '0'.code, '1'.code,'2'.code,'3'.code,'4'.code,'5'.code,'6'.code,'7'.code,'8'.code,'9'.code,'-'.code:\n\t\t\t\treturn parseNumber(c);\n\t\t\tdefault:\n\t\t\t\tinvalidChar();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString() {\n\t\tvar start = pos;\n\t\tvar buf = null;\n\t\twhile( true ) {\n\t\t\tvar c = nextChar();\n\t\t\tif( c == '\"'.code )\n\t\t\t\tbreak;\n\t\t\tif( c == '\\\\'.code ) {\n\t\t\t\tif (buf == null) {\n\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t}\n\t\t\t\tbuf.addSub(str,start, pos - start - 1);\n\t\t\t\tc = nextChar();\n\t\t\t\tswitch( c ) {\n\t\t\t\tcase \"r\".code: buf.addChar(\"\\r\".code);\n\t\t\t\tcase \"n\".code: buf.addChar(\"\\n\".code);\n\t\t\t\tcase \"t\".code: buf.addChar(\"\\t\".code);\n\t\t\t\tcase \"b\".code: buf.addChar(8);\n\t\t\t\tcase \"f\".code: buf.addChar(12);\n\t\t\t\tcase \"/\".code, '\\\\'.code, '\"'.code: buf.addChar(c);\n\t\t\t\tcase 'u'.code:\n\t\t\t\t\tvar uc = Std.parseInt(\"0x\" + str.substr(pos, 4));\n\t\t\t\t\tpos += 4;\n\t\t\t\t\t#if (neko || php || cpp)\n\t\t\t\t\tif( uc <= 0x7F )\n\t\t\t\t\t\tbuf.addChar(uc);\n\t\t\t\t\telse if( uc <= 0x7FF ) {\n\t\t\t\t\t\tbuf.addChar(0xC0 | (uc >> 6));\n\t\t\t\t\t\tbuf.addChar(0x80 | (uc & 63));\n\t\t\t\t\t} else if( uc <= 0xFFFF ) {\n\t\t\t\t\t\tbuf.addChar(0xE0 | (uc >> 12));\n\t\t\t\t\t\tbuf.addChar(0x80 | ((uc >> 6) & 63));\n\t\t\t\t\t\tbuf.addChar(0x80 | (uc & 63));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuf.addChar(0xF0 | (uc >> 18));\n\t\t\t\t\t\tbuf.addChar(0x80 | ((uc >> 12) & 63));\n\t\t\t\t\t\tbuf.addChar(0x80 | ((uc >> 6) & 63));\n\t\t\t\t\t\tbuf.addChar(0x80 | (uc & 63));\n\t\t\t\t\t}\n\t\t\t\t\t#else\n\t\t\t\t\tbuf.addChar(uc);\n\t\t\t\t\t#end\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Invalid escape sequence \\\\\" + String.fromCharCode(c) + \" at position \" + (pos - 1);\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t}\n\t\t\t#if (neko || php || cpp)\n\t\t\t// ensure utf8 chars are not cut\n\t\t\telse if( c >= 0x80 ) {\n\t\t\t\tpos++;\n\t\t\t\tif( c >= 0xFC ) pos += 4;\n\t\t\t\telse if( c >= 0xF8 ) pos += 3;\n\t\t\t\telse if( c >= 0xF0 ) pos += 2;\n\t\t\t\telse if( c >= 0xE0 ) pos++;\n\t\t\t}\n\t\t\t#end\n\t\t\telse if( StringTools.isEof(c) )\n\t\t\t\tthrow \"Unclosed string\";\n\t\t}\n\t\tif (buf == null) {\n\t\t\treturn str.substr(start, pos - start - 1);\n\t\t}\n\t\telse {\n\t\t\tbuf.addSub(str,start, pos - start - 1);\n\t\t\treturn buf.toString();\n\t\t}\n\t}\n\n\tinline function parseNumber( c : Int ) : Dynamic {\n\t\tvar start = pos - 1;\n\t\tvar minus = c == '-'.code, digit = !minus, zero = c == '0'.code;\n\t\tvar point = false, e = false, pm = false, end = false;\n\t\twhile( true ) {\n\t\t\tc = nextChar();\n\t\t\tswitch( c ) {\n\t\t\t\tcase '0'.code :\n\t\t\t\t\tif (zero && !point) invalidNumber(start);\n\t\t\t\t\tif (minus) {\n\t\t\t\t\t\tminus = false; zero = true;\n\t\t\t\t\t}\n\t\t\t\t\tdigit = true;\n\t\t\t\tcase '1'.code,'2'.code,'3'.code,'4'.code,'5'.code,'6'.code,'7'.code,'8'.code,'9'.code :\n\t\t\t\t\tif (zero && !point) invalidNumber(start);\n\t\t\t\t\tif (minus) minus = false;\n\t\t\t\t\tdigit = true; zero = false;\n\t\t\t\tcase '.'.code :\n\t\t\t\t\tif (minus || point) invalidNumber(start);\n\t\t\t\t\tdigit = false; point = true;\n\t\t\t\tcase 'e'.code, 'E'.code :\n\t\t\t\t\tif (minus || zero || e) invalidNumber(start);\n\t\t\t\t\tdigit = false; e = true;\n\t\t\t\tcase '+'.code, '-'.code :\n\t\t\t\t\tif (!e || pm) invalidNumber(start);\n\t\t\t\t\tdigit = false; pm = true;\n\t\t\t\tdefault :\n\t\t\t\t\tif (!digit) invalidNumber(start);\n\t\t\t\t\tpos--;\n\t\t\t\t\tend = true;\n\t\t\t}\n\t\t\tif (end) break;\n\t\t}\n\t\tvar f = Std.parseFloat(str.substr(start, pos - start));\n\t\tvar i = Std.int(f);\n\t\treturn if( i == f ) i else f;\n\t}\n\n\tinline function nextChar() {\n\t\treturn StringTools.fastCodeAt(str,pos++);\n\t}\n\n\tfunction invalidChar() {\n\t\tpos--; // rewind\n\t\tthrow \"Invalid char \"+StringTools.fastCodeAt(str,pos)+\" at position \"+pos;\n\t}\n\n\tfunction invalidNumber( start : Int ) {\n\t\tthrow \"Invalid number at position \"+start+\": \" + str.substr(start, pos - start);\n\t}\n}\n","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\nimport js.html.compat.Uint8Array;\nimport js.html.compat.DataView;\n\n@:coreApi\nclass Bytes {\n\n\tpublic var length(default,null) : Int;\n\tvar b : js.html.Uint8Array;\n\tvar data : js.html.DataView;\n\n\tfunction new(data:BytesData) {\n\t\tthis.length = data.byteLength;\n\t\tthis.b = new js.html.Uint8Array(data);\n\t\tuntyped {\n\t\t\tb.bufferValue = data; // some impl does not return the same instance in .buffer\n\t\t\tdata.hxBytes = this;\n\t\t\tdata.bytes = this.b;\n\t\t}\n\t}\n\n\tpublic inline function get( pos : Int ) : Int {\n\t\treturn b[pos];\n\t}\n\n\tpublic inline function set( pos : Int, v : Int ) : Void {\n\t\tb[pos] = v & 0xFF; // the &0xFF is necessary for js.html.compat support\n\t}\n\n\tpublic function blit( pos : Int, src : Bytes, srcpos : Int, len : Int ) : Void {\n\t\tif( pos < 0 || srcpos < 0 || len < 0 || pos + len > length || srcpos + len > src.length ) throw Error.OutsideBounds;\n\t\tif( srcpos == 0 && len == src.length )\n\t\t\tb.set(src.b,pos);\n\t\telse\n\t\t\tb.set(src.b.subarray(srcpos,srcpos+len),pos);\n\t}\n\n\tpublic function fill( pos : Int, len : Int, value : Int ) : Void {\n\t\tfor( i in 0...len )\n\t\t\tset(pos++, value);\n\t}\n\n\tpublic function sub( pos : Int, len : Int ) : Bytes {\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\treturn new Bytes(b.buffer.slice(pos+b.byteOffset,pos+b.byteOffset+len));\n\t}\n\n\tpublic function compare( other : Bytes ) : Int {\n\t\tvar b1 = b;\n\t\tvar b2 = other.b;\n\t\tvar len = (length < other.length) ? length : other.length;\n\t\tfor( i in 0...len )\n\t\t\tif( b1[i] != b2[i] )\n\t\t\t\treturn b1[i] - b2[i];\n\t\treturn length - other.length;\n\t}\n\n\tinline function initData() : Void {\n\t\tif( data == null ) data = new js.html.DataView(b.buffer, b.byteOffset, b.byteLength);\n\t}\n\n\tpublic function getDouble( pos : Int ) : Float {\n\t\tinitData();\n\t\treturn data.getFloat64(pos, true);\n\t}\n\n\tpublic function getFloat( pos : Int ) : Float {\n\t\tinitData();\n\t\treturn data.getFloat32(pos, true);\n\t}\n\n\tpublic function setDouble( pos : Int, v : Float ) : Void {\n\t\tinitData();\n\t\tdata.setFloat64(pos, v, true);\n\t}\n\n\tpublic function setFloat( pos : Int, v : Float ) : Void {\n\t\tinitData();\n\t\tdata.setFloat32(pos, v, true);\n\t}\n\n\tpublic function getUInt16( pos : Int ) : Int {\n\t\tinitData();\n\t\treturn data.getUint16(pos, true);\n\t}\n\n\tpublic function setUInt16( pos : Int, v : Int ) : Void {\n\t\tinitData();\n\t\tdata.setUint16(pos, v, true);\n\t}\n\n\tpublic function getInt32( pos : Int ) : Int {\n\t\tinitData();\n\t\treturn data.getInt32(pos, true);\n\t}\n\n\tpublic function setInt32( pos : Int, v : Int ) : Void {\n\t\tinitData();\n\t\tdata.setInt32(pos, v, true);\n\t}\n\n\tpublic function getInt64( pos : Int ) : haxe.Int64 {\n\t\treturn Int64.make(getInt32(pos + 4),getInt32(pos));\n\t}\n\n\tpublic function setInt64( pos : Int, v : haxe.Int64 ) : Void {\n\t\tsetInt32(pos, v.low);\n\t\tsetInt32(pos + 4, v.high);\n\t}\n\n\tpublic function getString( pos : Int, len : Int ) : String {\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\tvar s = \"\";\n\t\tvar b = b;\n\t\tvar fcc = String.fromCharCode;\n\t\tvar i = pos;\n\t\tvar max = pos+len;\n\t\t// utf8-decode and utf16-encode\n\t\twhile( i < max ) {\n\t\t\tvar c = b[i++];\n\t\t\tif( c < 0x80 ) {\n\t\t\t\tif( c == 0 ) break;\n\t\t\t\ts += fcc(c);\n\t\t\t} else if( c < 0xE0 )\n\t\t\t\ts += fcc( ((c & 0x3F) << 6) | (b[i++] & 0x7F) );\n\t\t\telse if( c < 0xF0 ) {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\ts += fcc( ((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (b[i++] & 0x7F) );\n\t\t\t} else {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\tvar c3 = b[i++];\n\t\t\t\tvar u = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (b[i++] & 0x7F);\n\t\t\t\t// surrogate pair\n\t\t\t\ts += fcc( (u >> 10) + 0xD7C0 );\n\t\t\t\ts += fcc( (u & 0x3FF) | 0xDC00 );\n\t\t\t}\n\t\t}\n\t\treturn s;\n\t}\n\n\t@:deprecated(\"readString is deprecated, use getString instead\")\n\t@:noCompletion\n\tpublic inline function readString(pos:Int, len:Int):String {\n\t\treturn getString(pos, len);\n\t}\n\n\tpublic function toString() : String {\n\t\treturn getString(0,length);\n\t}\n\n\tpublic function toHex() : String {\n\t\tvar s = new StringBuf();\n\t\tvar chars = [];\n\t\tvar str = \"0123456789abcdef\";\n\t\tfor( i in 0...str.length )\n\t\t\tchars.push(str.charCodeAt(i));\n\t\tfor( i in 0...length ) {\n\t\t\tvar c = get(i);\n\t\t\ts.addChar(chars[c >> 4]);\n\t\t\ts.addChar(chars[c & 15]);\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function getData() : BytesData {\n\t\treturn untyped b.bufferValue;\n\t}\n\n\tpublic static function alloc( length : Int ) : Bytes {\n\t\treturn new Bytes(new BytesData(length));\n\t}\n\n\tpublic static function ofString( s : String ) : Bytes {\n\t\tvar a = new Array();\n\t\t// utf16-decode and utf8-encode\n\t\tvar i = 0;\n\t\twhile( i < s.length ) {\n\t\t\tvar c : Int = StringTools.fastCodeAt(s,i++);\n\t\t\t// surrogate pair\n\t\t\tif( 0xD800 <= c && c <= 0xDBFF )\n\t\t\t    c = (c - 0xD7C0 << 10) | (StringTools.fastCodeAt(s,i++) & 0x3FF);\n\t\t\tif( c <= 0x7F )\n\t\t\t\ta.push(c);\n\t\t\telse if( c <= 0x7FF ) {\n\t\t\t\ta.push( 0xC0 | (c >> 6) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else if( c <= 0xFFFF ) {\n\t\t\t\ta.push( 0xE0 | (c >> 12) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else {\n\t\t\t\ta.push( 0xF0 | (c >> 18) );\n\t\t\t\ta.push( 0x80 | ((c >> 12) & 63) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t}\n\t\t}\n\t\treturn new Bytes(new js.html.Uint8Array(a).buffer);\n\t}\n\n\tpublic static function ofData( b : BytesData ) : Bytes {\n\t\tvar hb = untyped b.hxBytes;\n\t\tif( hb != null ) return hb;\n\t\treturn new Bytes(b);\n\t}\n\n\tpublic inline static function fastGet( b : BytesData, pos : Int ) : Int {\n\t\t// this requires that we have wrapped it with haxe.io.Bytes beforehand\n\t\treturn untyped b.bytes[pos];\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\nclass BytesBuffer {\n\n\t#if neko\n\tvar b : Dynamic; // neko string buffer\n\t#elseif flash\n\tvar b : flash.utils.ByteArray;\n\t#elseif php\n\tvar b : String;\n\t#elseif cpp\n\tvar b : BytesData;\n\t#elseif cs\n\tvar b : cs.system.io.MemoryStream;\n\t#elseif java\n\tvar b : java.io.ByteArrayOutputStream;\n\t#else\n\tvar b : Array<Int>;\n\t#end\n\n\t/** The length of the buffer in bytes. **/\n\tpublic var length(get,never) : Int;\n\n\tpublic function new() {\n\t\t#if neko\n\t\tb = untyped StringBuf.__make();\n\t\t#elseif flash\n\t\tb = new flash.utils.ByteArray();\n\t\tb.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t#elseif php\n\t\tb = \"\";\n\t\t#elseif cpp\n\t\tb = new BytesData();\n\t\t#elseif cs\n\t\tb = new cs.system.io.MemoryStream();\n\t\t#elseif java\n\t\tb = new java.io.ByteArrayOutputStream();\n\t\t#else\n\t\tb = new Array();\n\t\t#end\n\t}\n\n\tinline function get_length() : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__ssize( StringBuf.__to_string(b) );\n\t\t#elseif cs\n\t\treturn haxe.Int64.toInt( b.Length );\n\t\t#elseif java\n\t\treturn b.size();\n\t\t#else\n\t\treturn b.length;\n\t\t#end\n\t}\n\n\tpublic inline function addByte( byte : Int ) {\n\t\t#if neko\n\t\tuntyped StringBuf.__add_char(b,byte);\n\t\t#elseif flash\n\t\tb.writeByte(byte);\n\t\t#elseif php\n\t\tb += untyped __call__(\"chr\", byte);\n\t\t#elseif cpp\n\t\tb.push(untyped byte);\n\t\t#elseif cs\n\t\tb.WriteByte(cast byte);\n\t\t#elseif java\n\t\tb.write(byte);\n\t\t#else\n\t\tb.push(byte);\n\t\t#end\n\t}\n\n\tpublic inline function add( src : Bytes ) {\n\t\t#if neko\n\t\tuntyped StringBuf.__add(b,src.getData());\n\t\t#elseif flash\n\t\tb.writeBytes(src.getData());\n\t\t#elseif php\n\t\tb += cast src.getData();\n\t\t#elseif cs\n\t\tb.Write(src.getData(), 0, src.length);\n\t\t#elseif java\n\t\tb.write(src.getData(), 0, src.length);\n\t\t#elseif js\n\t\tvar b1 = b;\n\t\tvar b2 = @:privateAccess src.b;\n\t\tfor( i in 0...src.length )\n\t\t\tb.push(b2[i]);\n\t\t#else\n\t\tvar b1 = b;\n\t\tvar b2 = src.getData();\n\t\tfor( i in 0...src.length )\n\t\t\tb.push(b2[i]);\n\t\t#end\n\t}\n\n\tpublic inline function addString( v : String ) {\n\t\t#if neko\n\t\tuntyped StringBuf.__add(b, v.__s);\n\t\t#elseif flash\n\t\tb.writeUTFBytes(v);\n\t\t#else\n\t\tadd(Bytes.ofString(v));\n\t\t#end\n\t}\n\n\tpublic #if flash inline #end function addInt32( v : Int ) {\n\t\t#if flash\n\t\tb.writeUnsignedInt(v);\n\t\t#else\n\t\taddByte(v&0xFF);\n\t\taddByte((v>>8)&0xFF);\n\t\taddByte((v>>16)&0xFF);\n\t\taddByte(v>>>24);\n\t\t#end\n\t}\n\n\tpublic #if flash inline #end function addInt64( v : haxe.Int64 ) {\n\t\taddInt32(v.low);\n\t\taddInt32(v.high);\n\t}\n\n\tpublic inline function addFloat( v : Float ) {\n\t\t#if flash\n\t\tb.writeFloat(v);\n\t\t#else\n\t\taddInt32(FPHelper.floatToI32(v));\n\t\t#end\n\t}\n\n\tpublic inline function addDouble( v : Float ) {\n\t\t#if flash\n\t\tb.writeDouble(v);\n\t\t#else\n\t\taddInt64(FPHelper.doubleToI64(v));\n\t\t#end\n\t}\n\n\tpublic inline function addBytes( src : Bytes, pos : Int, len : Int ) {\n\t\t#if !neko\n\t\tif( pos < 0 || len < 0 || pos + len > src.length ) throw Error.OutsideBounds;\n\t\t#end\n\t\t#if neko\n\t\ttry untyped StringBuf.__add_sub(b,src.getData(),pos,len) catch( e : Dynamic ) throw Error.OutsideBounds;\n\t\t#elseif flash\n\t\tif( len > 0 ) b.writeBytes(src.getData(),pos,len);\n\t\t#elseif php\n\t\tb += untyped __call__(\"substr\", src.b, pos, len);\n\t\t#elseif cs\n\t\tb.Write(src.getData(), pos, len);\n\t\t#elseif java\n\t\tb.write(src.getData(), pos, len);\n\t\t#elseif js\n\t\tvar b1 = b;\n\t\tvar b2 = @:privateAccess src.b;\n\t\tfor( i in pos...pos+len )\n\t\t\tb.push(b2[i]);\n\t\t#else\n\t\tvar b1 = b;\n\t\tvar b2 = src.getData();\n\t\tfor( i in pos...pos+len )\n\t\t\tb.push(b2[i]);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns either a copy or a reference of the current bytes.\n\t\tOnce called, the buffer can no longer be used.\n\t**/\n\tpublic function getBytes() : Bytes untyped {\n\t\t#if neko\n\t\tvar str = StringBuf.__to_string(b);\n\t\tvar bytes = new Bytes(__dollar__ssize(str),str);\n\t\t#elseif flash\n\t\tvar bytes = new Bytes(b.length,b);\n\t\tb.position = 0;\n\t\t#elseif php\n\t\tvar bytes = new Bytes(b.length, cast b);\n\t\t#elseif cs\n\t\tvar buf = b.GetBuffer();\n\t\tvar bytes = new Bytes(cast b.Length, buf);\n\t\t#elseif java\n\t\tvar buf = b.toByteArray();\n\t\tvar bytes = new Bytes(buf.length, buf);\n\t\t#elseif python\n\t\tvar buf = new python.Bytearray(b);\n\t\tvar bytes = new Bytes(buf.length, buf);\n\t\t#elseif js\n\t\tvar bytes = new Bytes(new js.html.Uint8Array(b).buffer);\n\t\t#else\n\t\tvar bytes = new Bytes(b.length,b);\n\t\t#end\n\t\tb = null;\n\t\treturn bytes;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tAn Input is an abstract reader. See other classes in the `haxe.io` package\n\tfor several possible implementations.\n**/\nclass Input {\n\n\t/**\n\t\tEndianness (word byte order) used when reading numbers.\n\n\t\tIf `true`, big-endian is used, otherwise `little-endian` is used.\n\t**/\n\tpublic var bigEndian(default,set) : Bool;\n\n\t#if cs\n\tprivate var helper:BytesData;\n\t#elseif java\n\tprivate var helper:java.nio.ByteBuffer;\n\t#end\n\n\t/**\n\t\tRead and return one byte.\n\t**/\n\tpublic function readByte() : Int {\n\t#if cpp\n\t\tthrow \"Not implemented\";\n\t#else\n\t\treturn throw \"Not implemented\";\n\t#end\n\t}\n\n\t/**\n\t\tRead `len` bytes and write them into `s` to the position specified by `pos`.\n\n\t\tReturns the actual length of read data that can be smaller than `len`.\n\n\t\tSee `readFullBytes` that tries to read the exact amount of specified bytes.\n\t**/\n\tpublic function readBytes( s : Bytes, pos : Int, len : Int ) : Int {\n\t\tvar k = len;\n\t\tvar b = #if js @:privateAccess s.b #else s.getData() #end;\n\t\tif( pos < 0 || len < 0 || pos + len > s.length )\n\t\t\tthrow Error.OutsideBounds;\n\t\twhile( k > 0 ) {\n\t\t\t#if neko\n\t\t\t\tuntyped __dollar__sset(b,pos,readByte());\n\t\t\t#elseif php\n\t\t\t\tb[pos] = untyped __call__(\"chr\", readByte());\n\t\t\t#elseif cpp\n\t\t\t\tb[pos] = untyped readByte();\n\t\t\t#else\n\t\t\t\tb[pos] = cast readByte();\n\t\t\t#end\n\t\t\tpos++;\n\t\t\tk--;\n\t\t}\n\t\treturn len;\n\t}\n\n\t/**\n\t\tClose the input source.\n\n\t\tBehaviour while reading after calling this method is unspecified.\n\t**/\n\tpublic function close() : Void {\n\t}\n\n\tfunction set_bigEndian( b : Bool ) : Bool {\n\t\tbigEndian = b;\n\t\treturn b;\n\t}\n\n\t/* ------------------ API ------------------ */\n\n\t/**\n\t\tRead and return all available data.\n\n\t\tThe `bufsize` optional argument specifies the size of chunks by\n\t\twhich data is read. Its default value is target-specific.\n\t**/\n\tpublic function readAll( ?bufsize : Int ) : Bytes {\n\t\tif( bufsize == null )\n\t\t#if php\n\t\t\tbufsize = 8192; // default value for PHP and max under certain circumstances\n\t\t#else\n\t\t\tbufsize = (1 << 14); // 16 Ko\n\t\t#end\n\n\t\tvar buf = Bytes.alloc(bufsize);\n\t\tvar total = new haxe.io.BytesBuffer();\n\t\ttry {\n\t\t\twhile( true ) {\n\t\t\t\tvar len = readBytes(buf,0,bufsize);\n\t\t\t\tif( len == 0 )\n\t\t\t\t\tthrow Error.Blocked;\n\t\t\t\ttotal.addBytes(buf,0,len);\n\t\t\t}\n\t\t} catch( e : Eof ) {\n\t\t}\n\t\treturn total.getBytes();\n\t}\n\n\t/**\n\t\tRead `len` bytes and write them into `s` to the position specified by `pos`.\n\n\t\tUnlike `readBytes`, this method tries to read the exact `len` amount of bytes.\n\t**/\n\tpublic function readFullBytes( s : Bytes, pos : Int, len : Int ) : Void {\n\t\twhile( len > 0 ) {\n\t\t\tvar k = readBytes(s,pos,len);\n\t\t\tpos += k;\n\t\t\tlen -= k;\n\t\t}\n\t}\n\n\t/**\n\t\tRead and return `nbytes` bytes.\n\t**/\n\tpublic function read( nbytes : Int ) : Bytes {\n\t\tvar s = Bytes.alloc(nbytes);\n\t\tvar p = 0;\n\t\twhile( nbytes > 0 ) {\n\t\t\tvar k = readBytes(s,p,nbytes);\n\t\t\tif( k == 0 ) throw Error.Blocked;\n\t\t\tp += k;\n\t\t\tnbytes -= k;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tRead a string until a character code specified by `end` is occurred.\n\n\t\tThe final character is not included in the resulting string.\n\t**/\n\tpublic function readUntil( end : Int ) : String {\n\t\tvar buf = new StringBuf();\n\t\tvar last : Int;\n\t\twhile( (last = readByte()) != end )\n\t\t\tbuf.addChar( last );\n\t\treturn buf.toString();\n\t}\n\n\t/**\n\t\tRead a line of text separated by CR and/or LF bytes.\n\n\t\tThe CR/LF characters are not included in the resulting string.\n\t**/\n\tpublic function readLine() : String {\n\t\tvar buf = new StringBuf();\n\t\tvar last : Int;\n\t\tvar s;\n\t\ttry {\n\t\t\twhile( (last = readByte()) != 10 )\n\t\t\t\tbuf.addChar( last );\n\t\t\ts = buf.toString();\n\t\t\tif( s.charCodeAt(s.length-1) == 13 ) s = s.substr(0,-1);\n\t\t} catch( e : Eof ) {\n\t\t\ts = buf.toString();\n\t\t\tif( s.length == 0 )\n\t\t\t\t#if neko neko.Lib.rethrow #else throw #end (e);\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tRead a 32-bit floating point number.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic #if !(flash || python) inline #end function readFloat() : Float {\n\t\treturn FPHelper.i32ToFloat(readInt32());\n\t}\n\n\t/**\n\t\tRead a 64-bit double-precision floating point number.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function readDouble() : Float {\n\t\tvar i1 = readInt32();\n\t\tvar i2 = readInt32();\n\t\treturn bigEndian ? FPHelper.i64ToDouble(i2,i1) : FPHelper.i64ToDouble(i1,i2);\n\t}\n\n\t/**\n\t\tRead a 8-bit signed integer.\n\t**/\n\tpublic function readInt8() : Int {\n\t\tvar n = readByte();\n\t\tif( n >= 128 )\n\t\t\treturn n - 256;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tRead a 16-bit signed integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function readInt16() : Int {\n\t\tvar ch1 = readByte();\n\t\tvar ch2 = readByte();\n\t\tvar n = bigEndian ? ch2 | (ch1 << 8) : ch1 | (ch2 << 8);\n\t\tif( n & 0x8000 != 0 )\n\t\t\treturn n - 0x10000;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tRead a 16-bit unsigned integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function readUInt16() : Int {\n\t\tvar ch1 = readByte();\n\t\tvar ch2 = readByte();\n\t\treturn bigEndian ? ch2 | (ch1 << 8) : ch1 | (ch2 << 8);\n\t}\n\n\t/**\n\t\tRead a 24-bit signed integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function readInt24() : Int {\n\t\tvar ch1 = readByte();\n\t\tvar ch2 = readByte();\n\t\tvar ch3 = readByte();\n\t\tvar n = bigEndian ? ch3 | (ch2 << 8) | (ch1 << 16) : ch1 | (ch2 << 8) | (ch3 << 16);\n\t\tif( n & 0x800000 != 0 )\n\t\t\treturn n - 0x1000000;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tRead a 24-bit unsigned integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function readUInt24() : Int {\n\t\tvar ch1 = readByte();\n\t\tvar ch2 = readByte();\n\t\tvar ch3 = readByte();\n\t\treturn bigEndian ? ch3 | (ch2 << 8) | (ch1 << 16) : ch1 | (ch2 << 8) | (ch3 << 16);\n\t}\n\n\t/**\n\t\tRead a 32-bit signed integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function readInt32() : Int {\n\t\tvar ch1 = readByte();\n\t\tvar ch2 = readByte();\n\t\tvar ch3 = readByte();\n\t\tvar ch4 = readByte();\n#if (php || python)\n        // php will overflow integers.  Convert them back to signed 32-bit ints.\n        var n = bigEndian ? ch4 | (ch3 << 8) | (ch2 << 16) | (ch1 << 24) : ch1 | (ch2 << 8) | (ch3 << 16) | (ch4 << 24);\n        if (n & 0x80000000 != 0)\n            return ( n | 0x80000000);\n        else return n;\n#else\n\t\treturn bigEndian ? ch4 | (ch3 << 8) | (ch2 << 16) | (ch1 << 24) : ch1 | (ch2 << 8) | (ch3 << 16) | (ch4 << 24);\n#end\n\t}\n\n\t/**\n\t\tRead and `len` bytes as a string.\n\t**/\n\tpublic function readString( len : Int ) : String {\n\t\tvar b = Bytes.alloc(len);\n\t\treadFullBytes(b,0,len);\n\t\t#if neko\n\t\treturn neko.Lib.stringReference(b);\n\t\t#else\n\t\treturn b.toString();\n\t\t#end\n\t}\n\n#if neko\n\tstatic var _float_of_bytes = neko.Lib.load(\"std\",\"float_of_bytes\",2);\n\tstatic var _double_of_bytes = neko.Lib.load(\"std\",\"double_of_bytes\",2);\n\tstatic function __init__() untyped {\n\t\tInput.prototype.bigEndian = false;\n\t}\n#elseif cpp\n\tstatic var _float_of_bytes = cpp.Lib.load(\"std\",\"float_of_bytes\",2);\n\tstatic var _double_of_bytes = cpp.Lib.load(\"std\",\"double_of_bytes\",2);\n#end\n\n#if (flash || js || python)\n\tfunction getDoubleSig(bytes:Array<Int>)\n    {\n        return (((bytes[1]&0xF) << 16) | (bytes[2] << 8) | bytes[3] ) * 4294967296. +\n            (bytes[4] >> 7) * 2147483648 +\n            (((bytes[4]&0x7F) << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7]);\n    }\n#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\nclass BytesInput extends Input {\n\tvar b : #if js js.html.Uint8Array #else BytesData #end;\n\t#if !flash\n\tvar pos : Int;\n\tvar len : Int;\n\tvar totlen : Int;\n\t#end\n\n\t/** The current position in the stream in bytes. */\n\tpublic var position(get,set) : Int;\n\n\t/** The length of the stream in bytes. */\n\tpublic var length(get,never) : Int;\n\n\tpublic function new( b : Bytes, ?pos : Int, ?len : Int ) {\n\t\tif( pos == null ) pos = 0;\n\t\tif( len == null ) len = b.length - pos;\n\t\tif( pos < 0 || len < 0 || pos + len > b.length ) throw Error.OutsideBounds;\n\t\t#if flash\n\t\tvar ba = b.getData();\n\t\tba.position = pos;\n\t\tif( len != ba.bytesAvailable ) {\n\t\t\t// truncate\n\t\t\tthis.b = new flash.utils.ByteArray();\n\t\t\tba.readBytes(this.b,0,len);\n\t\t} else\n\t\t\tthis.b = ba;\n\t\tthis.b.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t#else\n\t\tthis.b = #if js @:privateAccess b.b #else b.getData() #end;\n\t\tthis.pos = pos;\n\t\tthis.len = len;\n\t\tthis.totlen = len;\n\t\t#end\n\t\t#if python\n\t\tbigEndian = false;\n\t\t#end\n\t}\n\n\tinline function get_position() : Int {\n\t\t#if flash\n\t\treturn b.position;\n\t\t#else\n\t\treturn pos;\n\t\t#end\n\t}\n\n\tinline function get_length() : Int {\n\t\t#if flash\n\t\treturn b.length;\n\t\t#else\n\t\treturn totlen;\n\t\t#end\n\t}\n\n\tfunction set_position( p : Int ) : Int {\n\t\tif( p < 0 ) p = 0;\n\t\telse if( p > length ) p = length;\n\t\t#if flash\n\t\treturn b.position = p;\n\t\t#else\n\t\tlen = totlen - p;\n\t\treturn pos = p;\n\t\t#end\n\t}\n\n\tpublic override function readByte() : Int {\n\t\t#if flash\n\t\t\treturn try b.readUnsignedByte() catch( e : Dynamic ) throw new Eof();\n\t\t#else\n\t\t\tif( this.len == 0 )\n\t\t\t\tthrow new Eof();\n\t\t\tlen--;\n\t\t\t#if neko\n\t\t\treturn untyped __dollar__sget(b,pos++);\n\t\t\t#elseif php\n\t\t\treturn untyped __call__(\"ord\", b[pos++]);\n\t\t\t#elseif cpp\n\t\t\treturn untyped b[pos++];\n\t\t\t#elseif java\n\t\t\treturn untyped b[pos++] & 0xFF;\n\t\t\t#else\n\t\t\treturn b[pos++];\n\t\t\t#end\n\t\t#end\n\t}\n\n\tpublic override function readBytes( buf : Bytes, pos, len ) : Int {\n\t\t#if !neko\n\t\t\tif( pos < 0 || len < 0 || pos + len > buf.length )\n\t\t\t\tthrow Error.OutsideBounds;\n\t\t#end\n\t\t#if flash\n\t\t\tvar avail : Int = b.bytesAvailable;\n\t\t\tif( len > avail && avail > 0 ) len = avail;\n\t\t\ttry b.readBytes(buf.getData(),pos,len) catch( e : Dynamic ) throw new Eof();\n\t\t#elseif java\n\t\t\tvar avail : Int = this.len;\n\t\t\tif ( len > avail ) len = avail;\n\t\t\tif (len == 0)\n\t\t\t\tthrow new Eof();\n\t\t\tjava.lang.System.arraycopy(this.b, this.pos, buf.getData(), pos, len);\n\t\t\tthis.pos += len;\n\t\t\tthis.len -= len;\n\t\t#elseif cs\n\t\t\tvar avail : Int = this.len;\n\t\t\tif ( len > avail ) len = avail;\n\t\t\tif (len == 0)\n\t\t\t\tthrow new Eof();\n\t\t\tcs.system.Array.Copy(this.b,this.pos, buf.getData(), pos, len);\n\t\t\tthis.pos += len;\n\t\t\tthis.len -= len;\n\t\t#else\n\t\t\tif( this.len == 0 && len > 0 )\n\t\t\t\tthrow new Eof();\n\t\t\tif( this.len < len )\n\t\t\t\tlen = this.len;\n\t\t\t#if neko\n\t\t\ttry untyped __dollar__sblit(buf.getData(),pos,b,this.pos,len) catch( e : Dynamic ) throw Error.OutsideBounds;\n\t\t\t#elseif php\n\t\t\tuntyped __php__(\"$buf->b = substr($buf->b, 0, $pos) . substr($this->b, $this->pos, $len) . substr($buf->b, $pos+$len)\");\n\t\t\t#else\n\t\t\tvar b1 = b;\n\t\t\tvar b2 = #if js @:privateAccess buf.b #else buf.getData() #end;\n\t\t\tfor( i in 0...len )\n\t\t\t\tb2[pos+i] = b1[this.pos+i];\n\t\t\t#end\n\t\t\tthis.pos += len;\n\t\t\tthis.len -= len;\n\t\t#end\n\t\treturn len;\n\t}\n\n\t#if flash\n\t@:dox(hide)\n\toverride function set_bigEndian(e) {\n\t\tbigEndian = e;\n\t\tb.endian = e ? flash.utils.Endian.BIG_ENDIAN : flash.utils.Endian.LITTLE_ENDIAN;\n\t\treturn e;\n\t}\n\n\t@:dox(hide)\n\toverride function readFloat() {\n\t\treturn try b.readFloat() catch( e : Dynamic ) throw new Eof();\n\t}\n\n\t@:dox(hide)\n\toverride function readDouble() {\n\t\treturn try b.readDouble() catch( e : Dynamic ) throw new Eof();\n\t}\n\n\t@:dox(hide)\n\toverride function readInt8() {\n\t\treturn try b.readByte() catch( e : Dynamic ) throw new Eof();\n\t}\n\n\t@:dox(hide)\n\toverride function readInt16() {\n\t\treturn try b.readShort() catch( e : Dynamic ) throw new Eof();\n\t}\n\n\t@:dox(hide)\n\toverride function readUInt16() : Int {\n\t\treturn try b.readUnsignedShort() catch( e : Dynamic ) throw new Eof();\n\t}\n\n\t@:dox(hide)\n\toverride function readInt32() : Int {\n\t\treturn try b.readInt() catch( e : Dynamic ) throw new Eof();\n\t}\n\n\t@:dox(hide)\n\toverride function readString( len : Int ) {\n\t\treturn try b.readUTFBytes(len) catch( e : Dynamic ) throw new Eof();\n\t}\n\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tAn Output is an abstract write. A specific output implementation will only\n\thave to override the [writeByte] and maybe the [write], [flush] and [close]\n\tmethods. See [File.write] and [String.write] for two ways of creating an\n\tOutput.\n**/\nclass Output {\n\n\t/**\n\t\tEndianness (word byte order) used when writing numbers.\n\n\t\tIf `true`, big-endian is used, otherwise `little-endian` is used.\n\t**/\n\tpublic var bigEndian(default, set) : Bool;\n\n\t#if java\n\tprivate var helper:java.nio.ByteBuffer;\n\t#end\n\n\t/**\n\t\tWrite one byte.\n\t**/\n\tpublic function writeByte( c : Int ) : Void {\n\t\tthrow \"Not implemented\";\n\t}\n\n\t/**\n\t\tWrite `len` bytes from `s` starting by position specified by `pos`.\n\n\t\tReturns the actual length of written data that can differ from `len`.\n\n\t\tSee `writeFullBytes` that tries to write the exact amount of specified bytes.\n\t**/\n\tpublic function writeBytes( s : Bytes, pos : Int, len : Int ) : Int {\n\t\tvar k = len;\n\t\tvar b = s.getData();\n\t\t#if !neko\n\t\tif( pos < 0 || len < 0 || pos + len > s.length )\n\t\t\tthrow Error.OutsideBounds;\n\t\t#end\n\t\twhile( k > 0 ) {\n\t\t\t#if neko\n\t\t\t\twriteByte(untyped __dollar__sget(b,pos));\n\t\t\t#elseif php\n\t\t\t\twriteByte(untyped __call__(\"ord\", b[pos]));\n\t\t\t#elseif cpp\n\t\t\t\twriteByte(untyped b[pos]);\n\t\t\t#else\n\t\t\t\twriteByte(untyped b[pos]);\n\t\t\t#end\n\t\t\tpos++;\n\t\t\tk--;\n\t\t}\n\t\treturn len;\n\t}\n\n\t/**\n\t\tFlush any buffered data.\n\t**/\n\tpublic function flush() {\n\t}\n\n\t/**\n\t\tClose the output.\n\n\t\tBehaviour while writing after calling this method is unspecified.\n\t**/\n\tpublic function close() {\n\t}\n\n\tfunction set_bigEndian( b ) {\n\t\tbigEndian = b;\n\t\treturn b;\n\t}\n\n\t/* ------------------ API ------------------ */\n\n\t/**\n\t\tWrite all bytes stored in `s`.\n\t**/\n\tpublic function write( s : Bytes ) : Void {\n\t\tvar l = s.length;\n\t\tvar p = 0;\n\t\twhile( l > 0 ) {\n\t\t\tvar k = writeBytes(s,p,l);\n\t\t\tif( k == 0 ) throw Error.Blocked;\n\t\t\tp += k;\n\t\t\tl -= k;\n\t\t}\n\t}\n\n\t/**\n\t\tWrite `len` bytes from `s` starting by position specified by `pos`.\n\n\t\tUnlike `writeBytes`, this method tries to write the exact `len` amount of bytes.\n\t**/\n\tpublic function writeFullBytes( s : Bytes, pos : Int, len : Int ) {\n\t\twhile( len > 0 ) {\n\t\t\tvar k = writeBytes(s,pos,len);\n\t\t\tpos += k;\n\t\t\tlen -= k;\n\t\t}\n\t}\n\n\t/**\n\t\tWrite `x` as 32-bit floating point number.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic #if !(flash || python) inline #end function writeFloat( x : Float ) {\n\t\twriteInt32(FPHelper.floatToI32(x));\n\t}\n\n\t/**\n\t\tWrite `x` as 64-bit double-precision floating point number.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function writeDouble( x : Float ) {\n\t\tvar i64 = FPHelper.doubleToI64(x);\n\t\tif( bigEndian ) {\n\t\t\twriteInt32(i64.high);\n\t\t\twriteInt32(i64.low);\n\t\t} else {\n\t\t\twriteInt32(i64.low);\n\t\t\twriteInt32(i64.high);\n\t\t}\n\t}\n\n\t/**\n\t\tWrite `x` as 8-bit signed integer.\n\t**/\n\tpublic function writeInt8( x : Int ) {\n\t\tif( x < -0x80 || x >= 0x80 )\n\t\t\tthrow Error.Overflow;\n\t\twriteByte(x & 0xFF);\n\t}\n\n\t/**\n\t\tWrite `x` as 16-bit signed integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function writeInt16( x : Int ) {\n\t\tif( x < -0x8000 || x >= 0x8000 ) throw Error.Overflow;\n\t\twriteUInt16(x & 0xFFFF);\n\t}\n\n\t/**\n\t\tWrite `x` as 16-bit unsigned integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function writeUInt16( x : Int ) {\n\t\tif( x < 0 || x >= 0x10000 ) throw Error.Overflow;\n\t\tif( bigEndian ) {\n\t\t\twriteByte(x >> 8);\n\t\t\twriteByte(x & 0xFF);\n\t\t} else {\n\t\t\twriteByte(x & 0xFF);\n\t\t\twriteByte(x >> 8);\n\t\t}\n\t}\n\n\t/**\n\t\tWrite `x` as 24-bit signed integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function writeInt24( x : Int ) {\n\t\tif( x < -0x800000 || x >= 0x800000 ) throw Error.Overflow;\n\t\twriteUInt24(x & 0xFFFFFF);\n\t}\n\n\t/**\n\t\tWrite `x` as 24-bit unsigned integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function writeUInt24( x : Int ) {\n\t\tif( x < 0 || x >= 0x1000000 ) throw Error.Overflow;\n\t\tif( bigEndian ) {\n\t\t\twriteByte(x >> 16);\n\t\t\twriteByte((x >> 8) & 0xFF);\n\t\t\twriteByte(x & 0xFF);\n\t\t} else {\n\t\t\twriteByte(x & 0xFF);\n\t\t\twriteByte((x >> 8) & 0xFF);\n\t\t\twriteByte(x >> 16);\n\t\t}\n\t}\n\n\t/**\n\t\tWrite `x` as 32-bit signed integer.\n\n\t\tEndianness is specified by the `bigEndian` property.\n\t**/\n\tpublic function writeInt32( x : Int ) {\n\t\tif( bigEndian ) {\n\t\t\twriteByte( x >>> 24 );\n\t\t\twriteByte( (x >> 16) & 0xFF );\n\t\t\twriteByte( (x >> 8) & 0xFF );\n\t\t\twriteByte( x & 0xFF );\n\t\t} else {\n\t\t\twriteByte( x & 0xFF );\n\t\t\twriteByte( (x >> 8) & 0xFF );\n\t\t\twriteByte( (x >> 16) & 0xFF );\n\t\t\twriteByte( x >>> 24 );\n\t\t}\n\t}\n\n\t/**\n\t\tInform that we are about to write at least `nbytes` bytes.\n\n\t\tThe underlying implementation can allocate proper working space depending\n\t\ton this information, or simply ignore it. This is not a mandatory call\n\t\tbut a tip and is only used in some specific cases.\n\t**/\n\tpublic function prepare( nbytes : Int ) {\n\t}\n\n\t/**\n\t\tRead all available data from `i` and write it.\n\n\t\tThe `bufsize` optional argument specifies the size of chunks by\n\t\twhich data is read and written. Its default value is 4096.\n\t**/\n\tpublic function writeInput( i : Input, ?bufsize : Int ) {\n\t\tif( bufsize == null )\n\t\t\tbufsize = 4096;\n\t\tvar buf = Bytes.alloc(bufsize);\n\t\ttry {\n\t\t\twhile( true ) {\n\t\t\t\tvar len = i.readBytes(buf,0,bufsize);\n\t\t\t\tif( len == 0 )\n\t\t\t\t\tthrow Error.Blocked;\n\t\t\t\tvar p = 0;\n\t\t\t\twhile( len > 0 ) {\n\t\t\t\t\tvar k = writeBytes(buf,p,len);\n\t\t\t\t\tif( k == 0 )\n\t\t\t\t\t\tthrow Error.Blocked;\n\t\t\t\t\tp += k;\n\t\t\t\t\tlen -= k;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch( e : Eof ) {\n\t\t}\n\t}\n\n\t/**\n\t\tWrite `s` string.\n\t**/\n\tpublic function writeString( s : String ) {\n\t\t#if neko\n\t\tvar b = untyped new Bytes(s.length,s.__s);\n\t\t#else\n\t\tvar b = Bytes.ofString(s);\n\t\t#end\n\t\twriteFullBytes(b,0,b.length);\n\t}\n\n#if neko\n\tstatic function __init__() untyped {\n\t\tOutput.prototype.bigEndian = false;\n\t}\n#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\nclass BytesOutput extends Output {\n\n\t#if flash\n\tvar b : flash.utils.ByteArray;\n\t#else\n\tvar b : BytesBuffer;\n\t#end\n\n\t/** The length of the stream in bytes. **/\n\tpublic var length(get,never) : Int;\n\n\tpublic function new() {\n\t\t#if flash\n\t\tb = new flash.utils.ByteArray();\n\t\tb.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t#else\n\t\tb = new BytesBuffer();\n\t\t#end\n\t\t#if python\n\t\tbigEndian = false;\n\t\t#end\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\toverride function writeByte(c) {\n\t\t#if flash\n\t\tb.writeByte(c);\n\t\t#else\n\t\tb.addByte(c);\n\t\t#end\n\t}\n\n\toverride function writeBytes( buf : Bytes, pos, len ) : Int {\n\t\t#if flash\n\t\tif( pos < 0 || len < 0 || pos + len > buf.length ) throw Error.OutsideBounds;\n\t\tb.writeBytes(buf.getData(),pos,len);\n\t\t#else\n\t\tb.addBytes(buf,pos,len);\n\t\t#end\n\t\treturn len;\n\t}\n\n\t#if flash\n\t// optimized operations\n\n\t@:dox(hide)\n\toverride function set_bigEndian(e) {\n\t\tbigEndian = e;\n\t\tb.endian = e ? flash.utils.Endian.BIG_ENDIAN : flash.utils.Endian.LITTLE_ENDIAN;\n\t\treturn e;\n\t}\n\n\t@:dox(hide)\n\toverride function writeFloat( f : Float ) {\n\t\tb.writeFloat(f);\n\t}\n\n\t@:dox(hide)\n\toverride function writeDouble( f : Float ) {\n\t\tb.writeDouble(f);\n\t}\n\n\t@:dox(hide)\n\toverride function writeInt8( x : Int ) {\n\t\tif( x < -0x80 || x >= 0x80 )\n\t\t\tthrow Error.Overflow;\n\t\tb.writeByte(x);\n\t}\n\n\t@:dox(hide)\n\toverride function writeInt16( x : Int ) {\n\t\tif( x < -0x8000 || x >= 0x8000 ) throw Error.Overflow;\n\t\tb.writeShort(x);\n\t}\n\n\t@:dox(hide)\n\toverride function writeUInt16( x : Int ) {\n\t\tif( x < 0 || x >= 0x10000 ) throw Error.Overflow;\n\t\tb.writeShort(x);\n\t}\n\n\t@:dox(hide)\n\toverride function writeInt32( x : Int ) {\n\t\tb.writeInt(x);\n\t}\n\n\t@:dox(hide)\n\toverride function prepare( size : Int ) {\n\t\tif( size > 0 ) b[size-1] = b[size-1];\n\t}\n\n\t@:dox(hide)\n\toverride function writeString( s : String ) {\n\t\tb.writeUTFBytes(s);\n\t}\n\n\t#end\n\n\tpublic function getBytes() : Bytes {\n\t\t#if flash\n\t\tvar bytes = b;\n\t\tb = null;\n\t\treturn untyped new Bytes(bytes.length,bytes);\n\t\t#else\n\t\treturn b.getBytes();\n\t\t#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tThis exception is raised when reading while data is no longer available in the [Input].\n**/\nclass Eof {\n\tpublic function new() {\n\t}\n\t@:keep function toString() {\n\t\treturn \"Eof\";\n\t}\n}\n","/*\n * Copyright (C)2005-2015 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tHelper that converts between floating point and binary representation.\n\tAlways works in low-endian encoding.\n**/\nclass FPHelper {\n\n\t#if neko_v21\n\t// stored in helper\n\t#elseif neko\n\tstatic var i64tmp = new neko.vm.Tls<Int64>();\n\t#elseif !(java || cs)\n\tstatic var i64tmp = Int64.ofInt(0);\n\t#end\n\n\t#if neko\n\t\t#if neko_v21\n\t\tstatic var helpers = new neko.vm.Tls<neko.NativeArray<Dynamic>>();\n\t\t#else\n\t\tstatic var helperf = new neko.vm.Tls<neko.NativeString>();\n\t\tstatic var helperd = new neko.vm.Tls<neko.NativeString>();\n\t\tstatic var _float_of_bytes = neko.Lib.load(\"std\",\"float_of_bytes\",2);\n\t\tstatic var _double_of_bytes = neko.Lib.load(\"std\",\"double_of_bytes\",2);\n\t\tstatic var _float_bytes = neko.Lib.load(\"std\",\"float_bytes\",2);\n\t\tstatic var _double_bytes = neko.Lib.load(\"std\",\"double_bytes\",2);\n\t\t#end\n\t#elseif flash\n\t\tstatic var helper = {\n\t\t\tvar b = new flash.utils.ByteArray();\n\t\t\tb.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\tb;\n\t\t}\n\t#elseif php\n\t\tstatic var isLittleEndian : Bool = untyped __call__('unpack','S','\\x01\\x00')[1] == 1;\n\t#else\n\t\tstatic inline var LN2 = 0.6931471805599453; // Math.log(2)\n\t#end\n\n\t#if neko_v21 inline #end\n\tpublic static function i32ToFloat( i : Int ) : Float {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\treturn untyped $itof(i,false);\n\t\t\t#else\n\t\t\tvar helper = helperf.value;\n\t\t\tif( helper == null )\n\t\t\t\thelperf.value = helper = neko.NativeString.alloc(4);\n\t\t\tuntyped $sset(helper,0,i&0xFF);\n\t\t\tuntyped $sset(helper,1,(i>>8)&0xFF);\n\t\t\tuntyped $sset(helper,2,(i>>16)&0xFF);\n\t\t\tuntyped $sset(helper,3,i>>>24);\n\t\t\treturn _float_of_bytes(helper,false);\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__hxcpp_reinterpret_le_int32_as_float32(i);\n\t\t#elseif cs\n\t\t\tvar helper = new SingleHelper(0);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\thelper.i = i;\n\t\t\t} else {\n\t\t\t\thelper.i = ((i >>> 24) & 0xFF) | (((i >> 16) & 0xFF) << 8) | (((i >> 8) & 0xFF) << 16) | ((i & 0xFF) << 24);\n\t\t\t}\n\n\t\t\treturn helper.f;\n\t\t#elseif java\n\t\t\treturn java.lang.Float.FloatClass.intBitsToFloat(i);\n\t\t#elseif php\n\t\t\treturn untyped  __call__('unpack', 'f', __call__('pack', 'l', i))[1];\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeUnsignedInt(i);\n\t\t\thelper.position = 0;\n\t\t\treturn helper.readFloat();\n\t\t#else\n\t\t\tvar sign = 1 - ((i >>> 31) << 1);\n\t\t\tvar exp = (i >>> 23) & 0xFF;\n\t\t\tvar sig = i & 0x7FFFFF;\n\t\t\tif( sig == 0 && exp == 0 )\n\t\t\t\treturn 0.0;\n\t\t\treturn sign*(1 + Math.pow(2, -23)*sig) * Math.pow(2, exp-127);\n\t\t#end\n\t}\n\n\t#if neko_v21 inline #end\n\tpublic static function floatToI32( f : Float ) : Int {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\treturn untyped $ftoi(f,false);\n\t\t\t#else\n\t\t\tvar r = _float_bytes(f,false);\n\t\t\treturn untyped $sget(r,0) | ($sget(r,1)<<8) | ($sget(r,2)<<16) | ($sget(r,3)<<24);\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__hxcpp_reinterpret_float32_as_le_int32(f);\n\t\t#elseif cs\n\t\t\tvar helper = new SingleHelper(f);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\treturn helper.i;\n\t\t\t} else {\n\t\t\t\tvar i = helper.i;\n\t\t\t\treturn ((i >>> 24) & 0xFF) | (((i >> 16) & 0xFF) << 8) | (((i >> 8) & 0xFF) << 16) | ((i & 0xFF) << 24);\n\t\t\t}\n\t\t#elseif java\n\t\t\treturn java.lang.Float.FloatClass.floatToRawIntBits(f);\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeFloat(f);\n\t\t\thelper.position = 0;\n\t\t\treturn helper.readUnsignedInt();\n\t\t#elseif php\n\t\t\treturn untyped __call__('unpack','l',__call__('pack', 'f', f))[1];\n\t\t#else\n\t\t\tif( f == 0 ) return 0;\n\t\t\tvar af = f < 0 ? -f : f;\n\t\t\tvar exp = Math.floor(Math.log(af) / LN2);\n\t\t\tif( exp < -127 ) exp = -127 else if( exp > 128 ) exp = 128;\n\t\t\tvar sig = Math.round((af / Math.pow(2, exp) - 1) * 0x800000) & 0x7FFFFF;\n\t\t\treturn (f < 0 ? 0x80000000 : 0) | ((exp + 127) << 23) | sig;\n\t\t#end\n\t}\n\n\t#if neko_v21 inline #end\n\tpublic static function i64ToDouble( low : Int, high : Int ) : Float {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\treturn untyped $itod(low,high,false);\n\t\t\t#else\n\t\t\tvar helper = helperd.value;\n\t\t\tif( helper == null )\n\t\t\t\thelperd.value = helper = neko.NativeString.alloc(8);\n\t\t\tuntyped $sset(helper,0,low&0xFF);\n\t\t\tuntyped $sset(helper,1,(low>>8)&0xFF);\n\t\t\tuntyped $sset(helper,2,(low>>16)&0xFF);\n\t\t\tuntyped $sset(helper,3,low>>>24);\n\t\t\tuntyped $sset(helper,4,high&0xFF);\n\t\t\tuntyped $sset(helper,5,(high>>8)&0xFF);\n\t\t\tuntyped $sset(helper,6,(high>>16)&0xFF);\n\t\t\tuntyped $sset(helper,7,high>>>24);\n\t\t\treturn _double_of_bytes(helper,false);\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__hxcpp_reinterpret_le_int32s_as_float64(low,high);\n\t\t#elseif cs\n\t\t\tvar helper = new FloatHelper(0);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\thelper.i = haxe.Int64.make(high,low);\n\t\t\t} else {\n\t\t\t\tvar i1 = high,\n\t\t\t\t    i2 = low;\n\t\t\t\tvar j2 = ((i1 >>> 24) & 0xFF) | (((i1 >> 16) & 0xFF) << 8) | (((i1 >> 8) & 0xFF) << 16) | ((i1 & 0xFF) << 24);\n\t\t\t\tvar j1 = ((i2 >>> 24) & 0xFF) | (((i2 >> 16) & 0xFF) << 8) | (((i2 >> 8) & 0xFF) << 16) | ((i2 & 0xFF) << 24);\n\t\t\t\thelper.i = haxe.Int64.make(j1,j2);\n\t\t\t}\n\t\t\treturn helper.f;\n\t\t#elseif java\n\t\t\treturn java.lang.Double.DoubleClass.longBitsToDouble( Int64.make(high,low) );\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeUnsignedInt(low);\n\t\t\thelper.writeUnsignedInt(high);\n\t\t\thelper.position = 0;\n\t\t\treturn helper.readDouble();\n\t\t#elseif php\n\t\t\treturn untyped  __call__('unpack', 'd', __call__('pack', 'ii', isLittleEndian ? low : high, isLittleEndian ? high : low))[1];\n\t\t#else\n\t\t\tvar sign = 1 - ((high >>> 31) << 1);\n\t\t\tvar exp = ((high >> 20) & 0x7FF) - 1023;\n\t\t\tvar sig = (high&0xFFFFF) * 4294967296. + (low>>>31) * 2147483648. + (low&0x7FFFFFFF);\n\t\t\tif( sig == 0 && exp == -1023 )\n\t\t\t\treturn 0.0;\n\t\t\treturn sign*(1.0 + Math.pow(2, -52)*sig) * Math.pow(2, exp);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns an Int64 representing the bytes representation of the double precision IEEE float value.\n\t\tWARNING : for performance reason, the same Int64 value might be reused every time. Copy its low/high values before calling again.\n\t\tWe still ensure that this is safe to use in a multithread environment\n\t**/\n\tpublic static function doubleToI64( v : Float ) : Int64 {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\tvar helper = helpers.value;\n\t\t\tif( helper == null ) {\n\t\t\t\thelpers.value = helper = neko.NativeArray.alloc(2);\n\t\t\t\thelper[0] = neko.NativeArray.alloc(2);\n\t\t\t\thelper[1] = haxe.Int64.ofInt(0);\n\t\t\t}\n\t\t\tvar i64 : haxe.Int64 = helper[1], int2 = helper[0];\n\t\t\tuntyped $dtoi(v,int2,false);\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(int2[0]);\n\t\t\t\ti64.set_high(int2[1]);\n\t\t\t}\n\t\t\treturn i64;\n\t\t\t#else\n\t\t\tvar r = _double_bytes(v,false), i64 = i64tmp.value;\n\t\t\tif( i64 == null )\n\t\t\t\ti64 = i64tmp.value = haxe.Int64.ofInt(0);\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(untyped $sget(r,0) | ($sget(r,1)<<8) | ($sget(r,2)<<16) | ($sget(r,3)<<24));\n\t\t\t\ti64.set_high(untyped $sget(r,4) | ($sget(r,5)<<8) | ($sget(r,6)<<16) | ($sget(r,7)<<24));\n\t\t\t}\n\t\t\treturn i64;\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn Int64.make(untyped __global__.__hxcpp_reinterpret_float64_as_le_int32_high(v),\n\t\t\t\t               untyped __global__.__hxcpp_reinterpret_float64_as_le_int32_low(v) );\n\t\t#elseif java\n\t\t\treturn java.lang.Double.DoubleClass.doubleToRawLongBits(v);\n\t\t#elseif cs\n\t\t\tvar helper = new FloatHelper(v);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\treturn helper.i;\n\t\t\t} else {\n\t\t\t\tvar i = helper.i;\n\t\t\t\tvar i1 = haxe.Int64.getHigh(i),\n\t\t\t\t    i2 = haxe.Int64.getLow(i);\n\t\t\t\tvar j2 = ((i1 >>> 24) & 0xFF) | (((i1 >> 16) & 0xFF) << 8) | (((i1 >> 8) & 0xFF) << 16) | ((i1 & 0xFF) << 24);\n\t\t\t\tvar j1 = ((i2 >>> 24) & 0xFF) | (((i2 >> 16) & 0xFF) << 8) | (((i2 >> 8) & 0xFF) << 16) | ((i2 & 0xFF) << 24);\n\n\t\t\t\treturn haxe.Int64.make(j1,j2);\n\t\t\t}\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeDouble(v);\n\t\t\thelper.position = 0;\n\t\t\tvar i64 = i64tmp;\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(cast helper.readUnsignedInt());\n\t\t\t\ti64.set_high(cast helper.readUnsignedInt());\n\t\t\t}\n\t\t\treturn i64;\n\t\t#elseif php\n\t\t\tvar a = untyped __call__('unpack',isLittleEndian ? 'V2' : 'N2',__call__('pack', 'd', v));\n\t\t\tvar i64 = i64tmp;\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(a[isLittleEndian ? 1 : 2]);\n\t\t\t\ti64.set_high(a[isLittleEndian ? 2 : 1]);\n\t\t\t}\n\t\t\treturn i64;\n\t\t#else\n\t\t\tvar i64 = i64tmp;\n\t\t\tif( v == 0 ) {\n\t\t\t\t@:privateAccess {\n\t\t\t\t\ti64.set_low(0);\n\t\t\t\t\ti64.set_high(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar av = v < 0 ? -v : v;\n\t\t\t\tvar exp = Math.floor(Math.log(av) / LN2);\n\t\t\t\tvar sig = Math.fround(((av / Math.pow(2, exp)) - 1) * 4503599627370496.); // 2^52\n\t\t\t\tvar sig_l = Std.int(sig);\n\t\t\t\tvar sig_h = Std.int(sig / 4294967296.0);\n\t\t\t\t@:privateAccess {\n\t\t\t\t\ti64.set_low(sig_l);\n\t\t\t\t\ti64.set_high((v < 0 ? 0x80000000 : 0) | ((exp + 1023) << 20) | sig_h);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn i64;\n\t\t#end\n\t}\n\n}\n\n#if cs\n@:meta(System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Explicit))\n@:nativeGen @:struct private class SingleHelper\n{\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var i:Int;\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var f:Single;\n\n\tpublic function new(f:Single)\n\t{\n\t\tthis.i = 0;\n\t\tthis.f = f;\n\t}\n}\n\n@:meta(System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Explicit))\n@:nativeGen @:struct private class FloatHelper\n{\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var i:haxe.Int64;\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var f:Float;\n\n\tpublic function new(f:Float)\n\t{\n\t\tthis.i = haxe.Int64.ofInt(0);\n\t\tthis.f = f;\n\t}\n}\n\n#end\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tThis class provides a convenient way of working with paths. It supports the\n\tcommon path formats:\n\n\t- directory1/directory2/filename.extension\n\t- directory1\\directory2\\filename.excention\n**/\nclass Path {\n\n\t/**\n\t\tThe directory.\n\n\t\tThis is the leading part of the path that is not part of the file name\n\t\tand the extension.\n\n\t\tDoes not end with a `/` or `\\` separator.\n\n\t\tIf the path has no directory, the value is null.\n\t**/\n\tpublic var dir : String;\n\n\t/**\n\t\tThe file name.\n\n\t\tThis is the part of the part between the directory and the extension.\n\n\t\tIf there is no file name, e.g. for \".htaccess\" or \"/dir/\", the value\n\t\tis the empty String \"\".\n\t**/\n\tpublic var file : String;\n\n\t/**\n\t\tThe file extension.\n\n\t\tIt is separated from the file name by a dot. This dot is not part of\n\t\tthe extension.\n\n\t\tIf the path has no extension, the value is null.\n\t**/\n\tpublic var ext : String;\n\n\t/**\n\t\tTrue if the last directory separator is a backslash, false otherwise.\n\t**/\n\tpublic var backslash : Bool;\n\n\t/**\n\t\tCreates a new Path instance by parsing `path`.\n\n\t\tPath information can be retrieved by accessing the dir, file and ext\n\t\tproperties.\n\t**/\n\tpublic function new( path : String ) {\n\t\tswitch (path) {\n\t\t\tcase \".\" | \"..\":\n\t\t\t\tdir = path;\n\t\t\t\tfile = \"\";\n\t\t\t\treturn;\n\t\t}\n\t\tvar c1 = path.lastIndexOf(\"/\");\n\t\tvar c2 = path.lastIndexOf(\"\\\\\");\n\t\tif( c1 < c2 ) {\n\t\t\tdir = path.substr(0,c2);\n\t\t\tpath = path.substr(c2+1);\n\t\t\tbackslash = true;\n\t\t} else if( c2 < c1 ) {\n\t\t\tdir = path.substr(0,c1);\n\t\t\tpath = path.substr(c1+1);\n\t\t} else\n\t\t\tdir = null;\n\t\tvar cp = path.lastIndexOf(\".\");\n\t\tif( cp != -1 ) {\n\t\t\text = path.substr(cp+1);\n\t\t\tfile = path.substr(0,cp);\n\t\t} else {\n\t\t\text = null;\n\t\t\tfile = path;\n\t\t}\n\t}\n\n\t/**\n\t\tReturns a String representation of `this` path.\n\n\t\tIf `this.backslash` is true, backslash is used as directory separator,\n\t\totherwise slash is used. This only affects the separator between\n\t\t`this.dir` and `this.file`.\n\n\t\tIf `this.directory` or `this.extension` is null, their representation\n\t\tis the empty String \"\".\n\t**/\n\tpublic function toString() {\n\t\treturn (if( dir == null ) \"\" else dir + if( backslash ) \"\\\\\" else \"/\") + file + (if( ext == null ) \"\" else \".\" + ext);\n\t}\n\n\t/**\n\t\tReturns the String representation of `path` without the file extension.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function withoutExtension( path : String ) {\n\t\tvar s = new Path(path);\n\t\ts.ext = null;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns the String representation of `path` without the directory.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function withoutDirectory( path ) {\n\t\tvar s = new Path(path);\n\t\ts.dir = null;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns the directory of `path`.\n\n\t\tIf the directory is null, the empty String \"\" is returned.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function directory( path ) {\n\t\tvar s = new Path(path);\n\t\tif( s.dir == null )\n\t\t\treturn \"\";\n\t\treturn s.dir;\n\t}\n\n\t/**\n\t\tReturns the extension of `path`.\n\n\t\tIf the extension is null, the empty String \"\" is returned.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function extension( path ) {\n\t\tvar s = new Path(path);\n\t\tif( s.ext == null )\n\t\t\treturn \"\";\n\t\treturn s.ext;\n\t}\n\n\t/**\n\t\tReturns a String representation of `path` where the extension is `ext`.\n\n\t\tIf `path` has no extension, `ext` is added as extension.\n\n\t\tIf `path` or `ext` are null, the result is unspecified.\n\t**/\n\tpublic static function withExtension( path, ext ) {\n\t\tvar s = new Path(path);\n\t\ts.ext = ext;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tJoins all paths in `paths` together.\n\n\t\tIf `paths` is empty, the empty String `\"\"` is returned. Otherwise the\n\t\tpaths are joined with a slash between them.\n\n\t\tIf `paths` is null, the result is unspecified.\n\t**/\n\tpublic static function join(paths:Array<String>) : String {\n\t\tvar paths = paths.filter(function(s) return s != null && s != \"\");\n\t\tif (paths.length == 0) {\n\t\t\treturn \"\";\n\t\t}\n\t\tvar path = paths[0];\n\t\tfor (i in 1...paths.length) {\n\t\t\tpath = addTrailingSlash(path);\n\t\t\tpath += paths[i];\n\t\t}\n\t\treturn normalize(path);\n\t}\n\n\t/**\n\t\tNormalize a given `path` (e.g. make '/usr/local/../lib' to '/usr/lib').\n\n\t\tAlso replaces backslashes \\ with slashes / and afterwards turns\n\t\tmultiple slashes into a single one.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function normalize(path : String) : String {\n\t\tvar slash = '/';\n\t\tpath = path.split(\"\\\\\").join(\"/\");\n\t\tif( path == null || path == slash ) {\n\t\t\treturn slash;\n\t\t}\n\n\t\tvar target = [];\n\n\t\tfor( token in path.split(slash) ) {\n\t\t\tif(token == '..' && target.length > 0 && target[target.length-1] != \"..\") {\n\t\t\t\ttarget.pop();\n\t\t\t} else if(token != '.') {\n\t\t\t\ttarget.push(token);\n\t\t\t}\n\t\t}\n\n\t\tvar tmp = target.join(slash);\n\t\tvar regex = ~/([^:])\\/+/g;\n\t\tvar result = regex.replace(tmp, \"$1\" +slash);\n\t\tvar acc = new StringBuf();\n\t\tvar colon = false;\n\t\tvar slashes = false;\n\t\tfor (i in 0...tmp.length) {\n\t\t\tswitch (tmp.charCodeAt(i)) {\n\t\t\t\tcase \":\".code:\n\t\t\t\t\tacc.add(\":\");\n\t\t\t\t\tcolon = true;\n\t\t\t\tcase \"/\".code if (colon == false):\n\t\t\t\t\tslashes = true;\n\t\t\t\tcase i:\n\t\t\t\t\tcolon = false;\n\t\t\t\t\tif (slashes) {\n\t\t\t\t\t\tacc.add(\"/\");\n\t\t\t\t\t\tslashes = false;\n\t\t\t\t\t}\n\t\t\t\t\tacc.add(String.fromCharCode(i));\n\t\t\t}\n\t\t}\n\t\tvar result = acc.toString();\n\t\treturn result;\n\t}\n\n\t/**\n\t\tAdds a trailing slash to `path`, if it does not have one already.\n\n\t\tIf the last slash in `path` is a backslash, a backslash is appended to\n\t\t`path`.\n\n\t\tIf the last slash in `path` is a slash, or if no slash is found, a slash\n\t\tis appended to `path`. In particular, this applies to the empty String\n\t\t\"\".\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function addTrailingSlash( path : String ) : String {\n\t\tif (path.length == 0)\n\t\t\treturn \"/\";\n\t\tvar c1 = path.lastIndexOf(\"/\");\n\t\tvar c2 = path.lastIndexOf(\"\\\\\");\n\t\treturn if ( c1 < c2 ) {\n\t\t\tif (c2 != path.length - 1) path + \"\\\\\";\n\t\t\telse path;\n\t\t} else {\n\t\t\tif (c1 != path.length - 1) path + \"/\";\n\t\t\telse path;\n\t\t}\n\t}\n\n\t/**\n\t\tRemoves trailing slashes from `path`.\n\n\t\tIf `path` does not end with a `/` or `\\`, `path` is returned unchanged.\n\n\t\tOtherwise the substring of `path` excluding the trailing slashes or\n\t\tbackslashes is returned.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\t@:require(haxe_ver >= 3.1)\n\tpublic static function removeTrailingSlashes ( path : String ) : String {\n\t\twhile (true) {\n\t\t\tswitch(path.charCodeAt(path.length - 1)) {\n\t\t\t\tcase '/'.code | '\\\\'.code: path = path.substr(0, -1);\n\t\t\t\tcase _: break;\n\t\t\t}\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t\tReturns true if the path is an absolute path, and false otherwise.\n\t**/\n\t@:require(haxe_ver >= 3.2)\n\tpublic static function isAbsolute ( path : String ) : Bool {\n\t\tif (StringTools.startsWith(path, '/')) return true;\n\t\tif (path.charAt(1) == ':') return true;\n\t\treturn false;\n\t}\n\n\tprivate static function unescape( path : String ) : String {\n\t\tvar regex = ~/-x([0-9][0-9])/g;\n\t\treturn regex.map(path, function(regex) return String.fromCharCode(Std.parseInt(regex.matched(1))));\n\t}\n\n\tprivate static function escape( path : String, allowSlashes : Bool = false ) : String {\n\t\tvar regex = allowSlashes ? ~/[^A-Za-z0-9_\\/\\\\\\.]/g : ~/[^A-Za-z0-9_\\.]/g;\n\t\treturn regex.map(path, function(v) return '-x' + v.matched(0).charCodeAt(0));\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.macro;\n\n#if (macro && !doc_gen)\nextern enum Position {\n}\n#else\ntypedef Position = {\n\tvar file : String;\n\tvar min : Int;\n\tvar max : Int;\n}\n#end\n\nenum Constant {\n\tCInt( v : String );\n\tCFloat( f : String );\n\tCString( s : String );\n\tCIdent( s : String );\n\tCRegexp( r : String, opt : String );\n}\n\nenum Binop {\n\t/**\n\t\t`+`\n\t**/\n\tOpAdd;\n\t/**\n\t\t`*`\n\t**/\n\tOpMult;\n\t/**\n\t\t`/`\n\t**/\n\tOpDiv;\n\t/**\n\t\t`-`\n\t**/\n\tOpSub;\n\t/**\n\t\t`=`\n\t**/\n\tOpAssign;\n\t/**\n\t\t`==`\n\t**/\n\tOpEq;\n\t/**\n\t\t`!=`\n\t**/\n\tOpNotEq;\n\t/**\n\t\t`>`\n\t**/\n\tOpGt;\n\t/**\n\t\t`>=`\n\t**/\n\tOpGte;\n\t/**\n\t\t`<`\n\t**/\n\tOpLt;\n\t/**\n\t\t`<=`\n\t**/\n\tOpLte;\n\t/**\n\t\t`&`\n\t**/\n\tOpAnd;\n\t/**\n\t\t`|`\n\t**/\n\tOpOr;\n\t/**\n\t\t`^`\n\t**/\n\tOpXor;\n\t/**\n\t\t`&&`\n\t**/\n\tOpBoolAnd;\n\t/**\n\t\t`||`\n\t**/\n\tOpBoolOr;\n\t/**\n\t\t`<<`\n\t**/\n\tOpShl;\n\t/**\n\t\t`>>`\n\t**/\n\tOpShr;\n\t/**\n\t\t`>>>`\n\t**/\n\tOpUShr;\n\t/**\n\t\t`%`\n\t**/\n\tOpMod;\n\t/**\n\t\t`+=`\n\t\t`-=`\n\t\t`/=`\n\t\t`*=`\n\t\t`<<=`\n\t\t`>>=`\n\t\t`>>>=`\n\t\t`|=`\n\t\t`&=`\n\t\t`^=`\n\t\t`%=`\n\t**/\n\tOpAssignOp( op : Binop );\n\t/**\n\t\t`...`\n\t**/\n\tOpInterval;\n\t/**\n\t\t`=>`\n\t**/\n\tOpArrow;\n}\n\n\nenum Unop {\n\t/**\n\t\t`++`\n\t**/\n\tOpIncrement;\n\t/**\n\t\t`--`\n\t**/\n\tOpDecrement;\n\t/**\n\t\t`!`\n\t**/\n\tOpNot;\n\t/**\n\t\t`-`\n\t**/\n\tOpNeg;\n\t/**\n\t\t`~`\n\t**/\n\tOpNegBits;\n}\n\ntypedef Expr = {\n\tvar expr : ExprDef;\n\tvar pos : Position;\n}\n\ntypedef ExprOf<T> = Expr;\n\ntypedef Case = {\n\tvar values : Array<Expr>;\n\t@:optional var guard : Null<Expr>;\n\tvar expr: Null<Expr>;\n}\n\ntypedef Var = {\n\tname : String,\n\ttype : Null<ComplexType>,\n\texpr : Null<Expr>\n}\n\ntypedef Catch = {\n\tname : String,\n\ttype : ComplexType,\n\texpr : Expr\n}\n\nenum ExprDef {\n\tEConst( c : Constant );\n\tEArray( e1 : Expr, e2 : Expr );\n\tEBinop( op : Binop, e1 : Expr, e2 : Expr );\n\tEField( e : Expr, field : String );\n\tEParenthesis( e : Expr );\n\tEObjectDecl( fields : Array<{ field : String, expr : Expr }> );\n\tEArrayDecl( values : Array<Expr> );\n\tECall( e : Expr, params : Array<Expr> );\n\tENew( t : TypePath, params : Array<Expr> );\n\tEUnop( op : Unop, postFix : Bool, e : Expr );\n\tEVars( vars : Array<Var> );\n\tEFunction( name : Null<String>, f : Function );\n\tEBlock( exprs : Array<Expr> );\n\tEFor( it : Expr, expr : Expr );\n\tEIn( e1 : Expr, e2 : Expr );\n\tEIf( econd : Expr, eif : Expr, eelse : Null<Expr> );\n\tEWhile( econd : Expr, e : Expr, normalWhile : Bool );\n\tESwitch( e : Expr, cases : Array<Case>, edef : Null<Null<Expr>> );\n\tETry( e : Expr, catches : Array<Catch> );\n\tEReturn( ?e : Null<Expr> );\n\tEBreak;\n\tEContinue;\n\tEUntyped( e : Expr );\n\tEThrow( e : Expr );\n\tECast( e : Expr, t : Null<ComplexType> );\n\tEDisplay( e : Expr, isCall : Bool );\n\tEDisplayNew( t : TypePath );\n\tETernary( econd : Expr, eif : Expr, eelse : Expr );\n\tECheckType( e : Expr, t : ComplexType );\n\tEMeta( s : MetadataEntry, e : Expr );\n}\n\nenum ComplexType {\n\tTPath( p : TypePath );\n\tTFunction( args : Array<ComplexType>, ret : ComplexType );\n\tTAnonymous( fields : Array<Field> );\n\tTParent( t : ComplexType );\n\tTExtend( p : Array<TypePath>, fields : Array<Field> );\n\tTOptional( t : ComplexType );\n}\n\ntypedef TypePath = {\n\tvar pack : Array<String>;\n\tvar name : String;\n\t@:optional var params : Array<TypeParam>;\n\t@:optional var sub : Null<String>;\n}\n\nenum TypeParam {\n\tTPType( t : ComplexType );\n\tTPExpr( e : Expr );\n}\n\ntypedef TypeParamDecl = {\n\tvar name : String;\n\t@:optional var constraints : Array<ComplexType>;\n\t@:optional var params : Array<TypeParamDecl>;\n}\n\ntypedef Function = {\n\tvar args : Array<FunctionArg>;\n\tvar ret : Null<ComplexType>;\n\tvar expr : Null<Expr>;\n\t@:optional var params : Array<TypeParamDecl>;\n}\n\ntypedef FunctionArg = {\n\tvar name : String;\n\t@:optional var opt : Bool;\n\tvar type : Null<ComplexType>;\n\t@:optional var value : Null<Expr>;\n}\n\ntypedef MetadataEntry = {\n\tname : String,\n\t?params : Array<Expr>,\n\tpos : Position\n}\n\ntypedef Metadata = Array<MetadataEntry>;\n\ntypedef Field = {\n\tvar name : String;\n\t@:optional var doc : Null<String>;\n\t@:optional var access : Array<Access>;\n\tvar kind : FieldType;\n\tvar pos : Position;\n\t@:optional var meta : Metadata;\n}\n\nenum Access {\n\tAPublic;\n\tAPrivate;\n\tAStatic;\n\tAOverride;\n\tADynamic;\n\tAInline;\n\tAMacro;\n}\n\nenum FieldType {\n\tFVar( t : Null<ComplexType>, ?e : Null<Expr> );\n\tFFun( f : Function );\n\tFProp( get : String, set : String, ?t : Null<ComplexType>, ?e : Null<Expr> );\n}\n\ntypedef TypeDefinition = {\n\tvar pack : Array<String>;\n\tvar name : String;\n\tvar pos : Position;\n\t@:optional var meta : Metadata;\n\t@:optional var params : Array<TypeParamDecl>;\n\t@:optional var isExtern : Bool;\n\tvar kind : TypeDefKind;\n\tvar fields : Array<Field>;\n}\n\nenum TypeDefKind {\n\tTDEnum;\n\tTDStructure;\n\tTDClass( ?superClass : TypePath, ?interfaces : Array<TypePath>, ?isInterface : Bool );\n\tTDAlias( t : ComplexType ); // ignore TypeDefinition.fields\n\tTDAbstract( tthis : Null<ComplexType>, ?from : Array<ComplexType>, ?to: Array<ComplexType> );\n}\n\n/**\n\tThis error can be used to handle or produce compilation errors in macros.\n**/\nclass Error {\n\tpublic var message : String;\n\tpublic var pos : Expr.Position;\n\tpublic function new(m,p) {\n\t\tthis.message = m;\n\t\tthis.pos = p;\n\t}\n\tfunction toString() {\n\t\treturn message;\n\t}\n}\n\nenum ImportMode {\n\tINormal;\n\tIAsName(alias:String);\n\tIAll;\n}\n\ntypedef ImportExpr = {\n\tvar path: Array< { pos: Position, name: String } >;\n\tvar mode: ImportMode;\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.xml;\n\nusing StringTools;\n\n/* poor'man enum : reduce code size + a bit faster since inlined */\nextern private class S {\n\tpublic static inline var IGNORE_SPACES \t= 0;\n\tpublic static inline var BEGIN\t\t\t= 1;\n\tpublic static inline var BEGIN_NODE\t\t= 2;\n\tpublic static inline var TAG_NAME\t\t= 3;\n\tpublic static inline var BODY\t\t\t= 4;\n\tpublic static inline var ATTRIB_NAME\t= 5;\n\tpublic static inline var EQUALS\t\t\t= 6;\n\tpublic static inline var ATTVAL_BEGIN\t= 7;\n\tpublic static inline var ATTRIB_VAL\t\t= 8;\n\tpublic static inline var CHILDS\t\t\t= 9;\n\tpublic static inline var CLOSE\t\t\t= 10;\n\tpublic static inline var WAIT_END\t\t= 11;\n\tpublic static inline var WAIT_END_RET\t= 12;\n\tpublic static inline var PCDATA\t\t\t= 13;\n\tpublic static inline var HEADER\t\t\t= 14;\n\tpublic static inline var COMMENT\t\t= 15;\n\tpublic static inline var DOCTYPE\t\t= 16;\n\tpublic static inline var CDATA\t\t\t= 17;\n\tpublic static inline var ESCAPE\t\t\t= 18;\n}\n\nclass Parser\n{\n\tstatic var escapes = {\n\t\tvar h = new haxe.ds.StringMap();\n\t\th.set(\"lt\", \"<\");\n\t\th.set(\"gt\", \">\");\n\t\th.set(\"amp\", \"&\");\n\t\th.set(\"quot\", '\"');\n\t\th.set(\"apos\", \"'\");\n\t\th;\n\t}\n\n\t/**\n\t\tParses the String into an XML Document. Set strict parsing to true in order to enable a strict check of XML attributes and entities.\n\t**/\n\tstatic public function parse(str:String, strict = false)\n\t{\n\t\tvar doc = Xml.createDocument();\n\t\tdoParse(str, strict, 0, doc);\n\t\treturn doc;\n\t}\n\n\tstatic function doParse(str:String, strict:Bool, p:Int = 0, ?parent:Xml):Int\n\t{\n\t\tvar xml:Xml = null;\n\t\tvar state = S.BEGIN;\n\t\tvar next = S.BEGIN;\n\t\tvar aname = null;\n\t\tvar start = 0;\n\t\tvar nsubs = 0;\n\t\tvar nbrackets = 0;\n\t\tvar c = str.fastCodeAt(p);\n\t\tvar buf = new StringBuf();\n\t\t// need extra state because next is in use\n\t\tvar escapeNext = S.BEGIN;\n\t\tvar attrValQuote = -1;\n\t\tinline function addChild(xml:Xml) {\n\t\t\tparent.addChild(xml);\n\t\t\tnsubs++;\n\t\t}\n\t\twhile (!StringTools.isEof(c))\n\t\t{\n\t\t\tswitch(state)\n\t\t\t{\n\t\t\t\tcase S.IGNORE_SPACES:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase\n\t\t\t\t\t\t\t'\\n'.code,\n\t\t\t\t\t\t\t'\\r'.code,\n\t\t\t\t\t\t\t'\\t'.code,\n\t\t\t\t\t\t\t' '.code:\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = next;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.BEGIN:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '<'.code:\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.BEGIN_NODE;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tstate = S.PCDATA;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.PCDATA:\n\t\t\t\t\tif (c == '<'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tvar child = Xml.createPCData(buf.toString());\n\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\taddChild(child);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BEGIN_NODE;\n\t\t\t\t\t} else if (c == '&'.code) {\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tstate = S.ESCAPE;\n\t\t\t\t\t\tescapeNext = S.PCDATA;\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t}\n\t\t\t\tcase S.CDATA:\n\t\t\t\t\tif (c == ']'.code && str.fastCodeAt(p + 1) == ']'.code && str.fastCodeAt(p + 2) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar child = Xml.createCData(str.substr(start, p - start));\n\t\t\t\t\t\taddChild(child);\n\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.BEGIN_NODE:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '!'.code:\n\t\t\t\t\t\t\tif (str.fastCodeAt(p + 1) == '['.code)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\t\t\tif (str.substr(p, 6).toUpperCase() != \"CDATA[\")\n\t\t\t\t\t\t\t\t\tthrow(\"Expected <![CDATA[\");\n\t\t\t\t\t\t\t\tp += 5;\n\t\t\t\t\t\t\t\tstate = S.CDATA;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (str.fastCodeAt(p + 1) == 'D'.code || str.fastCodeAt(p + 1) == 'd'.code)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(str.substr(p + 2, 6).toUpperCase() != \"OCTYPE\")\n\t\t\t\t\t\t\t\t\tthrow(\"Expected <!DOCTYPE\");\n\t\t\t\t\t\t\t\tp += 8;\n\t\t\t\t\t\t\t\tstate = S.DOCTYPE;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if( str.fastCodeAt(p + 1) != '-'.code || str.fastCodeAt(p + 2) != '-'.code )\n\t\t\t\t\t\t\t\tthrow(\"Expected <!--\");\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\t\t\tstate = S.COMMENT;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase '?'.code:\n\t\t\t\t\t\t\tstate = S.HEADER;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\tcase '/'.code:\n\t\t\t\t\t\t\tif( parent == null )\n\t\t\t\t\t\t\t\tthrow(\"Expected node name\");\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.CLOSE;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = S.TAG_NAME;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.TAG_NAME:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tif( p == start )\n\t\t\t\t\t\t\tthrow(\"Expected node name\");\n\t\t\t\t\t\txml = Xml.createElement(str.substr(start, p - start));\n\t\t\t\t\t\taddChild(xml);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BODY;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.BODY:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '/'.code:\n\t\t\t\t\t\t\tstate = S.WAIT_END;\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tstate = S.CHILDS;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = S.ATTRIB_NAME;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTRIB_NAME:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp;\n\t\t\t\t\t\tif( start == p )\n\t\t\t\t\t\t\tthrow(\"Expected attribute name\");\n\t\t\t\t\t\ttmp = str.substr(start,p-start);\n\t\t\t\t\t\taname = tmp;\n\t\t\t\t\t\tif( xml.exists(aname) )\n\t\t\t\t\t\t\tthrow(\"Duplicate attribute\");\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.EQUALS;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.EQUALS:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '='.code:\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.ATTVAL_BEGIN;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow(\"Expected =\");\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTVAL_BEGIN:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '\"'.code | '\\''.code:\n\t\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\t\tstate = S.ATTRIB_VAL;\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\tattrValQuote = c;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow(\"Expected \\\"\");\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTRIB_VAL:\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase '&'.code:\n\t\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\t\tstate = S.ESCAPE;\n\t\t\t\t\t\t\tescapeNext = S.ATTRIB_VAL;\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tcase '>'.code | '<'.code if( strict ):\n\t\t\t\t\t\t\t// HTML allows these in attributes values\n\t\t\t\t\t\t\tthrow \"Invalid unescaped \" + String.fromCharCode(c) + \" in attribute value\";\n\t\t\t\t\t\tcase _ if (c == attrValQuote):\n\t\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\t\tvar val = buf.toString();\n\t\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\t\txml.set(aname, val);\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.BODY;\n\t\t\t\t\t}\n\t\t\t\tcase S.CHILDS:\n\t\t\t\t\tp = doParse(str, strict, p, xml);\n\t\t\t\t\tstart = p;\n\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\tcase S.WAIT_END:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tthrow(\"Expected >\");\n\t\t\t\t\t}\n\t\t\t\tcase S.WAIT_END_RET:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tif( nsubs == 0 )\n\t\t\t\t\t\t\t\tparent.addChild(Xml.createPCData(\"\"));\n\t\t\t\t\t\t\treturn p;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tthrow(\"Expected >\");\n\t\t\t\t\t}\n\t\t\t\tcase S.CLOSE:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tif( start == p )\n\t\t\t\t\t\t\tthrow(\"Expected node name\");\n\n\t\t\t\t\t\tvar v = str.substr(start,p - start);\n\t\t\t\t\t\tif (v != parent.nodeName)\n\t\t\t\t\t\t\tthrow \"Expected </\" +parent.nodeName + \">\";\n\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.WAIT_END_RET;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.COMMENT:\n\t\t\t\t\tif (c == '-'.code && str.fastCodeAt(p +1) == '-'.code && str.fastCodeAt(p + 2) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\taddChild(Xml.createComment(str.substr(start, p - start)));\n\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.DOCTYPE:\n\t\t\t\t\tif(c == '['.code)\n\t\t\t\t\t\tnbrackets++;\n\t\t\t\t\telse if(c == ']'.code)\n\t\t\t\t\t\tnbrackets--;\n\t\t\t\t\telse if (c == '>'.code && nbrackets == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\taddChild(Xml.createDocType(str.substr(start, p - start)));\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.HEADER:\n\t\t\t\t\tif (c == '?'.code && str.fastCodeAt(p + 1) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tp++;\n\t\t\t\t\t\tvar str = str.substr(start + 1, p - start - 2);\n\t\t\t\t\t\taddChild(Xml.createProcessingInstruction(str));\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.ESCAPE:\n\t\t\t\t\tif (c == ';'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar s = str.substr(start, p - start);\n\t\t\t\t\t\tif (s.fastCodeAt(0) == '#'.code) {\n\t\t\t\t\t\t\tvar c = s.fastCodeAt(1) == 'x'.code\n\t\t\t\t\t\t\t\t? Std.parseInt(\"0\" +s.substr(1, s.length - 1))\n\t\t\t\t\t\t\t\t: Std.parseInt(s.substr(1, s.length - 1));\n\t\t\t\t\t\t\t#if (neko || cpp || php)\n\t\t\t\t\t\t\tif( c >= 128 ) {\n\t\t\t\t\t\t\t\t// UTF8-encode it\n\t\t\t\t\t\t\t\tif( c <= 0x7FF ) {\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xC0 | (c >> 6));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\n\t\t\t\t\t\t\t\t} else if( c <= 0xFFFF ) {\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xE0 | (c >> 12));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 6) & 63));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\n\t\t\t\t\t\t\t\t} else if( c <= 0x10FFFF ) {\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xF0 | (c >> 18));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 12) & 63));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 6) & 63));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\n\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\tthrow \"Cannot encode UTF8-char \" + c;\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t#end\n\t\t\t\t\t\t\tbuf.addChar(c);\n\t\t\t\t\t\t} else if (!escapes.exists(s)) {\n\t\t\t\t\t\t\tif( strict )\n\t\t\t\t\t\t\t\tthrow 'Undefined entity: $s';\n\t\t\t\t\t\t\tbuf.add('&$s;');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuf.add(escapes.get(s));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tstate = escapeNext;\n\t\t\t\t\t} else if (!isValidChar(c) && c != \"#\".code) {\n\t\t\t\t\t\tif( strict )\n\t\t\t\t\t\t\tthrow 'Invalid character in entity: ' + String.fromCharCode(c);\n\t\t\t\t\t\tbuf.addChar(\"&\".code);\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tp--;\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tstate = escapeNext;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tc = str.fastCodeAt(++p);\n\t\t}\n\n\t\tif (state == S.BEGIN)\n\t\t{\n\t\t\tstart = p;\n\t\t\tstate = S.PCDATA;\n\t\t}\n\n\t\tif (state == S.PCDATA)\n\t\t{\n\t\t\tif (p != start || nsubs == 0) {\n\t\t\t\tbuf.addSub(str, start, p-start);\n\t\t\t\taddChild(Xml.createPCData(buf.toString()));\n\t\t\t}\n\t\t\treturn p;\n\t\t}\n\n\t\tif( !strict && state == S.ESCAPE && escapeNext == S.PCDATA ) {\n\t\t\tbuf.addChar(\"&\".code);\n\t\t\tbuf.addSub(str, start, p - start);\n\t\t\taddChild(Xml.createPCData(buf.toString()));\n\t\t\treturn p;\n\t\t}\n\n\t\tthrow \"Unexpected end\";\n\t}\n\n\tstatic inline function isValidChar(c) {\n\t\treturn (c >= 'a'.code && c <= 'z'.code) || (c >= 'A'.code && c <= 'Z'.code) || (c >= '0'.code && c <= '9'.code) || c == ':'.code || c == '.'.code || c == '_'.code || c == '-'.code;\n\t}\n}","/*\n * Copyright (c)2005-2013, Haxe Foundation\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n * Neither the name of the Haxe Foundation nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\npackage haxe.xml;\n\nclass Printer {\n\n\tstatic public function print(xml:Xml, ?pretty = false) {\n\t\tvar printer = new Printer(pretty);\n\t\tprinter.writeNode(xml, \"\");\n\t\treturn printer.output.toString();\n\t}\n\n\tvar output:StringBuf;\n\tvar pretty:Bool;\n\n\tfunction new(pretty) {\n\t\toutput = new StringBuf();\n\t\tthis.pretty = pretty;\n\t}\n\n\tfunction writeNode(value:Xml, tabs:String) {\n\t\tswitch (value.nodeType) {\n\t\t\tcase CData:\n\t\t\t\twrite(tabs + \"<![CDATA[\");\n\t\t\t\twrite(StringTools.trim(value.nodeValue));\n\t\t\t\twrite(\"]]>\");\n\t\t\t\tnewline();\n\t\t\tcase Comment:\n\t\t\t\tvar commentContent:String = value.nodeValue;\n\t\t\t\tcommentContent = ~/[\\n\\r\\t]+/g.replace(commentContent, \"\");\n\t\t\t\tcommentContent = \"<!--\" + commentContent + \"-->\";\n\t\t\t\twrite(tabs);\n\t\t\t\twrite(StringTools.trim(commentContent));\n\t\t\t\tnewline();\n\t\t\tcase Document:\n\t\t\t\tfor (child in value) {\n\t\t\t\t\twriteNode(child, tabs);\n\t\t\t\t}\n\t\t\tcase Element:\n\t\t\t\twrite(tabs + \"<\");\n\t\t\t\twrite(value.nodeName);\n\t\t\t\tfor (attribute in value.attributes()) {\n\t\t\t\t\twrite(\" \" + attribute + \"=\\\"\");\n\t\t\t\t\twrite(StringTools.htmlEscape(value.get(attribute), true));\n\t\t\t\t\twrite(\"\\\"\");\n\t\t\t\t}\n\t\t\t\tif (hasChildren(value)) {\n\t\t\t\t\twrite(\">\");\n\t\t\t\t\tnewline();\n\t\t\t\t\tfor (child in value) {\n\t\t\t\t\t\twriteNode(child, pretty ? tabs + \"\\t\" : tabs);\n\t\t\t\t\t}\n\t\t\t\t\twrite(tabs + \"</\");\n\t\t\t\t\twrite(value.nodeName);\n\t\t\t\t\twrite(\">\");\n\t\t\t\t\tnewline();\n\t\t\t\t} else {\n\t\t\t\t\twrite(\"/>\");\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\tcase PCData:\n\t\t\t\tvar nodeValue:String = value.nodeValue;\n\t\t\t\tif (nodeValue.length != 0) {\n\t\t\t\t\twrite(tabs + StringTools.htmlEscape(nodeValue));\n\t\t\t\t\tnewline();\n\t\t\t\t}\n\t\t\tcase ProcessingInstruction:\n\t\t\t\twrite(\"<?\" + value.nodeValue + \"?>\");\n\t\t\tcase DocType:\n\t\t\t\twrite(\"<!DOCTYPE \" + value.nodeValue + \">\");\n\t\t}\n\t}\n\n\tinline function write(input:String) {\n\t\toutput.add(input);\n\t}\n\n\tinline function newline() {\n\t\tif (pretty) {\n\t\t\toutput.add(\"\");\n\t\t}\n\t}\n\n\tfunction hasChildren(value:Xml):Bool {\n\t\tfor (child in value) {\n\t\t\tswitch (child.nodeType) {\n\t\t\t\tcase Xml.Element, Xml.PCData:\n\t\t\t\t\treturn true;\n\t\t\t\tcase Xml.CData, Xml.Comment:\n\t\t\t\t\tif (StringTools.ltrim(child.nodeValue).length != 0) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\tcase _:\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nprivate class HaxeError extends js.Error {\n\n\tvar val:Dynamic;\n\n\tpublic function new(val:Dynamic) untyped {\n\t\tsuper();\n\t\tthis.val = __define_feature__(\"js.Boot.HaxeError\", val);\n\t\tthis.message = String(val);\n\t\tif (js.Error.captureStackTrace) js.Error.captureStackTrace(this, HaxeError);\n\t}\n}\n\n@:dox(hide)\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && __typeof__(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"(o|0) === o\"));\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( (untyped __js__(\"typeof\"))(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped __js__(\"{}.toString\");\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) {\n\t\treturn untyped js.Lib.global[name];\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nimport js.html.Storage;\nimport js.html.XMLHttpRequest;\n\nclass Browser {\n\t/** The global window object. */\n\tpublic static var window(get, never):js.html.Window;\n\tinline static function get_window() return untyped __js__(\"window\");\n\n\t/** Shortcut to Window.document. */\n\tpublic static var document(get, never):js.html.HTMLDocument;\n\tinline static function get_document() return untyped __js__(\"window.document\");\n\n\t/** Shortcut to Window.location. */\n\tpublic static var location(get, never):js.html.Location;\n\tinline static function get_location() return untyped __js__(\"window.location\");\n\n\t/** Shortcut to Window.navigator. */\n\tpublic static var navigator(get, never):js.html.Navigator;\n\tinline static function get_navigator() return untyped __js__(\"window.navigator\");\n\n\t/** Shortcut to Window.console. */\n\tpublic static var console(get, never):js.html.Console;\n\tinline static function get_console() return untyped __js__(\"window.console\");\n\n\t/**\n\t * True if a window object exists, false otherwise.\n\t *\n\t * This can be used to check if the code is being executed in a non-browser\n\t * environment such as node.js.\n\t */\n\tpublic static var supported(get, never):Bool;\n\tinline static function get_supported() return untyped __typeof__(window) != \"undefined\";\n\n\t/**\n\t * Safely gets the browser's local storage, or returns null if localStorage is unsupported or\n\t * disabled.\n\t */\n\tpublic static function getLocalStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.localStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Safely gets the browser's session storage, or returns null if sessionStorage is unsupported\n\t * or disabled.\n\t */\n\tpublic static function getSessionStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.sessionStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an XMLHttpRequest, with a fallback to ActiveXObject for ancient versions of Internet\n\t * Explorer.\n\t */\n\tpublic static function createXMLHttpRequest() : XMLHttpRequest\n\t{\n\t\tif( untyped __js__(\"typeof XMLHttpRequest\") != \"undefined\" ) {\n\t\t\treturn new XMLHttpRequest();\n\t\t}\n\t\tif( untyped __js__(\"typeof ActiveXObject\") != \"undefined\" ) {\n\t\t\treturn untyped __new__(\"ActiveXObject\",\"Microsoft.XMLHTTP\");\n\t\t}\n\t\tthrow \"Unable to create XMLHttpRequest object.\";\n\t}\n\n\t/**\n\t\tDisplay an alert message box containing the given message. See also `Window.alert()`.\n\t**/\n\tpublic static function alert( v : Dynamic ) {\n\t\t@:privateAccess window.alert(Boot.__string_rec(v,\"\"));\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nclass Lib {\n\n\t/**\n\t\tInserts a 'debugger' statement that will make a breakpoint if a debugger is available.\n\t**/\n\tpublic static inline function debug() {\n\t\tuntyped __js__(\"debugger\");\n\t}\n\n\t/**\n\t\tDisplay an alert message box containing the given message.\n\t\t@deprecated Use Browser.alert() instead.\n\t**/\n\t@:deprecated(\"Lib.alert() is deprecated, use Browser.alert() instead\")\n\tpublic static function alert( v : Dynamic ) {\n\t\tuntyped __js__(\"alert\")(js.Boot.__string_rec(v,\"\"));\n\t}\n\n\tpublic static inline function eval( code : String ) : Dynamic {\n\t\treturn untyped __js__(\"eval\")(code);\n\t}\n\n\t/**\n\t\tInserts a `require` expression that loads JavaScript object from\n\t\ta module or file specified in the `module` argument.\n\n\t\tThis is only supported in environments where `require` function\n\t\tis available, such as Node.js or RequireJS.\n\t**/\n\tpublic static inline function require( module:String ) : Dynamic {\n\t\treturn untyped __js__(\"require\")(module);\n\t}\n\n\t/**\n\t\tReturns JavaScript `undefined` value.\n\n\t\tNote that this is only needed in very rare cases when working with external JavaScript code.\n\n\t\tIn Haxe, `null` is used to represent the absence of a value.\n\t**/\n\tpublic static var undefined(get,never) : Dynamic;\n\tstatic inline function get_undefined() : Dynamic {\n\t\treturn untyped __js__(\"undefined\");\n\t}\n\n\t/**\n\t\t`nativeThis` is the JavaScript `this`, which is semantically different\n\t\tfrom the Haxe `this`. Use `nativeThis` only when working with external\n\t\tJavaScript code.\n\n\t\tIn Haxe, `this` is always bound to a class instance.\n\t\tIn JavaScript, `this` in a function can be bound to an arbitrary\n\t\tvariable when the function is called using `func.call(thisObj, ...)` or\n\t\t`func.apply(thisObj, [...])`.\n\n\t\tRead more at https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this\n\t**/\n\tpublic static var nativeThis(get,never) : Dynamic;\n\t@:extern static inline function get_nativeThis() : Dynamic {\n\t\treturn untyped __js__(\"this\");\n\t}\n\n\n\t/**\n\t\tAn alias of the JS \"global\" object.\n\n\t\tConcretely, it is set as the first defined value in the list of\n\t\t`window`, `global`, `self`, and `this` in the top-level of the compiled output.\n\t**/\n\t#if (haxe_ver >= 3.3)\n\t\tpublic\n\t#else\n\t\t// hide it since we should not add new feature in 3.2.1\n\t\t@:allow(js) private\n\t#end\n\tstatic var global(get,never) : Dynamic;\n\t@:extern static inline function get_global() : Dynamic {\n\t\treturn untyped __define_feature__(\"js.Lib.global\", __js__(\"$global\")); // $global is generated by the compiler\n\t}\n}\n","/*\n * Copyright (C)2005-2015 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla/HTMLCanvasElement.webidl line 17:0. Do not edit!\n\npackage js.html;\n\n@:native(\"HTMLCanvasElement\")\nextern class CanvasElement extends Element\n{\n\tvar width : Int;\n\tvar height : Int;\n\t\n\t/** @throws DOMError */\n\tfunction getContext( contextId : String, ?contextOptions : Dynamic ) : Dynamic/*MISSING nsISupports*/;\n\t/** @throws DOMError */\n\tfunction toDataURL( ?type : String = \"\", ?encoderOptions : Dynamic ) : String;\n\t/** @throws DOMError */\n\tfunction toBlob( callback : Blob -> Void, ?type : String = \"\", ?encoderOptions : Dynamic ) : Void;\n\t\n\t/** Shorthand for getting a CanvasRenderingContext2D. */\n\tinline function getContext2d( ?attribs : {} ) : CanvasRenderingContext2D {\n\t\treturn cast getContext(\"2d\", attribs);\n\t}\n\t/** Shorthand for getting a js.html.webgl.RenderingContext. */\n\tinline function getContextWebGL( ?attribs : js.html.webgl.ContextAttributes ) : js.html.webgl.RenderingContext {\n\t\treturn CanvasUtil.getContextWebGL(this, attribs);\n\t}\n}\n\nprivate class CanvasUtil {\n\tpublic static function getContextWebGL( canvas :CanvasElement, attribs :{} ) {\n\t\tfor (name in [\"webgl\", \"experimental-webgl\"]) {\n\t\t\tvar ctx = canvas.getContext(name, attribs);\n\t\t\tif (ctx != null) return ctx;\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n@:keep\nclass ArrayBuffer {\n\n\tpublic var byteLength : Int;\n\tvar a : Array<Int>;\n\t\n\tpublic function new( ?a : Dynamic ) {\n\t\tif( Std.is(a,Array) ) {\n\t\t\tthis.a = a;\n\t\t\tbyteLength = a.length;\n\t\t} else {\n\t\t\tvar len : Int = a;\n\t\t\tthis.a = [];\n\t\t\tfor( i in 0...len )\n\t\t\t\tthis.a[i] = 0;\n\t\t\tbyteLength = len;\n\t\t}\n\t}\n\t\n\tpublic function slice(begin,?end) {\n\t\treturn new ArrayBuffer(a.slice(begin,end));\n\t}\n\t\n\tstatic function sliceImpl(begin,?end) {\n\t\tvar u = new js.html.Uint8Array(untyped __js__('this'), begin, end == null ? null : end - begin);\n        var result = new js.html.ArrayBuffer(u.byteLength);\n        var resultArray = new js.html.Uint8Array(result);\n\t\tresultArray.set(u);\n        return result;\n\t}\n\n\tstatic function __init__() untyped {\n\t\tvar ArrayBuffer = js.Lib.global.ArrayBuffer || js.html.compat.ArrayBuffer;\n\t\tif( ArrayBuffer.prototype.slice == null ) ArrayBuffer.prototype.slice = sliceImpl; // IE10\n\t}\n}","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\nimport haxe.io.Error;\n\n@:keep\n@:access(js.html.compat.ArrayBuffer)\nclass DataView {\n\n\tvar buf : ArrayBuffer;\n\tvar offset : Int;\n\tvar length : Int;\n\n\tpublic function new( buffer : ArrayBuffer, ?byteOffset : Int, ?byteLength : Int ) : Void {\n\t\tthis.buf = buffer;\n\t\tthis.offset = byteOffset == null ? 0 : byteOffset;\n\t\tthis.length = byteLength == null ? buffer.byteLength - this.offset : byteLength;\n\t\tif( offset < 0 || length < 0 || offset+length > buffer.byteLength )\n\t\t\tthrow OutsideBounds;\n\t}\n\n\tpublic function getInt8( byteOffset : Int ) : Int {\n\t\tvar v = buf.a[offset + byteOffset];\n\t\treturn v >= 0x80 ? v - 256 : v;\n\t}\n\n\tpublic function getUint8( byteOffset : Int ) : Int {\n\t\treturn buf.a[offset + byteOffset];\n\t}\n\n\tpublic function getInt16( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\tvar v = getUint16(byteOffset, littleEndian);\n\t\treturn v >= 0x8000 ? v - 65536 : v;\n\t}\n\n\tpublic function getUint16( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\treturn littleEndian ? buf.a[offset + byteOffset] | (buf.a[offset + byteOffset + 1] << 8) : (buf.a[offset + byteOffset]<<8) | buf.a[offset + byteOffset + 1];\n\t}\n\n\tpublic function getInt32( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\tvar p = offset + byteOffset;\n\t\tvar a = buf.a[p++];\n\t\tvar b = buf.a[p++];\n\t\tvar c = buf.a[p++];\n\t\tvar d = buf.a[p++];\n\t\treturn littleEndian ? a | (b<<8) | (c<<16) | (d<<24) : d | (c << 8) | (b << 16) | (a << 24);\n\t}\n\n\tpublic function getUint32( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\tvar v = getInt32(byteOffset, littleEndian);\n\t\treturn v < 0 ? cast (v + 4294967296.) : v;\n\t}\n\n\tpublic function getFloat32( byteOffset : Int, ?littleEndian : Bool ) : Float {\n\t\treturn haxe.io.FPHelper.i32ToFloat(getInt32(byteOffset,littleEndian));\n\t}\n\n\tpublic function getFloat64( byteOffset : Int, ?littleEndian : Bool ) : Float {\n\t\tvar a = getInt32(byteOffset, littleEndian);\n\t\tvar b = getInt32(byteOffset + 4, littleEndian);\n\t\treturn haxe.io.FPHelper.i64ToDouble(littleEndian?a:b,littleEndian?b:a);\n\t}\n\n\tpublic function setInt8( byteOffset : Int, value : Int ) : Void {\n\t\tbuf.a[byteOffset + offset] = (value < 0) ? (value + 128) & 0xFF : value & 0xFF;\n\t}\n\n\tpublic function setUint8( byteOffset : Int, value : Int ) : Void {\n\t\tbuf.a[byteOffset + offset] = value & 0xFF;\n\t}\n\n\tpublic function setInt16( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tsetUint16(byteOffset, value < 0 ? value + 65536 : value, littleEndian);\n\t}\n\n\tpublic function setUint16( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tvar p = byteOffset + offset;\n\t\tif( littleEndian ) {\n\t\t\tbuf.a[p] = value&0xFF;\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t} else {\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t\tbuf.a[p] = value&0xFF;\n\t\t}\n\t}\n\n\tpublic function setInt32( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tsetUint32(byteOffset, value, littleEndian);\n\t}\n\n\tpublic function setUint32( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tvar p = byteOffset + offset;\n\t\tif( littleEndian ) {\n\t\t\tbuf.a[p++] = value & 0xFF;\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t\tbuf.a[p++] = (value>>16) & 0xFF;\n\t\t\tbuf.a[p++] = value >>> 24;\n\t\t} else {\n\t\t\tbuf.a[p++] = value >>> 24;\n\t\t\tbuf.a[p++] = (value>>16) & 0xFF;\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t\tbuf.a[p++] = value & 0xFF;\n\t\t}\n\t}\n\n\tpublic function setFloat32( byteOffset : Int, value : Float, ?littleEndian : Bool ) : Void {\n\t\tsetUint32(byteOffset, haxe.io.FPHelper.floatToI32(value),littleEndian);\n\t}\n\n\tpublic function setFloat64( byteOffset : Int, value : Float, ?littleEndian : Bool ) : Void {\n\t\tvar i64 = haxe.io.FPHelper.doubleToI64(value);\n\t\tif( littleEndian ) {\n\t\t\tsetUint32(byteOffset, i64.low);\n\t\t\tsetUint32(byteOffset, i64.high);\n\t\t} else {\n\t\t\tsetUint32(byteOffset, i64.high);\n\t\t\tsetUint32(byteOffset, i64.low);\n\t\t}\n\t}\n\n\tstatic function __init__() {\n\t\tvar DataView = untyped js.Lib.global.DataView || js.html.compat.DataView;\n\t}\n\n}","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n@:keep\nclass Uint8Array {\n\n\tstatic var BYTES_PER_ELEMENT = 1;\n\n\tstatic function _new( ?arg1 : Dynamic, ?offset : Int, ?length : Int ) : Dynamic {\n\t\tvar arr;\n\t\tif( untyped __typeof__(arg1) == 'number' ) {\n\t\t\tarr = new Array();\n\t\t\tfor( i in 0...arg1 )\n\t\t\t\tarr[i] = 0;\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else if( Std.is(arg1,ArrayBuffer) ) {\n\t\t\tvar buffer : ArrayBuffer = arg1;\n\t\t\tif( offset == null ) offset = 0;\n\t\t\tif( length == null ) length = buffer.byteLength - offset;\n\t\t\tif( offset == 0 )\n\t\t\t\tarr = cast @:privateAccess buffer.a;\n\t\t\telse\n\t\t\t\t// here we are losing the fact that we should reference the same data,\n\t\t\t\t// but I don't see another way to have this behaviour while keeping [] access\n\t\t\t\tarr = cast @:privateAccess buffer.a.slice(offset, offset+length);\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = offset;\n\t\t\t\tarr.buffer = buffer;\n\t\t\t}\n\t\t} else if( Std.is(arg1, Array) ) {\n\t\t\tarr = (arg1 : Array<Int>).copy();\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else\n\t\t\tthrow \"TODO \"+arg1;\n\t\tuntyped {\n\t\t\tarr.subarray = _subarray;\n\t\t\tarr.set = _set;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tstatic function _set( ?arg : Dynamic, ?offset : Int ) {\n\t\tvar t : Dynamic = untyped __js__(\"this\");\n\t\tif( Std.is(arg.buffer,ArrayBuffer) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( arg.byteLength + offset > t.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...arg.byteLength )\n\t\t\t\tt[i + offset] = a[i];\n\t\t} else if( Std.is(arg,Array) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( a.length + offset > t.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...a.length )\n\t\t\t\tt[i + offset] = a[i];\n\t\t} else\n\t\t\tthrow \"TODO\";\n\t}\n\n\tstatic function _subarray( start : Int, ?end : Int ) {\n\t\tvar t : Dynamic = untyped __js__(\"this\");\n\t\tvar a = _new(t.slice(start,end));\n\t\ta.byteOffset = start;\n\t\treturn a;\n\t}\n\n\tstatic function __init__() {\n\t\tvar Uint8Array = untyped js.Lib.global.Uint8Array || _new;\n\t}\n\n}","package lime.app;\n\n\n#if macro\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nusing haxe.macro.Tools;\n#end\n\n#if !macro\n@:genericBuild(lime.app.Event.build())\n#end\n\n\nclass Event<T> {\n\t\n\t\n\tpublic var canceled (default, null):Bool;\n\t\n\t@:noCompletion @:dox(hide) public var __listeners:Array<T>;\n\t@:noCompletion @:dox(hide) public var __repeat:Array<Bool>;\n\tprivate var __priorities:Array<Int>;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t#if !macro\n\t\tcanceled = false;\n\t\t__listeners = new Array ();\n\t\t__priorities = new Array<Int> ();\n\t\t__repeat = new Array<Bool> ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function add (listener:T, once:Bool = false, priority:Int = 0):Void {\n\t\t\n\t\t#if !macro\n\t\tfor (i in 0...__priorities.length) {\n\t\t\t\n\t\t\tif (priority > __priorities[i]) {\n\t\t\t\t\n\t\t\t\t__listeners.insert (i, cast listener);\n\t\t\t\t__priorities.insert (i, priority);\n\t\t\t\t__repeat.insert (i, !once);\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__listeners.push (cast listener);\n\t\t__priorities.push (priority);\n\t\t__repeat.push (!once);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if macro\n\tprivate static function build () {\n\t\t\n\t\tvar typeArgs;\n\t\tvar typeResult;\n\t\t\n\t\tswitch (Context.getLocalType ()) {\n\t\t\t\n\t\t\tcase TInst (_, [ TFun (args, result) ]):\n\t\t\t\t\n\t\t\t\ttypeArgs = args;\n\t\t\t\ttypeResult = result;\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tthrow false;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar typeParam = TFun (typeArgs, typeResult);\n\t\tvar typeString = \"\";\n\t\t\n\t\tif (typeArgs.length == 0) {\n\t\t\t\n\t\t\ttypeString = \"Void->\";\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfor (arg in typeArgs) {\n\t\t\t\t\n\t\t\t\ttypeString += arg.t.toString () + \"->\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\ttypeString += typeResult.toString ();\n\t\ttypeString = StringTools.replace (typeString, \"->\", \"_\");\n\t\ttypeString = StringTools.replace (typeString, \".\", \"_\");\n\t\ttypeString = StringTools.replace (typeString, \"<\", \"_\");\n\t\ttypeString = StringTools.replace (typeString, \">\", \"_\");\n\t\t\n\t\tvar name = \"Event_\" + typeString;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tContext.getType (\"lime.app.\" + name);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\tvar pos = Context.currentPos ();\n\t\t\tvar fields = Context.getBuildFields ();\n\t\t\t\n\t\t\tvar args:Array<FunctionArg> = [];\n\t\t\tvar argName, argNames = [];\n\t\t\t\n\t\t\tfor (i in 0...typeArgs.length) {\n\t\t\t\t\n\t\t\t\tif (i == 0) {\n\t\t\t\t\t\n\t\t\t\t\targName = \"a\";\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\targName = \"a\" + i;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\targNames.push (Context.parse (argName, pos));\n\t\t\t\targs.push ({ name: argName, type: typeArgs[i].t.toComplexType () });\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar dispatch = macro {\n\t\t\t\t\n\t\t\t\tcanceled = false;\n\t\t\t\t\n\t\t\t\tvar listeners = __listeners;\n\t\t\t\tvar repeat = __repeat;\n\t\t\t\tvar i = 0;\n\t\t\t\t\n\t\t\t\twhile (i < listeners.length) {\n\t\t\t\t\t\n\t\t\t\t\tlisteners[i] ($a{argNames});\n\t\t\t\t\t\n\t\t\t\t\tif (!repeat[i]) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.remove (cast listeners[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (canceled) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar i = 0;\n\t\t\tvar field;\n\t\t\t\n\t\t\twhile (i < fields.length) {\n\t\t\t\t\n\t\t\t\tfield = fields[i];\n\t\t\t\t\n\t\t\t\tif (field.name == \"__listeners\" || field.name == \"dispatch\") {\n\t\t\t\t\t\n\t\t\t\t\tfields.remove (field);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ti++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfields.push ( { name: \"__listeners\", access: [ APublic ], kind: FVar (TPath ({ pack: [], name: \"Array\", params: [ TPType (typeParam.toComplexType ()) ] })), pos: pos } );\n\t\t\tfields.push ( { name: \"dispatch\", access: [ APublic ], kind: FFun ( { args: args, expr: dispatch, params: [], ret: macro :Void } ), pos: pos } );\n\t\t\t\n\t\t\tContext.defineType ({\n\t\t\t\t\n\t\t\t\tpos: pos,\n\t\t\t\tpack: [ \"lime\", \"app\" ],\n\t\t\t\tname: name,\n\t\t\t\tkind: TDClass (),\n\t\t\t\tfields: fields,\n\t\t\t\tparams: [ { name: \"T\" } ],\n\t\t\t\tmeta: [ { name: \":dox\", params: [ macro hide ], pos: pos }, { name: \":noCompletion\", pos: pos } ]\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t}\n\t\t\n\t\treturn TPath ( { pack: [ \"lime\", \"app\" ], name: name, params: [ TPType (typeParam.toComplexType ()) ] } ).toType ();\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function cancel ():Void {\n\t\t\n\t\tcanceled = true;\n\t\t\n\t}\n\t\n\t\n\tpublic var dispatch:Dynamic;\n\t\n\t//macro public function dispatch (ethis:Expr, args:Array<Expr>):Void {\n\t\t//\n\t\t//return macro {\n\t\t\t//\n\t\t\t//var listeners = $ethis.listeners;\n\t\t\t//var repeat = $ethis.repeat;\n\t\t\t//var i = 0;\n\t\t\t//\n\t\t\t//while (i < listeners.length) {\n\t\t\t\t//\n\t\t\t\t//listeners[i] ($a{args});\n\t\t\t\t//\n\t\t\t\t//if (!repeat[i]) {\n\t\t\t\t\t//\n\t\t\t\t\t//$ethis.remove (listeners[i]);\n\t\t\t\t\t//\n\t\t\t\t//} else {\n\t\t\t\t\t//\n\t\t\t\t\t//i++;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t//}\n\t\t\t//\n\t\t//}\n\t\t//\n\t//}\n\t\n\t\n\tpublic function has (listener:T):Bool {\n\t\t\n\t\t#if !macro\n\t\tfor (l in __listeners) {\n\t\t\t\n\t\t\tif (Reflect.compareMethods (l, listener)) return true;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function remove (listener:T):Void {\n\t\t\n\t\t#if !macro\n\t\tvar i = __listeners.length;\n\t\t\n\t\twhile (--i >= 0) {\n\t\t\t\n\t\t\tif (Reflect.compareMethods (__listeners[i], listener)) {\n\t\t\t\t\n\t\t\t\t__listeners.splice (i, 1);\n\t\t\t\t__priorities.splice (i, 1);\n\t\t\t\t__repeat.splice (i, 1);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.app;\n\n\nimport lime.app.Event;\nimport lime.Assets;\n\n#if (js && html5)\nimport js.html.Image;\nimport js.html.SpanElement;\nimport js.Browser;\nimport lime.net.HTTPRequest;\n#elseif flash\nimport flash.display.LoaderInfo;\nimport flash.display.Sprite;\nimport flash.events.ProgressEvent;\nimport flash.Lib;\n#end\n\n\nclass Preloader #if flash extends Sprite #end {\n\t\n\t\n\tpublic var complete:Bool;\n\tpublic var onComplete = new Event<Void->Void> ();\n\tpublic var onProgress = new Event<Int->Int->Void> ();\n\t\n\t#if (js && html5)\n\tpublic static var images = new Map<String, Image> ();\n\tpublic static var loaders = new Map<String, HTTPRequest> ();\n\tprivate var loaded = 0;\n\tprivate var total = 0;\n\t#end\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t#if flash\n\t\tsuper ();\n\t\t#end\n\t\t\n\t\tonProgress.add (update);\n\t\t\n\t}\n\t\n\t\n\tpublic function create (config:Config):Void {\n\t\t\n\t\t#if flash\n\t\tLib.current.addChild (this);\n\t\t\n\t\tLib.current.loaderInfo.addEventListener (flash.events.Event.COMPLETE, loaderInfo_onComplete);\n\t\tLib.current.loaderInfo.addEventListener (flash.events.Event.INIT, loaderInfo_onInit);\n\t\tLib.current.loaderInfo.addEventListener (ProgressEvent.PROGRESS, loaderInfo_onProgress);\n\t\tLib.current.addEventListener (flash.events.Event.ENTER_FRAME, current_onEnter);\n\t\t#end\n\t\t\n\t\t#if (!flash && !html5)\n\t\tstart ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function load (urls:Array<String>, types:Array<AssetType>):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tvar url = null;\n\t\tvar cacheVersion = Assets.cache.version;\n\t\t\n\t\tfor (i in 0...urls.length) {\n\t\t\t\n\t\t\turl = urls[i];\n\t\t\t\n\t\t\tswitch (types[i]) {\n\t\t\t\t\n\t\t\t\tcase IMAGE:\n\t\t\t\t\t\n\t\t\t\t\tif (!images.exists (url)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar image = new Image ();\n\t\t\t\t\t\timages.set (url, image);\n\t\t\t\t\t\timage.onload = image_onLoad;\n\t\t\t\t\t\timage.src = url + \"?\" + cacheVersion;\n\t\t\t\t\t\ttotal++;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase BINARY:\n\t\t\t\t\t\n\t\t\t\t\tif (!loaders.exists (url)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar loader = new HTTPRequest ();\n\t\t\t\t\t\tloaders.set (url, loader);\n\t\t\t\t\t\ttotal++;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase TEXT:\n\t\t\t\t\t\n\t\t\t\t\tif (!loaders.exists (url)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar loader = new HTTPRequest ();\n\t\t\t\t\t\tloaders.set (url, loader);\n\t\t\t\t\t\ttotal++;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase FONT:\n\t\t\t\t\t\n\t\t\t\t\ttotal++;\n\t\t\t\t\tloadFont (url);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (url in loaders.keys ()) {\n\t\t\t\n\t\t\tvar loader = loaders.get (url);\n\t\t\tvar future = loader.load (url + \"?\" + cacheVersion);\n\t\t\tfuture.onComplete (loader_onComplete);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (total == 0) {\n\t\t\t\n\t\t\tstart ();\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tprivate function loadFont (font:String):Void {\n\t\t\n\t\tif (untyped (Browser.document).fonts && untyped (Browser.document).fonts.load) {\n\t\t\t\n\t\t\tuntyped (Browser.document).fonts.load (\"1em '\" + font + \"'\").then (function (_) {\n\t\t\t\t\n\t\t\t\tloaded ++;\n\t\t\t\tonProgress.dispatch (loaded, total);\n\t\t\t\t\n\t\t\t\tif (loaded == total) {\n\t\t\t\t\t\n\t\t\t\t\tstart ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar node:SpanElement = cast Browser.document.createElement (\"span\");\n\t\t\tnode.innerHTML = \"giItT1WQy@!-/#\";\n\t\t\tvar style = node.style;\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.left = \"-10000px\";\n\t\t\tstyle.top = \"-10000px\";\n\t\t\tstyle.fontSize = \"300px\";\n\t\t\tstyle.fontFamily = \"sans-serif\";\n\t\t\tstyle.fontVariant = \"normal\";\n\t\t\tstyle.fontStyle = \"normal\";\n\t\t\tstyle.fontWeight = \"normal\";\n\t\t\tstyle.letterSpacing = \"0\";\n\t\t\tBrowser.document.body.appendChild (node);\n\t\t\t\n\t\t\tvar width = node.offsetWidth;\n\t\t\tstyle.fontFamily = \"'\" + font + \"', sans-serif\";\n\t\t\t\n\t\t\tvar interval:Null<Int> = null;\n\t\t\tvar found = false;\n\t\t\t\n\t\t\tvar checkFont = function () {\n\t\t\t\t\n\t\t\t\tif (node.offsetWidth != width) {\n\t\t\t\t\t\n\t\t\t\t\t// Test font was still not available yet, try waiting one more interval?\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tloaded ++;\n\t\t\t\t\t\n\t\t\t\t\tif (interval != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tBrowser.window.clearInterval (interval);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnode.parentNode.removeChild (node);\n\t\t\t\t\tnode = null;\n\t\t\t\t\t\n\t\t\t\t\tonProgress.dispatch (loaded, total);\n\t\t\t\t\t\n\t\t\t\t\tif (loaded == total) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tstart ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (!checkFont ()) {\n\t\t\t\t\n\t\t\t\tinterval = Browser.window.setInterval (checkFont, 50);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t#end\n\t\n\t\n\tprivate function start ():Void {\n\t\t\n\t\tcomplete = true;\n\t\t\n\t\t#if flash\n\t\tif (Lib.current.contains (this)) {\n\t\t\t\n\t\t\tLib.current.removeChild (this);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tonComplete.dispatch ();\n\t\t\n\t}\n\t\n\t\n\tprivate function update (loaded:Int, total:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\t#if (js && html5)\n\tprivate function image_onLoad (_):Void {\n\t\t\n\t\tloaded++;\n\t\t\n\t\tonProgress.dispatch (loaded, total);\n\t\t\n\t\tif (loaded == total) {\n\t\t\t\n\t\t\tstart ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function loader_onComplete (_):Void {\n\t\t\n\t\tloaded++;\n\t\t\n\t\tonProgress.dispatch (loaded, total);\n\t\t\n\t\tif (loaded == total) {\n\t\t\t\n\t\t\tstart ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if flash\n\tprivate function current_onEnter (event:flash.events.Event):Void {\n\t\t\n\t\tif (!complete && Lib.current.loaderInfo.bytesLoaded == Lib.current.loaderInfo.bytesTotal) {\n\t\t\t\n\t\t\tcomplete = true;\n\t\t\tonProgress.dispatch (Lib.current.loaderInfo.bytesLoaded, Lib.current.loaderInfo.bytesTotal);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (complete) {\n\t\t\t\n\t\t\tLib.current.removeEventListener (flash.events.Event.ENTER_FRAME, current_onEnter);\n\t\t\tLib.current.loaderInfo.removeEventListener (flash.events.Event.COMPLETE, loaderInfo_onComplete);\n\t\t\tLib.current.loaderInfo.removeEventListener (flash.events.Event.INIT, loaderInfo_onInit);\n\t\t\tLib.current.loaderInfo.removeEventListener (ProgressEvent.PROGRESS, loaderInfo_onProgress);\n\t\t\t\n\t\t\tstart ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function loaderInfo_onComplete (event:flash.events.Event):Void {\n\t\t\n\t\tcomplete = true;\n\t\tonProgress.dispatch (Lib.current.loaderInfo.bytesLoaded, Lib.current.loaderInfo.bytesTotal);\n\t\t\n\t}\n\t\n\t\n\tprivate function loaderInfo_onInit (event:flash.events.Event):Void {\n\t\t\n\t\tonProgress.dispatch (Lib.current.loaderInfo.bytesLoaded, Lib.current.loaderInfo.bytesTotal);\n\t\t\n\t}\n\t\n\t\n\tprivate function loaderInfo_onProgress (event:flash.events.ProgressEvent):Void {\n\t\t\n\t\tonProgress.dispatch (Lib.current.loaderInfo.bytesLoaded, Lib.current.loaderInfo.bytesTotal);\n\t\t\n\t}\n\t#end\n\t\n\t\n}","package lime._backend.html5;\n\n\nimport js.html.KeyboardEvent;\nimport js.Browser;\nimport lime.app.Application;\nimport lime.app.Config;\nimport lime.audio.AudioManager;\nimport lime.graphics.Renderer;\nimport lime.ui.GamepadAxis;\nimport lime.ui.KeyCode;\nimport lime.ui.KeyModifier;\nimport lime.ui.Gamepad;\nimport lime.ui.GamepadButton;\nimport lime.ui.Joystick;\nimport lime.ui.Window;\n\n@:access(lime._backend.html5.HTML5Window)\n@:access(lime.app.Application)\n@:access(lime.graphics.Renderer)\n@:access(lime.ui.Gamepad)\n@:access(lime.ui.Joystick)\n@:access(lime.ui.Window)\n\n\nclass HTML5Application {\n\t\n\t\n\tprivate var gameDeviceCache = new Map<Int, GameDeviceData> ();\n\t\n\tprivate var currentUpdate:Float;\n\tprivate var deltaTime:Float;\n\tprivate var framePeriod:Float;\n\tprivate var lastUpdate:Float;\n\tprivate var nextUpdate:Float;\n\tprivate var parent:Application;\n\t#if stats\n\tprivate var stats:Dynamic;\n\t#end\n\t\n\t\n\tpublic inline function new (parent:Application) {\n\t\t\n\t\tthis.parent = parent;\n\t\t\n\t\tcurrentUpdate = 0;\n\t\tlastUpdate = 0;\n\t\tnextUpdate = 0;\n\t\tframePeriod = -1;\n\t\t\n\t\tAudioManager.init ();\n\t\t\n\t}\n\t\n\t\n\tprivate function convertKeyCode (keyCode:Int):KeyCode {\n\t\t\n\t\tif (keyCode >= 65 && keyCode <= 90) {\n\t\t\t\n\t\t\treturn keyCode + 32;\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (keyCode) {\n\t\t\t\n\t\t\tcase 16: return KeyCode.LEFT_SHIFT;\n\t\t\tcase 17: return KeyCode.LEFT_CTRL;\n\t\t\tcase 18: return KeyCode.LEFT_ALT;\n\t\t\tcase 20: return KeyCode.CAPS_LOCK;\n\t\t\tcase 144: return KeyCode.NUM_LOCK;\n\t\t\tcase 37: return KeyCode.LEFT;\n\t\t\tcase 38: return KeyCode.UP;\n\t\t\tcase 39: return KeyCode.RIGHT;\n\t\t\tcase 40: return KeyCode.DOWN;\n\t\t\tcase 45: return KeyCode.INSERT;\n\t\t\tcase 46: return KeyCode.DELETE;\n\t\t\tcase 36: return KeyCode.HOME;\n\t\t\tcase 35: return KeyCode.END;\n\t\t\tcase 33: return KeyCode.PAGE_UP;\n\t\t\tcase 34: return KeyCode.PAGE_DOWN;\n\t\t\tcase 112: return KeyCode.F1;\n\t\t\tcase 113: return KeyCode.F2;\n\t\t\tcase 114: return KeyCode.F3;\n\t\t\tcase 115: return KeyCode.F4;\n\t\t\tcase 116: return KeyCode.F5;\n\t\t\tcase 117: return KeyCode.F6;\n\t\t\tcase 118: return KeyCode.F7;\n\t\t\tcase 119: return KeyCode.F8;\n\t\t\tcase 120: return KeyCode.F9;\n\t\t\tcase 121: return KeyCode.F10;\n\t\t\tcase 122: return KeyCode.F11;\n\t\t\tcase 123: return KeyCode.F12;\n\t\t\tcase 124: return KeyCode.F13;\n\t\t\tcase 125: return KeyCode.F14;\n\t\t\tcase 126: return KeyCode.F15;\n\t\t\tcase 186: return KeyCode.SEMICOLON;\n\t\t\tcase 187: return KeyCode.EQUALS;\n\t\t\tcase 188: return KeyCode.COMMA;\n\t\t\tcase 189: return KeyCode.MINUS;\n\t\t\tcase 190: return KeyCode.PERIOD;\n\t\t\tcase 191: return KeyCode.SLASH;\n\t\t\tcase 192: return KeyCode.GRAVE;\n\t\t\tcase 219: return KeyCode.LEFT_BRACKET;\n\t\t\tcase 220: return KeyCode.BACKSLASH;\n\t\t\tcase 221: return KeyCode.RIGHT_BRACKET;\n\t\t\tcase 222: return KeyCode.SINGLE_QUOTE;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn keyCode;\n\t\t\n\t}\n\t\n\t\n\tpublic function create (config:Config):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function exec ():Int {\n\t\t\n\t\tBrowser.window.addEventListener (\"keydown\", handleKeyEvent, false);\n\t\tBrowser.window.addEventListener (\"keyup\", handleKeyEvent, false);\n\t\tBrowser.window.addEventListener (\"focus\", handleWindowEvent, false);\n\t\tBrowser.window.addEventListener (\"blur\", handleWindowEvent, false);\n\t\tBrowser.window.addEventListener (\"resize\", handleWindowEvent, false);\n\t\tBrowser.window.addEventListener (\"beforeunload\", handleWindowEvent, false);\n\t\t\n\t\t#if stats\n\t\tstats = untyped __js__(\"new Stats ()\");\n\t\tstats.domElement.style.position = \"absolute\";\n\t\tstats.domElement.style.top = \"0px\";\n\t\tBrowser.document.body.appendChild (stats.domElement);\n\t\t#end\n\t\t\n\t\tuntyped __js__ (\"\n\t\t\tvar lastTime = 0;\n\t\t\tvar vendors = ['ms', 'moz', 'webkit', 'o'];\n\t\t\tfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t\t\t\twindow.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n\t\t\t\twindow.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\n\t\t\t}\n\t\t\t\n\t\t\tif (!window.requestAnimationFrame)\n\t\t\t\twindow.requestAnimationFrame = function(callback, element) {\n\t\t\t\t\tvar currTime = new Date().getTime();\n\t\t\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\t\t\tvar id = window.setTimeout(function() { callback(currTime + timeToCall); }, \n\t\t\t\t\t  timeToCall);\n\t\t\t\t\tlastTime = currTime + timeToCall;\n\t\t\t\t\treturn id;\n\t\t\t\t};\n\t\t\t\n\t\t\tif (!window.cancelAnimationFrame)\n\t\t\t\twindow.cancelAnimationFrame = function(id) {\n\t\t\t\t\tclearTimeout(id);\n\t\t\t\t};\n\t\t\t\n\t\t\twindow.requestAnimFrame = window.requestAnimationFrame;\n\t\t\");\n\t\t\n\t\tlastUpdate = Date.now ().getTime ();\n\t\t\n\t\thandleApplicationEvent ();\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function exit ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function getFrameRate ():Float {\n\t\t\n\t\tif (framePeriod < 0) {\n\t\t\t\n\t\t\treturn 60;\n\t\t\t\n\t\t} else if (framePeriod == 1000) {\n\t\t\t\n\t\t\treturn 0;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn 1000 / framePeriod;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleApplicationEvent (?__):Void {\n\t\t\n\t\tupdateGameDevices ();\n\t\t\n\t\tcurrentUpdate = Date.now ().getTime ();\n\t\t\n\t\tif (currentUpdate >= nextUpdate) {\n\t\t\t\n\t\t\t#if stats\n\t\t\tstats.begin ();\n\t\t\t#end\n\t\t\t\n\t\t\tdeltaTime = currentUpdate - lastUpdate;\n\t\t\t\n\t\t\tparent.onUpdate.dispatch (Std.int (deltaTime));\n\t\t\t\n\t\t\tif (parent.renderer != null) {\n\t\t\t\t\n\t\t\t\tparent.renderer.onRender.dispatch ();\n\t\t\t\tparent.renderer.flip ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#if stats\n\t\t\tstats.end ();\n\t\t\t#end\n\t\t\t\n\t\t\tif (framePeriod < 0) {\n\t\t\t\t\n\t\t\t\tnextUpdate = currentUpdate;\n\t\t\t\tnextUpdate = currentUpdate;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tnextUpdate = currentUpdate + framePeriod;\n\t\t\t\t\n\t\t\t\t//while (nextUpdate <= currentUpdate) {\n\t\t\t\t\t//\n\t\t\t\t\t//nextUpdate += framePeriod;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tlastUpdate = currentUpdate;\n\t\t\t\n\t\t}\n\t\t\n\t\tBrowser.window.requestAnimationFrame (cast handleApplicationEvent);\n\t\t\n\t}\n\t\n\t\n\tprivate function handleKeyEvent (event:KeyboardEvent):Void {\n\t\t\n\t\tif (parent.window != null) {\n\t\t\t\n\t\t\t// space and arrow keys\n\t\t\t\n\t\t\t// switch (event.keyCode) {\n\t\t\t\t\n\t\t\t// \tcase 32, 37, 38, 39, 40: event.preventDefault ();\n\t\t\t\t\n\t\t\t// }\n\t\t\t\n\t\t\tvar keyCode = cast convertKeyCode (event.keyCode != null ? event.keyCode : event.which);\n\t\t\tvar modifier = (event.shiftKey ? (KeyModifier.SHIFT) : 0) | (event.ctrlKey ? (KeyModifier.CTRL) : 0) | (event.altKey ? (KeyModifier.ALT) : 0) | (event.metaKey ? (KeyModifier.META) : 0);\n\t\t\t\n\t\t\tif (event.type == \"keydown\") {\n\t\t\t\t\n\t\t\t\tparent.window.onKeyDown.dispatch (keyCode, modifier);\n\t\t\t\t\n\t\t\t\tif (parent.window.onKeyDown.canceled) {\n\t\t\t\t\t\n\t\t\t\t\tevent.preventDefault ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tparent.window.onKeyUp.dispatch (keyCode, modifier);\n\t\t\t\t\n\t\t\t\tif (parent.window.onKeyUp.canceled) {\n\t\t\t\t\t\n\t\t\t\t\tevent.preventDefault ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleWindowEvent (event:js.html.Event):Void {\n\t\t\n\t\tif (parent.window != null) {\n\t\t\t\n\t\t\tswitch (event.type) {\n\t\t\t\t\n\t\t\t\tcase \"focus\":\n\t\t\t\t\t\n\t\t\t\t\tparent.window.onFocusIn.dispatch ();\n\t\t\t\t\tparent.window.onActivate.dispatch ();\n\t\t\t\t\n\t\t\t\tcase \"blur\":\n\t\t\t\t\t\n\t\t\t\t\tparent.window.onFocusOut.dispatch ();\n\t\t\t\t\tparent.window.onDeactivate.dispatch ();\n\t\t\t\t\n\t\t\t\tcase \"resize\":\n\t\t\t\t\t\n\t\t\t\t\tvar cacheWidth = parent.window.width;\n\t\t\t\t\tvar cacheHeight = parent.window.height;\n\t\t\t\t\t\n\t\t\t\t\tparent.window.backend.handleResize ();\n\t\t\t\t\t\n\t\t\t\t\tif (parent.window.width != cacheWidth || parent.window.height != cacheHeight) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparent.window.onResize.dispatch (parent.window.width, parent.window.height);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase \"beforeunload\":\n\t\t\t\t\t\n\t\t\t\t\tparent.window.onClose.dispatch ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function setFrameRate (value:Float):Float {\n\t\t\n\t\tif (value >= 60) {\n\t\t\t\n\t\t\tframePeriod = -1;\n\t\t\t\n\t\t} else if (value > 0) {\n\t\t\t\n\t\t\tframePeriod = 1000 / value;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tframePeriod = 1000;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function updateGameDevices ():Void {\n\t\t\n\t\tvar devices = Joystick.__getDeviceData ();\n\t\tif (devices == null) return;\n\t\t\n\t\tvar id, gamepad, joystick, data:Dynamic, cache;\n\t\t\n\t\tfor (i in 0...devices.length) {\n\t\t\t\n\t\t\tid = i;\n\t\t\tdata = devices[id];\n\t\t\t\n\t\t\tif (data == null) continue;\n\t\t\t\n\t\t\tif (!gameDeviceCache.exists (id)) {\n\t\t\t\t\n\t\t\t\tcache = new GameDeviceData ();\n\t\t\t\tcache.id = id;\n\t\t\t\tcache.connected = data.connected;\n\t\t\t\t\n\t\t\t\tfor (i in 0...data.buttons.length) {\n\t\t\t\t\t\n\t\t\t\t\tcache.buttons.push (data.buttons[i].value);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (i in 0...data.axes.length) {\n\t\t\t\t\t\n\t\t\t\t\tcache.axes.push (data.axes[i]);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (data.mapping == \"standard\") {\n\t\t\t\t\t\n\t\t\t\t\tcache.isGamepad = true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgameDeviceCache.set (id, cache);\n\t\t\t\t\n\t\t\t\tif (data.connected) {\n\t\t\t\t\t\n\t\t\t\t\tJoystick.__connect (id);\n\t\t\t\t\t\n\t\t\t\t\tif (cache.isGamepad) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tGamepad.__connect (id);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcache = gameDeviceCache.get (id);\n\t\t\t\n\t\t\tjoystick = Joystick.devices.get (id);\n\t\t\tgamepad = Gamepad.devices.get (id);\n\t\t\t\n\t\t\tif (data.connected) {\n\t\t\t\t\n\t\t\t\tvar button:GamepadButton;\n\t\t\t\tvar value:Float;\n\t\t\t\t\n\t\t\t\tfor (i in 0...data.buttons.length) {\n\t\t\t\t\t\n\t\t\t\t\tvalue = data.buttons[i].value;\n\t\t\t\t\t\n\t\t\t\t\tif (value != cache.buttons[i]) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (i == 6) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tjoystick.onAxisMove.dispatch (data.axes.length, value);\n\t\t\t\t\t\t\tif (gamepad != null) gamepad.onAxisMove.dispatch (GamepadAxis.TRIGGER_LEFT, value);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else if (i == 7) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tjoystick.onAxisMove.dispatch (data.axes.length + 1, value);\n\t\t\t\t\t\t\tif (gamepad != null) gamepad.onAxisMove.dispatch (GamepadAxis.TRIGGER_RIGHT, value);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (value > 0) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tjoystick.onButtonDown.dispatch (i);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tjoystick.onButtonUp.dispatch (i);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (gamepad != null) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tbutton = switch (i) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcase 0: GamepadButton.A;\n\t\t\t\t\t\t\t\t\tcase 1: GamepadButton.B;\n\t\t\t\t\t\t\t\t\tcase 2: GamepadButton.X;\n\t\t\t\t\t\t\t\t\tcase 3: GamepadButton.Y;\n\t\t\t\t\t\t\t\t\tcase 4: GamepadButton.LEFT_SHOULDER;\n\t\t\t\t\t\t\t\t\tcase 5: GamepadButton.RIGHT_SHOULDER;\n\t\t\t\t\t\t\t\t\tcase 8: GamepadButton.BACK;\n\t\t\t\t\t\t\t\t\tcase 9: GamepadButton.START;\n\t\t\t\t\t\t\t\t\tcase 10: GamepadButton.LEFT_STICK;\n\t\t\t\t\t\t\t\t\tcase 11: GamepadButton.RIGHT_STICK;\n\t\t\t\t\t\t\t\t\tcase 12: GamepadButton.DPAD_UP;\n\t\t\t\t\t\t\t\t\tcase 13: GamepadButton.DPAD_DOWN;\n\t\t\t\t\t\t\t\t\tcase 14: GamepadButton.DPAD_LEFT;\n\t\t\t\t\t\t\t\t\tcase 15: GamepadButton.DPAD_RIGHT;\n\t\t\t\t\t\t\t\t\tcase 16: GamepadButton.GUIDE;\n\t\t\t\t\t\t\t\t\tdefault: continue;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (value > 0) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tgamepad.onButtonDown.dispatch (button);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tgamepad.onButtonUp.dispatch (button);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcache.buttons[i] = value;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (i in 0...data.axes.length) {\n\t\t\t\t\t\n\t\t\t\t\tif (data.axes[i] != cache.axes[i]) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tjoystick.onAxisMove.dispatch (i, data.axes[i]);\n\t\t\t\t\t\tif (gamepad != null) gamepad.onAxisMove.dispatch (i, data.axes[i]);\n\t\t\t\t\t\tcache.axes[i] = data.axes[i];\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (cache.connected) {\n\t\t\t\t\n\t\t\t\tcache.connected = false;\n\t\t\t\t\n\t\t\t\tJoystick.__disconnect (id);\n\t\t\t\tGamepad.__disconnect (id);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass GameDeviceData {\n\t\n\t\n\tpublic var connected:Bool;\n\tpublic var id:Int;\n\tpublic var isGamepad:Bool;\n\tpublic var buttons:Array<Float>;\n\tpublic var axes:Array<Float>;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tconnected = true;\n\t\tbuttons = [];\n\t\taxes = [];\n\t\t\n\t}\n\t\n\t\n}","package lime._backend.html5;\n\n\nimport lime.app.Application;\nimport lime.ui.MouseCursor;\nimport lime.ui.Window;\n\n@:access(lime.app.Application)\n@:access(lime.ui.Window)\n\n\nclass HTML5Mouse {\n\t\n\t\n\tprivate static var __cursor:MouseCursor;\n\tprivate static var __hidden:Bool;\n\t\n\t\n\tpublic static function hide ():Void {\n\t\t\n\t\tif (!__hidden) {\n\t\t\t\n\t\t\t__hidden = true;\n\t\t\t\n\t\t\tfor (window in Application.current.windows) {\n\t\t\t\t\n\t\t\t\twindow.backend.element.style.cursor = \"none\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function show ():Void {\n\t\t\n\t\tif (__hidden) {\n\t\t\t\n\t\t\t__hidden = false;\n\t\t\t\n\t\t\tvar cacheValue = __cursor;\n\t\t\t__cursor = null;\n\t\t\tset_cursor (cacheValue);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function warp (x:Int, y:Int, window:Window):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tpublic static function get_cursor ():MouseCursor {\n\t\t\n\t\tif (__cursor == null) return DEFAULT;\n\t\treturn __cursor;\n\t\t\n\t}\n\t\n\t\n\tpublic static function set_cursor (value:MouseCursor):MouseCursor {\n\t\t\n\t\tif (__cursor != value) {\n\t\t\t\n\t\t\tif (!__hidden) {\n\t\t\t\t\n\t\t\t\tfor (window in Application.current.windows) {\n\t\t\t\t\t\n\t\t\t\t\twindow.backend.element.style.cursor = switch (value) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase ARROW: \"default\";\n\t\t\t\t\t\tcase CROSSHAIR: \"crosshair\";\n\t\t\t\t\t\tcase MOVE: \"move\";\n\t\t\t\t\t\tcase POINTER: \"pointer\";\n\t\t\t\t\t\tcase RESIZE_NESW: \"nesw-resize\";\n\t\t\t\t\t\tcase RESIZE_NS: \"ns-resize\";\n\t\t\t\t\t\tcase RESIZE_NWSE: \"nwse-resize\";\n\t\t\t\t\t\tcase RESIZE_WE: \"ew-resize\";\n\t\t\t\t\t\tcase TEXT: \"text\";\n\t\t\t\t\t\tcase WAIT: \"wait\";\n\t\t\t\t\t\tcase WAIT_ARROW: \"wait\";\n\t\t\t\t\t\tdefault: \"auto\";\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__cursor = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __cursor;\n\t\t\n\t}\n\t\n\t\n\tpublic static function get_lock ():Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic static function set_lock (value:Bool):Bool {\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime._backend.html5;\n\n\nimport haxe.macro.Compiler;\nimport js.html.webgl.RenderingContext;\nimport js.html.CanvasElement;\nimport js.Browser;\nimport lime.app.Application;\nimport lime.graphics.Image;\nimport lime.graphics.opengl.GL;\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.Renderer;\nimport lime.math.Rectangle;\n\n@:access(lime.app.Application)\n@:access(lime.graphics.opengl.GL)\n@:access(lime.graphics.Renderer)\n@:access(lime.ui.Window)\n\n\nclass HTML5Renderer {\n\t\n\t\n\tprivate var parent:Renderer;\n\t\n\t\n\tpublic function new (parent:Renderer) {\n\t\t\n\t\tthis.parent = parent;\n\t\t\n\t}\n\t\n\t\n\tpublic function create ():Void {\n\t\t\n\t\tcreateContext ();\n\t\t\n\t\tswitch (parent.context) {\n\t\t\t\n\t\t\tcase OPENGL (_):\n\t\t\t\t\n\t\t\t\tparent.window.backend.canvas.addEventListener (\"webglcontextlost\", handleEvent, false);\n\t\t\t\tparent.window.backend.canvas.addEventListener (\"webglcontextrestored\", handleEvent, false);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function createContext ():Void {\n\t\t\n\t\tif (parent.window.backend.div != null) {\n\t\t\t\n\t\t\tparent.context = DOM (cast parent.window.backend.div);\n\t\t\tparent.type = DOM;\n\t\t\t\n\t\t} else if (parent.window.backend.canvas != null) {\n\t\t\t\n\t\t\tvar webgl:RenderingContext = null;\n\t\t\t\n\t\t\tif (#if (canvas || munit) false #elseif webgl true #else !Reflect.hasField (parent.window.config, \"hardware\") || parent.window.config.hardware #end) {\n\t\t\t\t\n\t\t\t\tvar options = {\n\t\t\t\t\t\n\t\t\t\t\talpha: false,\n\t\t\t\t\tantialias: Reflect.hasField (parent.window.config, \"antialiasing\") ? parent.window.config.antialiasing > 0 : false,\n\t\t\t\t\tdepth: Reflect.hasField (parent.window.config, \"depthBuffer\") ? parent.window.config.depthBuffer : true,\n\t\t\t\t\tpremultipliedAlpha: false,\n\t\t\t\t\tstencil: Reflect.hasField (parent.window.config, \"stencilBuffer\") ? parent.window.config.stencilBuffer : false,\n\t\t\t\t\tpreserveDrawingBuffer: false\n\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\twebgl = cast parent.window.backend.canvas.getContextWebGL (options);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (webgl == null) {\n\t\t\t\t\n\t\t\t\tparent.context = CANVAS (cast parent.window.backend.canvas.getContext (\"2d\"));\n\t\t\t\tparent.type = CANVAS;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t#if debug\n\t\t\t\twebgl = untyped WebGLDebugUtils.makeDebugContext (webgl);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tGL.context = webgl;\n\t\t\t\t#if (js && html5)\n\t\t\t\tparent.context = OPENGL (cast GL.context);\n\t\t\t\t#else\n\t\t\t\tparent.context = OPENGL (new GLRenderContext ());\n\t\t\t\t#end\n\t\t\t\tparent.type = OPENGL;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function flip ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate function handleEvent (event:js.html.Event):Void {\n\t\t\n\t\tswitch (event.type) {\n\t\t\t\n\t\t\tcase \"webglcontextlost\":\n\t\t\t\t\n\t\t\t\tevent.preventDefault ();\n\t\t\t\tparent.context = null;\n\t\t\t\t\n\t\t\t\tparent.onContextLost.dispatch ();\n\t\t\t\t\n\t\t\tcase \"webglcontextrestored\":\n\t\t\t\t\n\t\t\t\tcreateContext ();\n\t\t\t\t\n\t\t\t\tparent.onContextRestored.dispatch (parent.context);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function readPixels (rect:Rectangle):Image {\n\t\t\n\t\t// TODO: Handle DIV, improve 3D canvas support\n\t\t\n\t\tif (parent.window.backend.canvas != null) {\n\t\t\t\n\t\t\tif (rect == null) {\n\t\t\t\t\n\t\t\t\trect = new Rectangle (0, 0, parent.window.backend.canvas.width, parent.window.backend.canvas.height);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\trect.__contract (0, 0, parent.window.backend.canvas.width, parent.window.backend.canvas.height);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (rect.width > 0 && rect.height > 0) {\n\t\t\t\t\n\t\t\t\tvar canvas:CanvasElement = cast Browser.document.createElement (\"canvas\");\n\t\t\t\tcanvas.width = Std.int (rect.width);\n\t\t\t\tcanvas.height = Std.int (rect.height);\n\t\t\t\t\n\t\t\t\tvar context = canvas.getContext (\"2d\");\n\t\t\t\tcontext.drawImage (parent.window.backend.canvas, -rect.x, -rect.y);\n\t\t\t\t\n\t\t\t\treturn Image.fromCanvas (canvas);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function render ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package lime._backend.html5;\n\n\nimport haxe.Timer;\nimport js.html.CanvasElement;\nimport js.html.DivElement;\n#if (haxe_ver >= 3.2)\nimport js.html.Element;\nimport js.html.FocusEvent;\nimport js.html.InputElement;\nimport js.html.InputEvent;\n#else\nimport js.html.HtmlElement;\n#end\nimport js.html.MouseEvent;\nimport js.html.TouchEvent;\nimport js.Browser;\nimport lime.app.Application;\nimport lime.graphics.Image;\nimport lime.system.Display;\nimport lime.system.System;\nimport lime.ui.Gamepad;\nimport lime.ui.Joystick;\nimport lime.ui.Touch;\nimport lime.ui.Window;\n\n#if (haxe_ver < 3.2)\ntypedef FocusEvent = js.html.Event;\ntypedef InputElement = Dynamic;\ntypedef InputEvent = js.html.Event;\n#end\n\n@:access(lime.app.Application)\n@:access(lime.ui.Gamepad)\n@:access(lime.ui.Joystick)\n@:access(lime.ui.Window)\n\n\nclass HTML5Window {\n\t\n\t\n\tprivate static var textInput:InputElement;\n\tprivate static var windowID:Int = 0;\n\t\n\tpublic var canvas:CanvasElement;\n\tpublic var div:DivElement;\n\tpublic var element:#if (haxe_ver >= \"3.2\") Element #else HtmlElement #end;\n\t#if stats\n\tpublic var stats:Dynamic;\n\t#end\n\t\n\tprivate var currentTouches = new Map<Int, Touch> ();\n\tprivate var enableTextEvents:Bool;\n\tprivate var parent:Window;\n\tprivate var primaryTouch:Touch;\n\tprivate var setHeight:Int;\n\tprivate var setWidth:Int;\n\tprivate var unusedTouchesPool = new List<Touch> ();\n\t\n\t\n\tpublic function new (parent:Window) {\n\t\t\n\t\tthis.parent = parent;\n\t\t\n\t\tif (parent.config != null && Reflect.hasField (parent.config, \"element\")) {\n\t\t\t\n\t\t\telement = parent.config.element;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function alert (message:String, title:String):Void {\n\t\t\n\t\tif (message != null) {\n\t\t\t\n\t\t\t#if (haxe_ver >= 3.2)\n\t\t\tBrowser.alert (message);\n\t\t\t#else\n\t\t\tjs.Lib.alert (message);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function close ():Void {\n\t\t\n\t\tparent.application.removeWindow (parent);\n\t\t\n\t}\n\t\n\t\n\tpublic function create (application:Application):Void {\n\t\t\n\t\tsetWidth = parent.width;\n\t\tsetHeight = parent.height;\n\t\t\n\t\tparent.id = windowID++;\n\t\t\n\t\tif (Std.is (element, CanvasElement)) {\n\t\t\t\n\t\t\tcanvas = cast element;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if dom\n\t\t\tdiv = cast Browser.document.createElement (\"div\");\n\t\t\t#else\n\t\t\tcanvas = cast Browser.document.createElement (\"canvas\");\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\tif (canvas != null) {\n\t\t\t\n\t\t\tvar style = canvas.style;\n\t\t\tstyle.setProperty (\"-webkit-transform\", \"translateZ(0)\", null);\n\t\t\tstyle.setProperty (\"transform\", \"translateZ(0)\", null);\n\t\t\t\n\t\t} else if (div != null) {\n\t\t\t\n\t\t\tvar style = div.style;\n\t\t\tstyle.setProperty (\"-webkit-transform\", \"translate3D(0,0,0)\", null);\n\t\t\tstyle.setProperty (\"transform\", \"translate3D(0,0,0)\", null);\n\t\t\t//style.setProperty (\"-webkit-transform-style\", \"preserve-3d\", null);\n\t\t\t//style.setProperty (\"transform-style\", \"preserve-3d\", null);\n\t\t\tstyle.position = \"relative\";\n\t\t\tstyle.overflow = \"hidden\";\n\t\t\tstyle.setProperty (\"-webkit-user-select\", \"none\", null);\n\t\t\tstyle.setProperty (\"-moz-user-select\", \"none\", null);\n\t\t\tstyle.setProperty (\"-ms-user-select\", \"none\", null);\n\t\t\tstyle.setProperty (\"-o-user-select\", \"none\", null);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (parent.width == 0 && parent.height == 0) {\n\t\t\t\n\t\t\tif (element != null) {\n\t\t\t\t\n\t\t\t\tparent.width = element.clientWidth;\n\t\t\t\tparent.height = element.clientHeight;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tparent.width = Browser.window.innerWidth;\n\t\t\t\tparent.height = Browser.window.innerHeight;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tparent.fullscreen = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (canvas != null) {\n\t\t\t\n\t\t\tcanvas.width = parent.width;\n\t\t\tcanvas.height = parent.height;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tdiv.style.width = parent.width + \"px\";\n\t\t\tdiv.style.height = parent.height + \"px\";\n\t\t\t\n\t\t}\n\t\t\n\t\thandleResize ();\n\t\t\n\t\tif (element != null) {\n\t\t\t\n\t\t\tif (canvas != null) {\n\t\t\t\t\n\t\t\t\tif (element != cast canvas) {\n\t\t\t\t\t\n\t\t\t\t\telement.appendChild (canvas);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\telement.appendChild (div);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar events = [ \"mousedown\", \"mouseenter\", \"mouseleave\", \"mousemove\", \"mouseup\", \"wheel\" ];\n\t\t\t\n\t\t\tfor (event in events) {\n\t\t\t\t\n\t\t\t\telement.addEventListener (event, handleMouseEvent, true);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// Disable image drag on Firefox\n\t\t\tBrowser.document.addEventListener (\"dragstart\", function (e) {\n\t\t\t\tif (e.target.nodeName.toLowerCase () == \"img\") {\n\t\t\t\t\te.preventDefault ();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}, false);\n\t\t\t\n\t\t\telement.addEventListener (\"touchstart\", handleTouchEvent, true);\n\t\t\telement.addEventListener (\"touchmove\", handleTouchEvent, true);\n\t\t\telement.addEventListener (\"touchend\", handleTouchEvent, true);\n\t\t\t\n\t\t\telement.addEventListener (\"gamepadconnected\", handleGamepadEvent, true);\n\t\t\telement.addEventListener (\"gamepaddisconnected\", handleGamepadEvent, true);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function focus ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function getDisplay ():Display {\n\t\t\n\t\treturn System.getDisplay (0);\n\t\t\n\t}\n\t\n\t\n\tpublic function getEnableTextEvents ():Bool {\n\t\t\n\t\treturn enableTextEvents;\n\t\t\n\t}\n\t\n\t\n\tprivate function handleFocusEvent (event:FocusEvent):Void {\n\t\t\n\t\tif (enableTextEvents) {\n\t\t\t\n\t\t\tTimer.delay (function () { textInput.focus (); }, 20);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleGamepadEvent (event:Dynamic):Void {\n\t\t\n\t\tswitch (event.type) {\n\t\t\t\n\t\t\tcase \"gamepadconnected\":\n\t\t\t\t\n\t\t\t\tJoystick.__connect (event.gamepad.index);\n\t\t\t\t\n\t\t\t\tif (event.gamepad.mapping == \"standard\") {\n\t\t\t\t\t\n\t\t\t\t\tGamepad.__connect (event.gamepad.index);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase \"gamepaddisconnected\":\n\t\t\t\t\n\t\t\t\tJoystick.__disconnect (event.gamepad.index);\n\t\t\t\tGamepad.__disconnect (event.gamepad.index);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleInputEvent (event:InputEvent):Void {\n\t\t\n\t\tif (textInput.value != \"\") {\n\t\t\t\n\t\t\tparent.onTextInput.dispatch (textInput.value);\n\t\t\ttextInput.value = \"\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleMouseEvent (event:MouseEvent):Void {\n\t\t\n\t\tvar x = 0.0;\n\t\tvar y = 0.0;\n\t\t\n\t\tif (event.type != \"wheel\") {\n\t\t\t\n\t\t\tif (element != null) {\n\t\t\t\t\n\t\t\t\tif (canvas != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar rect = canvas.getBoundingClientRect ();\n\t\t\t\t\tx = (event.clientX - rect.left) * (parent.width / rect.width);\n\t\t\t\t\ty = (event.clientY - rect.top) * (parent.height / rect.height);\n\t\t\t\t\t\n\t\t\t\t} else if (div != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar rect = div.getBoundingClientRect ();\n\t\t\t\t\t//x = (event.clientX - rect.left) * (window.backend.div.style.width / rect.width);\n\t\t\t\t\tx = (event.clientX - rect.left);\n\t\t\t\t\t//y = (event.clientY - rect.top) * (window.backend.div.style.height / rect.height);\n\t\t\t\t\ty = (event.clientY - rect.top);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tvar rect = element.getBoundingClientRect ();\n\t\t\t\t\tx = (event.clientX - rect.left) * (parent.width / rect.width);\n\t\t\t\t\ty = (event.clientY - rect.top) * (parent.height / rect.height);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tx = event.clientX;\n\t\t\t\ty = event.clientY;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tswitch (event.type) {\n\t\t\t\t\n\t\t\t\tcase \"mousedown\":\n\t\t\t\t\t\n\t\t\t\t\tparent.onMouseDown.dispatch (x, y, event.button);\n\t\t\t\t\n\t\t\t\tcase \"mouseenter\":\n\t\t\t\t\t\n\t\t\t\t\tparent.onEnter.dispatch ();\n\t\t\t\t\n\t\t\t\tcase \"mouseleave\":\n\t\t\t\t\t\n\t\t\t\t\tparent.onLeave.dispatch ();\n\t\t\t\t\n\t\t\t\tcase \"mouseup\":\n\t\t\t\t\t\n\t\t\t\t\tparent.onMouseUp.dispatch (x, y, event.button);\n\t\t\t\t\n\t\t\t\tcase \"mousemove\":\n\t\t\t\t\t\n\t\t\t\t\tparent.onMouseMove.dispatch (x, y);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tparent.onMouseWheel.dispatch (untyped event.deltaX, - untyped event.deltaY);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleResize ():Void {\n\t\t\n\t\tvar stretch = parent.fullscreen || (setWidth == 0 && setHeight == 0);\n\t\t\n\t\tif (element != null && (div == null || (div != null && stretch))) {\n\t\t\t\n\t\t\tif (stretch) {\n\t\t\t\t\n\t\t\t\tif (parent.width != element.clientWidth || parent.height != element.clientHeight) {\n\t\t\t\t\t\n\t\t\t\t\tparent.width = element.clientWidth;\n\t\t\t\t\tparent.height = element.clientHeight;\n\t\t\t\t\t\n\t\t\t\t\tif (canvas != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (element != cast canvas) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcanvas.width = element.clientWidth;\n\t\t\t\t\t\t\tcanvas.height = element.clientHeight;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tdiv.style.width = element.clientWidth + \"px\";\n\t\t\t\t\t\tdiv.style.height = element.clientHeight + \"px\";\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar scaleX = element.clientWidth / setWidth;\n\t\t\t\tvar scaleY = element.clientHeight / setHeight;\n\t\t\t\t\n\t\t\t\tvar currentRatio = scaleX / scaleY;\n\t\t\t\tvar targetRatio = Math.min (scaleX, scaleY);\n\t\t\t\t\n\t\t\t\tif (canvas != null) {\n\t\t\t\t\t\n\t\t\t\t\tif (element != cast canvas) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcanvas.style.width = setWidth * targetRatio + \"px\";\n\t\t\t\t\t\tcanvas.style.height = setHeight * targetRatio + \"px\";\n\t\t\t\t\t\tcanvas.style.marginLeft = ((element.clientWidth - (setWidth * targetRatio)) / 2) + \"px\";\n\t\t\t\t\t\tcanvas.style.marginTop = ((element.clientHeight - (setHeight * targetRatio)) / 2) + \"px\";\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tdiv.style.width = setWidth * targetRatio + \"px\";\n\t\t\t\t\tdiv.style.height = setHeight * targetRatio + \"px\";\n\t\t\t\t\tdiv.style.marginLeft = ((element.clientWidth - (setWidth * targetRatio)) / 2) + \"px\";\n\t\t\t\t\tdiv.style.marginTop = ((element.clientHeight - (setHeight * targetRatio)) / 2) + \"px\";\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleTouchEvent (event:TouchEvent):Void {\n\t\t\n\t\tevent.preventDefault ();\n\t\t\n\t\tvar rect = null;\n\t\t\n\t\tif (element != null) {\n\t\t\t\n\t\t\tif (canvas != null) {\n\t\t\t\t\n\t\t\t\trect = canvas.getBoundingClientRect ();\n\t\t\t\t\n\t\t\t} else if (div != null) {\n\t\t\t\t\n\t\t\t\trect = div.getBoundingClientRect ();\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\trect = element.getBoundingClientRect ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar windowWidth:Float = setWidth;\n\t\tvar windowHeight:Float = setHeight;\n\t\t\n\t\tif (windowWidth == 0 || windowHeight == 0) {\n\t\t\t\n\t\t\tif (rect != null) {\n\t\t\t\t\n\t\t\t\twindowWidth = rect.width;\n\t\t\t\twindowHeight = rect.height;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\twindowWidth = 1;\n\t\t\t\twindowHeight = 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (data in event.changedTouches) {\n\t\t\t\n\t\t\tvar x = 0.0;\n\t\t\tvar y = 0.0;\n\t\t\t\n\t\t\tif (rect != null) {\n\t\t\t\t\n\t\t\t\tx = (data.clientX - rect.left) * (windowWidth / rect.width);\n\t\t\t\ty = (data.clientY - rect.top) * (windowHeight / rect.height);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tx = data.clientX;\n\t\t\t\ty = data.clientY;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tswitch (event.type) {\n\t\t\t\t\n\t\t\t\tcase \"touchstart\":\n\t\t\t\t\t\n\t\t\t\t\tvar touch = unusedTouchesPool.pop ();\n\t\t\t\t\t\n\t\t\t\t\tif (touch == null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttouch = new Touch (x / windowWidth, y / windowHeight, data.identifier, 0, 0, data.force, parent.id);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttouch.x = x / windowWidth;\n\t\t\t\t\t\ttouch.y = y / windowHeight;\n\t\t\t\t\t\ttouch.id = data.identifier;\n\t\t\t\t\t\ttouch.dx = 0;\n\t\t\t\t\t\ttouch.dy = 0;\n\t\t\t\t\t\ttouch.pressure = data.force;\n\t\t\t\t\t\ttouch.device = parent.id;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcurrentTouches.set (data.identifier, touch);\n\t\t\t\t\t\n\t\t\t\t\tTouch.onStart.dispatch (touch);\n\t\t\t\t\t\n\t\t\t\t\tif (primaryTouch == null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tprimaryTouch = touch;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (touch == primaryTouch) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparent.onMouseDown.dispatch (x, y, 0);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase \"touchend\":\n\t\t\t\t\t\n\t\t\t\t\tvar touch = currentTouches.get (data.identifier);\n\t\t\t\t\t\n\t\t\t\t\tif (touch != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar cacheX = touch.x;\n\t\t\t\t\t\tvar cacheY = touch.y;\n\t\t\t\t\t\t\n\t\t\t\t\t\ttouch.x = x / windowWidth;\n\t\t\t\t\t\ttouch.y = y / windowHeight;\n\t\t\t\t\t\ttouch.dx = touch.x - cacheX;\n\t\t\t\t\t\ttouch.dy = touch.y - cacheY;\n\t\t\t\t\t\ttouch.pressure = data.force;\n\t\t\t\t\t\t\n\t\t\t\t\t\tTouch.onEnd.dispatch (touch);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcurrentTouches.remove (data.identifier);\n\t\t\t\t\t\tunusedTouchesPool.add (touch);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (touch == primaryTouch) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tparent.onMouseUp.dispatch (x, y, 0);\n\t\t\t\t\t\t\tprimaryTouch = null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase \"touchmove\":\n\t\t\t\t\t\n\t\t\t\t\tvar touch = currentTouches.get (data.identifier);\n\t\t\t\t\t\n\t\t\t\t\tif (touch != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar cacheX = touch.x;\n\t\t\t\t\t\tvar cacheY = touch.y;\n\t\t\t\t\t\t\n\t\t\t\t\t\ttouch.x = x / windowWidth;\n\t\t\t\t\t\ttouch.y = y / windowHeight;\n\t\t\t\t\t\ttouch.dx = touch.x - cacheX;\n\t\t\t\t\t\ttouch.dy = touch.y - cacheY;\n\t\t\t\t\t\ttouch.pressure = data.force;\n\t\t\t\t\t\t\n\t\t\t\t\t\tTouch.onMove.dispatch (touch);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (touch == primaryTouch) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tparent.onMouseMove.dispatch (x, y);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function move (x:Int, y:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function resize (width:Int, height:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function setBorderless (value:Bool):Bool {\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tpublic function setEnableTextEvents (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tif (textInput == null) {\n\t\t\t\t\n\t\t\t\ttextInput = cast Browser.document.createElement ('input');\n\t\t\t\ttextInput.type = 'text';\n\t\t\t\ttextInput.style.position = 'absolute';\n\t\t\t\ttextInput.style.opacity = \"0\";\n\t\t\t\ttextInput.style.color = \"transparent\";\n\t\t\t\ttextInput.value = \"\";\n\t\t\t\t\n\t\t\t\tuntyped textInput.autocapitalize = \"off\";\n\t\t\t\tuntyped textInput.autocorrect = \"off\";\n\t\t\t\ttextInput.autocomplete = \"off\";\n\t\t\t\t\n\t\t\t\t// TODO: Position for mobile browsers better\n\t\t\t\t\n\t\t\t\ttextInput.style.left = \"0px\";\n\t\t\t\ttextInput.style.top = \"50%\";\n\t\t\t\t\n\t\t\t\tif (~/(iPad|iPhone|iPod).*OS 8_/gi.match (Browser.window.navigator.userAgent)) {\n\t\t\t\t\t\n\t\t\t\t\ttextInput.style.fontSize = \"0px\";\n\t\t\t\t\ttextInput.style.width = '0px';\n\t\t\t\t\ttextInput.style.height = '0px';\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttextInput.style.width = '1px';\n\t\t\t\t\ttextInput.style.height = '1px';\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tuntyped (textInput.style).pointerEvents = 'none';\n\t\t\t\ttextInput.style.zIndex = \"-10000000\";\n\t\t\t\t\n\t\t\t\tBrowser.document.body.appendChild (textInput);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (!enableTextEvents) {\n\t\t\t\t\n\t\t\t\ttextInput.addEventListener ('input', handleInputEvent, true);\n\t\t\t\ttextInput.addEventListener ('blur', handleFocusEvent, true);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\ttextInput.focus ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (textInput != null) {\n\t\t\t\t\n\t\t\t\ttextInput.removeEventListener ('input', handleInputEvent, true);\n\t\t\t\ttextInput.removeEventListener ('blur', handleFocusEvent, true);\n\t\t\t\t\n\t\t\t\ttextInput.blur ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn enableTextEvents = value;\n\t\t\n\t}\n\t\n\t\n\tpublic function setFullscreen (value:Bool):Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function setIcon (image:Image):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function setMinimized (value:Bool):Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function setResizable (value:Bool):Bool {\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tpublic function setTitle (value:String):String {\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.app;\n\n\nimport lime.graphics.RenderContext;\nimport lime.graphics.Renderer;\nimport lime.ui.Gamepad;\nimport lime.ui.GamepadAxis;\nimport lime.ui.GamepadButton;\nimport lime.ui.Joystick;\nimport lime.ui.JoystickHatPosition;\nimport lime.ui.KeyCode;\nimport lime.ui.KeyModifier;\nimport lime.ui.Touch;\nimport lime.ui.Window;\n\n\nclass Module implements IModule {\n\t\n\t\n\t/**\n\t * Exit events are dispatched when the application is exiting\n\t */\n\tpublic var onExit = new Event<Int->Void> ();\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Called when a gamepad axis move event is fired\n\t * @param\tgamepad\tThe current gamepad\n\t * @param\taxis\tThe axis that was moved\n\t * @param\tvalue\tThe axis value (between 0 and 1)\n\t */\n\tpublic function onGamepadAxisMove (gamepad:Gamepad, axis:GamepadAxis, value:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a gamepad button down event is fired\n\t * @param\tgamepad\tThe current gamepad\n\t * @param\tbutton\tThe button that was pressed\n\t */\n\tpublic function onGamepadButtonDown (gamepad:Gamepad, button:GamepadButton):Void { }\n\t\n\t\n\t/**\n\t * Called when a gamepad button up event is fired\n\t * @param\tgamepad\tThe current gamepad\n\t * @param\tbutton\tThe button that was released\n\t */\n\tpublic function onGamepadButtonUp (gamepad:Gamepad, button:GamepadButton):Void { }\n\t\n\t\n\t/**\n\t * Called when a gamepad is connected\n\t * @param\tgamepad\tThe gamepad that was connected\n\t */\n\tpublic function onGamepadConnect (gamepad:Gamepad):Void {\n\t\t\n\t\ttrace (\"onGamepadConnect (module)\");\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Called when a gamepad is disconnected\n\t * @param\tgamepad\tThe gamepad that was disconnected\n\t */\n\tpublic function onGamepadDisconnect (gamepad:Gamepad):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick axis move event is fired\n\t * @param\tjoystick\tThe current joystick\n\t * @param\taxis\tThe axis that was moved\n\t * @param\tvalue\tThe axis value (between 0 and 1)\n\t */\n\tpublic function onJoystickAxisMove (joystick:Joystick, axis:Int, value:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick button down event is fired\n\t * @param\tjoystick\tThe current joystick\n\t * @param\tbutton\tThe button that was pressed\n\t */\n\tpublic function onJoystickButtonDown (joystick:Joystick, button:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick button up event is fired\n\t * @param\tjoystick\tThe current joystick\n\t * @param\tbutton\tThe button that was released\n\t */\n\tpublic function onJoystickButtonUp (joystick:Joystick, button:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick is connected\n\t * @param\tjoystick\tThe joystick that was connected\n\t */\n\tpublic function onJoystickConnect (joystick:Joystick):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick is disconnected\n\t * @param\tjoystick\tThe joystick that was disconnected\n\t */\n\tpublic function onJoystickDisconnect (joystick:Joystick):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick hat move event is fired\n\t * @param\tjoystick\tThe current joystick\n\t * @param\that\tThe hat that was moved\n\t * @param\tposition\tThe current hat position\n\t */\n\tpublic function onJoystickHatMove (joystick:Joystick, hat:Int, position:JoystickHatPosition):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick axis move event is fired\n\t * @param\tjoystick\tThe current joystick\n\t * @param\ttrackball\tThe trackball that was moved\n\t * @param\tvalue\tThe trackball value (between 0 and 1)\n\t */\n\tpublic function onJoystickTrackballMove (joystick:Joystick, trackball:Int, value:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a key down event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tkeyCode\tThe code of the key that was pressed\n\t * @param\tmodifier\tThe modifier of the key that was pressed\n\t */\n\tpublic function onKeyDown (window:Window, keyCode:KeyCode, modifier:KeyModifier):Void { }\n\t\n\t\n\t/**\n\t * Called when a key up event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tkeyCode\tThe code of the key that was released\n\t * @param\tmodifier\tThe modifier of the key that was released\n\t */\n\tpublic function onKeyUp (window:Window, keyCode:KeyCode, modifier:KeyModifier):Void { }\n\t\n\t\n\t/**\n\t * Called when the module is exiting\n\t */\n\tpublic function onModuleExit (code:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse down event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tx\tThe current x coordinate of the mouse\n\t * @param\ty\tThe current y coordinate of the mouse\n\t * @param\tbutton\tThe ID of the mouse button that was pressed\n\t */\n\tpublic function onMouseDown (window:Window, x:Float, y:Float, button:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse move event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tx\tThe current x coordinate of the mouse\n\t * @param\ty\tThe current y coordinate of the mouse\n\t * @param\tbutton\tThe ID of the mouse button that was pressed\n\t */\n\tpublic function onMouseMove (window:Window, x:Float, y:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse move relative event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tx\tThe x movement of the mouse\n\t * @param\ty\tThe y movement of the mouse\n\t * @param\tbutton\tThe ID of the mouse button that was pressed\n\t */\n\tpublic function onMouseMoveRelative (window:Window, x:Float, y:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse up event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tx\tThe current x coordinate of the mouse\n\t * @param\ty\tThe current y coordinate of the mouse\n\t * @param\tbutton\tThe ID of the button that was released\n\t */\n\tpublic function onMouseUp (window:Window, x:Float, y:Float, button:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse wheel event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tdeltaX\tThe amount of horizontal scrolling (if applicable)\n\t * @param\tdeltaY\tThe amount of vertical scrolling (if applicable)\n\t */\n\tpublic function onMouseWheel (window:Window, deltaX:Float, deltaY:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a preload complete event is fired\n\t */\n\tpublic function onPreloadComplete ():Void { }\n\t\n\t\n\t/**\n\t * Called when a preload progress event is fired\n\t * @param\tloaded\tThe number of items that are loaded\n\t * @param\ttotal\tThe total number of items will be loaded\n\t */\n\tpublic function onPreloadProgress (loaded:Int, total:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a render context is lost\n\t * @param\trenderer\tThe renderer dispatching the event\n\t */\n\tpublic function onRenderContextLost (renderer:Renderer):Void { }\n\t\n\t\n\t/**\n\t * Called when a render context is restored\n\t * @param\trenderer\tThe renderer dispatching the event\n\t * @param\tcontext\tThe current render context\n\t */\n\tpublic function onRenderContextRestored (renderer:Renderer, context:RenderContext):Void { }\n\t\n\t\n\t/**\n\t * Called when a text edit event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\ttext\tThe current replacement text\n\t * @param\tstart\tThe starting index for the edit\n\t * @param\tlength\tThe length of the edit\n\t */\n\tpublic function onTextEdit (window:Window, text:String, start:Int, length:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a text input event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\ttext\tThe current input text\n\t */\n\tpublic function onTextInput (window:Window, text:String):Void { }\n\t\n\t\n\t/**\n\t * Called when a touch end event is fired\n\t * @param\ttouch\tThe current touch object\n\t */\n\tpublic function onTouchEnd (touch:Touch):Void { }\n\t\n\t\n\t/**\n\t * Called when a touch move event is fired\n\t * @param\ttouch\tThe current touch object\n\t */\n\tpublic function onTouchMove (touch:Touch):Void { }\n\t\n\t\n\t/**\n\t * Called when a touch start event is fired\n\t * @param\ttouch\tThe current touch object\n\t */\n\tpublic function onTouchStart (touch:Touch):Void { }\n\t\n\t\n\t/**\n\t * Called when a window activate event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowActivate (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window close event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowClose (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window create event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowCreate (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window deactivate event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowDeactivate (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window enter event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowEnter (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window focus in event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowFocusIn (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window focus out event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowFocusOut (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window enters fullscreen\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowFullscreen (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window leave event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowLeave (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window move event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tx\tThe x position of the window in desktop coordinates\n\t * @param\ty\tThe y position of the window in desktop coordinates\n\t */\n\tpublic function onWindowMove (window:Window, x:Float, y:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a window is minimized\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowMinimize (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window resize event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\twidth\tThe width of the window\n\t * @param\theight\tThe height of the window\n\t */\n\tpublic function onWindowResize (window:Window, width:Int, height:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a window is restored from being minimized or fullscreen\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowRestore (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a render event is fired\n\t * @param\trenderer\tThe renderer dispatching the event\n\t */\n\tpublic function render (renderer:Renderer):Void { }\n\t\n\t\n\t/**\n\t * Called when an update event is fired\n\t * @param\tdeltaTime\tThe amount of time in milliseconds that has elapsed since the last update\n\t */\n\tpublic function update (deltaTime:Int):Void { }\n\t\n\t\n}","package lime.app;\n\n\nimport lime.graphics.Renderer;\nimport lime.graphics.RenderContext;\nimport lime.ui.Gamepad;\nimport lime.ui.GamepadAxis;\nimport lime.ui.GamepadButton;\nimport lime.ui.Joystick;\nimport lime.ui.JoystickHatPosition;\nimport lime.ui.KeyCode;\nimport lime.ui.KeyModifier;\nimport lime.ui.Touch;\nimport lime.ui.Window;\n\n\n/** \n * The Application class forms the foundation for most Lime projects.\n * It is common to extend this class in a main class. It is then possible\n * to override \"on\" functions in the class in order to handle standard events\n * that are relevant.\n */\nclass Application extends Module {\n\t\n\t\n\tpublic static var current (default, null):Application;\n\t\n\tpublic var config (default, null):Config;\n\tpublic var frameRate (get, set):Float;\n\tpublic var modules (default, null):Array<IModule>;\n\tpublic var preloader (default, null):Preloader;\n\t\n\t/**\n\t * Update events are dispatched each frame (usually just before rendering)\n\t */\n\tpublic var onUpdate = new Event<Int->Void> ();\n\t\n\tpublic var renderer (get, null):Renderer;\n\tpublic var renderers (default, null):Array<Renderer>;\n\tpublic var window (get, null):Window;\n\tpublic var windows (default, null):Array<Window>;\n\t\n\t@:noCompletion private var backend:ApplicationBackend;\n\t@:noCompletion private var windowByID:Map<Int, Window>;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tif (Application.current == null) {\n\t\t\t\n\t\t\tApplication.current = this;\n\t\t\t\n\t\t}\n\t\t\n\t\tmodules = new Array ();\n\t\trenderers = new Array ();\n\t\twindows = new Array ();\n\t\twindowByID = new Map ();\n\t\t\n\t\tbackend = new ApplicationBackend (this);\n\t\t\n\t\tonExit.add (onModuleExit);\n\t\tonUpdate.add (update);\n\t\t\n\t\tGamepad.onConnect.add (__onGamepadConnect);\n\t\tJoystick.onConnect.add (__onJoystickConnect);\n\t\tTouch.onStart.add (onTouchStart);\n\t\tTouch.onMove.add (onTouchMove);\n\t\tTouch.onEnd.add (onTouchEnd);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adds a new module to the Application\n\t * @param\tmodule\tA module to add\n\t */\n\tpublic function addModule (module:IModule):Void {\n\t\t\n\t\tmodules.push (module);\n\t\t\n\t\tif (windows.length > 0) {\n\t\t\t\n\t\t\tfor (window in windows) {\n\t\t\t\t\n\t\t\t\tmodule.onWindowCreate (window);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (preloader == null || preloader.complete) {\n\t\t\t\t\n\t\t\t\tmodule.onPreloadComplete ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adds a new Renderer to the Application. By default, this is\n\t * called automatically by create()\n\t * @param\trenderer\tA Renderer object to add\n\t */\n\tpublic function addRenderer (renderer:Renderer):Void {\n\t\t\n\t\trenderer.onRender.add (render.bind (renderer));\n\t\trenderer.onContextLost.add (onRenderContextLost.bind (renderer));\n\t\trenderer.onContextRestored.add (onRenderContextRestored.bind (renderer));\n\t\t\n\t\trenderers.push (renderer);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Initializes the Application, using the settings defined in\n\t * the config instance. By default, this is called automatically\n\t * when building the project using Lime's command-line tools\n\t * @param\tconfig\tA Config object\n\t */\n\tpublic function create (config:Config):Void {\n\t\t\n\t\tthis.config = config;\n\t\t\n\t\tbackend.create (config);\n\t\t\n\t\tif (config != null) {\n\t\t\t\n\t\t\tif (Reflect.hasField (config, \"fps\")) {\n\t\t\t\t\n\t\t\t\tframeRate = config.fps;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (Reflect.hasField (config, \"windows\")) {\n\t\t\t\t\n\t\t\t\tfor (windowConfig in config.windows) {\n\t\t\t\t\t\n\t\t\t\t\tvar window = new Window (windowConfig);\n\t\t\t\t\tcreateWindow (window);\n\t\t\t\t\t\n\t\t\t\t\t#if (flash || html5)\n\t\t\t\t\tbreak;\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (preloader == null || preloader.complete) {\n\t\t\t\t\n\t\t\t\tonPreloadComplete ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adds a new Window to the Application. By default, this is\n\t * called automatically by create()\n\t * @param\twindow\tA Window object to add\n\t */\n\tpublic function createWindow (window:Window):Void {\n\t\t\n\t\twindow.onActivate.add (onWindowActivate.bind (window));\n\t\twindow.onClose.add (onWindowClose.bind (window));\n\t\twindow.onCreate.add (onWindowCreate.bind (window));\n\t\twindow.onDeactivate.add (onWindowDeactivate.bind (window));\n\t\twindow.onEnter.add (onWindowEnter.bind (window));\n\t\twindow.onFocusIn.add (onWindowFocusIn.bind (window));\n\t\twindow.onFocusOut.add (onWindowFocusOut.bind (window));\n\t\twindow.onFullscreen.add (onWindowFullscreen.bind (window));\n\t\twindow.onKeyDown.add (onKeyDown.bind (window));\n\t\twindow.onKeyUp.add (onKeyUp.bind (window));\n\t\twindow.onLeave.add (onWindowLeave.bind (window));\n\t\twindow.onMinimize.add (onWindowMinimize.bind (window));\n\t\twindow.onMouseDown.add (onMouseDown.bind (window));\n\t\twindow.onMouseMove.add (onMouseMove.bind (window));\n\t\twindow.onMouseMoveRelative.add (onMouseMoveRelative.bind (window));\n\t\twindow.onMouseUp.add (onMouseUp.bind (window));\n\t\twindow.onMouseWheel.add (onMouseWheel.bind (window));\n\t\twindow.onMove.add (onWindowMove.bind (window));\n\t\twindow.onResize.add (onWindowResize.bind (window));\n\t\twindow.onRestore.add (onWindowRestore.bind (window));\n\t\twindow.onTextEdit.add (onTextEdit.bind (window));\n\t\twindow.onTextInput.add (onTextInput.bind (window));\n\t\t\n\t\tif (window.renderer == null) {\n\t\t\t\n\t\t\tvar renderer = new Renderer (window);\n\t\t\taddRenderer (renderer);\n\t\t\t\n\t\t}\n\t\t\n\t\twindow.create (this);\n\t\twindows.push (window);\n\t\twindowByID.set (window.id, window);\n\t\t\n\t\twindow.onCreate.dispatch ();\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Execute the Application. On native platforms, this method\n\t * blocks until the application is finished running. On other \n\t * platforms, it will return immediately\n\t * @return An exit code, 0 if there was no error\n\t */\n\tpublic function exec ():Int {\n\t\t\n\t\tApplication.current = this;\n\t\t\n\t\treturn backend.exec ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function onGamepadAxisMove (gamepad:Gamepad, axis:GamepadAxis, value:Float):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onGamepadAxisMove (gamepad, axis, value);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onGamepadButtonDown (gamepad:Gamepad, button:GamepadButton):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onGamepadButtonDown (gamepad, button);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onGamepadButtonUp (gamepad:Gamepad, button:GamepadButton):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onGamepadButtonUp (gamepad, button);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onGamepadConnect (gamepad:Gamepad):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onGamepadConnect (gamepad);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onGamepadDisconnect (gamepad:Gamepad):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onGamepadDisconnect (gamepad);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onJoystickAxisMove (joystick:Joystick, axis:Int, value:Float):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onJoystickAxisMove (joystick, axis, value);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onJoystickButtonDown (joystick:Joystick, button:Int):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onJoystickButtonDown (joystick, button);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onJoystickButtonUp (joystick:Joystick, button:Int):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onJoystickButtonUp (joystick, button);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onJoystickConnect (joystick:Joystick):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onJoystickConnect (joystick);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onJoystickDisconnect (joystick:Joystick):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onJoystickDisconnect (joystick);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onJoystickHatMove (joystick:Joystick, hat:Int, position:JoystickHatPosition):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onJoystickHatMove (joystick, hat, position);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onJoystickTrackballMove (joystick:Joystick, trackball:Int, value:Float):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onJoystickTrackballMove (joystick, trackball, value);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onKeyDown (window:Window, keyCode:KeyCode, modifier:KeyModifier):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onKeyDown (window, keyCode, modifier);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onKeyUp (window:Window, keyCode:KeyCode, modifier:KeyModifier):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onKeyUp (window, keyCode, modifier);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onModuleExit (code:Int):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onModuleExit (code);\n\t\t\t\n\t\t}\n\t\t\n\t\tbackend.exit ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function onMouseDown (window:Window, x:Float, y:Float, button:Int):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onMouseDown (window, x, y, button);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onMouseMove (window:Window, x:Float, y:Float):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onMouseMove (window, x, y);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onMouseMoveRelative (window:Window, x:Float, y:Float):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onMouseMoveRelative (window, x, y);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onMouseUp (window:Window, x:Float, y:Float, button:Int):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onMouseUp (window, x, y, button);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onMouseWheel (window:Window, deltaX:Float, deltaY:Float):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onMouseWheel (window, deltaX, deltaY);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onPreloadComplete ():Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onPreloadComplete ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onPreloadProgress (loaded:Int, total:Int):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onPreloadProgress (loaded, total);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onRenderContextLost (renderer:Renderer):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onRenderContextLost (renderer);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onRenderContextRestored (renderer:Renderer, context:RenderContext):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onRenderContextRestored (renderer, context);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onTextEdit (window:Window, text:String, start:Int, length:Int):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onTextEdit (window, text, start, length);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onTextInput (window:Window, text:String):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onTextInput (window, text);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onTouchEnd (touch:Touch):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onTouchEnd (touch);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onTouchMove (touch:Touch):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onTouchMove (touch);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onTouchStart (touch:Touch):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onTouchStart (touch);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowActivate (window:Window):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onWindowActivate (window);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowClose (window:Window):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onWindowClose (window);\n\t\t\t\n\t\t}\n\t\t\n\t\tremoveWindow (window);\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowCreate (window:Window):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onWindowCreate (window);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowDeactivate (window:Window):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onWindowDeactivate (window);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowEnter (window:Window):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onWindowEnter (window);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowFocusIn (window:Window):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onWindowFocusIn (window);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowFocusOut (window:Window):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onWindowFocusOut (window);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowFullscreen (window:Window):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onWindowFullscreen (window);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowLeave (window:Window):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onWindowLeave (window);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowMinimize (window:Window):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onWindowMinimize (window);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowMove (window:Window, x:Float, y:Float):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onWindowMove (window, x, y);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowResize (window:Window, width:Int, height:Int):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onWindowResize (window, width, height);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowRestore (window:Window):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.onWindowRestore (window);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Removes a module from the Application\n\t * @param\tmodule\tA module to remove\n\t */\n\tpublic function removeModule (module:IModule):Void {\n\t\t\n\t\tif (module != null) {\n\t\t\t\n\t\t\tmodule.onModuleExit (0);\n\t\t\tmodules.remove (module);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Removes a Renderer from the Application\n\t * @param\trenderer\tA Renderer object to remove\n\t */\n\tpublic function removeRenderer (renderer:Renderer):Void {\n\t\t\n\t\tif (renderer != null && renderers.indexOf (renderer) > -1) {\n\t\t\t\n\t\t\trenderers.remove (renderer);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Removes a Window from the Application\n\t * @param\twindow\tA Window object to remove\n\t */\n\tprivate function removeWindow (window:Window):Void {\n\t\t\n\t\tif (window != null && windowByID.exists (window.id)) {\n\t\t\t\n\t\t\twindows.remove (window);\n\t\t\twindowByID.remove (window.id);\n\t\t\twindow.close ();\n\t\t\t\n\t\t\tif (this.window == window) {\n\t\t\t\t\n\t\t\t\tthis.window = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function render (renderer:Renderer):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.render (renderer);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function setPreloader (preloader:Preloader):Void {\n\t\t\n\t\tif (this.preloader != null) {\n\t\t\t\n\t\t\tthis.preloader.onProgress.remove (onPreloadProgress);\n\t\t\tthis.preloader.onComplete.remove (onPreloadComplete);\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.preloader = preloader;\n\t\t\n\t\tif (preloader.complete) {\n\t\t\t\n\t\t\tonPreloadComplete ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpreloader.onProgress.add (onPreloadProgress);\n\t\t\tpreloader.onComplete.add (onPreloadComplete);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function update (deltaTime:Int):Void {\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.update (deltaTime);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __onGamepadConnect (gamepad:Gamepad):Void {\n\t\t\n\t\tonGamepadConnect (gamepad);\n\t\t\n\t\tgamepad.onAxisMove.add (onGamepadAxisMove.bind (gamepad));\n\t\tgamepad.onButtonDown.add (onGamepadButtonDown.bind (gamepad));\n\t\tgamepad.onButtonUp.add (onGamepadButtonUp.bind (gamepad));\n\t\tgamepad.onDisconnect.add (onGamepadDisconnect.bind (gamepad));\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __onJoystickConnect (joystick:Joystick):Void {\n\t\t\n\t\tonJoystickConnect (joystick);\n\t\t\n\t\tjoystick.onAxisMove.add (onJoystickAxisMove.bind (joystick));\n\t\tjoystick.onButtonDown.add (onJoystickButtonDown.bind (joystick));\n\t\tjoystick.onButtonUp.add (onJoystickButtonUp.bind (joystick));\n\t\tjoystick.onDisconnect.add (onJoystickDisconnect.bind (joystick));\n\t\tjoystick.onHatMove.add (onJoystickHatMove.bind (joystick));\n\t\tjoystick.onTrackballMove.add (onJoystickTrackballMove.bind (joystick));\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_frameRate ():Float {\n\t\t\n\t\treturn backend.getFrameRate ();\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_frameRate (value:Float):Float {\n\t\t\n\t\treturn backend.setFrameRate (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_renderer ():Renderer {\n\t\t\n\t\treturn renderers[0];\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_window ():Window {\n\t\t\n\t\treturn windows[0];\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if flash\n@:noCompletion private typedef ApplicationBackend = lime._backend.flash.FlashApplication;\n#elseif (js && html5)\n@:noCompletion private typedef ApplicationBackend = lime._backend.html5.HTML5Application;\n#else\n@:noCompletion private typedef ApplicationBackend = lime._backend.native.NativeApplication;\n#end","package lime.system;\n\n\nimport lime.app.Application;\nimport lime.app.Event;\n\n#if cpp\nimport cpp.vm.Deque;\nimport cpp.vm.Thread;\n#elseif neko\nimport neko.vm.Deque;\nimport neko.vm.Thread;\n#end\n\n\nclass ThreadPool {\n\t\n\t\n\tpublic var currentThreads (default, null):Int;\n\tpublic var doWork = new Event<Dynamic->Void> ();\n\tpublic var maxThreads:Int;\n\tpublic var minThreads:Int;\n\tpublic var onComplete = new Event<Dynamic->Void> ();\n\tpublic var onError = new Event<Dynamic->Void> ();\n\tpublic var onProgress = new Event<Dynamic->Void> ();\n\t\n\t#if (cpp || neko)\n\tprivate var __workCompleted:Int;\n\tprivate var __workIncoming = new Deque<ThreadPoolMessage> ();\n\tprivate var __workQueued:Int;\n\tprivate var __workResult = new Deque<ThreadPoolMessage> ();\n\t#end\n\t\n\t\n\tpublic function new (minThreads:Int = 0, maxThreads:Int = 1) {\n\t\t\n\t\tthis.minThreads = minThreads;\n\t\tthis.maxThreads = maxThreads;\n\t\t\n\t\tcurrentThreads = 0;\n\t\t\n\t\t#if (cpp || neko)\n\t\t__workQueued = 0;\n\t\t__workCompleted = 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t//public function cancel (id:String):Void {\n\t\t//\n\t\t//\n\t\t//\n\t//}\n\t\n\t\n\t//public function isCanceled (id:String):Bool {\n\t\t//\n\t\t//\n\t\t//\n\t//}\n\t\n\t\n\tpublic function queue (state:Dynamic = null):Void {\n\t\t\n\t\t#if (cpp || neko)\n\t\t\n\t\t__workIncoming.add (new ThreadPoolMessage (WORK, state));\n\t\t__workQueued++;\n\t\t\n\t\tif (currentThreads < maxThreads && currentThreads < (__workQueued - __workCompleted)) {\n\t\t\t\n\t\t\tcurrentThreads++;\n\t\t\tThread.create (__doWork);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!Application.current.onUpdate.has (__update)) {\n\t\t\t\n\t\t\tApplication.current.onUpdate.add (__update);\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tdoWork.dispatch (state);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function sendComplete (state:Dynamic = null):Void {\n\t\t\n\t\t#if (cpp || neko)\n\t\t__workResult.add (new ThreadPoolMessage (COMPLETE, state));\n\t\t#else\n\t\tonComplete.dispatch (state);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function sendError (state:Dynamic = null):Void {\n\t\t\n\t\t#if (cpp || neko)\n\t\t__workResult.add (new ThreadPoolMessage (ERROR, state));\n\t\t#else\n\t\tonError.dispatch (state);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function sendProgress (state:Dynamic = null):Void {\n\t\t\n\t\t#if (cpp || neko)\n\t\t__workResult.add (new ThreadPoolMessage (PROGRESS, state));\n\t\t#else\n\t\tonProgress.dispatch (state);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if (cpp || neko)\n\t\n\tprivate function __doWork ():Void {\n\t\t\n\t\twhile (true) {\n\t\t\t\n\t\t\tvar message = __workIncoming.pop (true);\n\t\t\t\n\t\t\tif (message.type == WORK) {\n\t\t\t\t\n\t\t\t\tdoWork.dispatch (message.state);\n\t\t\t\t\n\t\t\t} else if (message.type == EXIT) {\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __update (deltaTime:Int):Void {\n\t\t\n\t\tif (__workQueued > __workCompleted) {\n\t\t\t\n\t\t\tvar message = __workResult.pop (false);\n\t\t\t\n\t\t\twhile (message != null) {\n\t\t\t\t\n\t\t\t\tswitch (message.type) {\n\t\t\t\t\t\n\t\t\t\t\tcase PROGRESS:\n\t\t\t\t\t\t\n\t\t\t\t\t\tonProgress.dispatch (message.state);\n\t\t\t\t\t\n\t\t\t\t\tcase COMPLETE, ERROR:\n\t\t\t\t\t\t\n\t\t\t\t\t\t__workCompleted++;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (currentThreads > (__workQueued - __workCompleted) || currentThreads > maxThreads) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcurrentThreads--;\n\t\t\t\t\t\t\t__workIncoming.add (new ThreadPoolMessage (EXIT, null));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (message.type == COMPLETE) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tonComplete.dispatch (message.state);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tonError.dispatch (message.state);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmessage = __workResult.pop (false);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t// TODO: Add sleep if keeping minThreads running with no work?\n\t\t\t\n\t\t\tif (currentThreads == 0 && minThreads <= 0) {\n\t\t\t\t\n\t\t\t\tApplication.current.onUpdate.remove (__update);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#end\n\t\n\t\n}\n\n\nprivate enum ThreadPoolMessageType {\n\t\n\tCOMPLETE;\n\tERROR;\n\tEXIT;\n\tPROGRESS;\n\tWORK;\n\t\n}\n\n\nprivate class ThreadPoolMessage {\n\t\n\t\n\tpublic var state:Dynamic;\n\tpublic var type:ThreadPoolMessageType;\n\t\n\t\n\tpublic function new (type:ThreadPoolMessageType, state:Dynamic) {\n\t\t\n\t\tthis.type = type;\n\t\tthis.state = state;\n\t\t\n\t}\n\t\n\t\n}","package lime.ui;\n\n\nimport lime.app.Application;\nimport lime.app.Config;\nimport lime.app.Event;\nimport lime.graphics.Image;\nimport lime.graphics.Renderer;\nimport lime.system.Display;\n\n#if openfl\nimport openfl.display.Stage;\n#elseif flash\nimport flash.display.Stage;\n#else\ntypedef Stage = Dynamic;\n#end\n\n\nclass Window {\n\t\n\t\n\tpublic var application (default, null):Application;\n\tpublic var borderless (get, set):Bool;\n\tpublic var config:WindowConfig;\n\tpublic var display (get, null):Display;\n\tpublic var enableTextEvents (get, set):Bool;\n\tpublic var fullscreen (get, set):Bool;\n\tpublic var height (get, set):Int;\n\tpublic var id (default, null):Int;\n\tpublic var minimized (get, set):Bool;\n\tpublic var onActivate = new Event<Void->Void> ();\n\tpublic var onClose = new Event<Void->Void> ();\n\tpublic var onCreate = new Event<Void->Void> ();\n\tpublic var onDeactivate = new Event<Void->Void> ();\n\tpublic var onEnter = new Event<Void->Void> ();\n\tpublic var onFocusIn = new Event<Void->Void> ();\n\tpublic var onFocusOut = new Event<Void->Void> ();\n\tpublic var onFullscreen = new Event<Void->Void> ();\n\tpublic var onKeyDown = new Event<KeyCode->KeyModifier->Void> ();\n\tpublic var onKeyUp = new Event<KeyCode->KeyModifier->Void> ();\n\tpublic var onLeave = new Event<Void->Void> ();\n\tpublic var onMinimize = new Event<Void->Void> ();\n\tpublic var onMouseDown = new Event<Float->Float->Int->Void> ();\n\tpublic var onMouseMove = new Event<Float->Float->Void> ();\n\tpublic var onMouseMoveRelative = new Event<Float->Float->Void> ();\n\tpublic var onMouseUp = new Event<Float->Float->Int->Void> ();\n\tpublic var onMouseWheel = new Event<Float->Float->Void> ();\n\tpublic var onMove = new Event<Float->Float->Void> ();\n\tpublic var onResize = new Event<Int->Int->Void> ();\n\tpublic var onRestore = new Event<Void->Void> ();\n\tpublic var onTextEdit = new Event<String->Int->Int->Void> ();\n\tpublic var onTextInput = new Event<String->Void> ();\n\tpublic var renderer:Renderer;\n\tpublic var resizable (get, set):Bool;\n\tpublic var scale (get, null):Float;\n\tpublic var stage:Stage;\n\tpublic var title (get, set):String;\n\tpublic var width (get, set):Int;\n\tpublic var x (get, set):Int;\n\tpublic var y (get, set):Int;\n\t\n\t@:noCompletion private var backend:WindowBackend;\n\t@:noCompletion private var __borderless:Bool;\n\t@:noCompletion private var __fullscreen:Bool;\n\t@:noCompletion private var __height:Int;\n\t@:noCompletion private var __minimized:Bool;\n\t@:noCompletion private var __resizable:Bool;\n\t@:noCompletion private var __scale:Float;\n\t@:noCompletion private var __title:String;\n\t@:noCompletion private var __width:Int;\n\t@:noCompletion private var __x:Int;\n\t@:noCompletion private var __y:Int;\n\t\n\t\n\tpublic function new (config:WindowConfig = null) {\n\t\t\n\t\tthis.config = config;\n\t\t\n\t\t__width = 0;\n\t\t__height = 0;\n\t\t__fullscreen = false;\n\t\t__scale = 1;\n\t\t__x = 0;\n\t\t__y = 0;\n\t\t__title = \"\";\n\t\tid = -1;\n\t\t\n\t\tif (config != null) {\n\t\t\t\n\t\t\tif (Reflect.hasField (config, \"width\")) __width = config.width;\n\t\t\tif (Reflect.hasField (config, \"height\")) __height = config.height;\n\t\t\tif (Reflect.hasField (config, \"x\")) __x = config.x;\n\t\t\tif (Reflect.hasField (config, \"y\")) __y = config.y;\n\t\t\tif (Reflect.hasField (config, \"fullscreen\")) __fullscreen = config.fullscreen;\n\t\t\tif (Reflect.hasField (config, \"borderless\")) __borderless = config.borderless;\n\t\t\tif (Reflect.hasField (config, \"resizable\")) __resizable = config.resizable;\n\t\t\tif (Reflect.hasField (config, \"title\")) __title = config.title;\n\t\t\t\n\t\t}\n\t\t\n\t\tbackend = new WindowBackend (this);\n\t\t\n\t}\n\t\n\t\n\tpublic function alert (message:String = null, title:String = null):Void {\n\t\t\n\t\tbackend.alert (message, title);\n\t\t\n\t}\n\t\n\t\n\tpublic function close ():Void {\n\t\t\n\t\tbackend.close ();\n\t\t\n\t}\n\t\n\t\n\tpublic function create (application:Application):Void {\n\t\t\n\t\tthis.application = application;\n\t\t\n\t\tbackend.create (application);\n\t\t\n\t\t#if windows\n\t\t\n\t\tvar mappings = [\n\t\t\t\n\t\t\t\"8f0e1200000000000000504944564944,Acme,platform:Windows,x:b2,a:b0,b:b1,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b5,rightshoulder:b6,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2\",\n\t\t\t\"341a3608000000000000504944564944,Afterglow PS3 Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Windows\",\n\t\t\t\"ffff0000000000000000504944564944,GameStop Gamepad,a:b0,b:b1,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b2,y:b3,platform:Windows\",\n\t\t\t\"6d0416c2000000000000504944564944,Generic DirectInput Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Windows\",\n\t\t\t\"6d0419c2000000000000504944564944,Logitech F710 Gamepad,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Windows\",\n\t\t\t\"88880803000000000000504944564944,PS3 Controller,a:b2,b:b1,back:b8,dpdown:h0.8,dpleft:h0.4,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b9,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:b7,rightx:a3,righty:a4,start:b11,x:b0,y:b3,platform:Windows\",\n\t\t\t\"4c056802000000000000504944564944,PS3 Controller,a:b14,b:b13,back:b0,dpdown:b6,dpleft:b7,dpright:b5,dpup:b4,guide:b16,leftshoulder:b10,leftstick:b1,lefttrigger:b8,leftx:a0,lefty:a1,rightshoulder:b11,rightstick:b2,righttrigger:b9,rightx:a2,righty:a3,start:b3,x:b15,y:b12,platform:Windows\",\n\t\t\t\"25090500000000000000504944564944,PS3 DualShock,a:b2,b:b1,back:b9,dpdown:h0.8,dpleft:h0.4,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b6,leftstick:b10,lefttrigger:b4,leftx:a0,lefty:a1,rightshoulder:b7,rightstick:b11,righttrigger:b5,rightx:a2,righty:a3,start:b8,x:b0,y:b3,platform:Windows\",\n\t\t\t\"4c05c405000000000000504944564944,PS4 Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b10,lefttrigger:a3,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:a4,rightx:a2,righty:a5,start:b9,x:b0,y:b3,platform:Windows\",\n\t\t\t\"6d0418c2000000000000504944564944,Logitech RumblePad 2 USB,platform:Windows,x:b0,a:b1,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"36280100000000000000504944564944,OUYA Controller,platform:Windows,a:b0,b:b3,y:b2,x:b1,start:b14,guide:b15,leftstick:b6,rightstick:b7,leftshoulder:b4,rightshoulder:b5,dpup:b8,dpleft:b10,dpdown:b9,dpright:b11,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:b12,righttrigger:b13\",\n\t\t\t\"4f0400b3000000000000504944564944,Thrustmaster Firestorm Dual Power,a:b0,b:b2,y:b3,x:b1,start:b10,guide:b8,back:b9,leftstick:b11,rightstick:b12,leftshoulder:b4,rightshoulder:b6,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b5,righttrigger:b7,platform:Windows\",\n\t\t\t\"00f00300000000000000504944564944,RetroUSB.com RetroPad,a:b1,b:b5,x:b0,y:b4,back:b2,start:b3,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1,platform:Windows\",\n\t\t\t\"00f0f100000000000000504944564944,RetroUSB.com Super RetroPort,a:b1,b:b5,x:b0,y:b4,back:b2,start:b3,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1,platform:Windows\",\n\t\t\t\"28040140000000000000504944564944,GamePad Pro USB,platform:Windows,a:b1,b:b2,x:b0,y:b3,back:b8,start:b9,leftshoulder:b4,rightshoulder:b5,leftx:a0,lefty:a1,lefttrigger:b6,righttrigger:b7\",\n\t\t\t\"ff113133000000000000504944564944,SVEN X-PAD,platform:Windows,a:b2,b:b3,y:b1,x:b0,start:b5,back:b4,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a4,lefttrigger:b8,righttrigger:b9\",\n\t\t\t\"8f0e0300000000000000504944564944,Piranha xtreme,platform:Windows,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b6,lefttrigger:b4,rightshoulder:b7,righttrigger:b5,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2\",\n\t\t\t\"8f0e0d31000000000000504944564944,Multilaser JS071 USB,platform:Windows,a:b1,b:b2,y:b3,x:b0,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7\",\n\t\t\t\"10080300000000000000504944564944,PS2 USB,platform:Windows,a:b2,b:b1,y:b0,x:b3,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a4,righty:a2,lefttrigger:b4,righttrigger:b5\",\n\t\t\t\"79000600000000000000504944564944,G-Shark GS-GP702,a:b2,b:b1,x:b3,y:b0,back:b8,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a4,lefttrigger:b6,righttrigger:b7,platform:Windows\",\n\t\t\t\"4b12014d000000000000504944564944,NYKO AIRFLO,a:b0,b:b1,x:b2,y:b3,back:b8,guide:b10,start:b9,leftstick:a0,rightstick:a2,leftshoulder:a3,rightshoulder:b5,dpup:h0.1,dpdown:h0.0,dpleft:h0.8,dpright:h0.2,leftx:h0.6,lefty:h0.12,rightx:h0.9,righty:h0.4,lefttrigger:b6,righttrigger:b7,platform:Windows\",\n\t\t\t\"d6206dca000000000000504944564944,PowerA Pro Ex,a:b1,b:b2,x:b0,y:b3,back:b8,guide:b12,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.0,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Windows\",\n\t\t\t\"a3060cff000000000000504944564944,Saitek P2500,a:b2,b:b3,y:b1,x:b0,start:b4,guide:b10,back:b5,leftstick:b8,rightstick:b9,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,platform:Windows\",\n\t\t\t\"8f0e0300000000000000504944564944,Trust GTX 28,a:b2,b:b1,y:b0,x:b3,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Windows\",\n\t\t\t\"4f0415b3000000000000504944564944,Thrustmaster Dual Analog 3.2,platform:Windows,x:b1,a:b0,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b5,rightshoulder:b6,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3\"\n\t\t\t\n\t\t];\n\t\t\n\t\tGamepad.addMappings (mappings);\n\t\t\n\t\t#elseif mac\n\t\t\n\t\tvar mappings = [\n\t\t\t\n\t\t\t\"0500000047532047616d657061640000,GameStop Gamepad,a:b0,b:b1,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b2,y:b3,platform:Mac OS X\",\n\t\t\t\"6d0400000000000016c2000000000000,Logitech F310 Gamepad (DInput),a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Mac OS X\",\n\t\t\t\"6d0400000000000018c2000000000000,Logitech F510 Gamepad (DInput),a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Mac OS X\",\n\t\t\t\"6d040000000000001fc2000000000000,Logitech F710 Gamepad (XInput),a:b0,b:b1,back:b9,dpdown:b12,dpleft:b13,dpright:b14,dpup:b11,guide:b10,leftshoulder:b4,leftstick:b6,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b7,righttrigger:a5,rightx:a3,righty:a4,start:b8,x:b2,y:b3,platform:Mac OS X\",\n\t\t\t\"6d0400000000000019c2000000000000,Logitech Wireless Gamepad (DInput),a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Mac OS X\",\n\t\t\t\"4c050000000000006802000000000000,PS3 Controller,a:b14,b:b13,back:b0,dpdown:b6,dpleft:b7,dpright:b5,dpup:b4,guide:b16,leftshoulder:b10,leftstick:b1,lefttrigger:b8,leftx:a0,lefty:a1,rightshoulder:b11,rightstick:b2,righttrigger:b9,rightx:a2,righty:a3,start:b3,x:b15,y:b12,platform:Mac OS X\",\n\t\t\t\"4c05000000000000c405000000000000,PS4 Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b10,lefttrigger:a3,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:a4,rightx:a2,righty:a5,start:b9,x:b0,y:b3,Platform:Mac OS X\",\n\t\t\t\"5e040000000000008e02000000000000,X360 Controller,a:b0,b:b1,back:b9,dpdown:b12,dpleft:b13,dpright:b14,dpup:b11,guide:b10,leftshoulder:b4,leftstick:b6,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b7,righttrigger:a5,rightx:a3,righty:a4,start:b8,x:b2,y:b3,platform:Mac OS X\",\n\t\t\t\"891600000000000000fd000000000000,Razer Onza Tournament,a:b0,b:b1,y:b3,x:b2,start:b8,guide:b10,back:b9,leftstick:b6,rightstick:b7,leftshoulder:b4,rightshoulder:b5,dpup:b11,dpleft:b13,dpdown:b12,dpright:b14,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:a2,righttrigger:a5,platform:Mac OS X\",\n\t\t\t\"4f0400000000000000b3000000000000,Thrustmaster Firestorm Dual Power,a:b0,b:b2,y:b3,x:b1,start:b10,guide:b8,back:b9,leftstick:b11,rightstick:,leftshoulder:b4,rightshoulder:b6,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b5,righttrigger:b7,platform:Mac OS X\",\n\t\t\t\"8f0e0000000000000300000000000000,Piranha xtreme,platform:Mac OS X,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b6,lefttrigger:b4,rightshoulder:b7,righttrigger:b5,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2\",\n\t\t\t\"0d0f0000000000004d00000000000000,HORI Gem Pad 3,platform:Mac OS X,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7\",\n\t\t\t\"79000000000000000600000000000000,G-Shark GP-702,a:b2,b:b1,x:b3,y:b0,back:b8,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:b6,righttrigger:b7,platform:Mac OS X\",\n\t\t\t\"4f0400000000000015b3000000000000,Thrustmaster Dual Analog 3.2,platform:Mac OS X,x:b1,a:b0,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b5,rightshoulder:b6,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"AD1B00000000000001F9000000000000,Gamestop BB-070 X360 Controller,a:b0,b:b1,back:b9,dpdown:b12,dpleft:b13,dpright:b14,dpup:b11,guide:b10,leftshoulder:b4,leftstick:b6,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b7,righttrigger:a5,rightx:a3,righty:a4,start:b8,x:b2,y:b3,platform:Mac OS X\"\n\t\t\t\n\t\t];\n\t\t\n\t\tGamepad.addMappings (mappings);\n\t\t\n\t\t#elseif linux\n\t\t\n\t\tvar mappings = [\n\t\t\t\n\t\t\t\"0500000047532047616d657061640000,GameStop Gamepad,a:b0,b:b1,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b2,y:b3,platform:Linux\",\n\t\t\t\"03000000ba2200002010000001010000,Jess Technology USB Game Controller,a:b2,b:b1,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b4,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,righttrigger:b7,rightx:a3,righty:a2,start:b9,x:b3,y:b0,platform:Linux\",\n\t\t\t\"030000006d04000019c2000010010000,Logitech Cordless RumblePad 2,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Linux\",\n\t\t\t\"030000006d0400001dc2000014400000,Logitech F310 Gamepad (XInput),a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"030000006d0400001ec2000020200000,Logitech F510 Gamepad (XInput),a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"030000006d04000019c2000011010000,Logitech F710 Gamepad (DInput),a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Linux\",\n\t\t\t\"030000006d0400001fc2000005030000,Logitech F710 Gamepad (XInput),a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"030000004c0500006802000011010000,PS3 Controller,a:b14,b:b13,back:b0,dpdown:b6,dpleft:b7,dpright:b5,dpup:b4,guide:b16,leftshoulder:b10,leftstick:b1,lefttrigger:b8,leftx:a0,lefty:a1,rightshoulder:b11,rightstick:b2,righttrigger:b9,rightx:a2,righty:a3,start:b3,x:b15,y:b12,platform:Linux\",\n\t\t\t\"030000004c050000c405000011010000,Sony DualShock 4,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:b6,righttrigger:b7,platform:Linux\",\n\t\t\t\"03000000de280000ff11000001000000,Valve Streaming Gamepad,a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"030000005e0400008e02000014010000,X360 Controller,a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"030000005e0400008e02000010010000,X360 Controller,a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"030000005e0400001907000000010000,X360 Wireless Controller,a:b0,b:b1,back:b6,dpdown:b14,dpleft:b11,dpright:b12,dpup:b13,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"03000000100800000100000010010000,Twin USB PS2 Adapter,a:b2,b:b1,y:b0,x:b3,start:b9,guide:,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a2,lefttrigger:b4,righttrigger:b5,platform:Linux\",\n\t\t\t\"03000000a306000023f6000011010000,Saitek Cyborg V.1 Game Pad,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a4,lefttrigger:b6,righttrigger:b7,platform:Linux\",\n\t\t\t\"030000004f04000020b3000010010000,Thrustmaster 2 in 1 DT,a:b0,b:b2,y:b3,x:b1,start:b9,guide:,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b6,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b5,righttrigger:b7,platform:Linux\",\n\t\t\t\"030000004f04000023b3000000010000,Thrustmaster Dual Trigger 3-in-1,platform:Linux,x:b0,a:b1,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a5\",\n\t\t\t\"030000008f0e00000300000010010000,GreenAsia Inc.    USB Joystick     ,platform:Linux,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b6,lefttrigger:b4,rightshoulder:b7,righttrigger:b5,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2\",\n\t\t\t\"030000008f0e00001200000010010000,GreenAsia Inc.      USB  Joystick  ,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b5,rightshoulder:b6,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2\",\n\t\t\t\"030000005e0400009102000007010000,X360 Wireless Controller,a:b0,b:b1,y:b3,x:b2,start:b7,guide:b8,back:b6,leftstick:b9,rightstick:b10,leftshoulder:b4,rightshoulder:b5,dpup:b13,dpleft:b11,dpdown:b14,dpright:b12,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:a2,righttrigger:a5,platform:Linux\",\n\t\t\t\"030000006d04000016c2000010010000,Logitech Logitech Dual Action,platform:Linux,x:b0,a:b1,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"03000000260900008888000000010000,GameCube {WiseGroup USB box},a:b0,b:b2,y:b3,x:b1,start:b7,leftshoulder:,rightshoulder:b6,dpup:h0.1,dpleft:h0.8,rightstick:,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:a4,righttrigger:a5,platform:Linux\",\n\t\t\t\"030000006d04000011c2000010010000,Logitech WingMan Cordless RumblePad,a:b0,b:b1,y:b4,x:b3,start:b8,guide:b5,back:b2,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:b9,righttrigger:b10,platform:Linux\",\n\t\t\t\"030000006d04000018c2000010010000,Logitech Logitech RumblePad 2 USB,platform:Linux,x:b0,a:b1,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"05000000d6200000ad0d000001000000,Moga Pro,platform:Linux,a:b0,b:b1,y:b3,x:b2,start:b6,leftstick:b7,rightstick:b8,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:a5,righttrigger:a4\",\n\t\t\t\"030000004f04000009d0000000010000,Thrustmaster Run N Drive Wireless PS3,platform:Linux,a:b1,b:b2,x:b0,y:b3,start:b9,guide:b12,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7\",\n\t\t\t\"030000004f04000008d0000000010000,Thrustmaster Run N Drive  Wireless,platform:Linux,a:b1,b:b2,x:b0,y:b3,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:b6,righttrigger:b7\",\n\t\t\t\"0300000000f000000300000000010000,RetroUSB.com RetroPad,a:b1,b:b5,x:b0,y:b4,back:b2,start:b3,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1,platform:Linux\",\n\t\t\t\"0300000000f00000f100000000010000,RetroUSB.com Super RetroPort,a:b1,b:b5,x:b0,y:b4,back:b2,start:b3,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1,platform:Linux\",\n\t\t\t\"030000006f0e00001f01000000010000,Generic X-Box pad,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"03000000280400000140000000010000,Gravis GamePad Pro USB ,platform:Linux,x:b0,a:b1,b:b2,y:b3,back:b8,start:b9,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftx:a0,lefty:a1\",\n\t\t\t\"030000005e0400008902000021010000,Microsoft X-Box pad v2 (US),platform:Linux,x:b3,a:b0,b:b1,y:b4,back:b6,start:b7,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b5,lefttrigger:a2,rightshoulder:b2,righttrigger:a5,leftstick:b8,rightstick:b9,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"030000006f0e00001e01000011010000,Rock Candy Gamepad for PS3,platform:Linux,a:b1,b:b2,x:b0,y:b3,back:b8,start:b9,guide:b12,leftshoulder:b4,rightshoulder:b5,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2\",\n\t\t\t\"03000000250900000500000000010000,Sony PS2 pad with SmartJoy adapter,platform:Linux,a:b2,b:b1,y:b0,x:b3,start:b8,back:b9,leftstick:b10,rightstick:b11,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b4,righttrigger:b5\",\n\t\t\t\"030000008916000000fd000024010000,Razer Onza Tournament,a:b0,b:b1,y:b3,x:b2,start:b7,guide:b8,back:b6,leftstick:b9,rightstick:b10,leftshoulder:b4,rightshoulder:b5,dpup:b13,dpleft:b11,dpdown:b14,dpright:b12,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:a2,righttrigger:a5,platform:Linux\",\n\t\t\t\"030000004f04000000b3000010010000,Thrustmaster Firestorm Dual Power,a:b0,b:b2,y:b3,x:b1,start:b10,guide:b8,back:b9,leftstick:b11,rightstick:b12,leftshoulder:b4,rightshoulder:b6,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b5,righttrigger:b7,platform:Linux\",\n\t\t\t\"03000000ad1b000001f5000033050000,Hori Pad EX Turbo 2,a:b0,b:b1,y:b3,x:b2,start:b7,guide:b8,back:b6,leftstick:b9,rightstick:b10,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:a2,righttrigger:a5,platform:Linux\",\n\t\t\t\"050000004c050000c405000000010000,PS4 Controller (Bluetooth),a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b10,lefttrigger:a3,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:a4,rightx:a2,righty:a5,start:b9,x:b0,y:b3,platform:Linux\",\n\t\t\t\"060000004c0500006802000000010000,PS3 Controller (Bluetooth),a:b14,b:b13,y:b12,x:b15,start:b3,guide:b16,back:b0,leftstick:b1,rightstick:b2,leftshoulder:b10,rightshoulder:b11,dpup:b4,dpleft:b7,dpdown:b6,dpright:b5,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b8,righttrigger:b9,platform:Linux\",\n\t\t\t\"03000000790000000600000010010000,DragonRise Inc.   Generic   USB  Joystick  ,platform:Linux,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"03000000666600000488000000010000,Super Joy Box 5 Pro,platform:Linux,a:b2,b:b1,x:b3,y:b0,back:b9,start:b8,leftshoulder:b6,rightshoulder:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b4,righttrigger:b5,dpup:b12,dpleft:b15,dpdown:b14,dpright:b13\",\n\t\t\t\"05000000362800000100000002010000,OUYA Game Controller,a:b0,b:b3,dpdown:b9,dpleft:b10,dpright:b11,dpup:b8,guide:b14,leftshoulder:b4,leftstick:b6,lefttrigger:a2,leftx:a0,lefty:a1,platform:Linux,rightshoulder:b5,rightstick:b7,righttrigger:a5,rightx:a3,righty:a4,x:b1,y:b2\",\n\t\t\t\"05000000362800000100000003010000,OUYA Game Controller,a:b0,b:b3,dpdown:b9,dpleft:b10,dpright:b11,dpup:b8,guide:b14,leftshoulder:b4,leftstick:b6,lefttrigger:a2,leftx:a0,lefty:a1,platform:Linux,rightshoulder:b5,rightstick:b7,righttrigger:a5,rightx:a3,righty:a4,x:b1,y:b2\",\n\t\t\t\"030000008916000001fd000024010000,Razer Onza Classic Edition,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:b11,dpdown:b14,dpright:b12,dpup:b13,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"030000005e040000d102000001010000,Microsoft X-Box One pad,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"03000000790000001100000010010000,RetroLink Saturn Classic Controller,platform:Linux,x:b3,a:b0,b:b1,y:b4,back:b5,guide:b2,start:b8,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1\"\n\t\t\t\n\t\t];\n\t\t\n\t\tGamepad.addMappings (mappings);\n\n\t\t#elseif (ios || tvos)\n\t\t\n\t\tvar mappings = [\n\t\t\t\n\t\t    \"4d466947616d65706164010000000000,MFi Extended Gamepad,a:b0,b:b1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,righttrigger:a5,rightx:a3,righty:a4,start:b6,x:b2,y:b3,\",\n\t\t    \"4d466947616d65706164020000000000,MFi Gamepad,a:b0,b:b1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,rightshoulder:b5,start:b6,x:b2,y:b3,\",\n\t\t    \"4d466947616d65706164030000000000,MFi Apple TV Remote,a:b0,b:b1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,rightshoulder:b5,start:b6,x:b2,y:b3,\",\n\t\t\t\n\t\t];\n\t\t\n\t\tGamepad.addMappings (mappings);\n\t\t\n\t\t#end\n\t\t\n\t\tif (renderer != null) {\n\t\t\t\n\t\t\trenderer.create ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function focus ():Void {\n\t\t\n\t\tbackend.focus ();\n\t\t\n\t}\n\t\n\t\n\tpublic function move (x:Int, y:Int):Void {\n\t\t\n\t\tbackend.move (x, y);\n\t\t\n\t\t__x = x;\n\t\t__y = y;\n\t\t\n\t}\n\t\n\t\n\tpublic function resize (width:Int, height:Int):Void {\n\t\t\n\t\tbackend.resize (width, height);\n\t\t\n\t\t__width = width;\n\t\t__height = height;\n\t\t\n\t}\n\t\n\t\n\tpublic function setIcon (image:Image):Void {\n\t\t\n\t\tif (image == null) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tbackend.setIcon (image);\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn \"[object Window]\";\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_display ():Display {\n\t\t\n\t\treturn backend.getDisplay ();\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_borderless ():Bool {\n\t\t\n\t\treturn __borderless;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_borderless (value:Bool):Bool {\n\t\t\n\t\treturn __borderless = backend.setBorderless (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_enableTextEvents ():Bool {\n\t\t\n\t\treturn backend.getEnableTextEvents ();\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_enableTextEvents (value:Bool):Bool {\n\t\t\n\t\treturn backend.setEnableTextEvents (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_fullscreen ():Bool {\n\t\t\n\t\treturn __fullscreen;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_fullscreen (value:Bool):Bool {\n\t\t\n\t\treturn __fullscreen = backend.setFullscreen (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_height ():Int {\n\t\t\n\t\treturn __height;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_height (value:Int):Int {\n\t\t\n\t\tresize (__width, value);\n\t\treturn __height;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_minimized ():Bool {\n\t\t\n\t\treturn __minimized;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_minimized (value:Bool):Bool {\n\t\t\n\t\treturn __minimized = backend.setMinimized (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_resizable ():Bool {\n\t\t\n\t\treturn __resizable;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_resizable (value:Bool):Bool {\n\t\t\n\t\t__resizable = backend.setResizable (value);\n\t\treturn __resizable;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_scale ():Float {\n\t\t\n\t\treturn __scale;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_title ():String {\n\t\t\n\t\treturn __title;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_title (value:String):String {\n\t\t\n\t\treturn __title = backend.setTitle (__title);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_width ():Int {\n\t\t\n\t\treturn __width;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_width (value:Int):Int {\n\t\t\n\t\tresize (value, __height);\n\t\treturn __width;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_x ():Int {\n\t\t\n\t\treturn __x;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_x (value:Int):Int {\n\t\t\n\t\tmove (value, __y);\n\t\treturn __x;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_y ():Int {\n\t\t\n\t\treturn __y;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_y (value:Int):Int {\n\t\t\n\t\tmove (__x, value);\n\t\treturn __y;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if flash\n@:noCompletion private typedef WindowBackend = lime._backend.flash.FlashWindow;\n#elseif (js && html5)\n@:noCompletion private typedef WindowBackend = lime._backend.html5.HTML5Window;\n#else\n@:noCompletion private typedef WindowBackend = lime._backend.native.NativeWindow;\n#end","package lime.ui;\n\n\nimport lime.app.Event;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nclass Joystick {\n\t\n\t\n\tpublic static var devices = new Map<Int, Joystick> ();\n\tpublic static var onConnect = new Event<Joystick->Void> ();\n\t\n\tpublic var connected (default, null):Bool;\n\tpublic var guid (get, never):String;\n\tpublic var id (default, null):Int;\n\tpublic var name (get, never):String;\n\tpublic var numAxes (get, never):Int;\n\tpublic var numButtons (get, never):Int;\n\tpublic var numHats (get, never):Int;\n\tpublic var numTrackballs (get, never):Int;\n\tpublic var onAxisMove = new Event<Int->Float->Void> ();\n\tpublic var onButtonDown = new Event<Int->Void> ();\n\tpublic var onButtonUp = new Event<Int->Void> ();\n\tpublic var onDisconnect = new Event<Void->Void> ();\n\tpublic var onHatMove = new Event<Int->JoystickHatPosition->Void> ();\n\tpublic var onTrackballMove = new Event<Int->Float->Void> ();\n\t\n\t\n\tpublic function new (id:Int) {\n\t\t\n\t\tthis.id = id;\n\t\tconnected = true;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function __connect (id:Int):Void {\n\t\t\n\t\tif (!devices.exists (id)) {\n\t\t\t\n\t\t\tvar joystick = new Joystick (id);\n\t\t\tdevices.set (id, joystick);\n\t\t\tonConnect.dispatch (joystick);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function __disconnect (id:Int):Void {\n\t\t\n\t\tvar joystick = devices.get (id);\n\t\tif (joystick != null) joystick.connected = false;\n\t\tdevices.remove (id);\n\t\tif (joystick != null) joystick.onDisconnect.dispatch ();\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\t@:noCompletion private static function __getDeviceData ():Array<Dynamic> {\n\t\t\n\t\treturn (untyped navigator.getGamepads) ? untyped navigator.getGamepads () : (untyped navigator.webkitGetGamepads) ? untyped navigator.webkitGetGamepads () : null;\n\t\t\n\t}\n\t#end\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_guid ():String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_joystick_get_device_guid (this.id);\n\t\t#elseif (js && html5)\n\t\tvar devices = __getDeviceData ();\n\t\treturn devices[this.id].id;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_name ():String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_joystick_get_device_name (this.id);\n\t\t#elseif (js && html5)\n\t\tvar devices = __getDeviceData ();\n\t\treturn devices[this.id].id;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_numAxes ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_joystick_get_num_axes (this.id);\n\t\t#elseif (js && html5)\n\t\tvar devices = __getDeviceData ();\n\t\treturn devices[this.id].axes.length;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_numButtons ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_joystick_get_num_buttons (this.id);\n\t\t#elseif (js && html5)\n\t\tvar devices = __getDeviceData ();\n\t\treturn devices[this.id].buttons.length;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_numHats ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_joystick_get_num_hats (this.id);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_numTrackballs ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_joystick_get_num_trackballs (this.id);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_joystick_get_device_guid (id:Int):Dynamic;\n\t@:cffi private static function lime_joystick_get_device_name (id:Int):Dynamic;\n\t@:cffi private static function lime_joystick_get_num_axes (id:Int):Int;\n\t@:cffi private static function lime_joystick_get_num_buttons (id:Int):Int;\n\t@:cffi private static function lime_joystick_get_num_hats (id:Int):Int;\n\t@:cffi private static function lime_joystick_get_num_trackballs (id:Int):Int;\n\t#end\n\t\n\t\n}\n","package lime.graphics;\n\n\nimport lime.app.Event;\nimport lime.math.Rectangle;\nimport lime.ui.Window;\n\n\nclass Renderer {\n\t\n\t\n\tpublic var context:RenderContext;\n\tpublic var onContextLost = new Event<Void->Void> ();\n\tpublic var onContextRestored = new Event<RenderContext->Void> ();\n\tpublic var onRender = new Event<Void->Void> ();\n\tpublic var type:RendererType;\n\tpublic var window:Window;\n\t\n\t@:noCompletion private var backend:RendererBackend;\n\t\n\t\n\tpublic function new (window:Window) {\n\t\t\n\t\tthis.window = window;\n\t\t\n\t\tbackend = new RendererBackend (this);\n\t\t\n\t\tthis.window.renderer = this;\n\t\t\n\t}\n\t\n\t\n\tpublic function create ():Void {\n\t\t\n\t\tbackend.create ();\n\t\t\n\t}\n\t\n\t\n\tpublic function flip ():Void {\n\t\t\n\t\tbackend.flip ();\n\t\t\n\t}\n\t\n\t\n\tpublic function readPixels (rect:Rectangle = null):Image {\n\t\t\n\t\treturn backend.readPixels (rect);\n\t\t\n\t}\n\t\n\t\n\tprivate function render ():Void {\n\t\t\n\t\tbackend.render ();\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if flash\n@:noCompletion private typedef RendererBackend = lime._backend.flash.FlashRenderer;\n#elseif (js && html5)\n@:noCompletion private typedef RendererBackend = lime._backend.html5.HTML5Renderer;\n#else\n@:noCompletion private typedef RendererBackend = lime._backend.native.NativeRenderer;\n#end","package lime.ui;\n\n\nimport lime.app.Event;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n@:access(lime.ui.Joystick)\n\n\nclass Gamepad {\n\t\n\t\n\tpublic static var devices = new Map<Int, Gamepad> ();\n\tpublic static var onConnect = new Event<Gamepad->Void> ();\n\t\n\tpublic var connected (default, null):Bool;\n\tpublic var guid (get, never):String;\n\tpublic var id (default, null):Int;\n\tpublic var name (get, never):String;\n\tpublic var onAxisMove = new Event<GamepadAxis->Float->Void> ();\n\tpublic var onButtonDown = new Event<GamepadButton->Void> ();\n\tpublic var onButtonUp = new Event<GamepadButton->Void> ();\n\tpublic var onDisconnect = new Event<Void->Void> ();\n\t\n\t\n\tpublic function new (id:Int) {\n\t\t\n\t\tthis.id = id;\n\t\tconnected = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function addMappings (mappings:Array<String>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\tlime_gamepad_add_mappings (mappings);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function __connect (id:Int):Void {\n\t\t\n\t\tif (!devices.exists (id)) {\n\t\t\t\n\t\t\tvar gamepad = new Gamepad (id);\n\t\t\tdevices.set (id, gamepad);\n\t\t\tonConnect.dispatch (gamepad);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function __disconnect (id:Int):Void {\n\t\t\n\t\tvar gamepad = devices.get (id);\n\t\tif (gamepad != null) gamepad.connected = false;\n\t\tdevices.remove (id);\n\t\tif (gamepad != null) gamepad.onDisconnect.dispatch ();\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_guid ():String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_gamepad_get_device_guid (this.id);\n\t\t#elseif (js && html5)\n\t\tvar devices = Joystick.__getDeviceData ();\n\t\treturn devices[this.id].id;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_name ():String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_gamepad_get_device_name (this.id);\n\t\t#elseif (js && html5)\n\t\tvar devices = Joystick.__getDeviceData ();\n\t\treturn devices[this.id].id;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_gamepad_add_mappings (mappings:Dynamic):Void;\n\t@:cffi private static function lime_gamepad_get_device_guid (id:Int):Dynamic;\n\t@:cffi private static function lime_gamepad_get_device_name (id:Int):Dynamic;\n\t#end\n\t\n\t\n}\n","package lime.ui;\n\n\nimport lime.app.Event;\n\n\nclass Touch {\n\t\n\t\n\tpublic static var onEnd = new Event<Touch->Void> ();\n\tpublic static var onMove = new Event<Touch->Void> ();\n\tpublic static var onStart = new Event<Touch->Void> ();\n\t\n\tpublic var device:Int;\n\tpublic var dx:Float;\n\tpublic var dy:Float;\n\tpublic var id:Int;\n\tpublic var pressure:Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\t\n\t\n\tpublic function new (x:Float, y:Float, id:Int, dx:Float, dy:Float, pressure:Float, device:Int) {\n\t\t\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t\tthis.dx = dx;\n\t\tthis.dy = dy;\n\t\tthis.pressure = pressure;\n\t\tthis.device = device;\n\t\t\n\t}\n\t\n\t\n}","package lime.app;\n\n\nimport lime.system.ThreadPool;\n\n@:allow(lime.app.Promise)\n\n\nclass Future<T> {\n\t\n\t\n\tprivate static var __threadPool:ThreadPool;\n\t\n\tpublic var isCompleted (get, null):Bool;\n\tpublic var value (default, null):T;\n\t\n\tprivate var __completed:Bool;\n\tprivate var __completeListeners:Array<T->Void>;\n\tprivate var __errored:Bool;\n\tprivate var __errorListeners:Array<Dynamic->Void>;\n\tprivate var __errorMessage:Dynamic;\n\tprivate var __progressListeners:Array<Float->Void>;\n\t\n\t\n\tpublic function new (work:Void->T = null) {\n\t\t\n\t\tif (work != null) {\n\t\t\t\n\t\t\tif (__threadPool == null) {\n\t\t\t\t\n\t\t\t\t__threadPool = new ThreadPool ();\n\t\t\t\t__threadPool.doWork.add (threadPool_doWork);\n\t\t\t\t__threadPool.onComplete.add (threadPool_onComplete);\n\t\t\t\t__threadPool.onError.add (threadPool_onError);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar promise = new Promise<T> ();\n\t\t\tpromise.future = this;\n\t\t\t\n\t\t\t__threadPool.queue ({ promise: promise, work: work } );\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onComplete (listener:T->Void):Future<T> {\n\t\t\n\t\tif (listener != null) {\n\t\t\t\n\t\t\tif (__completed) {\n\t\t\t\t\n\t\t\t\tlistener (value);\n\t\t\t\t\n\t\t\t} else if (!__errored) {\n\t\t\t\t\n\t\t\t\tif (__completeListeners == null) {\n\t\t\t\t\t\n\t\t\t\t\t__completeListeners = new Array ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__completeListeners.push (listener);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function onError (listener:Dynamic->Void):Future<T> {\n\t\t\n\t\tif (listener != null) {\n\t\t\t\n\t\t\tif (__errored) {\n\t\t\t\t\n\t\t\t\tlistener (__errorMessage);\n\t\t\t\t\n\t\t\t} else if (!__completed) {\n\t\t\t\t\n\t\t\t\tif (__errorListeners == null) {\n\t\t\t\t\t\n\t\t\t\t\t__errorListeners = new Array ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__errorListeners.push (listener);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function onProgress (listener:Float->Void):Future<T> {\n\t\t\n\t\tif (listener != null) {\n\t\t\t\n\t\t\tif (__progressListeners == null) {\n\t\t\t\t\n\t\t\t\t__progressListeners = new Array ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__progressListeners.push (listener);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function then<U> (next:T->Future<U>):Future<U> {\n\t\t\n\t\tif (__completed) {\n\t\t\t\n\t\t\treturn next (value);\n\t\t\t\n\t\t} else if (__errored) {\n\t\t\t\n\t\t\tvar future = new Future<U> ();\n\t\t\tfuture.onError (__errorMessage);\n\t\t\treturn future;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar promise = new Promise<U> ();\n\t\t\t\n\t\t\tonError (promise.error);\n\t\t\tonProgress (promise.progress);\n\t\t\t\n\t\t\tonComplete (function (val) {\n\t\t\t\t\n\t\t\t\tvar future = next (val);\n\t\t\t\tfuture.onError (promise.error);\n\t\t\t\tfuture.onComplete (promise.complete);\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t\treturn promise.future;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate static function threadPool_doWork (state:Dynamic):Void {\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tvar result = state.work ();\n\t\t\t__threadPool.sendComplete ({ promise: state.promise, result: result } );\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__threadPool.sendError ({ promise: state.promise, error: e } );\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function threadPool_onComplete (state:Dynamic):Void {\n\t\t\n\t\tstate.promise.complete (state.result);\n\t\t\n\t}\n\t\n\t\n\tprivate static function threadPool_onError (state:Dynamic):Void {\n\t\t\n\t\tstate.promise.error (state.error);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_isCompleted ():Bool {\n\t\t\n\t\treturn (__completed || __errored);\n\t\t\n\t}\n\t\n\t\n}","package lime.app;\n\n\n@:allow(lime.app.Future)\n\n\nclass Promise<T> {\n\t\n\t\n\tpublic var future (default, null):Future<T>;\n\tpublic var isCompleted (get, null):Bool;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tfuture = new Future ();\n\t\t\n\t}\n\t\n\t\n\tpublic function complete (data:T):Promise<T> {\n\t\t\n\t\tif (!future.__errored) {\n\t\t\t\n\t\t\tfuture.__completed = true;\n\t\t\tfuture.value = data;\n\t\t\t\n\t\t\tif (future.__completeListeners != null) {\n\t\t\t\t\n\t\t\t\tfor (listener in future.__completeListeners) {\n\t\t\t\t\t\n\t\t\t\t\tlistener (data);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfuture.__completeListeners = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function completeWith (future:Future<T>):Promise<T> {\n\t\t\n\t\tfuture.onComplete (complete);\n\t\tfuture.onError (error);\n\t\tfuture.onProgress (progress);\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\t\n\tpublic function error (msg:Dynamic):Promise<T> {\n\t\t\n\t\tif (!future.__completed) {\n\t\t\t\n\t\t\tfuture.__errored = true;\n\t\t\tfuture.__errorMessage = msg;\n\t\t\t\n\t\t\tif (future.__errorListeners != null) {\n\t\t\t\t\n\t\t\t\tfor (listener in future.__errorListeners) {\n\t\t\t\t\t\n\t\t\t\t\tlistener (msg);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfuture.__errorListeners = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function progress (progress:Float):Promise<T> {\n\t\t\n\t\tif (!future.__errored && !future.__completed) {\n\t\t\t\n\t\t\tif (future.__progressListeners != null) {\n\t\t\t\t\n\t\t\t\tfor (listener in future.__progressListeners) {\n\t\t\t\t\t\n\t\t\t\t\tlistener (progress);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_isCompleted ():Bool {\n\t\t\n\t\treturn future.isCompleted;\n\t\t\n\t}\n\t\n\t\n}","package lime.audio;\n\n\nimport lime.audio.openal.AL;\nimport lime.utils.ArrayBufferView;\n\n\nclass ALAudioContext {\n\t\n\t\n\tpublic var NONE:Int = 0;\n\tpublic var FALSE:Int = 0;\n\tpublic var TRUE:Int = 1;\n\tpublic var SOURCE_RELATIVE:Int = 0x202;\n\tpublic var CONE_INNER_ANGLE:Int = 0x1001;\n\tpublic var CONE_OUTER_ANGLE:Int = 0x1002;\n\tpublic var PITCH:Int = 0x1003;\n\tpublic var POSITION:Int = 0x1004;\n\tpublic var DIRECTION:Int = 0x1005;\n\tpublic var VELOCITY:Int = 0x1006;\n\tpublic var LOOPING:Int = 0x1007;\n\tpublic var BUFFER:Int = 0x1009;\n\tpublic var GAIN:Int = 0x100A;\n\tpublic var MIN_GAIN:Int = 0x100D;\n\tpublic var MAX_GAIN:Int = 0x100E;\n\tpublic var ORIENTATION:Int = 0x100F;\n\tpublic var SOURCE_STATE:Int = 0x1010;\n\tpublic var INITIAL:Int = 0x1011;\n\tpublic var PLAYING:Int = 0x1012;\n\tpublic var PAUSED:Int = 0x1013;\n\tpublic var STOPPED:Int = 0x1014;\n\tpublic var BUFFERS_QUEUED:Int = 0x1015;\n\tpublic var BUFFERS_PROCESSED:Int = 0x1016;\n\tpublic var REFERENCE_DISTANCE:Int = 0x1020;\n\tpublic var ROLLOFF_FACTOR:Int = 0x1021;\n\tpublic var CONE_OUTER_GAIN:Int = 0x1022;\n\tpublic var MAX_DISTANCE:Int = 0x1023;\n\tpublic var SEC_OFFSET:Int = 0x1024;\n\tpublic var SAMPLE_OFFSET:Int = 0x1025;\n\tpublic var BYTE_OFFSET:Int = 0x1026;\n\tpublic var SOURCE_TYPE:Int = 0x1027;\n\tpublic var STATIC:Int = 0x1028;\n\tpublic var STREAMING:Int = 0x1029;\n\tpublic var UNDETERMINED:Int = 0x1030;\n\tpublic var FORMAT_MONO8:Int = 0x1100;\n\tpublic var FORMAT_MONO16:Int = 0x1101;\n\tpublic var FORMAT_STEREO8:Int = 0x1102;\n\tpublic var FORMAT_STEREO16:Int = 0x1103;\n\tpublic var FREQUENCY:Int = 0x2001;\n\tpublic var BITS:Int = 0x2002;\n\tpublic var CHANNELS:Int = 0x2003;\n\tpublic var SIZE:Int = 0x2004;\n\tpublic var NO_ERROR:Int = 0;\n\tpublic var INVALID_NAME:Int = 0xA001;\n\tpublic var INVALID_ENUM:Int = 0xA002;\n\tpublic var INVALID_VALUE:Int = 0xA003;\n\tpublic var INVALID_OPERATION:Int = 0xA004;\n\tpublic var OUT_OF_MEMORY:Int = 0xA005;\n\tpublic var VENDOR:Int = 0xB001;\n\tpublic var VERSION:Int = 0xB002;\n\tpublic var RENDERER:Int = 0xB003;\n\tpublic var EXTENSIONS:Int = 0xB004;\n\tpublic var DOPPLER_FACTOR:Int = 0xC000;\n\tpublic var SPEED_OF_SOUND:Int = 0xC003;\n\tpublic var DOPPLER_VELOCITY:Int = 0xC001;\n\tpublic var DISTANCE_MODEL:Int = 0xD000;\n\tpublic var INVERSE_DISTANCE:Int = 0xD001;\n\tpublic var INVERSE_DISTANCE_CLAMPED:Int = 0xD002;\n\tpublic var LINEAR_DISTANCE:Int = 0xD003;\n\tpublic var LINEAR_DISTANCE_CLAMPED:Int = 0xD004;\n\tpublic var EXPONENT_DISTANCE:Int = 0xD005;\n\tpublic var EXPONENT_DISTANCE_CLAMPED:Int = 0xD006;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function bufferData (buffer:Int, format:Int, data:ArrayBufferView, size:Int, freq:Int):Void {\n\t\t\n\t\tAL.bufferData (buffer, format, data, size, freq);\n\t\t\n\t}\n\t\n\t\n\tpublic function buffer3f (buffer:Int, param:Int, value1:Float, value2:Float, value3:Float):Void {\n\t\t\n\t\tAL.buffer3f (buffer, param, value1, value2, value3);\n\t\t\n\t}\n\t\n\t\n\tpublic function buffer3i (buffer:Int, param:Int, value1:Int, value2:Int, value3:Int):Void {\n\t\t\n\t\tAL.buffer3i (buffer, param, value1, value2, value3);\n\t\t\n\t}\n\t\n\t\n\tpublic function bufferf (buffer:Int, param:Int, value:Float):Void {\n\t\t\n\t\tAL.bufferf (buffer, param, value);\n\t\t\n\t}\n\t\n\t\n\tpublic function bufferfv (buffer:Int, param:Int, values:Array<Float>):Void {\n\t\t\n\t\tAL.bufferfv (buffer, param, values);\n\t\t\n\t}\n\t\n\t\n\tpublic function bufferi (buffer:Int, param:Int, value:Int):Void {\n\t\t\n\t\tAL.bufferi (buffer, param, value);\n\t\t\n\t}\n\t\n\t\n\tpublic function bufferiv (buffer:Int, param:Int, values:Array<Int>):Void {\n\t\t\n\t\tAL.bufferiv (buffer, param, values);\n\t\t\n\t}\n\t\n\t\n\tpublic function deleteBuffer (buffer:Int):Void {\n\t\t\n\t\tAL.deleteBuffer (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic function deleteBuffers (buffers:Array<Int>):Void {\n\t\t\n\t\tAL.deleteBuffers (buffers);\n\t\t\n\t}\n\t\n\t\n\tpublic function deleteSource (source:Int):Void {\n\t\t\n\t\tAL.deleteSource (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function deleteSources (sources:Array<Int>):Void {\n\t\t\n\t\tAL.deleteSources (sources);\n\t\t\n\t}\n\t\n\t\n\tpublic function disable (capability:Int):Void {\n\t\t\n\t\tAL.disable (capability);\n\t\t\n\t}\n\t\n\t\n\tpublic function distanceModel (distanceModel:Int):Void {\n\t\t\n\t\tAL.distanceModel (distanceModel);\n\t\t\n\t}\n\t\n\t\n\tpublic function dopplerFactor (value:Float):Void {\n\t\t\n\t\tAL.dopplerFactor (value);\n\t\t\n\t}\n\t\n\t\n\tpublic function dopplerVelocity (value:Float):Void {\n\t\t\n\t\tAL.dopplerVelocity (value);\n\t\t\n\t}\n\t\n\t\n\tpublic function enable (capability:Int):Void {\n\t\t\n\t\tAL.enable (capability);\n\t\t\n\t}\n\t\n\t\n\tpublic function genSource ():Int {\n\t\t\n\t\treturn AL.genSource ();\n\t\t\n\t}\n\t\n\t\n\tpublic function genSources (n:Int):Array<Int> {\n\t\t\n\t\treturn AL.genSources (n);\n\t\t\n\t}\n\t\n\t\n\tpublic function genBuffer ():Int {\n\t\t\n\t\treturn AL.genBuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic function genBuffers (n:Int):Array<Int> {\n\t\t\n\t\treturn AL.genBuffers (n);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBoolean (param:Int):Bool {\n\t\t\n\t\treturn AL.getBoolean (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBooleanv (param:Int, count:Int = 1 ):Array<Bool> {\n\t\t\n\t\treturn AL.getBooleanv (param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBuffer3f (buffer:Int, param:Int):Array<Float> {\n\t\t\n\t\treturn AL.getBuffer3f (buffer, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBuffer3i (buffer:Int, param:Int):Array<Int> {\n\t\t\n\t\treturn AL.getBuffer3i (buffer, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBufferf (buffer:Int, param:Int):Float {\n\t\t\n\t\treturn AL.getBufferf (buffer, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBufferfv (buffer:Int, param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\treturn AL.getBufferfv (buffer, param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBufferi (buffer:Int, param:Int):Int {\n\t\t\n\t\treturn AL.getBufferi (buffer, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBufferiv (buffer:Int, param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\treturn AL.getBufferiv (buffer, param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getDouble (param:Int):Float {\n\t\t\n\t\treturn AL.getDouble (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getDoublev (param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\treturn AL.getDoublev (param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getEnumValue (ename:String):Int {\n\t\t\n\t\treturn AL.getEnumValue (ename);\n\t\t\n\t}\n\t\n\t\n\tpublic function getError ():Int {\n\t\t\n\t\treturn AL.getError ();\n\t\t\n\t}\n\t\n\t\n\tpublic function getErrorString ():String {\n\t\t\n\t\treturn AL.getErrorString ();\n\t\t\n\t}\n\t\n\t\n\tpublic function getFloat (param:Int):Float {\n\t\t\n\t\treturn AL.getFloat (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getFloatv (param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\treturn AL.getFloatv (param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getInteger (param:Int):Int {\n\t\t\n\t\treturn AL.getInteger (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getIntegerv (param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\treturn AL.getIntegerv (param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getListener3f (param:Int):Array<Float> {\n\t\t\n\t\treturn AL.getListener3f (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getListener3i (param:Int):Array<Int> {\n\t\t\n\t\treturn AL.getListener3i (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getListenerf (param:Int):Float {\n\t\t\n\t\treturn AL.getListenerf (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getListenerfv (param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\treturn AL.getListenerfv (param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getListeneri (param:Int):Int {\n\t\t\n\t\treturn AL.getListeneri (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getListeneriv (param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\treturn AL.getListeneriv (param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getProcAddress (fname:String):Dynamic {\n\t\t\n\t\treturn AL.getProcAddress (fname);\n\t\t\n\t}\n\t\n\t\n\tpublic function getSource3f (source:Int, param:Int):Array<Float> {\n\t\t\n\t\treturn AL.getSource3f (source, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getSourcef (source:Int, param:Int):Float {\n\t\t\n\t\treturn AL.getSourcef (source, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getSource3i (source:Int, param:Int):Array<Int> {\n\t\t\n\t\treturn AL.getSource3i (source, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getSourcefv (source:Int, param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\treturn AL.getSourcefv (source, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getSourcei (source:Int, param:Int):Int {\n\t\t\n\t\treturn AL.getSourcei (source, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getSourceiv (source:Int, param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\treturn AL.getSourceiv (source, param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getString (param:Int):String {\n\t\t\n\t\treturn AL.getString (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function isBuffer (buffer:Int):Bool {\n\t\t\n\t\treturn AL.isBuffer (buffer);\n\t\t\n\t}\t\n\t\n\t\n\tpublic function isEnabled (capability:Int):Bool {\n\t\t\n\t\treturn AL.isEnabled (capability);\n\t\t\n\t}\n\t\n\t\n\tpublic function isExtensionPresent (extname:String):Bool {\n\t\t\n\t\treturn AL.isExtensionPresent (extname);\n\t\t\n\t}\n\t\n\t\n\tpublic function isSource (source:Int):Bool {\n\t\t\n\t\treturn AL.isSource (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function listener3f (param:Int, value1:Float, value2:Float, value3:Float):Void {\n\t\t\n\t\tAL.listener3f (param, value1, value2, value3);\n\t\t\n\t}\n\t\n\t\n\tpublic function listener3i (param:Int, value1:Int, value2:Int, value3:Int):Void {\n\t\t\n\t\tAL.listener3i (param, value1, value2, value3);\n\t\t\n\t}\n\t\n\t\n\tpublic function listenerf (param:Int, value:Float):Void {\n\t\t\n\t\tAL.listenerf (param, value);\n\t\t\n\t}\n\t\n\t\n\tpublic function listenerfv (param:Int, values:Array<Float>):Void {\n\t\t\n\t\tAL.listenerfv (param, values);\n\t\t\n\t}\n\t\n\t\n\tpublic function listeneri (param:Int, value:Int):Void {\n\t\t\n\t\tAL.listeneri (param, value);\n\t\t\n\t}\n\t\n\t\n\tpublic function listeneriv (param:Int, values:Array<Int>):Void {\n\t\t\n\t\tAL.listeneriv (param, values);\n\t\t\n\t}\n\t\n\t\n\tpublic function source3f (source:Int, param:Int, value1:Float, value2:Float, value3:Float):Void {\n\t\t\n\t\tAL.source3f (source, param, value1, value2, value3);\n\t\t\n\t}\n\t\n\t\n\tpublic function source3i (source:Int, param:Int, value1:Int, value2:Int, value3:Int):Void {\n\t\t\n\t\tAL.source3i (source, param, value1, value2, value3);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcef (source:Int, param:Int, value:Float):Void {\n\t\t\n\t\tAL.sourcef (source, param, value);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcefv (source:Int, param:Int, values:Array<Float>):Void {\n\t\t\n\t\tAL.sourcefv (source, param, values);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcei (source:Int, param:Int, value:Int):Void {\n\t\t\n\t\tAL.sourcei (source, param, value);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceiv (source:Int, param:Int, values:Array<Int>):Void {\n\t\t\n\t\tAL.sourceiv (source, param, values);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcePlay (source:Int):Void {\n\t\t\n\t\tAL.sourcePlay (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcePlayv (sources:Array<Int>):Void {\n\t\t\n\t\tAL.sourcePlayv (sources);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceStop (source:Int):Void {\n\t\t\n\t\tAL.sourceStop (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceStopv (sources:Array<Int>):Void {\n\t\t\n\t\tAL.sourceStopv (sources);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceRewind (source:Int):Void {\n\t\t\n\t\tAL.sourceRewind (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceRewindv (sources:Array<Int>):Void {\n\t\t\n\t\tAL.sourceRewindv (sources);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcePause (source:Int):Void {\n\t\t\n\t\tAL.sourcePause (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcePausev (sources:Array<Int>):Void {\n\t\t\n\t\tAL.sourcePausev (sources);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceQueueBuffer (source:Int, buffer:Int):Void {\n\t\t\n\t\tAL.sourceQueueBuffer (source, buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceQueueBuffers (source:Int, nb:Int, buffers:Array<Int>):Void {\n\t\t\n\t\tAL.sourceQueueBuffers (source, nb, buffers);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceUnqueueBuffer (source:Int):Int {\n\t\t\n\t\treturn AL.sourceUnqueueBuffer (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceUnqueueBuffers (source:Int, nb:Int):Array<Int> {\n\t\t\n\t\treturn AL.sourceUnqueueBuffers (source, nb);\n\t\t\n\t}\n\t\n\t\n\tpublic function speedOfSound (value:Float):Void {\n\t\t\n\t\tAL.speedOfSound (value);\n\t\t\n\t}\n\t\n\t\n}","package lime.audio;\n\n\nimport lime.audio.openal.ALC;\nimport lime.audio.openal.ALContext;\nimport lime.audio.openal.ALDevice;\n\n\nclass ALCAudioContext {\n\t\n\t\n\tpublic var FALSE:Int = 0;\n\tpublic var TRUE:Int = 1;\n\tpublic var FREQUENCY:Int = 0x1007;\n\tpublic var REFRESH:Int = 0x1008;\n\tpublic var SYNC:Int = 0x1009;\n\tpublic var MONO_SOURCES:Int = 0x1010;\n\tpublic var STEREO_SOURCES:Int = 0x1011;\n\tpublic var NO_ERROR:Int = 0;\n\tpublic var INVALID_DEVICE:Int = 0xA001;\n\tpublic var INVALID_CONTEXT:Int = 0xA002;\n\tpublic var INVALID_ENUM:Int = 0xA003;\n\tpublic var INVALID_VALUE:Int = 0xA004;\n\tpublic var OUT_OF_MEMORY:Int = 0xA005;\n\tpublic var ATTRIBUTES_SIZE:Int = 0x1002;\n\tpublic var ALL_ATTRIBUTES:Int = 0x1003;\n\tpublic var DEFAULT_DEVICE_SPECIFIER:Int = 0x1004;\n\tpublic var DEVICE_SPECIFIER:Int = 0x1005;\n\tpublic var EXTENSIONS:Int = 0x1006;\n\tpublic var ENUMERATE_ALL_EXT:Int = 1;\n\tpublic var DEFAULT_ALL_DEVICES_SPECIFIER:Int = 0x1012;\n\tpublic var ALL_DEVICES_SPECIFIER:Int = 0x1013;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function closeDevice (device:ALDevice):Bool {\n\t\t\n\t\treturn ALC.closeDevice (device);\n\t\t\n\t}\n\t\n\t\n\tpublic function createContext (device:ALDevice, attrlist:Array<Int> = null):ALContext {\n\t\t\n\t\treturn ALC.createContext (device, attrlist);\n\t\t\n\t}\n\t\n\t\n\tpublic function destroyContext (context:ALContext):Void {\n\t\t\n\t\tALC.destroyContext (context);\n\t\t\n\t}\n\t\n\t\n\tpublic function getContextsDevice (context:ALContext):ALDevice {\n\t\t\n\t\treturn ALC.getContextsDevice (context);\n\t\t\n\t}\n\t\n\t\n\tpublic function getCurrentContext ():ALContext {\n\t\t\n\t\treturn ALC.getCurrentContext ();\n\t\t\n\t}\n\t\n\t\n\tpublic function getError (device:ALDevice):Int {\n\t\t\n\t\treturn ALC.getError (device);\n\t\t\n\t}\n\t\n\t\n\tpublic function getErrorString (device:ALDevice):String {\n\t\t\n\t\treturn ALC.getErrorString (device);\n\t\t\n\t}\n\t\n\t\n\tpublic function getIntegerv (device:ALDevice, param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\treturn ALC.getIntegerv (device, param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getString (device:ALDevice, param:Int):String {\n\t\t\n\t\treturn ALC.getString (device, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function makeContextCurrent (context:ALContext):Bool {\n\t\t\n\t\treturn ALC.makeContextCurrent (context);\n\t\t\n\t}\n\t\n\t\n\tpublic function openDevice (deviceName:String = null):ALDevice {\n\t\t\n\t\treturn ALC.openDevice (deviceName);\n\t\t\n\t}\n\t\n\t\n\tpublic function processContext (context:ALContext):Void {\n\t\t\n\t\tALC.processContext (context);\n\t\t\n\t}\n\t\n\t\n\tpublic function suspendContext (context:ALContext):Void {\n\t\t\n\t\tALC.suspendContext (context);\n\t\t\n\t}\n\t\n\t\n}","package lime.audio;\n\n\nimport haxe.io.Bytes;\nimport lime.audio.openal.AL;\n//import lime.net.URLLoader;\n//import lime.net.URLRequest;\nimport lime.utils.UInt8Array;\n\n#if (js && html5)\nimport js.html.Audio;\n#elseif flash\nimport flash.media.Sound;\n#elseif lime_console\nimport lime.audio.fmod.FMODSound;\n#end\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nclass AudioBuffer {\n\t\n\t\n\tpublic var bitsPerSample:Int;\n\tpublic var channels:Int;\n\tpublic var data:UInt8Array;\n\tpublic var id:UInt;\n\tpublic var sampleRate:Int;\n\t\n\t#if (js && html5)\n\tpublic var src:Audio;\n\t#elseif flash\n\tpublic var src:Sound;\n\t#elseif lime_console\n\tpublic var src:FMODSound;\n\t#else\n\tpublic var src:Dynamic;\n\t#end\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tid = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function dispose ():Void {\n\t\t\n\t\t#if lime_console\n\t\tif (channels > 0) {\n\t\t\tsrc.release ();\n\t\t\tchannels = 0;\n\t\t}\n\t\t#end\n\t\t\n\t}\n\n\n\t#if lime_console\n\t@:void\n\tprivate static function finalize (a:AudioBuffer):Void {\n\n\t\ta.dispose ();\n\n\t}\n\t#end\n\t\n\t\n\tpublic static function fromBytes (bytes:Bytes):AudioBuffer {\n\t\t\n\t\t#if lime_console\n\t\t\n\t\tlime.Lib.notImplemented (\"AudioBuffer.fromBytes\");\n\t\t\n\t\t#elseif ((cpp || neko || nodejs) && !macro)\n\t\t\n\t\tvar data:Dynamic = lime_audio_load (bytes);\n\t\t\n\t\tif (data != null) {\n\t\t\t\n\t\t\tvar audioBuffer = new AudioBuffer ();\n\t\t\taudioBuffer.bitsPerSample = data.bitsPerSample;\n\t\t\taudioBuffer.channels = data.channels;\n\t\t\taudioBuffer.data = new UInt8Array (@:privateAccess new Bytes (data.data.length, data.data.b));\n\t\t\taudioBuffer.sampleRate = data.sampleRate;\n\t\t\treturn audioBuffer;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String):AudioBuffer {\n\t\t\n\t\t#if lime_console\n\t\t\n\t\tvar sound:FMODSound = FMODSound.fromFile (path);\n\t\t\n\t\tif (sound.valid) {\n\t\t\t\n\t\t\t// TODO(james4k): AudioBuffer needs sound info filled in\n\t\t\t// TODO(james4k): probably move fmod.Sound creation to AudioSource,\n\t\t\t// and keep AudioBuffer as raw data. not as efficient for typical\n\t\t\t// use, but probably less efficient to do complex copy-on-read\n\t\t\t// mechanisms and such. also, what do we do for compressed sounds?\n\t\t\t// usually don't want to decompress large music files. I suppose we\n\t\t\t// can specialize for those and not allow data access.\n\t\t\tvar audioBuffer = new AudioBuffer ();\n\t\t\taudioBuffer.bitsPerSample = 0;\n\t\t\taudioBuffer.channels = 1;\n\t\t\taudioBuffer.data = null;\n\t\t\taudioBuffer.sampleRate = 0;\n\t\t\taudioBuffer.src = sound;\n\t\t\tcpp.vm.Gc.setFinalizer (audioBuffer, cpp.Function.fromStaticFunction (finalize));\n\t\t\treturn audioBuffer;\n\t\t\t\n\t\t}\n\t\t\n\t\t#elseif ((cpp || neko || nodejs) && !macro)\n\t\t\n\t\tvar data:Dynamic = lime_audio_load (path);\n\t\t\n\t\tif (data != null) {\n\t\t\t\n\t\t\tvar audioBuffer = new AudioBuffer ();\n\t\t\taudioBuffer.bitsPerSample = data.bitsPerSample;\n\t\t\taudioBuffer.channels = data.channels;\n\t\t\taudioBuffer.data = new UInt8Array (@:privateAccess new Bytes (data.data.length, data.data.b));\n\t\t\taudioBuffer.sampleRate = data.sampleRate;\n\t\t\treturn audioBuffer;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromURL (url:String, handler:AudioBuffer->Void):Void {\n\t\t\n\t\tif (url != null && url.indexOf (\"http://\") == -1 && url.indexOf (\"https://\") == -1) {\n\t\t\t\n\t\t\thandler (AudioBuffer.fromFile (url));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t// TODO: Support streaming sound\n\t\t\t\n\t\t\t#if flash\n\t\t\t\n\t\t\tvar loader = new flash.net.URLLoader ();\n\t\t\tloader.addEventListener (flash.events.Event.COMPLETE, function (_) {\n\t\t\t\thandler (AudioBuffer.fromBytes (cast loader.data));\n\t\t\t});\n\t\t\tloader.addEventListener (flash.events.IOErrorEvent.IO_ERROR, function (_) {\n\t\t\t\thandler (null);\n\t\t\t});\n\t\t\tloader.load (new flash.net.URLRequest (url));\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\t//var loader = new URLLoader ();\n\t\t\t//loader.onComplete.add (function (_) {\n\t\t\t\t//var bytes = Bytes.ofString (loader.data);\n\t\t\t\t//handler (AudioBuffer.fromBytes (bytes));\n\t\t\t//});\n\t\t\t//loader.onIOError.add (function (_, msg) {\n\t\t\t\t//handler (null);\n\t\t\t//});\n\t\t\t//loader.load (new URLRequest (url));\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_audio_load (data:Dynamic):Dynamic;\n\t#end\n\t\n\t\n}\n","package lime.audio;\n\n\nimport lime.audio.openal.AL;\nimport lime.audio.openal.ALC;\nimport lime.audio.openal.ALContext;\nimport lime.audio.openal.ALDevice;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n\nclass AudioManager {\n\t\n\t\n\tpublic static var context:AudioContext;\n\t\n\t\n\tpublic static function init (context:AudioContext = null) {\n\t\t\n\t\tif (AudioManager.context == null) {\n\t\t\t\n\t\t\tif (context == null) {\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\n\t\t\t\t\t\tuntyped __js__ (\"window.AudioContext = window.AudioContext || window.webkitAudioContext;\");\n\t\t\t\t\t\tAudioManager.context = WEB (cast untyped __js__ (\"new AudioContext ()\"));\n\t\t\t\t\t\t\n\t\t\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tAudioManager.context = HTML5 (new HTML5AudioContext ());\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t#elseif flash\n\t\t\t\t\t\n\t\t\t\t\tAudioManager.context = FLASH (new FlashAudioContext ());\n\t\t\t\t\t\n\t\t\t\t#elseif lime_console\n\t\t\t\t\t\n\t\t\t\t\t// TODO\n\t\t\t\t\tAudioManager.context = CUSTOM (null);\n\t\t\t\t\n\t\t\t\t#else\n\t\t\t\t\t\n\t\t\t\t\tAudioManager.context = OPENAL (new ALCAudioContext (), new ALAudioContext ());\n\t\t\t\t\t\n\t\t\t\t\tvar device = ALC.openDevice ();\n\t\t\t\t\tvar ctx = ALC.createContext (device);\n\t\t\t\t\tALC.makeContextCurrent (ctx);\n\t\t\t\t\tALC.processContext (ctx);\n\t\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tAudioManager.context = context;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function resume ():Void {\n\t\t\n\t\tif (context != null) {\n\t\t\t\n\t\t\tswitch (context) {\n\t\t\t\t\n\t\t\t\tcase OPENAL (alc, al):\n\t\t\t\t\t\n\t\t\t\t\talc.processContext (alc.getCurrentContext ());\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function shutdown ():Void {\n\t\t\n\t\tif (context != null) {\n\t\t\t\n\t\t\tswitch (context) {\n\t\t\t\t\n\t\t\t\tcase OPENAL (alc, al):\n\t\t\t\t\t\n\t\t\t\t\tvar currentContext = alc.getCurrentContext ();\n\t\t\t\t\t\n\t\t\t\t\tif (currentContext != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar device = alc.getContextsDevice (currentContext);\n\t\t\t\t\t\talc.makeContextCurrent (null);\n\t\t\t\t\t\talc.destroyContext (currentContext);\n\t\t\t\t\t\talc.closeDevice (device);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function suspend ():Void {\n\t\t\n\t\tif (context != null) {\n\t\t\t\n\t\t\tswitch (context) {\n\t\t\t\t\n\t\t\t\tcase OPENAL (alc, al):\n\t\t\t\t\t\n\t\t\t\t\talc.suspendContext (alc.getCurrentContext ());\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n","package lime.audio;\n\n\nimport haxe.Timer;\nimport lime.app.Event;\nimport lime.audio.openal.AL;\n\n#if flash\nimport flash.media.SoundChannel;\n#elseif lime_console\nimport lime.audio.fmod.FMODChannel;\n#end\n\n#if lime_console\n// TODO(james4k): this is terribly hacky. looking for more sane solutions.  the\n// caller uses an extern declaration of this function so that it does not need\n// to include haxe dependencies, but that's not really the hacky part. need a\n// good way to export a c++ callable haxe function.\n@:cppNamespaceCode(\"\nvoid haxe_staticfunc_onFmodChannelEnd (ConsoleFmodChannel c) {\n\tAudioSource_obj::onFmodChannelEnd (c);\n}\n\")\n#end\n\n\nclass AudioSource {\n\t\n\t\n\tpublic var onComplete = new Event<Void->Void> ();\n\t\n\tpublic var buffer:AudioBuffer;\n\tpublic var currentTime (get, set):Int;\n\tpublic var gain (get, set):Float;\n\tpublic var length (get, set):Int;\n\tpublic var loops (get, set):Int;\n\tpublic var offset:Int;\n\n\tprivate var id:UInt;\n\tprivate var playing:Bool;\n\tprivate var pauseTime:Int;\n\tprivate var __length:Null<Int>;\n\tprivate var __loops:Int;\n\t\n\t#if flash\n\tprivate var channel:SoundChannel;\n\t#elseif lime_console\n\tprivate var channel:FMODChannel;\n\t#end\n\t\n\t#if (cpp || neko || nodejs)\n\tprivate var timer:Timer;\n\t#end\n\t\n\t\n\tpublic function new (buffer:AudioBuffer = null, offset:Int = 0, length:Null<Int> = null, loops:Int = 0) {\n\t\t\n\t\tthis.buffer = buffer;\n\t\tthis.offset = offset;\n\t\t\n\t\tif (length != null && length != 0) {\n\t\t\t\n\t\t\tthis.length = length;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.loops = loops;\n\t\tid = 0;\n\t\t\n\t\tif (buffer != null) {\n\t\t\t\n\t\t\tinit ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\n\t\n\tpublic function dispose ():Void {\n\t\t\n\t\tswitch (AudioManager.context) {\n\t\t\t\n\t\t\tcase OPENAL (alc, al):\n\t\t\t\t\n\t\t\t\tif (id != 0) {\n\t\t\t\t\t\n\t\t\t\t\tal.deleteSource (id);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function init ():Void {\n\t\t\n\t\tswitch (AudioManager.context) {\n\t\t\t\n\t\t\tcase OPENAL (alc, al):\n\t\t\t\t\n\t\t\t\tif (buffer.id == 0) {\n\t\t\t\t\t\n\t\t\t\t\tbuffer.id = al.genBuffer ();\n\t\t\t\t\t\n\t\t\t\t\tvar format = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (buffer.channels == 1) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (buffer.bitsPerSample == 8) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tformat = al.FORMAT_MONO8;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else if (buffer.bitsPerSample == 16) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tformat = al.FORMAT_MONO16;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (buffer.channels == 2) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (buffer.bitsPerSample == 8) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tformat = al.FORMAT_STEREO8;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else if (buffer.bitsPerSample == 16) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tformat = al.FORMAT_STEREO16;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tal.bufferData (buffer.id, format, buffer.data, buffer.data.length, buffer.sampleRate);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tid = al.genSource ();\n\t\t\t\tal.sourcei (id, al.BUFFER, buffer.id);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function play ():Void {\n\t\t\n\t\t#if html5\n\t\t#elseif flash\n\t\t\n\t\tif (channel != null) channel.stop ();\n\t\tvar channel = buffer.src.play (pauseTime / 1000);\n\t\t\n\t\t#elseif lime_console\n\t\t\n\t\tif (channel.valid) {\n\t\t\t\n\t\t\tchannel.resume ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tchannel = buffer.src.play ();\n\t\t\tchannel.setLoopCount (this.__loops);\n\t\t\t\n\t\t\tvar old = setFmodActive (channel, this);\n\t\t\t\n\t\t\tif (old != this) {\n\t\t\t\t\n\t\t\t\told.channel = FMODChannel.INVALID;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tif (playing || id == 0) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tplaying = true;\n\t\t\n\t\tvar time = currentTime;\n\t\t\n\t\tAL.sourcePlay (id);\n\t\t\n\t\tcurrentTime = time;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pause ():Void {\n\t\t\n\t\t#if html5\n\t\t#elseif flash\n\t\t\n\t\tif (channel != null) {\n\t\t\t\n\t\t\tpauseTime = Std.int (channel.position * 1000);\n\t\t\tchannel.stop ();\n\t\t\t\n\t\t}\n\t\t\n\t\t#elseif lime_console\n\t\t\n\t\tif (channel.valid) {\n\t\t\t\n\t\t\tchannel.pause ();\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tplaying = false;\n\t\tAL.sourcePause (id);\n\t\t\n\t\tif (timer != null) {\n\t\t\t\n\t\t\ttimer.stop ();\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function stop ():Void {\n\t\t\n\t\t#if html5\n\t\t#elseif flash\n\t\t\n\t\tpauseTime = 0;\n\t\t\n\t\tif (channel != null) {\n\t\t\t\n\t\t\tchannel.stop ();\n\t\t\t\n\t\t}\n\t\t\n\t\t#elseif lime_console\n\t\t\n\t\tif (channel.valid) {\n\t\t\t\n\t\t\tchannel.stop ();\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tplaying = false;\n\t\tAL.sourceStop (id);\n\t\t\n\t\tif (timer != null) {\n\t\t\t\n\t\t\ttimer.stop ();\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if lime_console\n\t\n\t// TODO(james4k): these arrays become Array<Dynamic> so a lot of hidden\n\t// boxing and allocations going on.\n\t\n\t// can't use Maps because we need by-value key comparisons, so use two arrays.\n\tprivate static var fmodActiveChannels = new Array<FMODChannel> ();\n\tprivate static var fmodActiveSources = new Array<AudioSource> ();\n\t\n\t\n\t// onFmodChannelEnd is called from C++ when an fmod channel end callback is\n\t// called.\n\tprivate static function onFmodChannelEnd (channel:FMODChannel) {\n\t\t\n\t\tvar source = removeFmodActive (channel);\n\t\t\n\t\tif (source != null) {\n\t\t\t\n\t\t\tsource.channel = FMODChannel.INVALID;\n\t\t\tsource.onComplete.dispatch ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t// removeFmodActive disassociates an FMODChannel with its AudioSource, returning\n\t// the AudioSource it was associated with.\n\tprivate static function removeFmodActive(key:FMODChannel):AudioSource {\n\t\t\n\t\tfor (i in 0...fmodActiveChannels.length) {\n\t\t\t\n\t\t\tif (fmodActiveChannels[i] == key) {\n\t\t\t\t\n\t\t\t\tvar source = fmodActiveSources[i];\n\t\t\t\t\n\t\t\t\t// swap in the last element and pop() to remove from array\n\t\t\t\tvar last = fmodActiveChannels.length - 1;\n\t\t\t\tfmodActiveChannels[i] = fmodActiveChannels[last];\n\t\t\t\tfmodActiveSources[i] = fmodActiveSources[last];\n\t\t\t\t\n\t\t\t\tfmodActiveChannels.pop ();\n\t\t\t\tfmodActiveSources.pop ();\n\t\t\t\t\n\t\t\t\treturn source;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t// setFmodActive associates an FMODChannel with an AudioSource to allow for fmod\n\t// channel callbacks to propagate to the user's AudioSource onComplete\n\t// callbacks. Returns the previous AudioSource associated with the channel\n\t// if there was one, or the passed in AudioSource if not.\n\tprivate static function setFmodActive (key:FMODChannel, value:AudioSource):AudioSource {\n\t\t\n\t\tfor (i in 0...fmodActiveChannels.length) {\n\t\t\t\n\t\t\tif (fmodActiveChannels[i] == key) {\n\t\t\t\t\n\t\t\t\tvar old = fmodActiveSources[i];\n\t\t\t\tfmodActiveSources[i] = value;\n\t\t\t\treturn old;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfmodActiveChannels.push (key);\n\t\tfmodActiveSources.push (value);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t#end\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function timer_onRun () {\n\t\t\n\t\t#if (!flash && !html5)\n\t\t\n\t\tplaying = false;\n\t\t\n\t\tif (loops > 0) {\n\t\t\t\n\t\t\tloops--;\n\t\t\tcurrentTime = 0;\n\t\t\tplay ();\n\t\t\treturn;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tAL.sourceStop (id);\n\t\t\ttimer.stop ();\n\t\t\t\n\t\t}\n\t\t\n\t\tonComplete.dispatch ();\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_currentTime ():Int {\n\t\t\n\t\t#if html5\n\t\t\n\t\treturn 0;\n\t\t\n\t\t#elseif flash\n\t\t\n\t\treturn Std.int (channel.position);\n\n\t\t#elseif lime_console\n\n\t\tlime.Lib.notImplemented (\"AudioSource.get_currentTime\");\n\t\treturn 0;\n\t\t\n\t\t#else\n\t\t\n\t\tvar time = Std.int (AL.getSourcef (id, AL.SEC_OFFSET) * 1000) - offset;\n\t\tif (time < 0) return 0;\n\t\treturn time;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function set_currentTime (value:Int):Int {\n\t\t\n\t\t#if html5\n\t\t\n\t\treturn pauseTime = value;\n\t\t\n\t\t#elseif flash\n\t\t\n\t\t// TODO: create new sound channel\n\t\t//channel.position = value;\n\t\treturn pauseTime = value;\n\n\t\t#elseif lime_console\n\n\t\tlime.Lib.notImplemented (\"AudioSource.set_currentTime\");\n\t\treturn value;\n\t\t\n\t\t#else\n\t\t\n\t\tif (buffer != null) {\n\t\t\t\n\t\t\tAL.sourceRewind (id);\n\t\t\tif (playing) AL.sourcePlay (id);\n\t\t\tAL.sourcef (id, AL.SEC_OFFSET, (value + offset) / 1000);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (playing) {\n\t\t\t\n\t\t\tif (timer != null) {\n\t\t\t\t\n\t\t\t\ttimer.stop ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar timeRemaining = length - (value + offset);\n\t\t\t\n\t\t\tif (timeRemaining > 0) {\n\t\t\t\t\n\t\t\t\ttimer = new Timer (timeRemaining);\n\t\t\t\ttimer.run = timer_onRun;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_gain ():Float {\n\t\t\n\t\t#if html5\n\t\t\n\t\treturn 1;\n\t\t\n\t\t#elseif flash\n\t\t\n\t\treturn channel.soundTransform.volume;\n\n\t\t#elseif lime_console\n\n\t\tlime.Lib.notImplemented (\"AudioSource.get_gain\");\n\t\treturn 1;\n\t\t\n\t\t#else\n\t\t\n\t\treturn AL.getSourcef (id, AL.GAIN);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function set_gain (value:Float):Float {\n\t\t\n\t\t#if html5\n\t\t\n\t\treturn 1;\n\t\t\n\t\t#elseif flash\n\t\t\n\t\tvar soundTransform = channel.soundTransform;\n\t\tsoundTransform.volume = value;\n\t\tchannel.soundTransform = soundTransform;\n\t\treturn value;\n\n\t\t#elseif lime_console\n\n\t\tlime.Lib.notImplemented (\"AudioSource.set_gain\");\n\t\treturn value;\n\t\t\n\t\t#else\n\t\t\n\t\tAL.sourcef (id, AL.GAIN, value);\n\t\treturn value;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_length ():Int {\n\t\t\n\t\tif (__length != null) {\n\t\t\t\n\t\t\treturn __length;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if html5\n\t\t\n\t\treturn 0;\n\t\t\n\t\t#elseif flash\n\t\t\n\t\treturn Std.int (buffer.src.length);\n\n\t\t#elseif lime_console\n\n\t\tlime.Lib.notImplemented (\"AudioSource.get_length\");\n\t\treturn 0;\n\t\t\n\t\t#else\n\t\t\n\t\tvar samples = (buffer.data.length * 8) / (buffer.channels * buffer.bitsPerSample);\n\t\treturn Std.int (samples / buffer.sampleRate * 1000) - offset;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function set_length (value:Int):Int {\n\t\t\n\t\t#if lime_console\n\n\t\tlime.Lib.notImplemented (\"AudioSource.set_length\");\n\t\treturn value;\n\n\t\t#elseif (!flash && !html5)\n\t\t\n\t\tif (playing && __length != value) {\n\t\t\t\n\t\t\tif (timer != null) {\n\t\t\t\t\n\t\t\t\ttimer.stop ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar timeRemaining = value - currentTime;\n\t\t\t\n\t\t\tif (timeRemaining > 0) {\n\t\t\t\t\n\t\t\t\ttimer = new Timer (value - currentTime);\n\t\t\t\ttimer.run = timer_onRun;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn __length = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_loops ():Int {\n\t\t\n\t\t#if lime_console\n\t\t\n\t\tif (channel.valid) {\n\t\t\t\n\t\t\t__loops = channel.getLoopCount ();\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn __loops;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_loops (loops:Int):Int {\n\t\t\n\t\t#if lime_console\n\t\t\n\t\tif (channel.valid) {\n\t\t\t\n\t\t\tchannel.setLoopCount (loops);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn __loops = loops;\n\t\t\n\t}\n\t\n\t\n}\n","package lime.audio;\n\n\n#if flash\nimport flash.media.Sound;\n#end\n\n\nclass FlashAudioContext {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function createBuffer (stream:Dynamic /*URLRequest*/ = null, context:Dynamic /*SoundLoaderContext*/ = null):AudioBuffer {\n\t\t\n\t\t#if flash\n\t\tvar buffer = new AudioBuffer ();\n\t\tbuffer.src = new Sound (stream, context);\n\t\treturn buffer;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function getBytesLoaded (buffer:AudioBuffer):UInt {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.bytesLoaded;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getBytesTotal (buffer:AudioBuffer):Int {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.bytesTotal;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getID3 (buffer:AudioBuffer):Dynamic /*ID3Info*/ {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.id3;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getIsBuffering (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.isBuffering;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getIsURLInaccessible (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.isURLInaccessible;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getLength (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.length;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getURL (buffer:AudioBuffer):String {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.url;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function close (buffer:AudioBuffer):Void {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.close ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function extract (buffer:AudioBuffer, target:Dynamic /*flash.utils.ByteArray*/, length:Float, startPosition:Float = -1):Float {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.extract (target, length, startPosition);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function load (buffer:AudioBuffer, stream:Dynamic /*flash.net.URLRequest*/, context:Dynamic /*SoundLoaderContext*/ = null):Void {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.load (stream, context);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function loadCompressedDataFromByteArray (buffer:AudioBuffer, bytes:Dynamic /*flash.utils.ByteArray*/, bytesLength:UInt):Void {\n\t\t\n\t\t#if flash11\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.loadCompressedDataFromByteArray (bytes, bytesLength);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function loadPCMFromByteArray (buffer:AudioBuffer, bytes:Dynamic /*flash.utils.ByteArray*/, samples:UInt, format:String = null, stereo:Bool = true, sampleRate:Float = 44100):Void {\n\t\t\n\t\t#if flash11\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.loadPCMFromByteArray (bytes, samples, format, stereo, sampleRate);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function play (buffer:AudioBuffer, startTime:Float = 0, loops:Int = 0, sndTransform:Dynamic /*SoundTransform*/ = null):Dynamic /*SoundChannel*/ {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.play (startTime, loops, sndTransform);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n}","package lime.audio;\n\n\n#if (js && html5)\nimport js.html.Audio;\n#end\n\n\nclass HTML5AudioContext {\n\t\n\t\n\tpublic var HAVE_CURRENT_DATA:Int = 2;\n\tpublic var HAVE_ENOUGH_DATA:Int = 4;\n\tpublic var HAVE_FUTURE_DATA:Int = 3;\n\tpublic var HAVE_METADATA:Int = 1;\n\tpublic var HAVE_NOTHING:Int = 0;\n\tpublic var NETWORK_EMPTY:Int = 0;\n\tpublic var NETWORK_IDLE:Int = 1;\n\tpublic var NETWORK_LOADING:Int = 2;\n\tpublic var NETWORK_NO_SOURCE:Int = 3;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function canPlayType (buffer:AudioBuffer, type:String):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.canPlayType (type);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function createBuffer (urlString:String = null):AudioBuffer {\n\t\t\n\t\t#if (js && html5)\n\t\tvar buffer = new AudioBuffer ();\n\t\tbuffer.src = new Audio ();\n\t\tbuffer.src.src = urlString;\n\t\treturn buffer;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if (haxe_ver < \"3.2\")\n\tpublic function getAudioDecodedByteCount (buffer:AudioBuffer):Int {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.audioDecodedByteCount;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function getAutoplay (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.autoplay;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getBuffered (buffer:AudioBuffer):Dynamic /*TimeRanges*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.buffered;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t#if (haxe_ver < \"3.2\")\n\tpublic function getController (buffer:AudioBuffer):Dynamic /*MediaController*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.controller;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function getCurrentSrc (buffer:AudioBuffer):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.currentSrc;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getCurrentTime (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.currentTime;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getDefaultPlaybackRate (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.defaultPlaybackRate;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 1;\n\t\t\n\t}\n\t\n\t\n\tpublic function getDuration (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.duration;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getEnded (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.ended;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getError (buffer:AudioBuffer):Dynamic /*MediaError*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.error;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t#if (haxe_ver < \"3.2\")\n\tpublic function getInitialTime (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.initialTime;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function getLoop (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.loop;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t#if (haxe_ver < \"3.2\")\n\tpublic function getMediaGroup (buffer:AudioBuffer):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.mediaGroup;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function getMuted (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.muted;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getNetworkState (buffer:AudioBuffer):Int {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.networkState;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPaused (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.paused;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPlaybackRate (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.playbackRate;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 1;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPlayed (buffer:AudioBuffer):Dynamic /*TimeRanges*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.played;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPreload (buffer:AudioBuffer):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.preload;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getReadyState (buffer:AudioBuffer):Int {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.readyState;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getSeekable (buffer:AudioBuffer):Dynamic /*TimeRanges*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.seekable;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getSeeking (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.seeking;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getSrc (buffer:AudioBuffer):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.src;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getStartTime (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.playbackRate;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getVolume (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.volume;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 1;\n\t\t\n\t}\n\t\n\t\n\tpublic function load (buffer:AudioBuffer):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.load ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pause (buffer:AudioBuffer):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.pause ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function play (buffer:AudioBuffer):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.play ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setAutoplay (buffer:AudioBuffer, value:Bool):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.autoplay = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if (haxe_ver < \"3.2\")\n\tpublic function setController (buffer:AudioBuffer, value:Dynamic /*MediaController*/):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.controller = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function setCurrentTime (buffer:AudioBuffer, value:Float):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.currentTime = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setDefaultPlaybackRate (buffer:AudioBuffer, value:Float):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.defaultPlaybackRate = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setLoop (buffer:AudioBuffer, value:Bool):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.loop = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if (haxe_ver < \"3.2\")\n\tpublic function setMediaGroup (buffer:AudioBuffer, value:String):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.mediaGroup = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function setMuted (buffer:AudioBuffer, value:Bool):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.muted = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setPlaybackRate (buffer:AudioBuffer, value:Float):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.playbackRate = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setPreload (buffer:AudioBuffer, value:String):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.preload = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setSrc (buffer:AudioBuffer, value:String):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.src = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setVolume (buffer:AudioBuffer, value:Float):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.volume = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.audio.openal;\n\n\nimport lime.utils.ArrayBufferView;\n\n#if ((haxe_ver >= 3.2) && cpp)\nimport cpp.Float32;\n#else\ntypedef Float32 = Float;\n#end\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nclass AL {\n\t\n\t\n\tpublic static inline var NONE:Int = 0;\n\tpublic static inline var FALSE:Int = 0;\n\tpublic static inline var TRUE:Int = 1;\n\tpublic static inline var SOURCE_RELATIVE:Int = 0x202;\n\tpublic static inline var CONE_INNER_ANGLE:Int = 0x1001;\n\tpublic static inline var CONE_OUTER_ANGLE:Int = 0x1002;\n\tpublic static inline var PITCH:Int = 0x1003;\n\tpublic static inline var POSITION:Int = 0x1004;\n\tpublic static inline var DIRECTION:Int = 0x1005;\n\tpublic static inline var VELOCITY:Int = 0x1006;\n\tpublic static inline var LOOPING:Int = 0x1007;\n\tpublic static inline var BUFFER:Int = 0x1009;\n\tpublic static inline var GAIN:Int = 0x100A;\n\tpublic static inline var MIN_GAIN:Int = 0x100D;\n\tpublic static inline var MAX_GAIN:Int = 0x100E;\n\tpublic static inline var ORIENTATION:Int = 0x100F;\n\tpublic static inline var SOURCE_STATE:Int = 0x1010;\n\tpublic static inline var INITIAL:Int = 0x1011;\n\tpublic static inline var PLAYING:Int = 0x1012;\n\tpublic static inline var PAUSED:Int = 0x1013;\n\tpublic static inline var STOPPED:Int = 0x1014;\n\tpublic static inline var BUFFERS_QUEUED:Int = 0x1015;\n\tpublic static inline var BUFFERS_PROCESSED:Int = 0x1016;\n\tpublic static inline var REFERENCE_DISTANCE:Int = 0x1020;\n\tpublic static inline var ROLLOFF_FACTOR:Int = 0x1021;\n\tpublic static inline var CONE_OUTER_GAIN:Int = 0x1022;\n\tpublic static inline var MAX_DISTANCE:Int = 0x1023;\n\tpublic static inline var SEC_OFFSET:Int = 0x1024;\n\tpublic static inline var SAMPLE_OFFSET:Int = 0x1025;\n\tpublic static inline var BYTE_OFFSET:Int = 0x1026;\n\tpublic static inline var SOURCE_TYPE:Int = 0x1027;\n\tpublic static inline var STATIC:Int = 0x1028;\n\tpublic static inline var STREAMING:Int = 0x1029;\n\tpublic static inline var UNDETERMINED:Int = 0x1030;\n\tpublic static inline var FORMAT_MONO8:Int = 0x1100;\n\tpublic static inline var FORMAT_MONO16:Int = 0x1101;\n\tpublic static inline var FORMAT_STEREO8:Int = 0x1102;\n\tpublic static inline var FORMAT_STEREO16:Int = 0x1103;\n\tpublic static inline var FREQUENCY:Int = 0x2001;\n\tpublic static inline var BITS:Int = 0x2002;\n\tpublic static inline var CHANNELS:Int = 0x2003;\n\tpublic static inline var SIZE:Int = 0x2004;\n\tpublic static inline var NO_ERROR:Int = 0;\n\tpublic static inline var INVALID_NAME:Int = 0xA001;\n\tpublic static inline var INVALID_ENUM:Int = 0xA002;\n\tpublic static inline var INVALID_VALUE:Int = 0xA003;\n\tpublic static inline var INVALID_OPERATION:Int = 0xA004;\n\tpublic static inline var OUT_OF_MEMORY:Int = 0xA005;\n\tpublic static inline var VENDOR:Int = 0xB001;\n\tpublic static inline var VERSION:Int = 0xB002;\n\tpublic static inline var RENDERER:Int = 0xB003;\n\tpublic static inline var EXTENSIONS:Int = 0xB004;\n\tpublic static inline var DOPPLER_FACTOR:Int = 0xC000;\n\tpublic static inline var SPEED_OF_SOUND:Int = 0xC003;\n\tpublic static inline var DOPPLER_VELOCITY:Int = 0xC001;\n\tpublic static inline var DISTANCE_MODEL:Int = 0xD000;\n\tpublic static inline var INVERSE_DISTANCE:Int = 0xD001;\n\tpublic static inline var INVERSE_DISTANCE_CLAMPED:Int = 0xD002;\n\tpublic static inline var LINEAR_DISTANCE:Int = 0xD003;\n\tpublic static inline var LINEAR_DISTANCE_CLAMPED:Int = 0xD004;\n\tpublic static inline var EXPONENT_DISTANCE:Int = 0xD005;\n\tpublic static inline var EXPONENT_DISTANCE_CLAMPED:Int = 0xD006;\n\t\n\t\n\tpublic static function bufferData (buffer:Int, format:Int, data:ArrayBufferView, size:Int, freq:Int):Void {\n\t\t\n\t\t#if ((cpp || neko) && lime_openal && !macro)\n\t\tlime_al_buffer_data (buffer, format, data.buffer, size, freq);\n\t\t#elseif (nodejs && lime_openal && !macro)\n\t\tlime_al_buffer_data (buffer, format, data, size, freq);\n\t\t#elseif (nodejs && lime_openal && !macro)\n\t\tlime_al_buffer_data (buffer, format, data, size, freq);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function buffer3f (buffer:Int, param:Int, value1:Float, value2:Float, value3:Float):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_buffer3f (buffer, param, value1, value2, value3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function buffer3i (buffer:Int, param:Int, value1:Int, value2:Int, value3:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_buffer3i (buffer, param, value1, value2, value3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function bufferf (buffer:Int, param:Int, value:Float):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_bufferf (buffer, param, value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function bufferfv (buffer:Int, param:Int, values:Array<Float>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_bufferfv (buffer, param, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function bufferi (buffer:Int, param:Int, value:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_bufferi (buffer, param, value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function bufferiv (buffer:Int, param:Int, values:Array<Int>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_bufferiv (buffer, param, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function deleteBuffer (buffer:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_delete_buffer (buffer);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function deleteBuffers (buffers:Array<Int>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_delete_buffers (buffers.length, buffers);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function deleteSource (source:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_delete_source (source);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function deleteSources (sources:Array<Int>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_delete_sources (sources.length, sources);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function disable (capability:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_disable (capability);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function distanceModel (distanceModel:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_distance_model (distanceModel);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function dopplerFactor (value:Float):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_doppler_factor (value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function dopplerVelocity (value:Float):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_doppler_velocity (value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function enable (capability:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_enable (capability);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function genSource ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_gen_source ();\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function genSources (n:Int):Array<Int> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_gen_sources (n);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function genBuffer ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_gen_buffer ();\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function genBuffers (n:Int):Array<Int> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_gen_buffers (n);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBoolean (param:Int):Bool {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_boolean (param);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBooleanv (param:Int, count:Int = 1):Array<Bool> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_booleanv (param, 1);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBuffer3f (buffer:Int, param:Int):Array<Float> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_buffer3f (buffer, param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBuffer3i (buffer:Int, param:Int):Array<Int> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_buffer3i (buffer, param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBufferf (buffer:Int, param:Int):Float {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_bufferf (buffer, param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBufferfv (buffer:Int, param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_bufferfv (buffer, param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBufferi (buffer:Int, param:Int):Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_bufferi (buffer, param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBufferiv (buffer:Int, param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_bufferiv (buffer, param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getDouble (param:Int):Float {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_double (param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getDoublev (param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_doublev (param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getEnumValue (ename:String):Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_enum_value (ename);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getError ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_error ();\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getErrorString ():String {\n\t\t\n\t\treturn switch (getError ()) {\n\t\t\t\n\t\t\tcase INVALID_NAME: \"INVALID_NAME: Invalid parameter name\";\n\t\t\tcase INVALID_ENUM: \"INVALID_ENUM: Invalid enum value\";\n\t\t\tcase INVALID_VALUE: \"INVALID_VALUE: Invalid parameter value\";\n\t\t\tcase INVALID_OPERATION: \"INVALID_OPERATION: Illegal operation or call\";\n\t\t\tcase OUT_OF_MEMORY: \"OUT_OF_MEMORY: OpenAL has run out of memory\";\n\t\t\tdefault: \"\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function getFloat (param:Int):Float {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_float (param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getFloatv (param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_floatv (param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getInteger (param:Int):Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_integer (param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getIntegerv (param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_integerv (param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getListener3f (param:Int):Array<Float> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_listener3f (param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getListener3i (param:Int):Array<Int> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_listener3i (param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getListenerf (param:Int):Float {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_listenerf (param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getListenerfv (param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_listenerfv (param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getListeneri (param:Int):Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_listeneri (param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getListeneriv (param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_listeneriv (param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getProcAddress (fname:String):Dynamic {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_proc_address (fname);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getSource3f (source:Int, param:Int):Array<Float> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_source3f (source, param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getSourcef (source:Int, param:Int):Float {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_sourcef (source, param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getSource3i (source:Int, param:Int):Array<Int> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_source3i (source, param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getSourcefv (source:Int, param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_sourcefv (source, param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getSourcei (source:Int, param:Int):Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_sourcei (source, param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getSourceiv (source:Int, param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_sourceiv (source, param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getString (param:Int):String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_get_string (param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function isBuffer (buffer:Int):Bool {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_is_buffer (buffer);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\t\n\t\n\t\n\tpublic static function isEnabled (capability:Int):Bool {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_is_enabled (capability);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function isExtensionPresent (extname:String):Bool {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_is_extension_present (extname);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function isSource (source:Int):Bool {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_is_source (source);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function listener3f (param:Int, value1:Float, value2:Float, value3:Float):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_listener3f (param, value1, value2, value3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function listener3i (param:Int, value1:Int, value2:Int, value3:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_listener3i (param, value1, value2, value3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function listenerf (param:Int, value:Float):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_listenerf (param, value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function listenerfv (param:Int, values:Array<Float>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_listenerfv (param, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function listeneri (param:Int, value:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_listeneri (param, value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function listeneriv (param:Int, values:Array<Int>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_listeneriv (param, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function source3f (source:Int, param:Int, value1:Float, value2:Float, value3:Float):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_source3f (source, param, value1, value2, value3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function source3i (source:Int, param:Int, value1:Int, value2:Int, value3:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_source3i (source, param, value1, value2, value3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcef (source:Int, param:Int, value:Float):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_sourcef (source, param, value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcefv (source:Int, param:Int, values:Array<Float>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_sourcefv (source, param, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcei (source:Int, param:Int, value:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_sourcei (source, param, value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceiv (source:Int, param:Int, values:Array<Int>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_sourceiv (source, param, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcePlay (source:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_source_play (source);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcePlayv (sources:Array<Int>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_source_playv (sources.length, sources);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceStop (source:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_source_stop (source);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceStopv (sources:Array<Int>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_source_stopv (sources.length, sources);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceRewind (source:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_source_rewind (source);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceRewindv (sources:Array<Int>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_source_rewindv (sources.length, sources);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcePause (source:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_source_pause (source);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcePausev (sources:Array<Int>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_source_pausev (sources.length, sources);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceQueueBuffer (source:Int, buffer:Int):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_source_queue_buffers (source, 1, [ buffer ]);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceQueueBuffers (source:Int, nb:Int, buffers:Array<Int>):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_source_queue_buffers (source, nb, buffers);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceUnqueueBuffer (source:Int):Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tvar res = lime_al_source_unqueue_buffers (source, 1);\n\t\treturn res[0];\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceUnqueueBuffers (source:Int, nb:Int):Array<Int> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_al_source_unqueue_buffers (source, nb);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function speedOfSound (value:Float):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_al_speed_of_sound (value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t@:cffi private static function lime_al_buffer_data (buffer:Int, format:Int, data:Dynamic, size:Int, freq:Int):Void;\n\t@:cffi private static function lime_al_buffer3f (buffer:Int, param:Int, value1:Float32, value2:Float32, value3:Float32):Void;\n\t@:cffi private static function lime_al_buffer3i (buffer:Int, param:Int, value1:Int, value2:Int, value3:Int):Void;\n\t@:cffi private static function lime_al_bufferf (buffer:Int, param:Int, value:Float32):Void;\n\t@:cffi private static function lime_al_bufferfv (buffer:Int, param:Int, values:Dynamic):Void;\n\t@:cffi private static function lime_al_bufferi (buffer:Int, param:Int, value:Int):Void;\n\t@:cffi private static function lime_al_bufferiv (buffer:Int, param:Int, values:Dynamic):Void;\n\t@:cffi private static function lime_al_delete_buffer (buffer:Int):Void;\n\t@:cffi private static function lime_al_delete_buffers (n:Int, buffers:Dynamic):Void;\n\t@:cffi private static function lime_al_delete_source (source:Int):Void;\n\t@:cffi private static function lime_al_delete_sources (n:Int, sources:Dynamic):Void;\n\t@:cffi private static function lime_al_disable (capability:Int):Void;\n\t@:cffi private static function lime_al_distance_model (distanceModel:Int):Void;\n\t@:cffi private static function lime_al_doppler_factor (value:Float32):Void;\n\t@:cffi private static function lime_al_doppler_velocity (value:Float32):Void;\n\t@:cffi private static function lime_al_enable (capability:Int):Void;\n\t@:cffi private static function lime_al_gen_source ():Int;\n\t@:cffi private static function lime_al_gen_sources (n:Int):Dynamic;\n\t@:cffi private static function lime_al_get_boolean (param:Int):Bool;\n\t@:cffi private static function lime_al_get_booleanv (param:Int, count:Int):Dynamic;\n\t@:cffi private static function lime_al_gen_buffer ():Int;\n\t@:cffi private static function lime_al_gen_buffers (n:Int):Dynamic;\n\t@:cffi private static function lime_al_get_buffer3f (buffer:Int, param:Int):Dynamic;\n\t@:cffi private static function lime_al_get_buffer3i (buffer:Int, param:Int):Dynamic;\n\t@:cffi private static function lime_al_get_bufferf (buffer:Int, param:Int):Float32;\n\t@:cffi private static function lime_al_get_bufferfv (buffer:Int, param:Int, count:Int):Dynamic;\n\t@:cffi private static function lime_al_get_bufferi (buffer:Int, param:Int):Int;\n\t@:cffi private static function lime_al_get_bufferiv (buffer:Int, param:Int, count:Int):Dynamic;\n\t@:cffi private static function lime_al_get_double (param:Int):Float;\n\t@:cffi private static function lime_al_get_doublev (param:Int, count:Int):Dynamic;\n\t@:cffi private static function lime_al_get_enum_value (ename:String):Int;\n\t@:cffi private static function lime_al_get_error ():Int;\n\t@:cffi private static function lime_al_get_float (param:Int):Float32;\n\t@:cffi private static function lime_al_get_floatv (param:Int, count:Int):Dynamic;\n\t@:cffi private static function lime_al_get_integer (param:Int):Int;\n\t@:cffi private static function lime_al_get_integerv (param:Int, count:Int):Dynamic;\n\t@:cffi private static function lime_al_get_listener3f (param:Int):Dynamic;\n\t@:cffi private static function lime_al_get_listener3i (param:Int):Dynamic;\n\t@:cffi private static function lime_al_get_listenerf (param:Int):Float32;\n\t@:cffi private static function lime_al_get_listenerfv (param:Int, count:Int):Dynamic;\n\t@:cffi private static function lime_al_get_listeneri (param:Int):Int;\n\t@:cffi private static function lime_al_get_listeneriv (param:Int, count:Int):Dynamic;\n\t@:cffi private static function lime_al_get_proc_address (fname:String):Float;\n\t@:cffi private static function lime_al_get_source3f (source:Int, param:Int):Dynamic;\n\t@:cffi private static function lime_al_get_source3i (source:Int, param:Int):Dynamic;\n\t@:cffi private static function lime_al_get_sourcef (source:Int, param:Int):Float32;\n\t@:cffi private static function lime_al_get_sourcefv (source:Int, param:Int, count:Int):Dynamic;\n\t@:cffi private static function lime_al_get_sourcei (source:Int, param:Int):Int;\n\t@:cffi private static function lime_al_get_sourceiv (source:Int, param:Int, count:Int):Dynamic;\n\t@:cffi private static function lime_al_get_string (param:Int):Dynamic;\n\t@:cffi private static function lime_al_is_buffer (buffer:Int):Bool;\n\t@:cffi private static function lime_al_is_enabled (capability:Int):Bool;\n\t@:cffi private static function lime_al_is_extension_present (extname:String):Bool;\n\t@:cffi private static function lime_al_is_source (source:Int):Bool;\n\t@:cffi private static function lime_al_listener3f (param:Int, value1:Float32, value2:Float32, value3:Float32):Void;\n\t@:cffi private static function lime_al_listener3i (param:Int, value1:Int, value2:Int, value3:Int):Void;\n\t@:cffi private static function lime_al_listenerf (param:Int, value1:Float32):Void;\n\t@:cffi private static function lime_al_listenerfv (param:Int, values:Dynamic):Void;\n\t@:cffi private static function lime_al_listeneri (param:Int, value1:Int):Void;\n\t@:cffi private static function lime_al_listeneriv (param:Int, values:Dynamic):Void;\n\t@:cffi private static function lime_al_source_pause (source:Int):Void;\n\t@:cffi private static function lime_al_source_pausev (n:Int, sources:Dynamic):Void;\n\t@:cffi private static function lime_al_source_play (source:Int):Void;\n\t@:cffi private static function lime_al_source_playv (n:Int, sources:Dynamic):Void;\n\t@:cffi private static function lime_al_source_queue_buffers (source:Int, nb:Int, buffers:Dynamic):Void;\n\t@:cffi private static function lime_al_source_rewind (source:Int):Void;\n\t@:cffi private static function lime_al_source_rewindv (n:Int, sources:Dynamic):Void;\n\t@:cffi private static function lime_al_source_stop (source:Int):Void;\n\t@:cffi private static function lime_al_source_stopv (n:Int, sources:Dynamic):Void;\n\t@:cffi private static function lime_al_source_unqueue_buffers (source:Int, nb:Int):Dynamic;\n\t@:cffi private static function lime_al_source3f (source:Int, param:Int, value1:Float32, value2:Float32, value3:Float32):Void;\n\t@:cffi private static function lime_al_source3i (source:Int, param:Int, value1:Int, value2:Int, value3:Int):Void;\n\t@:cffi private static function lime_al_sourcef (source:Int, param:Int, value:Float32):Void;\n\t@:cffi private static function lime_al_sourcefv (source:Int, param:Int, values:Dynamic):Void;\n\t@:cffi private static function lime_al_sourcei (source:Int, param:Int, value:Int):Void;\n\t@:cffi private static function lime_al_sourceiv (source:Int, param:Int, values:Dynamic):Void;\n\t@:cffi private static function lime_al_speed_of_sound (speed:Float32):Void;\n\t#end\n\t\n\t\n}","package lime.audio.openal;\n\n\nimport lime.system.CFFIPointer;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nclass ALC {\n\t\n\t\n\tpublic static inline var FALSE:Int = 0;\n\tpublic static inline var TRUE:Int = 1;\n\tpublic static inline var FREQUENCY:Int = 0x1007;\n\tpublic static inline var REFRESH:Int = 0x1008;\n\tpublic static inline var SYNC:Int = 0x1009;\n\tpublic static inline var MONO_SOURCES:Int = 0x1010;\n\tpublic static inline var STEREO_SOURCES:Int = 0x1011;\n\tpublic static inline var NO_ERROR:Int = 0;\n\tpublic static inline var INVALID_DEVICE:Int = 0xA001;\n\tpublic static inline var INVALID_CONTEXT:Int = 0xA002;\n\tpublic static inline var INVALID_ENUM:Int = 0xA003;\n\tpublic static inline var INVALID_VALUE:Int = 0xA004;\n\tpublic static inline var OUT_OF_MEMORY:Int = 0xA005;\n\tpublic static inline var ATTRIBUTES_SIZE:Int = 0x1002;\n\tpublic static inline var ALL_ATTRIBUTES:Int = 0x1003;\n\tpublic static inline var DEFAULT_DEVICE_SPECIFIER:Int = 0x1004;\n\tpublic static inline var DEVICE_SPECIFIER:Int = 0x1005;\n\tpublic static inline var EXTENSIONS:Int = 0x1006;\n\tpublic static inline var ENUMERATE_ALL_EXT:Int = 1;\n\tpublic static inline var DEFAULT_ALL_DEVICES_SPECIFIER:Int = 0x1012;\n\tpublic static inline var ALL_DEVICES_SPECIFIER:Int = 0x1013;\n\t\n\t\n\tpublic static function closeDevice (device:ALDevice):Bool {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_alc_close_device (device);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createContext (device:ALDevice, attrlist:Array<Int> = null):ALContext {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tvar handle:Dynamic = lime_alc_create_context (device, attrlist);\n\t\t\n\t\tif (handle != null) {\n\t\t\t\n\t\t\treturn new ALContext (handle);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function destroyContext (context:ALContext):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_alc_destroy_context (context);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getContextsDevice (context:ALContext):ALDevice {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tvar handle:Dynamic = lime_alc_get_contexts_device (context);\n\t\t\n\t\tif (handle != null) {\n\t\t\t\n\t\t\treturn new ALDevice (handle);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getCurrentContext ():ALContext {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tvar handle:Dynamic = lime_alc_get_current_context ();\n\t\t\n\t\tif (handle != null) {\n\t\t\t\n\t\t\treturn new ALContext (handle);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getError (device:ALDevice):Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_alc_get_error (device);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getErrorString (device:ALDevice):String {\n\t\t\n\t\treturn switch (getError (device)) {\n\t\t\t\n\t\t\tcase INVALID_DEVICE: \"INVALID_DEVICE: Invalid device (or no device?)\";\n\t\t\tcase INVALID_CONTEXT: \"INVALID_CONTEXT: Invalid context (or no context?)\";\n\t\t\tcase INVALID_ENUM: \"INVALID_ENUM: Invalid enum value\";\n\t\t\tcase INVALID_VALUE: \"INVALID_VALUE: Invalid param value\";\n\t\t\tcase OUT_OF_MEMORY: \"OUT_OF_MEMORY: OpenAL has run out of memory\";\n\t\t\tdefault: \"\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function getIntegerv (device:ALDevice, param:Int, size:Int):Array<Int> {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_alc_get_integerv (device, param, size);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getString (device:ALDevice, param:Int):String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_alc_get_string (device, param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function makeContextCurrent (context:ALContext):Bool {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\treturn lime_alc_make_context_current (context);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function openDevice (deviceName:String = null):ALDevice {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tvar handle:Dynamic = lime_alc_open_device (deviceName);\n\t\t\n\t\tif (handle != null) {\n\t\t\t\n\t\t\treturn new ALDevice (handle);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function processContext (context:ALContext):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_alc_process_context (context);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function suspendContext (context:ALContext):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t\tlime_alc_suspend_context (context);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if ((cpp || neko || nodejs) && lime_openal && !macro)\n\t@:cffi private static function lime_alc_close_device (device:CFFIPointer):Bool;\n\t@:cffi private static function lime_alc_create_context (device:CFFIPointer, attrlist:Dynamic):CFFIPointer;\n\t@:cffi private static function lime_alc_destroy_context (context:CFFIPointer):Void;\n\t@:cffi private static function lime_alc_get_contexts_device (context:CFFIPointer):CFFIPointer;\n\t@:cffi private static function lime_alc_get_current_context ():CFFIPointer;\n\t@:cffi private static function lime_alc_get_error (device:CFFIPointer):Int;\n\t@:cffi private static function lime_alc_get_integerv (device:CFFIPointer, param:Int, size:Int):Dynamic;\n\t@:cffi private static function lime_alc_get_string (device:CFFIPointer, param:Int):Dynamic;\n\t@:cffi private static function lime_alc_make_context_current (context:CFFIPointer):Bool;\n\t@:cffi private static function lime_alc_open_device (devicename:String):CFFIPointer;\n\t@:cffi private static function lime_alc_process_context (context:CFFIPointer):Void;\n\t@:cffi private static function lime_alc_suspend_context (context:CFFIPointer):Void;\n\t#end\n\t\n\t\n}","package lime.audio.openal;\n\n\nimport lime.system.CFFIPointer;\n\n@:allow(lime.audio.openal.AL)\n@:allow(lime.audio.openal.ALC)\n\n\nabstract ALContext(CFFIPointer) from CFFIPointer to CFFIPointer {\n\t\n\t\n\tprivate inline function new (handle:CFFIPointer) {\n\t\t\n\t\tthis = handle;\n\t\t\n\t}\n\t\n\t\n}","package lime.audio.openal;\n\n\nimport lime.system.CFFIPointer;\n\n@:allow(lime.audio.openal.AL)\n@:allow(lime.audio.openal.ALC)\n\n\nabstract ALDevice(CFFIPointer) from CFFIPointer to CFFIPointer {\n\t\n\t\n\tprivate inline function new (handle:CFFIPointer) {\n\t\t\n\t\tthis = handle;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics; #if lime_console\n\n\nimport cpp.Float32;\nimport cpp.UInt8;\nimport cpp.UInt16;\nimport cpp.UInt32;\nimport cpp.Pointer;\nimport lime.ConsoleIncludePaths;\nimport lime.graphics.console.IndexBuffer;\nimport lime.graphics.console.Shader;\nimport lime.graphics.console.Primitive;\nimport lime.graphics.console.RenderState;\nimport lime.graphics.console.Texture;\nimport lime.graphics.console.TextureAddressMode;\nimport lime.graphics.console.TextureFilter;\nimport lime.graphics.console.TextureFormat;\nimport lime.graphics.console.VertexBuffer;\nimport lime.graphics.console.VertexDecl;\nimport lime.math.Matrix4;\nimport lime.utils.Float32Array;\n\n\n// TODO(james4k): we'll use this extern class when they support default args.\n// https://github.com/HaxeFoundation/haxe/issues/3955\n\n#if 0\n\n\n@:include(\"ConsoleRenderContext.h\")\n@:native(\"cpp::Struct<lime::ConsoleRenderContext>\")\nextern class ConsoleRenderContext {\n\n\tpublic var width (get, never):Int;\n\tpublic var height (get, never):Int;\n\n\tpublic function createIndexBuffer (indices:Pointer<UInt16>, count:Int):IndexBuffer;\n\tpublic function createVertexBuffer (decl:VertexDecl, count:Int):VertexBuffer;\n\tpublic function createTexture (format:TextureFormat, width:Int, height:Int, data:Pointer<UInt8>):Texture;\n\n\tpublic function destroyIndexBuffer (ib:IndexBuffer):Void;\n\tpublic function destroyVertexBuffer (vb:VertexBuffer):Void;\n\tpublic function destroyTexture (tex:Texture):Void;\n\n\tpublic function lookupShader (name:String):Shader;\n\n\tpublic function clear (r:UInt8, g:UInt8, b:UInt8, a:UInt8, depth:Float32 = 1.0, stencil:UInt8 = 0):Void;\n\n\tpublic function bindShader (shader:Shader):Void;\n\n\tpublic function setViewport (x:UInt16, y:UInt16, width:UInt16, height:UInt16, nearPlane:Float32 = 0.0, farPlane:Float32 = 1.0):Void;\n\n\tpublic function setVertexShaderConstantF (startRegister:Int, vec4:Pointer<Float32>, vec4count:Int):Void;\n\n\tpublic function setVertexSource (vb:VertexBuffer):Void;\n\tpublic function setIndexSource (ib:IndexBuffer):Void;\n\n\tpublic function setTexture (sampler:Int, texture:Texture):Void;\n\tpublic function setTextureFilter (sampler:Int, min:TextureFilter, mag:TextureFilter):Void;\n\tpublic function setTextureAddressMode (sampler:Int, u:TextureAddressMode, v:TextureAddressMode):Void;\n\n\tpublic function draw (primitive:Primitive, startVertex:UInt32, primitiveCount:UInt32):Void;\n\tpublic function drawIndexed (primitive:Primitive, vertexCount:UInt32, startIndex:UInt32, primitiveCount:UInt32):Void;\n\n\tprivate function get_width ():Int;\n\tprivate function get_height ():Int;\n\n}\n\n\n#else\n\n\n@:headerCode(\"#include <ConsoleRenderContext.h>\")\nclass ConsoleRenderContext {\n\n\n\tpublic function new() {\n\n\n\t}\n\t\n\t\n\tpublic var width (get, never):Int;\n\tpublic var height (get, never):Int;\n\n\n\tpublic function createIndexBuffer (indices:Pointer<UInt16>, count:Int):IndexBuffer {\n\n\t\treturn untyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().createIndexBuffer ({0}, {1})\",\n\t\t\tindices, count\n\t\t);\n\n\t}\n\n\n\tpublic function createVertexBuffer (decl:VertexDecl, count:Int):VertexBuffer {\n\n\t\treturn untyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().createVertexBuffer ({0}, {1})\",\n\t\t\tdecl, count\n\t\t);\n\n\t}\n\n\n\tpublic function createTexture (format:TextureFormat, width:Int, height:Int, data:Pointer<UInt8>):Texture {\n\n\t\treturn untyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().createTexture ({0}, {1}, {2}, {3})\",\n\t\t\tformat, width, height, data\n\t\t);\n\n\t}\n\n\n\tpublic function destroyIndexBuffer (ib:IndexBuffer):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().destroyIndexBuffer ({0})\",\n\t\t\tib\n\t\t);\n\n\t}\n\n\n\n\tpublic function destroyVertexBuffer (vb:VertexBuffer):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().destroyVertexBuffer ({0})\",\n\t\t\tvb\n\t\t);\n\n\t}\n\n\n\tpublic function destroyTexture (tex:Texture):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().destroyTexture ({0})\",\n\t\t\ttex\n\t\t);\n\n\t}\n\n\n\tpublic function lookupShader (name:String):Shader {\n\n\t\treturn untyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().lookupShader ({0})\",\n\t\t\tname\n\t\t);\n\n\t}\n\n\t\n\tpublic inline function clear (r:UInt8, g:UInt8, b:UInt8, a:UInt8, depth:Float32 = 1.0, stencil:UInt8 = 0):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().clear ({0}, {1}, {2}, {3}, {4}, {5})\",\n\t\t\tr, g, b, a, depth, stencil\n\t\t);\n\n\t}\n\n\n\tpublic inline function bindShader (shader:Shader):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().bindShader ({0})\",\n\t\t\tshader\n\t\t);\n\n\t}\n\n\n\tpublic function setViewport (x:UInt16, y:UInt16, width:UInt16, height:UInt16, nearPlane:Float32 = 0.0, farPlane:Float32 = 1.0):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().setViewport ({0}, {1}, {2}, {3}, {4}, {5})\",\n\t\t\tx, y, width, height, nearPlane, farPlane\n\t\t);\n\n\t}\n\n\n\tpublic function setRasterizerState (state:RasterizerState):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().setRasterizerState ({0})\",\n\t\t\tstate\n\t\t);\n\n\t}\n\n\n\tpublic function setDepthStencilState (state:DepthStencilState):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().setDepthStencilState ({0})\",\n\t\t\tstate\n\t\t);\n\n\t}\n\n\n\tpublic function setBlendState (state:BlendState):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().setBlendState ({0})\",\n\t\t\tstate\n\t\t);\n\n\t}\n\n\n\tpublic inline function setVertexShaderConstantF (startRegister:Int, vec4:cpp.Pointer<Float32>, vec4count:Int):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().setVertexShaderConstantF ({0}, (float *){1}, {2})\",\n\t\t\tstartRegister,\n\t\t\tvec4,\n\t\t\tvec4count\n\t\t);\n\n\t}\n\n\n\tpublic inline function setVertexSource (vb:VertexBuffer):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().setVertexSource ({0})\",\n\t\t\tvb\n\t\t);\n\n\t}\n\n\n\tpublic inline function setIndexSource (ib:IndexBuffer):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().setIndexSource ({0})\",\n\t\t\tib\n\t\t);\n\n\t}\n\n\n\tpublic inline function setTexture (sampler:Int, texture:Texture):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().setTexture ({0}, {1})\",\n\t\t\tsampler, texture\n\t\t);\n\n\t}\n\n\n\tpublic inline function setTextureFilter (sampler:Int, min:TextureFilter, mag:TextureFilter):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().setTextureFilter ({0}, {1}, {2})\",\n\t\t\tsampler, min, mag\n\t\t);\n\n\t}\n\n\n\tpublic inline function setTextureAddressMode (sampler:Int, u:TextureAddressMode, v:TextureAddressMode):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().setTextureAddressMode ({0}, {1}, {2})\",\n\t\t\tsampler, u, v\n\t\t);\n\n\t}\n\n\n\tpublic inline function draw (primitive:Primitive, startVertex:UInt32, primitiveCount:UInt32):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().draw ({0}, {1}, {2})\",\n\t\t\tprimitive, startVertex, primitiveCount\n\t\t);\n\n\t}\n\n\n\tpublic inline function drawIndexed (primitive:Primitive, vertexCount:UInt32, startIndex:UInt32, primitiveCount:UInt32):Void {\n\n\t\tuntyped __cpp__ (\n\t\t\t\"lime::ConsoleRenderContext().drawIndexed ({0}, {1}, {2}, {3})\",\n\t\t\tprimitive, vertexCount, startIndex, primitiveCount\n\t\t);\n\n\t}\n\n\n\tprivate inline function get_width ():Int {\n\t\t\n\t\treturn untyped __cpp__ (\"lime::ConsoleRenderContext().get_width ()\");\n\n\t}\n\n\n\tprivate inline function get_height ():Int {\n\t\t\n\t\treturn untyped __cpp__ (\"lime::ConsoleRenderContext().get_height ()\");\n\n\t}\n\t\n\t\n}\n\n\n#end\n\n\n#else\n\n\nimport lime.graphics.console.Shader;\nimport lime.graphics.console.Primitive;\nimport lime.graphics.console.IndexBuffer;\nimport lime.graphics.console.VertexBuffer;\n\n\nclass ConsoleRenderContext {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic var width (get, never):Int;\n\tpublic var height (get, never):Int;\n\n\tpublic function createIndexBuffer (indices, count:Int):IndexBuffer { return new IndexBuffer (); }\n\tpublic function createVertexBuffer (decl, count:Int):VertexBuffer { return new VertexBuffer (); }\n\tpublic function lookupShader (name:String):Shader { return new Shader (); }\n\n\tpublic function clear (r:Int, g:Int, b:Int, a:Int, depth:Float = 1.0, stencil:Int = 0):Void {}\n\n\tpublic function bindShader (shader:Shader):Void {}\n\n\tpublic function setViewport (x, y, width, height, nearPlane = 0.0, farPlane = 1.0):Void {}\n\n\tpublic function setVertexShaderConstantF (startRegister, vec4, vec4count):Void {}\n\n\tpublic function setVertexSource (vb:VertexBuffer):Void {}\n\tpublic function setIndexSource (ib:IndexBuffer):Void {}\n\n\tpublic function draw (primitive, startVertex, primitiveCount):Void {}\n\tpublic function drawIndexed (primitive, vertexCount, startIndex, primitiveCount):Void {}\n\n\tprivate function get_width ():Int { return 0; }\n\tprivate function get_height ():Int { return 0; }\n\t\n\t\n}\n\n\n#end\n","package lime.graphics;\n#if (flash && !doc_gen)\ntypedef FlashRenderContext = flash.display.Sprite;\n#else\n\n\nclass FlashRenderContext {\n\t\n\t\n\tpublic var accessibilityImplementation:Dynamic /*flash.accessibility.AccessibilityImplementation*/;\n\tpublic var accessibilityProperties:Dynamic /*flash.accessibility.AccessibilityProperties*/;\n\tpublic var alpha:Float;\n\tpublic var blendMode:Dynamic /*BlendMode*/;\n\tpublic var blendShader (null, default):Dynamic /*Shader*/;\n\tpublic var buttonMode:Bool;\n\tpublic var cacheAsBitmap:Bool;\n\tpublic var contextMenu:Dynamic /*flash.ui.ContextMenu*/;\n\tpublic var doubleClickEnabled:Bool;\n\tpublic var dropTarget (default, null):Dynamic /*DisplayObject*/;\n\tpublic var filters:Array<Dynamic /*flash.filters.BitmapFilter*/>;\n\tpublic var focusRect:Dynamic;\n\tpublic var graphics (default, null):Dynamic /*Graphics*/;\n\tpublic var height:Float;\n\tpublic var hitArea:Dynamic /*Sprite*/;\n\tpublic var loaderInfo (default, null):Dynamic /*LoaderInfo*/;\n\tpublic var mask:Dynamic /*DisplayObject*/;\n\tpublic var mouseChildren:Bool;\n\tpublic var mouseEnabled:Bool;\n\tpublic var mouseX (default, null):Float;\n\tpublic var mouseY (default, null):Float;\n\tpublic var name:String;\n\tpublic var needsSoftKeyboard:Bool;\n\tpublic var numChildren (default, null):Int;\n\tpublic var opaqueBackground:Null<UInt>;\n\tpublic var parent (default, null):Dynamic /*DisplayObjectContainer*/;\n\tpublic var root (default, null):Dynamic /*DisplayObject*/;\n\tpublic var rotation:Float;\n\tpublic var rotationX:Float;\n\tpublic var rotationY:Float;\n\tpublic var rotationZ:Float;\n\tpublic var scale9Grid:Dynamic /*flash.geom.Rectangle*/;\n\tpublic var scaleX:Float;\n\tpublic var scaleY:Float;\n\tpublic var scaleZ:Float;\n\tpublic var scrollRect:Dynamic /*flash.geom.Rectangle*/;\n\tpublic var softKeyboardInputAreaOfInterest:Dynamic /*flash.geom.Rectangle*/;\n\tpublic var soundTransform:Dynamic /*flash.media.SoundTransform*/;\n\tpublic var stage (default, null):Dynamic /*Stage*/;\n\tpublic var tabChildren:Bool;\n\tpublic var tabEnabled:Bool;\n\tpublic var tabIndex:Int;\n\tpublic var textSnapshot (default, null):Dynamic /*flash.text.TextSnapshot*/;\n\tpublic var transform:Dynamic /*flash.geom.Transform*/;\n\tpublic var useHandCursor:Bool;\n\tpublic var visible:Bool;\n\tpublic var width:Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\tpublic var z:Float;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function addChild (child:Dynamic /*DisplayObject*/):Dynamic /*DisplayObject*/ { return null; };\n\tpublic function addChildAt (child:Dynamic /*DisplayObject*/, index:Int):Dynamic /*DisplayObject*/ { return null; };\n\tpublic function addEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {};\n\tpublic function areInaccessibleObjectsUnderPoint (point:Dynamic /*flash.geom.Point*/):Bool { return false; };\n\tpublic function contains (child:Dynamic /*DisplayObject*/):Bool { return false; };\n\tpublic function dispatchEvent (event:Dynamic /*Event*/):Bool { return false; };\n\tpublic function getBounds (targetCoordinateSpace:Dynamic /*DisplayObject*/):Dynamic /*flash.geom.Rectangle*/ { return null; };\n\tpublic function getChildAt (index:Int):Dynamic /*DisplayObject*/ { return null; };\n\tpublic function getChildByName (name:String):Dynamic /*DisplayObject*/ { return null; };\n\tpublic function getChildIndex (child:Dynamic /*DisplayObject*/):Int { return 0; };\n\tpublic function getObjectsUnderPoint (point:Dynamic /*flash.geom.Point*/):Array<Dynamic /*DisplayObject*/> { return null; };\n\tpublic function getRect (targetCoordinateSpace:Dynamic /*DisplayObject*/):Dynamic /*flash.geom.Rectangle*/ { return null; };\n\tpublic function globalToLocal (point:Dynamic /*flash.geom.Point*/):Dynamic /*flash.geom.Point*/ { return null; };\n\tpublic function globalToLocal3D (point:Dynamic /*flash.geom.Point*/):Dynamic /*flash.geom.Vector3D*/ { return null; };\n\tpublic function hasEventListener (type:String):Bool { return false; };\n\tpublic function hitTestObject (obj:Dynamic /*DisplayObject*/):Bool { return false; };\n\tpublic function hitTestPoint (x:Float, y:Float, shapeFlag:Bool = false):Bool { return false; };\n\tpublic function local3DToGlobal (point3d:Dynamic /*flash.geom.Vector3D*/):Dynamic /*flash.geom.Point*/ { return null; };\n\tpublic function localToGlobal (point:Dynamic /*flash.geom.Point*/):Dynamic /*flash.geom.Point*/ { return null; };\n\tpublic function removeChild (child:Dynamic /*DisplayObject*/):Dynamic /*DisplayObject*/ { return null; };\n\tpublic function removeChildAt (index:Int):Dynamic /*DisplayObject*/ { return null; };\n\tpublic function removeChildren (beginIndex:Int = 0, endIndex:Int = 2147483647):Void {};\n\tpublic function removeEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false):Void {};\n\tpublic function requestSoftKeyboard ():Bool { return false; };\n\tpublic function setChildIndex (child:Dynamic /*DisplayObject*/, index:Int):Void {};\n\tpublic function startDrag (lockCenter:Bool = false, ?bounds:Dynamic /*flash.geom.Rectangle*/):Void {};\n\tpublic function startTouchDrag (touchPointID:Int, lockCenter:Bool = false, ?bounds:Dynamic /*flash.geom.Rectangle*/):Void {};\n\tpublic function stopAllMovieClips ():Void {};\n\tpublic function stopDrag ():Void {};\n\tpublic function stopTouchDrag (touchPointID:Int):Void {};\n\tpublic function swapChildren (child1:Dynamic /*DisplayObject*/, child2:Dynamic /*DisplayObject*/):Void {};\n\tpublic function swapChildrenAt (index1:Int, index2:Int):Void {};\n\tpublic function toString ():String { return null; };\n\tpublic function willTrigger (type:String):Bool { return false; };\n\t\n\t\n}\n\n\n#end","package lime.graphics;\n\n\nimport haxe.crypto.BaseCode;\nimport haxe.io.Bytes;\nimport haxe.io.BytesData;\nimport haxe.io.BytesInput;\nimport haxe.io.BytesOutput;\nimport lime.app.Application;\nimport lime.graphics.format.BMP;\nimport lime.graphics.format.JPEG;\nimport lime.graphics.format.PNG;\nimport lime.graphics.utils.ImageCanvasUtil;\nimport lime.graphics.utils.ImageDataUtil;\nimport lime.math.color.ARGB;\nimport lime.math.color.BGRA;\nimport lime.math.color.RGBA;\nimport lime.math.ColorMatrix;\nimport lime.math.Rectangle;\nimport lime.math.Vector2;\nimport lime.system.CFFI;\nimport lime.utils.ArrayBuffer;\nimport lime.utils.UInt8Array;\n\n#if (js && html5)\nimport js.html.CanvasElement;\nimport js.html.ImageElement;\nimport js.html.Image in JSImage;\nimport js.Browser;\n#elseif flash\nimport flash.display.BitmapData;\nimport flash.geom.Matrix;\nimport flash.utils.ByteArray;\n#end\n\n#if format\nimport format.png.Data;\nimport format.png.Reader;\nimport format.png.Tools;\nimport format.png.Writer;\nimport format.tools.Deflate;\n#if sys\nimport sys.io.File;\n#end\n#end\n\n#if lime_console\nimport lime.graphics.console.TextureData;\n#end\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n@:autoBuild(lime.Assets.embedImage())\n@:allow(lime.graphics.util.ImageCanvasUtil)\n@:allow(lime.graphics.util.ImageDataUtil)\n@:access(lime.app.Application)\n@:access(lime.math.ColorMatrix)\n@:access(lime.math.Rectangle)\n@:access(lime.math.Vector2)\n\n\nclass Image {\n\t\n\t\n\tprivate static var __base64Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\tprivate static var __base64Encoder:BaseCode;\n\t\n\tpublic var buffer:ImageBuffer;\n\tpublic var data (get, set):UInt8Array;\n\tpublic var dirty:Bool;\n\tpublic var format (get, set):PixelFormat;\n\tpublic var height:Int;\n\tpublic var offsetX:Int;\n\tpublic var offsetY:Int;\n\tpublic var powerOfTwo (get, set):Bool;\n\tpublic var premultiplied (get, set):Bool;\n\tpublic var rect (get, null):Rectangle;\n\tpublic var src (get, set):Dynamic;\n\tpublic var transparent (get, set):Bool;\n\tpublic var type:ImageType;\n\tpublic var width:Int;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\t\n\t\n\tpublic function new (buffer:ImageBuffer = null, offsetX:Int = 0, offsetY:Int = 0, width:Int = -1, height:Int = -1, color:Null<Int> = null, type:ImageType = null) {\n\t\t\n\t\tthis.offsetX = offsetX;\n\t\tthis.offsetY = offsetY;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t\tif (type == null) {\n\t\t\t\n\t\t\tif (Application.current != null && Application.current.renderer != null) {\n\t\t\t\t\n\t\t\t\tthis.type = switch (Application.current.renderer.context) {\n\t\t\t\t\t\n\t\t\t\t\tcase DOM (_), CANVAS (_): CANVAS;\n\t\t\t\t\tcase FLASH (_): FLASH;\n\t\t\t\t\tdefault: DATA;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.type = DATA;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis.type = type;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (buffer == null) {\n\t\t\t\n\t\t\tif (width > 0 && height > 0) {\n\t\t\t\t\n\t\t\t\tswitch (this.type) {\n\t\t\t\t\t\n\t\t\t\t\tcase CANVAS:\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.buffer = new ImageBuffer (null, width, height);\n\t\t\t\t\t\tImageCanvasUtil.createCanvas (this, width, height);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (color != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfillRect (new Rectangle (0, 0, width, height), color);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase DATA:\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.buffer = new ImageBuffer (new UInt8Array (width * height * 4), width, height);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (color != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfillRect (new Rectangle (0, 0, width, height), color);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase FLASH:\n\t\t\t\t\t\t\n\t\t\t\t\t\t#if flash\n\t\t\t\t\t\tthis.buffer = new ImageBuffer (null, width, height);\n\t\t\t\t\t\tthis.buffer.src = new BitmapData (width, height, true, ((color & 0xFF) << 24) | (color >> 8));\n\t\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__fromImageBuffer (buffer);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Image {\n\t\t\n\t\tif (buffer != null) {\n\t\t\t\n\t\t\tif (type == CANVAS && buffer.__srcImage == null) {\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.convertToCanvas (this);\n\t\t\t\tImageCanvasUtil.sync (this, true);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar image = new Image (buffer.clone (), offsetX, offsetY, width, height, null, type);\n\t\t\timage.dirty = dirty;\n\t\t\treturn image;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn new Image (null, offsetX, offsetY, width, height, null, type);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function colorTransform (rect:Rectangle, colorMatrix:ColorMatrix):Void {\n\t\t\n\t\trect = __clipRect (rect);\n\t\tif (buffer == null || rect == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.colorTransform (this, rect, colorMatrix);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.colorTransform (this, rect, colorMatrix);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\trect.offset (offsetX, offsetY);\n\t\t\t\tbuffer.__srcBitmapData.colorTransform (rect.__toFlashRectangle (), colorMatrix.__toFlashColorTransform ());\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyChannel (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, sourceChannel:ImageChannel, destChannel:ImageChannel):Void {\n\t\t\n\t\tsourceRect = __clipRect (sourceRect);\n\t\tif (buffer == null || sourceRect == null) return;\n\t\t\n\t\tif (destChannel == ALPHA && !transparent) return;\n\t\tif (sourceRect.width <= 0 || sourceRect.height <= 0) return;\n\t\tif (sourceRect.x + sourceRect.width > sourceImage.width) sourceRect.width = sourceImage.width - sourceRect.x;\n\t\tif (sourceRect.y + sourceRect.height > sourceImage.height) sourceRect.height = sourceImage.height - sourceRect.y;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.copyChannel (this, sourceImage, sourceRect, destPoint, sourceChannel, destChannel);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.copyChannel (this, sourceImage, sourceRect, destPoint, sourceChannel, destChannel);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar srcChannel = switch (sourceChannel) { \n\t\t\t\t\tcase RED: 1;\n\t\t\t\t\tcase GREEN: 2;\n\t\t\t\t\tcase BLUE: 4;\n\t\t\t\t\tcase ALPHA: 8;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dstChannel = switch (destChannel) { \n\t\t\t\t\tcase RED: 1;\n\t\t\t\t\tcase GREEN: 2;\n\t\t\t\t\tcase BLUE: 4;\n\t\t\t\t\tcase ALPHA: 8;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tsourceRect.offset (sourceImage.offsetX, sourceImage.offsetY);\n\t\t\t\tdestPoint.offset (offsetX, offsetY);\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.copyChannel (sourceImage.buffer.src, sourceRect.__toFlashRectangle (), destPoint.__toFlashPoint (), srcChannel, dstChannel);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyPixels (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, alphaImage:Image = null, alphaPoint:Vector2 = null, mergeAlpha:Bool = false):Void {\n\t\t\n\t\t//fast fails -- if source or destination is null or of 0 dimensions, do nothing\n\t\tif (buffer == null || sourceImage == null) return;\n\t\tif (sourceRect.width <= 0 || sourceRect.height <= 0) return;\n\t\tif (width <= 0 || height <= 0) return;\n\t\t\n\t\t//source rect expands too far right or too far below source image boundaries\n\t\tif (sourceRect.x + sourceRect.width > sourceImage.width) sourceRect.width = sourceImage.width - sourceRect.x;\n\t\tif (sourceRect.y + sourceRect.height > sourceImage.height) sourceRect.height = sourceImage.height - sourceRect.y;\n\t\t\n\t\t//source rect starts too far left or too far above source image boundaries\n\t\tif (sourceRect.x < 0) {\n\t\t\tsourceRect.width += sourceRect.x;\t//shrink width by amount off canvas\n\t\t\tsourceRect.x = 0;\t\t\t\t\t//clamp rect to 0\n\t\t}\n\t\tif (sourceRect.y < 0) {\n\t\t\tsourceRect.height += sourceRect.y;\t//shrink height by amount off canvas\n\t\t\tsourceRect.y = 0;\t\t\t\t\t//clamp rect to 0\n\t\t}\n\t\t\n\t\t//draw area expands too far right or too far below destination image boundaries\n\t\tif (destPoint.x + sourceRect.width > width) sourceRect.width = width - destPoint.x;\n\t\tif (destPoint.y + sourceRect.height > height) sourceRect.height = height - destPoint.y;\n\t\t\n\t\t//draw area starts too far left or too far above destination image boundaries\n\t\tif (destPoint.x < 0) {\n\t\t\tsourceRect.width += destPoint.x;\t//shrink width by amount off canvas\n\t\t\tsourceRect.x = -destPoint.x;\t\t//adjust source rect to effective starting point\n\t\t\tdestPoint.x = 0;\t\t\t\t\t//clamp destination point to 0\n\t\t}\n\t\tif (destPoint.y < 0) {\n\t\t\tsourceRect.height += destPoint.y;\t//shrink height by amount off canvas\n\t\t\tsourceRect.y = -destPoint.y;\t\t//adjust source rect to effective starting point\n\t\t\tdestPoint.y = 0;\t\t\t\t\t//clamp destination point to 0\n\t\t}\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.convertToCanvas (this);\n\t\t\t\tImageCanvasUtil.copyPixels (this, sourceImage, sourceRect, destPoint, alphaImage, alphaPoint, mergeAlpha);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\tImageCanvasUtil.convertToData (sourceImage);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.copyPixels (this, sourceImage, sourceRect, destPoint, alphaImage, alphaPoint, mergeAlpha);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tsourceRect.offset (sourceImage.offsetX, sourceImage.offsetY);\n\t\t\t\tdestPoint.offset (offsetX, offsetY);\n\t\t\t\t\n\t\t\t\tif (alphaImage != null && alphaPoint != null) {\n\t\t\t\t\t\n\t\t\t\t\talphaPoint.offset (alphaImage.offsetX, alphaImage.offsetY);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.copyPixels (sourceImage.buffer.__srcBitmapData, sourceRect.__toFlashRectangle (), destPoint.__toFlashPoint (), alphaImage != null ? alphaImage.buffer.src : null, alphaPoint != null ? alphaPoint.__toFlashPoint () : null, mergeAlpha);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function encode (format:String = \"png\", quality:Int = 90):Bytes {\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase \"png\":\n\t\t\t\t\n\t\t\t\treturn PNG.encode (this);\n\t\t\t\n\t\t\tcase \"jpg\", \"jpeg\":\n\t\t\t\t\n\t\t\t\treturn JPEG.encode (this, quality);\n\t\t\t\n\t\t\tcase \"bmp\":\n\t\t\t\t\n\t\t\t\treturn BMP.encode (this);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function fillRect (rect:Rectangle, color:Int, format:PixelFormat = null):Void {\n\t\t\n\t\trect = __clipRect (rect);\n\t\tif (buffer == null || rect == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.fillRect (this, rect, color, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tif (buffer.data.length == 0) return;\n\t\t\t\t\n\t\t\t\tImageDataUtil.fillRect (this, rect, color, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\trect.offset (offsetX, offsetY);\n\t\t\t\t\n\t\t\t\tvar argb:ARGB = switch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: color;\n\t\t\t\t\tcase BGRA32: (color:BGRA);\n\t\t\t\t\tdefault: (color:RGBA);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.fillRect (rect.__toFlashRectangle (), argb);\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function floodFill (x:Int, y:Int, color:Int, format:PixelFormat = null):Void {\n\t\t\n\t\tif (buffer == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.floodFill (this, x, y, color, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.floodFill (this, x, y, color, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar argb:ARGB = switch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: color;\n\t\t\t\t\tcase BGRA32: (color:BGRA);\n\t\t\t\t\tdefault: (color:RGBA);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.floodFill (x + offsetX, y + offsetY, argb);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBase64 (base64:String, type:String, onload:Image -> Void):Image {\n\t\t\n\t\tif (base64 == null) return null;\n\t\tvar image = new Image ();\n\t\timage.__fromBase64 (base64, type, onload);\n\t\treturn image;\n\t\t\n\t}\n\t\n\t\n\t#if flash\n\tpublic static function fromBitmapData (bitmapData:BitmapData):Image {\n\t#else\n\tpublic static function fromBitmapData (bitmapData:Dynamic):Image {\n\t#end\n\t\t\n\t\tif (bitmapData == null) return null;\n\t\t#if flash\n\t\tvar buffer = new ImageBuffer (null, bitmapData.width, bitmapData.height);\n\t\tbuffer.__srcBitmapData = bitmapData;\n\t\treturn new Image (buffer);\n\t\t#else\n\t\treturn bitmapData.image;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:Bytes, onload:Image -> Void = null):Image {\n\t\t\n\t\tif (bytes == null) return null;\n\t\tvar image = new Image ();\n\t\timage.__fromBytes (bytes, onload);\n\t\treturn image;\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static function fromCanvas (canvas:CanvasElement):Image {\n\t#else\n\tpublic static function fromCanvas (canvas:Dynamic):Image {\n\t#end\n\t\t\n\t\tif (canvas == null) return null;\n\t\tvar buffer = new ImageBuffer (null, canvas.width, canvas.height);\n\t\tbuffer.src = canvas;\n\t\treturn new Image (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String, onload:Image -> Void = null, onerror:Void -> Void = null):Image {\n\t\t\n\t\tvar image = new Image ();\n\t\timage.__fromFile (path, onload, onerror);\n\t\treturn image;\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static function fromImageElement (image:ImageElement):Image {\n\t#else\n\tpublic static function fromImageElement (image:Dynamic):Image {\n\t#end\n\t\t\n\t\tif (image == null) return null;\n\t\tvar buffer = new ImageBuffer (null, image.width, image.height);\n\t\tbuffer.src = image;\n\t\treturn new Image (buffer);\n\t\t\n\t}\n\t\n\tpublic function getColorBoundsRect (mask:Int, color:Int, findColor:Bool = true, format:PixelFormat = null):Rectangle {\n\t\t\n\t\tif (buffer == null) return null;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.getColorBoundsRect (this, mask, color, findColor, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.getColorBoundsRect (this, mask, color, findColor, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar rect = buffer.__srcBitmapData.getColorBoundsRect (mask, color, findColor);\n\t\t\t\treturn new Rectangle (rect.x, rect.y, rect.width, rect.height);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t}\n\t\t\n\t}\n\t\n\tpublic function getPixel (x:Int, y:Int, format:PixelFormat = null):Int {\n\t\t\n\t\tif (buffer == null || x < 0 || y < 0 || x >= width || y >= height) return 0;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\treturn ImageCanvasUtil.getPixel (this, x, y, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.getPixel (this, x, y, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar color:ARGB = buffer.__srcBitmapData.getPixel (x + offsetX, y + offsetY);\n\t\t\t\t\n\t\t\t\tswitch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: return color;\n\t\t\t\t\tcase BGRA32: var bgra:BGRA = color; return bgra;\n\t\t\t\t\tdefault: var rgba:RGBA = color; return rgba;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn 0;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getPixel32 (x:Int, y:Int, format:PixelFormat = null):Int {\n\t\t\n\t\tif (buffer == null || x < 0 || y < 0 || x >= width || y >= height) return 0;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\treturn ImageCanvasUtil.getPixel32 (this, x, y, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.getPixel32 (this, x, y, format);\n\t\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar color:ARGB = buffer.__srcBitmapData.getPixel32 (x + offsetX, y + offsetY);\n\t\t\t\t\n\t\t\t\tswitch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: return color;\n\t\t\t\t\tcase BGRA32: var bgra:BGRA = color; return bgra;\n\t\t\t\t\tdefault: var rgba:RGBA = color; return rgba;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn 0;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getPixels (rect:Rectangle, format:PixelFormat = null):Bytes {\n\t\t\n\t\tif (buffer == null) return null;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\treturn ImageCanvasUtil.getPixels (this, rect, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.getPixels (this, rect, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\t#if flash\n\t\t\t\trect.offset (offsetX, offsetY);\n\t\t\t\tvar byteArray:ByteArray = buffer.__srcBitmapData.getPixels (rect.__toFlashRectangle ());\n\t\t\t\t\n\t\t\t\tswitch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: // do nothing\n\t\t\t\t\tcase BGRA32:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar color:BGRA;\n\t\t\t\t\t\tvar length = Std.int (byteArray.length / 4);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 0...length) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcolor = (byteArray.readUnsignedInt ():ARGB);\n\t\t\t\t\t\t\tbyteArray.position -= 4;\n\t\t\t\t\t\t\tbyteArray.writeUnsignedInt (color);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tbyteArray.position = 0;\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar color:RGBA;\n\t\t\t\t\t\tvar length = Std.int (byteArray.length / 4);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 0...length) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcolor = (byteArray.readUnsignedInt ():ARGB);\n\t\t\t\t\t\t\tbyteArray.position -= 4;\n\t\t\t\t\t\t\tbyteArray.writeUnsignedInt (color);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tbyteArray.position = 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn Bytes.ofData (byteArray);\n\t\t\t\t#else\n\t\t\t\treturn null;\n\t\t\t\t#end\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function merge (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, redMultiplier:Int, greenMultiplier:Int, blueMultiplier:Int, alphaMultiplier:Int):Void {\n\t\t\n\t\tif (buffer == null || sourceImage == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.convertToCanvas (this);\n\t\t\t\tImageCanvasUtil.merge (this, sourceImage, sourceRect, destPoint, redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\tImageCanvasUtil.convertToData (sourceImage);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.merge (this, sourceImage, sourceRect, destPoint, redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tsourceRect.offset (offsetX, offsetY);\n\t\t\t\tbuffer.__srcBitmapData.merge (sourceImage.buffer.__srcBitmapData, sourceRect.__toFlashRectangle (), destPoint.__toFlashPoint (), redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function resize (newWidth:Int, newHeight:Int):Void {\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.resize (this, newWidth, newHeight);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\tImageDataUtil.resize (this, newWidth, newHeight);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\t#if flash\n\t\t\t\tvar matrix = new Matrix ();\n\t\t\t\tmatrix.scale (newWidth / buffer.__srcBitmapData.width, newHeight / buffer.__srcBitmapData.height);\n\t\t\t\tvar data = new BitmapData (newWidth, newHeight, true, 0x00FFFFFF);\n\t\t\t\tdata.draw (buffer.__srcBitmapData, matrix, null, null, null, true);\n\t\t\t\tbuffer.__srcBitmapData = data;\n\t\t\t\t#end\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\tbuffer.width = newWidth;\n\t\tbuffer.height = newHeight;\n\t\t\n\t\toffsetX = 0;\n\t\toffsetY = 0;\n\t\twidth = newWidth;\n\t\theight = newHeight;\n\t\t\n\t}\n\t\n\t\n\tpublic function scroll (x:Int, y:Int):Void {\n\t\t\n\t\tif (buffer == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.scroll (this, x, y);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t//#if (js && html5)\n\t\t\t\t//ImageCanvasUtil.convertToData (this);\n\t\t\t\t//#end\n\t\t\t\t\n\t\t\t\t//ImageDataUtil.scroll (this, x, y);\n\t\t\t\t\n\t\t\t\tcopyPixels (this, rect, new Vector2 (x, y));\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.scroll (x + offsetX, y + offsetX);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function setPixel (x:Int, y:Int, color:Int, format:PixelFormat = null):Void {\n\t\t\n\t\tif (buffer == null || x < 0 || y < 0 || x >= width || y >= height) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.setPixel (this, x, y, color, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.setPixel (this, x, y, color, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar argb:ARGB = switch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: color;\n\t\t\t\t\tcase BGRA32: (color:BGRA);\n\t\t\t\t\tdefault: (color:RGBA);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.setPixel (x + offsetX, y + offsetX, argb);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function setPixel32 (x:Int, y:Int, color:Int, format:PixelFormat = null):Void {\n\t\t\n\t\tif (buffer == null || x < 0 || y < 0 || x >= width || y >= height) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.setPixel32 (this, x, y, color, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.setPixel32 (this, x, y, color, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar argb:ARGB = switch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: color;\n\t\t\t\t\tcase BGRA32: (color:BGRA);\n\t\t\t\t\tdefault: (color:RGBA);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.setPixel32 (x + offsetX, y + offsetY, argb);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function setPixels (rect:Rectangle, bytes:Bytes, format:PixelFormat = null):Void {\n\t\t\n\t\trect = __clipRect (rect);\n\t\tif (buffer == null || rect == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.setPixels (this, rect, bytes, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.setPixels (this, rect, bytes, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\t#if flash\n\t\t\t\trect.offset (offsetX, offsetY);\n\t\t\t\tvar byteArray = new ByteArray ();\n\t\t\t\t\n\t\t\t\tswitch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: // do nothing\n\t\t\t\t\tcase BGRA32:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar srcData:ByteArray = bytes.getData ();\n\t\t\t\t\t\tbyteArray = new ByteArray ();\n\t\t\t\t\t\t#if flash\n\t\t\t\t\t\tbyteArray.length = srcData.length;\n\t\t\t\t\t\t#end\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar color:BGRA;\n\t\t\t\t\t\tvar length = Std.int (byteArray.length / 4);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 0...length) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcolor = srcData.readUnsignedInt ();\n\t\t\t\t\t\t\tbyteArray.writeUnsignedInt (cast (color, ARGB));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tsrcData.position = 0;\n\t\t\t\t\t\tbyteArray.position = 0;\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar srcData = bytes.getData ();\n\t\t\t\t\t\tbyteArray = new ByteArray ();\n\t\t\t\t\t\t#if flash\n\t\t\t\t\t\tbyteArray.length = srcData.length;\n\t\t\t\t\t\t#end\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar color:RGBA;\n\t\t\t\t\t\tvar length = Std.int (byteArray.length / 4);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 0...length) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcolor = srcData.readUnsignedInt ();\n\t\t\t\t\t\t\tbyteArray.writeUnsignedInt (cast (color, ARGB));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tsrcData.position = 0;\n\t\t\t\t\t\tbyteArray.position = 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.setPixels (rect.__toFlashRectangle (), byteArray);\n\t\t\t\t#end\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function threshold (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, operation:String, threshold:Int, color:Int = 0x00000000, mask:Int = 0xFFFFFFFF, copySource:Bool = false, format:PixelFormat = null):Int {\n\t\t\n\t\tif (buffer == null || sourceImage == null || sourceRect == null) return 0;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS, DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.threshold (this, sourceImage, sourceRect, destPoint, operation, threshold, color, mask, copySource, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar _color:ARGB = switch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: color;\n\t\t\t\t\tcase BGRA32: (color:BGRA);\n\t\t\t\t\tdefault: (color:RGBA);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar _mask:ARGB = switch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: mask;\n\t\t\t\t\tcase BGRA32: (mask:BGRA);\n\t\t\t\t\tdefault: (mask:RGBA);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tsourceRect.offset (sourceImage.offsetX, sourceImage.offsetY);\n\t\t\t\tdestPoint.offset (offsetX, offsetY);\n\t\t\t\t\n\t\t\t\treturn buffer.__srcBitmapData.threshold (sourceImage.buffer.src, sourceRect.__toFlashRectangle (), destPoint.__toFlashPoint (), operation, threshold, _color, _mask, copySource);\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __base64Encode (bytes:Bytes):String {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tvar extension = switch (bytes.length % 3) {\n\t\t\t\t\n\t\t\t\tcase 1: \"==\";\n\t\t\t\tcase 2: \"=\";\n\t\t\t\tdefault: \"\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (__base64Encoder == null) {\n\t\t\t\t\n\t\t\t\t__base64Encoder = new BaseCode (Bytes.ofString (__base64Chars));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn __base64Encoder.encodeBytes (bytes).toString () + extension;\n\t\t\t\n\t\t#else\n\t\t\n\t\t\treturn \"\";\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __clipRect (r:Rectangle):Rectangle {\n\t\t\n\t\tif (r == null) return null;\n\t\t\n\t\tif (r.x < 0) {\n\t\t\t\n\t\t\tr.width -= -r.x;\n\t\t\tr.x = 0;\n\t\t\t\n\t\t\tif (r.x + r.width <= 0) return null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (r.y < 0) {\n\t\t\t\n\t\t\tr.height -= -r.y;\n\t\t\tr.y = 0;\n\t\t\t\n\t\t\tif (r.y + r.height <= 0) return null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (r.x + r.width >= width) {\n\t\t\t\n\t\t\tr.width -= r.x + r.width - width;\n\t\t\t\n\t\t\tif (r.width <= 0) return null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (r.y + r.height >= height) {\n\t\t\t\n\t\t\tr.height -= r.y + r.height - height;\n\t\t\t\n\t\t\tif (r.height <= 0) return null;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn r;\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromBase64 (base64:String, type:String, onload:Image -> Void = null):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tvar image = new JSImage ();\n\t\timage.crossOrigin = \"Anonymous\";\n\t\t\n\t\tvar image_onLoaded = function (event) {\n\t\t\t\n\t\t\tbuffer = new ImageBuffer (null, image.width, image.height);\n\t\t\tbuffer.__srcImage = cast image;\n\t\t\t\n\t\t\toffsetX = 0;\n\t\t\toffsetY = 0;\n\t\t\twidth = buffer.width;\n\t\t\theight = buffer.height;\n\t\t\t\n\t\t\tif (onload != null) {\n\t\t\t\t\n\t\t\t\tonload (this);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.addEventListener (\"load\", image_onLoaded, false);\n\t\timage.src = \"data:\" + type + \";base64,\" + base64;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromBytes (bytes:Bytes, onload:Image -> Void):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tvar type = \"\";\n\t\t\t\n\t\t\tif (__isPNG (bytes)) {\n\t\t\t\t\n\t\t\t\ttype = \"image/png\";\n\t\t\t\t\n\t\t\t} else if (__isJPG (bytes)) {\n\t\t\t\t\n\t\t\t\ttype = \"image/jpeg\";\n\t\t\t\t\n\t\t\t} else if (__isGIF (bytes)) {\n\t\t\t\t\n\t\t\t\ttype = \"image/gif\";\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthrow \"Image tried to read PNG/JPG Bytes, but found an invalid header.\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__fromBase64 (__base64Encode (bytes), type, onload);\n\t\t\t\n\t\t#elseif lime_console\n\t\t\t\n\t\t\tthrow \"Image.fromBytes not implemented for console target\";\n\t\t\t\n\t\t#elseif ((cpp || neko || nodejs) && !macro)\n\t\t\t\n\t\t\tvar data:Dynamic = lime_image_load (bytes);\n\t\t\t\n\t\t\tif (data != null) {\n\t\t\t\t\n\t\t\t\t__fromImageBuffer (new ImageBuffer (new UInt8Array (@:privateAccess new Bytes (data.data.length, data.data.b)), data.width, data.height, data.bitsPerPixel));\n\t\t\t\t\n\t\t\t\tif (onload != null) {\n\t\t\t\t\t\n\t\t\t\t\tonload (this);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t#else\n\t\t\t\n\t\t\tthrow \"ImageBuffer.loadFromBytes not supported on this target\";\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromFile (path:String, onload:Image -> Void, onerror:Void -> Void):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tvar image = new JSImage ();\n\t\t\timage.crossOrigin = \"Anonymous\";\n\t\t\t\n\t\t\timage.onload = function (_) {\n\t\t\t\t\n\t\t\t\tbuffer = new ImageBuffer (null, image.width, image.height);\n\t\t\t\tbuffer.__srcImage = cast image;\n\t\t\t\t\n\t\t\t\twidth = image.width;\n\t\t\t\theight = image.height;\n\t\t\t\t\n\t\t\t\tif (onload != null) {\n\t\t\t\t\t\n\t\t\t\t\tonload (this);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\timage.onerror = function (_) {\n\t\t\t\t\n\t\t\t\tif (onerror != null) {\n\t\t\t\t\t\n\t\t\t\t\tonerror ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\timage.src = path;\n\t\t\t\n\t\t\t// Another IE9 bug: loading 20+ images fails unless this line is added.\n\t\t\t// (issue #1019768)\n\t\t\tif (image.complete) { }\n\t\t\t\n\t\t#elseif (cpp || neko || nodejs || java)\n\t\t\t\n\t\t\tvar buffer = null;\n\t\t\t\n\t\t\t#if lime_console\n\t\t\t\n\t\t\tvar td = TextureData.fromFile (path);\n\t\t\t\n\t\t\tif (td.valid) {\n\t\t\t\t\n\t\t\t\tvar w = td.width;\n\t\t\t\tvar h = td.height;\n\t\t\t\tvar data = new Array<cpp.UInt8> ();\n\t\t\t\t\n\t\t\t\t#if 1\n\t\t\t\t\n\t\t\t\tvar size = w * h * 4;\n\t\t\t\tcpp.NativeArray.setSize (data, size);\n\t\t\t\t\n\t\t\t\ttd.decode (cpp.Pointer.arrayElem (data, 0), size);\n\t\t\t\t/*\n\t\t\t\t{\n\t\t\t\t\tvar dest:cpp.Pointer<cpp.UInt32> = cast cpp.Pointer.arrayElem (data, 0);\t\n\t\t\t\t\tvar src:cpp.Pointer<cpp.UInt32> = cast td.pointer;\t\n\t\t\t\t\tvar n = w * h;\n\t\t\t\t\tfor (i in 0...n) {\n\t\t\t\t\t\tdest[i] = src[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\ttd.release ();\n\t\t\t\t\n\t\t\t\t#else\n\t\t\t\t\n\t\t\t\t// TODO(james4k): caveats here with every image\n\t\t\t\t// pointing to the same piece of memory, and things may\n\t\t\t\t// change with compressed textures. but, may be worth\n\t\t\t\t// considering if game is hitting memory constraints.\n\t\t\t\t// can we do this safely somehow? copy on write?\n\t\t\t\t// probably too many people writing directly to the\n\t\t\t\t// buffer...\n\t\t\t\tcpp.NativeArray.setUnmanagedData (data, td.pointer, w*h*4);\n\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tvar array = new UInt8Array (Bytes.ofData (cast data));\n\t\t\t\tbuffer = new ImageBuffer (array, w, h);\n\t\t\t\tbuffer.format = BGRA32;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\t#if (!sys || disable_cffi || java || macro)\n\t\t\tif (false) {}\n\t\t\t#else\n\t\t\tif (CFFI.enabled) {\n\t\t\t\t\n\t\t\t\tvar data:Dynamic = lime_image_load (path);\n\t\t\t\t\n\t\t\t\tif (data != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar u8a = new UInt8Array (@:privateAccess new Bytes (data.data.length, data.data.b));\n\t\t\t\t\tbuffer = new ImageBuffer (u8a, data.width, data.height, data.bitsPerPixel);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t#end\n\t\t\t\n\t\t\t#if format\n\t\t\t\n\t\t\telse {\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\t\tvar bytes = File.getBytes (path);\n\t\t\t\t\tvar input = new BytesInput (bytes, 0, bytes.length);\n\t\t\t\t\tvar png = new Reader (input).read ();\n\t\t\t\t\tvar data = Tools.extract32 (png);\n\t\t\t\t\tvar header = Tools.getHeader (png);\n\t\t\t\t\t\n\t\t\t\t\tvar data = new UInt8Array (Bytes.ofData (data.getData ()));\n\t\t\t\t\tvar length = header.width * header.height;\n\t\t\t\t\tvar b, g, r, a;\n\t\t\t\t\t\n\t\t\t\t\tfor (i in 0...length) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar b = data[i * 4];\n\t\t\t\t\t\tvar g = data[i * 4 + 1];\n\t\t\t\t\t\tvar r = data[i * 4 + 2];\n\t\t\t\t\t\tvar a = data[i * 4 + 3];\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata[i * 4] = r;\n\t\t\t\t\t\tdata[i * 4 + 1] = g;\n\t\t\t\t\t\tdata[i * 4 + 2] = b;\n\t\t\t\t\t\tdata[i * 4 + 3] = a;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbuffer = new ImageBuffer (data, header.width, header.height);\n\t\t\t\t\t\n\t\t\t\t} catch (e:Dynamic) {}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t\tif (buffer != null) {\n\t\t\t\t\n\t\t\t\t__fromImageBuffer (buffer);\n\t\t\t\t\n\t\t\t\tif (onload != null) {\n\t\t\t\t\t\n\t\t\t\t\tonload (this);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t#else\n\t\t\t\n\t\t\tthrow \"ImageBuffer.loadFromFile not supported on this target\";\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromImageBuffer (buffer:ImageBuffer):Void {\n\t\t\n\t\tthis.buffer = buffer;\n\t\t\n\t\tif (buffer != null) {\n\t\t\t\n\t\t\tif (width == -1) {\n\t\t\t\t\n\t\t\t\tthis.width = buffer.width;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (height == -1) {\n\t\t\t\t\n\t\t\t\tthis.height = buffer.height;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __isJPG (bytes:Bytes) {\n\t\t\n\t\treturn bytes.get (0) == 0xFF && bytes.get (1) == 0xD8;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __isPNG (bytes:Bytes) {\n\t\t\n\t\treturn (bytes.get (0) == 0x89 && bytes.get (1) == 0x50 && bytes.get (2) == 0x4E && bytes.get (3) == 0x47 && bytes.get (4) == 0x0D && bytes.get (5) == 0x0A && bytes.get (6) == 0x1A && bytes.get (7) == 0x0A);\n\t\t\n\t}\n\t\n\tprivate static function __isGIF (bytes:Bytes) {\n\t\t\n\t\tif (bytes.get (0) == 0x47 && bytes.get (1) == 0x49 && bytes.get (2) == 0x46 && bytes.get (3) == 0x38) {\n\t\t\t\n\t\t\tvar b = bytes.get (4);\n\t\t\treturn ((b == 0x37 || b == 0x39) && bytes.get (5) == 0x61);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_data ():UInt8Array {\n\t\t\n\t\tif (buffer.data == null && buffer.width > 0 && buffer.height > 0) {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.convertToCanvas (this);\n\t\t\t\tImageCanvasUtil.sync (this, false);\n\t\t\t\tImageCanvasUtil.createImageData (this);\n\t\t\t\t\n\t\t\t#elseif flash\n\t\t\t\t\n\t\t\t\tvar pixels = buffer.__srcBitmapData.getPixels (buffer.__srcBitmapData.rect);\n\t\t\t\tbuffer.data = new UInt8Array (Bytes.ofData (pixels));\n\t\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn buffer.data;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_data (value:UInt8Array):UInt8Array {\n\t\t\n\t\treturn buffer.data = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_format ():PixelFormat {\n\t\t\n\t\treturn buffer.format;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_format (value:PixelFormat):PixelFormat {\n\t\t\n\t\tif (buffer.format != value) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase DATA:\n\t\t\t\t\t\n\t\t\t\t\tImageDataUtil.setFormat (this, value);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn buffer.format = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_powerOfTwo ():Bool {\n\t\t\n\t\treturn ((buffer.width != 0) && ((buffer.width & (~buffer.width + 1)) == buffer.width)) && ((buffer.height != 0) && ((buffer.height & (~buffer.height + 1)) == buffer.height));\n\t\t\n\t}\n\t\n\t\n\tprivate function set_powerOfTwo (value:Bool):Bool {\n\t\t\n\t\tif (value != powerOfTwo) {\n\t\t\t\n\t\t\tvar newWidth = 1;\n\t\t\tvar newHeight = 1;\n\t\t\t\n\t\t\twhile (newWidth < buffer.width) {\n\t\t\t\t\n\t\t\t\tnewWidth <<= 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\twhile (newHeight < buffer.height) {\n\t\t\t\t\n\t\t\t\tnewHeight <<= 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase CANVAS:\n\t\t\t\t\t\n\t\t\t\t\t// TODO\n\t\t\t\t\n\t\t\t\tcase DATA:\n\t\t\t\t\t\n\t\t\t\t\tImageDataUtil.resizeBuffer (this, newWidth, newHeight);\n\t\t\t\t\n\t\t\t\tcase FLASH:\n\t\t\t\t\t\n\t\t\t\t\t#if flash\n\t\t\t\t\tvar bitmapData = new BitmapData (newWidth, newHeight, true, 0x000000);\n\t\t\t\t\tbitmapData.draw (buffer.src, null, null, null, true);\n\t\t\t\t\t\n\t\t\t\t\tbuffer.src = bitmapData;\n\t\t\t\t\tbuffer.width = newWidth;\n\t\t\t\t\tbuffer.height = newHeight;\n\t\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_premultiplied ():Bool {\n\t\t\n\t\treturn buffer.premultiplied;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_premultiplied (value:Bool):Bool {\n\t\t\n\t\tif (value && !buffer.premultiplied) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase DATA:\n\t\t\t\t\t\n\t\t\t\t\t#if (js && html5)\n\t\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t\tImageDataUtil.multiplyAlpha (this);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\t// TODO\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (!value && buffer.premultiplied) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase DATA:\n\t\t\t\t\t\n\t\t\t\t\t#if (js && html5)\n\t\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t\tImageDataUtil.unmultiplyAlpha (this);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\t// TODO\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_rect ():Rectangle {\n\t\t\n\t\treturn new Rectangle (0, 0, width, height);\n\t\t\n\t}\n\t\n\t\n\tprivate function get_src ():Dynamic {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcCanvas == null) {\n\t\t\t\n\t\t\tImageCanvasUtil.convertToCanvas (this);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn buffer.src;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_src (value:Dynamic):Dynamic {\n\t\t\n\t\treturn buffer.src = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_transparent ():Bool {\n\t\t\n\t\tif (buffer == null) return false;\n\t\treturn buffer.transparent;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_transparent (value:Bool):Bool {\n\t\t\n\t\t// TODO, modify data to set transparency\n\t\tif (buffer == null) return false;\n\t\treturn buffer.transparent = value;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_image_load (data:Dynamic):Dynamic;\n\t#end\n\t\n\t\n}","package lime.utils;\r\n\r\n#if (js && !display)\r\n\r\n    @:forward\r\n    @:arrayAccess\r\n    abstract UInt8Array(js.html.Uint8Array)\r\n        from js.html.Uint8Array\r\n        to js.html.Uint8Array {\r\n\r\n        public inline static var BYTES_PER_ELEMENT : Int = 1;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?array:Array<T>,\r\n            ?view:ArrayBufferView,\r\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n            if(elements != null) {\r\n                this = new js.html.Uint8Array( elements );\r\n            } else if(array != null) {\r\n                this = new js.html.Uint8Array( untyped array );\r\n            } else if(view != null) {\r\n                this = new js.html.Uint8Array( untyped view );\r\n            } else if(buffer != null) {\r\n                if(len == null) {\r\n                    this = new js.html.Uint8Array( buffer, byteoffset );\r\n                } else {\r\n                    this = new js.html.Uint8Array( buffer, byteoffset, len );\r\n                }\r\n            } else {\r\n                this = null;\r\n            }\r\n        }\r\n\r\n        @:arrayAccess inline function __set(idx:Int, val:UInt) return this[idx] = val;\r\n        @:arrayAccess inline function __get(idx:Int) : UInt return this[idx];\r\n\r\n\r\n            //non spec haxe conversions\r\n        public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int, ?len:Int ) : UInt8Array {\r\n            if(byteOffset == null) return new js.html.Uint8Array(cast bytes.getData());\r\n            if(len == null) return new js.html.Uint8Array(cast bytes.getData(), byteOffset);\r\n            return new js.html.Uint8Array(cast bytes.getData(), byteOffset, len);\r\n    }\r\n\r\n        public function toBytes() : haxe.io.Bytes {\r\n            #if (haxe_ver < 3.2)\r\n            return @:privateAccess new haxe.io.Bytes( this.byteLength, cast new js.html.Uint8Array(this.buffer) );\r\n            #else\r\n                return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\r\n            #end\r\n        }\r\n\r\n        function toString() return this != null ? 'UInt8Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\r\n\r\n    }\r\n\r\n#else\r\n\r\n    import lime.utils.ArrayBufferView;\r\n\r\n@:forward()\r\n@:arrayAccess\r\nabstract UInt8Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\r\n\r\n    public inline static var BYTES_PER_ELEMENT : Int = 1;\r\n\r\n    public var length (get, never):Int;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?array:Array<T>,\r\n            ?view:ArrayBufferView,\r\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n\r\n            if(elements != null) {\r\n                this = new ArrayBufferView( elements, Uint8 );\r\n            } else if(array != null) {\r\n                this = new ArrayBufferView(0, Uint8).initArray(array);\r\n            } else if(view != null) {\r\n                this = new ArrayBufferView(0, Uint8).initTypedArray(view);\r\n            } else if(buffer != null) {\r\n                this = new ArrayBufferView(0, Uint8).initBuffer(buffer, byteoffset, len);\r\n            } else {\r\n                throw \"Invalid constructor arguments for Uint8Array\";\r\n            }\r\n        }\r\n\r\n//Public API\r\n\r\n    public inline function subarray( begin:Int, end:Null<Int> = null) : UInt8Array return this.subarray(begin, end);\r\n\r\n\r\n            //non spec haxe conversions\r\n        public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : UInt8Array {\r\n            return new UInt8Array(bytes, byteOffset, len);\r\n        }\r\n\r\n        public function toBytes() : haxe.io.Bytes {\r\n            return this.buffer;\r\n        }\r\n\r\n//Internal\r\n\r\n        function toString() return this != null ? 'UInt8Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\r\n\r\n    inline function get_length() return this.length;\r\n\r\n\r\n    @:noCompletion\r\n    @:arrayAccess\r\n    public inline function __get(idx:Int) {\r\n        return ArrayBufferIO.getUint8(this.buffer, this.byteOffset+idx);\r\n    }\r\n\r\n    @:noCompletion\r\n    @:arrayAccess\r\n    public inline function __set(idx:Int, val:UInt) {\r\n        return ArrayBufferIO.setUint8(this.buffer, this.byteOffset+idx, val);\r\n    }\r\n\r\n}\r\n\r\n#end //!js","package lime.math.color;\n\n\nimport lime.graphics.PixelFormat;\nimport lime.utils.UInt32Array;\nimport lime.utils.UInt8Array;\n\n\nabstract ARGB(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tprivate static var a16:Int;\n\tprivate static var unmult:Float;\n\t\n\tpublic var a (get, set):Int;\n\tpublic var b (get, set):Int;\n\tpublic var g (get, set):Int;\n\tpublic var r (get, set):Int;\n\t\n\t\n\tpublic inline function new (argb:Int = 0) {\n\t\t\n\t\tthis = argb;\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function create (a:Int, r:Int, g:Int, b:Int):ARGB {\n\t\t\n\t\tvar argb = new ARGB ();\n\t\targb.set (a, r, g, b);\n\t\treturn argb;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function multiplyAlpha () {\n\t\t\n\t\tif (a == 0) {\n\t\t\t\n\t\t\tthis = 0;\n\t\t\t\n\t\t} else if (a != 0xFF) {\n\t\t\t\n\t\t\ta16 = RGBA.__alpha16[a];\n\t\t\tset (a, (r * a16) >> 16, (g * a16) >> 16, (b * a16) >> 16);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function readUInt8 (data:UInt8Array, offset:Int, format:PixelFormat = RGBA32, premultiplied:Bool = false):Void {\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 1], data[offset], data[offset + 3], data[offset + 2]);\n\t\t\t\n\t\t\tcase RGBA32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 1], data[offset + 2], data[offset + 3], data[offset]);\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 2], data[offset + 3], data[offset], data[offset + 1]);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (premultiplied) {\n\t\t\t\n\t\t\tunmultiplyAlpha ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function set (a:Int, r:Int, g:Int, b:Int):Void {\n\t\t\n\t\tthis = ((a & 0xFF) << 24) | ((r & 0xFF) << 16) | ((g & 0xFF) << 8) | (b & 0xFF);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unmultiplyAlpha () {\n\t\t\n\t\tif (a != 0 && a != 0xFF) {\n\t\t\t\n\t\t\tunmult = 255.0 / a;\n\t\t\tset (a, RGBA.__clamp[Math.floor (r * unmult)], RGBA.__clamp[Math.floor (g * unmult)], RGBA.__clamp[Math.floor (b * unmult)]);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function writeUInt8 (data:UInt8Array, offset:Int, format:PixelFormat = RGBA32, premultiplied:Bool = false):Void {\n\t\t\n\t\tif (premultiplied) {\n\t\t\t\n\t\t\tmultiplyAlpha ();\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\tdata[offset] = b;\n\t\t\t\tdata[offset + 1] = g;\n\t\t\t\tdata[offset + 2] = r;\n\t\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t\tcase RGBA32:\n\t\t\t\t\n\t\t\t\tdata[offset] = r;\n\t\t\t\tdata[offset + 1] = g;\n\t\t\t\tdata[offset + 2] = b;\n\t\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\tdata[offset] = a;\n\t\t\t\tdata[offset + 1] = r;\n\t\t\t\tdata[offset + 2] = g;\n\t\t\t\tdata[offset + 3] = b;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:from private static inline function __fromBGRA (bgra:BGRA):ARGB {\n\t\t\n\t\treturn ARGB.create (bgra.a, bgra.r, bgra.g, bgra.b);\n\t\t\n\t}\n\t\n\t\n\t@:from private static inline function __fromRGBA (rgba:RGBA):ARGB {\n\t\t\n\t\treturn ARGB.create (rgba.a, rgba.r, rgba.g, rgba.b);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate inline function get_a ():Int {\n\t\t\n\t\treturn (this >> 24) & 0xFF;\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_a (value:Int):Int {\n\t\t\n\t\tset (value, r, g, b);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_b ():Int {\n\t\t\n\t\treturn this & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_b (value:Int):Int {\n\t\t\n\t\tset (a, r, g, value);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_g ():Int {\n\t\t\n\t\treturn (this >> 8) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_g (value:Int):Int {\n\t\t\n\t\tset (a, r, value, b);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_r ():Int {\n\t\t\n\t\treturn (this >> 16) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_r (value:Int):Int {\n\t\t\n\t\tset (a, value, g, b);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.math.color;\n\n\nimport lime.graphics.PixelFormat;\nimport lime.utils.UInt32Array;\nimport lime.utils.UInt8Array;\n\n\nabstract BGRA(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tprivate static var a16:Int;\n\tprivate static var unmult:Float;\n\t\n\tpublic var a (get, set):Int;\n\tpublic var b (get, set):Int;\n\tpublic var g (get, set):Int;\n\tpublic var r (get, set):Int;\n\t\n\t\n\tpublic inline function new (bgra:Int = 0) {\n\t\t\n\t\tthis = bgra;\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function create (b:Int, g:Int, r:Int, a:Int):BGRA {\n\t\t\n\t\tvar bgra = new BGRA ();\n\t\tbgra.set (b, g, r, a);\n\t\treturn bgra;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function multiplyAlpha () {\n\t\t\n\t\tif (a == 0) {\n\t\t\t\n\t\t\tthis = 0;\n\t\t\t\n\t\t} else if (a != 0xFF) {\n\t\t\t\n\t\t\ta16 = RGBA.__alpha16[a];\n\t\t\tset ((b * a16) >> 16, (g * a16) >> 16, (r * a16) >> 16, a);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function readUInt8 (data:UInt8Array, offset:Int, format:PixelFormat = RGBA32, premultiplied:Bool = false):Void {\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\tset (data[offset], data[offset + 1], data[offset + 2], data[offset + 3]);\n\t\t\t\n\t\t\tcase RGBA32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 2], data[offset + 1], data[offset], data[offset + 3]);\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 3], data[offset + 2], data[offset + 1], data[offset]);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (premultiplied) {\n\t\t\t\n\t\t\tunmultiplyAlpha ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function set (b:Int, g:Int, r:Int, a:Int):Void {\n\t\t\n\t\tthis = ((b & 0xFF) << 24) | ((g & 0xFF) << 16) | ((r & 0xFF) << 8) | (a & 0xFF);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unmultiplyAlpha () {\n\t\t\n\t\tif (a != 0 && a != 0xFF) {\n\t\t\t\n\t\t\tunmult = 255.0 / a;\n\t\t\tset (RGBA.__clamp[Math.floor (b * unmult)], RGBA.__clamp[Math.floor (g * unmult)], RGBA.__clamp[Math.floor (r * unmult)], a);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function writeUInt8 (data:UInt8Array, offset:Int, format:PixelFormat = RGBA32, premultiplied:Bool = false):Void {\n\t\t\n\t\tif (premultiplied) {\n\t\t\t\n\t\t\tmultiplyAlpha ();\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\tdata[offset] = b;\n\t\t\t\tdata[offset + 1] = g;\n\t\t\t\tdata[offset + 2] = r;\n\t\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t\tcase RGBA32:\n\t\t\t\t\n\t\t\t\tdata[offset] = r;\n\t\t\t\tdata[offset + 1] = g;\n\t\t\t\tdata[offset + 2] = b;\n\t\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\tdata[offset] = a;\n\t\t\t\tdata[offset + 1] = r;\n\t\t\t\tdata[offset + 2] = g;\n\t\t\t\tdata[offset + 3] = b;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:from private static inline function __fromARGB (argb:ARGB):BGRA {\n\t\t\n\t\treturn BGRA.create (argb.b, argb.g, argb.r, argb.a);\n\t\t\n\t}\n\t\n\t\n\t@:from private static inline function __fromRGBA (rgba:RGBA):BGRA {\n\t\t\n\t\treturn BGRA.create (rgba.b, rgba.g, rgba.r, rgba.a);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate inline function get_a ():Int {\n\t\t\n\t\treturn this & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_a (value:Int):Int {\n\t\t\n\t\tset (b, g, r, value);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_b ():Int {\n\t\t\n\t\treturn (this >> 24) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_b (value:Int):Int {\n\t\t\n\t\tset (value, g, r, a);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_g ():Int {\n\t\t\n\t\treturn (this >> 16) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_g (value:Int):Int {\n\t\t\n\t\tset (b, value, r, a);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_r ():Int {\n\t\t\n\t\treturn (this >> 8) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_r (value:Int):Int {\n\t\t\n\t\tset (b, g, value, a);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.math.color;\n\n\nimport lime.graphics.PixelFormat;\nimport lime.utils.UInt32Array;\nimport lime.utils.UInt8Array;\n\n@:allow(lime.math.color)\n\n\nabstract RGBA(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tprivate static var __alpha16:UInt32Array;\n\tprivate static var __clamp:UInt8Array;\n\tprivate static var a16:Int;\n\tprivate static var unmult:Float;\n\t\n\tpublic var a (get, set):Int;\n\tpublic var b (get, set):Int;\n\tpublic var g (get, set):Int;\n\tpublic var r (get, set):Int;\n\t\n\t\n\tprivate static function __init__ ():Void {\n\t\t\n\t\t__alpha16 = new UInt32Array (256);\n\t\t\n\t\tfor (i in 0...256) {\n\t\t\t\n\t\t\t__alpha16[i] = Math.ceil ((i) * ((1 << 16) / 0xFF));\n\t\t\t\n\t\t}\n\t\t\n\t\t__clamp = new UInt8Array (0xFF + 0xFF);\n\t\t\n\t\tfor (i in 0...0xFF) {\n\t\t\t\n\t\t\t__clamp[i] = i;\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (i in 0xFF...(0xFF + 0xFF + 1)) {\n\t\t\t\n\t\t\t__clamp[i] = 0xFF;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function new (rgba:Int = 0) {\n\t\t\n\t\tthis = rgba;\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function create (r:Int, g:Int, b:Int, a:Int):RGBA {\n\t\t\n\t\tvar rgba = new RGBA ();\n\t\trgba.set (r, g, b, a);\n\t\treturn rgba;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function multiplyAlpha () {\n\t\t\n\t\tif (a == 0) {\n\t\t\t\n\t\t\tif (this != 0) {\n\t\t\t\t\n\t\t\t\tthis = 0;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (a != 0xFF) {\n\t\t\t\n\t\t\ta16 = __alpha16[a];\n\t\t\tset ((r * a16) >> 16, (g * a16) >> 16, (b * a16) >> 16, a);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function readUInt8 (data:UInt8Array, offset:Int, format:PixelFormat = RGBA32, premultiplied:Bool = false):Void {\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 2], data[offset + 1], data[offset], data[offset + 3]);\n\t\t\t\n\t\t\tcase RGBA32:\n\t\t\t\t\n\t\t\t\tset (data[offset], data[offset + 1], data[offset + 2], data[offset + 3]);\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 1], data[offset + 2], data[offset + 3], data[offset]);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (premultiplied) {\n\t\t\t\n\t\t\tunmultiplyAlpha ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function set (r:Int, g:Int, b:Int, a:Int):Void {\n\t\t\n\t\tthis = ((r & 0xFF) << 24) | ((g & 0xFF) << 16) | ((b & 0xFF) << 8) | (a & 0xFF);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unmultiplyAlpha () {\n\t\t\n\t\tif (a != 0 && a != 0xFF) {\n\t\t\t\n\t\t\tunmult = 255.0 / a;\n\t\t\tset (__clamp[Math.round (r * unmult)], __clamp[Math.round (g * unmult)], __clamp[Math.round (b * unmult)], a);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function writeUInt8 (data:UInt8Array, offset:Int, format:PixelFormat = RGBA32, premultiplied:Bool = false):Void {\n\t\t\n\t\tif (premultiplied) {\n\t\t\t\n\t\t\tmultiplyAlpha ();\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\tdata[offset] = b;\n\t\t\t\tdata[offset + 1] = g;\n\t\t\t\tdata[offset + 2] = r;\n\t\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t\tcase RGBA32:\n\t\t\t\t\n\t\t\t\tdata[offset] = r;\n\t\t\t\tdata[offset + 1] = g;\n\t\t\t\tdata[offset + 2] = b;\n\t\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\tdata[offset] = a;\n\t\t\t\tdata[offset + 1] = r;\n\t\t\t\tdata[offset + 2] = g;\n\t\t\t\tdata[offset + 3] = b;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:from private static inline function __fromARGB (argb:ARGB):RGBA {\n\t\t\n\t\treturn RGBA.create (argb.r, argb.g, argb.b, argb.a);\n\t\t\n\t}\n\t\n\t\n\t@:from private static inline function __fromBGRA (bgra:BGRA):RGBA {\n\t\t\n\t\treturn RGBA.create (bgra.r, bgra.g, bgra.b, bgra.a);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate inline function get_a ():Int {\n\t\t\n\t\treturn this & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_a (value:Int):Int {\n\t\t\n\t\tset (r, g, b, value);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_b ():Int {\n\t\t\n\t\treturn (this >> 8) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_b (value:Int):Int {\n\t\t\n\t\tset (r, g, value, a);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_g ():Int {\n\t\t\n\t\treturn (this >> 16) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_g (value:Int):Int {\n\t\t\n\t\tset (r, value, b, a);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_r ():Int {\n\t\t\n\t\treturn (this >> 24) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_r (value:Int):Int {\n\t\t\n\t\tset (value, g, b, a);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics;\n\n\nimport haxe.io.Bytes;\nimport lime.graphics.cairo.CairoSurface;\nimport lime.utils.UInt8Array;\n\n#if (js && html5)\nimport js.html.CanvasElement;\nimport js.html.CanvasRenderingContext2D;\nimport js.html.Image in HTMLImage;\nimport js.html.ImageData;\nimport js.html.Uint8ClampedArray;\nimport js.Browser;\n#elseif flash\nimport flash.display.BitmapData;\n#end\n\n@:allow(lime.graphics.Image)\n\n\nclass ImageBuffer {\n\t\n\t\n\tpublic var bitsPerPixel:Int;\n\tpublic var data:UInt8Array;\n\tpublic var format:PixelFormat;\n\tpublic var height:Int;\n\tpublic var premultiplied:Bool;\n\tpublic var src (get, set):Dynamic;\n\tpublic var stride (get, never):Int;\n\tpublic var transparent:Bool;\n\tpublic var width:Int;\n\t\n\t@:noCompletion private var __srcBitmapData:#if flash BitmapData #else Dynamic #end;\n\t@:noCompletion private var __srcCanvas:#if (js && html5) CanvasElement #else Dynamic #end;\n\t@:noCompletion private var __srcContext:#if (js && html5) CanvasRenderingContext2D #else Dynamic #end;\n\t@:noCompletion private var __srcCustom:Dynamic;\n\t@:noCompletion private var __srcImage:#if (js && html5) HTMLImage #else Dynamic #end;\n\t@:noCompletion private var __srcImageData:#if (js && html5) ImageData #else Dynamic #end;\n\t\n\t\n\tpublic function new (data:UInt8Array = null, width:Int = 0, height:Int = 0, bitsPerPixel:Int = 32, format:PixelFormat = null) {\n\t\t\n\t\tthis.data = data;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.bitsPerPixel = bitsPerPixel;\n\t\tthis.format = (format == null ? RGBA32 : format);\n\t\ttransparent = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():ImageBuffer {\n\t\t\n\t\tvar buffer = new ImageBuffer (data, width, height, bitsPerPixel);\n\t\t\n\t\t#if flash\n\t\tif (__srcBitmapData != null) buffer.__srcBitmapData = __srcBitmapData.clone ();\n\t\t#elseif (js && html5)\n\t\tif (data != null) {\n\t\t\t\n\t\t\tbuffer.data = new UInt8Array (data.byteLength);\n\t\t\tvar copy = new UInt8Array (data);\n\t\t\tbuffer.data.set (copy);\n\t\t\t\n\t\t} else if (__srcImageData != null) {\n\t\t\t\n\t\t\tbuffer.__srcCanvas = cast Browser.document.createElement (\"canvas\");\n\t\t\tbuffer.__srcContext = cast buffer.__srcCanvas.getContext (\"2d\");\n\t\t\tbuffer.__srcCanvas.width = __srcImageData.width;\n\t\t\tbuffer.__srcCanvas.height = __srcImageData.height;\n\t\t\tbuffer.__srcImageData = buffer.__srcContext.createImageData (__srcImageData.width, __srcImageData.height);\n\t\t\tvar copy = new Uint8ClampedArray (__srcImageData.data);\n\t\t\tbuffer.__srcImageData.data.set (copy);\n\t\t\t\n\t\t} else if (__srcCanvas != null) {\n\t\t\t\n\t\t\tbuffer.__srcCanvas = cast Browser.document.createElement (\"canvas\");\n\t\t\tbuffer.__srcContext = cast buffer.__srcCanvas.getContext (\"2d\");\n\t\t\tbuffer.__srcCanvas.width = __srcCanvas.width;\n\t\t\tbuffer.__srcCanvas.height = __srcCanvas.height;\n\t\t\tbuffer.__srcContext.drawImage (__srcCanvas, 0, 0);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tbuffer.__srcImage = __srcImage;\n\t\t\t\n\t\t}\n\t\t#elseif nodejs\n\t\tif (data != null) {\n\t\t\t\n\t\t\tbuffer.data = new UInt8Array (data.byteLength);\n\t\t\tvar copy = new UInt8Array (data);\n\t\t\tbuffer.data.set (copy);\n\t\t\t\n\t\t}\n\t\tbuffer.__srcCustom = __srcCustom;\n\t\t#else\n\t\tif (data != null) {\n\t\t\t\n\t\t\tvar bytes = Bytes.alloc (data.byteLength);\n\t\t\tbytes.blit (0, buffer.data.buffer, 0, data.byteLength);\n\t\t\tbuffer.data = new UInt8Array (bytes);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tbuffer.bitsPerPixel = bitsPerPixel;\n\t\tbuffer.format = format;\n\t\tbuffer.premultiplied = premultiplied;\n\t\tbuffer.transparent = transparent;\n\t\treturn buffer;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_src ():Dynamic {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tif (__srcImage != null) return __srcImage;\n\t\t\treturn __srcCanvas;\n\t\t\t\n\t\t#elseif flash\n\t\t\t\n\t\t\treturn __srcBitmapData;\n\t\t\t\n\t\t#else\n\t\t\t\n\t\t\treturn __srcCustom;\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function set_src (value:Dynamic):Dynamic {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tif (Std.is (value, HTMLImage)) {\n\t\t\t\t\n\t\t\t\t__srcImage = cast value;\n\t\t\t\t\n\t\t\t} else if (Std.is (value, CanvasElement)) {\n\t\t\t\t\n\t\t\t\t__srcCanvas = cast value;\n\t\t\t\t__srcContext = cast __srcCanvas.getContext (\"2d\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t#elseif flash\n\t\t\t\n\t\t\t__srcBitmapData = cast value;\n\t\t\t\n\t\t#else\n\t\t\t\n\t\t\t__srcCustom = value;\n\t\t\t\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_stride ():Int {\n\t\t\n\t\treturn width * 4;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.cairo;\n\n\nimport lime.math.Matrix3;\nimport lime.math.Vector2;\nimport lime.system.CFFI;\nimport lime.system.CFFIPointer;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nclass Cairo {\n\t\n\t\n\tpublic static var version (get, null):Int;\n\tpublic static var versionString (get, null):String;\n\t\n\tpublic var antialias (get, set):CairoAntialias;\n\tpublic var currentPoint (get, never):Vector2;\n\tpublic var dash (get, set):Array<Float>;\n\tpublic var dashCount (get, never):Int;\n\tpublic var fillRule (get, set):CairoFillRule;\n\tpublic var fontFace (get, set):CairoFontFace;\n\tpublic var fontOptions (get, set):CairoFontOptions;\n\tpublic var groupTarget (get, never):CairoSurface;\n\tpublic var hasCurrentPoint (get, never):Bool;\n\tpublic var lineCap (get, set):CairoLineCap;\n\tpublic var lineJoin (get, set):CairoLineJoin;\n\tpublic var lineWidth (get, set):Float;\n\tpublic var matrix (get, set):Matrix3;\n\tpublic var miterLimit (get, set):Float;\n\tpublic var operator (get, set):CairoOperator;\n\tpublic var source (get, set):CairoPattern;\n\tpublic var target (get, null):CairoSurface;\n\tpublic var tolerance (get, set):Float;\n\tpublic var userData:Dynamic;\n\t\n\t@:noCompletion private var handle:CFFIPointer;\n\t\n\t\n\tpublic function new (surface:CairoSurface = null):Void {\n\t\t\n\t\tif (surface != null) {\n\t\t\t\n\t\t\t#if (lime_cairo && !macro)\n\t\t\thandle = lime_cairo_create (surface);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function arc (xc:Float, yc:Float, radius:Float, angle1:Float, angle2:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_arc (handle, xc, yc, radius, angle1, angle2);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function arcNegative (xc:Float, yc:Float, radius:Float, angle1:Float, angle2:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_arc_negative (handle, xc, yc, radius, angle1, angle2);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function clip ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_clip (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function clipExtents (x1:Float, y1:Float, x2:Float, y2:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_clip_extents (handle, x1, y1, x2, y2);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function clipPreserve ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_clip_preserve (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function closePath ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_close_path (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function copyPage ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_copy_page (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function curveTo (x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_curve_to (handle, x1, y1, x2, y2, x3, y3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function fill ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_fill (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function fillExtents (x1:Float, y1:Float, x2:Float, y2:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_fill_extents (handle, x1, y1, x2, y2);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function fillPreserve ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_fill_preserve (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function identityMatrix ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_identity_matrix (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function inClip (x:Float, y:Float):Bool {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_in_clip (handle, x, y);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function inFill (x:Float, y:Float):Bool {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_in_fill (handle, x, y);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function inStroke (x:Float, y:Float):Bool {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_in_stroke (handle, x, y);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function lineTo (x:Float, y:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_line_to (handle, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function moveTo (x:Float, y:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_move_to (handle, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function mask (pattern:CairoPattern):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_mask (handle, pattern);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function maskSurface (surface:CairoSurface, x:Float, y:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_mask_surface (handle, surface, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function newPath ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_new_path (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function paint ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_paint (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function paintWithAlpha (alpha:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_paint_with_alpha (handle, alpha);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function popGroup ():CairoPattern {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_pop_group (handle);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function popGroupToSource ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_pop_group_to_source (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pushGroup ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_push_group (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pushGroupWithContent (content:CairoContent):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_push_group_with_content (handle, content);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function recreate (surface:CairoSurface):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\thandle = lime_cairo_create (surface);\n\t\t#end\n\t}\n\t\n\t\n\tpublic function rectangle (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_rectangle (handle, x, y, width, height);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function relCurveTo (dx1:Float, dy1:Float, dx2:Float, dy2:Float, dx3:Float, dy3:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_rel_curve_to (handle, dx1, dy1, dx2, dy2, dx3, dy3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function relLineTo (dx:Float, dy:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_rel_line_to (handle, dx, dy);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function relMoveTo (dx:Float, dy:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_rel_move_to (handle, dx, dy);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function resetClip ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_reset_clip (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function restore ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_restore (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function save ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_save (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setFontSize (size:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_font_size (handle, size);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setSourceRGB (r:Float, g:Float, b:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_source_rgb (handle, r, g, b);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setSourceRGBA (r:Float, g:Float, b:Float, a:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_source_rgba (handle, r, g, b, a);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setSourceSurface (surface:CairoSurface, x:Float, y:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_source_surface (handle, surface, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function showPage ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_show_page (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function showText (utf8:String):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_show_text (handle, utf8);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function status ():CairoStatus {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_status (handle);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function stroke ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_stroke (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function strokeExtents (x1:Float, y1:Float, x2:Float, y2:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_stroke_extents (handle, x1, y1, x2, y2);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function strokePreserve ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_stroke_preserve (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function transform (matrix:Matrix3):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_transform (handle, matrix);\n\t\t#end\n\t\t\n\t}\n\t\n\tpublic function rotate (amount:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_rotate (handle, amount);\n\t\t#end\n\t\t\n\t}\n\t\n\tpublic function scale (x:Float, y:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_scale (handle, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function translate (x:Float, y:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_translate (handle, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_antialias ():CairoAntialias {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_antialias (handle);\n\t\t#end\n\t\t\n\t\treturn cast 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_antialias (value:CairoAntialias):CairoAntialias {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_antialias (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_currentPoint ():Vector2 {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tvar vec:Dynamic = lime_cairo_get_current_point (handle);\n\t\treturn new Vector2 (vec.x, vec.y);\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_dash ():Array<Float> {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tvar result:Dynamic = lime_cairo_get_dash (handle);\n\t\treturn result;\n\t\t#end\n\t\t\n\t\treturn [];\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_dash (value:Array<Float>):Array<Float> {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_dash (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_dashCount ():Int {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_dash_count (handle);\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_fillRule ():CairoFillRule {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_fill_rule (handle);\n\t\t#end\n\t\t\n\t\treturn cast 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_fillRule (value:CairoFillRule):CairoFillRule {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_fill_rule (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_fontFace ():CairoFontFace {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_font_face (handle);\n\t\t#end\n\t\t\n\t\treturn cast 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_fontFace (value:CairoFontFace):CairoFontFace {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_font_face (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_fontOptions ():CairoFontOptions {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_font_options (handle);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_fontOptions (value:CairoFontOptions):CairoFontOptions {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_font_options (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_groupTarget ():CairoSurface {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_group_target (handle);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_hasCurrentPoint ():Bool {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_has_current_point (handle);\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_lineCap ():CairoLineCap {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_line_cap (handle);\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_lineCap (value:CairoLineCap):CairoLineCap {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_line_cap (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_lineJoin ():CairoLineJoin {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_line_join (handle);\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_lineJoin (value:CairoLineJoin):CairoLineJoin {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_line_join (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_lineWidth ():Float {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_line_width (handle);\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_lineWidth (value:Float):Float {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_line_width (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_matrix ():Matrix3 {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tvar m:Dynamic = lime_cairo_get_matrix (handle);\n\t\treturn new Matrix3 (m.a, m.b, m.c, m.d, m.tx, m.ty);\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_matrix (value:Matrix3):Matrix3 {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_matrix (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_miterLimit ():Float {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_miter_limit (handle);\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_miterLimit (value:Float):Float {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_miter_limit (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_operator ():CairoOperator {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_operator (handle);\n\t\t#end\n\t\t\n\t\treturn cast 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_operator (value:CairoOperator):CairoOperator {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_operator (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_source ():CairoPattern {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_source (handle);\n\t\t#end\n\t\t\n\t\treturn cast 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_source (value:CairoPattern):CairoPattern {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_source (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_target ():CairoSurface {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_target (handle);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_tolerance ():Float {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_get_tolerance (handle);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_tolerance (value:Float):Float {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_set_tolerance (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_version ():Int {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_version ();\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_versionString ():String {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_version_string ();\n\t\t#else\n\t\treturn \"\";\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if (lime_cairo && !macro)\n\t@:cffi private static function lime_cairo_arc (handle:CFFIPointer, xc:Float, yc:Float, radius:Float, angle1:Float, angle2:Float):Void;\n\t@:cffi private static function lime_cairo_arc_negative (handle:CFFIPointer, xc:Float, yc:Float, radius:Float, angle1:Float, angle2:Float):Void;\n\t@:cffi private static function lime_cairo_clip (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_clip_preserve (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_clip_extents (handle:CFFIPointer, x1:Float, y1:Float, x2:Float, y2:Float):Void;\n\t@:cffi private static function lime_cairo_close_path (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_copy_page (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_create (handle:CFFIPointer):Dynamic;\n\t@:cffi private static function lime_cairo_curve_to (handle:CFFIPointer, x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float):Void;\n\t@:cffi private static function lime_cairo_fill (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_fill_extents (handle:CFFIPointer, x1:Float, y1:Float, x2:Float, y2:Float):Void;\n\t@:cffi private static function lime_cairo_fill_preserve (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_get_antialias (handle:CFFIPointer):Int;\n\t@:cffi private static function lime_cairo_get_current_point (handle:CFFIPointer):Dynamic;\n\t@:cffi private static function lime_cairo_get_dash (handle:CFFIPointer):Dynamic;\n\t@:cffi private static function lime_cairo_get_dash_count (handle:CFFIPointer):Int;\n\t@:cffi private static function lime_cairo_get_fill_rule (handle:CFFIPointer):Int;\n\t@:cffi private static function lime_cairo_get_font_face (handle:CFFIPointer):CFFIPointer;\n\t@:cffi private static function lime_cairo_get_font_options (handle:CFFIPointer):CFFIPointer;\n\t@:cffi private static function lime_cairo_get_group_target (handle:CFFIPointer):CFFIPointer;\n\t@:cffi private static function lime_cairo_get_line_cap (handle:CFFIPointer):Int;\n\t@:cffi private static function lime_cairo_get_line_join (handle:CFFIPointer):Int;\n\t@:cffi private static function lime_cairo_get_line_width (handle:CFFIPointer):Float;\n\t@:cffi private static function lime_cairo_get_matrix (handle:CFFIPointer):Dynamic;\n\t@:cffi private static function lime_cairo_get_miter_limit (handle:CFFIPointer):Float;\n\t@:cffi private static function lime_cairo_get_operator (handle:CFFIPointer):Int;\n\t@:cffi private static function lime_cairo_get_source (handle:CFFIPointer):CFFIPointer;\n\t@:cffi private static function lime_cairo_get_target (handle:CFFIPointer):CFFIPointer;\n\t@:cffi private static function lime_cairo_get_tolerance (handle:CFFIPointer):Float;\n\t@:cffi private static function lime_cairo_has_current_point (handle:CFFIPointer):Bool;\n\t@:cffi private static function lime_cairo_identity_matrix (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_in_clip (handle:CFFIPointer, x:Float, y:Float):Bool;\n\t@:cffi private static function lime_cairo_in_fill (handle:CFFIPointer, x:Float, y:Float):Bool;\n\t@:cffi private static function lime_cairo_in_stroke (handle:CFFIPointer, x:Float, y:Float):Bool;\n\t@:cffi private static function lime_cairo_line_to (handle:CFFIPointer, x:Float, y:Float):Void;\n\t@:cffi private static function lime_cairo_mask (handle:CFFIPointer, pattern:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_mask_surface (handle:CFFIPointer, surface:CFFIPointer, x:Float, y:Float):Void;\n\t@:cffi private static function lime_cairo_move_to (handle:CFFIPointer, x:Float, y:Float):Void;\n\t@:cffi private static function lime_cairo_new_path (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_paint (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_paint_with_alpha (handle:CFFIPointer, alpha:Float):Void;\n\t@:cffi private static function lime_cairo_pop_group (handle:CFFIPointer):CFFIPointer;\n\t@:cffi private static function lime_cairo_pop_group_to_source (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_push_group (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_push_group_with_content (handle:CFFIPointer, content:Int):Void;\n\t@:cffi private static function lime_cairo_rectangle (handle:CFFIPointer, x:Float, y:Float, width:Float, height:Float):Void;\n\t@:cffi private static function lime_cairo_rel_curve_to (handle:CFFIPointer, dx1:Float, dy1:Float, dx2:Float, dy2:Float, dx3:Float, dy3:Float):Void;\n\t@:cffi private static function lime_cairo_rel_line_to (handle:CFFIPointer, dx:Float, dy:Float):Void;\n\t@:cffi private static function lime_cairo_rel_move_to (handle:CFFIPointer, dx:Float, dy:Float):Void;\n\t@:cffi private static function lime_cairo_reset_clip (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_restore (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_rotate (handle:CFFIPointer, amount:Float):Void;\n\t@:cffi private static function lime_cairo_save (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_scale (handle:CFFIPointer, x:Float, y:Float):Void;\n\t@:cffi private static function lime_cairo_set_antialias (handle:CFFIPointer, cap:Int):Void;\n\t@:cffi private static function lime_cairo_set_dash (handle:CFFIPointer, dash:Dynamic):Void;\n\t@:cffi private static function lime_cairo_set_fill_rule (handle:CFFIPointer, cap:Int):Void;\n\t@:cffi private static function lime_cairo_set_font_face (handle:CFFIPointer, face:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_set_font_options (handle:CFFIPointer, options:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_set_font_size (handle:CFFIPointer, size:Float):Void;\n\t@:cffi private static function lime_cairo_set_line_cap (handle:CFFIPointer, cap:Int):Void;\n\t@:cffi private static function lime_cairo_set_line_join (handle:CFFIPointer, join:Int):Void;\n\t@:cffi private static function lime_cairo_set_line_width (handle:CFFIPointer, width:Float):Void;\n\t@:cffi private static function lime_cairo_set_matrix (handle:CFFIPointer, matrix:Dynamic):Void;\n\t@:cffi private static function lime_cairo_set_miter_limit (handle:CFFIPointer, miterLimit:Float):Void;\n\t@:cffi private static function lime_cairo_set_operator (handle:CFFIPointer, op:Int):Void;\n\t@:cffi private static function lime_cairo_set_source (handle:CFFIPointer, pattern:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_set_source_rgb (handle:CFFIPointer, r:Float, g:Float, b:Float):Void;\n\t@:cffi private static function lime_cairo_set_source_rgba (handle:CFFIPointer, r:Float, g:Float, b:Float, a:Float):Void;\n\t@:cffi private static function lime_cairo_set_source_surface (handle:CFFIPointer, surface:CFFIPointer, x:Float, y:Float):Void;\n\t@:cffi private static function lime_cairo_set_tolerance (handle:CFFIPointer, tolerance:Float):Void;\n\t@:cffi private static function lime_cairo_show_page (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_show_text (handle:CFFIPointer, text:String):Void;\n\t@:cffi private static function lime_cairo_status (handle:CFFIPointer):Int;\n\t@:cffi private static function lime_cairo_stroke (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_stroke_extents (handle:CFFIPointer, x1:Float, y1:Float, x2:Float, y2:Float):Void;\n\t@:cffi private static function lime_cairo_stroke_preserve (handle:CFFIPointer):Void;\n\t@:cffi private static function lime_cairo_transform (handle:CFFIPointer, matrix:Dynamic):Void;\n\t@:cffi private static function lime_cairo_translate (handle:CFFIPointer, x:Float, y:Float):Void;\n\t@:cffi private static function lime_cairo_version ():Int;\n\t@:cffi private static function lime_cairo_version_string ():String;\n\t#end\n\t\n\t\n}","package lime.graphics.cairo;\n\n\nimport lime.system.CFFIPointer;\nimport lime.text.Font;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nabstract CairoFTFontFace(CairoFontFace) from CairoFontFace to CairoFontFace from CFFIPointer to CFFIPointer {\n\t\n\t\n\tpublic static inline var FT_LOAD_FORCE_AUTOHINT = (1 << 5);\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\tthis = cast 0;\n\t\t\n\t}\n\t\n\t\n\tpublic static function create (face:Font, loadFlags:Int):CairoFTFontFace {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_ft_font_face_create (face.src, loadFlags);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_cairo_ft_font_face_create (face:CFFIPointer, flags:Int):CFFIPointer;\n\t#end\n\t\n\t\n}","package lime.graphics.cairo;\n\n\nimport lime.system.CFFIPointer;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nabstract CairoFontFace(CFFIPointer) from CFFIPointer to CFFIPointer {\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\tthis = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function status ():CairoStatus {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_font_face_status (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_cairo_font_face_status (handle:CFFIPointer):Int;\n\t#end\n\t\n\t\n}","package lime.graphics.cairo;\r\n\r\n\r\nimport lime.system.CFFIPointer;\r\nimport lime.text.Font;\r\n\r\n#if !macro\r\n@:build(lime.system.CFFI.build())\r\n#end\r\n\r\n\r\nabstract CairoFontOptions(CFFIPointer) from CFFIPointer to CFFIPointer {\r\n\t\r\n\t\r\n\tpublic var antialias (get, set):CairoAntialias;\r\n\tpublic var hintMetrics (get, set):CairoHintMetrics;\r\n\tpublic var hintStyle (get, set):CairoHintStyle;\r\n\tpublic var subpixelOrder (get, set):CairoSubpixelOrder;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t#if (lime_cairo && !macro)\r\n\t\tthis = lime_cairo_font_options_create ();\r\n\t\t#else\r\n\t\tthis = null;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t@:noCompletion private function get_antialias ():CairoAntialias {\r\n\t\t\r\n\t\t#if (lime_cairo && !macro)\r\n\t\treturn lime_cairo_font_options_get_antialias (this);\r\n\t\t#end\r\n\t\t\r\n\t\treturn cast 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function set_antialias (value:CairoAntialias):CairoAntialias {\r\n\t\t\r\n\t\t#if (lime_cairo && !macro)\r\n\t\tlime_cairo_font_options_set_antialias (this, value);\r\n\t\t#end\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function get_hintMetrics ():CairoHintMetrics {\r\n\t\t\r\n\t\t#if (lime_cairo && !macro)\r\n\t\treturn lime_cairo_font_options_get_hint_metrics (this);\r\n\t\t#end\r\n\t\t\r\n\t\treturn cast 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function set_hintMetrics (value:CairoHintMetrics):CairoHintMetrics {\r\n\t\t\r\n\t\t#if (lime_cairo && !macro)\r\n\t\tlime_cairo_font_options_set_hint_metrics (this, value);\r\n\t\t#end\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t@:noCompletion private function get_hintStyle ():CairoHintStyle {\r\n\t\t\r\n\t\t#if (lime_cairo && !macro)\r\n\t\treturn lime_cairo_font_options_get_hint_style (this);\r\n\t\t#end\r\n\t\t\r\n\t\treturn cast 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function set_hintStyle (value:CairoHintStyle):CairoHintStyle {\r\n\t\t\r\n\t\t#if (lime_cairo && !macro)\r\n\t\tlime_cairo_font_options_set_hint_style (this, value);\r\n\t\t#end\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function get_subpixelOrder ():CairoSubpixelOrder {\r\n\t\t\r\n\t\t#if (lime_cairo && !macro)\r\n\t\treturn lime_cairo_font_options_get_subpixel_order (this);\r\n\t\t#end\r\n\t\t\r\n\t\treturn cast 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function set_subpixelOrder (value:CairoSubpixelOrder):CairoSubpixelOrder {\r\n\t\t\r\n\t\t#if (lime_cairo && !macro)\r\n\t\tlime_cairo_font_options_set_subpixel_order (this, value);\r\n\t\t#end\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Native Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t#if ((cpp || neko || nodejs) && !macro)\r\n\t@:cffi private static function lime_cairo_font_options_create ():CFFIPointer;\r\n\t@:cffi private static function lime_cairo_font_options_get_antialias (handle:CFFIPointer):Int;\r\n\t@:cffi private static function lime_cairo_font_options_get_hint_metrics (handle:CFFIPointer):Int;\r\n\t@:cffi private static function lime_cairo_font_options_get_hint_style (handle:CFFIPointer):Int;\r\n\t@:cffi private static function lime_cairo_font_options_get_subpixel_order (handle:CFFIPointer):Int;\r\n\t@:cffi private static function lime_cairo_font_options_set_antialias (handle:CFFIPointer, v:Int):Void;\r\n\t@:cffi private static function lime_cairo_font_options_set_hint_metrics (handle:CFFIPointer, v:Int):Void;\r\n\t@:cffi private static function lime_cairo_font_options_set_hint_style (handle:CFFIPointer, v:Int):Void;\r\n\t@:cffi private static function lime_cairo_font_options_set_subpixel_order (handle:CFFIPointer, v:Int):Void;\r\n\t#end\r\n\t\r\n\t\r\n}","package lime.graphics.cairo;\n\n\nimport lime.system.CFFIPointer;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\n@:forward abstract CairoImageSurface(CairoSurface) from CairoSurface to CairoSurface from CFFIPointer to CFFIPointer {\n\t\n\t\n\tpublic var data (get, never):Dynamic;\n\tpublic var format (get, never):CairoFormat;\n\tpublic var height (get, never):Int;\n\tpublic var stride (get, never):Int;\n\tpublic var width (get, never):Int;\n\t\n\t\n\tpublic function new (format:CairoFormat, width:Int, height:Int):CairoSurface {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tthis = lime_cairo_image_surface_create (format, width, height);\n\t\t#else\n\t\tthis = cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function create (data:Dynamic, format:CairoFormat, width:Int, height:Int, stride:Int):CairoSurface {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_image_surface_create_for_data (data, format, width, height, stride);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromImage (image:Image):CairoSurface {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn create (lime_bytes_get_data_pointer (#if nodejs image.data #else image.data.buffer #end), CairoFormat.ARGB32, image.width, image.height, image.buffer.stride);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_data ():Dynamic {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_image_surface_get_data (this);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_format ():CairoFormat {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_image_surface_get_format (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_height ():Int {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_image_surface_get_height (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_stride ():Int {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_image_surface_get_stride (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_width ():Int {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_image_surface_get_width (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if (lime_cairo && !macro)\n\t@:cffi private static function lime_bytes_get_data_pointer (handle:Dynamic):Float;\n\t@:cffi private static function lime_cairo_image_surface_create (format:Int, width:Int, height:Int):CFFIPointer;\n\t@:cffi private static function lime_cairo_image_surface_create_for_data (data:Float, format:Int, width:Int, height:Int, stride:Int):CFFIPointer;\n\t@:cffi private static function lime_cairo_image_surface_get_data (handle:CFFIPointer):Float;\n\t@:cffi private static function lime_cairo_image_surface_get_format (handle:CFFIPointer):Int;\n\t@:cffi private static function lime_cairo_image_surface_get_height (handle:CFFIPointer):Int;\n\t@:cffi private static function lime_cairo_image_surface_get_stride (handle:CFFIPointer):Int;\n\t@:cffi private static function lime_cairo_image_surface_get_width (handle:CFFIPointer):Int;\n\t#end\n\t\n\t\n}","package lime.graphics.cairo;\n\n\nimport lime.math.Matrix3;\nimport lime.system.CFFIPointer;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nabstract CairoPattern(CFFIPointer) from CFFIPointer to CFFIPointer {\n\t\n\t\n\tpublic var colorStopCount (get, never):Int;\n\tpublic var extend (get, set):CairoExtend;\n\tpublic var filter (get, set):CairoFilter;\n\tpublic var matrix (get, set):Matrix3;\n\t\n\t\n\tpublic function new (handle) {\n\t\t\n\t\tthis = handle;\n\t\t\n\t}\n\t\n\t\n\tpublic function addColorStopRGB (offset:Float, r:Float, g:Float, b:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_pattern_add_color_stop_rgb (this, offset, r, g, b);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function addColorStopRGBA (offset:Float, r:Float, g:Float, b:Float, a:Float):Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_pattern_add_color_stop_rgba (this, offset, r, g, b, a);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createForSurface (surface:CairoSurface):CairoPattern {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_pattern_create_for_surface (surface);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createLinear (x0:Float, y0:Float, x1:Float, y1:Float):CairoPattern {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_pattern_create_linear (x0, y0, x1, y1);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createRadial (cx0:Float, cy0:Float, radius0:Float, cx1:Float, cy1:Float, radius1:Float):CairoPattern {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_pattern_create_radial (cx0, cy0, radius0, cx1, cy1, radius1);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createRGB (r:Float, g:Float, b:Float):CairoPattern {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_pattern_create_rgb (r, g, b);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createRGBA (r:Float, g:Float, b:Float, a:Float):CairoPattern {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_pattern_create_rgba (r, g, b, a);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_colorStopCount ():Int {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_pattern_get_color_stop_count (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_extend ():CairoExtend {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_pattern_get_extend (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_extend (value:CairoExtend):CairoExtend {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_pattern_set_extend (this, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_filter ():CairoFilter {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\treturn lime_cairo_pattern_get_filter (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_filter (value:CairoFilter):CairoFilter {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_pattern_set_filter (this, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_matrix ():Matrix3 {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tvar m:Dynamic = lime_cairo_pattern_get_matrix (this);\n\t\treturn new Matrix3 (m.a, m.b, m.c, m.d, m.tx, m.ty);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_matrix (value:Matrix3):Matrix3 {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_pattern_set_matrix (this, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if (lime_cairo && !macro)\n\t@:cffi private static function lime_cairo_pattern_add_color_stop_rgb (handle:CFFIPointer, offset:Float, red:Float, green:Float, blue:Float):Void;\n\t@:cffi private static function lime_cairo_pattern_add_color_stop_rgba (handle:CFFIPointer, offset:Float, red:Float, green:Float, blue:Float, alpha:Float):Void;\n\t@:cffi private static function lime_cairo_pattern_create_for_surface (surface:CFFIPointer):CFFIPointer;\n\t@:cffi private static function lime_cairo_pattern_create_linear (x0:Float, y0:Float, x1:Float, y1:Float):CFFIPointer;\n\t@:cffi private static function lime_cairo_pattern_create_radial (cx0:Float, cy0:Float, radius0:Float, cx1:Float, cy1:Float, radius1:Float):CFFIPointer;\n\t@:cffi private static function lime_cairo_pattern_create_rgb (r:Float, g:Float, b:Float):CFFIPointer;\n\t@:cffi private static function lime_cairo_pattern_create_rgba (r:Float, g:Float, b:Float, a:Float):CFFIPointer;\n\t@:cffi private static function lime_cairo_pattern_get_color_stop_count (handle:CFFIPointer):Int;\n\t@:cffi private static function lime_cairo_pattern_get_extend (handle:CFFIPointer):Int;\n\t@:cffi private static function lime_cairo_pattern_get_filter (handle:CFFIPointer):Int;\n\t@:cffi private static function lime_cairo_pattern_get_matrix (handle:CFFIPointer):Dynamic;\n\t@:cffi private static function lime_cairo_pattern_set_extend (handle:CFFIPointer, extend:Int):Void;\n\t@:cffi private static function lime_cairo_pattern_set_filter (handle:CFFIPointer, filter:Int):Void;\n\t@:cffi private static function lime_cairo_pattern_set_matrix (handle:CFFIPointer, matrix:Dynamic):Void;\n\t#end\n\t\n\t\n}","package lime.graphics.cairo;\n\n\nimport lime.system.CFFIPointer;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nabstract CairoSurface(CFFIPointer) from CFFIPointer to CFFIPointer {\n\t\n\t\n\tpublic function flush ():Void {\n\t\t\n\t\t#if (lime_cairo && !macro)\n\t\tlime_cairo_surface_flush (this);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if (lime_cairo && !macro)\n\t@:cffi private static function lime_cairo_surface_flush (surface:CFFIPointer):Void;\n\t#end\n\t\n\t\n}","package lime.graphics.console; #if lime_console\n\n\nimport cpp.Pointer;\nimport cpp.UInt16;\nimport lime.ConsoleIncludePaths;\n\n\n@:include(\"ConsoleIndexBuffer.h\")\n@:native(\"cpp::Struct<lime::ConsoleIndexBuffer>\")\nextern class IndexBuffer {\n\n\tpublic function lock ():Pointer<UInt16>;\n\tpublic function unlock ():Void;\n\n}\n\n\n#else\n\n\nclass IndexBuffer {\n\t\n\tpublic function new () {}\n\n}\n\n\n#end\n","package lime.graphics.console; #if lime_console\n\n\nimport lime.ConsoleIncludePaths;\n\n\n@:include(\"ConsoleShader.h\")\n@:native(\"cpp::Struct<lime::ConsoleShader>\")\nextern class Shader {\n\n\t\n}\n\n\n#else\n\n\nclass Shader {\n\t\n\tpublic function new () {}\n\n}\n\n\n#end\n","package lime.graphics.console; #if lime_console\n\n\nimport lime.graphics.console.VertexOutput;\nimport lime.ConsoleIncludePaths;\n\n\n@:include(\"ConsoleVertexBuffer.h\")\n@:native(\"cpp::Struct<lime::ConsoleVertexBuffer>\")\nextern class VertexBuffer {\n\n\tpublic function lock ():VertexOutput;\n\tpublic function unlock ():Void;\n\t\n}\n\n\n#else\n\n\nimport lime.graphics.console.VertexOutput;\n\n\nclass VertexBuffer {\n\n\tpublic function new () {}\n\t\n\tpublic function lock ():VertexOutput { return new VertexOutput (); }\n\tpublic function unlock ():Void {}\n\n}\n\n\n#end\n","package lime.graphics.console; #if lime_console\n\n\nimport cpp.Float32;\nimport cpp.UInt8;\nimport lime.ConsoleIncludePaths;\n\n\n@:include(\"ConsoleVertexOutput.h\")\n@:native(\"cpp::Struct<lime::ConsoleVertexOutput>\")\nextern class VertexOutput {\n\n\tpublic function vec2 (x:Float32, y:Float32):Void;\n\tpublic function vec3 (x:Float32, y:Float32, z:Float32):Void;\n\tpublic function color (r:UInt8, g:UInt8, b:UInt8, a:UInt8):Void;\n\n}\n\n\n#else\n\n\nclass VertexOutput {\n\n\tpublic function new () {}\n\n\tpublic function vec2 (x, y):Void {}\n\tpublic function vec3 (x, y, z):Void {}\n\tpublic function color (r, g, b, a):Void {}\n\n}\n\n\n#end\n\n","package lime.graphics.format;\n\n\nimport haxe.io.Bytes;\nimport lime.graphics.Image;\nimport lime.math.Rectangle;\n\n\nclass BMP {\n\t\n\t\n\tpublic static function encode (image:Image, type:BMPType = null):Bytes {\n\t\t\n\t\tif (image.premultiplied || image.format != RGBA32) {\n\t\t\t\n\t\t\t// TODO: Handle encode from different formats\n\t\t\t\n\t\t\timage = image.clone ();\n\t\t\timage.premultiplied = false;\n\t\t\timage.format = RGBA32;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (type == null) {\n\t\t\t\n\t\t\ttype = RGB;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar fileHeaderLength = 14;\n\t\tvar infoHeaderLength = 40;\n\t\tvar pixelValuesLength = (image.width * image.height * 4);\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase BITFIELD:\n\t\t\t\t\n\t\t\t\tinfoHeaderLength = 108;\n\t\t\t\n\t\t\tcase ICO:\n\t\t\t\t\n\t\t\t\tfileHeaderLength = 0;\n\t\t\t\tpixelValuesLength += image.width * image.height;\n\t\t\t\n\t\t\tcase RGB:\n\t\t\t\t\n\t\t\t\tpixelValuesLength = (image.width * 3) + ((image.width * 3) % 4) + (image.height * 3) + (image.height * 3);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\tvar data = Bytes.alloc (fileHeaderLength + infoHeaderLength + pixelValuesLength);\n\t\tvar position = 0;\n\t\t\n\t\tif (fileHeaderLength > 0) {\n\t\t\t\n\t\t\tdata.set (position++, 0x42);\n\t\t\tdata.set (position++, 0x4D);\n\t\t\tdata.setInt32 (position, data.length); position += 4;\n\t\t\tdata.setUInt16 (position, 0); position += 2;\n\t\t\tdata.setUInt16 (position, 0); position += 2;\n\t\t\tdata.setInt32 (position, fileHeaderLength + infoHeaderLength); position += 4;\n\t\t\t\n\t\t}\n\t\t\n\t\tdata.setInt32 (position, infoHeaderLength); position += 4;\n\t\tdata.setInt32 (position, image.width); position += 4;\n\t\tdata.setInt32 (position, type == ICO ? image.height * 2 : image.height); position += 4;\n\t\tdata.setUInt16 (position, 1); position += 2;\n\t\tdata.setUInt16 (position, type == RGB ? 24 : 32); position += 2;\n\t\tdata.setInt32 (position, type == BITFIELD ? 3 : 0); position += 4;\n\t\tdata.setInt32 (position, pixelValuesLength); position += 4;\n\t\tdata.setInt32 (position, 0x2e30); position += 4;\n\t\tdata.setInt32 (position, 0x2e30); position += 4;\n\t\tdata.setInt32 (position, 0); position += 4;\n\t\tdata.setInt32 (position, 0); position += 4;\n\t\t\n\t\tif (type == BITFIELD) {\n\t\t\t\n\t\t\tdata.setInt32 (position, 0x00FF0000); position += 4;\n\t\t\tdata.setInt32 (position, 0x0000FF00); position += 4;\n\t\t\tdata.setInt32 (position, 0x000000FF); position += 4;\n\t\t\tdata.setInt32 (position, 0xFF000000); position += 4;\n\t\t\t\n\t\t\tdata.set (position++, 0x20);\n\t\t\tdata.set (position++, 0x6E);\n\t\t\tdata.set (position++, 0x69);\n\t\t\tdata.set (position++, 0x57);\n\t\t\t\n\t\t\tfor (i in 0...48) {\n\t\t\t\t\n\t\t\t\tdata.set (position++, 0);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar pixels = image.getPixels (new Rectangle (0, 0, image.width, image.height), ARGB32);\n\t\tvar readPosition = 0;\n\t\tvar a, r, g, b;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase BITFIELD:\n\t\t\t\t\n\t\t\t\tfor (y in 0...image.height) {\n\t\t\t\t\t\n\t\t\t\t\treadPosition = (image.height - 1 - y) * 4 * image.width;\n\t\t\t\t\t\n\t\t\t\t\tfor (x in 0...image.width) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ta = pixels.get (readPosition++);\n\t\t\t\t\t\tr = pixels.get (readPosition++);\n\t\t\t\t\t\tg = pixels.get (readPosition++);\n\t\t\t\t\t\tb = pixels.get (readPosition++);\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.set (position++, b);\n\t\t\t\t\t\tdata.set (position++, g);\n\t\t\t\t\t\tdata.set (position++, r);\n\t\t\t\t\t\tdata.set (position++, a);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase ICO:\n\t\t\t\t\n\t\t\t\tvar andMask = Bytes.alloc (image.width * image.height);\n\t\t\t\tvar maskPosition = 0;\n\t\t\t\t\n\t\t\t\tfor (y in 0...image.height) {\n\t\t\t\t\t\n\t\t\t\t\treadPosition = (image.height - 1 - y) * 4 * image.width;\n\t\t\t\t\t\n\t\t\t\t\tfor (x in 0...image.width) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ta = pixels.get (readPosition++);\n\t\t\t\t\t\tr = pixels.get (readPosition++);\n\t\t\t\t\t\tg = pixels.get (readPosition++);\n\t\t\t\t\t\tb = pixels.get (readPosition++);\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.set (position++, b);\n\t\t\t\t\t\tdata.set (position++, g);\n\t\t\t\t\t\tdata.set (position++, r);\n\t\t\t\t\t\tdata.set (position++, a);\n\t\t\t\t\t\t\n\t\t\t\t\t\t//if (a < 128) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//andMask.writeByte (1);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t//} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tandMask.set (maskPosition++, 0);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t//}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdata.blit (position, andMask, 0, image.width * image.height);\n\t\t\t\n\t\t\tcase RGB:\n\t\t\t\t\n\t\t\t\tfor (y in 0...image.height) {\n\t\t\t\t\t\n\t\t\t\t\treadPosition = (image.height - 1 - y) * 4 * image.width;\n\t\t\t\t\t\n\t\t\t\t\tfor (x in 0...image.width) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ta = pixels.get (readPosition++);\n\t\t\t\t\t\tr = pixels.get (readPosition++);\n\t\t\t\t\t\tg = pixels.get (readPosition++);\n\t\t\t\t\t\tb = pixels.get (readPosition++);\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.set (position++, b);\n\t\t\t\t\t\tdata.set (position++, g);\n\t\t\t\t\t\tdata.set (position++, r);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (i in 0...((image.width * 3) % 4)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.set (position++, 0);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t\treturn data;\n\t\t\n\t}\n\t\n\t\n}\n\n\nenum BMPType {\n\t\n\tRGB;\n\tBITFIELD;\n\tICO;\n\t\n}","package lime.graphics.format;\n\n\nimport haxe.io.Bytes;\nimport lime.graphics.utils.ImageCanvasUtil;\nimport lime.graphics.Image;\nimport lime.graphics.ImageBuffer;\nimport lime.system.CFFI;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n@:access(lime.graphics.ImageBuffer)\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nclass JPEG {\n\t\n\t\n\tpublic static function decodeBytes (bytes:Bytes, decodeData:Bool = true):Image {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\t\n\t\tvar bufferData:Dynamic = lime_jpeg_decode_bytes (bytes, decodeData);\n\t\t\n\t\tif (bufferData != null) {\n\t\t\t\n\t\t\tvar buffer = new ImageBuffer (bufferData.data, bufferData.width, bufferData.height, bufferData.bpp, bufferData.format);\n\t\t\tbuffer.transparent = bufferData.transparent;\n\t\t\treturn new Image (buffer);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function decodeFile (path:String, decodeData:Bool = true):Image {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\t\n\t\tvar bufferData:Dynamic = lime_jpeg_decode_file (path, decodeData);\n\t\t\n\t\tif (bufferData != null) {\n\t\t\t\n\t\t\tvar buffer = new ImageBuffer (bufferData.data, bufferData.width, bufferData.height, bufferData.bpp, bufferData.format);\n\t\t\tbuffer.transparent = bufferData.transparent;\n\t\t\treturn new Image (buffer);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function encode (image:Image, quality:Int):Bytes {\n\t\t\n\t\tif (image.premultiplied || image.format != RGBA32) {\n\t\t\t\n\t\t\t// TODO: Handle encode from different formats\n\t\t\t\n\t\t\timage = image.clone ();\n\t\t\timage.premultiplied = false;\n\t\t\timage.format = RGBA32;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if java\n\t\t\n\t\t#elseif (sys && (!disable_cffi || !format) && !macro)\n\t\t\t\n\t\t\tvar data:Dynamic = lime_image_encode (image.buffer, 1, quality);\n\t\t\treturn @:privateAccess new Bytes (data.length, data.b);\n\t\t\t\n\t\t#elseif (js && html5)\n\t\t\n\t\tImageCanvasUtil.sync (image, false);\n\t\t\n\t\tif (image.buffer.__srcCanvas != null) {\n\t\t\t\n\t\t\t#if (haxe_ver >= 3.2)\n\t\t\tvar data = image.buffer.__srcCanvas.toDataURL (\"image/jpeg\", quality / 100);\n\t\t\t#else\n\t\t\tvar data = image.buffer.__srcCanvas.toDataURL (\"image/jpeg\");\n\t\t\t#end\n\t\t\tvar buffer = Browser.window.atob (data.split (\";base64,\")[1]);\n\t\t\tvar bytes = Bytes.alloc (buffer.length);\n\t\t\t\n\t\t\tfor (i in 0...buffer.length) {\n\t\t\t\t\n\t\t\t\tbytes.set (i, buffer.charCodeAt (i));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn bytes;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_jpeg_decode_bytes (data:Dynamic, decodeData:Bool):Dynamic;\n\t@:cffi private static function lime_jpeg_decode_file (path:String, decodeData:Bool):Dynamic;\n\t@:cffi private static function lime_image_encode (data:Dynamic, type:Int, quality:Int):Dynamic;\n\t#end\n\t\n\t\n}","package lime.graphics.format;\n\n\nimport haxe.io.Bytes;\nimport lime.graphics.Image;\nimport lime.system.CFFI;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n#if format\nimport format.png.Data;\nimport format.png.Writer;\nimport format.tools.Deflate;\nimport haxe.io.Bytes;\nimport haxe.io.BytesOutput;\n#end\n\n@:access(lime.graphics.ImageBuffer)\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nclass PNG {\n\t\n\t\n\tpublic static function decodeBytes (bytes:Bytes, decodeData:Bool = true):Image {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\t\n\t\tvar bufferData:Dynamic = lime_png_decode_bytes (bytes, decodeData);\n\t\t\n\t\tif (bufferData != null) {\n\t\t\t\n\t\t\tvar buffer = new ImageBuffer (bufferData.data, bufferData.width, bufferData.height, bufferData.bpp, bufferData.format);\n\t\t\tbuffer.transparent = bufferData.transparent;\n\t\t\treturn new Image (buffer);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function decodeFile (path:String, decodeData:Bool = true):Image {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\t\n\t\tvar bufferData:Dynamic = lime_png_decode_file (path, decodeData);\n\t\t\n\t\tif (bufferData != null) {\n\t\t\t\n\t\t\tvar buffer = new ImageBuffer (bufferData.data, bufferData.width, bufferData.height, bufferData.bpp, bufferData.format);\n\t\t\tbuffer.transparent = bufferData.transparent;\n\t\t\treturn new Image (buffer);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function encode (image:Image):Bytes {\n\t\t\n\t\tif (image.premultiplied || image.format != RGBA32) {\n\t\t\t\n\t\t\t// TODO: Handle encode from different formats\n\t\t\t\n\t\t\timage = image.clone ();\n\t\t\timage.premultiplied = false;\n\t\t\timage.format = RGBA32;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if java\n\t\t\n\t\t#elseif (sys && (!disable_cffi || !format) && !macro)\n\t\t\n\t\tif (CFFI.enabled) {\n\t\t\t\n\t\t\tvar data:Dynamic = lime_image_encode (image.buffer, 0, 0);\n\t\t\treturn @:privateAccess new Bytes (data.length, data.b);\n\t\t\t\n\t\t}\n\t\t\n\t\t#if (!html5 && format)\n\t\t\n\t\telse {\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tvar bytes = Bytes.alloc (image.width * image.height * 4 + image.height);\n\t\t\t\t\n\t\t\t\t#if flash\n\t\t\t\tvar sourceBytes = Bytes.ofData (image.buffer.data.getByteBuffer ());\n\t\t\t\t#else\n\t\t\t\tvar sourceBytes = cast image.buffer.data;\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tvar sourceIndex:Int, index:Int;\n\t\t\t\t\n\t\t\t\tfor (y in 0...image.height) {\n\t\t\t\t\t\n\t\t\t\t\tsourceIndex = y * image.width * 4;\n\t\t\t\t\tindex = y * image.width * 4 + y;\n\t\t\t\t\t\n\t\t\t\t\tbytes.set (index, 0);\n\t\t\t\t\tbytes.blit (index + 1, sourceBytes, sourceIndex, image.width * 4);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar data = new List ();\n\t\t\t\tdata.add (CHeader ({ width: image.width, height: image.height, colbits: 8, color: ColTrue (true), interlaced: false }));\n\t\t\t\tdata.add (CData (Deflate.run (bytes)));\n\t\t\t\tdata.add (CEnd);\n\t\t\t\t\n\t\t\t\tvar output = new BytesOutput ();\n\t\t\t\tvar png = new Writer (output);\n\t\t\t\tpng.write (data);\n\t\t\t\t\n\t\t\t\treturn output.getBytes ();\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) { }\n\t\t\t\n\t\t}\n\t\t\n\t\t#elseif (js && html5)\n\t\t\n\t\tImageCanvasUtil.sync (image, false);\n\t\t\n\t\tif (image.buffer.__srcCanvas != null) {\n\t\t\t\n\t\t\tvar data = image.buffer.__srcCanvas.toDataURL (\"image/png\");\n\t\t\tvar buffer = Browser.window.atob (data.split (\";base64,\")[1]);\n\t\t\tvar bytes = Bytes.alloc (buffer.length);\n\t\t\t\n\t\t\tfor (i in 0...buffer.length) {\n\t\t\t\t\n\t\t\t\tbytes[i] = buffer.charCodeAt (i);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn bytes;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_png_decode_bytes (data:Dynamic, decodeData:Bool):Dynamic;\n\t@:cffi private static function lime_png_decode_file (path:String, decodeData:Bool):Dynamic;\n\t@:cffi private static function lime_image_encode (data:Dynamic, type:Int, quality:Int):Dynamic;\n\t#end\n\t\n\t\n}","package lime.graphics.opengl;\n\n\nimport lime.utils.ArrayBuffer;\nimport lime.utils.ArrayBufferView;\nimport lime.utils.Float32Array;\nimport lime.utils.Int32Array;\nimport lime.system.System;\n\n#if (js && html5)\nimport js.html.webgl.RenderingContext;\n#elseif java\nimport org.lwjgl.opengl.EXTBlendColor;\nimport org.lwjgl.opengl.GL11;\nimport org.lwjgl.opengl.GL13;\nimport org.lwjgl.opengl.GL14;\nimport org.lwjgl.opengl.GL15;\nimport org.lwjgl.opengl.GL20;\nimport org.lwjgl.opengl.GL30;\n#end\n\n#if ((haxe_ver >= 3.2) && cpp)\nimport cpp.Float32;\n#else\ntypedef Float32 = Float;\n#end\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n@:allow(lime.ui.Window)\n\n\nclass GL {\n\t\n\t\n\tpublic static inline var DEPTH_BUFFER_BIT = 0x00000100;\n\tpublic static inline var STENCIL_BUFFER_BIT = 0x00000400;\n\tpublic static inline var COLOR_BUFFER_BIT = 0x00004000;\n\t\n\tpublic static inline var POINTS = 0x0000;\n\tpublic static inline var LINES = 0x0001;\n\tpublic static inline var LINE_LOOP = 0x0002;\n\tpublic static inline var LINE_STRIP = 0x0003;\n\tpublic static inline var TRIANGLES = 0x0004;\n\tpublic static inline var TRIANGLE_STRIP = 0x0005;\n\tpublic static inline var TRIANGLE_FAN = 0x0006;\n\t\n\tpublic static inline var ZERO = 0;\n\tpublic static inline var ONE = 1;\n\tpublic static inline var SRC_COLOR = 0x0300;\n\tpublic static inline var ONE_MINUS_SRC_COLOR = 0x0301;\n\tpublic static inline var SRC_ALPHA = 0x0302;\n\tpublic static inline var ONE_MINUS_SRC_ALPHA = 0x0303;\n\tpublic static inline var DST_ALPHA = 0x0304;\n\tpublic static inline var ONE_MINUS_DST_ALPHA = 0x0305;\n\t\n\tpublic static inline var DST_COLOR = 0x0306;\n\tpublic static inline var ONE_MINUS_DST_COLOR = 0x0307;\n\tpublic static inline var SRC_ALPHA_SATURATE = 0x0308;\n\t\n\tpublic static inline var FUNC_ADD = 0x8006;\n\tpublic static inline var BLEND_EQUATION = 0x8009;\n\tpublic static inline var BLEND_EQUATION_RGB = 0x8009;\n\tpublic static inline var BLEND_EQUATION_ALPHA = 0x883D;\n\t\n\tpublic static inline var FUNC_SUBTRACT = 0x800A;\n\tpublic static inline var FUNC_REVERSE_SUBTRACT = 0x800B;\n\t\n\tpublic static inline var BLEND_DST_RGB = 0x80C8;\n\tpublic static inline var BLEND_SRC_RGB = 0x80C9;\n\tpublic static inline var BLEND_DST_ALPHA = 0x80CA;\n\tpublic static inline var BLEND_SRC_ALPHA = 0x80CB;\n\tpublic static inline var CONSTANT_COLOR = 0x8001;\n\tpublic static inline var ONE_MINUS_CONSTANT_COLOR = 0x8002;\n\tpublic static inline var CONSTANT_ALPHA = 0x8003;\n\tpublic static inline var ONE_MINUS_CONSTANT_ALPHA = 0x8004;\n\tpublic static inline var BLEND_COLOR = 0x8005;\n\t\n\tpublic static inline var ARRAY_BUFFER = 0x8892;\n\tpublic static inline var ELEMENT_ARRAY_BUFFER = 0x8893;\n\tpublic static inline var ARRAY_BUFFER_BINDING = 0x8894;\n\tpublic static inline var ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;\n\t\n\tpublic static inline var STREAM_DRAW = 0x88E0;\n\tpublic static inline var STATIC_DRAW = 0x88E4;\n\tpublic static inline var DYNAMIC_DRAW = 0x88E8;\n\t\n\tpublic static inline var BUFFER_SIZE = 0x8764;\n\tpublic static inline var BUFFER_USAGE = 0x8765;\n\t\n\tpublic static inline var CURRENT_VERTEX_ATTRIB = 0x8626;\n\t\n\tpublic static inline var FRONT = 0x0404;\n\tpublic static inline var BACK = 0x0405;\n\tpublic static inline var FRONT_AND_BACK = 0x0408;\n\t\n\tpublic static inline var CULL_FACE = 0x0B44;\n\tpublic static inline var BLEND = 0x0BE2;\n\tpublic static inline var DITHER = 0x0BD0;\n\tpublic static inline var STENCIL_TEST = 0x0B90;\n\tpublic static inline var DEPTH_TEST = 0x0B71;\n\tpublic static inline var SCISSOR_TEST = 0x0C11;\n\tpublic static inline var POLYGON_OFFSET_FILL = 0x8037;\n\tpublic static inline var SAMPLE_ALPHA_TO_COVERAGE = 0x809E;\n\tpublic static inline var SAMPLE_COVERAGE = 0x80A0;\n\t\n\tpublic static inline var NO_ERROR = 0;\n\tpublic static inline var INVALID_ENUM = 0x0500;\n\tpublic static inline var INVALID_VALUE = 0x0501;\n\tpublic static inline var INVALID_OPERATION = 0x0502;\n\tpublic static inline var OUT_OF_MEMORY = 0x0505;\n\t\n\tpublic static inline var CW  = 0x0900;\n\tpublic static inline var CCW = 0x0901;\n\t\n\tpublic static inline var LINE_WIDTH = 0x0B21;\n\tpublic static inline var ALIASED_POINT_SIZE_RANGE = 0x846D;\n\tpublic static inline var ALIASED_LINE_WIDTH_RANGE = 0x846E;\n\tpublic static inline var CULL_FACE_MODE = 0x0B45;\n\tpublic static inline var FRONT_FACE = 0x0B46;\n\tpublic static inline var DEPTH_RANGE = 0x0B70;\n\tpublic static inline var DEPTH_WRITEMASK = 0x0B72;\n\tpublic static inline var DEPTH_CLEAR_VALUE = 0x0B73;\n\tpublic static inline var DEPTH_FUNC = 0x0B74;\n\tpublic static inline var STENCIL_CLEAR_VALUE = 0x0B91;\n\tpublic static inline var STENCIL_FUNC = 0x0B92;\n\tpublic static inline var STENCIL_FAIL = 0x0B94;\n\tpublic static inline var STENCIL_PASS_DEPTH_FAIL = 0x0B95;\n\tpublic static inline var STENCIL_PASS_DEPTH_PASS = 0x0B96;\n\tpublic static inline var STENCIL_REF = 0x0B97;\n\tpublic static inline var STENCIL_VALUE_MASK = 0x0B93;\n\tpublic static inline var STENCIL_WRITEMASK = 0x0B98;\n\tpublic static inline var STENCIL_BACK_FUNC = 0x8800;\n\tpublic static inline var STENCIL_BACK_FAIL = 0x8801;\n\tpublic static inline var STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;\n\tpublic static inline var STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;\n\tpublic static inline var STENCIL_BACK_REF = 0x8CA3;\n\tpublic static inline var STENCIL_BACK_VALUE_MASK = 0x8CA4;\n\tpublic static inline var STENCIL_BACK_WRITEMASK = 0x8CA5;\n\tpublic static inline var VIEWPORT = 0x0BA2;\n\tpublic static inline var SCISSOR_BOX = 0x0C10;\n\t\n\tpublic static inline var COLOR_CLEAR_VALUE = 0x0C22;\n\tpublic static inline var COLOR_WRITEMASK = 0x0C23;\n\tpublic static inline var UNPACK_ALIGNMENT = 0x0CF5;\n\tpublic static inline var PACK_ALIGNMENT = 0x0D05;\n\tpublic static inline var MAX_TEXTURE_SIZE = 0x0D33;\n\tpublic static inline var MAX_VIEWPORT_DIMS = 0x0D3A;\n\tpublic static inline var SUBPIXEL_BITS = 0x0D50;\n\tpublic static inline var RED_BITS = 0x0D52;\n\tpublic static inline var GREEN_BITS = 0x0D53;\n\tpublic static inline var BLUE_BITS = 0x0D54;\n\tpublic static inline var ALPHA_BITS = 0x0D55;\n\tpublic static inline var DEPTH_BITS = 0x0D56;\n\tpublic static inline var STENCIL_BITS = 0x0D57;\n\tpublic static inline var POLYGON_OFFSET_UNITS = 0x2A00;\n\t\n\tpublic static inline var POLYGON_OFFSET_FACTOR = 0x8038;\n\tpublic static inline var TEXTURE_BINDING_2D = 0x8069;\n\tpublic static inline var SAMPLE_BUFFERS = 0x80A8;\n\tpublic static inline var SAMPLES = 0x80A9;\n\tpublic static inline var SAMPLE_COVERAGE_VALUE = 0x80AA;\n\tpublic static inline var SAMPLE_COVERAGE_INVERT = 0x80AB;\n\t\n\tpublic static inline var COMPRESSED_TEXTURE_FORMATS = 0x86A3;\n\t\n\tpublic static inline var DONT_CARE = 0x1100;\n\tpublic static inline var FASTEST = 0x1101;\n\tpublic static inline var NICEST = 0x1102;\n\t\n\tpublic static inline var GENERATE_MIPMAP_HINT = 0x8192;\n\t\n\tpublic static inline var BYTE = 0x1400;\n\tpublic static inline var UNSIGNED_BYTE = 0x1401;\n\tpublic static inline var SHORT = 0x1402;\n\tpublic static inline var UNSIGNED_SHORT = 0x1403;\n\tpublic static inline var INT = 0x1404;\n\tpublic static inline var UNSIGNED_INT = 0x1405;\n\tpublic static inline var FLOAT = 0x1406;\n\t\n\tpublic static inline var DEPTH_COMPONENT = 0x1902;\n\tpublic static inline var ALPHA = 0x1906;\n\tpublic static inline var RGB = 0x1907;\n\tpublic static inline var RGBA = 0x1908;\n\tpublic static inline var BGR_EXT = 0x80E0;\n\tpublic static inline var BGRA_EXT = 0x80E1;\n\tpublic static inline var LUMINANCE = 0x1909;\n\tpublic static inline var LUMINANCE_ALPHA = 0x190A;\n\t\n\tpublic static inline var UNSIGNED_SHORT_4_4_4_4 = 0x8033;\n\tpublic static inline var UNSIGNED_SHORT_5_5_5_1 = 0x8034;\n\tpublic static inline var UNSIGNED_SHORT_5_6_5 = 0x8363;\n\t\n\tpublic static inline var FRAGMENT_SHADER = 0x8B30;\n\tpublic static inline var VERTEX_SHADER = 0x8B31;\n\tpublic static inline var MAX_VERTEX_ATTRIBS = 0x8869;\n\tpublic static inline var MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;\n\tpublic static inline var MAX_VARYING_VECTORS = 0x8DFC;\n\tpublic static inline var MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\n\tpublic static inline var MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;\n\tpublic static inline var MAX_TEXTURE_IMAGE_UNITS = 0x8872;\n\tpublic static inline var MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;\n\tpublic static inline var SHADER_TYPE = 0x8B4F;\n\tpublic static inline var DELETE_STATUS = 0x8B80;\n\tpublic static inline var LINK_STATUS = 0x8B82;\n\tpublic static inline var VALIDATE_STATUS = 0x8B83;\n\tpublic static inline var ATTACHED_SHADERS = 0x8B85;\n\tpublic static inline var ACTIVE_UNIFORMS = 0x8B86;\n\tpublic static inline var ACTIVE_ATTRIBUTES = 0x8B89;\n\tpublic static inline var SHADING_LANGUAGE_VERSION = 0x8B8C;\n\tpublic static inline var CURRENT_PROGRAM = 0x8B8D;\n\t\n\tpublic static inline var NEVER = 0x0200;\n\tpublic static inline var LESS = 0x0201;\n\tpublic static inline var EQUAL = 0x0202;\n\tpublic static inline var LEQUAL = 0x0203;\n\tpublic static inline var GREATER = 0x0204;\n\tpublic static inline var NOTEQUAL = 0x0205;\n\tpublic static inline var GEQUAL = 0x0206;\n\tpublic static inline var ALWAYS = 0x0207;\n\t\n\tpublic static inline var KEEP = 0x1E00;\n\tpublic static inline var REPLACE = 0x1E01;\n\tpublic static inline var INCR = 0x1E02;\n\tpublic static inline var DECR = 0x1E03;\n\tpublic static inline var INVERT = 0x150A;\n\tpublic static inline var INCR_WRAP = 0x8507;\n\tpublic static inline var DECR_WRAP = 0x8508;\n\t\n\tpublic static inline var VENDOR = 0x1F00;\n\tpublic static inline var RENDERER = 0x1F01;\n\tpublic static inline var VERSION = 0x1F02;\n\t\n\tpublic static inline var NEAREST = 0x2600;\n\tpublic static inline var LINEAR = 0x2601;\n\t\n\tpublic static inline var NEAREST_MIPMAP_NEAREST = 0x2700;\n\tpublic static inline var LINEAR_MIPMAP_NEAREST = 0x2701;\n\tpublic static inline var NEAREST_MIPMAP_LINEAR = 0x2702;\n\tpublic static inline var LINEAR_MIPMAP_LINEAR = 0x2703;\n\t\n\tpublic static inline var TEXTURE_MAG_FILTER = 0x2800;\n\tpublic static inline var TEXTURE_MIN_FILTER = 0x2801;\n\tpublic static inline var TEXTURE_WRAP_S = 0x2802;\n\tpublic static inline var TEXTURE_WRAP_T = 0x2803;\n\t\n\tpublic static inline var TEXTURE_2D = 0x0DE1;\n\tpublic static inline var TEXTURE = 0x1702;\n\t\n\tpublic static inline var TEXTURE_CUBE_MAP = 0x8513;\n\tpublic static inline var TEXTURE_BINDING_CUBE_MAP = 0x8514;\n\tpublic static inline var TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\n\tpublic static inline var TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;\n\tpublic static inline var TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;\n\tpublic static inline var TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;\n\tpublic static inline var TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;\n\tpublic static inline var TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;\n\tpublic static inline var MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;\n\t\n\tpublic static inline var TEXTURE0 = 0x84C0;\n\tpublic static inline var TEXTURE1 = 0x84C1;\n\tpublic static inline var TEXTURE2 = 0x84C2;\n\tpublic static inline var TEXTURE3 = 0x84C3;\n\tpublic static inline var TEXTURE4 = 0x84C4;\n\tpublic static inline var TEXTURE5 = 0x84C5;\n\tpublic static inline var TEXTURE6 = 0x84C6;\n\tpublic static inline var TEXTURE7 = 0x84C7;\n\tpublic static inline var TEXTURE8 = 0x84C8;\n\tpublic static inline var TEXTURE9 = 0x84C9;\n\tpublic static inline var TEXTURE10 = 0x84CA;\n\tpublic static inline var TEXTURE11 = 0x84CB;\n\tpublic static inline var TEXTURE12 = 0x84CC;\n\tpublic static inline var TEXTURE13 = 0x84CD;\n\tpublic static inline var TEXTURE14 = 0x84CE;\n\tpublic static inline var TEXTURE15 = 0x84CF;\n\tpublic static inline var TEXTURE16 = 0x84D0;\n\tpublic static inline var TEXTURE17 = 0x84D1;\n\tpublic static inline var TEXTURE18 = 0x84D2;\n\tpublic static inline var TEXTURE19 = 0x84D3;\n\tpublic static inline var TEXTURE20 = 0x84D4;\n\tpublic static inline var TEXTURE21 = 0x84D5;\n\tpublic static inline var TEXTURE22 = 0x84D6;\n\tpublic static inline var TEXTURE23 = 0x84D7;\n\tpublic static inline var TEXTURE24 = 0x84D8;\n\tpublic static inline var TEXTURE25 = 0x84D9;\n\tpublic static inline var TEXTURE26 = 0x84DA;\n\tpublic static inline var TEXTURE27 = 0x84DB;\n\tpublic static inline var TEXTURE28 = 0x84DC;\n\tpublic static inline var TEXTURE29 = 0x84DD;\n\tpublic static inline var TEXTURE30 = 0x84DE;\n\tpublic static inline var TEXTURE31 = 0x84DF;\n\tpublic static inline var ACTIVE_TEXTURE = 0x84E0;\n\t\n\tpublic static inline var REPEAT = 0x2901;\n\tpublic static inline var CLAMP_TO_EDGE = 0x812F;\n\tpublic static inline var MIRRORED_REPEAT = 0x8370;\n\t\n\tpublic static inline var FLOAT_VEC2 = 0x8B50;\n\tpublic static inline var FLOAT_VEC3 = 0x8B51;\n\tpublic static inline var FLOAT_VEC4 = 0x8B52;\n\tpublic static inline var INT_VEC2 = 0x8B53;\n\tpublic static inline var INT_VEC3 = 0x8B54;\n\tpublic static inline var INT_VEC4 = 0x8B55;\n\tpublic static inline var BOOL = 0x8B56;\n\tpublic static inline var BOOL_VEC2 = 0x8B57;\n\tpublic static inline var BOOL_VEC3 = 0x8B58;\n\tpublic static inline var BOOL_VEC4 = 0x8B59;\n\tpublic static inline var FLOAT_MAT2 = 0x8B5A;\n\tpublic static inline var FLOAT_MAT3 = 0x8B5B;\n\tpublic static inline var FLOAT_MAT4 = 0x8B5C;\n\tpublic static inline var SAMPLER_2D = 0x8B5E;\n\tpublic static inline var SAMPLER_CUBE = 0x8B60;\n\t\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;\n\t\n\tpublic static inline var VERTEX_PROGRAM_POINT_SIZE = 0x8642;\n\tpublic static inline var POINT_SPRITE = 0x8861;\n\t\n\tpublic static inline var COMPILE_STATUS = 0x8B81;\n\t\n\tpublic static inline var LOW_FLOAT = 0x8DF0;\n\tpublic static inline var MEDIUM_FLOAT = 0x8DF1;\n\tpublic static inline var HIGH_FLOAT = 0x8DF2;\n\tpublic static inline var LOW_INT = 0x8DF3;\n\tpublic static inline var MEDIUM_INT = 0x8DF4;\n\tpublic static inline var HIGH_INT = 0x8DF5;\n\t\n\tpublic static inline var FRAMEBUFFER = 0x8D40;\n\tpublic static inline var RENDERBUFFER = 0x8D41;\n\t\n\tpublic static inline var RGBA4 = 0x8056;\n\tpublic static inline var RGB5_A1 = 0x8057;\n\tpublic static inline var RGB565 = 0x8D62;\n\tpublic static inline var DEPTH_COMPONENT16 = 0x81A5;\n\tpublic static inline var STENCIL_INDEX = 0x1901;\n\tpublic static inline var STENCIL_INDEX8 = 0x8D48;\n\tpublic static inline var DEPTH_STENCIL = 0x84F9;\n\t\n\tpublic static inline var RENDERBUFFER_WIDTH = 0x8D42;\n\tpublic static inline var RENDERBUFFER_HEIGHT = 0x8D43;\n\tpublic static inline var RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;\n\tpublic static inline var RENDERBUFFER_RED_SIZE = 0x8D50;\n\tpublic static inline var RENDERBUFFER_GREEN_SIZE = 0x8D51;\n\tpublic static inline var RENDERBUFFER_BLUE_SIZE = 0x8D52;\n\tpublic static inline var RENDERBUFFER_ALPHA_SIZE = 0x8D53;\n\tpublic static inline var RENDERBUFFER_DEPTH_SIZE = 0x8D54;\n\tpublic static inline var RENDERBUFFER_STENCIL_SIZE = 0x8D55;\n\t\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;\n\t\n\tpublic static inline var COLOR_ATTACHMENT0 = 0x8CE0;\n\tpublic static inline var DEPTH_ATTACHMENT = 0x8D00;\n\tpublic static inline var STENCIL_ATTACHMENT = 0x8D20;\n\tpublic static inline var DEPTH_STENCIL_ATTACHMENT = 0x821A;\n\t\n\tpublic static inline var NONE = 0;\n\t\n\tpublic static inline var FRAMEBUFFER_COMPLETE = 0x8CD5;\n\tpublic static inline var FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;\n\tpublic static inline var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\n\tpublic static inline var FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;\n\tpublic static inline var FRAMEBUFFER_UNSUPPORTED = 0x8CDD;\n\t\n\tpublic static inline var FRAMEBUFFER_BINDING = 0x8CA6;\n\tpublic static inline var RENDERBUFFER_BINDING = 0x8CA7;\n\tpublic static inline var MAX_RENDERBUFFER_SIZE = 0x84E8;\n\t\n\tpublic static inline var INVALID_FRAMEBUFFER_OPERATION = 0x0506;\n\t\n\tpublic static inline var UNPACK_FLIP_Y_WEBGL = 0x9240;\n\tpublic static inline var UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\n\tpublic static inline var CONTEXT_LOST_WEBGL = 0x9242;\n\tpublic static inline var UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\n\tpublic static inline var BROWSER_DEFAULT_WEBGL = 0x9244;\n\t\n\tpublic static var version (get, null):Int;\n\t\n\t#if (js && html5)\n\tprivate static var context:RenderingContext;\n\t#end\n\t\n\t\n\tpublic static inline function activeTexture (texture:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.activeTexture (texture);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_active_texture (texture);\n\t\t#elseif java\n\t\tGL13.glActiveTexture (texture);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function attachShader (program:GLProgram, shader:GLShader):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.attachShader (program, shader);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tprogram.attach (shader);\n\t\tlime_gl_attach_shader (program.id, shader.id);\n\t\t#elseif java\n\t\tprogram.attach (shader);\n\t\tGL20.glAttachShader (program.id, shader.id);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindAttribLocation (program:GLProgram, index:Int, name:String):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.bindAttribLocation (program, index, name);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_bind_attrib_location (program.id, index, name);\n\t\t#elseif java\n\t\tGL20.glBindAttribLocation (program.id, index, name);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindBuffer (target:Int, buffer:GLBuffer):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.bindBuffer (target, buffer);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_bind_buffer (target, buffer == null ? 0 : buffer.id);\n\t\t#elseif java\n\t\tGL15.glBindBuffer (target, buffer == null ? 0 : buffer.id);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindFramebuffer (target:Int, framebuffer:GLFramebuffer):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.bindFramebuffer (target, framebuffer);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_bind_framebuffer (target, framebuffer == null ? 0 : framebuffer.id);\n\t\t#elseif java\n\t\tGL30.glBindFramebuffer (target, framebuffer == null ? 0 : framebuffer.id);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindRenderbuffer (target:Int, renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.bindRenderbuffer (target, renderbuffer);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_bind_renderbuffer (target, renderbuffer == null ? 0 : renderbuffer.id);\n\t\t#elseif java\n\t\tGL30.glBindRenderbuffer (target, renderbuffer == null ? 0 : renderbuffer.id);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindTexture (target:Int, texture:GLTexture):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.bindTexture (target, texture);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_bind_texture (target, texture == null ? 0 : texture.id);\n\t\t#elseif java\n\t\tGL11.glBindTexture (target, texture == null ? 0 : texture.id);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function blendColor (red:Float, green:Float, blue:Float, alpha:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.blendColor (red, green, blue, alpha);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_blend_color (red, green, blue, alpha);\n\t\t#elseif java\n\t\tEXTBlendColor.glBlendColorEXT (red, green, blue, alpha);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function blendEquation (mode:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.blendEquation (mode);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_blend_equation (mode);\n\t\t#elseif java\n\t\tGL14.glBlendEquation (mode);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function blendEquationSeparate (modeRGB:Int, modeAlpha:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.blendEquationSeparate (modeRGB, modeAlpha);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_blend_equation_separate (modeRGB, modeAlpha);\n\t\t#elseif java\n\t\tGL20.glBlendEquationSeparate (modeRGB, modeAlpha);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function blendFunc (sfactor:Int, dfactor:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.blendFunc (sfactor, dfactor);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_blend_func (sfactor, dfactor);\n\t\t#elseif java\n\t\tGL11.glBlendFunc (sfactor, dfactor);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function blendFuncSeparate (srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.blendFuncSeparate (srcRGB, dstRGB, srcAlpha, dstAlpha);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_blend_func_separate (srcRGB, dstRGB, srcAlpha, dstAlpha);\n\t\t#elseif java\n\t\tGL14.glBlendFuncSeparate (srcRGB, dstRGB, srcAlpha, dstAlpha);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bufferData (target:Int, data:ArrayBufferView, usage:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.bufferData (target, data, usage);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_buffer_data (target, data.buffer, data.byteOffset, data.byteLength, usage);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_buffer_data (target, data, data.byteOffset, data.byteLength, usage);\n\t\t#elseif java\n\t\t//GL15.glBufferData (target, data.buffer, data.byteOffset, data.byteLength, usage);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bufferSubData (target:Int, offset:Int, data:ArrayBufferView):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.bufferSubData (target, offset, data);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_buffer_sub_data (target, offset, data.buffer, data.byteOffset, data.byteLength);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_buffer_sub_data (target, offset, data, data.byteOffset, data.byteLength);\n\t\t#elseif java\n\t\t//GL15.glBufferSubData (target, offset, data.buffer, data.byteOffset, data.byteLength);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function checkFramebufferStatus (target:Int):Int {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.checkFramebufferStatus (target);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_check_framebuffer_status (target);\n\t\t#elseif java\n\t\treturn GL30.glCheckFramebufferStatus (target);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function clear (mask:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.clear (mask);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_clear (mask);\n\t\t#elseif java\n\t\tGL11.glClear (mask);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function clearColor (red:Float, green:Float, blue:Float, alpha:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.clearColor (red, green, blue, alpha);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_clear_color (red, green, blue, alpha);\n\t\t#elseif java\n\t\tGL11.glClearColor (red, green, blue, alpha);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function clearDepth (depth:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.clearDepth (depth);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_clear_depth (depth);\n\t\t#elseif java\n\t\tGL11.glClearDepth (depth);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function clearStencil (s:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.clearStencil (s);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_clear_stencil (s);\n\t\t#elseif java\n\t\tGL11.glClearStencil (s);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function colorMask (red:Bool, green:Bool, blue:Bool, alpha:Bool):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.colorMask (red, green, blue, alpha);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_color_mask (red, green, blue, alpha);\n\t\t#elseif java\n\t\tGL11.glColorMask (red, green, blue, alpha);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function compileShader (shader:GLShader):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.compileShader (shader);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_compile_shader (shader.id);\n\t\t#elseif java\n\t\tGL20.glCompileShader (shader.id);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, data:ArrayBufferView):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.compressedTexImage2D (target, level, internalformat, width, height, border, data);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tvar buffer = data == null ? null : data.buffer;\n\t\tlime_gl_compressed_tex_image_2d (target, level, internalformat, width, height, border, buffer, data == null ? 0 : data.byteOffset);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_compressed_tex_image_2d (target, level, internalformat, width, height, border, data == null ? null : data , data == null ? null : data.byteOffset);\n\t\t#elseif java\n\t\t//GL13.glCompressedTexImage2D (target, level, internalformat, width, height, border, data == null ? null : data.buffer, data == null ? null : data.byteOffset);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, data:ArrayBufferView):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.compressedTexSubImage2D (target, level, xoffset, yoffset, width, height, format, data);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tvar buffer = data == null ? null : data.buffer;\n\t\tlime_gl_compressed_tex_sub_image_2d (target, level, xoffset, yoffset, width, height, format, buffer, data == null ? 0 : data.byteOffset);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_compressed_tex_sub_image_2d (target, level, xoffset, yoffset, width, height, format, data == null ? null : data, data == null ? null : data.byteOffset);\n\t\t#elseif java\n\t\t//GL13.glCompressedTexSubImage2D (target, level, xoffset, yoffset, width, height, format, data == null ? null : data.buffer, data == null ? null : data.byteOffset);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function copyTexImage2D (target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.copyTexImage2D (target, level, internalformat, x, y, width, height, border);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_copy_tex_image_2d (target, level, internalformat, x, y, width, height, border);\n\t\t#elseif java\n\t\tGL11.glCopyTexImage2D (target, level, internalformat, x, y, width, height, border);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function copyTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.copyTexSubImage2D (target, level, xoffset, yoffset, x, y, width, height);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_copy_tex_sub_image_2d (target, level, xoffset, yoffset, x, y, width, height);\n\t\t#elseif java\n\t\tGL11.glCopyTexSubImage2D (target, level, xoffset, yoffset, x, y, width, height);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createBuffer ():GLBuffer {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.createBuffer ();\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn new GLBuffer (version, lime_gl_create_buffer ());\n\t\t#elseif java\n\t\t//return new GLBuffer (version, GL15.glGenBuffers (1));\n\t\treturn null;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createFramebuffer ():GLFramebuffer {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.createFramebuffer ();\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn new GLFramebuffer (version, lime_gl_create_framebuffer ());\n\t\t#elseif java\n\t\t//return new GLFramebuffer (version, GL30.glGenFramebuffers (1));\n\t\treturn null;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createProgram ():GLProgram {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.createProgram ();\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn new GLProgram (version, lime_gl_create_program ());\n\t\t#elseif java\n\t\treturn new GLProgram (version, GL20.glCreateProgram ());\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createRenderbuffer ():GLRenderbuffer {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.createRenderbuffer ();\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn new GLRenderbuffer (version, lime_gl_create_render_buffer ());\n\t\t#elseif java\n\t\t//return new GLRenderbuffer (version, GL30.glGenRenderbuffers (1));\n\t\treturn null;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createShader (type:Int):GLShader {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.createShader (type);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn new GLShader (version, lime_gl_create_shader (type));\n\t\t#elseif java\n\t\treturn new GLShader (version, GL20.glCreateShader (type));\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createTexture ():GLTexture {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.createTexture ();\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn new GLTexture (version, lime_gl_create_texture ());\n\t\t#elseif java\n\t\t//return new GLTexture (version, GL11.glGenTextures (1));\n\t\treturn null;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function cullFace (mode:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.cullFace (mode);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_cull_face (mode);\n\t\t#elseif java\n\t\tGL11.glCullFace (mode);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteBuffer (buffer:GLBuffer):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.deleteBuffer (buffer);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_delete_buffer (buffer.id);\n\t\tbuffer.invalidate ();\n\t\t#elseif java\n\t\tGL15.glDeleteBuffers (buffer.id);\n\t\tbuffer.invalidate ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteFramebuffer (framebuffer:GLFramebuffer):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.deleteFramebuffer (framebuffer);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_delete_framebuffer (framebuffer.id);\n\t\tframebuffer.invalidate ();\n\t\t#elseif\n\t\tGL30.glDeleteFramebuffers (framebuffer.id);\n\t\tframebuffer.invalidate ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteProgram (program:GLProgram):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.deleteProgram (program);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_delete_program (program.id);\n\t\tprogram.invalidate ();\n\t\t#elseif java\n\t\tGL20.glDeleteProgram (program.id);\n\t\tprogram.invalidate ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteRenderbuffer (renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.deleteRenderbuffer (renderbuffer);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_delete_render_buffer (renderbuffer.id);\n\t\trenderbuffer.invalidate ();\n\t\t#elseif java\n\t\tGL30.glDeleteRenderbuffers (renderbuffer.id);\n\t\trenderbuffer.invalidate ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteShader (shader:GLShader):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.deleteShader (shader);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_delete_shader (shader.id);\n\t\tshader.invalidate ();\n\t\t#elseif java\n\t\tGL20.glDeleteShader (shader.id);\n\t\tshader.invalidate ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteTexture (texture:GLTexture):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.deleteTexture (texture);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_delete_texture (texture.id);\n\t\ttexture.invalidate ();\n\t\t#elseif java\n\t\tGL11.glDeleteTextures (texture.id);\n\t\ttexture.invalidate ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function depthFunc (func:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.depthFunc (func);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_depth_func (func);\n\t\t#elseif java\n\t\tGL11.glDepthFunc (func);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function depthMask (flag:Bool):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.depthMask (flag);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_depth_mask (flag);\n\t\t#elseif java\n\t\tGL11.glDepthMask (flag);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function depthRange (zNear:Float, zFar:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.depthRange (zNear, zFar);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_depth_range (zNear, zFar);\n\t\t#elseif java\n\t\tGL11.glDepthRange (zNear, zFar);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function detachShader (program:GLProgram, shader:GLShader):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.detachShader (program, shader);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_detach_shader (program.id, shader.id);\n\t\t#elseif java\n\t\tGL20.glDetachShader (program.id, shader.id);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function disable (cap:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.disable (cap);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_disable (cap);\n\t\t#elseif java\n\t\tGL11.glDisable (cap);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function disableVertexAttribArray (index:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.disableVertexAttribArray (index);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_disable_vertex_attrib_array (index);\n\t\t#elseif java\n\t\tGL20.glDisableVertexAttribArray (index);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function drawArrays (mode:Int, first:Int, count:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.drawArrays (mode, first, count);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_draw_arrays (mode, first, count);\n\t\t#elseif java\n\t\tGL11.glDrawArrays (mode, first, count);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function drawElements (mode:Int, count:Int, type:Int, offset:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.drawElements (mode, count, type, offset);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_draw_elements (mode, count, type, offset);\n\t\t#elseif java\n\t\t//GL11.glDrawElements (mode, count, type, offset);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function enable (cap:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.enable (cap);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_enable (cap);\n\t\t#elseif java\n\t\tGL11.glEnable (cap);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function enableVertexAttribArray (index:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.enableVertexAttribArray (index);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_enable_vertex_attrib_array (index);\n\t\t#elseif java\n\t\tGL20.glEnableVertexAttribArray (index);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function finish ():Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.finish ();\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_finish ();\n\t\t#elseif java\n\t\tGL11.glFinish ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function flush ():Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.flush ();\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_flush ();\n\t\t#elseif java\n\t\tGL11.glFlush ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function framebufferRenderbuffer (target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.framebufferRenderbuffer (target, attachment, renderbuffertarget, renderbuffer);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_framebuffer_renderbuffer (target, attachment, renderbuffertarget, renderbuffer.id);\n\t\t#elseif java\n\t\tGL30.glFramebufferRenderbuffer (target, attachment, renderbuffertarget, renderbuffer.id);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function framebufferTexture2D (target:Int, attachment:Int, textarget:Int, texture:GLTexture, level:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.framebufferTexture2D (target, attachment, textarget, texture, level);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_framebuffer_texture2D (target, attachment, textarget, texture.id, level);\n\t\t#elseif java\n\t\tGL30.glFramebufferTexture2D (target, attachment, textarget, texture.id, level);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function frontFace (mode:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.frontFace (mode);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_front_face (mode);\n\t\t#elseif java\n\t\tGL11.glFrontFace (mode);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function generateMipmap (target:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.generateMipmap (target);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_generate_mipmap (target);\n\t\t#elseif java\n\t\tGL30.glGenerateMipmap (target);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getActiveAttrib (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getActiveAttrib (program, index);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tvar result:Dynamic = lime_gl_get_active_attrib (program.id, index);\n\t\treturn result;\n\t\t#elseif java\n\t\t//return GL20.glGetActiveAttrib (program.id, index);\n\t\treturn null;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getActiveUniform (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getActiveUniform (program, index);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tvar result:Dynamic = lime_gl_get_active_uniform (program.id, index);\n\t\treturn result;\n\t\t#elseif java\n\t\t//return GL20.glGetActiveUniform (program.id, index);\n\t\treturn null;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getAttachedShaders (program:GLProgram):Array<GLShader> {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getAttachedShaders (program);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn program.getShaders ();\n\t\t#elseif java\n\t\treturn program.getShaders ();\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getAttribLocation (program:GLProgram, name:String):Int {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getAttribLocation (program, name);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_attrib_location (program.id, name);\n\t\t#elseif java\n\t\treturn GL20.glGetAttribLocation (program.id, name);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getBufferParameter (target:Int, pname:Int):Int /*Dynamic*/ {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getBufferParameter (target, pname);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_buffer_parameter (target, pname);\n\t\t#elseif java\n\t\t//return GL15.glGetBufferParameter (target, pname);\n\t\treturn 0;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getContextAttributes ():GLContextAttributes {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getContextAttributes ();\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tvar base:Dynamic = lime_gl_get_context_attributes ();\n\t\tbase.premultipliedAlpha = false;\n\t\tbase.preserveDrawingBuffer = false;\n\t\treturn base;\n\t\t#elseif java\n\t\t//var base = lime_gl_get_context_attributes ();\n\t\tvar base:Dynamic = {};\n\t\tbase.premultipliedAlpha = false;\n\t\tbase.preserveDrawingBuffer = false;\n\t\treturn base;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getError ():Int {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getError ();\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_error ();\n\t\t#elseif java\n\t\treturn GL11.glGetError ();\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getExtension (name:String):Dynamic {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getExtension (name);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_extension (name);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getFramebufferAttachmentParameter (target:Int, attachment:Int, pname:Int):Int /*Dynamic*/ {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getFramebufferAttachmentParameter (target, attachment, pname);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_framebuffer_attachment_parameter (target, attachment, pname);\n\t\t#elseif java\n\t\t//return GL30.glGetFramebufferAttachmentParameter (target, attachment, pname);\n\t\treturn 0;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getParameter (pname:Int):Dynamic {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getParameter (pname);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_parameter (pname);\n\t\t#elseif java\n\t\treturn null;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getProgramInfoLog (program:GLProgram):String {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getProgramInfoLog (program);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_program_info_log (program.id);\n\t\t#elseif java\n\t\treturn GL20.glGetProgramInfoLog (program.id);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getProgramParameter (program:GLProgram, pname:Int):Int {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getProgramParameter (program, pname);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_program_parameter (program.id, pname);\n\t\t#elseif java\n\t\t//return GL20.glGetProgramParameter (program.id, pname);\n\t\treturn 0;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getRenderbufferParameter (target:Int, pname:Int):Int /*Dynamic*/ {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getRenderbufferParameter (target, pname);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_render_buffer_parameter (target, pname);\n\t\t#elseif java\n\t\t//return GL30.glGetRenderbufferParameter (target, pname);\n\t\treturn 0;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getShaderInfoLog (shader:GLShader):String {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getShaderInfoLog (shader);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_shader_info_log (shader.id);\n\t\t#elseif java\n\t\treturn GL20.glGetShaderInfoLog (shader.id);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getShaderParameter (shader:GLShader, pname:Int):Int {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getShaderParameter (shader, pname);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_shader_parameter (shader.id, pname);\n\t\t#elseif java\n\t\t//return GL20.glGetShaderParameter (shader.id, pname);\n\t\treturn 0;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getShaderPrecisionFormat (shadertype:Int, precisiontype:Int):GLShaderPrecisionFormat {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getShaderPrecisionFormat (shadertype, precisiontype);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tvar result:Dynamic = lime_gl_get_shader_precision_format (shadertype, precisiontype);\n\t\treturn result;\n\t\t#elseif java\n\t\t//return GL20.glGetShaderPrecisionFormat (shadertype, precisiontype);\n\t\treturn null;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getShaderSource (shader:GLShader):String {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getShaderSource (shader);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_shader_source (shader.id);\n\t\t#elseif java\n\t\treturn GL20.glGetShaderSource (shader.id);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getSupportedExtensions ():Array<String> {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getSupportedExtensions ();\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tvar result = new Array<String> ();\n\t\tlime_gl_get_supported_extensions (result);\n\t\treturn result;\n\t\t#elseif java\n\t\treturn null;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getTexParameter (target:Int, pname:Int):Int /*Dynamic*/ {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getTexParameter (target, pname);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_tex_parameter (target, pname);\n\t\t#elseif java\n\t\t//return GL11.nglGetTexParameteriv (target, pname);\n\t\treturn 0;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getUniform (program:GLProgram, location:GLUniformLocation):Dynamic {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getUniform (program, location);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_uniform (program.id, location);\n\t\t#elseif java\n\t\t//return GL20.glGetUniform (program.id, location);\n\t\treturn null;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getUniformLocation (program:GLProgram, name:String):GLUniformLocation {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getUniformLocation (program, name);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_uniform_location (program.id, name);\n\t\t#elseif java\n\t\treturn GL20.glGetUniformLocation (program.id, name);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getVertexAttrib (index:Int, pname:Int):Int /*Dynamic*/ {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getVertexAttrib (index, pname);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_vertex_attrib (index, pname);\n\t\t#elseif java\n\t\treturn 0;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getVertexAttribOffset (index:Int, pname:Int):Int {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.getVertexAttribOffset (index, pname);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_get_vertex_attrib_offset (index, pname);\n\t\t#elseif java\n\t\treturn 0;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function hint (target:Int, mode:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.hint (target, mode);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_hint (target, mode);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isBuffer (buffer:GLBuffer):Bool {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.isBuffer (buffer);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn buffer != null && buffer.id > 0 && lime_gl_is_buffer (buffer.id);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isContextLost ():Bool {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.isContextLost ();\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isEnabled (cap:Int):Bool {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.isEnabled (cap);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn lime_gl_is_enabled (cap);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isFramebuffer (framebuffer:GLFramebuffer):Bool {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.isFramebuffer (framebuffer);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn framebuffer != null && framebuffer.id > 0 && lime_gl_is_framebuffer (framebuffer.id);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isProgram (program:GLProgram):Bool {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.isProgram (program);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn program != null && program.id > 0 && lime_gl_is_program (program.id);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isRenderbuffer (renderbuffer:GLRenderbuffer):Bool {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.isRenderbuffer (renderbuffer);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn renderbuffer != null && renderbuffer.id > 0 && lime_gl_is_renderbuffer (renderbuffer.id);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isShader (shader:GLShader):Bool {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.isShader (shader);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn shader != null && shader.id > 0 && lime_gl_is_shader (shader.id);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isTexture (texture:GLTexture):Bool {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\treturn context.isTexture (texture);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\treturn texture != null && texture.id > 0 && lime_gl_is_texture (texture.id);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function lineWidth (width:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.lineWidth (width);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_line_width (width);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function linkProgram (program:GLProgram):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.linkProgram (program);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_link_program (program.id);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function pixelStorei (pname:Int, param:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.pixelStorei (pname, param);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_pixel_storei (pname, param);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function polygonOffset (factor:Float, units:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.polygonOffset (factor, units);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_polygon_offset (factor, units);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.readPixels (x, y, width, height, format, type, pixels);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tvar buffer = pixels == null ? null : pixels.buffer;\n\t\tlime_gl_read_pixels (x, y, width, height, format, type, buffer, pixels == null ? 0 : pixels.byteOffset);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_read_pixels (x, y, width, height, format, type, pixels == null ? null : pixels, pixels == null ? null : pixels.byteOffset);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function renderbufferStorage (target:Int, internalformat:Int, width:Int, height:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.renderbufferStorage (target, internalformat, width, height);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_renderbuffer_storage (target, internalformat, width, height);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function sampleCoverage (value:Float, invert:Bool):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.sampleCoverage (value, invert);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_sample_coverage (value, invert);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function scissor (x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.scissor (x, y, width, height);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_scissor (x, y, width, height);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function shaderSource (shader:GLShader, source:String):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.shaderSource (shader, source);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_shader_source (shader.id, source);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function stencilFunc (func:Int, ref:Int, mask:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.stencilFunc (func, ref, mask);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_stencil_func (func, ref, mask);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function stencilFuncSeparate (face:Int, func:Int, ref:Int, mask:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.stencilFuncSeparate (face, func, ref, mask);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_stencil_func_separate (face, func, ref, mask);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function stencilMask (mask:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.stencilMask (mask);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_stencil_mask (mask);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function stencilMaskSeparate (face:Int, mask:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.stencilMaskSeparate (face, mask);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_stencil_mask_separate (face, mask);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function stencilOp (fail:Int, zfail:Int, zpass:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.stencilOp (fail, zfail, zpass);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_stencil_op (fail, zfail, zpass);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function stencilOpSeparate (face:Int, fail:Int, zfail:Int, zpass:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.stencilOpSeparate (face, fail, zfail, zpass);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_stencil_op_separate (face, fail, zfail, zpass);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.texImage2D (target, level, internalformat, width, height, border, format, type, pixels);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tvar buffer = pixels == null ? null : pixels.buffer;\n\t\tlime_gl_tex_image_2d (target, level, internalformat, width, height, border, format, type, buffer, pixels == null ? 0 : pixels.byteOffset);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_tex_image_2d (target, level, internalformat, width, height, border, format, type, pixels == null ? null : pixels, pixels == null ? null : pixels.byteOffset);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function texParameterf (target:Int, pname:Int, param:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.texParameterf (target, pname, param);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_tex_parameterf (target, pname, param);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function texParameteri (target:Int, pname:Int, param:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.texParameteri (target, pname, param);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_tex_parameteri (target, pname, param);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.texSubImage2D (target, level, xoffset, yoffset, width, height, format, type, pixels);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tvar buffer = pixels == null ? null : pixels.buffer;\n\t\tlime_gl_tex_sub_image_2d (target, level, xoffset, yoffset, width, height, format, type, buffer, pixels == null ? 0 : pixels.byteOffset);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_tex_sub_image_2d (target, level, xoffset, yoffset, width, height, format, type, pixels == null ? null : pixels, pixels == null ? null : pixels.byteOffset);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform1f (location:GLUniformLocation, x:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform1f (location, x);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_uniform1f (location, x);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform1fv (location:GLUniformLocation, x:Float32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform1fv (location, x);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_uniform1fv (location, x.buffer);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_uniform1fv (location, x);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform1i (location:GLUniformLocation, x:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform1i (location, x);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_uniform1i (location, x);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform1iv (location:GLUniformLocation, v:Int32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform1iv (location, v);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_uniform1iv (location, v.buffer);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_uniform1iv (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform2f (location:GLUniformLocation, x:Float, y:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform2f (location, x, y);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_uniform2f (location, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform2fv (location:GLUniformLocation, v:Float32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform2fv (location, v);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_uniform2fv (location, v.buffer);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_uniform2fv (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform2i (location:GLUniformLocation, x:Int, y:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform2i (location, x, y);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_uniform2i (location, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform2iv (location:GLUniformLocation, v:Int32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform2iv (location, v);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_uniform2iv (location, v.buffer);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_uniform2iv (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform3f (location:GLUniformLocation, x:Float, y:Float, z:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform3f (location, x, y, z);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_uniform3f (location, x, y, z);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform3fv (location:GLUniformLocation, v:Float32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform3fv (location, v);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_uniform3fv (location, v.buffer);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_uniform3fv (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform3i (location:GLUniformLocation, x:Int, y:Int, z:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform3i (location, x, y, z);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_uniform3i (location, x, y, z);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform3iv (location:GLUniformLocation, v:Int32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform3iv (location, v);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_uniform3iv (location, v.buffer);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_uniform3iv (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform4f (location:GLUniformLocation, x:Float, y:Float, z:Float, w:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform4f (location, x, y, z, w);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_uniform4f (location, x, y, z, w);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform4fv (location:GLUniformLocation, v:Float32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform4fv (location, v);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_uniform4fv (location, v.buffer);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_uniform4fv (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform4i (location:GLUniformLocation, x:Int, y:Int, z:Int, w:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform4i (location, x, y, z, w);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_uniform4i (location, x, y, z, w);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform4iv (location:GLUniformLocation, v:Int32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniform4iv (location, v);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_uniform4iv (location, v.buffer);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_uniform4iv (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniformMatrix2fv (location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniformMatrix2fv (location, transpose, v);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_uniform_matrix (location, transpose, v.buffer, 2);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_uniform_matrix (location, transpose, v, 2);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniformMatrix3fv (location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniformMatrix3fv (location, transpose, v);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_uniform_matrix (location, transpose, v.buffer, 3);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_uniform_matrix (location, transpose, v, 3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniformMatrix4fv (location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.uniformMatrix4fv (location, transpose, v);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_uniform_matrix (location, transpose, v.buffer, 4);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_uniform_matrix (location, transpose, v, 4);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t/*public static inline function uniformMatrix3D(location:GLUniformLocation, transpose:Bool, matrix:Matrix3D):Void {\n\t\t\n\t\tlime_gl_uniform_matrix(location, transpose, Float32Array.fromMatrix(matrix).getByteBuffer() , 4);\n\t\t\n\t}*/\n\t\n\t\n\tpublic static inline function useProgram (program:GLProgram):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.useProgram (program);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_use_program (program == null ? 0 : program.id);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function validateProgram (program:GLProgram):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.validateProgram (program);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_validate_program (program.id);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttrib1f (indx:Int, x:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.vertexAttrib1f (indx, x);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_vertex_attrib1f (indx, x);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttrib1fv (indx:Int, values:Float32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.vertexAttrib1fv (indx, values);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_vertex_attrib1fv (indx, values.buffer);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_vertex_attrib1fv (indx, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttrib2f (indx:Int, x:Float, y:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.vertexAttrib2f (indx, x, y);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_vertex_attrib2f (indx, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttrib2fv (indx:Int, values:Float32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.vertexAttrib2fv (indx, values);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_vertex_attrib2fv (indx, values.buffer);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_vertex_attrib2fv (indx, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttrib3f (indx:Int, x:Float, y:Float, z:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.vertexAttrib3f (indx, x, y, z);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_vertex_attrib3f (indx, x, y, z);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttrib3fv (indx:Int, values:Float32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.vertexAttrib3fv (indx, values);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_vertex_attrib3fv (indx, values.buffer);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_vertex_attrib3fv (indx, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttrib4f (indx:Int, x:Float, y:Float, z:Float, w:Float):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.vertexAttrib4f (indx, x, y, z, w);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_vertex_attrib4f (indx, x, y, z, w);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttrib4fv (indx:Int, values:Float32Array):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.vertexAttrib4fv (indx, values);\n\t\t#elseif ((cpp || neko) && lime_opengl && !macro)\n\t\tlime_gl_vertex_attrib4fv (indx, values.buffer);\n\t\t#elseif (nodejs && lime_opengl && !macro)\n\t\tlime_gl_vertex_attrib4fv (indx, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttribPointer (indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.vertexAttribPointer (indx, size, type, normalized, stride, offset);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_vertex_attrib_pointer (indx, size, type, normalized, stride, offset);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function viewport (x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\t#if (js && html5 && !display)\n\t\tcontext.viewport (x, y, width, height);\n\t\t#elseif ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t\tlime_gl_viewport (x, y, width, height);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_version ():Int { return 2; }\n\t\n\t\n\t#if ((cpp || neko || nodejs) && lime_opengl && !macro)\n\t@:cffi private static function lime_gl_active_texture (texture:Int):Void;\n\t@:cffi private static function lime_gl_attach_shader (program:Int, shader:Int):Void;\n\t@:cffi private static function lime_gl_bind_attrib_location (program:Int, index:Int, name:String):Void;\n\t@:cffi private static function lime_gl_bind_buffer (target:Int, buffer:Int):Void;\n\t@:cffi private static function lime_gl_bind_framebuffer (target:Int, framebuffer:Int):Void;\n\t@:cffi private static function lime_gl_bind_renderbuffer (target:Int, renderbuffer:Int):Void;\n\t@:cffi private static function lime_gl_bind_texture (target:Int, texture:Int):Void;\n\t@:cffi private static function lime_gl_blend_color (red:Float32, green:Float32, blue:Float32, alpha:Float32):Void;\n\t@:cffi private static function lime_gl_blend_equation (mode:Int):Void;\n\t@:cffi private static function lime_gl_blend_equation_separate (modeRGB:Int, modeAlpha:Int):Void;\n\t@:cffi private static function lime_gl_blend_func (sfactor:Int, dfactor:Int):Void;\n\t@:cffi private static function lime_gl_blend_func_separate (srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void;\n\t@:cffi private static function lime_gl_buffer_data (target:Int, buffer:Dynamic, byteOffset:Int, size:Int, usage:Int):Void;\n\t@:cffi private static function lime_gl_buffer_sub_data (target:Int, offset:Int, buffer:Dynamic, byteOffset:Int, size:Int):Void;\n\t@:cffi private static function lime_gl_check_framebuffer_status (target:Int):Int;\n\t@:cffi private static function lime_gl_clear (mask:Int):Void;\n\t@:cffi private static function lime_gl_clear_color (red:Float32, green:Float32, blue:Float32, alpha:Float32):Void;\n\t@:cffi private static function lime_gl_clear_depth (depth:Float32):Void;\n\t@:cffi private static function lime_gl_clear_stencil (s:Int):Void;\n\t@:cffi private static function lime_gl_color_mask (red:Bool, green:Bool, blue:Bool, alpha:Bool):Void;\n\t@:cffi private static function lime_gl_compile_shader (shader:Int):Void;\n\t@:cffi private static function lime_gl_compressed_tex_image_2d (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, buffer:Dynamic, byteOffset:Int):Void;\n\t@:cffi private static function lime_gl_compressed_tex_sub_image_2d (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, buffer:Dynamic, byteOffset:Int):Void;\n\t@:cffi private static function lime_gl_copy_tex_image_2d (target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void;\n\t@:cffi private static function lime_gl_copy_tex_sub_image_2d (target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void;\n\t@:cffi private static function lime_gl_create_buffer ():Int;\n\t@:cffi private static function lime_gl_create_framebuffer ():Int;\n\t@:cffi private static function lime_gl_create_program ():Int;\n\t@:cffi private static function lime_gl_create_render_buffer ():Int;\n\t@:cffi private static function lime_gl_create_shader (type:Int):Int;\n\t@:cffi private static function lime_gl_create_texture ():Int;\n\t@:cffi private static function lime_gl_cull_face (mode:Int):Void;\n\t@:cffi private static function lime_gl_delete_buffer (buffer:Int):Void;\n\t@:cffi private static function lime_gl_delete_framebuffer (framebuffer:Int):Void;\n\t@:cffi private static function lime_gl_delete_program (program:Int):Void;\n\t@:cffi private static function lime_gl_delete_render_buffer (renderbuffer:Int):Void;\n\t@:cffi private static function lime_gl_delete_shader (shader:Int):Void;\n\t@:cffi private static function lime_gl_delete_texture (texture:Int):Void;\n\t@:cffi private static function lime_gl_depth_func (func:Int):Void;\n\t@:cffi private static function lime_gl_depth_mask (flag:Bool):Void;\n\t@:cffi private static function lime_gl_depth_range (zNear:Float32, zFar:Float32):Void;\n\t@:cffi private static function lime_gl_detach_shader (program:Int, shader:Int):Void;\n\t@:cffi private static function lime_gl_disable (cap:Int):Void;\n\t@:cffi private static function lime_gl_disable_vertex_attrib_array (index:Int):Void;\n\t@:cffi private static function lime_gl_draw_arrays (mode:Int, first:Int, count:Int):Void;\n\t@:cffi private static function lime_gl_draw_elements (mode:Int, count:Int, type:Int, offset:Int):Void;\n\t@:cffi private static function lime_gl_enable (cap:Int):Void;\n\t@:cffi private static function lime_gl_enable_vertex_attrib_array (index:Int):Void;\n\t@:cffi private static function lime_gl_finish ():Void;\n\t@:cffi private static function lime_gl_flush ():Void;\n\t@:cffi private static function lime_gl_framebuffer_renderbuffer (target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:Int):Void;\n\t@:cffi private static function lime_gl_framebuffer_texture2D (target:Int, attachment:Int, textarget:Int, texture:Int, level:Int):Void;\n\t@:cffi private static function lime_gl_front_face (mode:Int):Void;\n\t@:cffi private static function lime_gl_generate_mipmap (target:Int):Void;\n\t@:cffi private static function lime_gl_get_active_attrib (program:Int, index:Int):Dynamic;\n\t@:cffi private static function lime_gl_get_active_uniform (program:Int, index:Int):Dynamic;\n\t@:cffi private static function lime_gl_get_attrib_location (program:Int, name:String):Int;\n\t@:cffi private static function lime_gl_get_buffer_parameter (target:Int, pname:Int):Int;\n\t@:cffi private static function lime_gl_get_context_attributes ():Dynamic;\n\t@:cffi private static function lime_gl_get_error ():Int;\n\t@:cffi private static function lime_gl_get_extension (name:String):Dynamic;\n\t@:cffi private static function lime_gl_get_framebuffer_attachment_parameter (target:Int, attachment:Int, pname:Int):Int;\n\t@:cffi private static function lime_gl_get_parameter (pname:Int):Dynamic;\n\t@:cffi private static function lime_gl_get_program_info_log (program:Int):String;\n\t@:cffi private static function lime_gl_get_program_parameter (program:Int, pname:Int):Int;\n\t@:cffi private static function lime_gl_get_render_buffer_parameter (target:Int, pname:Int):Int;\n\t@:cffi private static function lime_gl_get_shader_info_log (shader:Int):String;\n\t@:cffi private static function lime_gl_get_shader_parameter (shader:Int, pname:Int):Int;\n\t@:cffi private static function lime_gl_get_shader_precision_format (shadertype:Int, precisiontype:Int):Dynamic;\n\t@:cffi private static function lime_gl_get_shader_source (shader:Int):Dynamic;\n\t@:cffi private static function lime_gl_get_supported_extensions (result:Dynamic):Void;\n\t@:cffi private static function lime_gl_get_tex_parameter (target:Int, pname:Int):Int;\n\t@:cffi private static function lime_gl_get_uniform (program:Int, location:Int):Dynamic;\n\t@:cffi private static function lime_gl_get_uniform_location (program:Int, name:String):Int;\n\t@:cffi private static function lime_gl_get_vertex_attrib (index:Int, pname:Int):Int;\n\t@:cffi private static function lime_gl_get_vertex_attrib_offset (index:Int, pname:Int):Int;\n\t@:cffi private static function lime_gl_hint (target:Int, mode:Int):Void;\n\t@:cffi private static function lime_gl_is_buffer (buffer:Int):Bool;\n\t@:cffi private static function lime_gl_is_enabled (cap:Int):Bool;\n\t@:cffi private static function lime_gl_is_framebuffer (framebuffer:Int):Bool;\n\t@:cffi private static function lime_gl_is_program (program:Int):Bool;\n\t@:cffi private static function lime_gl_is_renderbuffer (renderbuffer:Int):Bool;\n\t@:cffi private static function lime_gl_is_shader (shader:Int):Bool;\n\t@:cffi private static function lime_gl_is_texture (texture:Int):Bool;\n\t@:cffi private static function lime_gl_line_width (width:Float32):Void;\n\t@:cffi private static function lime_gl_link_program (program:Int):Void;\n\t@:cffi private static function lime_gl_pixel_storei (pname:Int, param:Int):Void;\n\t@:cffi private static function lime_gl_polygon_offset (factor:Float32, units:Float32):Void;\n\t@:cffi private static function lime_gl_read_pixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, buffer:Dynamic, byteOffset:Int):Void;\n\t@:cffi private static function lime_gl_renderbuffer_storage (target:Int, internalformat:Int, width:Int, height:Int):Void;\n\t@:cffi private static function lime_gl_sample_coverage (value:Float32, invert:Bool):Void;\n\t@:cffi private static function lime_gl_scissor (x:Int, y:Int, width:Int, height:Int):Void;\n\t@:cffi private static function lime_gl_shader_source (shader:Int, source:String):Void;\n\t@:cffi private static function lime_gl_stencil_func (func:Int, ref:Int, mask:Int):Void;\n\t@:cffi private static function lime_gl_stencil_func_separate (face:Int, func:Int, ref:Int, mask:Int):Void;\n\t@:cffi private static function lime_gl_stencil_mask (mask:Int):Void;\n\t@:cffi private static function lime_gl_stencil_mask_separate (face:Int, mask:Int):Void;\n\t@:cffi private static function lime_gl_stencil_op (fail:Int, zfail:Int, zpass:Int):Void;\n\t@:cffi private static function lime_gl_stencil_op_separate (face:Int, fail:Int, zfail:Int, zpass:Int):Void;\n\t@:cffi private static function lime_gl_tex_image_2d (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, buffer:Dynamic, byteOffset:Int):Void;\n\t@:cffi private static function lime_gl_tex_parameterf (target:Int, pname:Int, param:Float32):Void;\n\t@:cffi private static function lime_gl_tex_parameteri (target:Int, pname:Int, param:Int):Void;\n\t@:cffi private static function lime_gl_tex_sub_image_2d (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, buffer:Dynamic, byteOffset:Int):Void;\n\t@:cffi private static function lime_gl_uniform1f (location:Int, x:Float32):Void;\n\t@:cffi private static function lime_gl_uniform1fv (location:Int, v:Dynamic):Void;\n\t@:cffi private static function lime_gl_uniform1i (location:Int, x:Int):Void;\n\t@:cffi private static function lime_gl_uniform1iv (location:Int, v:Dynamic):Void;\n\t@:cffi private static function lime_gl_uniform2f (location:Int, x:Float32, y:Float32):Void;\n\t@:cffi private static function lime_gl_uniform2fv (location:Int, v:Dynamic):Void;\n\t@:cffi private static function lime_gl_uniform2i (location:Int, x:Int, y:Int):Void;\n\t@:cffi private static function lime_gl_uniform2iv (location:Int, v:Dynamic):Void;\n\t@:cffi private static function lime_gl_uniform3f (location:Int, x:Float32, y:Float32, z:Float32):Void;\n\t@:cffi private static function lime_gl_uniform3fv (location:Int, v:Dynamic):Void;\n\t@:cffi private static function lime_gl_uniform3i (location:Int, x:Int, y:Int, z:Int):Void;\n\t@:cffi private static function lime_gl_uniform3iv (location:Int, v:Dynamic):Void;\n\t@:cffi private static function lime_gl_uniform4f (location:Int, x:Float32, y:Float32, z:Float32, w:Float32):Void;\n\t@:cffi private static function lime_gl_uniform4fv (location:Int, v:Dynamic):Void;\n\t@:cffi private static function lime_gl_uniform4i (location:Int, x:Int, y:Int, z:Int, w:Int):Void;\n\t@:cffi private static function lime_gl_uniform4iv (location:Int, v:Dynamic):Void;\n\t@:cffi private static function lime_gl_uniform_matrix (location:Int, transpose:Bool, buffer:Dynamic, count:Int):Void;\n\t@:cffi private static function lime_gl_use_program (program:Int):Void;\n\t@:cffi private static function lime_gl_validate_program (program:Int):Void;\n\t@:cffi private static function lime_gl_version ():String;\n\t@:cffi private static function lime_gl_vertex_attrib1f (indx:Int, x:Float32):Void;\n\t@:cffi private static function lime_gl_vertex_attrib1fv (indx:Int, values:Dynamic):Void;\n\t@:cffi private static function lime_gl_vertex_attrib2f (indx:Int, x:Float32, y:Float32):Void;\n\t@:cffi private static function lime_gl_vertex_attrib2fv (indx:Int, values:Dynamic):Void;\n\t@:cffi private static function lime_gl_vertex_attrib3f (indx:Int, x:Float32, y:Float32, z:Float32):Void;\n\t@:cffi private static function lime_gl_vertex_attrib3fv (indx:Int, values:Dynamic):Void;\n\t@:cffi private static function lime_gl_vertex_attrib4f (indx:Int, x:Float32, y:Float32, z:Float32, w:Float32):Void;\n\t@:cffi private static function lime_gl_vertex_attrib4fv (indx:Int, values:Dynamic):Void;\n\t@:cffi private static function lime_gl_vertex_attrib_pointer (indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:Int):Void;\n\t@:cffi private static function lime_gl_viewport (x:Int, y:Int, width:Int, height:Int):Void;\n\t#end\n\t\n\t\n}","package lime.graphics.utils;\n\n\nimport haxe.format.JsonParser;\nimport haxe.io.Bytes;\nimport lime.graphics.Image;\nimport lime.graphics.ImageBuffer;\nimport lime.graphics.PixelFormat;\nimport lime.math.ColorMatrix;\nimport lime.math.Rectangle;\nimport lime.math.Vector2;\nimport lime.utils.UInt8Array;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n@:access(lime.graphics.ImageBuffer)\n\n\nclass ImageCanvasUtil {\n\t\n\t\n\tpublic static function colorTransform (image:Image, rect:Rectangle, colorMatrix:ColorMatrix):Void {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.colorTransform (image, rect, colorMatrix);\n\t\t\n\t}\n\t\n\t\n\tpublic static function convertToCanvas (image:Image):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\t\n\t\tif (buffer.__srcImage != null) {\n\t\t\t\n\t\t\tif (buffer.__srcCanvas == null) {\n\t\t\t\t\n\t\t\t\tcreateCanvas (image, buffer.__srcImage.width, buffer.__srcImage.height);\n\t\t\t\tbuffer.__srcContext.drawImage (buffer.__srcImage, 0, 0);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tbuffer.__srcImage = null;\n\t\t\t\n\t\t} else if (buffer.data != null && buffer.__srcCanvas == null) {\n\t\t\t\n\t\t\tcreateCanvas (image, buffer.width, buffer.height);\n\t\t\tcreateImageData (image);\n\t\t\t\n\t\t} else if (buffer.data == null && buffer.__srcImageData != null) {\n\t\t\t\n\t\t\tbuffer.data = cast buffer.__srcImageData.data;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function convertToData (image:Image):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (image.buffer.data == null) {\n\t\t\t\n\t\t\tconvertToCanvas (image);\n\t\t\tsync (image, false);\n\t\t\tcreateImageData (image);\n\t\t\t\n\t\t\timage.buffer.__srcCanvas = null;\n\t\t\timage.buffer.__srcContext = null;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function copyChannel (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, sourceChannel:ImageChannel, destChannel:ImageChannel):Void {\n\t\t\n\t\tconvertToCanvas (sourceImage);\n\t\tcreateImageData (sourceImage);\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.copyChannel (image, sourceImage, sourceRect, destPoint, sourceChannel, destChannel);\n\t\t\n\t}\n\t\n\t\n\tpublic static function copyPixels (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, alphaImage:Image = null, alphaPoint:Vector2 = null, mergeAlpha:Bool = false):Void {\n\t\t\n\t\tif (destPoint == null || destPoint.x >= image.width || destPoint.y >= image.height || sourceRect == null || sourceRect.width < 1 || sourceRect.height < 1) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (alphaImage != null && alphaImage.transparent) {\n\t\t\t\n\t\t\tif (alphaPoint == null) alphaPoint = new Vector2 ();\n\t\t\t\n\t\t\t// TODO: use faster method\n\t\t\t\n\t\t\tvar tempData = image.clone ();\n\t\t\ttempData.copyChannel (alphaImage, new Rectangle (alphaPoint.x, alphaPoint.y, sourceRect.width, sourceRect.height), new Vector2 (sourceRect.x, sourceRect.y), ImageChannel.ALPHA, ImageChannel.ALPHA);\n\t\t\tsourceImage = tempData;\n\t\t\t\n\t\t}\n\t\t\n\t\tsync (image, true);\n\t\t\n\t\tif (!mergeAlpha) {\n\t\t\t\n\t\t\tif (image.transparent && sourceImage.transparent) {\n\t\t\t\t\n\t\t\t\timage.buffer.__srcContext.clearRect (destPoint.x + image.offsetX, destPoint.y + image.offsetY, sourceRect.width + image.offsetX, sourceRect.height + image.offsetY);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tsync (sourceImage, false);\n\t\t\n\t\tif (sourceImage.buffer.src != null) {\n\t\t\t\n\t\t\timage.buffer.__srcContext.drawImage (sourceImage.buffer.src, Std.int (sourceRect.x + sourceImage.offsetX), Std.int (sourceRect.y + sourceImage.offsetY), Std.int (sourceRect.width), Std.int (sourceRect.height), Std.int (destPoint.x + image.offsetX), Std.int (destPoint.y + image.offsetY), Std.int (sourceRect.width), Std.int (sourceRect.height));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function createCanvas (image:Image, width:Int, height:Int):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tvar buffer = image.buffer;\n\t\t\n\t\tif (buffer.__srcCanvas == null) {\n\t\t\t\n\t\t\tbuffer.__srcCanvas = cast Browser.document.createElement (\"canvas\");\n\t\t\tbuffer.__srcCanvas.width = width;\n\t\t\tbuffer.__srcCanvas.height = height;\n\t\t\t\n\t\t\tif (!image.transparent) {\n\t\t\t\t\n\t\t\t\tif (!image.transparent) buffer.__srcCanvas.setAttribute (\"moz-opaque\", \"true\");\n\t\t\t\tbuffer.__srcContext = untyped __js__ ('buffer.__srcCanvas.getContext (\"2d\", { alpha: false })');\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tbuffer.__srcContext = buffer.__srcCanvas.getContext (\"2d\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tuntyped (buffer.__srcContext).mozImageSmoothingEnabled = false;\n\t\t\t//untyped (buffer.__srcContext).webkitImageSmoothingEnabled = false;\n\t\t\tuntyped (buffer.__srcContext).msImageSmoothingEnabled = false;\n\t\t\tuntyped (buffer.__srcContext).imageSmoothingEnabled = false;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createImageData (image:Image):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tvar buffer = image.buffer;\n\t\t\n\t\tif (buffer.__srcImageData == null) {\n\t\t\t\n\t\t\tif (buffer.data == null) {\n\t\t\t\t\n\t\t\t\tbuffer.__srcImageData = buffer.__srcContext.getImageData (0, 0, buffer.width, buffer.height);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tbuffer.__srcImageData = buffer.__srcContext.createImageData (buffer.width, buffer.height);\n\t\t\t\tbuffer.__srcImageData.data.set (cast buffer.data);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tbuffer.data = new UInt8Array (cast buffer.__srcImageData.data.buffer);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fillRect (image:Image, rect:Rectangle, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tsync (image, true);\n\t\t\n\t\tif (rect.x == 0 && rect.y == 0 && rect.width == image.width && rect.height == image.height) {\n\t\t\t\n\t\t\tif (image.transparent && ((color & 0xFF) == 0)) {\n\t\t\t\t\n\t\t\t\timage.buffer.__srcCanvas.width = image.buffer.width;\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar r, g, b, a;\n\t\t\n\t\tif (format == ARGB32) {\n\t\t\t\n\t\t\tr = (color >> 16) & 0xFF;\n\t\t\tg = (color >> 8) & 0xFF;\n\t\t\tb = color & 0xFF;\n\t\t\ta = (image.transparent) ? (color >> 24) & 0xFF : 0xFF;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tr = (color >> 24) & 0xFF;\n\t\t\tg = (color >> 16) & 0xFF;\n\t\t\tb = (color >> 8) & 0xFF;\n\t\t\ta = (image.transparent) ? color & 0xFF : 0xFF;\n\t\t\t\n\t\t}\n\t\t\n\t\timage.buffer.__srcContext.fillStyle = 'rgba(' + r + ', ' + g + ', ' + b + ', ' + (a / 255) + ')';\n\t\timage.buffer.__srcContext.fillRect (rect.x + image.offsetX, rect.y + image.offsetY, rect.width + image.offsetX, rect.height + image.offsetY);\n\t\t\n\t}\n\t\n\t\n\tpublic static function floodFill (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.floodFill (image, x, y, color, format);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixel (image:Image, x:Int, y:Int, format:PixelFormat):Int {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\treturn ImageDataUtil.getPixel (image, x, y, format);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixel32 (image:Image, x:Int, y:Int, format:PixelFormat):Int {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\treturn ImageDataUtil.getPixel32 (image, x, y, format);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixels (image:Image, rect:Rectangle, format:PixelFormat):Bytes {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\treturn ImageDataUtil.getPixels (image, rect, format);\n\t\t\n\t}\n\t\n\t\n\tpublic static function merge (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, redMultiplier:Int, greenMultiplier:Int, blueMultiplier:Int, alphaMultiplier:Int):Void {\n\t\t\n\t\tconvertToCanvas (sourceImage);\n\t\tcreateImageData (sourceImage);\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.merge (image, sourceImage, sourceRect, destPoint, redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\n\t}\n\t\n\t\n\tpublic static function resize (image:Image, newWidth:Int, newHeight:Int):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\t\n\t\tif (buffer.__srcCanvas == null) {\n\t\t\t\n\t\t\tcreateCanvas (image, newWidth, newHeight);\n\t\t\tbuffer.__srcContext.drawImage (buffer.src, 0, 0, newWidth, newHeight);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tsync (image, true);\n\t\t\tvar sourceCanvas = buffer.__srcCanvas;\n\t\t\tbuffer.__srcCanvas = null;\n\t\t\tcreateCanvas (image, newWidth, newHeight);\n\t\t\tbuffer.__srcContext.drawImage (sourceCanvas, 0, 0, newWidth, newHeight);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function scroll (image:Image, x:Int, y:Int):Void {\n\t\t\n\t\tif ((x % image.width == 0) && (y % image.height == 0)) return;\n\t\t\n\t\tconvertToCanvas (image);\n\t\tsync (image, true);\n\t\t\n\t\timage.buffer.__srcContext.clearRect (x, y, image.width, image.height);\n\t\timage.buffer.__srcContext.drawImage (image.buffer.__srcCanvas, x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixel (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.setPixel (image, x, y, color, format);\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixel32 (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.setPixel32 (image, x, y, color, format);\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixels (image:Image, rect:Rectangle, bytes:Bytes, format:PixelFormat):Void {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.setPixels (image, rect, bytes, format);\n\t\t\n\t}\n\t\n\t\n\tpublic static function sync (image:Image, clear:Bool):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (image.dirty && image.buffer.__srcImageData != null && image.type != DATA) {\n\t\t\t\n\t\t\timage.buffer.__srcContext.putImageData (image.buffer.__srcImageData, 0, 0);\n\t\t\timage.buffer.data = null;\n\t\t\timage.dirty = false;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (clear) {\n\t\t\t\n\t\t\timage.buffer.__srcImageData = null;\n\t\t\timage.buffer.data = null;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}\n","package lime.graphics.utils;\n\n\nimport haxe.ds.Vector;\nimport haxe.Int32;\nimport haxe.io.Bytes;\nimport lime.graphics.Image;\nimport lime.graphics.ImageBuffer;\nimport lime.graphics.PixelFormat;\nimport lime.math.color.ARGB;\nimport lime.math.color.BGRA;\nimport lime.math.color.RGBA;\nimport lime.math.ColorMatrix;\nimport lime.math.Rectangle;\nimport lime.math.Vector2;\nimport lime.system.CFFI;\nimport lime.utils.UInt8Array;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n@:access(lime.math.color.RGBA)\n\n\nclass ImageDataUtil {\n\t\n\t\n\tpublic static function colorTransform (image:Image, rect:Rectangle, colorMatrix:ColorMatrix):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tif (data == null) return;\n\t\t\n\t\t#if ((cpp || neko) && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) lime_image_data_util_color_transform (image, rect, colorMatrix); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar format = image.buffer.format;\n\t\t\tvar premultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar dataView = new ImageDataView (image, rect);\n\t\t\t\n\t\t\tvar alphaTable = colorMatrix.getAlphaTable ();\n\t\t\tvar redTable = colorMatrix.getRedTable ();\n\t\t\tvar greenTable = colorMatrix.getGreenTable ();\n\t\t\tvar blueTable = colorMatrix.getBlueTable ();\n\t\t\t\n\t\t\tvar row, offset, pixel:RGBA;\n\t\t\t\n\t\t\tfor (y in 0...dataView.height) {\n\t\t\t\t\n\t\t\t\trow = dataView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...dataView.width) {\n\t\t\t\t\t\n\t\t\t\t\toffset = row + (x * 4);\n\t\t\t\t\t\n\t\t\t\t\tpixel.readUInt8 (data, offset, format, premultiplied);\n\t\t\t\t\tpixel.set (redTable[pixel.r], greenTable[pixel.g], blueTable[pixel.b], alphaTable[pixel.a]);\n\t\t\t\t\tpixel.writeUInt8 (data, offset, format, premultiplied);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function copyChannel (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, sourceChannel:ImageChannel, destChannel:ImageChannel):Void {\n\t\t\n\t\tvar destIdx = switch (destChannel) {\n\t\t\t\n\t\t\tcase RED: 0;\n\t\t\tcase GREEN: 1;\n\t\t\tcase BLUE: 2;\n\t\t\tcase ALPHA: 3;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar srcIdx = switch (sourceChannel) {\n\t\t\t\n\t\t\tcase RED: 0;\n\t\t\tcase GREEN: 1;\n\t\t\tcase BLUE: 2;\n\t\t\tcase ALPHA: 3;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar srcData = sourceImage.buffer.data;\n\t\tvar destData = image.buffer.data;\n\t\t\n\t\tif (srcData == null || destData == null) return;\n\t\t\n\t\t#if ((cpp || neko) && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) lime_image_data_util_copy_channel (image, sourceImage, sourceRect, destPoint, srcIdx, destIdx); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar srcView = new ImageDataView (sourceImage, sourceRect);\n\t\t\tvar destView = new ImageDataView (image, new Rectangle (destPoint.x, destPoint.y, srcView.width, srcView.height));\n\t\t\t\n\t\t\tvar srcFormat = sourceImage.buffer.format;\n\t\t\tvar destFormat = image.buffer.format;\n\t\t\tvar srcPremultiplied = sourceImage.buffer.premultiplied;\n\t\t\tvar destPremultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar srcPosition, destPosition, srcPixel:RGBA, destPixel:RGBA, value = 0;\n\t\t\t\n\t\t\tfor (y in 0...destView.height) {\n\t\t\t\t\n\t\t\t\tsrcPosition = srcView.row (y);\n\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...destView.width) {\n\t\t\t\t\t\n\t\t\t\t\tsrcPixel.readUInt8 (srcData, srcPosition, srcFormat, srcPremultiplied);\n\t\t\t\t\tdestPixel.readUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\n\t\t\t\t\tswitch (srcIdx) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase 0: value = srcPixel.r;\n\t\t\t\t\t\tcase 1: value = srcPixel.g;\n\t\t\t\t\t\tcase 2: value = srcPixel.b;\n\t\t\t\t\t\tcase 3: value = srcPixel.a;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tswitch (destIdx) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase 0: destPixel.r = value;\n\t\t\t\t\t\tcase 1: destPixel.g = value;\n\t\t\t\t\t\tcase 2: destPixel.b = value;\n\t\t\t\t\t\tcase 3: destPixel.a = value;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdestPixel.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\n\t\t\t\t\tsrcPosition += 4;\n\t\t\t\t\tdestPosition += 4;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function copyPixels (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, alphaImage:Image = null, alphaPoint:Vector2 = null, mergeAlpha:Bool = false):Void {\n\t\t\n\t\t#if ((cpp || neko) && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) lime_image_data_util_copy_pixels (image, sourceImage, sourceRect, destPoint, alphaImage, alphaPoint, mergeAlpha); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar sourceData = sourceImage.buffer.data;\n\t\t\tvar destData = image.buffer.data;\n\t\t\t\n\t\t\tif (sourceData == null || destData == null) return;\n\t\t\t\n\t\t\tvar sourceView = new ImageDataView (sourceImage, sourceRect);\n\t\t\tvar destView = new ImageDataView (image, new Rectangle (destPoint.x, destPoint.y, sourceView.width, sourceView.height));\n\t\t\t\n\t\t\tvar sourceFormat = sourceImage.buffer.format;\n\t\t\tvar destFormat = image.buffer.format;\n\t\t\tvar sourcePremultiplied = sourceImage.buffer.premultiplied;\n\t\t\tvar destPremultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar sourcePosition, destPosition, sourcePixel:RGBA;\n\t\t\t\n\t\t\tif (!mergeAlpha || !sourceImage.transparent) {\n\t\t\t\t\n\t\t\t\tfor (y in 0...destView.height) {\n\t\t\t\t\t\n\t\t\t\t\tsourcePosition = sourceView.row (y);\n\t\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\t\n\t\t\t\t\tfor (x in 0...destView.width) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsourcePixel.readUInt8 (sourceData, sourcePosition, sourceFormat, sourcePremultiplied);\n\t\t\t\t\t\tsourcePixel.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\t\n\t\t\t\t\t\tsourcePosition += 4;\n\t\t\t\t\t\tdestPosition += 4;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar sourceAlpha, destAlpha, oneMinusSourceAlpha, blendAlpha;\n\t\t\t\tvar destPixel:RGBA;\n\t\t\t\t\n\t\t\t\tif (alphaImage == null) {\n\t\t\t\t\t\n\t\t\t\t\tfor (y in 0...destView.height) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsourcePosition = sourceView.row (y);\n\t\t\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (x in 0...destView.width) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsourcePixel.readUInt8 (sourceData, sourcePosition, sourceFormat, sourcePremultiplied);\n\t\t\t\t\t\t\tdestPixel.readUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsourceAlpha = sourcePixel.a / 255.0;\n\t\t\t\t\t\t\tdestAlpha = destPixel.a / 255.0;\n\t\t\t\t\t\t\toneMinusSourceAlpha = 1 - sourceAlpha;\n\t\t\t\t\t\t\tblendAlpha = sourceAlpha + (destAlpha * oneMinusSourceAlpha);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (blendAlpha == 0) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tdestPixel = 0;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tdestPixel.r = RGBA.__clamp[Math.round ((sourcePixel.r * sourceAlpha + destPixel.r * destAlpha * oneMinusSourceAlpha) / blendAlpha)];\n\t\t\t\t\t\t\t\tdestPixel.g = RGBA.__clamp[Math.round ((sourcePixel.g * sourceAlpha + destPixel.g * destAlpha * oneMinusSourceAlpha) / blendAlpha)];\n\t\t\t\t\t\t\t\tdestPixel.b = RGBA.__clamp[Math.round ((sourcePixel.b * sourceAlpha + destPixel.b * destAlpha * oneMinusSourceAlpha) / blendAlpha)];\n\t\t\t\t\t\t\t\tdestPixel.a = RGBA.__clamp[Math.round (blendAlpha * 255.0)];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdestPixel.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsourcePosition += 4;\n\t\t\t\t\t\t\tdestPosition += 4;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (alphaPoint == null) alphaPoint = new Vector2 ();\n\t\t\t\t\t\n\t\t\t\t\tvar alphaData = alphaImage.buffer.data;\n\t\t\t\t\tvar alphaFormat = alphaImage.buffer.format;\n\t\t\t\t\tvar alphaPremultiplied = alphaImage.buffer.premultiplied;\n\t\t\t\t\t\n\t\t\t\t\tvar alphaView = new ImageDataView (alphaImage, new Rectangle (alphaPoint.x, alphaPoint.y, destView.width, destView.height));\n\t\t\t\t\tvar alphaPosition, alphaPixel:RGBA;\n\t\t\t\t\t\n\t\t\t\t\tfor (y in 0...alphaView.height) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsourcePosition = sourceView.row (y);\n\t\t\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\t\talphaPosition = alphaView.row (y);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (x in 0...alphaView.width) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsourcePixel.readUInt8 (sourceData, sourcePosition, sourceFormat, sourcePremultiplied);\n\t\t\t\t\t\t\tdestPixel.readUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\t\talphaPixel.readUInt8 (alphaData, alphaPosition, alphaFormat, alphaPremultiplied);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsourceAlpha = alphaPixel.a / 0xFF;\n\t\t\t\t\t\t\tdestAlpha = destPixel.a / 0xFF;\n\t\t\t\t\t\t\toneMinusSourceAlpha = 1 - sourceAlpha;\n\t\t\t\t\t\t\tblendAlpha = sourceAlpha + (destAlpha * oneMinusSourceAlpha);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (blendAlpha == 0) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tdestPixel = 0;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tdestPixel.r = RGBA.__clamp[Math.round ((sourcePixel.r * sourceAlpha + destPixel.r * destAlpha * oneMinusSourceAlpha) / blendAlpha)];\n\t\t\t\t\t\t\t\tdestPixel.g = RGBA.__clamp[Math.round ((sourcePixel.g * sourceAlpha + destPixel.g * destAlpha * oneMinusSourceAlpha) / blendAlpha)];\n\t\t\t\t\t\t\t\tdestPixel.b = RGBA.__clamp[Math.round ((sourcePixel.b * sourceAlpha + destPixel.b * destAlpha * oneMinusSourceAlpha) / blendAlpha)];\n\t\t\t\t\t\t\t\tdestPixel.a = RGBA.__clamp[Math.round (blendAlpha * 255.0)];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdestPixel.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsourcePosition += 4;\n\t\t\t\t\t\t\tdestPosition += 4;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fillRect (image:Image, rect:Rectangle, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tvar fillColor:RGBA;\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32: fillColor = (color:ARGB);\n\t\t\tcase BGRA32: fillColor = (color:BGRA);\n\t\t\tdefault: fillColor = color;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!image.transparent) {\n\t\t\t\n\t\t\tfillColor.a = 0xFF;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tif (data == null) return;\n\t\t\n\t\t#if ((cpp || neko) && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) lime_image_data_util_fill_rect (image, rect, (fillColor >> 16) & 0xFFFF, (fillColor) & 0xFFFF); else // TODO: Better Int32 solution\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar format = image.buffer.format;\n\t\t\tvar premultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar dataView = new ImageDataView (image, rect);\n\t\t\tvar row;\n\t\t\t\n\t\t\tfor (y in 0...dataView.height) {\n\t\t\t\t\n\t\t\t\trow = dataView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...dataView.width) {\n\t\t\t\t\t\n\t\t\t\t\tfillColor.writeUInt8 (data, row + (x * 4), format, premultiplied);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function floodFill (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tif (data == null) return;\n\t\t\n\t\tif (format == ARGB32) color = ((color & 0xFFFFFF) << 8) | ((color >> 24) & 0xFF);\n\t\t\n\t\t#if ((cpp || neko) && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) lime_image_data_util_flood_fill (image, x, y, (color >> 16) & 0xFFFF, (color) & 0xFFFF); else // TODO: Better Int32 solution\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar format = image.buffer.format;\n\t\t\tvar premultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar fillColor:RGBA = color;\n\t\t\t\n\t\t\tvar hitColor:RGBA;\n\t\t\thitColor.readUInt8 (data, ((y + image.offsetY) * (image.buffer.width * 4)) + ((x + image.offsetX) * 4), format, premultiplied);\n\t\t\t\n\t\t\tif (!image.transparent) {\n\t\t\t\t\n\t\t\t\tfillColor.a = 0xFF;\n\t\t\t\thitColor.a = 0xFF;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (fillColor == hitColor) return;\n\t\t\t\n\t\t\tvar dx = [ 0, -1, 1, 0 ];\n\t\t\tvar dy = [ -1, 0, 0, 1 ];\n\t\t\t\n\t\t\tvar minX = -image.offsetX;\n\t\t\tvar minY = -image.offsetY;\n\t\t\tvar maxX = minX + image.width;\n\t\t\tvar maxY = minY + image.height;\n\t\t\t\n\t\t\tvar queue = new Array<Int> ();\n\t\t\tqueue.push (x);\n\t\t\tqueue.push (y);\n\t\t\t\n\t\t\tvar curPointX, curPointY, nextPointX, nextPointY, nextPointOffset, readColor:RGBA;\n\t\t\t\n\t\t\twhile (queue.length > 0) {\n\t\t\t\t\n\t\t\t\tcurPointY = queue.pop ();\n\t\t\t\tcurPointX = queue.pop ();\n\t\t\t\t\n\t\t\t\tfor (i in 0...4) {\n\t\t\t\t\t\n\t\t\t\t\tnextPointX = curPointX + dx[i];\n\t\t\t\t\tnextPointY = curPointY + dy[i];\n\t\t\t\t\t\n\t\t\t\t\tif (nextPointX < minX || nextPointY < minY || nextPointX >= maxX || nextPointY >= maxY) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnextPointOffset = (nextPointY * image.width + nextPointX) * 4;\n\t\t\t\t\treadColor.readUInt8 (data, nextPointOffset, format, premultiplied);\n\t\t\t\t\t\n\t\t\t\t\tif (readColor == hitColor) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfillColor.writeUInt8 (data, nextPointOffset, format, premultiplied);\n\t\t\t\t\t\t\n\t\t\t\t\t\tqueue.push (nextPointX);\n\t\t\t\t\t\tqueue.push (nextPointY);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getColorBoundsRect (image:Image, mask:Int, color:Int, findColor:Bool = true, format:PixelFormat):Rectangle {\n\t\t\n\t\tvar left = image.width + 1;\n\t\tvar right = 0;\n\t\tvar top = image.height + 1;\n\t\tvar bottom = 0;\n\t\t\n\t\tvar _color:RGBA, _mask:RGBA;\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\t_color = (color:ARGB);\n\t\t\t\t_mask = (mask:ARGB);\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\t_color = (color:BGRA);\n\t\t\t\t_mask = (mask:BGRA);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\t_color = color;\n\t\t\t\t_mask = mask;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!image.transparent) {\n\t\t\t\n\t\t\t_color.a = 0xFF;\n\t\t\t_mask.a = 0xFF;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar pixel, hit;\n\t\t\n\t\tfor (x in 0...image.width) {\n\t\t\t\n\t\t\thit = false;\n\t\t\t\n\t\t\tfor (y in 0...image.height) {\n\t\t\t\t\n\t\t\t\tpixel = image.getPixel32 (x, y, RGBA32);\n\t\t\t\thit = findColor ? (pixel & _mask) == _color : (pixel & _mask) != _color;\n\t\t\t\t\n\t\t\t\tif (hit) {\n\t\t\t\t\t\n\t\t\t\t\tif (x < left) left = x;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hit) {\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar ix;\n\t\t\n\t\tfor (x in 0...image.width) {\n\t\t\t\n\t\t\tix = (image.width - 1) - x;\n\t\t\thit = false;\n\t\t\t\n\t\t\tfor (y in 0...image.height) {\n\t\t\t\t\n\t\t\t\tpixel = image.getPixel32 (ix, y, RGBA32);\n\t\t\t\thit = findColor ? (pixel & _mask) == _color : (pixel & _mask) != _color;\n\t\t\t\t\n\t\t\t\tif (hit) {\n\t\t\t\t\t\n\t\t\t\t\tif (ix > right) right = ix;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hit) {\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (y in 0...image.height) {\n\t\t\t\n\t\t\thit = false;\n\t\t\t\n\t\t\tfor (x in 0...image.width) {\n\t\t\t\t\n\t\t\t\tpixel = image.getPixel32 (x, y, RGBA32);\n\t\t\t\thit = findColor ? (pixel & _mask) == _color : (pixel & _mask) != _color;\n\t\t\t\t\n\t\t\t\tif (hit) {\n\t\t\t\t\t\n\t\t\t\t\tif (y < top) top = y;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hit) {\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar iy;\n\t\t\n\t\tfor (y in 0...image.height) {\n\t\t\t\n\t\t\tiy = (image.height - 1) - y;\n\t\t\thit = false;\n\t\t\t\n\t\t\tfor (x in 0...image.width) {\n\t\t\t\t\n\t\t\t\tpixel = image.getPixel32 (x, iy, RGBA32);\n\t\t\t\thit = findColor ? (pixel & _mask) == _color : (pixel & _mask) != _color;\n\t\t\t\t\n\t\t\t\tif (hit) {\n\t\t\t\t\t\n\t\t\t\t\tif (iy > bottom) bottom = iy;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hit) {\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar w = right - left;\n\t\tvar h = bottom - top;\n\t\t\n\t\tif (w > 0) w++;\n\t\tif (h > 0) h++;\n\t\t\n\t\tif (w < 0) w = 0;\n\t\tif (h < 0) h = 0;\n\t\t\n\t\tif (left == right) w = 1;\n\t\tif (top == bottom) h = 1;\n\t\t\n\t\tif (left > image.width) left = 0;\n\t\tif (top > image.height) top = 0;\n\t\t\n\t\treturn new Rectangle (left, top, w, h);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixel (image:Image, x:Int, y:Int, format:PixelFormat):Int {\n\t\t\n\t\tvar pixel:RGBA;\n\t\t\n\t\tpixel.readUInt8 (image.buffer.data, (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4), image.buffer.format, image.buffer.premultiplied);\n\t\tpixel.a = 0;\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32: return (pixel:ARGB);\n\t\t\tcase BGRA32: return (pixel:BGRA);\n\t\t\tdefault: return pixel;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixel32 (image:Image, x:Int, y:Int, format:PixelFormat):Int {\n\t\t\n\t\tvar pixel:RGBA;\n\t\t\n\t\tpixel.readUInt8 (image.buffer.data, (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4), image.buffer.format, image.buffer.premultiplied);\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32: return (pixel:ARGB);\n\t\t\tcase BGRA32: return (pixel:BGRA);\n\t\t\tdefault: return pixel;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixels (image:Image, rect:Rectangle, format:PixelFormat):Bytes {\n\t\t\n\t\tif (image.buffer.data == null) return null;\n\t\t\n\t\tvar length = Std.int (rect.width * rect.height);\n\t\tvar bytes = Bytes.alloc (length * 4);\n\t\t\n\t\t#if ((cpp || neko) && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) lime_image_data_util_get_pixels (image, rect, format, bytes); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar data = image.buffer.data;\n\t\t\tvar sourceFormat = image.buffer.format;\n\t\t\tvar premultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar dataView = new ImageDataView (image, rect);\n\t\t\tvar position, argb:ARGB, bgra:BGRA, pixel:RGBA;\n\t\t\tvar destPosition = 0;\n\t\t\t\n\t\t\tfor (y in 0...dataView.height) {\n\t\t\t\t\n\t\t\t\tposition = dataView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...dataView.width) {\n\t\t\t\t\t\n\t\t\t\t\tpixel.readUInt8 (data, position, sourceFormat, premultiplied);\n\t\t\t\t\t\n\t\t\t\t\tswitch (format) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase ARGB32: argb = pixel; pixel = cast argb;\n\t\t\t\t\t\tcase BGRA32: bgra = pixel; pixel = cast bgra;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbytes.set (destPosition++, pixel.r);\n\t\t\t\t\tbytes.set (destPosition++, pixel.g);\n\t\t\t\t\tbytes.set (destPosition++, pixel.b);\n\t\t\t\t\tbytes.set (destPosition++, pixel.a);\n\t\t\t\t\t\n\t\t\t\t\tposition += 4;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn bytes;\n\t\t\n\t}\n\t\n\t\n\tpublic static function merge (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, redMultiplier:Int, greenMultiplier:Int, blueMultiplier:Int, alphaMultiplier:Int):Void {\n\t\t\n\t\tif (image.buffer.data == null || sourceImage.buffer.data == null) return;\n\t\t\n\t\t#if ((cpp || neko) && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) lime_image_data_util_merge (image, sourceImage, sourceRect, destPoint, redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar sourceView = new ImageDataView (sourceImage, sourceRect);\n\t\t\tvar destView = new ImageDataView (image, new Rectangle (destPoint.x, destPoint.y, sourceView.width, sourceView.height));\n\t\t\t\n\t\t\tvar sourceData = sourceImage.buffer.data;\n\t\t\tvar destData = image.buffer.data;\n\t\t\tvar sourceFormat = sourceImage.buffer.format;\n\t\t\tvar destFormat = image.buffer.format;\n\t\t\tvar sourcePremultiplied = sourceImage.buffer.premultiplied;\n\t\t\tvar destPremultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar sourcePosition, destPosition, sourcePixel:RGBA, destPixel:RGBA;\n\t\t\t\n\t\t\tfor (y in 0...destView.height) {\n\t\t\t\t\n\t\t\t\tsourcePosition = sourceView.row (y);\n\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...destView.width) {\n\t\t\t\t\t\n\t\t\t\t\tsourcePixel.readUInt8 (sourceData, sourcePosition, sourceFormat, sourcePremultiplied);\n\t\t\t\t\tdestPixel.readUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\n\t\t\t\t\tdestPixel.r = Std.int (((sourcePixel.r * redMultiplier) + (destPixel.r * (256 - redMultiplier))) / 256);\n\t\t\t\t\tdestPixel.g = Std.int (((sourcePixel.g * greenMultiplier) + (destPixel.g * (256 - greenMultiplier))) / 256);\n\t\t\t\t\tdestPixel.b = Std.int (((sourcePixel.b * blueMultiplier) + (destPixel.b * (256 - blueMultiplier))) / 256);\n\t\t\t\t\tdestPixel.a = Std.int (((sourcePixel.a * alphaMultiplier) + (destPixel.a * (256 - alphaMultiplier))) / 256);\n\t\t\t\t\t\n\t\t\t\t\tdestPixel.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\n\t\t\t\t\tsourcePosition += 4;\n\t\t\t\t\tdestPosition += 4;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function multiplyAlpha (image:Image):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tif (data == null || !image.buffer.transparent) return;\n\t\t\n\t\t#if ((cpp || neko) && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) lime_image_data_util_multiply_alpha (image); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar format = image.buffer.format;\n\t\t\tvar length = Std.int (data.length / 4);\n\t\t\tvar pixel:RGBA;\n\t\t\t\n\t\t\tfor (i in 0...length) {\n\t\t\t\t\n\t\t\t\tpixel.readUInt8 (data, i * 4, format, false);\n\t\t\t\tpixel.writeUInt8 (data, i * 4, format, true);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.buffer.premultiplied = true;\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function resize (image:Image, newWidth:Int, newHeight:Int):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\tif (buffer.width == newWidth && buffer.height == newHeight) return;\n\t\tvar newBuffer = new ImageBuffer (new UInt8Array (newWidth * newHeight * 4), newWidth, newHeight);\n\t\t\n\t\t#if ((cpp || neko) && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) lime_image_data_util_resize (image, newBuffer, newWidth, newHeight); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar imageWidth = image.width;\n\t\t\tvar imageHeight = image.height;\n\t\t\t\n\t\t\tvar data = image.data;\n\t\t\tvar newData = newBuffer.data;\n\t\t\tvar sourceIndex:Int, sourceIndexX:Int, sourceIndexY:Int, sourceIndexXY:Int, index:Int;\n\t\t\tvar sourceX:Int, sourceY:Int;\n\t\t\tvar u:Float, v:Float, uRatio:Float, vRatio:Float, uOpposite:Float, vOpposite:Float;\n\t\t\t\n\t\t\tfor (y in 0...newHeight) {\n\t\t\t\t\n\t\t\t\tfor (x in 0...newWidth) {\n\t\t\t\t\t\n\t\t\t\t\t// TODO: Handle more color formats\n\t\t\t\t\t\n\t\t\t\t\tu = ((x + 0.5) / newWidth) * imageWidth - 0.5;\n\t\t\t\t\tv = ((y + 0.5) / newHeight) * imageHeight - 0.5;\n\t\t\t\t\t\n\t\t\t\t\tsourceX = Std.int (u);\n\t\t\t\t\tsourceY = Std.int (v);\n\t\t\t\t\t\n\t\t\t\t\tsourceIndex = (sourceY * imageWidth + sourceX) * 4;\n\t\t\t\t\tsourceIndexX = (sourceX < imageWidth - 1) ? sourceIndex + 4 : sourceIndex;\n\t\t\t\t\tsourceIndexY = (sourceY < imageHeight - 1) ? sourceIndex + (imageWidth * 4) : sourceIndex;\n\t\t\t\t\tsourceIndexXY = (sourceIndexX != sourceIndex) ? sourceIndexY + 4 : sourceIndexY;\n\t\t\t\t\t\n\t\t\t\t\tindex = (y * newWidth + x) * 4;\n\t\t\t\t\t\n\t\t\t\t\tuRatio = u - sourceX;\n\t\t\t\t\tvRatio = v - sourceY;\n\t\t\t\t\tuOpposite = 1 - uRatio;\n\t\t\t\t\tvOpposite = 1 - vRatio;\n\t\t\t\t\t\n\t\t\t\t\tnewData[index] = Std.int ((data[sourceIndex] * uOpposite + data[sourceIndexX] * uRatio) * vOpposite + (data[sourceIndexY] * uOpposite + data[sourceIndexXY] * uRatio) * vRatio);\n\t\t\t\t\tnewData[index + 1] = Std.int ((data[sourceIndex + 1] * uOpposite + data[sourceIndexX + 1] * uRatio) * vOpposite + (data[sourceIndexY + 1] * uOpposite + data[sourceIndexXY + 1] * uRatio) * vRatio);\n\t\t\t\t\tnewData[index + 2] = Std.int ((data[sourceIndex + 2] * uOpposite + data[sourceIndexX + 2] * uRatio) * vOpposite + (data[sourceIndexY + 2] * uOpposite + data[sourceIndexXY + 2] * uRatio) * vRatio);\n\t\t\t\t\t\n\t\t\t\t\t// Maybe it would be better to not weigh colors with an alpha of zero, but the below should help prevent black fringes caused by transparent pixels made visible\n\t\t\t\t\t\n\t\t\t\t\tif (data[sourceIndexX + 3] == 0 || data[sourceIndexY + 3] == 0 || data[sourceIndexXY + 3] == 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tnewData[index + 3] = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tnewData[index + 3] = data[sourceIndex + 3];\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tbuffer.data = newBuffer.data;\n\t\tbuffer.width = newWidth;\n\t\tbuffer.height = newHeight;\n\t\t\n\t}\n\t\n\t\n\tpublic static function resizeBuffer (image:Image, newWidth:Int, newHeight:Int):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\tvar data = image.data;\n\t\tvar newData = new UInt8Array (newWidth * newHeight * 4);\n\t\tvar sourceIndex:Int, index:Int;\n\t\t\n\t\tfor (y in 0...buffer.height) {\n\t\t\t\n\t\t\tfor (x in 0...buffer.width) {\n\t\t\t\t\n\t\t\t\tsourceIndex = (y * buffer.width + x) * 4;\n\t\t\t\tindex = (y * newWidth + x) * 4;\n\t\t\t\t\n\t\t\t\tnewData[index] = data[sourceIndex];\n\t\t\t\tnewData[index + 1] = data[sourceIndex + 1];\n\t\t\t\tnewData[index + 2] = data[sourceIndex + 2];\n\t\t\t\tnewData[index + 3] = data[sourceIndex + 3];\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tbuffer.data = newData;\n\t\tbuffer.width = newWidth;\n\t\tbuffer.height = newHeight;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setFormat (image:Image, format:PixelFormat):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tif (data == null) return;\n\t\t\n\t\t#if ((cpp || neko) && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) lime_image_data_util_set_format (image, format); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar index, a16;\n\t\t\tvar length = Std.int (data.length / 4);\n\t\t\tvar r1, g1, b1, a1, r2, g2, b2, a2;\n\t\t\tvar r, g, b, a;\n\t\t\t\n\t\t\tswitch (image.format) {\n\t\t\t\t\n\t\t\t\tcase RGBA32:\n\t\t\t\t\t\n\t\t\t\t\tr1 = 0;\n\t\t\t\t\tg1 = 1;\n\t\t\t\t\tb1 = 2;\n\t\t\t\t\ta1 = 3;\n\t\t\t\t\n\t\t\t\tcase ARGB32:\n\t\t\t\t\t\n\t\t\t\t\tr1 = 1;\n\t\t\t\t\tg1 = 2;\n\t\t\t\t\tb1 = 3;\n\t\t\t\t\ta1 = 0;\n\t\t\t\t\n\t\t\t\tcase BGRA32:\n\t\t\t\t\t\n\t\t\t\t\tr1 = 2;\n\t\t\t\t\tg1 = 1;\n\t\t\t\t\tb1 = 0;\n\t\t\t\t\ta1 = 3;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tswitch (format) {\n\t\t\t\t\n\t\t\t\tcase RGBA32:\n\t\t\t\t\t\n\t\t\t\t\tr2 = 0;\n\t\t\t\t\tg2 = 1;\n\t\t\t\t\tb2 = 2;\n\t\t\t\t\ta2 = 3;\n\t\t\t\t\n\t\t\t\tcase ARGB32:\n\t\t\t\t\t\n\t\t\t\t\tr2 = 1;\n\t\t\t\t\tg2 = 2;\n\t\t\t\t\tb2 = 3;\n\t\t\t\t\ta2 = 0;\n\t\t\t\t\n\t\t\t\tcase BGRA32:\n\t\t\t\t\t\n\t\t\t\t\tr2 = 2;\n\t\t\t\t\tg2 = 1;\n\t\t\t\t\tb2 = 0;\n\t\t\t\t\ta2 = 3;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor (i in 0...length) {\n\t\t\t\t\n\t\t\t\tindex = i * 4;\n\t\t\t\t\n\t\t\t\tr = data[index + r1];\n\t\t\t\tg = data[index + g1];\n\t\t\t\tb = data[index + b1];\n\t\t\t\ta = data[index + a1];\n\t\t\t\t\n\t\t\t\tdata[index + r2] = r;\n\t\t\t\tdata[index + g2] = g;\n\t\t\t\tdata[index + b2] = b;\n\t\t\t\tdata[index + a2] = a;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.buffer.format = format;\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixel (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tvar pixel:RGBA;\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32: pixel = (color:ARGB);\n\t\t\tcase BGRA32: pixel = (color:BGRA);\n\t\t\tdefault: pixel = color;\n\t\t\t\n\t\t}\n\t\t\n\t\t// TODO: Write only RGB instead?\n\t\t\n\t\tvar source = new RGBA ();\n\t\tsource.readUInt8 (image.buffer.data, (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4), image.buffer.format, image.buffer.premultiplied);\n\t\t\n\t\tpixel.a = source.a;\n\t\tpixel.writeUInt8 (image.buffer.data, (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4), image.buffer.format, image.buffer.premultiplied);\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixel32 (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tvar pixel:RGBA;\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32: pixel = (color:ARGB);\n\t\t\tcase BGRA32: pixel = (color:BGRA);\n\t\t\tdefault: pixel = color;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!image.transparent) pixel.a = 0xFF;\n\t\tpixel.writeUInt8 (image.buffer.data, (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4), image.buffer.format, image.buffer.premultiplied);\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixels (image:Image, rect:Rectangle, bytes:Bytes, format:PixelFormat):Void {\n\t\t\n\t\tif (image.buffer.data == null) return;\n\t\t\n\t\t#if ((cpp || neko) && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) lime_image_data_util_set_pixels (image, rect, bytes, format); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar data = image.buffer.data;\n\t\t\tvar sourceFormat = image.buffer.format;\n\t\t\tvar premultiplied = image.buffer.premultiplied;\n\t\t\tvar dataView = new ImageDataView (image, rect);\n\t\t\tvar row, color, pixel:RGBA;\n\t\t\tvar transparent = image.transparent;\n\t\t\tvar dataPosition = 0;\n\t\t\t\n\t\t\tfor (y in 0...dataView.height) {\n\t\t\t\t\n\t\t\t\trow = dataView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...dataView.width) {\n\t\t\t\t\t\n\t\t\t\t\t//color = bytes.getInt32 (dataPosition);\n\t\t\t\t\tcolor = bytes.get (dataPosition + 3) | (bytes.get (dataPosition + 2) << 8) | (bytes.get (dataPosition + 1) << 16) | (bytes.get (dataPosition) << 24);\n\t\t\t\t\tdataPosition += 4;\n\t\t\t\t\t\n\t\t\t\t\tswitch (format) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase ARGB32: pixel = (color:ARGB);\n\t\t\t\t\t\tcase BGRA32: pixel = (color:BGRA);\n\t\t\t\t\t\tdefault: pixel = color;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!transparent) pixel.a = 0xFF;\n\t\t\t\t\tpixel.writeUInt8 (data, row + (x * 4), sourceFormat, premultiplied);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function threshold (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, operation:String, threshold:Int, color:Int, mask:Int, copySource:Bool, format:PixelFormat):Int {\n\t\t\n\t\tvar _color:RGBA, _mask:RGBA, _threshold:RGBA;\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\t_color = (color:ARGB);\n\t\t\t\t_mask = (mask:ARGB);\n\t\t\t\t_threshold = (threshold:ARGB);\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\t_color = (color:BGRA);\n\t\t\t\t_mask = (mask:BGRA);\n\t\t\t\t_threshold = (threshold:BGRA);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\t_color = color;\n\t\t\t\t_mask = mask;\n\t\t\t\t_threshold = threshold;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar _operation = switch (operation) {\n\t\t\t\n\t\t\tcase \"!=\": NOT_EQUALS;\n\t\t\tcase \"==\": EQUALS;\n\t\t\tcase \"<\" : LESS_THAN;\n\t\t\tcase \"<=\": LESS_THAN_OR_EQUAL_TO;\n\t\t\tcase \">\" : GREATER_THAN;\n\t\t\tcase \">=\": GREATER_THAN_OR_EQUAL_TO;\n\t\t\tdefault: -1;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (_operation == -1) return 0;\n\t\t\n\t\tvar srcData = sourceImage.buffer.data;\n\t\tvar destData = image.buffer.data;\n\t\t\n\t\tif (srcData == null || destData == null) return 0;\n\t\t\n\t\tvar hits = 0;\n\t\t\n\t\t#if ((cpp || neko) && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) hits = lime_image_data_util_threshold (image, sourceImage, sourceRect, destPoint, _operation, (_threshold >> 16) & 0xFFFF, (_threshold) & 0xFFFF, (_color >> 16) & 0xFFFF, (_color) & 0xFFFF, (_mask >> 16) & 0xFFFF, (_mask) & 0xFFFF, copySource); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar srcView = new ImageDataView (sourceImage, sourceRect);\n\t\t\tvar destView = new ImageDataView (image, new Rectangle (destPoint.x, destPoint.y, srcView.width, srcView.height));\n\t\t\t\n\t\t\tvar srcFormat = sourceImage.buffer.format;\n\t\t\tvar destFormat = image.buffer.format;\n\t\t\tvar srcPremultiplied = sourceImage.buffer.premultiplied;\n\t\t\tvar destPremultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar srcPosition, destPosition, srcPixel:RGBA, destPixel:RGBA, pixelMask:Int, test:Bool, value:Int;\n\t\t\t\n\t\t\tfor (y in 0...destView.height) {\n\t\t\t\t\n\t\t\t\tsrcPosition = srcView.row (y);\n\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...destView.width) {\n\t\t\t\t\t\n\t\t\t\t\tsrcPixel.readUInt8 (srcData, srcPosition, srcFormat, srcPremultiplied);\n\t\t\t\t\t\n\t\t\t\t\tpixelMask = srcPixel & _mask;\n\t\t\t\t\t\n\t\t\t\t\tvalue = __pixelCompare (pixelMask, _threshold);\n\t\t\t\t\t\n\t\t\t\t\ttest = switch (_operation) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase NOT_EQUALS: (value != 0);\n\t\t\t\t\t\tcase EQUALS: (value == 0);\n\t\t\t\t\t\tcase LESS_THAN: (value == -1);\n\t\t\t\t\t\tcase LESS_THAN_OR_EQUAL_TO: (value == 0 || value == -1);\n\t\t\t\t\t\tcase GREATER_THAN: (value == 1);\n\t\t\t\t\t\tcase GREATER_THAN_OR_EQUAL_TO: (value == 0 || value == 1);\n\t\t\t\t\t\tdefault: false;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (test) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t_color.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\thits++;\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (copySource) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsrcPixel.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tsrcPosition += 4;\n\t\t\t\t\tdestPosition += 4;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (hits > 0) {\n\t\t\t\n\t\t\timage.dirty = true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn hits;\n\t\t\n\t}\n\t\n\t\n\tpublic static function unmultiplyAlpha (image:Image):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tif (data == null) return;\n\t\t\n\t\t#if ((cpp || neko) && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) lime_image_data_util_unmultiply_alpha (image); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar format = image.buffer.format;\n\t\t\tvar length = Std.int (data.length / 4);\n\t\t\tvar pixel:RGBA;\n\t\t\t\n\t\t\tfor (i in 0...length) {\n\t\t\t\t\n\t\t\t\tpixel.readUInt8 (data, i * 4, format, true);\n\t\t\t\tpixel.writeUInt8 (data, i * 4, format, false);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.buffer.premultiplied = false;\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tprivate static inline function __pixelCompare (n1:Int, n2:Int):Int {\n\t\t\n\t\tvar tmp1:Int;\n\t\tvar tmp2:Int;\n\t\t\n\t\ttmp1 = (n1 >> 24) & 0xFF;\n\t\ttmp2 = (n2 >> 24) & 0xFF;\n\t\t\n\t\tif (tmp1 != tmp2) {\n\t\t\t\n\t\t\treturn (tmp1 > tmp2 ? 1 : -1);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttmp1 = (n1 >> 16) & 0xFF;\n\t\t\ttmp2 = (n2 >> 16) & 0xFF;\n\t\t\t\n\t\t\tif (tmp1 != tmp2) {\n\t\t\t\t\n\t\t\t\treturn (tmp1 > tmp2 ? 1 : -1);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ttmp1 = (n1 >> 8) & 0xFF;\n\t\t\t\ttmp2 = (n2 >> 8) & 0xFF;\n\t\t\t\t\n\t\t\t\tif (tmp1 != tmp2) {\n\t\t\t\t\t\n\t\t\t\t\treturn (tmp1 > tmp2 ? 1 : -1);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttmp1 = n1 & 0xFF;\n\t\t\t\t\ttmp2 = n2 & 0xFF;\n\t\t\t\t\t\n\t\t\t\t\tif (tmp1 != tmp2) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn (tmp1 > tmp2 ? 1 : -1);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_image_data_util_color_transform (image:Dynamic, rect:Dynamic, colorMatrix:Dynamic):Void;\n\t@:cffi private static function lime_image_data_util_copy_channel (image:Dynamic, sourceImage:Dynamic, sourceRect:Dynamic, destPoint:Dynamic, srcChannel:Int, destChannel:Int):Void;\n\t@:cffi private static function lime_image_data_util_copy_pixels (image:Dynamic, sourceImage:Dynamic, sourceRect:Dynamic, destPoint:Dynamic, alphaImage:Dynamic, alphaPoint:Dynamic, mergeAlpha:Bool):Void;\n\t@:cffi private static function lime_image_data_util_fill_rect (image:Dynamic, rect:Dynamic, rg:Int, ba:Int):Void;\n\t@:cffi private static function lime_image_data_util_flood_fill (image:Dynamic, x:Int, y:Int, rg:Int, ba:Int):Void;\n\t@:cffi private static function lime_image_data_util_get_pixels (image:Dynamic, rect:Dynamic, format:Int, bytes:Dynamic):Void;\n\t@:cffi private static function lime_image_data_util_merge (image:Dynamic, sourceImage:Dynamic, sourceRect:Dynamic, destPoint:Dynamic, redMultiplier:Int, greenMultiplier:Int, blueMultiplier:Int, alphaMultiplier:Int):Void;\n\t@:cffi private static function lime_image_data_util_multiply_alpha (image:Dynamic):Void;\n\t@:cffi private static function lime_image_data_util_resize (image:Dynamic, buffer:Dynamic, width:Int, height:Int):Void;\n\t@:cffi private static function lime_image_data_util_set_format (image:Dynamic, format:Int):Void;\n\t@:cffi private static function lime_image_data_util_set_pixels (image:Dynamic, rect:Dynamic, bytes:Dynamic, format:Int):Void;\n\t@:cffi private static function lime_image_data_util_threshold (image:Dynamic, sourceImage:Image, sourceRect:Dynamic, destPoint:Dynamic, operation:Int, thresholdRG:Int, thresholdBA:Int, colorRG:Int, colorBA:Int, maskRG:Int, maskBA:Int, copySource:Bool):Int;\n\t@:cffi private static function lime_image_data_util_unmultiply_alpha (image:Dynamic):Void;\n\t#end\n\t\n\t\n}\n\n\nprivate class ImageDataView {\n\t\n\t\n\tpublic var x (default, null):Int;\n\tpublic var y (default, null):Int;\n\tpublic var height (default, null):Int;\n\tpublic var width (default, null):Int;\n\t\n\tprivate var image:Image;\n\tprivate var offset:Int;\n\tprivate var rect:Rectangle;\n\tprivate var stride:Int;\n\t\n\t\n\tpublic function new (image:Image, rect:Rectangle = null) {\n\t\t\n\t\tthis.image = image;\n\t\t\n\t\tif (rect == null) {\n\t\t\t\n\t\t\tthis.rect = image.rect;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (rect.x < 0) rect.x = 0;\n\t\t\tif (rect.y < 0) rect.y = 0;\n\t\t\tif (rect.x + rect.width > image.width) rect.width = image.width - rect.x;\n\t\t\tif (rect.y + rect.height > image.height) rect.height = image.height - rect.y;\n\t\t\tif (rect.width < 0) rect.width = 0;\n\t\t\tif (rect.height < 0) rect.height = 0;\n\t\t\tthis.rect = rect;\n\t\t\t\n\t\t}\n\t\t\n\t\tstride = image.buffer.stride;\n\t\t\n\t\tx = Math.ceil (this.rect.x);\n\t\ty = Math.ceil (this.rect.y);\n\t\twidth = Math.floor (this.rect.width);\n\t\theight = Math.floor (this.rect.height);\n\t\toffset = (stride * (this.y + image.offsetY)) + ((this.x + image.offsetX) * 4);\n\t\t\n\t}\n\t\n\t\n\tpublic function clip (x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\trect.__contract (x, y, width, height);\n\t\t\n\t\tthis.x = Math.ceil (rect.x);\n\t\tthis.y = Math.ceil (rect.y);\n\t\tthis.width = Math.floor (rect.width);\n\t\tthis.height = Math.floor (rect.height);\n\t\toffset = (stride * (this.y + image.offsetY)) + ((this.x + image.offsetX) * 4);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function row (y:Int):Int {\n\t\t\n\t\treturn offset + stride * y;\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:noCompletion @:dox(hide) @:enum private abstract ThresholdOperation(Int) from Int to Int {\n\t\n\tvar NOT_EQUALS = 0;\n\tvar EQUALS = 1;\n\tvar LESS_THAN = 2;\n\tvar LESS_THAN_OR_EQUAL_TO = 3;\n\tvar GREATER_THAN = 4;\n\tvar GREATER_THAN_OR_EQUAL_TO = 5;\n\t\n}","package lime.math;\n\n\nimport lime.utils.Float32Array;\nimport lime.utils.UInt8Array;\n\n#if flash\nimport flash.geom.ColorTransform;\n#end\n\n\nabstract ColorMatrix(Float32Array) from Float32Array to Float32Array {\n\t\n\t\n\tprivate static var __identity = [ 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 ];\n\t\n\tpublic var alphaMultiplier (get, set):Float;\n\tpublic var alphaOffset (get, set):Float;\n\tpublic var blueMultiplier (get, set):Float;\n\tpublic var blueOffset (get, set):Float;\n\tpublic var color (get, set):Int;\n\tpublic var greenMultiplier (get, set):Float;\n\tpublic var greenOffset (get, set):Float;\n\tpublic var redMultiplier (get, set):Float;\n\tpublic var redOffset (get, set):Float;\n\t\n\t\n\tpublic function new (data:Float32Array = null) {\n\t\t\n\t\tif (data != null && data.length == 20) {\n\t\t\t\n\t\t\tthis = data;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis = new Float32Array (__identity);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():ColorMatrix {\n\t\t\n\t\treturn new ColorMatrix (new Float32Array (this));\n\t\t\n\t}\n\t\n\t\n\tpublic function concat (second:ColorMatrix):Void {\n\t\t\n\t\tredMultiplier += second.redMultiplier;\n\t\tgreenMultiplier += second.greenMultiplier;\n\t\tblueMultiplier += second.blueMultiplier;\n\t\talphaMultiplier += second.alphaMultiplier;\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (other:ColorMatrix):Void {\n\t\t\n\t\tthis.set (other);\n\t\t\n\t}\n\t\n\t\n\tpublic function identity () {\n\t\t\n\t\tthis[0] = 1;\n\t\tthis[1] = 0;\n\t\tthis[2] = 0;\n\t\tthis[3] = 0;\n\t\tthis[4] = 0;\n\t\tthis[5] = 0;\n\t\tthis[6] = 1;\n\t\tthis[7] = 0;\n\t\tthis[8] = 0;\n\t\tthis[9] = 0;\n\t\tthis[10] = 0;\n\t\tthis[11] = 0;\n\t\tthis[12] = 1;\n\t\tthis[13] = 0;\n\t\tthis[14] = 0;\n\t\tthis[15] = 0;\n\t\tthis[16] = 0;\n\t\tthis[17] = 0;\n\t\tthis[18] = 1;\n\t\tthis[19] = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getAlphaTable ():UInt8Array {\n\t\t\n\t\tvar table = new UInt8Array (256);\n\t\tvar multiplier = alphaMultiplier;\n\t\tvar offset = alphaOffset;\n\t\tvar value:Int;\n\t\t\n\t\tfor (i in 0...256) {\n\t\t\t\n\t\t\tvalue = Math.floor (i * multiplier + offset);\n\t\t\tif (value > 0xFF) value = 0xFF;\n\t\t\tif (value < 0) value = 0;\n\t\t\ttable[i] = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn table;\n\t\t\n\t}\n\t\n\t\n\tpublic function getBlueTable ():UInt8Array {\n\t\t\n\t\tvar table = new UInt8Array (256);\n\t\tvar multiplier = blueMultiplier;\n\t\tvar offset = blueOffset;\n\t\tvar value:Int;\n\t\t\n\t\tfor (i in 0...256) {\n\t\t\t\n\t\t\tvalue = Math.floor (i * multiplier + offset);\n\t\t\tif (value > 0xFF) value = 0xFF;\n\t\t\tif (value < 0) value = 0;\n\t\t\ttable[i] = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn table;\n\t\t\n\t}\n\t\n\t\n\tpublic function getGreenTable ():UInt8Array {\n\t\t\n\t\tvar table = new UInt8Array (256);\n\t\tvar multiplier = greenMultiplier;\n\t\tvar offset = greenOffset;\n\t\tvar value:Int;\n\t\t\n\t\tfor (i in 0...256) {\n\t\t\t\n\t\t\tvalue = Math.floor (i * multiplier + offset);\n\t\t\tif (value > 0xFF) value = 0xFF;\n\t\t\tif (value < 0) value = 0;\n\t\t\ttable[i] = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn table;\n\t\t\n\t}\n\t\n\t\n\tpublic function getRedTable ():UInt8Array {\n\t\t\n\t\tvar table = new UInt8Array (256);\n\t\tvar multiplier = redMultiplier;\n\t\tvar offset = redOffset;\n\t\tvar value:Int;\n\t\t\n\t\tfor (i in 0...256) {\n\t\t\t\n\t\t\tvalue = Math.floor (i * multiplier + offset);\n\t\t\tif (value > 0xFF) value = 0xFF;\n\t\t\tif (value < 0) value = 0;\n\t\t\ttable[i] = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn table;\n\t\t\n\t}\n\t\n\t\n\tprivate function __toFlashColorTransform ():#if flash ColorTransform #else Dynamic #end {\n\t\t\n\t\t#if flash\n\t\treturn new ColorTransform (redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate inline function get_alphaMultiplier ():Float {\n\t\t\n\t\treturn this[18];\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_alphaMultiplier (value:Float):Float {\n\t\t\n\t\treturn this[18] = value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_alphaOffset ():Float {\n\t\t\n\t\treturn this[19] * 255;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_alphaOffset (value:Float):Float {\n\t\t\n\t\treturn this[19] = value / 255;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_blueMultiplier ():Float {\n\t\t\n\t\treturn this[12];\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_blueMultiplier (value:Float):Float {\n\t\t\n\t\treturn this[12] = value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_blueOffset ():Float {\n\t\t\n\t\treturn this[14] * 255;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_blueOffset (value:Float):Float {\n\t\t\n\t\treturn this[14] = value / 255;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_color ():Int {\n\t\t\n\t\treturn ((Std.int (redOffset) << 16) | (Std.int (greenOffset) << 8) | Std.int (blueOffset));\n\t\t\n\t}\n\t\n\t\n\tprivate function set_color (value:Int):Int {\n\t\t\n\t\tredOffset = (value >> 16) & 0xFF;\n\t\tgreenOffset = (value >> 8) & 0xFF;\n\t\tblueOffset = value & 0xFF;\n\t\t\n\t\tredMultiplier = 0;\n\t\tgreenMultiplier = 0;\n\t\tblueMultiplier = 0;\n\t\t\n\t\treturn color;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_greenMultiplier ():Float {\n\t\t\n\t\treturn this[6];\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_greenMultiplier (value:Float):Float {\n\t\t\n\t\treturn this[6] = value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_greenOffset ():Float {\n\t\t\n\t\treturn this[9] * 255;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_greenOffset (value:Float):Float {\n\t\t\n\t\treturn this[9] = value / 255;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_redMultiplier ():Float {\n\t\t\n\t\treturn this[0];\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_redMultiplier (value:Float):Float {\n\t\t\n\t\treturn this[0] = value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_redOffset ():Float {\n\t\t\n\t\treturn this[4] * 255;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_redOffset (value:Float):Float {\n\t\t\n\t\treturn this[4] = value / 255;\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess public function get (index:Int):Float {\n\t\t\n\t\treturn this[index];\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess public function set (index:Int, value:Float):Float {\n\t\t\n\t\treturn this[index] = value;\n\t\t\n\t}\n\t\n\t\n}\n","package lime.math;\n\n\nclass Matrix3 {\n\t\n\t\n\tpublic var a:Float;\n\tpublic var b:Float;\n\tpublic var c:Float;\n\tpublic var d:Float;\n\tpublic var tx:Float;\n\tpublic var ty:Float;\n\t\n\tprivate static var __identity = new Matrix3 ();\n\t\n\t\n\tpublic function new (a:Float = 1, b:Float = 0, c:Float = 0, d:Float = 1, tx:Float = 0, ty:Float = 0) {\n\t\t\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clone ():Matrix3 {\n\t\t\n\t\treturn new Matrix3 (a, b, c, d, tx, ty);\n\t\t\n\t}\n\t\n\t\n\tpublic function concat (m:Matrix3):Void {\n\t\t\n\t\tvar a1 = a * m.a + b * m.c;\n\t\tb = a * m.b + b * m.d;\n\t\ta = a1;\n\n\t\tvar c1 = c * m.a + d * m.c;\n\t\td = c * m.b + d * m.d;\n\t\tc = c1;\n\t\t\n\t\tvar tx1 = tx * m.a + ty * m.c + m.tx;\n\t\tty = tx * m.b + ty * m.d + m.ty;\n\t\ttx = tx1;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnFrom (column:Int, vector4:Vector4):Void {\n\t\t\n\t\tif (column > 2) {\n\t\t\t\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (column == 0) {\n\t\t\t\n\t\t\ta = vector4.x;\n\t\t\tc = vector4.y;\n\t\t\t\n\t\t}else if (column == 1) {\n\t\t\t\n\t\t\tb = vector4.x;\n\t\t\td = vector4.y;\n\t\t\t\n\t\t}else {\n\t\t\t\n\t\t\ttx = vector4.x;\n\t\t\tty = vector4.y;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnTo (column:Int, vector4:Vector4):Void {\n\t\t\n\t\tif (column > 2) {\n\t\t\t\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (column == 0) {\n\t\t\t\n\t\t\tvector4.x = a;\n\t\t\tvector4.y = c;\n\t\t\tvector4.z = 0;\n\t\t\t\n\t\t} else if (column == 1) {\n\t\t\t\n\t\t\tvector4.x = b;\n\t\t\tvector4.y = d;\n\t\t\tvector4.z = 0;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvector4.x = tx;\n\t\t\tvector4.y = ty;\n\t\t\tvector4.z = 1;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourceMatrix3:Matrix3):Void {\n\t\t\n\t\ta = sourceMatrix3.a;\n\t\tb = sourceMatrix3.b;\n\t\tc = sourceMatrix3.c;\n\t\td = sourceMatrix3.d;\n\t\ttx = sourceMatrix3.tx;\n\t\tty = sourceMatrix3.ty;\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRowFrom (row:Int, vector4:Vector4):Void {\n\t\t\n\t\tif (row > 2) {\n\t\t\t\n\t\t\tthrow \"Row \" + row + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (row == 0) {\n\t\t\t\n\t\t\ta = vector4.x;\n\t\t\tc = vector4.y;\n\t\t\t\n\t\t} else if (row == 1) {\n\t\t\t\n\t\t\tb = vector4.x;\n\t\t\td = vector4.y;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttx = vector4.x;\n\t\t\tty = vector4.y;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRowTo (row:Int, vector4:Vector4):Void {\n\t\t\n\t\tif (row > 2) {\n\t\t\t\n\t\t\tthrow \"Row \" + row + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (row == 0) {\n\t\t\t\n\t\t\tvector4.x = a;\n\t\t\tvector4.y = b;\n\t\t\tvector4.z = tx;\n\t\t\t\n\t\t} else if (row == 1) {\n\t\t\t\n\t\t\tvector4.x = c;\n\t\t\tvector4.y = d;\n\t\t\tvector4.z = ty;\n\t\t\t\n\t\t}else {\n\t\t\t\n\t\t\tvector4.setTo (0, 0, 1);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function createBox (scaleX:Float, scaleY:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {\n\t\t\n\t\ta = scaleX;\n\t\td = scaleY;\n\t\tb = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\t\n\t}\n\t\n\t\n\tpublic function createGradientBox (width:Float, height:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {\n\t\t\n\t\ta = width / 1638.4;\n\t\td = height / 1638.4;\n\t\t\n\t\t// rotation is clockwise\n\t\tif (rotation != 0) {\n\t\t\t\n\t\t\tvar cos = Math.cos (rotation);\n\t\t\tvar sin = Math.sin (rotation);\n\t\t\t\n\t\t\tb = sin * d;\n\t\t\tc = -sin * a;\n\t\t\ta *= cos;\n\t\t\td *= cos;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tb = 0;\n\t\t\tc = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.tx = tx + width / 2;\n\t\tthis.ty = ty + height / 2;\n\t\t\n\t}\n\t\n\t\n\tpublic function equals (Matrix3):Bool {\n\t\t\n\t\treturn (Matrix3 != null && tx == Matrix3.tx && ty == Matrix3.ty && a == Matrix3.a && b == Matrix3.b && c == Matrix3.c && d == Matrix3.d);\n\t\t\n\t}\n\t\n\t\n\tpublic function deltaTransformVector2 (Vector2:Vector2):Vector2 {\n\t\t\n\t\treturn new Vector2 (Vector2.x * a + Vector2.y * c, Vector2.x * b + Vector2.y * d);\n\t\t\n\t}\n\t\n\t\n\tpublic function identity ():Void {\n\t\t\n\t\ta = 1;\n\t\tb = 0;\n\t\tc = 0;\n\t\td = 1;\n\t\ttx = 0;\n\t\tty = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function invert ():Matrix3 {\n\t\t\n\t\tvar norm = a * d - b * c;\n\t\t\n\t\tif (norm == 0) {\n\t\t\t\n\t\t\ta = b = c = d = 0;\n\t\t\ttx = -tx;\n\t\t\tty = -ty;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tnorm = 1.0 / norm;\n\t\t\tvar a1 = d * norm;\n\t\t\td = a * norm;\n\t\t\ta = a1;\n\t\t\tb *= -norm;\n\t\t\tc *= -norm;\n\t\t\t\n\t\t\tvar tx1 = - a * tx - c * ty;\n\t\t\tty = - b * tx - d * ty;\n\t\t\ttx = tx1;\n\t\t\t\n\t\t}\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function mult (m:Matrix3) {\n\t\t\n\t\tvar result = clone ();\n\t\tresult.concat (m);\n\t\treturn result;\n\t\t\n\t}\n\t\n\t\n\tpublic function rotate (theta:Float):Void {\n\t\t\n\t\t/*\n\t\t   Rotate object \"after\" other transforms\n\t\t\t\n\t\t   [  a  b   0 ][  ma mb  0 ]\n\t\t   [  c  d   0 ][  mc md  0 ]\n\t\t   [  tx ty  1 ][  mtx mty 1 ]\n\t\t\t\n\t\t   ma = md = cos\n\t\t   mb = sin\n\t\t   mc = -sin\n\t\t   mtx = my = 0\n\t\t\t\n\t\t */\n\t\t\n\t\tvar cos = Math.cos (theta);\n\t\tvar sin = Math.sin (theta);\n\t\t\n\t\tvar a1 = a * cos - b * sin;\n\t\tb = a * sin + b * cos;\n\t\ta = a1;\n\t\t\n\t\tvar c1 = c * cos - d * sin;\n\t\td = c * sin + d * cos;\n\t\tc = c1;\n\t\t\n\t\tvar tx1 = tx * cos - ty * sin;\n\t\tty = tx * sin + ty * cos;\n\t\ttx = tx1;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tpublic function scale (sx:Float, sy:Float) {\n\t\t\n\t\t/*\n\t\t\t\n\t\t   Scale object \"after\" other transforms\n\t\t\t\n\t\t   [  a  b   0 ][  sx  0   0 ]\n\t\t   [  c  d   0 ][  0   sy  0 ]\n\t\t   [  tx ty  1 ][  0   0   1 ]\n\t\t */\n\t\t\n\t\ta *= sx;\n\t\tb *= sy;\n\t\tc *= sx;\n\t\td *= sy;\n\t\ttx *= sx;\n\t\tty *= sy;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tprivate inline function setRotation (theta:Float, scale:Float = 1) {\n\t\t\n\t\ta = Math.cos (theta) * scale;\n\t\tc = Math.sin (theta) * scale;\n\t\tb = -c;\n\t\td = a;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tpublic function setTo (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float):Void {\n\t\t\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function to3DString (roundPixels:Bool = false):String {\n\t\t\n\t\t// identityMatrix3\n\t\t//  [a,b,tx,0],\n\t\t//  [c,d,ty,0],\n\t\t//  [0,0,1, 0],\n\t\t//  [0,0,0, 1]\n\t\t//\n\t\t// Matrix33d(a,       b, 0, 0, c, d,       0, 0, 0, 0, 1, 0, tx,     ty, 0, 1)\n\t\t\n\t\tif (roundPixels) {\n\t\t\t\n\t\t\treturn \"Matrix33d(\" + a + \", \" + b + \", \" + \"0, 0, \" + c + \", \" + d + \", \" + \"0, 0, 0, 0, 1, 0, \" + Std.int (tx) + \", \" + Std.int (ty) + \", 0, 1)\";\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn \"Matrix33d(\" + a + \", \" + b + \", \" + \"0, 0, \" + c + \", \" + d + \", \" + \"0, 0, 0, 0, 1, 0, \" + tx + \", \" + ty + \", 0, 1)\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toMozString () {\n\t\t\n\t\treturn \"Matrix3(\" + a + \", \" + b + \", \" + c + \", \" + d + \", \" + tx + \"px, \" + ty + \"px)\";\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toString ():String {\n\t\t\n\t\treturn \"Matrix3(\" + a + \", \" + b + \", \" + c + \", \" + d + \", \" + tx + \", \" + ty + \")\";\n\t\t\n\t}\n\t\n\t\n\tpublic function transformVector2 (pos:Vector2) {\n\t\t\n\t\treturn new Vector2 (__transformX (pos), __transformY (pos));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function translate (dx:Float, dy:Float) {\n\t\t\n\t\ttx += dx;\n\t\tty += dy;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function __cleanValues ():Void {\n\t\t\n\t\ta = Math.round (a * 1000) / 1000;\n\t\tb = Math.round (b * 1000) / 1000;\n\t\tc = Math.round (c * 1000) / 1000;\n\t\td = Math.round (d * 1000) / 1000;\n\t\ttx = Math.round (tx * 10) / 10;\n\t\tty = Math.round (ty * 10) / 10;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function __transformX (pos:Vector2):Float {\n\t\t\n\t\treturn pos.x * a + pos.y * c + tx;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function __transformY (pos:Vector2):Float {\n\t\t\n\t\treturn pos.x * b + pos.y * d + ty;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function __translateTransformed (pos:Vector2):Void {\n\t\t\n\t\ttx = __transformX (pos);\n\t\tty = __transformY (pos);\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n}\n","package lime.math;\n\n\nimport lime.utils.Float32Array;\n\n\nabstract Matrix4(Float32Array) from Float32Array to Float32Array {\n\t\n\t\n\tprivate static var __identity = [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ];\n\t\n\tpublic var determinant (get, never):Float;\n\tpublic var position (get, set):Vector4;\n\t\n\t\n\tpublic function new (data:Float32Array = null) {\n\t\t\n\t\tif (data != null && data.length == 16) {\n\t\t\t\n\t\t\tthis = data;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis = new Float32Array (__identity);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function append (lhs:Matrix4):Void {\n\t\t\n\t\tvar m111:Float = this[0], m121:Float = this[4], m131:Float = this[8], m141:Float = this[12],\n\t\t\tm112:Float = this[1], m122:Float = this[5], m132:Float = this[9], m142:Float = this[13],\n\t\t\tm113:Float = this[2], m123:Float = this[6], m133:Float = this[10], m143:Float = this[14],\n\t\t\tm114:Float = this[3], m124:Float = this[7], m134:Float = this[11], m144:Float = this[15],\n\t\t\tm211:Float = lhs[0], m221:Float = lhs[4], m231:Float = lhs[8], m241:Float = lhs[12],\n\t\t\tm212:Float = lhs[1], m222:Float = lhs[5], m232:Float = lhs[9], m242:Float = lhs[13],\n\t\t\tm213:Float = lhs[2], m223:Float = lhs[6], m233:Float = lhs[10], m243:Float = lhs[14],\n\t\t\tm214:Float = lhs[3], m224:Float = lhs[7], m234:Float = lhs[11], m244:Float = lhs[15];\n\t\t\n\t\tthis[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\n\t\tthis[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\n\t\tthis[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\n\t\tthis[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\n\t\t\n\t\tthis[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\n\t\tthis[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\n\t\tthis[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\n\t\tthis[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\n\t\t\n\t\tthis[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\n\t\tthis[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\n\t\tthis[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\n\t\tthis[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\n\t\t\n\t\tthis[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\n\t\tthis[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\n\t\tthis[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\n\t\tthis[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\n\t\t\n\t}\n\t\n\t\n\tpublic function appendRotation (degrees:Float, axis:Vector4, pivotPoint:Vector4 = null):Void {\n\t\t\n\t\tvar m = getAxisRotation (axis.x, axis.y, axis.z, degrees);\n\t\t\n\t\tif (pivotPoint != null) {\n\t\t\t\n\t\t\tvar p = pivotPoint;\n\t\t\tm.appendTranslation (p.x, p.y, p.z);\n\t\t\t\n\t\t}\n\t\t\n\t\tappend (m);\n\t\t\n\t}\n\t\n\t\n\tpublic function appendScale (xScale:Float, yScale:Float, zScale:Float):Void {\n\t\t\n\t\tappend (new Matrix4 (new Float32Array ([ xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0 ])));\n\t\t\n\t}\n\t\n\t\n\tpublic function appendTranslation (x:Float, y:Float, z:Float):Void {\n\t\t\n\t\tthis[12] = this[12] + x;\n\t\tthis[13] = this[13] + y;\n\t\tthis[14] = this[14] + z;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Matrix4 {\n\t\t\n\t\treturn new Matrix4 (new Float32Array (this));\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnFrom (column:Int, vector:Vector4):Void {\n\t\t\n\t\tswitch( column ) {\n\t\t\n\t\t\tcase 0:\n\t\t\t\tthis[ 0 ] = vector.x;\n\t\t\t\tthis[ 1 ] = vector.y;\n\t\t\t\tthis[ 2 ] = vector.z;\n\t\t\t\tthis[ 3 ] = vector.w;\n\t\t\tcase 1:\n\t\t\t\tthis[ 4 ] = vector.x;\n\t\t\t\tthis[ 5 ] = vector.y;\n\t\t\t\tthis[ 6 ] = vector.z;\n\t\t\t\tthis[ 7 ] = vector.w;\n\t\t\tcase 2:\n\t\t\t\tthis[ 8 ] = vector.x;\n\t\t\t\tthis[ 9 ] = vector.y;\n\t\t\t\tthis[ 10 ] = vector.z;\n\t\t\t\tthis[ 11 ] = vector.w;\n\t\t\tcase 3:\n\t\t\t\tthis[ 12 ] = vector.x;\n\t\t\t\tthis[ 13 ] = vector.y;\n\t\t\t\tthis[ 14 ] = vector.z;\n\t\t\t\tthis[ 15 ] = vector.w;\n\t\t\tdefault:\n\t\t\t\tthrow \"Error, Column \" + column + \" out of bounds [0, ..., 3]\";\n\t\t\t\t//throw new Error( \"Error, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnTo (column:Int, vector:Vector4):Void {\n\n\t\tswitch( column )\n\t\t{\n\t\t\tcase 0:\n\t\t\t\tvector.x = this[ 0 ];\n\t\t\t\tvector.y = this[ 1 ];\n\t\t\t\tvector.z = this[ 2 ];\n\t\t\t\tvector.w = this[ 3 ];\n\t\t\tcase 1:\n\t\t\t\tvector.x = this[ 4 ];\n\t\t\t\tvector.y = this[ 5 ];\n\t\t\t\tvector.z = this[ 6 ];\n\t\t\t\tvector.w = this[ 7 ];\n\t\t\tcase 2:\n\t\t\t\tvector.x = this[ 8 ];\n\t\t\t\tvector.y = this[ 9 ];\n\t\t\t\tvector.z = this[ 10 ];\n\t\t\t\tvector.w = this[ 11 ];\n\t\t\tcase 3:\n\t\t\t\tvector.x = this[ 12 ];\n\t\t\t\tvector.y = this[ 13 ];\n\t\t\t\tvector.z = this[ 14 ];\n\t\t\t\tvector.w = this[ 15 ];\n\t\t\tdefault:\n\t\t\t\tthrow \"Error, Column \" + column + \" out of bounds [0, ..., 3]\";\n\t\t\t\t//throw new Error( \"Error, Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t\t\n\t}\n\n\n\tpublic function copyFrom (other:Matrix4):Void {\n\n\t\tthis.set (other);\n\n\t}\n\n\tpublic function copythisFrom( array:Float32Array, index:UInt = 0, transposeValues:Bool = false ) {\n\t\t\n\t\tif ( transposeValues )\n\t\t\ttranspose();\n\t  \n\t\tvar l : UInt = array.length - index;\n\t\tfor ( c in 0...l )\n\t\t\tthis[c] = array[c+index];\n\t  \n\t\tif ( transposeValues )\n\t\t\ttranspose();\n\n\t}\n\n\n\tpublic function copythisTo( array:Float32Array, index:UInt = 0, transposeValues:Bool = false ) {\n\n\t\tif ( transposeValues )\n\t\t   transpose();\n\n\t\tvar l : UInt = this.length;\n\t\tfor ( c in 0...l )\n\t\t\tarray[c + index ] = this[c];\n\t\t\n\t\tif ( transposeValues )\n\t\t\ttranspose();\n\n\t}\n\n\n\tpublic function copyRowFrom( row:UInt, vector:Vector4 ) {\n\n\t\tswitch( row ) {\n\n\t\t\tcase 0:\n\t\t\t\tthis[ 0 ] = vector.x;\n\t\t\t\tthis[ 4 ] = vector.y;\n\t\t\t\tthis[ 8 ] = vector.z;\n\t\t\t\tthis[ 12 ] = vector.w;\n\t\t\t\n\t\t\tcase 1:\n\t\t\t\tthis[ 1 ] = vector.x;\n\t\t\t\tthis[ 5 ] = vector.y;\n\t\t\t\tthis[ 9 ] = vector.z;\n\t\t\t\tthis[ 13 ] = vector.w;\n\t\t\t\n\t\t\tcase 2:\n\t\t\t\tthis[ 2 ] = vector.x;\n\t\t\t\tthis[ 6 ] = vector.y;\n\t\t\t\tthis[ 10 ] = vector.z;\n\t\t\t\tthis[ 14 ] = vector.w;\n\t\t\t\n\t\t\tcase 3:\n\t\t\t\tthis[ 3 ] = vector.x;\n\t\t\t\tthis[ 7 ] = vector.y;\n\t\t\t\tthis[ 11 ] = vector.z;\n\t\t\t\tthis[ 15 ] = vector.w;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\tthrow \"Error, Row \" + row + \" out of bounds [0, ..., 3]\";\n\t\t\t\t//throw new Error( \"Error, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function create2D (x:Float, y:Float, scale:Float = 1, rotation:Float = 0) {\n\t\t\n\t\tvar theta = rotation * Math.PI / 180.0;\n\t\tvar c = Math.cos (theta);\n\t\tvar s = Math.sin (theta);\n\t\t\n\t\treturn new Matrix4 (new Float32Array ([\n\t\t\tc*scale,  -s*scale, 0,  0,\n\t\t\ts*scale,  c*scale, 0,  0,\n\t\t\t0,        0,        1,  0,\n\t\t\tx,        y,        0,  1\n\t\t]));\n\t\t\n\t}\n   \n   \n\tpublic static function createABCD (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float) {\n\t\t\n\t\treturn new Matrix4 (new Float32Array ([\n\t\t\ta, b, 0, 0,\n\t\t\tc, d, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\ttx,ty,0, 1\n\t\t]));\n\t\t\n\t}\n\t\n\t\n\tpublic static function createOrtho (x0:Float, x1:Float,  y0:Float, y1:Float, zNear:Float, zFar:Float) {\n\t\t\n\t\tvar sx = 1.0 / (x1 - x0);\n\t\tvar sy = 1.0 / (y1 - y0);\n\t\tvar sz = 1.0 / (zFar - zNear);\n\t\t\n\t\treturn new Matrix4 (new Float32Array ([\n\t\t\t2.0 * sx,     0,          0,                 0,\n\t\t\t0,            2.0 * sy,   0,                 0,\n\t\t\t0,            0,          -2.0 * sz,         0,\n\t\t\t- (x0 + x1) * sx, - (y0 + y1) * sy, - (zNear + zFar) * sz,  1,\n\t\t]));\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRowTo (row:Int, vector:Vector4):Void {\n\n\t\tswitch( row ) {\n\t\t\n\t\t\tcase 0:\n\t\t\t\tvector.x = this[ 0 ];\n\t\t\t\tvector.y = this[ 4 ];\n\t\t\t\tvector.z = this[ 8 ];\n\t\t\t\tvector.w = this[ 12 ];\n\t\t\t\n\t\t\tcase 1:\n\t\t\t\tvector.x = this[ 1 ];\n\t\t\t\tvector.y = this[ 5 ];\n\t\t\t\tvector.z = this[ 9 ];\n\t\t\t\tvector.w = this[ 13 ];\n\t\t\t\n\t\t\tcase 2:\n\t\t\t\tvector.x = this[ 2 ];\n\t\t\t\tvector.y = this[ 6 ];\n\t\t\t\tvector.z = this[ 10 ];\n\t\t\t\tvector.w = this[ 14 ];\n\t\t\t\n\t\t\tcase 3:\n\t\t\t\tvector.x = this[ 3 ];\n\t\t\t\tvector.y = this[ 7 ];\n\t\t\t\tvector.z = this[ 11 ];\n\t\t\t\tvector.w = this[ 15 ];\n\t\t\t\n\t\t\tdefault:\n\t\t\t\tthrow \"Error, Row \" + row + \" out of bounds [0, ..., 3]\";\n\t\t\t\t//throw new Error( \"Error, Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t}\n\t\t\n\t}\n\n\n\tpublic function copyToMatrix4 (other:Matrix4):Void {\n\t\t\n\t\tcast (other, Float32Array).set (this);\n\n\t}\n\n\t/**\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector4 objects.\n\t */\n\t/*public function decompose(?orientationStyle:Orientation3D):Vector<Vector4> {\n\n\t\tif (orientationStyle==null)\n\t\t\torientationStyle = Orientation3D.EULER_ANGLES;\n\t\t\n\t\tvar vec = new Vector<Vector4>();\n\t\tvar m = clone();\n\t\tvar mr = m.copy();\n\t\t\n\t\tvar pos = new Vector4 (mr[12], mr[13], mr[14]);\n\t\tmr[12] = 0;\n\t\tmr[13] = 0;\n\t\tmr[14] = 0;\n\t\t\n\t\tvar scale = new Vector4 ();\n\t\t\n\t\tscale.x = Math.sqrt(mr[0] * mr[0] + mr[1] * mr[1] + mr[2] * mr[2]);\n\t\tscale.y = Math.sqrt(mr[4] * mr[4] + mr[5] * mr[5] + mr[6] * mr[6]);\n\t\tscale.z = Math.sqrt(mr[8] * mr[8] + mr[9] * mr[9] + mr[10] * mr[10]);\n\t\t\n\t\tif (mr[0] * (mr[5] * mr[10] - mr[6] * mr[9]) - mr[1] * (mr[4] * mr[10] - mr[6] * mr[8]) + mr[2] * (mr[4] * mr[9] - mr[5] * mr[8]) < 0) {\n\t\t\t\n\t\t\tscale.z = -scale.z;\n\t\t\t\n\t\t}\n\t\t\n\t\tmr[0] /= scale.x;\n\t\tmr[1] /= scale.x;\n\t\tmr[2] /= scale.x;\n\t\tmr[4] /= scale.y;\n\t\tmr[5] /= scale.y;\n\t\tmr[6] /= scale.y;\n\t\tmr[8] /= scale.z;\n\t\tmr[9] /= scale.z;\n\t\tmr[10] /= scale.z;\n\t\t\n\t\tvar rot = new Vector4 ();\n\t\tswitch (orientationStyle) {\n\t\t\t\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\t\t\t\trot.w = Math.acos((mr[0] + mr[5] + mr[10] - 1) / 2);\n\n\t\t\t\tvar len = Math.sqrt((mr[6] - mr[9]) * (mr[6] - mr[9]) + (mr[8] - mr[2]) * (mr[8] - mr[2]) + (mr[1] - mr[4]) * (mr[1] - mr[4]));\n\t\t\t\trot.x = (mr[6] - mr[9]) / len;\n\t\t\t\trot.y = (mr[8] - mr[2]) / len;\n\t\t\t\trot.z = (mr[1] - mr[4]) / len;\n\t\t\t\n\t\t\tcase Orientation3D.QUATERNION:\n\t\t\t\tvar tr = mr[0] + mr[5] + mr[10];\n\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\trot.w = Math.sqrt(1 + tr) / 2;\n\n\t\t\t\t\trot.x = (mr[6] - mr[9]) / (4 * rot.w);\n\t\t\t\t\trot.y = (mr[8] - mr[2]) / (4 * rot.w);\n\t\t\t\t\trot.z = (mr[1] - mr[4]) / (4 * rot.w);\n\t\t\t\t} else if ((mr[0] > mr[5]) && (mr[0] > mr[10])) {\n\t\t\t\t\trot.x = Math.sqrt(1 + mr[0] - mr[5] - mr[10]) / 2;\n\n\t\t\t\t\trot.w = (mr[6] - mr[9]) / (4 * rot.x);\n\t\t\t\t\trot.y = (mr[1] + mr[4]) / (4 * rot.x);\n\t\t\t\t\trot.z = (mr[8] + mr[2]) / (4 * rot.x);\n\t\t\t\t} else if (mr[5] > mr[10]) {\n\t\t\t\t\trot.y = Math.sqrt(1 + mr[5] - mr[0] - mr[10]) / 2;\n\n\t\t\t\t\trot.x = (mr[1] + mr[4]) / (4 * rot.y);\n\t\t\t\t\trot.w = (mr[8] - mr[2]) / (4 * rot.y);\n\t\t\t\t\trot.z = (mr[6] + mr[9]) / (4 * rot.y);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = Math.sqrt(1 + mr[10] - mr[0] - mr[5]) / 2;\n\n\t\t\t\t\trot.x = (mr[8] + mr[2]) / (4 * rot.z);\n\t\t\t\t\trot.y = (mr[6] + mr[9]) / (4 * rot.z);\n\t\t\t\t\trot.w = (mr[1] - mr[4]) / (4 * rot.z);\n\t\t\t\t}\n\t\t\t\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\t\t\t\trot.y = Math.asin(-mr[2]);\n\n\t\t\t\tif (mr[2] != 1 && mr[2] != -1) {\n\t\t\t\t\trot.x = Math.atan2(mr[6], mr[10]);\n\t\t\t\t\trot.z = Math.atan2(mr[1], mr[0]);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2(mr[4], mr[5]);\n\t\t\t\t}\n\t\t}\n\t\t\n\t\tvec.push(pos);\n\t\tvec.push(rot);\n\t\tvec.push(scale);\n\t\t\n\t\treturn vec;\n\n\t}*/\n\n\n\tpublic function deltaTransformVector( v:Vector4 ):Vector4 {\n\n\t\tvar x:Float = v.x, y:Float = v.y, z:Float = v.z;\n\n\t\treturn new Vector4 (\n\t\t\t(x * this[0] + y * this[4] + z * this[8] + this[3]),\n\t\t\t(x * this[1] + y * this[5] + z * this[9] + this[7]),\n\t\t\t(x * this[2] + y * this[6] + z * this[10] + this[11]),\n\t\t\t0);\n\n\t}\n\n\n\tpublic function identity () {\n\t\t\n\t\tthis[0] = 1;\n\t\tthis[1] = 0;\n\t\tthis[2] = 0;\n\t\tthis[3] = 0;\n\t\tthis[4] = 0;\n\t\tthis[5] = 1;\n\t\tthis[6] = 0;\n\t\tthis[7] = 0;\n\t\tthis[8] = 0;\n\t\tthis[9] = 0;\n\t\tthis[10] = 1;\n\t\tthis[11] = 0;\n\t\tthis[12] = 0;\n\t\tthis[13] = 0;\n\t\tthis[14] = 0;\n\t\tthis[15] = 1;\n\t\t\n\t}\n\t\n\t\n\tpublic static function interpolate (thisMat:Matrix4, toMat:Matrix4, percent:Float):Matrix4 {\n\t\t\n\t\tvar m = new Matrix4 ();\n\t\t\n\t\tfor (i in 0...16) {\n\t\t\t\n\t\t\tm[i] = thisMat[i] + (toMat[i] - thisMat[i]) * percent;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn m;\n\t\t\n\t}\n\t\n\t\n\tpublic function interpolateTo (toMat:Matrix4, percent:Float):Void {\n\t\t\n\t\tfor (i in 0...16) {\n\t\t\t\n\t\t\tthis[i] = this[i] + (toMat[i] - this[i]) * percent;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function invert ():Bool {\n\t\t\n\t\tvar d = determinant;\n\t\tvar invertable = Math.abs (d) > 0.00000000001;\n\t\t\n\t\tif (invertable) {\n\t\t\t\n\t\t\td = 1 / d;\n\t\t\t\n\t\t\tvar m11:Float = this[0]; var m21:Float = this[4]; var m31:Float = this[8]; var m41:Float = this[12];\n\t\t\tvar m12:Float = this[1]; var m22:Float = this[5]; var m32:Float = this[9]; var m42:Float = this[13];\n\t\t\tvar m13:Float = this[2]; var m23:Float = this[6]; var m33:Float = this[10]; var m43:Float = this[14];\n\t\t\tvar m14:Float = this[3]; var m24:Float = this[7]; var m34:Float = this[11]; var m44:Float = this[15];\n\t\t\t\n\t\t\tthis[0] = d * (m22 * (m33 * m44 - m43 * m34) - m32 * (m23 * m44 - m43 * m24) + m42 * (m23 * m34 - m33 * m24));\n\t\t\tthis[1] = -d * (m12 * (m33 * m44 - m43 * m34) - m32 * (m13 * m44 - m43 * m14) + m42 * (m13 * m34 - m33 * m14));\n\t\t\tthis[2] = d * (m12 * (m23 * m44 - m43 * m24) - m22 * (m13 * m44 - m43 * m14) + m42 * (m13 * m24 - m23 * m14));\n\t\t\tthis[3] = -d * (m12 * (m23 * m34 - m33 * m24) - m22 * (m13 * m34 - m33 * m14) + m32 * (m13 * m24 - m23 * m14));\n\t\t\tthis[4] = -d * (m21 * (m33 * m44 - m43 * m34) - m31 * (m23 * m44 - m43 * m24) + m41 * (m23 * m34 - m33 * m24));\n\t\t\tthis[5] = d * (m11 * (m33 * m44 - m43 * m34) - m31 * (m13 * m44 - m43 * m14) + m41 * (m13 * m34 - m33 * m14));\n\t\t\tthis[6] = -d * (m11 * (m23 * m44 - m43 * m24) - m21 * (m13 * m44 - m43 * m14) + m41 * (m13 * m24 - m23 * m14));\n\t\t\tthis[7] = d * (m11 * (m23 * m34 - m33 * m24) - m21 * (m13 * m34 - m33 * m14) + m31 * (m13 * m24 - m23 * m14));\n\t\t\tthis[8] = d * (m21 * (m32 * m44 - m42 * m34) - m31 * (m22 * m44 - m42 * m24) + m41 * (m22 * m34 - m32 * m24));\n\t\t\tthis[9] = -d * (m11 * (m32 * m44 - m42 * m34) - m31 * (m12 * m44 - m42 * m14) + m41 * (m12 * m34 - m32 * m14));\n\t\t\tthis[10] = d * (m11 * (m22 * m44 - m42 * m24) - m21 * (m12 * m44 - m42 * m14) + m41 * (m12 * m24 - m22 * m14));\n\t\t\tthis[11] = -d * (m11 * (m22 * m34 - m32 * m24) - m21 * (m12 * m34 - m32 * m14) + m31 * (m12 * m24 - m22 * m14));\n\t\t\tthis[12] = -d * (m21 * (m32 * m43 - m42 * m33) - m31 * (m22 * m43 - m42 * m23) + m41 * (m22 * m33 - m32 * m23));\n\t\t\tthis[13] = d * (m11 * (m32 * m43 - m42 * m33) - m31 * (m12 * m43 - m42 * m13) + m41 * (m12 * m33 - m32 * m13));\n\t\t\tthis[14] = -d * (m11 * (m22 * m43 - m42 * m23) - m21 * (m12 * m43 - m42 * m13) + m41 * (m12 * m23 - m22 * m13));\n\t\t\tthis[15] = d * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn invertable;\n\t\t\n\t}\n\t\n\t\n\tpublic function pointAt (pos:Vector4, at:Vector4 = null, up:Vector4 = null):Void {\n\t\t\n\t\tif (at == null) {\n\t\t\t\n\t\t\tat = new Vector4 (0, 0, -1);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (up == null) {\n\t\t\t\n\t\t\tup = new Vector4 (0, -1, 0);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar dir = at.subtract(pos);\n\t\tvar vup = up.clone();\n\t\tvar right:Vector4;\n\t\t\n\t\tdir.normalize ();\n\t\tvup.normalize ();\n\t\t\n\t\tvar dir2 = dir.clone ();\n\t\tdir2.scaleBy (vup.dotProduct (dir));\n\t\t\n\t\tvup = vup.subtract (dir2);\n\t\t\n\t\tif (vup.length > 0) {\n\t\t\t\n\t\t\tvup.normalize ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (dir.x != 0) {\n\t\t\t\t\n\t\t\t\tvup = new Vector4 (-dir.y, dir.x, 0);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvup = new Vector4 (1, 0, 0);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tright = vup.crossProduct (dir);\n\t\tright.normalize ();\n\t\t\n\t\tthis[0] = right.x;\n\t\tthis[4] = right.y;\n\t\tthis[8] = right.z;\n\t\tthis[12] = 0.0;\n\t\tthis[1] = vup.x;\n\t\tthis[5] = vup.y;\n\t\tthis[9] = vup.z;\n\t\tthis[13] = 0.0;\n\t\tthis[2] = dir.x;\n\t\tthis[6] = dir.y;\n\t\tthis[10] = dir.z;\n\t\tthis[14] = 0.0;\n\t\tthis[3] = pos.x;\n\t\tthis[7] = pos.y;\n\t\tthis[11] = pos.z;\n\t\tthis[15] = 1.0;\n\t\t\n\t}\n\t\n\t\n\tpublic function prepend (rhs:Matrix4):Void {\n\t\t\n\t\tvar m111:Float = rhs[0], m121:Float = rhs[4], m131:Float = rhs[8], m141:Float = rhs[12],\n\t\t\tm112:Float = rhs[1], m122:Float = rhs[5], m132:Float = rhs[9], m142:Float = rhs[13],\n\t\t\tm113:Float = rhs[2], m123:Float = rhs[6], m133:Float = rhs[10], m143:Float = rhs[14],\n\t\t\tm114:Float = rhs[3], m124:Float = rhs[7], m134:Float = rhs[11], m144:Float = rhs[15],\n\t\t\tm211:Float = this[0], m221:Float = this[4], m231:Float = this[8], m241:Float = this[12],\n\t\t\tm212:Float = this[1], m222:Float = this[5], m232:Float = this[9], m242:Float = this[13],\n\t\t\tm213:Float = this[2], m223:Float = this[6], m233:Float = this[10], m243:Float = this[14],\n\t\t\tm214:Float = this[3], m224:Float = this[7], m234:Float = this[11], m244:Float = this[15];\n\t\t\n\t\tthis[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\n\t\tthis[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\n\t\tthis[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\n\t\tthis[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\n\t\t\n\t\tthis[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\n\t\tthis[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\n\t\tthis[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\n\t\tthis[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\n\t\t\n\t\tthis[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\n\t\tthis[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\n\t\tthis[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\n\t\tthis[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\n\t\t\n\t\tthis[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\n\t\tthis[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\n\t\tthis[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\n\t\tthis[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\n\t\t\n\t}\n\t\n\t\n\tpublic function prependRotation (degrees:Float, axis:Vector4, pivotPoint:Vector4 = null):Void {\n\t\t\n\t\tvar m = getAxisRotation (axis.x, axis.y, axis.z, degrees);\n\t\t\n\t\tif (pivotPoint != null) {\n\t\t\t\n\t\t\tvar p = pivotPoint;\n\t\t\tm.appendTranslation (p.x, p.y, p.z);\n\t\t\t\n\t\t}\n\t\t\n\t\tprepend (m);\n\t\t\n\t}\n\t\n\t\n\tpublic function prependScale (xScale:Float, yScale:Float, zScale:Float):Void {\n\t\t\n\t\tprepend (new Matrix4 (new Float32Array ([xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0])));\n\t\t\n\t}\n\t\n\t\n\tpublic function prependTranslation (x:Float, y:Float, z:Float):Void {\n\t\t\n\t\tvar m = new Matrix4 ();\n\t\tm.position = new Vector4 (x, y, z);\n\t\tprepend (m);\n\t\t\n\t}\n\t\n\t\n\t/*public function recompose (components:Vector<Vector4>, ?orientationStyle:Orientation3D ):Bool {\n\t\t\n\t\tif (components.length < 3 || components[2].x == 0 || components[2].y == 0 || components[2].z == 0)\n\t\t\treturn false;\n\t  \n\t\tif (orientationStyle == null)\n\t\t\torientationStyle = Orientation3D.EULER_ANGLES;\n\n\t\tidentity();\n\n\t\tvar scale = [];\n\t\tscale[0] = scale[1] = scale[2] = components[2].x;\n\t\tscale[4] = scale[5] = scale[6] = components[2].y;\n\t\tscale[8] = scale[9] = scale[10] = components[2].z;\n\n\t\tswitch (orientationStyle) {\n\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\t\t\t\tvar cx = Math.cos(components[1].x);\n\t\t\t\tvar cy = Math.cos(components[1].y);\n\t\t\t\tvar cz = Math.cos(components[1].z);\n\t\t\t\tvar sx = Math.sin(components[1].x);\n\t\t\t\tvar sy = Math.sin(components[1].y);\n\t\t\t\tvar sz = Math.sin(components[1].z);\n\t\t\t\t\n\t\t\t\tthis[0]=cy*cz*scale[0];\n\t\t\t\tthis[1]=cy*sz*scale[1];\n\t\t\t\tthis[2]=- sy*scale[2];\n\t\t\t\tthis[3]=0;\n\t\t\t\tthis[4] = (sx*sy*cz-cx*sz)*scale[4];\n\t\t\t\tthis[5] = (sx*sy*sz+cx*cz)*scale[5];\n\t\t\t\tthis[6]=sx*cy*scale[6];\n\t\t\t\tthis[7]=0;\n\t\t\t\tthis[8] = (cx*sy*cz+sx*sz)*scale[8];\n\t\t\t\tthis[9] = (cx*sy*sz-sx*cz)*scale[9];\n\t\t\t\tthis[10]=cx*cy*scale[10];\n\t\t\t\tthis[11]=0;\n\t\t\t\tthis[12]=components[0].x;\n\t\t\t\tthis[13]=components[0].y;\n\t\t\t\tthis[14]=components[0].z;\n\t\t\t\tthis[15]=1;\n\n\t\t\tdefault:\n\n\t\t\t\tvar x = components[1].x;\n\t\t\t\tvar y = components[1].y;\n\t\t\t\tvar z = components[1].z;\n\t\t\t\tvar w = components[1].w;\n\t\t\t\tif (Type.enumEq(orientationStyle, Orientation3D.AXIS_ANGLE)) {\n\t\t\t\t\tx *= Math.sin(w/2);\n\t\t\t\t\ty *= Math.sin(w/2);\n\t\t\t\t\tz *= Math.sin(w/2);\n\t\t\t\t\tw = Math.cos(w/2);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis[0] = (1-2*y*y-2*z*z)*scale[0];\n\t\t\t\tthis[1] = (2*x*y+2*w*z)*scale[1];\n\t\t\t\tthis[2] = (2*x*z-2*w*y)*scale[2];\n\t\t\t\tthis[3] = 0;\n\t\t\t\tthis[4] = (2*x*y-2*w*z)*scale[4];\n\t\t\t\tthis[5] = (1-2*x*x-2*z*z)*scale[5];\n\t\t\t\tthis[6] = (2*y*z+2*w*x)*scale[6];\n\t\t\t\tthis[7] = 0;\n\t\t\t\tthis[8] = (2*x*z+2*w*y)*scale[8];\n\t\t\t\tthis[9] = (2*y*z-2*w*x)*scale[9];\n\t\t\t\tthis[10] = (1-2*x*x-2*y*y)*scale[10];\n\t\t\t\tthis[11] = 0;\n\t\t\t\tthis[12] = components[0].x;\n\t\t\t\tthis[13] = components[0].y;\n\t\t\t\tthis[14] = components[0].z;\n\t\t\t\tthis[15] = 1;\n\t\t}\n\t\t\n\t\tif (components[2].x == 0)\n\t\t\tthis[0] = 1e-15;\n\t\tif (components[2].y == 0)\n\t\t\tthis[5] = 1e-15;\n\t\tif (components[2].z == 0)\n\t\t\tthis[10] = 1e-15;\n\t\t\t\t\t\n\t\treturn !(components[2].x == 0 || components[2].y == 0 || components[2].y == 0);\n\t}*/\n\t\n\t\n\tpublic function transformVector (v:Vector4):Vector4 {\n\t\t\n\t\tvar x:Float = v.x, y:Float = v.y, z:Float = v.z;\n\t\t\n\t\treturn new Vector4 (\n\t\t\t(x * this[0] + y * this[4] + z * this[8] + this[12]),\n\t\t\t(x * this[1] + y * this[5] + z * this[9] + this[13]),\n\t\t\t(x * this[2] + y * this[6] + z * this[10] + this[14]),\n\t\t\t(x * this[3] + y * this[7] + z * this[11] + this[15]));\n\t\t\n\t}\n\t\n\t\n\tpublic function transformVectors (ain:Float32Array, aout:Float32Array):Void {\n\t\t\n\t\tvar i = 0;\n\t\t\n\t\twhile (i + 3 <= ain.length) {\n\t\t\t\n\t\t\tvar x:Float = ain[i], y:Float = ain[i + 1], z:Float = ain[i + 2];\n\t\t\t\n\t\t\taout[i] = x * this[0] + y * this[4] + z * this[8] + this[12];\n\t\t\taout[i + 1] = x * this[1] + y * this[5] + z * this[9] + this[13];\n\t\t\taout[i + 2] = x * this[2] + y * this[6] + z * this[10] + this[14];\n\t\t\t\n\t\t\ti += 3;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function transpose ():Void {\n\t\t\n\t\tvar othis = new Float32Array (this);\n\t\tthis[1] = othis[4];\n\t\tthis[2] = othis[8];\n\t\tthis[3] = othis[12];\n\t\tthis[4] = othis[1];\n\t\tthis[6] = othis[9];\n\t\tthis[7] = othis[13];\n\t\tthis[8] = othis[2];\n\t\tthis[9] = othis[6];\n\t\tthis[11] = othis[14];\n\t\tthis[12] = othis[3];\n\t\tthis[13] = othis[7];\n\t\tthis[14] = othis[11];\n\t\t\n\t}\n\n\tprivate static function getAxisRotation( x:Float, y:Float, z:Float, degrees:Float ):Matrix4 {\n\n\t\tvar m = new Matrix4();\n\n\t\tvar a1 = new Vector4(x, y, z);\n\t\tvar rad = -degrees * (Math.PI / 180);\n\t\tvar c = Math.cos(rad);\n\t\tvar s = Math.sin(rad);\n\t\tvar t = 1.0 - c;\n\n\t\tm[0] = c + a1.x * a1.x * t;\n\t\tm[5] = c + a1.y * a1.y * t;\n\t\tm[10] = c + a1.z * a1.z * t;\n\n\t\tvar tmp1 = a1.x * a1.y * t;\n\t\tvar tmp2 = a1.z * s;\n\t\tm[4] = tmp1 + tmp2;\n\t\tm[1] = tmp1 - tmp2;\n\t\ttmp1 = a1.x * a1.z * t;\n\t\ttmp2 = a1.y * s;\n\t\tm[8] = tmp1 - tmp2;\n\t\tm[2] = tmp1 + tmp2;\n\t\ttmp1 = a1.y * a1.z * t;\n\t\ttmp2 = a1.x*s;\n\t\tm[9] = tmp1 + tmp2;\n\t\tm[6] = tmp1 - tmp2;\n\n\t\treturn m;\n\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_determinant ():Float {\n\n\t\treturn 1 * ((this[0] * this[5] - this[4] * this[1]) * (this[10] * this[15] - this[14] * this[11]) \n\t\t\t- (this[0] * this[9] - this[8] * this[1]) * (this[6] * this[15] - this[14] * this[7])\n\t\t\t+ (this[0] * this[13] - this[12] * this[1]) * (this[6] * this[11] - this[10] * this[7])\n\t\t\t+ (this[4] * this[9] - this[8] * this[5]) * (this[2] * this[15] - this[14] * this[3])\n\t\t\t- (this[4] * this[13] - this[12] * this[5]) * (this[2] * this[11] - this[10] * this[3])\n\t\t\t+ (this[8] * this[13] - this[12] * this[9]) * (this[2] * this[7] - this[6] * this[3]));\n\t\n\t}\n\t\n\t\n\tprivate function get_position ():Vector4 {\n\t\t\n\t\treturn new Vector4 (this[12], this[13], this[14]);\n\t\t\n\t}\n\t\n\t\n\tprivate function set_position (val:Vector4):Vector4 {\n\t\t\n\t\tthis[12] = val.x;\n\t\tthis[13] = val.y;\n\t\tthis[14] = val.z;\n\t\treturn val;\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess public function get (index:Int):Float {\n\t\t\n\t\treturn this[index];\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess public function set (index:Int, value:Float):Float {\n\t\t\n\t\tthis[index] = value;\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}\n","package lime.math;\n\n\n#if flash\nimport flash.geom.Rectangle in FlashRectangle;\n#end\n\n\nclass Rectangle {\n\t\n\t\n\tpublic var bottom (get, set):Float;\n\tpublic var bottomRight (get, set):Vector2;\n\tpublic var height:Float;\n\tpublic var left (get, set):Float;\n\tpublic var right (get, set):Float;\n\tpublic var size (get, set):Vector2;\n\tpublic var top (get, set):Float;\n\tpublic var topLeft (get, set):Vector2;\n\tpublic var width:Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\t\n\t\n\tpublic function new (x:Float = 0, y:Float = 0, width:Float = 0, height:Float = 0):Void {\n\t\t\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Rectangle {\n\t\t\n\t\treturn new Rectangle (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic function contains (x:Float, y:Float):Bool {\n\t\t\n\t\treturn x >= this.x && y >= this.y && x < right && y < bottom;\n\t\t\n\t}\n\t\n\t\n\tpublic function containsPoint (point:Vector2):Bool {\n\t\t\n\t\treturn contains (point.x, point.y);\n\t\t\n\t}\n\t\n\t\n\tpublic function containsRect (rect:Rectangle):Bool {\n\t\t\n\t\tif (rect.width <= 0 || rect.height <= 0) {\n\t\t\t\n\t\t\treturn rect.x > x && rect.y > y && rect.right < right && rect.bottom < bottom;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn rect.x >= x && rect.y >= y && rect.right <= right && rect.bottom <= bottom;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourceRect:Rectangle):Void {\n\t\t\n\t\tx = sourceRect.x;\n\t\ty = sourceRect.y;\n\t\twidth = sourceRect.width;\n\t\theight = sourceRect.height;\n\t\t\n\t}\n\t\n\t\n\tpublic function equals (toCompare:Rectangle):Bool {\n\t\t\n\t\treturn toCompare != null && x == toCompare.x && y == toCompare.y && width == toCompare.width && height == toCompare.height;\n\t\t\n\t}\n\t\n\t\n\tpublic function inflate (dx:Float, dy:Float):Void {\n\t\t\n\t\tx -= dx; width += dx * 2;\n\t\ty -= dy; height += dy * 2;\n\t\t\n\t}\n\t\n\t\n\tpublic function inflatePoint (point:Vector2):Void {\n\t\t\n\t\tinflate (point.x, point.y);\n\t\t\n\t}\n\t\n\t\n\tpublic function intersection (toIntersect:Rectangle):Rectangle {\n\t\t\n\t\tvar x0 = x < toIntersect.x ? toIntersect.x : x;\n\t\tvar x1 = right > toIntersect.right ? toIntersect.right : right;\n\t\t\n\t\tif (x1 <= x0) {\n\t\t\t\n\t\t\treturn new Rectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar y0 = y < toIntersect.y ? toIntersect.y : y;\n\t\tvar y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;\n\t\t\n\t\tif (y1 <= y0) {\n\t\t\t\n\t\t\treturn new Rectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn new Rectangle (x0, y0, x1 - x0, y1 - y0);\n\t\t\n\t}\n\t\n\t\n\tpublic function intersects (toIntersect:Rectangle):Bool {\n\t\t\n\t\tvar x0 = x < toIntersect.x ? toIntersect.x : x;\n\t\tvar x1 = right > toIntersect.right ? toIntersect.right : right;\n\t\t\n\t\tif (x1 <= x0) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar y0 = y < toIntersect.y ? toIntersect.y : y;\n\t\tvar y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;\n\t\t\n\t\treturn y1 > y0;\n\t\t\n\t}\n\t\n\t\n\tpublic function isEmpty ():Bool {\n\t\t\n\t\treturn (width <= 0 || height <= 0);\n\t\t\n\t}\n\t\n\t\n\tpublic function offset (dx:Float, dy:Float):Void {\n\t\t\n\t\tx += dx;\n\t\ty += dy;\n\t\t\n\t}\n\t\n\t\n\tpublic function offsetPoint (point:Vector2):Void {\n\t\t\n\t\tx += point.x;\n\t\ty += point.y;\n\t\t\n\t}\n\t\n\t\n\tpublic function setEmpty ():Void {\n\t\t\n\t\tx = y = width = height = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function setTo (xa:Float, ya:Float, widtha:Float, heighta:Float):Void {\n\t\t\n\t\tx = xa;\n\t\ty = ya;\n\t\twidth = widtha;\n\t\theight = heighta;\n\t\t\n\t}\n\t\n\t\n\tpublic function transform (m:Matrix3):Rectangle {\n\t\t\n\t\tvar tx0 = m.a * x + m.c * y;\n\t\tvar tx1 = tx0;\n\t\tvar ty0 = m.b * x + m.d * y;\n\t\tvar ty1 = ty0;\n\t\t\n\t\tvar tx = m.a * (x + width) + m.c * y;\n\t\tvar ty = m.b * (x + width) + m.d * y;\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\ttx = m.a * (x + width) + m.c * (y + height);\n\t\tty = m.b * (x + width) + m.d * (y + height);\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\ttx = m.a * x + m.c * (y + height);\n\t\tty = m.b * x + m.d * (y + height);\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\treturn new Rectangle (tx0 + m.tx, ty0 + m.ty, tx1 - tx0, ty1 - ty0);\n\t\t\n\t}\n\t\n\t\n\tpublic function union (toUnion:Rectangle):Rectangle {\n\t\t\n\t\tif (width == 0 || height == 0) {\n\t\t\t\n\t\t\treturn toUnion.clone ();\n\t\t\t\n\t\t} else if (toUnion.width == 0 || toUnion.height == 0) {\n\t\t\t\n\t\t\treturn clone ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar x0 = x > toUnion.x ? toUnion.x : x;\n\t\tvar x1 = right < toUnion.right ? toUnion.right : right;\n\t\tvar y0 = y > toUnion.y ? toUnion.y : y;\n\t\tvar y1 = bottom < toUnion.bottom ? toUnion.bottom : bottom;\n\t\t\n\t\treturn new Rectangle (x0, y0, x1 - x0, y1 - y0);\n\t\t\n\t}\n\t\n\t\n\tpublic function __contract (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (this.width == 0 && this.height == 0) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\t//var cacheRight = right;\n\t\t//var cacheBottom = bottom;\n\t\t\n\t\tif (this.x < x) this.x = x;\n\t\tif (this.y < y) this.y = y;\n\t\tif (this.right > x + width) this.width = x + width - this.x;\n\t\tif (this.bottom > y + height) this.height = y + height - this.y;\n\t\t\n\t}\n\t\n\t\n\tpublic function __expand (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (this.width == 0 && this.height == 0) {\n\t\t\t\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar cacheRight = right;\n\t\tvar cacheBottom = bottom;\n\t\t\n\t\tif (this.x > x) this.x = x;\n\t\tif (this.y > y) this.y = y;\n\t\tif (cacheRight < x + width) this.width = x + width - this.x;\n\t\tif (cacheBottom < y + height) this.height = y + height - this.y;\n\t\t\n\t}\n\t\n\t\n\tprivate function __toFlashRectangle ():#if flash FlashRectangle #else Dynamic #end {\n\t\t\n\t\t#if flash\n\t\treturn new FlashRectangle (x, y, width, height);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_bottom ():Float { return y + height; }\n\tprivate function set_bottom (b:Float):Float { height = b - y; return b; }\n\tprivate function get_bottomRight ():Vector2 { return new Vector2 (x + width, y + height); }\n\tprivate function set_bottomRight (p:Vector2):Vector2 { width = p.x - x; height = p.y - y; return p.clone (); }\n\tprivate function get_left ():Float { return x; }\n\tprivate function set_left (l:Float):Float { width -= l - x; x = l; return l; }\n\tprivate function get_right ():Float { return x + width; }\n\tprivate function set_right (r:Float):Float { width = r - x; return r; }\n\tprivate function get_size ():Vector2 { return new Vector2 (width, height); }\n\tprivate function set_size (p:Vector2):Vector2 { width = p.x; height = p.y; return p.clone (); }\n\tprivate function get_top ():Float { return y; }\n\tprivate function set_top (t:Float):Float { height -= t - y; y = t; return t; }\n\tprivate function get_topLeft ():Vector2 { return new Vector2 (x, y); }\n\tprivate function set_topLeft (p:Vector2):Vector2 { x = p.x; y = p.y; return p.clone (); }\n\t\n\t\n}","package lime.math;\n\n\n#if flash\nimport flash.geom.Point;\n#end\n\n\nclass Vector2 {\n\t\n\t\n\tpublic var length (get, null):Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\t\n\t\n\tpublic function new (x:Float = 0, y:Float = 0) {\n\t\t\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\t\n\t}\n\t\n\t\n\tpublic function add (v:Vector2):Vector2 {\n\t\t\n\t\treturn new Vector2 (v.x + x, v.y + y);\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Vector2 {\n\t\t\n\t\treturn new Vector2 (x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic static function distance (pt1:Vector2, pt2:Vector2):Float {\n\t\t\n\t\tvar dx = pt1.x - pt2.x;\n\t\tvar dy = pt1.y - pt2.y;\n\t\treturn Math.sqrt (dx * dx + dy * dy);\n\t\t\n\t}\n\t\n\t\n\tpublic function equals (toCompare:Vector2):Bool {\n\t\t\n\t\treturn toCompare != null && toCompare.x == x && toCompare.y == y;\n\t\t\n\t}\n\t\n\t\n\tpublic static function interpolate (pt1:Vector2, pt2:Vector2, f:Float):Vector2 {\n\t\t\n\t\treturn new Vector2 (pt2.x + f * (pt1.x - pt2.x), pt2.y + f * (pt1.y - pt2.y));\n\t\t\n\t}\n\t\n\t\n\tpublic function normalize (thickness:Float):Void {\n\t\t\n\t\tif (x == 0 && y == 0) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar norm = thickness / Math.sqrt (x * x + y * y);\n\t\t\tx *= norm;\n\t\t\ty *= norm;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function offset (dx:Float, dy:Float):Void {\n\t\t\n\t\tx += dx;\n\t\ty += dy;\n\t\t\n\t}\n\t\n\t\n\tpublic static function polar (len:Float, angle:Float):Vector2 {\n\t\t\n\t\treturn new Vector2 (len * Math.cos (angle), len * Math.sin (angle));\n\t\t\n\t}\n\t\n\t\n\tinline public function setTo (xa:Float, ya:Float):Void {\t\n\t\t\n\t\tx = xa;\n\t\ty = ya;\n\t}\n\t\n\t\n\tpublic function subtract (v:Vector2):Vector2 {\n\t\t\n\t\treturn new Vector2 (x - v.x, y - v.y);\n\t\t\n\t}\n\t\n\t\n\tprivate function __toFlashPoint ():#if flash Point #else Dynamic #end {\n\t\t\n\t\t#if flash\n\t\treturn new Point (x, y);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_length ():Float {\n\t\t\n\t\treturn Math.sqrt (x * x + y * y);\n\t\t\n\t}\n\t\n\t\n}","package lime.math;\n\n\nclass Vector4 {\n\t\n\t\n\tpublic static var X_AXIS (get, null):Vector4;\n\tpublic static var Y_AXIS (get, null):Vector4;\n\tpublic static var Z_AXIS (get, null):Vector4;\n\t\n\tpublic var length (get, null):Float;\n\tpublic var lengthSquared (get, null):Float;\n\tpublic var w:Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\tpublic var z:Float;\n\t\n\t\n\tpublic function new (x:Float = 0., y:Float = 0., z:Float = 0., w:Float = 0.) {\n\t\t\n\t\tthis.w = w;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\t\n\t}\n\t\n\t\n\tinline public function add (a:Vector4):Vector4 {\n\t\t\n\t\treturn new Vector4 (this.x + a.x, this.y + a.y, this.z + a.z);\n\t\t\n\t}\n\t\n\t\n\tinline public static function angleBetween (a:Vector4, b:Vector4):Float {\n\t\t\n\t\tvar a0 = a.clone ();\n\t\ta0.normalize ();\n\t\tvar b0 = b.clone ();\n\t\tb0.normalize ();\n\t\t\n\t\treturn Math.acos (a0.dotProduct (b0));\n\t\t\n\t}\n\t\n\t\n\tinline public function clone ():Vector4 {\n\t\t\n\t\treturn new Vector4 (x, y, z, w);\n\t\t\n\t}\n\t\n\t\n\tinline public function copyFrom (sourceVector4:Vector4):Void {\n\t\t\n\t\tx = sourceVector4.x;\n\t\ty = sourceVector4.y;\n\t\tz = sourceVector4.z;\n\t\t\n\t}\n\t\n\t\n\tinline public function crossProduct (a:Vector4):Vector4 {\n\t\t\n\t\treturn new Vector4 (y * a.z - z * a.y, z * a.x - x * a.z, x * a.y - y * a.x, 1);\n\t\t\n\t}\n\t\n\t\n\tinline public function decrementBy (a:Vector4):Void {\n\t\t\n\t\tx -= a.x;\n\t\ty -= a.y;\n\t\tz -= a.z;\n\t\t\n\t}\n\t\n\t\n\tinline public static function distance (pt1:Vector4, pt2:Vector4):Float {\n\t\t\n\t\tvar x:Float = pt2.x - pt1.x;\n\t\tvar y:Float = pt2.y - pt1.y;\n\t\tvar z:Float = pt2.z - pt1.z;\n\t\t\n\t\treturn Math.sqrt (x * x + y * y + z * z);\n\t\t\n\t}\n\t\n\t\n\tinline public function dotProduct (a:Vector4):Float {\n\t\t\n\t\treturn x * a.x + y * a.y + z * a.z;\n\t\t\n\t}\n\t\n\t\n\tinline public function equals (toCompare:Vector4, ?allFour:Bool = false):Bool {\n\t\t\n\t\treturn x == toCompare.x && y == toCompare.y && z == toCompare.z && (!allFour || w == toCompare.w);\n\t\t\n\t}\n\t\n\t\n\tinline public function incrementBy (a:Vector4):Void {\n\t\t\n\t\tx += a.x;\n\t\ty += a.y;\n\t\tz += a.z;\n\t\t\n\t}\n\t\n\t\n\tinline public function nearEquals (toCompare:Vector4, tolerance:Float, ?allFour:Bool = false):Bool {\n\t\t\n\t\treturn Math.abs (x - toCompare.x) < tolerance && Math.abs (y - toCompare.y) < tolerance && Math.abs (z - toCompare.z) < tolerance && (!allFour || Math.abs (w - toCompare.w) < tolerance);\n\t\t\n\t}\n\t\n\t\n\tinline public function negate ():Void {\n\t\t\n\t\tx *= -1;\n\t\ty *= -1;\n\t\tz *= -1;\n\t\t\n\t}\n\t\n\t\n\tinline public function normalize ():Float {\n\t\t\n\t\tvar l = length;\n\t\t\n\t\tif (l != 0) {\n\t\t\t\n\t\t\tx /= l;\n\t\t\ty /= l;\n\t\t\tz /= l;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn l;\n\t\t\n\t}\n\t\n\t\n\tinline public function project ():Void {\n\t\t\n\t\tx /= w;\n\t\ty /= w;\n\t\tz /= w;\n\t\t\n\t}\n\t\n\t\n\tinline public function scaleBy (s:Float):Void {\n\t\t\n\t\tx *= s;\n\t\ty *= s;\n\t\tz *= s;\n\t\t\n\t}\n\t\n\t\n\tinline public function setTo (xa:Float, ya:Float, za:Float):Void {\n\t\t\n\t\tx = xa;\n\t\ty = ya;\n\t\tz = za;\n\t\t\n\t}\n\t\n\t\n\tinline public function subtract (a:Vector4):Vector4 {\n\t\t\n\t\treturn new Vector4 (x - a.x, y - a.y, z - a.z);\n\t\t\n\t}\n\t\n\t\n\tinline public function toString ():String {\n\t\t\n\t\treturn \"Vector4(\" + x + \", \" + y + \", \" + z + \")\";\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tinline private function get_length ():Float {\n\t\t\n\t\treturn Math.sqrt (x * x + y * y + z * z);\n\t\t\n\t}\n\t\n\t\n\tinline private function get_lengthSquared ():Float {\n\t\t\n\t\treturn x * x + y * y + z * z;\n\t\t\n\t}\n\t\n\t\n\tinline private static function get_X_AXIS ():Vector4 {\n\t\t\n\t\treturn new Vector4 (1, 0, 0);\n\t\t\n\t}\n\t\n\t\n\tinline private static function get_Y_AXIS ():Vector4 {\n\t\t\n\t\treturn new Vector4 (0, 1, 0);\n\t\t\n\t}\n\t\n\t\n\tinline private static function get_Z_AXIS ():Vector4 {\n\t\t\n\t\treturn new Vector4 (0, 0, 1);\n\t\t\n\t}\n\t\n\t\n}","package lime.net;\n\n\nimport lime.app.Future;\nimport lime.app.Promise;\nimport lime.net.curl.CURLCode;\nimport lime.net.curl.CURLEasy;\nimport lime.system.BackgroundWorker;\nimport lime.system.CFFI;\nimport lime.utils.Bytes;\n\n#if (js && html5)\nimport js.html.XMLHttpRequest;\n#end\n\n\nclass HTTPRequest {\n\t\n\t\n\tpublic var bytes:Bytes;\n\t\n\tprivate var bytesLoaded:Int;\n\tprivate var bytesTotal:Int;\n\tprivate var promise:Promise<Bytes>;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tpromise = new Promise<Bytes> ();\n\t\t\n\t}\n\t\n\t\n\tpublic function load (url:String):Future<Bytes> {\n\t\t\n\t\tbytesLoaded = 0;\n\t\tbytesTotal = 0;\n\t\t\n\t\t#if flash\n\t\t\n\t\t\n\t\t\n\t\t#elseif (js && html5)\n\t\t\n\t\tvar request = new XMLHttpRequest ();\n\t\trequest.addEventListener (\"progress\", request_onProgress, false);\n\t\trequest.onreadystatechange = function () {\n\t\t\t\n\t\t\tif (request.readyState != 4) return;\n\t\t\t\n\t\t\tif (request.status != null && request.status >= 200 && request.status <= 400) {\n\t\t\t\t\n\t\t\t\tbytes = Bytes.ofData (request.response);\n\t\t\t\tpromise.complete (bytes);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tpromise.error (request.status);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t};\n\t\t\n\t\trequest.open (\"GET\", url, true);\n\t\trequest.responseType = ARRAYBUFFER;\n\t\trequest.send (\"\");\n\t\t\n\t\t#else\n\t\t\n\t\tif (url.indexOf (\"http://\") == -1 && url.indexOf (\"https://\") == -1) {\n\t\t\t\n\t\t\tvar worker = new BackgroundWorker ();\n\t\t\tworker.doWork.add (function (_) {\n\t\t\t\t\n\t\t\t\tvar path = url;\n\t\t\t\tvar index = path.indexOf (\"?\");\n\t\t\t\t\n\t\t\t\tif (index > -1) {\n\t\t\t\t\t\n\t\t\t\t\tpath = path.substring (0, index);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar bytes = Bytes.readFile (path);\n\t\t\t\tpromise.complete (bytes);\n\t\t\t\t\n\t\t\t});\n\t\t\tworker.run ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tbytes = Bytes.alloc (0);\n\t\t\t\n\t\t\tbytesLoaded = 0;\n\t\t\tbytesTotal = 0;\n\t\t\t\n\t\t\tvar curl = CURLEasy.init ();\n\t\t\t\n\t\t\tCURLEasy.setopt (curl, URL, url);\n\t\t\tCURLEasy.setopt (curl, HTTPGET, true);\n\t\t\t\n\t\t\tCURLEasy.setopt (curl, FOLLOWLOCATION, true);\n\t\t\tCURLEasy.setopt (curl, AUTOREFERER, true);\n\t\t\tCURLEasy.setopt (curl, HTTPHEADER, [ \"Expect: \" ]);\n\t\t\t\n\t\t\tCURLEasy.setopt (curl, PROGRESSFUNCTION, curl_onProgress);\n\t\t\tCURLEasy.setopt (curl, WRITEFUNCTION, curl_onWrite);\n\t\t\t\n\t\t\tCURLEasy.setopt (curl, SSL_VERIFYPEER, false);\n\t\t\tCURLEasy.setopt (curl, SSL_VERIFYHOST, 0);\n\t\t\tCURLEasy.setopt (curl, USERAGENT, \"libcurl-agent/1.0\");\n\t\t\tCURLEasy.setopt (curl, CONNECTTIMEOUT, 30);\n\t\t\tCURLEasy.setopt (curl, TRANSFERTEXT, 0);\n\t\t\t\n\t\t\tvar worker = new BackgroundWorker ();\n\t\t\tworker.doWork.add (function (_) {\n\t\t\t\t\n\t\t\t\tvar result = CURLEasy.perform (curl);\n\t\t\t\tworker.sendComplete (result);\n\t\t\t\t\n\t\t\t});\n\t\t\tworker.onComplete.add (function (result) {\n\t\t\t\t\n\t\t\t\tvar responseCode = CURLEasy.getinfo (curl, RESPONSE_CODE);\n\t\t\t\t\n\t\t\t\tif (result == CURLCode.OK) {\n\t\t\t\t\t\n\t\t\t\t\tpromise.complete (bytes);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tpromise.error (result);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t\tworker.run ();\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function curl_onProgress (dltotal:Float, dlnow:Float, uptotal:Float, upnow:Float):Int {\n\t\t\n\t\tif (upnow > bytesLoaded || dlnow > bytesLoaded || uptotal > bytesTotal || dltotal > bytesTotal) {\n\t\t\t\n\t\t\tif (upnow > bytesLoaded) bytesLoaded = Std.int (upnow);\n\t\t\tif (dlnow > bytesLoaded) bytesLoaded = Std.int (dlnow);\n\t\t\tif (uptotal > bytesTotal) bytesTotal = Std.int (uptotal);\n\t\t\tif (dltotal > bytesTotal) bytesTotal = Std.int (dltotal);\n\t\t\t\n\t\t\tpromise.progress (bytesLoaded / bytesTotal);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate function curl_onWrite (output:Bytes, size:Int, nmemb:Int):Int {\n\t\t\n\t\tvar cacheBytes = bytes;\n\t\tbytes = Bytes.alloc (bytes.length + output.length);\n\t\tbytes.blit (0, cacheBytes, 0, cacheBytes.length);\n\t\tbytes.blit (cacheBytes.length, output, 0, output.length);\n\t\t\n\t\treturn size * nmemb;\n\t\t\n\t}\n\t\n\t\n\tprivate function request_onProgress (event:Dynamic):Void {\n\t\t\n\t\tpromise.progress (event.loaded / event.total);\n\t\t\n\t}\n\t\n\t\n}","package lime.net.curl;\n\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nabstract CURL(Float) from Float to Float {\n\t\n\t\n\tpublic static inline var GLOBAL_SSL:Int = 1 << 0;\n\tpublic static inline var GLOBAL_WIN32:Int = 1 << 1;\n\tpublic static inline var GLOBAL_ALL:Int = GLOBAL_SSL | GLOBAL_WIN32;\n\tpublic static inline var GLOBAL_NOTHING:Int = 0;\n\tpublic static inline var GLOBAL_DEFAULT:Int = GLOBAL_ALL;\n\tpublic static inline var GLOBAL_ACK_EINTR:Int = 1 << 2;\n\t\n\t\n\tpublic static function getDate (date:String, now:Int):Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn cast lime_curl_getdate (date, cast now);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function globalCleanup ():Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\tlime_curl_global_cleanup ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function globalInit (flags:Int):CURLCode {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn cast lime_curl_global_init (flags);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function version ():String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn lime_curl_version ();\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function versionInfo (type:CURLVersion):Dynamic {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn lime_curl_version_info (cast (type, Int));\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:op(A > B) private static inline function intGt (a:CURL, b:Float):Bool {\n\t\t\n\t\treturn (a:Float) > b;\n\t\t\n\t}\n\t\n\t\n\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t@:cffi private static function lime_curl_getdate (date:String, now:Float):Float;\n\t@:cffi private static function lime_curl_global_cleanup ():Void;\n\t@:cffi private static function lime_curl_global_init (flags:Int):Int;\n\t@:cffi private static function lime_curl_version ():Dynamic;\n\t@:cffi private static function lime_curl_version_info (type:Int):Dynamic;\n\t#end\n\t\n\t\n}","package lime.net.curl;\n\n\nimport haxe.io.Bytes;\nimport lime.net.curl.CURL;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nclass CURLEasy {\n\t\n\t\n\tpublic static function cleanup (handle:CURL):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\tlime_curl_easy_cleanup (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function duphandle (handle:CURL):CURL {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn lime_curl_easy_duphandle (handle);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function escape (handle:CURL, url:String, length:Int):String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn lime_curl_easy_escape (handle, url, length);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getinfo (handle:CURL, info:CURLInfo):Dynamic {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn lime_curl_easy_getinfo (handle, cast (info, Int));\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function init ():CURL {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn lime_curl_easy_init ();\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function pause (handle:CURL, bitMask:Int):CURLCode {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn cast lime_curl_easy_pause (handle, bitMask);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function perform (handle:CURL):CURLCode {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn cast lime_curl_easy_perform (handle);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t/*public static function recv (handle:Dynamic):CURLCode {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn cast lime_curl_easy_perform (handle);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}*/\n\t\n\t\n\tpublic static function reset (handle:CURL):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\tlime_curl_easy_reset (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t/*public static function send (handle:Dynamic):CURLCode {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn cast lime_curl_easy_perform (handle);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}*/\n\t\n\t\n\tpublic static function setopt (handle:CURL, option:CURLOption, parameter:Dynamic):CURLCode {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\tif (option == CURLOption.WRITEFUNCTION || option == CURLOption.HEADERFUNCTION) {\n\t\t\t\n\t\t\tparameter = __writeCallback.bind (parameter);\n\t\t\t\n\t\t}\n\t\treturn cast lime_curl_easy_setopt (handle, cast (option, Int), parameter);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function strerror (code:CURLCode):String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn lime_curl_easy_strerror (cast (code, Int));\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function unescape (handle:CURL, url:String, inLength:Int, outLength:Int):String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\treturn lime_curl_easy_unescape (handle, url, inLength, outLength);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function __writeCallback (callback:Dynamic, output:Dynamic, size:Int, nmemb:Int):Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t\tvar bytes:Bytes = null;\n\t\t\n\t\tif (output != null) {\n\t\t\t\n\t\t\tbytes = @:privateAccess new Bytes (output.length, output.b);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn callback (bytes, size, nmemb);\n\t\t\n\t\t#else\n\t\t\n\t\treturn 0;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if ((cpp || neko || nodejs) && lime_curl && !macro)\n\t@:cffi private static function lime_curl_easy_cleanup (handle:Float):Void;\n\t@:cffi private static function lime_curl_easy_duphandle (handle:Float):Float;\n\t@:cffi private static function lime_curl_easy_escape (curl:Float, url:String, length:Int):Dynamic;\n\t@:cffi private static function lime_curl_easy_getinfo (curl:Float, info:Int):Dynamic;\n\t@:cffi private static function lime_curl_easy_init ():Float;\n\t@:cffi private static function lime_curl_easy_pause (handle:Float, bitmask:Int):Int;\n\t@:cffi private static function lime_curl_easy_perform (easy_handle:Float):Int;\n\t@:cffi private static function lime_curl_easy_recv (curl:Float, buffer:Dynamic, buflen:Int, n:Int):Int;\n\t@:cffi private static function lime_curl_easy_reset (curl:Float):Void;\n\t@:cffi private static function lime_curl_easy_send (curl:Float, buffer:Dynamic, buflen:Int, n:Int):Int;\n\t@:cffi private static function lime_curl_easy_setopt (handle:Float, option:Int, parameter:Dynamic):Int;\n\t@:cffi private static function lime_curl_easy_strerror (errornum:Int):Dynamic;\n\t@:cffi private static function lime_curl_easy_unescape (curl:Float, url:String, inlength:Int, outlength:Int):Dynamic;\n\t#end\n\t\n\t\n}","package lime.system;\n\n\nimport lime.app.Application;\nimport lime.app.Event;\n\n#if cpp\nimport cpp.vm.Deque;\nimport cpp.vm.Thread;\n#elseif neko\nimport neko.vm.Deque;\nimport neko.vm.Thread;\n#end\n\n\nclass BackgroundWorker {\n\t\n\t\n\tprivate static var MESSAGE_COMPLETE = \"__COMPLETE__\";\n\tprivate static var MESSAGE_ERROR = \"__ERROR__\";\n\t\n\tpublic var canceled (default, null):Bool;\n\tpublic var doWork = new Event<Dynamic->Void> ();\n\tpublic var onComplete = new Event<Dynamic->Void> ();\n\tpublic var onError = new Event<Dynamic->Void> ();\n\tpublic var onProgress = new Event<Dynamic->Void> ();\n\t\n\tprivate var __runMessage:Dynamic;\n\t\n\t#if (cpp || neko)\n\tprivate var __messageQueue:Deque<Dynamic>;\n\tprivate var __workerThread:Thread;\n\t#end\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function cancel ():Void {\n\t\t\n\t\tcanceled = true;\n\t\t\n\t\t#if (cpp || neko)\n\t\t\n\t\t__workerThread = null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function run (message:Dynamic = null):Void {\n\t\t\n\t\tcanceled = false;\n\t\t__runMessage = message;\n\t\t\n\t\t#if (cpp || neko)\n\t\t\n\t\t__messageQueue = new Deque<Dynamic> ();\n\t\t__workerThread = Thread.create (__doWork);\n\t\t\n\t\tApplication.current.onUpdate.add (__update);\n\t\t\n\t\t#else\n\t\t\n\t\t__doWork ();\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function sendComplete (message:Dynamic = null):Void {\n\t\t\n\t\t#if (cpp || neko)\n\t\t\n\t\t__messageQueue.add (MESSAGE_COMPLETE);\n\t\t__messageQueue.add (message);\n\t\t\n\t\t#else\n\t\t\n\t\tif (!canceled) {\n\t\t\t\n\t\t\tcanceled = true;\n\t\t\tonComplete.dispatch (message);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function sendError (message:Dynamic = null):Void {\n\t\t\n\t\t#if (cpp || neko)\n\t\t\n\t\t__messageQueue.add (MESSAGE_ERROR);\n\t\t__messageQueue.add (message);\n\t\t\n\t\t#else\n\t\t\n\t\tif (!canceled) {\n\t\t\t\n\t\t\tcanceled = true;\n\t\t\tonError.dispatch (message);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function sendProgress (message:Dynamic = null):Void {\n\t\t\n\t\t#if (cpp || neko)\n\t\t\n\t\t__messageQueue.add (message);\n\t\t\n\t\t#else\n\t\t\n\t\tif (!canceled) {\n\t\t\t\n\t\t\tonProgress.dispatch (message);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __doWork ():Void {\n\t\t\n\t\tdoWork.dispatch (__runMessage);\n\t\t\n\t\t//#if (cpp || neko)\n\t\t//\n\t\t//__messageQueue.add (MESSAGE_COMPLETE);\n\t\t//\n\t\t//#else\n\t\t//\n\t\t//if (!canceled) {\n\t\t\t//\n\t\t\t//canceled = true;\n\t\t\t//onComplete.dispatch (null);\n\t\t\t//\n\t\t//}\n\t\t//\n\t\t//#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __update (deltaTime:Int):Void {\n\t\t\n\t\t#if (cpp || neko)\n\t\t\n\t\tvar message = __messageQueue.pop (false);\n\t\t\n\t\tif (message != null) {\n\t\t\t\n\t\t\tif (message == MESSAGE_ERROR) {\n\t\t\t\t\n\t\t\t\tApplication.current.onUpdate.remove (__update);\n\t\t\t\t\n\t\t\t\tif (!canceled) {\n\t\t\t\t\t\n\t\t\t\t\tcanceled = true;\n\t\t\t\t\tonError.dispatch (__messageQueue.pop (false));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (message == MESSAGE_COMPLETE) {\n\t\t\t\t\n\t\t\t\tApplication.current.onUpdate.remove (__update);\n\t\t\t\t\n\t\t\t\tif (!canceled) {\n\t\t\t\t\t\n\t\t\t\t\tcanceled = true;\n\t\t\t\t\tonComplete.dispatch (__messageQueue.pop (false));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (!canceled) {\n\t\t\t\t\t\n\t\t\t\t\tonProgress.dispatch (message);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.system; #if !macro\n\n\n#if sys\nimport sys.io.Process;\n#end\n\n\nclass CFFI {\n\t\n\t\n\t@:noCompletion private static var __moduleNames:Map<String, String> = null;\n\t\n\t#if neko\n\tprivate static var __loadedNekoAPI:Bool;\n\t#elseif nodejs\n\tprivate static var __nodeNDLLModule:Dynamic;\n\t#end\n\t\n\tpublic static var available:Bool;\n\tpublic static var enabled:Bool;\n\t\n\t\n\tprivate static function __init__ ():Void {\n\t\t\n\t\t#if (cpp || neko || nodejs)\n\t\tavailable = true;\n\t\tenabled = #if disable_cffi false; #else true; #end\n\t\t#else\n\t\tavailable = false;\n\t\tenabled = false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Tries to load a native CFFI primitive on compatible platforms\n\t * @param\tlibrary\tThe name of the native library (such as \"lime\")\n\t * @param\tmethod\tThe exported primitive method name\n\t * @param\targs\tThe number of arguments\n\t * @param\tlazy\tWhether to load the symbol immediately, or to allow lazy loading\n\t * @return\tThe loaded method\n\t */\n\tpublic static function load (library:String, method:String, args:Int = 0, lazy:Bool = false):Dynamic {\n\t\t\n\t\t#if (disable_cffi || macro)\n\t\tvar enabled = false;\n\t\t#end\n\t\t\n\t\t#if optional_cffi\n\t\tif (library != \"lime\" || method != \"neko_init\") {\n\t\t\t\n\t\t\tlazy = true;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tif (!enabled) {\n\t\t\t\n\t\t\treturn Reflect.makeVarArgs (function (__) return {});\n\t\t\t\n\t\t}\n\t\t\n\t\tvar result:Dynamic = null;\n\t\t\n\t\t#if (!disable_cffi && !macro)\n\t\t#if (sys && !html5)\n\t\t\n\t\tif (__moduleNames == null) __moduleNames = new Map<String, String> ();\n\t\t\n\t\tif (lazy) {\n\t\t\t\n\t\t\t__moduleNames.set (library, library);\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\t#if lime_legacy\n\t\t\t\tif (library == \"lime\") return null;\n\t\t\t\t#elseif !lime_hybrid\n\t\t\t\tif (library == \"lime-legacy\") return null;\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\t#if neko\n\t\t\t\tresult = neko.Lib.loadLazy (library, method, args);\n\t\t\t\t#elseif cpp\n\t\t\t\tresult = cpp.Lib.loadLazy (library, method, args);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) {}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if (iphone || emscripten || android || static_link || tvos)\n\t\t\treturn cpp.Lib.load (library, method, args);\n\t\t\t#end\n\t\t\t\n\t\t\t\n\t\t\tif (__moduleNames.exists (library)) {\n\t\t\t\t\n\t\t\t\t#if cpp\n\t\t\t\treturn cpp.Lib.load (__moduleNames.get (library), method, args);\n\t\t\t\t#elseif neko\n\t\t\t\treturn neko.Lib.load (__moduleNames.get (library), method, args);\n\t\t\t\t#elseif nodejs\n\t\t\t\treturn untyped __nodeNDLLModule.load_lib (__moduleNames.get (library), method, args);\n\t\t\t\t#else\n\t\t\t\treturn null;\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#if waxe\n\t\t\tif (library == \"lime\") {\n\t\t\t\t\n\t\t\t\tflash.Lib.load (\"waxe\", \"wx_boot\", 1);\n\t\t\t\t\n\t\t\t}\n\t\t\t#elseif nodejs\n\t\t\tif (__nodeNDLLModule == null) {\n\t\t\t\t\n\t\t\t\t__nodeNDLLModule = untyped require('ndll');\n\t\t\t\t\n\t\t\t}\n\t\t\t#end\n\t\t\t\n\t\t\t__moduleNames.set (library, library);\n\t\t\t\n\t\t\tresult = __tryLoad (\"./\" + library, library, method, args);\n\t\t\t\n\t\t\tif (result == null) {\n\t\t\t\t\n\t\t\t\tresult = __tryLoad (\".\\\\\" + library, library, method, args);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (result == null) {\n\t\t\t\t\n\t\t\t\tresult = __tryLoad (library, library, method, args);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (result == null) {\n\t\t\t\t\n\t\t\t\tvar slash = (__sysName ().substr (7).toLowerCase () == \"windows\") ? \"\\\\\" : \"/\";\n\t\t\t\tvar haxelib = __findHaxelib (\"lime\");\n\t\t\t\t\n\t\t\t\tif (haxelib != \"\") {\n\t\t\t\t\t\n\t\t\t\t\tresult = __tryLoad (haxelib + slash + \"ndll\" + slash + __sysName () + slash + library, library, method, args);\n\t\t\t\t\t\n\t\t\t\t\tif (result == null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tresult = __tryLoad (haxelib + slash + \"ndll\" + slash + __sysName() + \"64\" + slash + library, library, method, args);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__loaderTrace (\"Result : \" + result);\n\t\t\t\n\t\t}\n\t\t\n\t\t#if neko\n\t\tif (library == \"lime\" && method != \"neko_init\") {\n\t\t\t\n\t\t\t__loadNekoAPI (lazy);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\t#end\n\t\t#else\n\t\t\n\t\tresult = function (_, _, _, _, _, _) { return { }; };\n\t\t\n\t\t#end\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\t\n\t\n\tpublic static macro function loadPrime (library:String, method:String, signature:String, lazy:Bool = false):Dynamic {\n\t\t\n\t\t#if ((haxe_ver >= 3.2) && !display)\n\t\treturn cpp.Prime.load (library, method, signature, lazy);\n\t\t#else\n\t\tvar args = signature.length - 1;\n\t\t\n\t\tif (args > 5) {\n\t\t\t\n\t\t\targs = -1;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn { call: CFFI.load (library, method, args, lazy) };\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function __findHaxelib (library:String):String {\n\t\t\n\t\t#if (sys && !html5)\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tvar proc = new Process (\"haxelib\", [ \"path\", library ]);\n\t\t\t\t\n\t\t\t\tif (proc != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar stream = proc.stdout;\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar s = stream.readLine ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (s.substr (0, 1) != \"-\") {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstream.close ();\n\t\t\t\t\t\t\t\tproc.close ();\n\t\t\t\t\t\t\t\t__loaderTrace (\"Found haxelib \" + s);\n\t\t\t\t\t\t\t\treturn s;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} catch(e:Dynamic) { }\n\t\t\t\t\t\n\t\t\t\t\tstream.close ();\n\t\t\t\t\tproc.close ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) { }\n\t\t\t\n\t\t#end\n\t\t\n\t\treturn \"\";\n\t\t\n\t}\n\t\n\t\n\tprivate static function __loaderTrace (message:String) {\n\t\t\n\t\t#if (sys && !html5)\n\t\t#if cpp\n\t\tvar get_env = cpp.Lib.load (\"std\", \"get_env\", 1);\n\t\tvar debug = (get_env (\"OPENFL_LOAD_DEBUG\") != null);\n\t\t#else\n\t\tvar debug = (Sys.getEnv (\"OPENFL_LOAD_DEBUG\") !=null);\n\t\t#end\n\t\t\n\t\tif (debug) {\n\t\t\t\n\t\t\tSys.println (message);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if neko\n\tprivate static function __loadNekoAPI (lazy:Bool):Void {\n\t\t\n\t\tif (!__loadedNekoAPI) {\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tvar init = load (\"lime\", \"neko_init\", 5);\n\t\t\t\t\n\t\t\t\tif (init != null) {\n\t\t\t\t\t\n\t\t\t\t\t__loaderTrace (\"Found nekoapi @ \" + __moduleNames.get (\"lime\"));\n\t\t\t\t\tinit (function(s) return new String (s), function (len:Int) { var r = []; if (len > 0) r[len - 1] = null; return r; }, null, true, false);\n\t\t\t\t\t\n\t\t\t\t} else if (!lazy) {\n\t\t\t\t\t\n\t\t\t\t\tthrow (\"Could not find NekoAPI interface.\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#if lime_hybrid\n\t\t\t\tvar init = load (\"lime-legacy\", \"neko_init\", 5);\n\t\t\t\t\n\t\t\t\tif (init != null) {\n\t\t\t\t\t\n\t\t\t\t\t__loaderTrace (\"Found nekoapi @ \" + __moduleNames.get (\"lime-legacy\"));\n\t\t\t\t\tinit (function(s) return new String (s), function (len:Int) { var r = []; if (len > 0) r[len - 1] = null; return r; }, null, true, false);\n\t\t\t\t\t\n\t\t\t\t} else if (!lazy) {\n\t\t\t\t\t\n\t\t\t\t\tthrow (\"Could not find NekoAPI interface.\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\n\t\t\t\tif (!lazy) {\n\t\t\t\t\t\n\t\t\t\t\tthrow (\"Could not find NekoAPI interface.\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__loadedNekoAPI = true;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t#end\n\t\n\t\n\tprivate static function __sysName ():String {\n\t\t\n\t\t#if (sys && !html5)\n\t\t#if cpp\n\t\tvar sys_string = cpp.Lib.load (\"std\", \"sys_string\", 0);\n\t\treturn sys_string ();\n\t\t#else\n\t\treturn Sys.systemName ();\n\t\t#end\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function __tryLoad (name:String, library:String, func:String, args:Int):Dynamic {\n\t\t\n\t\t#if sys\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t#if cpp\n\t\t\tvar result = cpp.Lib.load (name, func, args);\n\t\t\t#elseif (neko)\n\t\t\tvar result = neko.Lib.load (name, func, args);\n\t\t\t#elseif nodejs\n\t\t\tvar result = untyped __nodeNDLLModule.load_lib (name, func, args);\n\t\t\t#else\n\t\t\tvar result = null;\n\t\t\t#end\n\t\t\t\n\t\t\tif (result != null) {\n\t\t\t\t\n\t\t\t\t__loaderTrace (\"Got result \" + name);\n\t\t\t\t__moduleNames.set (library, name);\n\t\t\t\treturn result;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__loaderTrace (\"Failed to load : \" + name);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\n\n\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\n\nusing haxe.macro.ComplexTypeTools;\nusing haxe.macro.ExprTools;\nusing haxe.macro.TypeTools;\n\n\nclass CFFI {\n\t\n\t\n\tpublic static function build (defaultLibrary:String = \"lime\"):Array<Field> {\n\t\t\n\t\tvar pos = Context.currentPos ();\n\t\tvar fields = Context.getBuildFields ();\n\t\tvar newFields:Array<Field> = [];\n\t\t\n\t\tfor (field in fields) {\n\t\t\t\n\t\t\tswitch (field) {\n\t\t\t\t\n\t\t\t\tcase _ => { kind: FFun (fun), meta: meta } :\n\t\t\t\t\t\n\t\t\t\t\tfor (m in meta) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (m.name == \":cffi\") {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar library = null;\n\t\t\t\t\t\t\tvar method = null;\n\t\t\t\t\t\t\tvar lazy = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (Reflect.hasField (m, \"params\")) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (m.params.length > 0) library = m.params[0].getValue ();\n\t\t\t\t\t\t\t\tif (m.params.length > 1) method = m.params[1].getValue ();\n\t\t\t\t\t\t\t\tif (m.params.length > 2) lazy = m.params[2].getValue ();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (library == null || library == \"\") {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlibrary = defaultLibrary;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (method == null || method == \"\") {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tmethod = field.name;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar typeArgs = [];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (arg in fun.args) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttypeArgs.push ( { name: arg.name, opt: false, t: arg.type.toType () } );\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar type = __getFunctionType (typeArgs, fun.ret.toType ());\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar typeString = type.string;\n\t\t\t\t\t\t\tvar typeSignature = type.signature;\n\t\t\t\t\t\t\tvar expr = \"\";\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (Context.defined (\"display\") || Context.defined (\"disable_cffi\")) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tswitch (type.result.toString ()) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcase \"Int\", \"Float\":\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\texpr += \"return 0\";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcase \"Bool\":\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\texpr += \"return false\";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\texpr += \"return null\";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar cffiName = \"cffi_\" + field.name;\n\t\t\t\t\t\t\t\tvar cffiExpr, cffiType;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t#if (haxe_ver >= 3.2)\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (Context.defined (\"cpp\")) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcffiExpr = 'new cpp.Callable<$typeString> (cpp.Prime._loadPrime (\"$library\", \"$method\", \"$typeSignature\", $lazy))';\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar args = typeSignature.length - 1;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (args > 5) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\targs = -1;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcffiExpr = 'new cpp.Callable<$typeString> (lime.system.CFFI.load (\"$library\", \"$method\", $args, $lazy))';\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcffiType = TPath ( { pack: [ \"cpp\" ], name: \"Callable\", params: [ TPType (TFun (type.args, type.result).toComplexType ()) ] } );\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar args = typeSignature.length - 1;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (args > 5) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\targs = -1;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcffiExpr = 'lime.system.CFFI.load (\"$library\", \"$method\", $args, $lazy)';\n\t\t\t\t\t\t\t\tcffiType = TPath ( { pack: [ ], name: \"Dynamic\" } );\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t#end\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tnewFields.push ( { name: cffiName, access: [ APrivate, AStatic ], kind: FieldType.FVar (cffiType, Context.parse (cffiExpr, field.pos)), pos: field.pos } );\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (type.result.toString () != \"Void\" && type.result.toString () != \"cpp.Void\") {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\texpr += \"return \";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t#if (haxe_ver >= 3.2)\n\t\t\t\t\t\t\t\texpr += '$cffiName.call (';\n\t\t\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\texpr += '$cffiName (';\n\t\t\t\t\t\t\t\t#end\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor (i in 0...type.args.length) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (i > 0) expr += \", \";\n\t\t\t\t\t\t\t\t\texpr += type.args[i].name;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\texpr += \")\";\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfield.access.push (AInline);\n\t\t\t\t\t\t\tfun.expr = Context.parse (expr, field.pos);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfields = fields.concat (newFields);\n\t\treturn fields;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __getFunctionType (args:Array<{ name : String, opt : Bool, t : Type }>, result:Type) {\n\t\t\n\t\t#if ((haxe_ver >= 3.2) && !disable_cffi && !display)\n\t\tvar useCPPTypes = Context.defined (\"cpp\");\n\t\t#else\n\t\tvar useCPPTypes = false;\n\t\t#end\n\t\t\n\t\tvar typeArgs = [];\n\t\tvar typeResult = null;\n\t\tvar typeSignature = \"\";\n\t\t\n\t\tfor (arg in args) {\n\t\t\t\n\t\t\tswitch (arg.t.toString ()) {\n\t\t\t\t\n\t\t\t\tcase \"Int\", \"cpp.Int16\", \"cpp.Int32\":\n\t\t\t\t\t\n\t\t\t\t\ttypeArgs.push (arg);\n\t\t\t\t\ttypeSignature += \"i\";\n\t\t\t\t\n\t\t\t\tcase \"Bool\":\n\t\t\t\t\t\n\t\t\t\t\ttypeArgs.push (arg);\n\t\t\t\t\ttypeSignature += \"b\";\n\t\t\t\t\n\t\t\t\tcase \"cpp.Float32\":\n\t\t\t\t\t\n\t\t\t\t\tif (useCPPTypes) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttypeArgs.push ( { name: arg.name, opt: false, t: (macro :cpp.Float32).toType () } );\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttypeArgs.push (arg);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttypeSignature += \"f\";\n\t\t\t\t\n\t\t\t\tcase \"Float\", \"cpp.Float64\":\n\t\t\t\t\t\n\t\t\t\t\ttypeArgs.push (arg);\n\t\t\t\t\ttypeSignature += \"d\";\n\t\t\t\t\n\t\t\t\tcase \"String\":\n\t\t\t\t\t\n\t\t\t\t\ttypeArgs.push (arg);\n\t\t\t\t\ttypeSignature += \"s\";\n\t\t\t\t\n\t\t\t\tcase \"cpp.ConstCharStar\":\n\t\t\t\t\t\n\t\t\t\t\ttypeArgs.push (arg);\n\t\t\t\t\ttypeSignature += \"c\";\n\t\t\t\t\n\t\t\t\tcase \"Void\", \"cpp.Void\":\n\t\t\t\t\t\n\t\t\t\t\tif (useCPPTypes) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttypeArgs.push ( { name: arg.name, opt: false, t: (macro :cpp.Void).toType () } );\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttypeArgs.push (arg);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttypeSignature += \"v\";\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\tif (useCPPTypes) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttypeArgs.push ( { name: arg.name, opt: false, t: (macro :cpp.Object).toType () } );\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttypeArgs.push ( { name: arg.name, opt: false, t: (macro :Dynamic).toType () } );\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttypeSignature += \"o\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (result.toString ()) {\n\t\t\t\n\t\t\tcase \"Int\", \"cpp.Int16\", \"cpp.Int32\":\n\t\t\t\t\n\t\t\t\ttypeResult = result;\n\t\t\t\ttypeSignature += \"i\";\n\t\t\t\n\t\t\tcase \"Bool\":\n\t\t\t\t\n\t\t\t\ttypeResult = result;\n\t\t\t\ttypeSignature += \"b\";\n\t\t\t\n\t\t\tcase \"cpp.Float32\":\n\t\t\t\t\n\t\t\t\tif (useCPPTypes) {\n\t\t\t\t\t\n\t\t\t\t\ttypeResult = (macro :cpp.Float32).toType ();\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttypeResult = result;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttypeSignature += \"f\";\n\t\t\t\n\t\t\tcase \"Float\", \"cpp.Float64\":\n\t\t\t\t\n\t\t\t\ttypeResult = result;\n\t\t\t\ttypeSignature += \"d\";\n\t\t\t\n\t\t\tcase \"String\":\n\t\t\t\t\n\t\t\t\ttypeResult = result;\n\t\t\t\ttypeSignature += \"s\";\n\t\t\t\n\t\t\tcase \"cpp.ConstCharStar\":\n\t\t\t\t\n\t\t\t\ttypeResult = result;\n\t\t\t\ttypeSignature += \"c\";\n\t\t\t\n\t\t\tcase \"Void\", \"cpp.Void\":\n\t\t\t\t\n\t\t\t\tif (useCPPTypes) {\n\t\t\t\t\t\n\t\t\t\t\ttypeResult = (macro :cpp.Void).toType ();\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttypeResult = result;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttypeSignature += \"v\";\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tif (useCPPTypes) {\n\t\t\t\t\t\n\t\t\t\t\ttypeResult = (macro :cpp.Object).toType ();\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttypeResult = (macro :Dynamic).toType ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttypeSignature += \"o\";\n\t\t\t\n\t\t}\n\t\t\n\t\tvar typeString = \"\";\n\t\t\n\t\tif (typeArgs.length == 0) {\n\t\t\t\n\t\t\ttypeString = \"Void->\";\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfor (arg in typeArgs) {\n\t\t\t\t\n\t\t\t\ttypeString += arg.t.toString () + \"->\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\ttypeString += typeResult.toString ();\n\t\t\n\t\treturn { args: typeArgs, result: typeResult, string: typeString, signature: typeSignature };\n\t\t\n\t}\n\t\n\t\n}\n\n\n#end","package lime.system;\n\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\nabstract CFFIPointer(Dynamic) from Dynamic to Dynamic {\n\t\n\t\n\tpublic inline function new (handle:Dynamic) {\n\t\t\n\t\tthis = handle;\n\t\t\n\t}\n\t\n\t\n\tpublic function get ():Float {\n\t\t\n\t\tif (this != null) {\n\t\t\t\n\t\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\t\treturn lime_cffi_get_native_pointer (this);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:op(A == B) private static inline function equals (a:CFFIPointer, b:Int):Bool { return a.get () == b; }\n\t@:noCompletion @:op(A == B) private static inline function equalsPointer (a:CFFIPointer, b:CFFIPointer):Bool { return a.get () == b.get (); }\n\t@:noCompletion @:op(A > B) private static inline function greaterThan (a:CFFIPointer, b:Int):Bool { return a.get () > b; }\n\t@:noCompletion @:op(A > B) private static inline function greaterThanPointer (a:CFFIPointer, b:CFFIPointer):Bool { return a.get () > b.get (); }\n\t@:noCompletion @:op(A >= B) private static inline function greaterThanOrEqual (a:CFFIPointer, b:Int):Bool { return a.get () >= b; }\n\t@:noCompletion @:op(A >= B) private static inline function greaterThanOrEqualPointer (a:CFFIPointer, b:CFFIPointer):Bool { return a.get () >= b.get (); }\n\t@:noCompletion @:op(A < B) private static inline function lessThan (a:CFFIPointer, b:Int):Bool { return a.get () < b; }\n\t@:noCompletion @:op(A < B) private static inline function lessThanPointer (a:CFFIPointer, b:CFFIPointer):Bool { return a.get () < b.get (); }\n\t@:noCompletion @:op(A <= B) private static inline function lessThanOrEqual (a:CFFIPointer, b:Int):Bool { return a.get () <= b; }\n\t@:noCompletion @:op(A <= B) private static inline function lessThanOrEqualPointer (a:CFFIPointer, b:CFFIPointer):Bool { return a.get () <= b.get (); }\n\t@:noCompletion @:op(A != B) private static inline function notEquals (a:CFFIPointer, b:Int):Bool { return a.get () != b; }\n\t@:noCompletion @:op(A != B) private static inline function notEqualsPointer (a:CFFIPointer, b:CFFIPointer):Bool { return a.get () != b.get (); }\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_cffi_get_native_pointer (ptr:Dynamic):Float;\n\t#end\n\t\n\t\n}","package lime.system;\n\n\n#if flash\nimport flash.desktop.Clipboard in FlashClipboard;\n#end\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nclass Clipboard {\n\t\n\t\n\tpublic static var text (get, set):String;\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate static function get_text ():String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_clipboard_get_text ();\n\t\t#elseif flash\n\t\tif (FlashClipboard.generalClipboard.hasFormat (TEXT_FORMAT)) {\n\t\t\t\n\t\t\treturn FlashClipboard.generalClipboard.getData (TEXT_FORMAT);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate static function set_text (value:String):String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\tlime_clipboard_set_text (value);\n\t\treturn value;\n\t\t#elseif flash\n\t\tFlashClipboard.generalClipboard.setData (TEXT_FORMAT, value);\n\t\treturn value;\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_clipboard_get_text ():Dynamic;\n\t@:cffi private static function lime_clipboard_set_text (text:String):Void;\n\t#end\n\t\n\t\n}","package lime.system;\n\n\nimport lime.math.Rectangle;\n\n\nclass Display {\n\t\n\t\n\t/**\n\t * The desktop area represented by this display, with the upper-leftmost display at 0,0\n\t **/\n\tpublic var bounds (default, null):Rectangle;\n\t\n\t/**\n\t * The current display mode\n\t **/\n\tpublic var currentMode (default, null):DisplayMode;\n\t\n\tpublic var id (default, null):Int;\n\t\n\t/**\n\t * Pixel density of the display\n\t */\n\tpublic var dpi (default, null):Float;\n\t\n\t/**\n\t * The name of the device, such as \"Samsung SyncMaster P2350\", \"iPhone 6\", \"Occulus Rift DK2\", etc.\n\t **/\n\tpublic var name (default, null):String;\n\t\n\t/**\n\t * All of the display modes supported by this device\n\t **/\n\tpublic var supportedModes (default, null):Array<DisplayMode>;\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package lime.system;\n\n\nimport lime.graphics.PixelFormat;\n\n\nclass DisplayMode {\n\t\n\t\n\t/**\n\t * vertical resolution\n\t **/\n\tpublic var height (default, null):Int;\n\t\n\t/**\n\t * pixel format\n\t **/\n\tpublic var pixelFormat (default, null):PixelFormat;\n\t\n\t/**\n\t * refresh rate in Hz\n\t **/\n\tpublic var refreshRate (default, null):Int;\n\t\n\t/**\n\t * horizontal resolution\n\t **/\n\tpublic var width (default, null):Int;\n\t\n\t\n\tprivate function new (width:Int, height:Int, refreshRate:Int, pixelFormat:PixelFormat) {\n\t\t\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.refreshRate = refreshRate;\n\t\tthis.pixelFormat = pixelFormat;\n\t\t\n\t}\n\t\n\t\n}","package lime.system;\n\n\nimport lime.app.Application;\nimport lime.math.Rectangle;\n\n#if flash\nimport flash.system.Capabilities;\nimport flash.Lib;\n#end\n\n#if (js && html5)\n#if (haxe_ver >= \"3.2\")\nimport js.html.Element;\n#else\nimport js.html.HtmlElement;\n#end\nimport js.Browser;\n#end\n\n#if (sys && !html5)\nimport sys.io.Process;\n#end\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n@:access(lime.system.Display)\n@:access(lime.system.DisplayMode)\n\n\nclass System {\n\t\n\t\n\tpublic static var allowScreenTimeout (get, set):Bool;\n\tpublic static var applicationDirectory (get, null):String;\n\tpublic static var applicationStorageDirectory (get, null):String;\n\tpublic static var desktopDirectory (get, null):String;\n\tpublic static var disableCFFI:Bool;\n\tpublic static var documentsDirectory (get, null):String;\n\tpublic static var endianness (get, null):Endian;\n\tpublic static var fontsDirectory (get, null):String;\n\tpublic static var numDisplays (get, null):Int;\n\tpublic static var userDirectory (get, null):String;\n\t\n\t\n\t#if (js && html5)\n\t@:keep @:expose(\"lime.embed\")\n\tpublic static function embed (element:Dynamic, width:Null<Int> = null, height:Null<Int> = null, background:String = null, assetsPrefix:String = null) {\n\t\t\n\t\tvar htmlElement:#if (haxe_ver >= \"3.2\") Element #else HtmlElement #end = null;\n\t\t\n\t\tif (Std.is (element, String)) {\n\t\t\t\n\t\t\thtmlElement = cast Browser.document.getElementById (cast (element, String));\n\t\t\t\n\t\t} else if (element == null) {\n\t\t\t\n\t\t\thtmlElement = cast Browser.document.createElement (\"div\");\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\thtmlElement = cast element;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar color = null;\n\t\t\n\t\tif (background != null) {\n\t\t\t\n\t\t\tbackground = StringTools.replace (background, \"#\", \"\");\n\t\t\t\n\t\t\tif (background.indexOf (\"0x\") > -1) {\n\t\t\t\t\n\t\t\t\tcolor = Std.parseInt (background);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcolor = Std.parseInt (\"0x\" + background);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (width == null) {\n\t\t\t\n\t\t\twidth = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (height == null) {\n\t\t\t\n\t\t\theight = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if tools\n\t\tApplicationMain.config.windows[0].background = color;\n\t\tApplicationMain.config.windows[0].element = htmlElement;\n\t\tApplicationMain.config.windows[0].width = width;\n\t\tApplicationMain.config.windows[0].height = height;\n\t\tApplicationMain.config.assetsPrefix = assetsPrefix;\n\t\tApplicationMain.create ();\n\t\t#end\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static function exit (code:Int):Void {\n\t\t\n\t\t#if android\n\t\t\n\t\tif (code == 0) {\n\t\t\t\n\t\t\tvar mainActivity = JNI.createStaticField (\"org/haxe/extension/Extension\", \"mainActivity\", \"Landroid/app/Activity;\");\n\t\t\tvar moveTaskToBack = JNI.createMemberMethod (\"android/app/Activity\", \"moveTaskToBack\", \"(Z)Z\");\n\t\t\t\n\t\t\tmoveTaskToBack (mainActivity.get (), true);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\t#if (sys && !macro)\n\t\t\n\t\tif (Application.current != null) {\n\t\t\t\n\t\t\t// TODO: Clean exit?\n\t\t\t\n\t\t\tApplication.current.onExit.dispatch (code);\n\t\t\t\n\t\t\tif (Application.current.onExit.canceled) {\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tSys.exit (code);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getDisplay (id:Int):Display {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\tvar displayInfo:Dynamic = lime_system_get_display (id);\n\t\t\n\t\tif (displayInfo != null) {\n\t\t\t\n\t\t\tvar display = new Display ();\n\t\t\tdisplay.id = id;\n\t\t\tdisplay.name = displayInfo.name;\n\t\t\tdisplay.bounds = new Rectangle (displayInfo.bounds.x, displayInfo.bounds.y, displayInfo.bounds.width, displayInfo.bounds.height);\n\t\t\tdisplay.dpi = displayInfo.dpi;\n\t\t\t\n\t\t\tdisplay.supportedModes = [];\n\t\t\t\n\t\t\tvar displayMode;\n\t\t\t\n\t\t\tfor (mode in cast (displayInfo.supportedModes, Array<Dynamic>)) {\n\t\t\t\t\n\t\t\t\tdisplayMode = new DisplayMode (mode.width, mode.height, mode.refreshRate, mode.pixelFormat);\n\t\t\t\tdisplay.supportedModes.push (displayMode);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tdisplay.currentMode = display.supportedModes[displayInfo.currentMode];\n\t\t\t\n\t\t\treturn display;\n\t\t\t\n\t\t}\n\t\t#elseif (flash || html5)\n\t\tif (id == 0) {\n\t\t\t\n\t\t\tvar display = new Display ();\n\t\t\tdisplay.id = 0;\n\t\t\tdisplay.name = \"Generic Display\";\n\t\t\t\n\t\t\t#if flash\n\t\t\tdisplay.dpi = Capabilities.screenDPI;\n\t\t\tdisplay.currentMode = new DisplayMode (Std.int (Capabilities.screenResolutionX), Std.int (Capabilities.screenResolutionY), 60, ARGB32);\n\t\t\t#else\n\t\t\tdisplay.dpi = 96; // TODO: Detect DPI on HTML5\n\t\t\tdisplay.currentMode = new DisplayMode (Browser.window.screen.width, Browser.window.screen.height, 60, ARGB32);\n\t\t\t#end\n\t\t\t\n\t\t\tdisplay.supportedModes = [ display.currentMode ];\n\t\t\tdisplay.bounds = new Rectangle (0, 0, display.currentMode.width, display.currentMode.height);\n\t\t\treturn display;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getTimer ():Int {\n\t\t\n\t\t#if flash\n\t\treturn flash.Lib.getTimer ();\n\t\t#elseif js\n\t\treturn cast Date.now ().getTime ();\n\t\t#elseif (!disable_cffi && !macro)\n\t\treturn cast lime_system_get_timer ();\n\t\t#elseif cpp\n\t\treturn Std.int (untyped __global__.__time_stamp () * 1000);\n\t\t#elseif sys\n\t\treturn Std.int (Sys.time () * 1000);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function load (library:String, method:String, args:Int = 0, lazy:Bool = false):Dynamic {\n\t\t\n\t\t#if !macro\n\t\treturn CFFI.load (library, method, args, lazy);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate static function get_allowScreenTimeout ():Bool {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_system_get_allow_screen_timeout ();\n\t\t#else\n\t\treturn true;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function set_allowScreenTimeout (value:Bool):Bool {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_system_set_allow_screen_timeout (value);\n\t\t#else\n\t\treturn true;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_applicationDirectory ():String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_system_get_directory (SystemDirectory.APPLICATION, null, null);\n\t\t#elseif flash\n\t\tif (Capabilities.playerType == \"Desktop\") {\n\t\t\t\n\t\t\treturn Reflect.getProperty (Type.resolveClass (\"flash.filesystem.File\"), \"applicationDirectory\").nativePath;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_applicationStorageDirectory ():String {\n\t\t\n\t\tvar company = \"MyCompany\";\n\t\tvar file = \"MyApplication\";\n\t\t\n\t\tif (Application.current != null && Application.current.config != null) {\n\t\t\t\n\t\t\tif (Application.current.config.company != null) {\n\t\t\t\t\n\t\t\t\tcompany = Application.current.config.company;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (Application.current.config.file != null) {\n\t\t\t\t\n\t\t\t\tfile = Application.current.config.file;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_system_get_directory (SystemDirectory.APPLICATION_STORAGE, company, file);\n\t\t#elseif flash\n\t\tif (Capabilities.playerType == \"Desktop\") {\n\t\t\t\n\t\t\treturn Reflect.getProperty (Type.resolveClass (\"flash.filesystem.File\"), \"applicationStorageDirectory\").nativePath;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_desktopDirectory ():String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_system_get_directory (SystemDirectory.DESKTOP, null, null);\n\t\t#elseif flash\n\t\tif (Capabilities.playerType == \"Desktop\") {\n\t\t\t\n\t\t\treturn Reflect.getProperty (Type.resolveClass (\"flash.filesystem.File\"), \"desktopDirectory\").nativePath;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_documentsDirectory ():String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_system_get_directory (SystemDirectory.DOCUMENTS, null, null);\n\t\t#elseif flash\n\t\tif (Capabilities.playerType == \"Desktop\") {\n\t\t\t\n\t\t\treturn Reflect.getProperty (Type.resolveClass (\"flash.filesystem.File\"), \"documentsDirectory\").nativePath;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_fontsDirectory ():String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_system_get_directory (SystemDirectory.FONTS, null, null);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_numDisplays ():Int {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_system_get_num_displays ();\n\t\t#else\n\t\treturn 1;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_userDirectory ():String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\treturn lime_system_get_directory (SystemDirectory.USER, null, null);\n\t\t#elseif flash\n\t\tif (Capabilities.playerType == \"Desktop\") {\n\t\t\t\n\t\t\treturn Reflect.getProperty (Type.resolveClass (\"flash.filesystem.File\"), \"userDirectory\").nativePath;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_endianness ():Endian {\n\t\t\n\t\t// TODO: Make this smarter\n\t\t\n\t\t#if (ps3 || wiiu)\n\t\treturn BIG_ENDIAN;\n\t\t#else\n\t\treturn LITTLE_ENDIAN;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_system_get_allow_screen_timeout ():Bool;\n\t@:cffi private static function lime_system_set_allow_screen_timeout (value:Bool):Bool;\n\t@:cffi private static function lime_system_get_directory (type:Int, company:String, title:String):Dynamic;\n\t@:cffi private static function lime_system_get_display (index:Int):Dynamic;\n\t@:cffi private static function lime_system_get_num_displays ():Int;\n\t@:cffi private static function lime_system_get_timer ():Float;\n\t#end\n\t\n\t\n}\n\n\n@:enum private abstract SystemDirectory(Int) from Int to Int from UInt to UInt {\n\t\n\tvar APPLICATION = 0;\n\tvar APPLICATION_STORAGE = 1;\n\tvar DESKTOP = 2;\n\tvar DOCUMENTS = 3;\n\tvar FONTS = 4;\n\tvar USER = 5;\n\t\n}","package lime.text;\n\n\nabstract Glyph(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tpublic function new (i:Int) {\n\t\t\n\t\tthis = i;\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package lime.text;\n\n\nimport lime.math.Vector2;\n\n\nclass GlyphMetrics {\n\t\n\t\n\tpublic var advance:Vector2;\n\tpublic var height:Int;\n\tpublic var horizontalBearing:Vector2;\n\tpublic var verticalBearing:Vector2;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package lime.text;\n\n\nimport lime.math.Vector2;\n\n\nclass GlyphPosition {\n\t\n\t\n\tpublic var advance:Vector2;\n\tpublic var glyph:Glyph;\n\tpublic var offset:Vector2;\n\t\n\t\n\tpublic function new (glyph:Glyph, advance:Vector2, offset:Vector2 = null) {\n\t\t\n\t\tthis.glyph = glyph;\n\t\tthis.advance = advance;\n\t\t\n\t\tif (offset != null) {\n\t\t\t\n\t\t\tthis.offset = offset;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis.offset = new Vector2 ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package lime.text;\n\n\n@:enum abstract TextDirection(Int) to (Int) {\n\t\n\t\n\tvar INVALID = 0;\n\tvar LEFT_TO_RIGHT = 4;\n\tvar RIGHT_TO_LEFT = 5;\n\tvar TOP_TO_BOTTOM = 6;\n\tvar BOTTOM_TO_TOP = 7;\n\t\n\t\n\tpublic var backward (get, never):Bool;\n\tpublic var forward (get, never):Bool;\n\tpublic var horizontal (get, never):Bool;\n\tpublic var vertical (get, never):Bool;\n\t\n\t\n\tpublic inline function reverse ():Void {\n\t\t\n\t\tthis = this ^ 1;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toString ():String {\n\t\t\n\t\treturn switch (this) {\n\t\t\t\n\t\t\tcase LEFT_TO_RIGHT: \"leftToRight\";\n\t\t\tcase RIGHT_TO_LEFT: \"rightToLeft\";\n\t\t\tcase TOP_TO_BOTTOM: \"topToBottom\";\n\t\t\tcase BOTTOM_TO_TOP: \"bottomToTop\";\n\t\t\tdefault: \"\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_backward ():Bool {\n\t\t\n\t\treturn (this & ~2) == 5;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_forward ():Bool {\n\t\t\n\t\treturn (this & ~2) == 4;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_horizontal ():Bool {\n\t\t\n\t\treturn (this & ~1) == 4;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_vertical ():Bool {\n\t\t\n\t\treturn (this & ~1) == 6;\n\t\t\n\t}\n\t\n\t\n}","package lime.text;\n\n\nimport haxe.io.Bytes;\nimport lime.math.Vector2;\nimport lime.system.System;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n@:access(lime.text.Font)\n\n\nclass TextLayout {\n\t\n\t\n\tpublic var direction (get, set):TextDirection;\n\tpublic var font (default, set):Font;\n\tpublic var glyphs (get, null):Array<Glyph>;\n\tpublic var language (get, set):String;\n\t @:isVar public var positions (get, null):Array<GlyphPosition>;\n\tpublic var script (get, set):TextScript;\n\tpublic var size (default, set):Int;\n\tpublic var text (default, set):String;\n\t\n\tprivate var __dirty:Bool;\n\t\n\t@:noCompletion private var __buffer:Bytes;\n\t@:noCompletion private var __direction:TextDirection;\n\t@:noCompletion private var __handle:Dynamic;\n\t@:noCompletion private var __language:String;\n\t@:noCompletion private var __script:TextScript;\n\t\n\t\n\tpublic function new (text:String = \"\", font:Font = null, size:Int = 12, direction:TextDirection = LEFT_TO_RIGHT, script:TextScript = COMMON, language:String = \"en\") {\n\t\t\n\t\tthis.text = text;\n\t\tthis.font = font;\n\t\tthis.size = size;\n\t\t__direction = direction;\n\t\t__script = script;\n\t\t__language = language;\n\t\t\n\t\tpositions = [];\n\t\t__dirty = true;\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\t__handle = lime_text_layout_create (__direction, __script, __language);\n\t\t#end\n\t}\n\t\n\t\n\t@:noCompletion private function __position ():Void {\n\t\t\n\t\tpositions = [];\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\t\n\t\tif (__handle != null && text != null && text != \"\" && font != null && font.src != null) {\n\t\t\t\n\t\t\tif (__buffer == null) {\n\t\t\t\t\n\t\t\t\t__buffer = Bytes.alloc (1);\n\t\t\t\t//__buffer.endian = (System.endianness == BIG_ENDIAN ? \"bigEndian\" : \"littleEndian\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar data = lime_text_layout_position (__handle, font.src, size, text, __buffer);\n\t\t\tvar position = 0;\n\t\t\t\n\t\t\tif (__buffer.length > 4) {\n\t\t\t\t\n\t\t\t\tvar count = __buffer.getInt32 (position); position += 4;\n\t\t\t\tvar index, advanceX, advanceY, offsetX, offsetY;\n\t\t\t\t\n\t\t\t\tfor (i in 0...count) {\n\t\t\t\t\t\n\t\t\t\t\tindex = __buffer.getInt32 (position); position += 4;\n\t\t\t\t\tadvanceX = __buffer.getFloat (position); position += 4;\n\t\t\t\t\tadvanceY = __buffer.getFloat (position); position += 4;\n\t\t\t\t\toffsetX = __buffer.getFloat (position); position += 4;\n\t\t\t\t\toffsetY = __buffer.getFloat (position); position += 4;\n\t\t\t\t\t\n\t\t\t\t\tpositions.push (new GlyphPosition (index, new Vector2 (advanceX, advanceY), new Vector2 (offsetX, offsetY)));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_positions ():Array<GlyphPosition> {\n\t\t\n\t\tif (__dirty) {\n\t\t\t\n\t\t\t__dirty = false;\n\t\t\t__position ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn positions;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_direction ():TextDirection {\n\t\t\n\t\treturn __direction;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_direction (value:TextDirection):TextDirection {\n\t\t\n\t\tif (value == __direction) return value;\n\t\t\n\t\t__direction = value;\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\tlime_text_layout_set_direction (__handle, value);\n\t\t#end\n\t\t\n\t\t__dirty = true;\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_font (value:Font):Font {\n\t\t\n\t\tif (value == this.font) return value;\n\t\t\n\t\tthis.font = value;\n\t\t__dirty = true;\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_glyphs ():Array<Glyph> {\n\t\t\n\t\tvar glyphs = [];\n\t\t\n\t\tfor (position in positions) {\n\t\t\t\n\t\t\tglyphs.push (position.glyph);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn glyphs;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_language ():String {\n\t\t\n\t\treturn __language;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_language (value:String):String {\n\t\t\n\t\tif (value == __language) return value;\n\t\t\n\t\t__language = value;\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\tlime_text_layout_set_language (__handle, value);\n\t\t#end\n\t\t\n\t\t__dirty = true;\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_script ():TextScript {\n\t\t\n\t\treturn __script;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_script (value:TextScript):TextScript {\n\t\t\n\t\tif (value == __script) return value;\n\t\t\n\t\t__script = value;\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\tlime_text_layout_set_script (__handle, value);\n\t\t#end\n\t\t\n\t\t__dirty = true;\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_size (value:Int):Int {\n\t\t\n\t\tif (value == this.size) return value;\n\t\t\n\t\tthis.size = value;\n\t\t__dirty = true;\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_text (value:String):String {\n\t\t\n\t\tif (value == this.text) return value;\n\t\t\n\t\tthis.text = value;\n\t\t__dirty = true;\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_text_layout_create (direction:Int, script:String, language:String):Dynamic;\n\t@:cffi private static function lime_text_layout_position (textHandle:Dynamic, fontHandle:Dynamic, size:Int, textString:String, data:Dynamic):Dynamic;\n\t@:cffi private static function lime_text_layout_set_direction (textHandle:Dynamic, direction:Int):Void;\n\t@:cffi private static function lime_text_layout_set_language (textHandle:Dynamic, language:String):Void;\n\t@:cffi private static function lime_text_layout_set_script (textHandle:Dynamic, script:String):Void;\n\t#end\n\t\n\t\n}\n","package lime.text;\n\n\n@:enum abstract TextScript(String) to (String) {\n\t\n\tvar COMMON = \"Zyyy\";\n\tvar INHERITED = \"Zinh\";\n\tvar UNKNOWN = \"Zzzz\";\n\t\n\tvar ARABIC = \"Arab\";\n\tvar ARMENIAN = \"Armn\";\n\tvar BENGALI = \"Beng\";\n\tvar CYRILLIC = \"Cyrl\";\n\tvar DEVANAGARI = \"Deva\";\n\tvar GEORGIAN = \"Geor\";\n\tvar GREEK = \"Grek\";\n\tvar GUJARATI = \"Gujr\";\n\tvar GURMUKHI = \"Guru\";\n\tvar HANGUL = \"Hang\";\n\tvar HAN = \"Hani\";\n\tvar HEBREW = \"Hebr\";\n\tvar HIRAGANA = \"Hira\";\n\tvar KANNADA = \"Knda\";\n\tvar KATAKANA = \"Kana\";\n\tvar LAO = \"Laoo\";\n\tvar LATIN = \"Latn\";\n\tvar MALAYALAM = \"Mlym\";\n\tvar ORIYA = \"Orya\";\n\tvar TAMIL = \"Taml\";\n\tvar TELUGA = \"Telu\";\n\tvar THAI = \"Thai\";\n\t\n\tvar TIBETAN = \"Tibt\";\n\t\n\tvar BOPOMOFO = \"Bopo\";\n\tvar BRAILLE = \"Brai\";\n\tvar CANADIAN_SYLLABICS = \"Cans\";\n\tvar CHEROKEE = \"Cher\";\n\tvar ETHIOPIC = \"Ethi\";\n\tvar KHMER = \"Khmr\";\n\tvar MONGOLIAN = \"Mong\";\n\tvar MYANMAR = \"Mymr\";\n\tvar OGHAM = \"Ogam\";\n\tvar RUNIC = \"Runr\";\n\tvar SINHALA = \"Sinh\";\n\tvar SYRIAC = \"Syrc\";\n\tvar THAANA = \"Thaa\";\n\tvar YI = \"Yiii\";\n\t\n\tvar DESERET = \"Dsrt\";\n\tvar GOTHIC = \"Goth\";\n\tvar OLD_ITALIC = \"Ital\";\n\t\n\tvar BUHID = \"Buhd\";\n\tvar HANUNOO = \"Hano\";\n\tvar TAGALOG = \"Tglg\";\n\tvar TAGBANWA = \"Tagb\";\n\t\n\tvar CYPRIOT = \"Cprt\";\n\tvar LIMBU = \"Limb\";\n\tvar LINEAR_B = \"Linb\";\n\tvar OSMANYA = \"Osma\";\n\tvar SHAVIAN = \"Shaw\";\n\tvar TAI_LE = \"Tale\";\n\tvar UGARITIC = \"Ugar\";\n\t\n\tvar BUGINESE = \"Bugi\";\n\tvar COPTIC = \"Copt\";\n\tvar GLAGOLITIC = \"Glag\";\n\tvar KHAROSHTHI = \"Khar\";\n\tvar NEW_TAI_LUE = \"Talu\";\n\tvar OLD_PERSIAN = \"Xpeo\";\n\tvar SYLOTI_NAGRI = \"Sylo\";\n\tvar TIFINAGH = \"Tfng\";\n\t\n\tvar BALINESE = \"Bali\";\n\tvar CUNEIFORM = \"Xsux\";\n\tvar NKO = \"Nkoo\";\n\tvar PHAGS_PA = \"Phag\";\n\tvar PHOENICIAN = \"Phnx\";\n\t\n\tvar CARIAN = \"Cari\";\n\tvar CHAM = \"Cham\";\n\tvar KAYAH_LI = \"Kali\";\n\tvar LEPCHA = \"Lepc\";\n\tvar LYCIAN = \"Lyci\";\n\tvar LYDIAN = \"Lydi\";\n\tvar OL_CHIKI = \"Olck\";\n\tvar REJANG = \"Rjng\";\n\tvar SAURASHTRA = \"Saur\";\n\tvar SUNDANESE = \"Sund\";\n\tvar VAI = \"Vaii\";\n\t\n\tvar AVESTAN = \"Avst\";\n\tvar BAMUM = \"Bamu\";\n\tvar EGYPTIAN_HIEROGLYPHS = \"Egyp\";\n\tvar IMPERIAL_ARAMAIC = \"Armi\";\n\tvar INSCRIPTIONAL_PAHLAVI = \"Phli\";\n\tvar INSCRIPTIONAL_PARTHIAN = \"Prti\";\n\tvar JAVANESE = \"Java\";\n\tvar KAITHI = \"Kthi\";\n\tvar LISU = \"Lisu\";\n\tvar MEETEI_MAYEK = \"Mtei\";\n\tvar OLD_SOUTH_ARABIAN = \"Sarb\";\n\tvar OLD_TURKIC = \"Orkh\";\n\tvar SAMARITAN = \"Samr\";\n\tvar TAI_THAM = \"Lana\";\n\tvar TAI_VIET = \"Tavt\";\n\t\n\tvar BATAK = \"Batk\";\n\tvar BRAHMI = \"Brah\";\n\tvar MANDAIC = \"Mand\";\n\t\n\tvar CHAKMA = \"Cakm\";\n\tvar MEROITIC_CURSIVE = \"Merc\";\n\tvar MEROITIC_HIEROGLYPHS = \"Mero\";\n\tvar MIAO = \"Plrd\";\n\tvar SHARADA = \"Shrd\";\n\tvar SORA_SOMPENG = \"Sora\";\n\tvar TAKRI = \"Takr\";\n\t\n\tvar BASSA_VAH = \"Bass\";\n\tvar CAUCASIAN_ALBANIAN = \"Aghb\";\n\tvar DUPLOYAN = \"Dupl\";\n\tvar ELBASAN = \"Elba\";\n\tvar GRANTHA = \"Gran\";\n\tvar KHOJKI = \"Khoj\";\n\tvar KHUDAWADI = \"Sind\";\n\tvar LINEAR_A = \"Lina\";\n\tvar MAHAJANI = \"Mahj\";\n\tvar MANICHAEAN = \"Mani\";\n\tvar MENDE_KIKAKUI = \"Mend\";\n\tvar MODI = \"Modi\";\n\tvar MRO = \"Mroo\";\n\tvar NABATAEAN = \"Nbat\";\n\tvar OLD_NORTH_ARABIAN = \"Narb\";\n\tvar OLD_PERMIC = \"Perm\";\n\tvar PAHAWH_HMONG = \"Hmng\";\n\tvar PALMYRENE = \"Palm\";\n\tvar PAU_CIN_HAU = \"Pauc\";\n\tvar PSALTER_PAHLAVI = \"Phlp\";\n\tvar SIDDHAM = \"Sidd\";\n\tvar TIRHUTA = \"Tirh\";\n\tvar WARANG_CITI = \"Wara\";\n\t\n\t\n\tpublic var rightToLeft (get, never):Bool;\n\t\n\t\n\tprivate inline function get_rightToLeft ():Bool {\n\t\t\n\t\treturn switch (this) {\n\t\t\t\n\t\t\tcase HEBREW, ARABIC, SYRIAC, THAANA, NKO, SAMARITAN, MANDAIC, IMPERIAL_ARAMAIC, PHOENICIAN, LYDIAN, CYPRIOT, KHAROSHTHI, OLD_SOUTH_ARABIAN, AVESTAN, INSCRIPTIONAL_PAHLAVI, PSALTER_PAHLAVI, OLD_TURKIC: true;\n\t\t\t//case KURDISH: true;\n\t\t\tdefault: false;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package lime.ui;\n\n\n@:enum abstract GamepadAxis(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tvar LEFT_X = 0;\n\tvar LEFT_Y = 1;\n\tvar RIGHT_X = 2;\n\tvar RIGHT_Y = 3;\n\tvar TRIGGER_LEFT = 4;\n\tvar TRIGGER_RIGHT = 5;\n\t\n\t\n\tpublic inline function toString ():String {\n\t\t\n\t\treturn switch (this) {\n\t\t\t\n\t\t\tcase LEFT_X: \"LEFT_X\";\n\t\t\tcase LEFT_Y: \"LEFT_Y\";\n\t\t\tcase RIGHT_X: \"RIGHT_X\";\n\t\t\tcase RIGHT_Y: \"RIGHT_Y\";\n\t\t\tcase TRIGGER_LEFT: \"TRIGGER_LEFT\";\n\t\t\tcase TRIGGER_RIGHT: \"TRIGGER_RIGHT\";\n\t\t\tdefault: \"UNKNOWN (\" + this + \")\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package lime.ui;\n\n\n@:enum abstract GamepadButton(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tvar A = 0;\n\tvar B = 1;\n\tvar X = 2;\n\tvar Y = 3;\n\tvar BACK = 4;\n\tvar GUIDE = 5;\n\tvar START = 6;\n\tvar LEFT_STICK = 7;\n\tvar RIGHT_STICK = 8;\n\tvar LEFT_SHOULDER = 9;\n\tvar RIGHT_SHOULDER = 10;\n\tvar DPAD_UP = 11;\n\tvar DPAD_DOWN = 12;\n\tvar DPAD_LEFT = 13;\n\tvar DPAD_RIGHT = 14;\n\t\n\t\n\tpublic inline function toString ():String {\n\t\t\n\t\treturn switch (this) {\n\t\t\t\n\t\t\tcase A: \"A\";\n\t\t\tcase B: \"B\";\n\t\t\tcase X: \"X\";\n\t\t\tcase Y: \"Y\";\n\t\t\tcase BACK: \"BACK\";\n\t\t\tcase GUIDE: \"GUIDE\";\n\t\t\tcase START: \"START\";\n\t\t\tcase LEFT_STICK: \"LEFT_STICK\";\n\t\t\tcase RIGHT_STICK: \"RIGHT_STICK\";\n\t\t\tcase LEFT_SHOULDER: \"LEFT_SHOULDER\";\n\t\t\tcase RIGHT_SHOULDER: \"RIGHT_SHOULDER\";\n\t\t\tcase DPAD_UP: \"DPAD_UP\";\n\t\t\tcase DPAD_DOWN: \"DPAD_DOWN\";\n\t\t\tcase DPAD_LEFT: \"DPAD_LEFT\";\n\t\t\tcase DPAD_RIGHT: \"DPAD_RIGHT\";\n\t\t\tdefault: \"UNKNOWN (\" + this + \")\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package lime.ui;\n\n\nabstract JoystickHatPosition(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tpublic static inline var CENTER:JoystickHatPosition = 0x00;\n\tpublic static inline var DOWN:JoystickHatPosition = 0x04;\n\tpublic static inline var LEFT:JoystickHatPosition = 0x08;\n\tpublic static inline var RIGHT:JoystickHatPosition = 0x02;\n\tpublic static inline var UP:JoystickHatPosition = 0x01;\n\t\n\tpublic static inline var DOWN_LEFT:JoystickHatPosition = (0x04 | 0x08);\n\tpublic static inline var DOWN_RIGHT:JoystickHatPosition = (0x04 | 0x02);\n\tpublic static inline var UP_LEFT:JoystickHatPosition = (0x01 | 0x08);\n\tpublic static inline var UP_RIGHT:JoystickHatPosition = (0x01 | 0x02);\n\t\n\tpublic var center (get, set):Bool;\n\tpublic var down (get, set):Bool;\n\tpublic var left (get, set):Bool;\n\tpublic var right (get, set):Bool;\n\tpublic var up (get, set):Bool;\n\t\n\t\n\tpublic function new (value:Int) {\n\t\t\n\t\tthis = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_center ():Bool {\n\t\t\n\t\treturn (this == 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_center (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_down ():Bool {\n\t\t\n\t\treturn (this & DOWN > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_down (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= DOWN;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - DOWN;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_left ():Bool {\n\t\t\n\t\treturn (this & LEFT > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_left (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= LEFT;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - LEFT;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_right ():Bool {\n\t\t\n\t\treturn (this & RIGHT > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_right (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= RIGHT;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - RIGHT;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_up ():Bool {\n\t\t\n\t\treturn (this & UP > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_up (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= UP;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - UP;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.ui;\n\n\n@:enum abstract KeyCode(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tvar UNKNOWN = 0x00;\n\tvar BACKSPACE = 0x08;\n\tvar TAB = 0x09;\n\tvar RETURN = 0x0D;\n\tvar ESCAPE = 0x1B;\n\tvar SPACE = 0x20;\n\tvar EXCLAMATION = 0x21;\n\tvar QUOTE = 0x22;\n\tvar HASH = 0x23;\n\tvar DOLLAR = 0x24;\n\tvar PERCENT = 0x25;\n\tvar AMPERSAND = 0x26;\n\tvar SINGLE_QUOTE = 0x27;\n\tvar LEFT_PARENTHESIS = 0x28;\n\tvar RIGHT_PARENTHESIS = 0x29;\n\tvar ASTERISK = 0x2A;\n\tvar PLUS = 0x2B;\n\tvar COMMA = 0x2C;\n\tvar MINUS = 0x2D;\n\tvar PERIOD = 0x2E;\n\tvar SLASH = 0x2F;\n\tvar NUMBER_0 = 0x30;\n\tvar NUMBER_1 = 0x31;\n\tvar NUMBER_2 = 0x32;\n\tvar NUMBER_3 = 0x33;\n\tvar NUMBER_4 = 0x34;\n\tvar NUMBER_5 = 0x35;\n\tvar NUMBER_6 = 0x36;\n\tvar NUMBER_7 = 0x37;\n\tvar NUMBER_8 = 0x38;\n\tvar NUMBER_9 = 0x39;\n\tvar COLON = 0x3A;\n\tvar SEMICOLON = 0x3B;\n\tvar LESS_THAN = 0x3C;\n\tvar EQUALS = 0x3D;\n\tvar GREATER_THAN = 0x3E;\n\tvar QUESTION = 0x3F;\n\tvar AT = 0x40;\n\tvar LEFT_BRACKET = 0x5B;\n\tvar BACKSLASH = 0x5C;\n\tvar RIGHT_BRACKET = 0x5D;\n\tvar CARET = 0x5E;\n\tvar UNDERSCORE = 0x5F;\n\tvar GRAVE = 0x60;\n\tvar A = 0x61;\n\tvar B = 0x62;\n\tvar C = 0x63;\n\tvar D = 0x64;\n\tvar E = 0x65;\n\tvar F = 0x66;\n\tvar G = 0x67;\n\tvar H = 0x68;\n\tvar I = 0x69;\n\tvar J = 0x6A;\n\tvar K = 0x6B;\n\tvar L = 0x6C;\n\tvar M = 0x6D;\n\tvar N = 0x6E;\n\tvar O = 0x6F;\n\tvar P = 0x70;\n\tvar Q = 0x71;\n\tvar R = 0x72;\n\tvar S = 0x73;\n\tvar T = 0x74;\n\tvar U = 0x75;\n\tvar V = 0x76;\n\tvar W = 0x77;\n\tvar X = 0x78;\n\tvar Y = 0x79;\n\tvar Z = 0x7A;\n\tvar DELETE = 0x7F;\n\tvar CAPS_LOCK = 0x40000039;\n\tvar F1 = 0x4000003A;\n\tvar F2 = 0x4000003B;\n\tvar F3 = 0x4000003C;\n\tvar F4 = 0x4000003D;\n\tvar F5 = 0x4000003E;\n\tvar F6 = 0x4000003F;\n\tvar F7 = 0x40000040;\n\tvar F8 = 0x40000041;\n\tvar F9 = 0x40000042;\n\tvar F10 = 0x40000043;\n\tvar F11 = 0x40000044;\n\tvar F12 = 0x40000045;\n\tvar PRINT_SCREEN = 0x40000046;\n\tvar SCROLL_LOCK = 0x40000047;\n\tvar PAUSE = 0x40000048;\n\tvar INSERT = 0x40000049;\n\tvar HOME = 0x4000004A;\n\tvar PAGE_UP = 0x4000004B;\n\tvar END = 0x4000004D;\n\tvar PAGE_DOWN = 0x4000004E;\n\tvar RIGHT = 0x4000004F;\n\tvar LEFT = 0x40000050;\n\tvar DOWN = 0x40000051;\n\tvar UP = 0x40000052;\n\tvar NUM_LOCK = 0x40000053;\n\tvar NUMPAD_DIVIDE = 0x40000054;\n\tvar NUMPAD_MULTIPLY = 0x40000055;\n\tvar NUMPAD_MINUS = 0x40000056;\n\tvar NUMPAD_PLUS = 0x40000057;\n\tvar NUMPAD_ENTER = 0x40000058;\n\tvar NUMPAD_1 = 0x40000059;\n\tvar NUMPAD_2 = 0x4000005A;\n\tvar NUMPAD_3 = 0x4000005B;\n\tvar NUMPAD_4 = 0x4000005C;\n\tvar NUMPAD_5 = 0x4000005D;\n\tvar NUMPAD_6 = 0x4000005E;\n\tvar NUMPAD_7 = 0x4000005F;\n\tvar NUMPAD_8 = 0x40000060;\n\tvar NUMPAD_9 = 0x40000061;\n\tvar NUMPAD_0 = 0x40000062;\n\tvar NUMPAD_PERIOD = 0x40000063;\n\tvar APPLICATION = 0x40000065;\n\tvar POWER = 0x40000066;\n\tvar NUMPAD_EQUALS = 0x40000067;\n\tvar F13 = 0x40000068;\n\tvar F14 = 0x40000069;\n\tvar F15 = 0x4000006A;\n\tvar F16 = 0x4000006B;\n\tvar F17 = 0x4000006C;\n\tvar F18 = 0x4000006D;\n\tvar F19 = 0x4000006E;\n\tvar F20 = 0x4000006F;\n\tvar F21 = 0x40000070;\n\tvar F22 = 0x40000071;\n\tvar F23 = 0x40000072;\n\tvar F24 = 0x40000073;\n\tvar EXECUTE = 0x40000074;\n\tvar HELP = 0x40000075;\n\tvar MENU = 0x40000076;\n\tvar SELECT = 0x40000077;\n\tvar STOP = 0x40000078;\n\tvar AGAIN = 0x40000079;\n\tvar UNDO = 0x4000007A;\n\tvar CUT = 0x4000007B;\n\tvar COPY = 0x4000007C;\n\tvar PASTE = 0x4000007D;\n\tvar FIND = 0x4000007E;\n\tvar MUTE = 0x4000007F;\n\tvar VOLUME_UP = 0x40000080;\n\tvar VOLUME_DOWN = 0x40000081;\n\tvar NUMPAD_COMMA = 0x40000085;\n\t//var NUMPAD_EQUALS_AS400 = 0x40000086;\n\tvar ALT_ERASE = 0x40000099;\n\tvar SYSTEM_REQUEST = 0x4000009A;\n\tvar CANCEL = 0x4000009B;\n\tvar CLEAR = 0x4000009C;\n\tvar PRIOR = 0x4000009D;\n\tvar RETURN2 = 0x4000009E;\n\tvar SEPARATOR = 0x4000009F;\n\tvar OUT = 0x400000A0;\n\tvar OPER = 0x400000A1;\n\tvar CLEAR_AGAIN = 0x400000A2;\n\tvar CRSEL = 0x400000A3;\n\tvar EXSEL = 0x400000A4;\n\tvar NUMPAD_00 = 0x400000B0;\n\tvar NUMPAD_000 = 0x400000B1;\n\tvar THOUSAND_SEPARATOR = 0x400000B2;\n\tvar DECIMAL_SEPARATOR = 0x400000B3;\n\tvar CURRENCY_UNIT = 0x400000B4;\n\tvar CURRENCY_SUBUNIT = 0x400000B5;\n\tvar NUMPAD_LEFT_PARENTHESIS = 0x400000B6;\n\tvar NUMPAD_RIGHT_PARENTHESIS = 0x400000B7;\n\tvar NUMPAD_LEFT_BRACE = 0x400000B8;\n\tvar NUMPAD_RIGHT_BRACE = 0x400000B9;\n\tvar NUMPAD_TAB = 0x400000BA;\n\tvar NUMPAD_BACKSPACE = 0x400000BB;\n\tvar NUMPAD_A = 0x400000BC;\n\tvar NUMPAD_B = 0x400000BD;\n\tvar NUMPAD_C = 0x400000BE;\n\tvar NUMPAD_D = 0x400000BF;\n\tvar NUMPAD_E = 0x400000C0;\n\tvar NUMPAD_F = 0x400000C1;\n\tvar NUMPAD_XOR = 0x400000C2;\n\tvar NUMPAD_POWER = 0x400000C3;\n\tvar NUMPAD_PERCENT = 0x400000C4;\n\tvar NUMPAD_LESS_THAN = 0x400000C5;\n\tvar NUMPAD_GREATER_THAN = 0x400000C6;\n\tvar NUMPAD_AMPERSAND = 0x400000C7;\n\tvar NUMPAD_DOUBLE_AMPERSAND = 0x400000C8;\n\tvar NUMPAD_VERTICAL_BAR = 0x400000C9;\n\tvar NUMPAD_DOUBLE_VERTICAL_BAR = 0x400000CA;\n\tvar NUMPAD_COLON = 0x400000CB;\n\tvar NUMPAD_HASH = 0x400000CC;\n\tvar NUMPAD_SPACE = 0x400000CD;\n\tvar NUMPAD_AT = 0x400000CE;\n\tvar NUMPAD_EXCLAMATION = 0x400000CF;\n\tvar NUMPAD_MEM_STORE = 0x400000D0;\n\tvar NUMPAD_MEM_RECALL = 0x400000D1;\n\tvar NUMPAD_MEM_CLEAR = 0x400000D2;\n\tvar NUMPAD_MEM_ADD = 0x400000D3;\n\tvar NUMPAD_MEM_SUBTRACT = 0x400000D4;\n\tvar NUMPAD_MEM_MULTIPLY = 0x400000D5;\n\tvar NUMPAD_MEM_DIVIDE = 0x400000D6;\n\tvar NUMPAD_PLUS_MINUS = 0x400000D7;\n\tvar NUMPAD_CLEAR = 0x400000D8;\n\tvar NUMPAD_CLEAR_ENTRY = 0x400000D9;\n\tvar NUMPAD_BINARY = 0x400000DA;\n\tvar NUMPAD_OCTAL = 0x400000DB;\n\tvar NUMPAD_DECIMAL = 0x400000DC;\n\tvar NUMPAD_HEXADECIMAL = 0x400000DD;\n\tvar LEFT_CTRL = 0x400000E0;\n\tvar LEFT_SHIFT = 0x400000E1;\n\tvar LEFT_ALT = 0x400000E2;\n\tvar LEFT_META = 0x400000E3;\n\tvar RIGHT_CTRL = 0x400000E4;\n\tvar RIGHT_SHIFT = 0x400000E5;\n\tvar RIGHT_ALT = 0x400000E6;\n\tvar RIGHT_META = 0x400000E7;\n\tvar MODE = 0x40000101;\n\tvar AUDIO_NEXT = 0x40000102;\n\tvar AUDIO_PREVIOUS = 0x40000103;\n\tvar AUDIO_STOP = 0x40000104;\n\tvar AUDIO_PLAY = 0x40000105;\n\tvar AUDIO_MUTE = 0x40000106;\n\tvar MEDIA_SELECT = 0x40000107;\n\tvar WWW = 0x40000108;\n\tvar MAIL = 0x40000109;\n\tvar CALCULATOR = 0x4000010A;\n\tvar COMPUTER = 0x4000010B;\n\tvar APP_CONTROL_SEARCH = 0x4000010C;\n\tvar APP_CONTROL_HOME = 0x4000010D;\n\tvar APP_CONTROL_BACK = 0x4000010E;\n\tvar APP_CONTROL_FORWARD = 0x4000010F;\n\tvar APP_CONTROL_STOP = 0x40000110;\n\tvar APP_CONTROL_REFRESH = 0x40000111;\n\tvar APP_CONTROL_BOOKMARKS = 0x40000112;\n\tvar BRIGHTNESS_DOWN = 0x40000113;\n\tvar BRIGHTNESS_UP = 0x40000114;\n\tvar DISPLAY_SWITCH = 0x40000115;\n\tvar BACKLIGHT_TOGGLE = 0x40000116;\n\tvar BACKLIGHT_DOWN = 0x40000117;\n\tvar BACKLIGHT_UP = 0x40000118;\n\tvar EJECT = 0x40000119;\n\tvar SLEEP = 0x4000011A;\n\t\n\t@:op(A > B) private static inline function gt (a:KeyCode, b:KeyCode):Bool { return (a:Int) > (b:Int); }\n\t@:op(A >= B) private static inline function gte (a:KeyCode, b:KeyCode):Bool { return (a:Int) >= (b:Int); }\n\t@:op(A < B) private static inline function lt (a:KeyCode, b:KeyCode):Bool { return (a:Int) < (b:Int); }\n\t@:op(A <= B) private static inline function lte (a:KeyCode, b:KeyCode):Bool { return (a:Int) <= (b:Int); }\n\t@:op(A + B) private static inline function plus (a:KeyCode, b:Int):KeyCode { return (a:Int) + b; }\n\t\n\t\n}","package lime.ui;\n\n\nabstract KeyModifier(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tpublic static inline var NONE:KeyModifier = 0x0000;\n\tpublic static inline var LEFT_SHIFT:KeyModifier = 0x0001;\n\tpublic static inline var RIGHT_SHIFT:KeyModifier = 0x0002;\n\tpublic static inline var LEFT_CTRL:KeyModifier = 0x0040;\n\tpublic static inline var RIGHT_CTRL:KeyModifier = 0x0080;\n\tpublic static inline var LEFT_ALT:KeyModifier = 0x0100;\n\tpublic static inline var RIGHT_ALT:KeyModifier = 0x0200;\n\tpublic static inline var LEFT_META:KeyModifier = 0x0400;\n\tpublic static inline var RIGHT_META:KeyModifier = 0x0800;\n\tpublic static inline var NUM_LOCK:KeyModifier = 0x1000;\n\tpublic static inline var CAPS_LOCK:KeyModifier = 0x2000;\n\tpublic static inline var MODE:KeyModifier = 0x4000;\n\t\n\tpublic static inline var CTRL:KeyModifier = (0x0040 | 0x0080);\n\tpublic static inline var SHIFT:KeyModifier = (0x001 | 0x0002);\n\tpublic static inline var ALT:KeyModifier = (0x0100 | 0x0200);\n\tpublic static inline var META:KeyModifier = (0x0400 | 0x0800);\n\t\n\tpublic var altKey (get, set):Bool;\n\tpublic var capsLock (get, set):Bool;\n\tpublic var ctrlKey (get, set):Bool;\n\tpublic var metaKey (get, set):Bool;\n\tpublic var numLock (get, set):Bool;\n\tpublic var shiftKey (get, set):Bool;\n\t\n\t\n\tprivate function get_altKey ():Bool {\n\t\t\n\t\treturn (this & LEFT_ALT > 0) || (this & RIGHT_ALT > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_altKey (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= ALT;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - ALT;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_capsLock ():Bool {\n\t\t\n\t\treturn (this & CAPS_LOCK > 0) || (this & CAPS_LOCK > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_capsLock (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= CAPS_LOCK;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - CAPS_LOCK;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_ctrlKey ():Bool {\n\t\t\n\t\treturn (this & LEFT_CTRL > 0) || (this & RIGHT_CTRL > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_ctrlKey (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= CTRL;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - CTRL;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_metaKey ():Bool {\n\t\t\n\t\treturn (this & LEFT_META > 0) || (this & RIGHT_META > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_metaKey (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= META;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - META;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_numLock ():Bool {\n\t\t\n\t\treturn (this & NUM_LOCK > 0) || (this & NUM_LOCK > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_numLock (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= NUM_LOCK;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - NUM_LOCK;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_shiftKey ():Bool {\n\t\t\n\t\treturn (this & LEFT_SHIFT > 0) || (this & RIGHT_SHIFT > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_shiftKey (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= SHIFT;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - SHIFT;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.ui;\n\n\nclass Mouse {\n\t\n\t\n\tpublic static var cursor (get, set):MouseCursor;\n\tpublic static var lock (get, set):Bool;\n\t\n\t\n\tpublic static function hide ():Void {\n\t\t\n\t\tMouseBackend.hide ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function show ():Void {\n\t\t\n\t\tMouseBackend.show ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function warp (x:Int, y:Int, window:Window = null):Void {\n\t\t\n\t\tMouseBackend.warp (x, y, window);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate static function get_cursor ():MouseCursor {\n\t\t\n\t\treturn MouseBackend.get_cursor ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function set_cursor (value:MouseCursor):MouseCursor {\n\t\t\n\t\treturn MouseBackend.set_cursor (value);\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_lock ():Bool {\n\t\t\n\t\treturn MouseBackend.get_lock ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function set_lock (value:Bool):Bool {\n\t\t\n\t\treturn MouseBackend.set_lock (value);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if flash\n@:noCompletion private typedef MouseBackend = lime._backend.flash.FlashMouse;\n#elseif (js && html5)\n@:noCompletion private typedef MouseBackend = lime._backend.html5.HTML5Mouse;\n#else\n@:noCompletion private typedef MouseBackend = lime._backend.native.NativeMouse;\n#end","package lime.utils;\n\n\nimport haxe.io.Bytes in HaxeBytes;\nimport haxe.io.BytesData;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n@:autoBuild(lime.Assets.embedBytes())\n\n\nclass Bytes extends HaxeBytes {\n\t\n\t\n\tpublic function new (length:Int, bytesData:BytesData) {\n\t\t\n\t\t#if js\n\t\tsuper (bytesData);\n\t\t#else\n\t\tsuper (length, bytesData);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function alloc (length:Int):Bytes {\n\t\t\n\t\tvar bytes = HaxeBytes.alloc (length);\n\t\treturn new Bytes (bytes.length, bytes.getData ());\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function fastGet (b:BytesData, pos:Int):Int {\n\t\t\n\t\treturn HaxeBytes.fastGet (b, pos);\n\t\t\n\t}\n\t\n\t\n\tpublic static function ofData (b:BytesData):Bytes {\n\t\t\n\t\tvar bytes = HaxeBytes.ofData (b);\n\t\treturn new Bytes (bytes.length, bytes.getData ());\n\t\t\n\t}\n\t\n\t\n\tpublic static function ofString (s:String):Bytes {\n\t\t\n\t\tvar bytes = HaxeBytes.ofString (s);\n\t\treturn new Bytes (bytes.length, bytes.getData ());\n\t\t\n\t}\n\t\n\t\n\tpublic static function readFile (path:String):Bytes {\n\t\t\n\t\t#if (!html5 && !macro)\n\t\tvar data:Dynamic = lime_bytes_read_file (path);\n\t\tif (data != null) return new Bytes (data.length, data.b);\n\t\t#end\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\tpublic static function __fromNativePointer (data:Dynamic, length:Int):Bytes {\n\t\t\n\t\tvar bytes:Dynamic = lime_bytes_from_data_pointer (data, length);\n\t\treturn new Bytes (bytes.length, bytes.b);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if !macro\n\t@:cffi private static function lime_bytes_from_data_pointer (data:Float, length:Int):Dynamic;\n\t@:cffi private static function lime_bytes_get_data_pointer (data:Dynamic):Float;\n\t@:cffi private static function lime_bytes_read_file (path:String):Dynamic;\n\t#end\n\t\n\t\n}","package lime.utils;\n\n\nimport lime.graphics.opengl.GLProgram;\nimport lime.graphics.opengl.GLShader;\nimport lime.graphics.opengl.GL;\n\n\nclass GLUtils {\n\t\n\t\n\tpublic static function compileShader (source:String, type:Int):GLShader {\n\t\t\n\t\tvar shader = GL.createShader (type);\n\t\tGL.shaderSource (shader, source);\n\t\tGL.compileShader (shader);\n\t\t\n\t\tif (GL.getShaderParameter (shader, GL.COMPILE_STATUS) == 0) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase GL.VERTEX_SHADER: throw \"Error compiling vertex shader\";\n\t\t\t\tcase GL.FRAGMENT_SHADER: throw \"Error compiling fragment shader\";\n\t\t\t\tdefault: throw \"Error compiling unknown shader type\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn shader;\n\t\t\n\t}\n\t\n\t\n\tpublic static function createProgram (vertexSource:String, fragmentSource:String):GLProgram {\n\t\t\n\t\tvar vertexShader = compileShader (vertexSource, GL.VERTEX_SHADER);\n\t\tvar fragmentShader = compileShader (fragmentSource, GL.FRAGMENT_SHADER);\n\t\t\n\t\tvar program = GL.createProgram ();\n\t\tGL.attachShader (program, vertexShader);\n\t\tGL.attachShader (program, fragmentShader);\n\t\tGL.linkProgram (program);\n\t\t\n\t\tif (GL.getProgramParameter (program, GL.LINK_STATUS) == 0) {\n\t\t\t\n\t\t\tthrow \"Unable to initialize the shader program.\";\n\t\t\t\n\t\t}\n\t\t\n\t\treturn program;\n\t\t\n\t}\n\t\n\t\n}","package lime.utils;\n\n#if (js && !display)\n\n    @:forward\n    @:arrayAccess\n    abstract Int16Array(js.html.Int16Array)\n        from js.html.Int16Array\n        to js.html.Int16Array {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 2;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n            if(elements != null) {\n                this = new js.html.Int16Array( elements );\n            } else if(array != null) {\n                this = new js.html.Int16Array( untyped array );\n            } else if(view != null) {\n                this = new js.html.Int16Array( untyped view );\n            } else if(buffer != null) {\n                if(len == null) {\n                    this = new js.html.Int16Array( buffer, byteoffset );\n                } else {\n                    this = new js.html.Int16Array( buffer, byteoffset, len );\n                }\n            } else {\n                this = null;\n            }\n        }\n\n        @:arrayAccess inline function __set(idx:Int, val:Int) return this[idx] = val;\n        @:arrayAccess inline function __get(idx:Int) : Int return this[idx];\n\n\n            //non spec haxe conversions\n        public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Int16Array {\n            if(byteOffset == null) return new js.html.Int16Array(cast bytes.getData());\n            if(len == null) return new js.html.Int16Array(cast bytes.getData(), byteOffset);\n            return new js.html.Int16Array(cast bytes.getData(), byteOffset, len);\n        }\n\n        public function toBytes() : haxe.io.Bytes {\n            #if (haxe_ver < 3.2)\n            return @:privateAccess new haxe.io.Bytes( this.byteLength, cast new js.html.Uint8Array(this.buffer) );\n            #else\n                return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\n            #end\n    }\n\n        function toString() return this != null ? 'Int16Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#else\n\n    import lime.utils.ArrayBufferView;\n\n@:forward()\n@:arrayAccess\nabstract Int16Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\n\n    public inline static var BYTES_PER_ELEMENT : Int = 2;\n\n    public var length (get, never):Int;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n\n            if(elements != null) {\n                this = new ArrayBufferView( elements, Int16 );\n            } else if(array != null) {\n                this = new ArrayBufferView(0, Int16).initArray(array);\n            } else if(view != null) {\n                this = new ArrayBufferView(0, Int16).initTypedArray(view);\n            } else if(buffer != null) {\n                this = new ArrayBufferView(0, Int16).initBuffer(buffer, byteoffset, len);\n            } else {\n                throw \"Invalid constructor arguments for Int16Array\";\n            }\n        }\n\n//Public API\n\n    public inline function subarray( begin:Int, end:Null<Int> = null) : Int16Array return this.subarray(begin, end);\n\n\n            //non spec haxe conversions\n        public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Int16Array {\n            return new Int16Array(bytes, byteOffset, len);\n        }\n\n        public function toBytes() : haxe.io.Bytes {\n            return this.buffer;\n        }\n\n//Internal\n\n    inline function get_length() return this.length;\n\n\n    @:noCompletion\n    @:arrayAccess\n    public inline function __get(idx:Int) {\n        return ArrayBufferIO.getInt16(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT));\n    }\n\n    @:noCompletion\n    @:arrayAccess\n    public inline function __set(idx:Int, val:Int) {\n        return ArrayBufferIO.setInt16(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT), val);\n    }\n\n        function toString() return this != null ? 'Int16Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n}\n\n#end //!js","package lime.utils;\r\n\r\n#if (js && !display)\r\n\r\n    @:forward\r\n    @:arrayAccess\r\n    abstract Int32Array(js.html.Int32Array)\r\n        from js.html.Int32Array\r\n        to js.html.Int32Array {\r\n\r\n        public inline static var BYTES_PER_ELEMENT : Int = 4;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?array:Array<T>,\r\n            ?view:ArrayBufferView,\r\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n            if(elements != null) {\r\n                this = new js.html.Int32Array( elements );\r\n            } else if(array != null) {\r\n                this = new js.html.Int32Array( untyped array );\r\n            } else if(view != null) {\r\n                this = new js.html.Int32Array( untyped view );\r\n            } else if(buffer != null) {\r\n                if(len == null) {\r\n                    this = new js.html.Int32Array( buffer, byteoffset );\r\n                } else {\r\n                    this = new js.html.Int32Array( buffer, byteoffset, len );\r\n                }\r\n            } else {\r\n                this = null;\r\n            }\r\n        }\r\n\r\n        @:arrayAccess inline function __set(idx:Int, val:Int) return this[idx] = val;\r\n        @:arrayAccess inline function __get(idx:Int) : Int return this[idx];\r\n\r\n\r\n            //non spec haxe conversions\r\n        public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Int32Array {\r\n            if(byteOffset == null) return new js.html.Int32Array(cast bytes.getData());\r\n            if(len == null) return new js.html.Int32Array(cast bytes.getData(), byteOffset);\r\n            return new js.html.Int32Array(cast bytes.getData(), byteOffset, len);\r\n        }\r\n\r\n        public function toBytes() : haxe.io.Bytes {\r\n            #if (haxe_ver < 3.2)\r\n            return @:privateAccess new haxe.io.Bytes( this.byteLength, cast new js.html.Uint8Array(this.buffer) );\r\n            #else\r\n                return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\r\n            #end\r\n    }\r\n\r\n        function toString() return this != null ? 'Int32Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\r\n\r\n    }\r\n\r\n#else\r\n\r\n    import lime.utils.ArrayBufferView;\r\n\r\n@:forward()\r\n@:arrayAccess\r\nabstract Int32Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\r\n\r\n    public inline static var BYTES_PER_ELEMENT : Int = 4;\r\n\r\n    public var length (get, never):Int;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?array:Array<T>,\r\n            ?view:ArrayBufferView,\r\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n\r\n            if(elements != null) {\r\n                this = new ArrayBufferView( elements, Int32 );\r\n            } else if(array != null) {\r\n                this = new ArrayBufferView(0, Int32).initArray(array);\r\n            } else if(view != null) {\r\n                this = new ArrayBufferView(0, Int32).initTypedArray(view);\r\n            } else if(buffer != null) {\r\n                this = new ArrayBufferView(0, Int32).initBuffer(buffer, byteoffset, len);\r\n            } else {\r\n                throw \"Invalid constructor arguments for Int32Array\";\r\n            }\r\n        }\r\n\r\n//Public API\r\n\r\n    public inline function subarray( begin:Int, end:Null<Int> = null) : Int32Array return this.subarray(begin, end);\r\n\r\n\r\n            //non spec haxe conversions\r\n        public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Int32Array {\r\n            return new Int32Array(bytes, byteOffset, len);\r\n        }\r\n\r\n        public function toBytes() : haxe.io.Bytes {\r\n            return this.buffer;\r\n        }\r\n\r\n//Internal\r\n\r\n    inline function get_length() return this.length;\r\n\r\n\r\n    @:noCompletion\r\n    @:arrayAccess\r\n    public inline function __get(idx:Int) {\r\n        return ArrayBufferIO.getInt32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT));\r\n    }\r\n\r\n    @:noCompletion\r\n    @:arrayAccess\r\n    public inline function __set(idx:Int, val:Int) {\r\n        return ArrayBufferIO.setInt32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT), val);\r\n    }\r\n\r\n        function toString() return this != null ? 'Int32Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\r\n\r\n}\r\n\r\n#end //!js","package lime.utils;\n\n\nimport haxe.io.Bytes;\n\n#if !macro\n@:build(lime.system.CFFI.build())\n#end\n\n\nclass LZMA {\n\t\n\t\n\tpublic static function decode (bytes:Bytes):Bytes {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\tvar data:Dynamic = lime_lzma_decode (bytes);\n\t\treturn @:privateAccess new Bytes (data.length, data.b);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function encode (bytes:Bytes):Bytes {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && !macro)\n\t\tvar data:Dynamic = lime_lzma_encode (bytes);\n\t\treturn @:privateAccess new Bytes (data.length, data.b);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if ((cpp || neko || nodejs) && !macro)\n\t@:cffi private static function lime_lzma_decode (data:Dynamic):Dynamic;\n\t@:cffi private static function lime_lzma_encode (data:Dynamic):Dynamic;\n\t#end\n\t\n\t\n}","package lime.utils;\n\n#if (js && !display)\n\n    @:forward\n    @:arrayAccess\n    abstract UInt16Array(js.html.Uint16Array)\n        from js.html.Uint16Array\n        to js.html.Uint16Array {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 2;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n            if(elements != null) {\n                this = new js.html.Uint16Array( elements );\n            } else if(array != null) {\n                this = new js.html.Uint16Array( untyped array );\n            } else if(view != null) {\n                this = new js.html.Uint16Array( untyped view );\n            } else if(buffer != null) {\n                if(len == null) {\n                    this = new js.html.Uint16Array( buffer, byteoffset );\n                } else {\n                    this = new js.html.Uint16Array( buffer, byteoffset, len );\n                }\n            } else {\n                this = null;\n            }\n        }\n\n        @:arrayAccess inline function __set(idx:Int, val:UInt) return this[idx] = val;\n        @:arrayAccess inline function __get(idx:Int) : UInt return this[idx];\n\n\n            //non spec haxe conversions\n        public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : UInt16Array {\n            if(byteOffset == null) return new js.html.Uint16Array(cast bytes.getData());\n            if(len == null) return new js.html.Uint16Array(cast bytes.getData(), byteOffset);\n            return new js.html.Uint16Array(cast bytes.getData(), byteOffset, len);\n        }\n\n        public function toBytes() : haxe.io.Bytes {\n            #if (haxe_ver < 3.2)\n            return @:privateAccess new haxe.io.Bytes( this.byteLength, cast new js.html.Uint8Array(this.buffer) );\n            #else\n                return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\n            #end\n    }\n\n        function toString() return this != null ? 'UInt16Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#else\n\n    import lime.utils.ArrayBufferView;\n\n@:forward()\n@:arrayAccess\nabstract UInt16Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\n\n    public inline static var BYTES_PER_ELEMENT : Int = 2;\n\n    public var length (get, never):Int;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n\n            if(elements != null) {\n                this = new ArrayBufferView( elements, Uint16 );\n            } else if(array != null) {\n                this = new ArrayBufferView(0, Uint16).initArray(array);\n            } else if(view != null) {\n                this = new ArrayBufferView(0, Uint16).initTypedArray(view);\n            } else if(buffer != null) {\n                this = new ArrayBufferView(0, Uint16).initBuffer(buffer, byteoffset, len);\n            } else {\n                throw \"Invalid constructor arguments for Uint16Array\";\n            }\n        }\n\n//Public API\n\n    public inline function subarray( begin:Int, end:Null<Int> = null) : UInt16Array return this.subarray(begin, end);\n\n\n            //non spec haxe conversions\n        public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : UInt16Array {\n            return new UInt16Array(bytes, byteOffset, len);\n        }\n\n        public function toBytes() : haxe.io.Bytes {\n            return this.buffer;\n        }\n\n//Internal\n\n    inline function get_length() return this.length;\n\n\n    @:noCompletion\n    @:arrayAccess\n    public inline function __get(idx:Int) {\n        return ArrayBufferIO.getUint16(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT));\n    }\n\n    @:noCompletion\n    @:arrayAccess\n    public inline function __set(idx:Int, val:UInt) {\n        return ArrayBufferIO.setUint16(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT), val);\n    }\n\n        function toString() return this != null ? 'UInt16Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n}\n\n#end //!js","package lime.utils;\n\n#if (js && !display)\n\n    @:forward\n    @:arrayAccess\n    abstract UInt32Array(js.html.Uint32Array)\n        from js.html.Uint32Array\n        to js.html.Uint32Array {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 4;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n            if(elements != null) {\n                this = new js.html.Uint32Array( elements );\n            } else if(array != null) {\n                this = new js.html.Uint32Array( untyped array );\n            } else if(view != null) {\n                this = new js.html.Uint32Array( untyped view );\n            } else if(buffer != null) {\n                if(len == null) {\n                    this = new js.html.Uint32Array( buffer, byteoffset );\n                } else {\n                    this = new js.html.Uint32Array( buffer, byteoffset, len );\n                }\n            } else {\n                this = null;\n            }\n        }\n\n        @:arrayAccess inline function __set(idx:Int, val:UInt) return this[idx] = val;\n        @:arrayAccess inline function __get(idx:Int) : UInt return this[idx];\n\n\n            //non spec haxe conversions\n        public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : UInt32Array {\n            if(byteOffset == null) return new js.html.Uint32Array(cast bytes.getData());\n            if(len == null) return new js.html.Uint32Array(cast bytes.getData(), byteOffset);\n            return new js.html.Uint32Array(cast bytes.getData(), byteOffset, len);\n        }\n\n        public function toBytes() : haxe.io.Bytes {\n            #if (haxe_ver < 3.2)\n            return @:privateAccess new haxe.io.Bytes( this.byteLength, cast new js.html.Uint8Array(this.buffer) );\n            #else\n                return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\n            #end\n    }\n\n        function toString() return this != null ? 'UInt32Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#else\n\n    import lime.utils.ArrayBufferView;\n\n@:forward()\n@:arrayAccess\nabstract UInt32Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\n\n    public inline static var BYTES_PER_ELEMENT : Int = 4;\n\n    public var length (get, never):Int;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n\n            if(elements != null) {\n                this = new ArrayBufferView( elements, Uint32 );\n            } else if(array != null) {\n                this = new ArrayBufferView(0, Uint32).initArray(array);\n            } else if(view != null) {\n                this = new ArrayBufferView(0, Uint32).initTypedArray(view);\n            } else if(buffer != null) {\n                this = new ArrayBufferView(0, Uint32).initBuffer(buffer, byteoffset, len);\n            } else {\n                throw \"Invalid constructor arguments for Uint32Array\";\n            }\n        }\n\n//Public API\n\n    public inline function subarray( begin:Int, end:Null<Int> = null) : UInt32Array return this.subarray(begin, end);\n\n\n            //non spec haxe conversions\n        public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : UInt32Array {\n            return new UInt32Array(bytes, byteOffset, len);\n        }\n\n        public function toBytes() : haxe.io.Bytes {\n            return this.buffer;\n        }\n\n//Internal\n\n    inline function get_length() return this.length;\n\n\n    @:noCompletion\n    @:arrayAccess\n    public inline function __get(idx:Int) {\n        return ArrayBufferIO.getUint32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT));\n    }\n\n    @:noCompletion\n    @:arrayAccess\n    public inline function __set(idx:Int, val:UInt) {\n        return ArrayBufferIO.setUint32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT), val);\n    }\n\n        function toString() return this != null ? 'UInt32Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n}\n\n#end //!js","package openfl; #if (!openfl_legacy || (openfl_legacy && lime_hybrid))\r\n#if !macro\r\n\r\n\r\nimport haxe.Unserializer;\r\nimport lime.app.Future;\r\nimport lime.app.Promise;\r\nimport lime.text.Font in LimeFont;\r\nimport lime.Assets.AssetLibrary in LimeAssetLibrary;\r\nimport lime.Assets in LimeAssets;\r\nimport openfl.display.Bitmap;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.MovieClip;\r\nimport openfl.events.Event;\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.media.Sound;\r\nimport openfl.net.URLRequest;\r\nimport openfl.text.Font;\r\nimport openfl.utils.ByteArray;\r\n\r\n\r\n/**\r\n * <p>The Assets class provides a cross-platform interface to access \r\n * embedded images, fonts, sounds and other resource files.</p>\r\n * \r\n * <p>The contents are populated automatically when an application\r\n * is compiled using the OpenFL command-line tools, based on the\r\n * contents of the *.xml project file.</p>\r\n * \r\n * <p>For most platforms, the assets are included in the same directory\r\n * or package as the application, and the paths are handled\r\n * automatically. For web content, the assets are preloaded before\r\n * the start of the rest of the application. You can customize the \r\n * preloader by extending the <code>NMEPreloader</code> class,\r\n * and specifying a custom preloader using <window preloader=\"\" />\r\n * in the project file.</p>\r\n */\r\n\r\n@:access(lime.Assets)\r\n@:access(openfl.AssetLibrary)\r\n@:access(openfl.display.BitmapData)\r\n@:access(openfl.text.Font)\r\n\r\n\r\nclass Assets {\r\n\t\r\n\t\r\n\tpublic static var cache:IAssetCache = new AssetCache ();\r\n\t\r\n\tprivate static var dispatcher = new EventDispatcher ();\r\n\t\r\n\t\r\n\tpublic static function addEventListener (type:String, listener:Dynamic, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {\r\n\t\t\r\n\t\tif (!LimeAssets.onChange.has (LimeAssets_onChange)) {\r\n\t\t\t\r\n\t\t\tLimeAssets.onChange.add (LimeAssets_onChange);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tdispatcher.addEventListener (type, listener, useCapture, priority, useWeakReference);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function dispatchEvent (event:Event):Bool {\r\n\t\t\r\n\t\treturn dispatcher.dispatchEvent (event);\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Returns whether a specific asset exists\r\n\t * @param\tid \t\tThe ID or asset path for the asset\r\n\t * @param\ttype\tThe asset type to match, or null to match any type\r\n\t * @return\t\tWhether the requested asset ID and type exists\r\n\t */\r\n\tpublic static function exists (id:String, type:AssetType = null):Bool {\r\n\t\t\r\n\t\treturn LimeAssets.exists (id, cast type);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Gets an instance of an embedded bitmap\r\n\t * @usage\t\tvar bitmap = new Bitmap (Assets.getBitmapData (\"image.png\"));\r\n\t * @param\tid\t\tThe ID or asset path for the bitmap\r\n\t * @param\tuseCache\t\t(Optional) Whether to allow use of the asset cache (Default: true)\r\n\t * @return\t\tA new BitmapData object\r\n\t */\r\n\tpublic static function getBitmapData (id:String, useCache:Bool = true):BitmapData {\r\n\t\t\r\n\t\t#if (tools && !display)\r\n\t\t\r\n\t\tif (useCache && cache.enabled && cache.hasBitmapData (id)) {\r\n\t\t\t\r\n\t\t\tvar bitmapData = cache.getBitmapData (id);\r\n\t\t\t\r\n\t\t\tif (isValidBitmapData (bitmapData)) {\r\n\t\t\t\t\r\n\t\t\t\treturn bitmapData;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar image = LimeAssets.getImage (id, false);\r\n\t\t\r\n\t\tif (image != null) {\r\n\t\t\t\r\n\t\t\t#if flash\r\n\t\t\tvar bitmapData = image.src;\r\n\t\t\t#else\r\n\t\t\tvar bitmapData = BitmapData.fromImage (image);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tif (useCache && cache.enabled) {\r\n\t\t\t\t\r\n\t\t\t\tcache.setBitmapData (id, bitmapData);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn bitmapData;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Gets an instance of an embedded binary asset\r\n\t * @usage\t\tvar bytes = Assets.getBytes (\"file.zip\");\r\n\t * @param\tid\t\tThe ID or asset path for the asset\r\n\t * @return\t\tA new ByteArray object\r\n\t */\r\n\tpublic static function getBytes (id:String):ByteArray {\r\n\t\t\r\n\t\treturn LimeAssets.getBytes (id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Gets an instance of an embedded font\r\n\t * @usage\t\tvar fontName = Assets.getFont (\"font.ttf\").fontName;\r\n\t * @param\tid\t\tThe ID or asset path for the font\r\n\t * @param\tuseCache\t\t(Optional) Whether to allow use of the asset cache (Default: true)\r\n\t * @return\t\tA new Font object\r\n\t */\r\n\tpublic static function getFont (id:String, useCache:Bool = true):Font {\r\n\t\t\r\n\t\t#if (tools && !display)\r\n\t\t\r\n\t\tif (useCache && cache.enabled && cache.hasFont (id)) {\r\n\t\t\t\r\n\t\t\treturn cache.getFont (id);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar limeFont = LimeAssets.getFont (id, false);\r\n\t\t\r\n\t\tif (limeFont != null) {\r\n\t\t\t\r\n\t\t\t#if flash\r\n\t\t\tvar font = limeFont.src;\r\n\t\t\t#else\r\n\t\t\tvar font = Font.__fromLimeFont (limeFont);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tif (useCache && cache.enabled) {\r\n\t\t\t\t\r\n\t\t\t\tcache.setFont (id, font);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn font;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\treturn new Font ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function getLibrary (name:String):LimeAssetLibrary {\r\n\t\t\r\n\t\treturn LimeAssets.getLibrary (name);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Gets an instance of an included MovieClip\r\n\t * @usage\t\tvar movieClip = Assets.getMovieClip (\"library:BouncingBall\");\r\n\t * @param\tid\t\tThe ID for the MovieClip\r\n\t * @return\t\tA new MovieClip object\r\n\t */\r\n\tpublic static function getMovieClip (id:String):MovieClip {\r\n\t\t\r\n\t\t#if (tools && !display)\r\n\t\t\r\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\r\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\r\n\t\tvar library:AssetLibrary = cast getLibrary (libraryName);\r\n\t\t\r\n\t\tif (library != null) {\r\n\t\t\t\r\n\t\t\tif (library.exists (symbolName, cast AssetType.MOVIE_CLIP)) {\r\n\t\t\t\t\r\n\t\t\t\tif (library.isLocal (symbolName, cast AssetType.MOVIE_CLIP)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn library.getMovieClip (symbolName);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\ttrace (\"[openfl.Assets] MovieClip asset \\\"\" + id + \"\\\" exists, but only asynchronously\");\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\ttrace (\"[openfl.Assets] There is no MovieClip asset with an ID of \\\"\" + id + \"\\\"\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\ttrace (\"[openfl.Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Gets an instance of an embedded streaming sound\r\n\t * @usage\t\tvar sound = Assets.getMusic (\"sound.ogg\");\r\n\t * @param\tid\t\tThe ID or asset path for the audio stream\r\n\t * @param\tuseCache\t\t(Optional) Whether to allow use of the asset cache (Default: true)\r\n\t * @return\t\tA new Sound object\r\n\t */\r\n\tpublic static function getMusic (id:String, useCache:Bool = true):Sound {\r\n\t\t\r\n\t\t#if flash\r\n\t\tvar buffer = LimeAssets.getAudioBuffer (id, useCache);\r\n\t\treturn (buffer != null) ? buffer.src : null;\r\n\t\t#else\r\n\t\t#if !html5\r\n\t\treturn Sound.fromAudioBuffer (LimeAssets.getAudioBuffer (id, useCache));\r\n\t\t#else\r\n\t\tvar path = LimeAssets.getPath (id);\r\n\t\t\r\n\t\tif (path != null) {\r\n\t\t\t\r\n\t\t\treturn new Sound (new URLRequest (path));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t#end\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Gets the file path (if available) for an asset\r\n\t * @usage\t\tvar path = Assets.getPath (\"file.txt\");\r\n\t * @param\tid\t\tThe ID or asset path for the asset\r\n\t * @return\t\tThe path to the asset, or null if it does not exist\r\n\t */\r\n\tpublic static function getPath (id:String):String {\r\n\t\t\r\n\t\treturn LimeAssets.getPath (id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Gets an instance of an embedded sound\r\n\t * @usage\t\tvar sound = Assets.getSound (\"sound.wav\");\r\n\t * @param\tid\t\tThe ID or asset path for the sound\r\n\t * @param\tuseCache\t\t(Optional) Whether to allow use of the asset cache (Default: true)\r\n\t * @return\t\tA new Sound object\r\n\t */\r\n\tpublic static function getSound (id:String, useCache:Bool = true):Sound {\r\n\t\t\r\n\t\t#if (tools && !display)\r\n\t\t\r\n\t\tif (useCache && cache.enabled && cache.hasSound (id)) {\r\n\t\t\t\r\n\t\t\tvar sound = cache.getSound (id);\r\n\t\t\t\r\n\t\t\tif (isValidSound (sound)) {\r\n\t\t\t\t\r\n\t\t\t\treturn sound;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#if !html5\r\n\t\tvar buffer = LimeAssets.getAudioBuffer (id, false);\r\n\t\t\r\n\t\tif (buffer != null) {\r\n\t\t\t\r\n\t\t\t#if flash\r\n\t\t\tvar sound = buffer.src;\r\n\t\t\t#else\r\n\t\t\tvar sound = Sound.fromAudioBuffer (buffer);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tif (useCache && cache.enabled) {\r\n\t\t\t\t\r\n\t\t\t\tcache.setSound (id, sound);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn sound;\r\n\t\t\t\r\n\t\t}\r\n\t\t#else\r\n\t\tvar path = LimeAssets.getPath (id);\r\n\t\t\r\n\t\tif (path != null) {\r\n\t\t\t\r\n\t\t\treturn new Sound (new URLRequest (path));\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Gets an instance of an embedded text asset\r\n\t * @usage\t\tvar text = Assets.getText (\"text.txt\");\r\n\t * @param\tid\t\tThe ID or asset path for the asset\r\n\t * @return\t\tA new String object\r\n\t */\r\n\tpublic static function getText (id:String):String {\r\n\t\t\r\n\t\treturn LimeAssets.getText (id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function hasEventListener (type:String):Bool {\r\n\t\t\r\n\t\treturn dispatcher.hasEventListener (type);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Returns whether an asset is \"local\", and therefore can be loaded synchronously\r\n\t * @param\tid \t\tThe ID or asset path for the asset\r\n\t * @param\ttype\tThe asset type to match, or null to match any type\r\n\t * @param\tuseCache\t\t(Optional) Whether to allow use of the asset cache (Default: true)\r\n\t * @return\tWhether the asset is local\r\n\t */\r\n\tpublic static function isLocal (id:String, type:AssetType = null, useCache:Bool = true):Bool {\r\n\t\t\r\n\t\t#if (tools && !display)\r\n\t\t\r\n\t\tif (useCache && cache.enabled) {\r\n\t\t\t\r\n\t\t\tif (type == AssetType.IMAGE || type == null) {\r\n\t\t\t\t\r\n\t\t\t\tif (cache.hasBitmapData (id)) return true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (type == AssetType.FONT || type == null) {\r\n\t\t\t\t\r\n\t\t\t\tif (cache.hasFont (id)) return true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (type == AssetType.SOUND || type == AssetType.MUSIC || type == null) {\r\n\t\t\t\t\r\n\t\t\t\tif (cache.hasSound (id)) return true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\r\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\r\n\t\tvar library = getLibrary (libraryName);\r\n\t\t\r\n\t\tif (library != null) {\r\n\t\t\t\r\n\t\t\treturn library.isLocal (symbolName, cast type);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function isValidBitmapData (bitmapData:BitmapData):Bool {\r\n\t\t\r\n\t\t#if (tools && !display)\r\n\t\t#if flash\r\n\t\t\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tbitmapData.width;\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t} catch (e:Dynamic) {\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\treturn (bitmapData != null && #if !lime_hybrid bitmapData.image != null #else bitmapData.__handle != null #end);\r\n\t\t\r\n\t\t#end\r\n\t\t#else\r\n\t\t\r\n\t\treturn true;\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function isValidSound (sound:Sound):Bool {\r\n\t\t\r\n\t\t#if ((tools && !display) && (cpp || neko || nodejs))\r\n\t\t\r\n\t\treturn true;\r\n\t\t//return (sound.__handle != null && sound.__handle != 0);\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\treturn true;\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Returns a list of all embedded assets (by type)\r\n\t * @param\ttype\tThe asset type to match, or null to match any type\r\n\t * @return\tAn array of asset ID values\r\n\t */\r\n\tpublic static function list (type:AssetType = null):Array<String> {\r\n\t\t\r\n\t\treturn LimeAssets.list (cast type);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Loads an included bitmap asset asynchronously\r\n\t * @usage\t\tAsset.loadBitmapData (\"image.png\").onComplete (handleImage);\r\n\t * @param\tid \t\tThe ID or asset path for the asset\r\n\t * @param\tuseCache\t\t(Optional) Whether to allow use of the asset cache (Default: true)\r\n\t * @param\thandler\t\t(Deprecated) A callback function when the load is completed\r\n\t * @return\t\tReturns a Future<BitmapData>\r\n\t */\r\n\tpublic static function loadBitmapData (id:String, useCache:Null<Bool> = true, handler:BitmapData->Void = null):Future<BitmapData> {\r\n\t\t\r\n\t\tif (useCache == null) useCache = true;\r\n\t\t\r\n\t\tvar promise = new Promise<BitmapData> ();\r\n\t\t\r\n\t\tif (handler != null) {\r\n\t\t\t\r\n\t\t\tpromise.future.onComplete (handler);\r\n\t\t\tpromise.future.onError (function (_) handler (null));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#if (tools && !display)\r\n\t\t\r\n\t\tif (useCache && cache.enabled && cache.hasBitmapData (id)) {\r\n\t\t\t\r\n\t\t\tvar bitmapData = cache.getBitmapData (id);\r\n\t\t\t\r\n\t\t\tif (isValidBitmapData (bitmapData)) {\r\n\t\t\t\t\r\n\t\t\t\tpromise.complete (bitmapData);\r\n\t\t\t\treturn promise.future;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tLimeAssets.loadImage (id, false).onComplete (function (image) {\r\n\t\t\t\r\n\t\t\tif (image != null) {\r\n\t\t\t\t\r\n\t\t\t\t#if flash\r\n\t\t\t\tvar bitmapData = image.src;\r\n\t\t\t\t#else\r\n\t\t\t\tvar bitmapData = BitmapData.fromImage (image);\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\tif (useCache && cache.enabled) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcache.setBitmapData (id, bitmapData);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tpromise.complete (bitmapData);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tpromise.error (\"[Assets] Could not load Image \\\"\" + id + \"\\\"\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}).onError (promise.error).onProgress (promise.progress);\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\treturn promise.future;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Loads an included byte asset asynchronously\r\n\t * @usage\t\tAsset.loadBytes (\"file.zip\").onComplete (handleBytes);\r\n\t * @param\tid \t\tThe ID or asset path for the asset\r\n\t * @param\tuseCache\t\t(Optional) Whether to allow use of the asset cache (Default: true)\r\n\t * @param\thandler\t\t(Deprecated) A callback function when the load is completed\r\n\t * @return\t\tReturns a Future<ByteArray>\r\n\t */\r\n\tpublic static function loadBytes (id:String, handler:ByteArray->Void = null):Future<ByteArray> {\r\n\t\t\r\n\t\tvar promise = new Promise<ByteArray> ();\r\n\t\tvar future = LimeAssets.loadBytes (id);\r\n\t\t\r\n\t\tif (handler != null) {\r\n\t\t\t\r\n\t\t\tpromise.future.onComplete (handler);\r\n\t\t\tpromise.future.onError (function (_) handler (null));\r\n\t\t\t\r\n\t\t\tfuture.onComplete (function (bytes) promise.complete (bytes));\r\n\t\t\tfuture.onProgress (function (progress) promise.progress (progress));\r\n\t\t\tfuture.onError (function (msg) promise.error (msg));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn promise.future;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Loads an included font asset asynchronously\r\n\t * @usage\t\tAsset.loadFont (\"font.ttf\").onComplete (handleFont);\r\n\t * @param\tid \t\tThe ID or asset path for the asset\r\n\t * @param\tuseCache\t\t(Optional) Whether to allow use of the asset cache (Default: true)\r\n\t * @param\thandler\t\t(Deprecated) A callback function when the load is completed\r\n\t * @return\t\tReturns a Future<Font>\r\n\t */\r\n\tpublic static function loadFont (id:String, useCache:Null<Bool> = true, handler:Font->Void = null):Future<Font> {\r\n\t\t\r\n\t\tif (useCache == null) useCache = true;\r\n\t\t\r\n\t\tvar promise = new Promise<Font> ();\r\n\t\t\r\n\t\tif (handler != null) {\r\n\t\t\t\r\n\t\t\tpromise.future.onComplete (handler);\r\n\t\t\tpromise.future.onError (function (_) handler (null));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#if (tools && !display)\r\n\t\t\r\n\t\tif (useCache && cache.enabled && cache.hasFont (id)) {\r\n\t\t\t\r\n\t\t\tpromise.complete (cache.getFont (id));\r\n\t\t\treturn promise.future;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tLimeAssets.loadFont (id).onComplete (function (limeFont) {\r\n\t\t\t\r\n\t\t\t#if flash\r\n\t\t\tvar font = limeFont.src;\r\n\t\t\t#else\r\n\t\t\tvar font = Font.__fromLimeFont (limeFont);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tif (useCache && cache.enabled) {\r\n\t\t\t\t\r\n\t\t\t\tcache.setFont (id, font);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tpromise.complete (font);\r\n\t\t\t\r\n\t\t}).onError (promise.error).onProgress (promise.progress);\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\treturn promise.future;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Load an included AssetLibrary\r\n\t * @param\tname\t\tThe name of the AssetLibrary to load\r\n\t * @param\thandler\t\t(Deprecated) A callback function when the load is completed\r\n\t * @return\t\tReturns a Future<AssetLibrary>\r\n\t */\r\n\tpublic static function loadLibrary (name:String, handler:LimeAssetLibrary->Void = null):Future<LimeAssetLibrary> {\r\n\t\t\r\n\t\tvar future = LimeAssets.loadLibrary (name);\r\n\t\t\r\n\t\tif (handler != null) {\r\n\t\t\t\r\n\t\t\tfuture.onComplete (handler);\r\n\t\t\tfuture.onError (function (_) handler (null));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn future;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Loads an included music asset asynchronously\r\n\t * @usage\t\tAsset.loadMusic (\"music.ogg\").onComplete (handleMusic);\r\n\t * @param\tid \t\tThe ID or asset path for the asset\r\n\t * @param\tuseCache\t\t(Optional) Whether to allow use of the asset cache (Default: true)\r\n\t * @param\thandler\t\t(Deprecated) A callback function when the load is completed\r\n\t * @return\t\tReturns a Future<Sound>\r\n\t */\r\n\tpublic static function loadMusic (id:String, useCache:Null<Bool> = true, handler:Sound->Void = null):Future<Sound> {\r\n\t\t\r\n\t\tif (useCache == null) useCache = true;\r\n\t\t\r\n\t\t#if !html5\r\n\t\t\r\n\t\tvar promise = new Promise<Sound> ();\r\n\t\t\r\n\t\tLimeAssets.loadAudioBuffer (id, useCache).onComplete (function (buffer) {\r\n\t\t\t\r\n\t\t\tif (buffer != null) {\r\n\t\t\t\t\r\n\t\t\t\t#if flash\r\n\t\t\t\tpromise.complete (buffer.src);\r\n\t\t\t\t#else\r\n\t\t\t\tpromise.complete (Sound.fromAudioBuffer (buffer));\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tpromise.error (\"[Assets] Could not load Sound \\\"\" + id + \"\\\"\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}).onError (promise.error).onProgress (promise.progress);\r\n\t\treturn promise.future;\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\treturn new Future<Sound> (function () return getMusic (id, useCache));\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Loads an included MovieClip asset asynchronously\r\n\t * @usage\t\tAsset.loadMovieClip (\"library:BouncingBall\").onComplete (handleMovieClip);\r\n\t * @param\tid \t\tThe ID for the asset\r\n\t * @param\tuseCache\t\t(Optional) Whether to allow use of the asset cache (Default: true)\r\n\t * @param\thandler\t\t(Deprecated) A callback function when the load is completed\r\n\t * @return\t\tReturns a Future<MovieClip>\r\n\t */\r\n\tpublic static function loadMovieClip (id:String, handler:MovieClip->Void = null):Future<MovieClip> {\r\n\t\t\r\n\t\tvar promise = new Promise<MovieClip> ();\r\n\t\t\r\n\t\tif (handler != null) {\r\n\t\t\t\r\n\t\t\tpromise.future.onComplete (handler);\r\n\t\t\tpromise.future.onError (function (_) handler (null));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#if (tools && !display)\r\n\t\t\r\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\r\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\r\n\t\tvar library:AssetLibrary = cast getLibrary (libraryName);\r\n\t\t\r\n\t\tif (library != null) {\r\n\t\t\t\r\n\t\t\tif (library.exists (symbolName, cast AssetType.MOVIE_CLIP)) {\r\n\t\t\t\t\r\n\t\t\t\tpromise.completeWith (library.loadMovieClip (symbolName));\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tpromise.error (\"[Assets] There is no MovieClip asset with an ID of \\\"\" + id + \"\\\"\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tpromise.error (\"[Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\treturn promise.future;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Loads an included sound asset asynchronously\r\n\t * @usage\t\tAsset.loadSound (\"sound.wav\").onComplete (handleSound);\r\n\t * @param\tid \t\tThe ID or asset path for the asset\r\n\t * @param\tuseCache\t\t(Optional) Whether to allow use of the asset cache (Default: true)\r\n\t * @param\thandler\t\t(Deprecated) A callback function when the load is completed\r\n\t * @return\t\tReturns a Future<Sound>\r\n\t */\r\n\tpublic static function loadSound (id:String, useCache:Null<Bool> = true, handler:Sound->Void = null):Future<Sound> {\r\n\t\t\r\n\t\tif (useCache == null) useCache = true;\r\n\t\t\r\n\t\t#if !html5\r\n\t\t\r\n\t\tvar promise = new Promise<Sound> ();\r\n\t\t\r\n\t\tLimeAssets.loadAudioBuffer (id, useCache).onComplete (function (buffer) {\r\n\t\t\t\r\n\t\t\tif (buffer != null) {\r\n\t\t\t\t\r\n\t\t\t\t#if flash\r\n\t\t\t\tpromise.complete (buffer.src);\r\n\t\t\t\t#else\r\n\t\t\t\tpromise.complete (Sound.fromAudioBuffer (buffer));\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tpromise.error (\"[Assets] Could not load Sound \\\"\" + id + \"\\\"\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}).onError (promise.error).onProgress (promise.progress);\r\n\t\treturn promise.future;\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\treturn new Future<Sound> (function () return getSound (id, useCache));\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Loads an included text asset asynchronously\r\n\t * @usage\t\tAsset.loadText (\"text.txt\").onComplete (handleString);\r\n\t * @param\tid \t\tThe ID or asset path for the asset\r\n\t * @param\tuseCache\t\t(Optional) Whether to allow use of the asset cache (Default: true)\r\n\t * @param\thandler\t\t(Deprecated) A callback function when the load is completed\r\n\t * @return\t\tReturns a Future<String>\r\n\t */\r\n\tpublic static function loadText (id:String, handler:String->Void = null):Future<String> {\r\n\t\t\r\n\t\tvar future = LimeAssets.loadText (id);\r\n\t\t\r\n\t\tif (handler != null) {\r\n\t\t\t\r\n\t\t\tfuture.onComplete (handler);\r\n\t\t\tfuture.onError (function (_) handler (null));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn future;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Registers a new AssetLibrary with the Assets class\r\n\t * @param\tname\t\tThe name (prefix) to use for the library\r\n\t * @param\tlibrary\t\tAn AssetLibrary instance to register\r\n\t */\r\n\tpublic static function registerLibrary (name:String, library:AssetLibrary):Void {\r\n\t\t\r\n\t\tLimeAssets.registerLibrary (name, library);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function removeEventListener (type:String, listener:Dynamic, capture:Bool = false):Void {\r\n\t\t\r\n\t\tdispatcher.removeEventListener (type, listener, capture);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function resolveClass (name:String):Class <Dynamic> {\r\n\t\t\r\n\t\treturn Type.resolveClass (name);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function resolveEnum (name:String):Enum <Dynamic> {\r\n\t\t\r\n\t\tvar value = Type.resolveEnum (name);\r\n\t\t\r\n\t\t#if flash\r\n\t\t\r\n\t\tif (value == null) {\r\n\t\t\t\r\n\t\t\treturn cast Type.resolveClass (name);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function unloadLibrary (name:String):Void {\r\n\t\t\r\n\t\tLimeAssets.unloadLibrary (name);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Event Handlers\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate static function LimeAssets_onChange ():Void {\r\n\t\t\r\n\t\tdispatchEvent (new Event (Event.CHANGE));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n@:dox(hide) class AssetLibrary extends LimeAssetLibrary {\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getMovieClip (id:String):MovieClip {\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function loadMovieClip (id:String):Future<MovieClip> {\r\n\t\t\r\n\t\treturn new Future<MovieClip> (function () return getMovieClip (id));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n@:dox(hide) class AssetCache implements IAssetCache {\r\n\t\r\n\t\r\n\tpublic var enabled (get, set):Bool;\r\n\t\r\n\t/* deprecated */ @:dox(hide) public var bitmapData:Map<String, BitmapData>;\r\n\t/* deprecated */ @:dox(hide) public var font:Map<String, Font>;\r\n\t/* deprecated */ @:dox(hide) public var sound:Map<String, Sound>;\r\n\t\r\n\tprivate var __enabled = true;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tbitmapData = new Map<String, BitmapData> ();\r\n\t\tfont = new Map<String, Font> ();\r\n\t\tsound = new Map<String, Sound> ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clear (prefix:String = null):Void {\r\n\t\t\r\n\t\tif (prefix == null) {\r\n\t\t\t\r\n\t\t\tbitmapData = new Map<String, BitmapData> ();\r\n\t\t\tfont = new Map<String, Font> ();\r\n\t\t\tsound = new Map<String, Sound> ();\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar keys = bitmapData.keys ();\r\n\t\t\t\r\n\t\t\tfor (key in keys) {\r\n\t\t\t\t\r\n\t\t\t\tif (StringTools.startsWith (key, prefix)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tbitmapData.remove (key);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar keys = font.keys ();\r\n\t\t\t\r\n\t\t\tfor (key in keys) {\r\n\t\t\t\t\r\n\t\t\t\tif (StringTools.startsWith (key, prefix)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tfont.remove (key);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar keys = sound.keys ();\r\n\t\t\t\r\n\t\t\tfor (key in keys) {\r\n\t\t\t\t\r\n\t\t\t\tif (StringTools.startsWith (key, prefix)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tsound.remove (key);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getBitmapData (id:String):BitmapData {\r\n\t\t\r\n\t\treturn bitmapData.get (id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getFont (id:String):Font {\r\n\t\t\r\n\t\treturn font.get (id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getSound (id:String):Sound {\r\n\t\t\r\n\t\treturn sound.get (id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function hasBitmapData (id:String):Bool {\r\n\t\t\r\n\t\treturn bitmapData.exists (id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function hasFont (id:String):Bool {\r\n\t\t\r\n\t\treturn font.exists (id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function hasSound (id:String):Bool {\r\n\t\t\r\n\t\treturn sound.exists (id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function removeBitmapData (id:String):Bool {\r\n\t\t\r\n\t\treturn bitmapData.remove (id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function removeFont (id:String):Bool {\r\n\t\t\r\n\t\treturn font.remove (id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function removeSound (id:String):Bool {\r\n\t\t\r\n\t\treturn sound.remove (id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setBitmapData (id:String, bitmapData:BitmapData):Void {\r\n\t\t\r\n\t\tthis.bitmapData.set (id, bitmapData);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setFont (id:String, font:Font):Void {\r\n\t\t\r\n\t\tthis.font.set (id, font);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setSound (id:String, sound:Sound):Void {\r\n\t\t\r\n\t\tthis.sound.set (id, sound);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_enabled ():Bool {\r\n\t\t\r\n\t\treturn __enabled;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_enabled (value:Bool):Bool {\r\n\t\t\r\n\t\treturn __enabled = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n@:dox(hide) interface IAssetCache {\r\n\t\r\n\tpublic var enabled (get, set):Bool;\r\n\t\r\n\tpublic function clear (prefix:String = null):Void;\r\n\tpublic function getBitmapData (id:String):BitmapData;\r\n\tpublic function getFont (id:String):Font;\r\n\tpublic function getSound (id:String):Sound;\r\n\tpublic function hasBitmapData (id:String):Bool;\r\n\tpublic function hasFont (id:String):Bool;\r\n\tpublic function hasSound (id:String):Bool;\r\n\tpublic function removeBitmapData (id:String):Bool;\r\n\tpublic function removeFont (id:String):Bool;\r\n\tpublic function removeSound (id:String):Bool;\r\n\tpublic function setBitmapData (id:String, bitmapData:BitmapData):Void;\r\n\tpublic function setFont (id:String, font:Font):Void;\r\n\tpublic function setSound (id:String, sound:Sound):Void;\r\n\t\r\n}\r\n\r\n\r\n@:dox(hide) @:enum abstract AssetType(String) {\r\n\t\r\n\tvar BINARY = \"BINARY\";\r\n\tvar FONT = \"FONT\";\r\n\tvar IMAGE = \"IMAGE\";\r\n\tvar MOVIE_CLIP = \"MOVIE_CLIP\";\r\n\tvar MUSIC = \"MUSIC\";\r\n\tvar SOUND = \"SOUND\";\r\n\tvar TEMPLATE = \"TEMPLATE\";\r\n\tvar TEXT = \"TEXT\";\r\n\t\r\n}\r\n\r\n\r\n#else\r\n\r\n\r\nimport haxe.crypto.BaseCode;\r\nimport haxe.io.Bytes;\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\nimport haxe.macro.Type;\r\nimport haxe.Serializer;\r\nimport sys.io.File;\r\n\r\n\r\nclass Assets {\r\n\t\r\n\t\r\n\tprivate static var base64Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\tprivate static var base64Encoder:BaseCode;\r\n\t\r\n\t\r\n\tprivate static function base64Encode (bytes:Bytes):String {\r\n\t\t\r\n\t\tvar extension = switch (bytes.length % 3) {\r\n\t\t\t\r\n\t\t\tcase 1: \"==\";\r\n\t\t\tcase 2: \"=\";\r\n\t\t\tdefault: \"\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (base64Encoder == null) {\r\n\t\t\t\r\n\t\t\tbase64Encoder = new BaseCode (Bytes.ofString (base64Chars));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn base64Encoder.encodeBytes (bytes).toString () + extension;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tmacro public static function embedBitmap ():Array<Field> {\r\n\t\t\r\n\t\t#if html5\r\n\t\tvar fields = embedData (\":bitmap\", true);\r\n\t\t#else\r\n\t\tvar fields = embedData (\":bitmap\");\r\n\t\t#end\r\n\t\t\r\n\t\tif (fields != null) {\r\n\t\t\t\r\n\t\t\tvar constructor = macro { \r\n\t\t\t\t\r\n\t\t\t\t#if html5\r\n\t\t\t\t\r\n\t\t\t\tsuper (0, 0, transparent, fillRGBA);\r\n\t\t\t\t\r\n\t\t\t\tif (preload != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__fromImage(preload);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__fromBase64 (haxe.Resource.getString (resourceName), resourceType, function (b) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (preload == null) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tpreload = b.image;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (onload != null) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tonload (b);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t#else\r\n\t\t\t\t\r\n\t\t\t\tsuper (width, height, transparent, fillRGBA);\r\n\t\t\t\t\r\n\t\t\t\t#if lime_console\r\n\t\t\t\t__fromFile (filePath, null, null);\r\n\t\t\t\t#else\r\n\t\t\t\tvar byteArray = openfl.utils.ByteArray.fromBytes (haxe.Resource.getBytes (resourceName));\r\n\t\t\t\t__fromBytes (byteArray);\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar args = [ { name: \"width\", opt: false, type: macro :Int, value: null }, { name: \"height\", opt: false, type: macro :Int, value: null }, { name: \"transparent\", opt: true, type: macro :Bool, value: macro true }, { name: \"fillRGBA\", opt: true, type: macro :Int, value: macro 0xFFFFFFFF } ];\r\n\t\t\t\r\n\t\t\t#if html5\r\n\t\t\targs.push ({ name: \"onload\", opt: true, type: macro :Dynamic, value: null });\r\n\t\t\tfields.push ({ kind: FVar(macro :lime.graphics.Image, null), name: \"preload\", doc: null, meta: [], access: [ APublic, AStatic ], pos: Context.currentPos() });\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: args, expr: constructor, params: [], ret: null }), pos: Context.currentPos() });\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn fields;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if lime_console\r\n\t\r\n\tprivate static function embedData (metaName:String, encode:Bool = false):Array<Field> {\r\n\t\t\r\n\t\tvar classType = Context.getLocalClass().get();\r\n\t\tvar metaData = classType.meta.get();\r\n\t\tvar position = Context.currentPos();\r\n\t\tvar fields = Context.getBuildFields();\r\n\t\t\r\n\t\tfor (meta in metaData) {\r\n\t\t\t\r\n\t\t\tif (meta.name != metaName || meta.params.length <= 0) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tswitch (meta.params[0].expr) {\r\n\t\t\t\t\r\n\t\t\t\tcase EConst(CString(filePath)):\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar fieldValue = {\r\n\t\t\t\t\t\tpos: position,\r\n\t\t\t\t\t\texpr: EConst(CString(filePath))\r\n\t\t\t\t\t};\r\n\t\t\t\t\tfields.push ({\r\n\t\t\t\t\t\tkind: FVar(macro :String, fieldValue),\r\n\t\t\t\t\t\tname: \"filePath\",\r\n\t\t\t\t\t\taccess: [ APrivate, AStatic ],\r\n\t\t\t\t\t\tpos: position\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn fields;\r\n\t\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\r\n\t#else\r\n\t\r\n\tprivate static function embedData (metaName:String, encode:Bool = false):Array<Field> {\r\n\t\t\r\n\t\tvar classType = Context.getLocalClass().get();\r\n\t\tvar metaData = classType.meta.get();\r\n\t\tvar position = Context.currentPos();\r\n\t\tvar fields = Context.getBuildFields();\r\n\t\t\r\n\t\tfor (meta in metaData) {\r\n\t\t\t\r\n\t\t\tif (meta.name == metaName) {\r\n\t\t\t\t\r\n\t\t\t\tif (meta.params.length > 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch (meta.params[0].expr) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase EConst(CString(filePath)):\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar path = filePath;\r\n\t\t\t\t\t\t\tif (!sys.FileSystem.exists(filePath)) {\r\n\t\t\t\t\t\t\t\tpath = Context.resolvePath (filePath);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar bytes = File.getBytes (path);\r\n\t\t\t\t\t\t\tvar resourceName = \"__ASSET__\" + metaName + \"_\" + (classType.pack.length > 0 ? classType.pack.join (\"_\") + \"_\" : \"\") + classType.name;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (encode) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar resourceType = \"image/png\";\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (bytes.get (0) == 0xFF && bytes.get (1) == 0xD8) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tresourceType = \"image/jpg\";\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t} else if (bytes.get (0) == 0x47 && bytes.get (1) == 0x49 && bytes.get (2) == 0x46) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tresourceType = \"image/gif\";\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar fieldValue = { pos: position, expr: EConst(CString(resourceType)) };\r\n\t\t\t\t\t\t\t\tfields.push ({ kind: FVar(macro :String, fieldValue), name: \"resourceType\", access: [ APrivate, AStatic ], pos: position });\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar base64 = base64Encode (bytes);\r\n\t\t\t\t\t\t\t\tContext.addResource (resourceName, Bytes.ofString (base64));\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tContext.addResource (resourceName, bytes);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar fieldValue = { pos: position, expr: EConst(CString(resourceName)) };\r\n\t\t\t\t\t\t\tfields.push ({ kind: FVar(macro :String, fieldValue), name: \"resourceName\", access: [ APrivate, AStatic ], pos: position });\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn fields;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\r\n\t#end\r\n\t\r\n\t\r\n\tmacro public static function embedFile ():Array<Field> {\r\n\t\t\r\n\t\tvar fields = embedData (\":file\");\r\n\t\t\r\n\t\tif (fields != null) {\r\n\t\t\t\r\n\t\t\tvar constructor = macro { \r\n\t\t\t\t\r\n\t\t\t\tsuper();\r\n\t\t\t\t\r\n\t\t\t\t#if lime_console\r\n\t\t\t\tthrow \"not implemented\";\r\n\t\t\t\t#else\r\n\t\t\t\t__fromBytes (haxe.Resource.getBytes (resourceName));\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar args = [ { name: \"size\", opt: true, type: macro :Int, value: macro 0 } ];\r\n\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: args, expr: constructor, params: [], ret: null }), pos: Context.currentPos() });\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn fields;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tmacro public static function embedFont ():Array<Field> {\r\n\t\t\r\n\t\tvar fields = null;\r\n\t\t\r\n\t\tvar classType = Context.getLocalClass().get();\r\n\t\tvar metaData = classType.meta.get();\r\n\t\tvar position = Context.currentPos();\r\n\t\tvar fields = Context.getBuildFields();\r\n\t\t\r\n\t\tvar path = \"\";\r\n\t\tvar glyphs = \"32-255\";\r\n\t\t\r\n\t\tfor (meta in metaData) {\r\n\t\t\t\r\n\t\t\tif (meta.name == \":font\") {\r\n\t\t\t\t\r\n\t\t\t\tif (meta.params.length > 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch (meta.params[0].expr) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase EConst(CString(filePath)):\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tpath = filePath;\r\n\t\t\t\t\t\t\tif (!sys.FileSystem.exists(filePath)) {\r\n\t\t\t\t\t\t\t\tpath = Context.resolvePath (filePath);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (path != null && path != \"\") {\r\n\t\t\t\r\n\t\t\t#if html5\r\n\t\t\tSys.command (\"haxelib\", [ \"run\", \"openfl\", \"generate\", \"-font-hash\", sys.FileSystem.fullPath(path) ]);\r\n\t\t\tpath += \".hash\";\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tvar bytes = File.getBytes (path);\r\n\t\t\tvar resourceName = \"NME_font_\" + (classType.pack.length > 0 ? classType.pack.join (\"_\") + \"_\" : \"\") + classType.name;\r\n\t\t\t\r\n\t\t\tContext.addResource (resourceName, bytes);\r\n\t\t\t\r\n\t\t\tvar fieldValue = { pos: position, expr: EConst(CString(resourceName)) };\r\n\t\t\tfields.push ({ kind: FVar(macro :String, fieldValue), name: \"resourceName\", access: [ APublic, AStatic ], pos: position });\r\n\t\t\t\r\n\t\t\t//var constructor = macro { \r\n\t\t\t\t//\r\n\t\t\t\t//super();\r\n\t\t\t\t//\r\n\t\t\t\t//fontName = resourceName;\r\n\t\t\t\t//\r\n\t\t\t//};\r\n\t\t\t//\r\n\t\t\t//fields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: [], expr: constructor, params: [], ret: null }), pos: Context.currentPos() });\r\n\t\t\t\r\n\t\t\treturn fields;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn fields;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tmacro public static function embedSound ():Array<Field> {\r\n\t\t\r\n\t\tvar fields = embedData (\":sound\");\r\n\t\t\r\n\t\tif (fields != null) {\r\n\t\t\t\r\n\t\t\t#if (!html5) // CFFILoader.h(248) : NOT Implemented:api_buffer_data\r\n\t\t\t\r\n\t\t\tvar constructor = macro { \r\n\t\t\t\t\r\n\t\t\t\tsuper();\r\n\t\t\t\t\r\n\t\t\t\t#if lime_console\r\n\t\t\t\tthrow \"not implemented\";\r\n\t\t\t\t#else\r\n\t\t\t\tvar byteArray = openfl.utils.ByteArray.fromBytes (haxe.Resource.getBytes (resourceName));\r\n\t\t\t\tloadCompressedDataFromByteArray (byteArray, byteArray.length, forcePlayAsMusic);\r\n\t\t\t\t#end\r\n\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar args = [ { name: \"stream\", opt: true, type: macro :openfl.net.URLRequest, value: null }, { name: \"context\", opt: true, type: macro :openfl.media.SoundLoaderContext, value: null }, { name: \"forcePlayAsMusic\", opt: true, type: macro :Bool, value: macro false } ];\r\n\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: args, expr: constructor, params: [], ret: null }), pos: Context.currentPos() });\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn fields;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#end\r\n#else\r\ntypedef Assets = openfl._legacy.Assets;\r\n#if !macro\r\ntypedef AssetLibrary = openfl._legacy.Assets.AssetLibrary;\r\ntypedef AssetCache = openfl._legacy.Assets.AssetCache;\r\ntypedef IAssetCache = openfl._legacy.Assets.IAssetCache;\r\ntypedef AssetData = openfl._legacy.Assets.AssetData;\r\ntypedef AssetType = openfl._legacy.Assets.AssetType;\r\n#end\r\n#end\r\n","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nclass MovieClip extends Sprite {\r\n\t\r\n\t\r\n\tpublic var currentFrame (get, null):Int;\r\n\tpublic var currentFrameLabel (get, null):String;\r\n\tpublic var currentLabel (get, null):String;\r\n\tpublic var currentLabels (get, null):Array<FrameLabel>;\r\n\tpublic var enabled:Bool;\r\n\tpublic var framesLoaded (get, null):Int;\r\n\tpublic var totalFrames (get, null):Int;\r\n\t\r\n\tprivate var __currentFrame:Int;\r\n\tprivate var __currentFrameLabel:String;\r\n\tprivate var __currentLabel:String;\r\n\tprivate var __currentLabels:Array<FrameLabel>;\r\n\tprivate var __frameScripts:Map<Int, Void->Void>;\r\n\tprivate var __totalFrames:Int;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\t__currentFrame = 0;\r\n\t\t__currentLabels = [];\r\n\t\t__totalFrames = 0;\r\n\t\tenabled = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function addFrameScript (index:Int, method:Void->Void):Void {\r\n\t\t\r\n\t\tif (method != null) {\r\n\t\t\t\r\n\t\t\tif (__frameScripts == null) {\r\n\t\t\t\t\r\n\t\t\t\t__frameScripts = new Map ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__frameScripts.set (index, method);\r\n\t\t\t\r\n\t\t\ttrace (\"added script index \" + index);\r\n\t\t\t\r\n\t\t} else if (__frameScripts != null) {\r\n\t\t\t\r\n\t\t\t__frameScripts.remove (index);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function gotoAndPlay (frame:Dynamic, scene:String = null):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function gotoAndStop (frame:Dynamic, scene:String = null):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function nextFrame ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function play ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function prevFrame ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function stop ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_currentFrame ():Int { return __currentFrame; }\r\n\tprivate function get_currentFrameLabel ():String { return __currentFrameLabel; }\r\n\tprivate function get_currentLabel ():String { return __currentLabel; }\r\n\tprivate function get_currentLabels ():Array<FrameLabel> { return __currentLabels; }\r\n\tprivate function get_framesLoaded ():Int { return __totalFrames; }\r\n\tprivate function get_totalFrames ():Int { return __totalFrames; }\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef MovieClip = openfl._legacy.display.MovieClip;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.events.UncaughtErrorEvents;\r\nimport openfl.system.ApplicationDomain;\r\nimport openfl.utils.ByteArray;\r\n\r\n#if (js && html5)\r\nimport js.Browser;\r\n#end\r\n\r\n\r\nclass LoaderInfo extends EventDispatcher {\r\n\t\r\n\t\r\n\tprivate static var __rootURL = #if (js && html5) Browser.document.URL #else \"\" #end;\r\n\t\r\n\tpublic var applicationDomain (default, null):ApplicationDomain;\r\n\tpublic var bytes (default, null):ByteArray;\r\n\tpublic var bytesLoaded (default, null):Int;\r\n\tpublic var bytesTotal (default, null):Int;\r\n\tpublic var childAllowsParent (default, null):Bool;\r\n\tpublic var content (default, null):DisplayObject;\r\n\tpublic var contentType (default, null):String;\r\n\tpublic var frameRate (default, null):Float;\r\n\tpublic var height (default, null):Int;\r\n\tpublic var loader (default, null):Loader;\r\n\tpublic var loaderURL (default, null):String;\r\n\tpublic var parameters (default, null):Dynamic<String>;\r\n\tpublic var parentAllowsChild (default, null):Bool;\r\n\tpublic var sameDomain (default, null):Bool;\r\n\tpublic var sharedEvents (default, null):EventDispatcher;\r\n\tpublic var uncaughtErrorEvents (default, null):UncaughtErrorEvents;\r\n\tpublic var url (default, null):String;\r\n\tpublic var width (default, null):Int;\r\n\t//static function getLoaderInfoByDefinition(object : Dynamic) : LoaderInfo;\r\n\t\r\n\t\r\n\tprivate function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\tapplicationDomain = ApplicationDomain.currentDomain;\r\n\t\tbytesLoaded = 0;\r\n\t\tbytesTotal = 0;\r\n\t\tchildAllowsParent = true;\r\n\t\tparameters = {};\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function create (loader:Loader):LoaderInfo {\r\n\t\t\r\n\t\tvar loaderInfo = new LoaderInfo ();\r\n\t\tloaderInfo.uncaughtErrorEvents = new UncaughtErrorEvents ();\r\n\t\t\r\n\t\tif (loader != null) {\r\n\t\t\t\r\n\t\t\tloaderInfo.loader = loader;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tloaderInfo.url = __rootURL;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn loaderInfo;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef LoaderInfo = openfl._legacy.display.LoaderInfo;\r\n#end","package openfl.system;\r\n\r\n\r\nimport openfl.utils.Object;\r\n\r\n\r\n@:final class ApplicationDomain {\r\n\t\r\n\t\r\n\tpublic static var currentDomain (default, null) = new ApplicationDomain (null);\r\n\t\r\n\tpublic var parentDomain (default, null):ApplicationDomain;\r\n\t\r\n\t\r\n\tpublic function new (parentDomain:ApplicationDomain = null) {\r\n\t\t\r\n\t\tif (parentDomain != null) {\r\n\t\t\t\r\n\t\t\tthis.parentDomain = parentDomain;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tthis.parentDomain = currentDomain;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getDefinition (name:String):Class<Dynamic> {\r\n\t\t\r\n\t\treturn Type.resolveClass (name);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function hasDefinition (name:String):Bool {\r\n\t\t\r\n\t\treturn (Type.resolveClass (name) != null);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.events;\r\n\r\n\r\nclass UncaughtErrorEvents extends EventDispatcher {\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.geom; #if !openfl_legacy\r\n\r\n\r\nimport lime.math.ColorMatrix;\r\nimport lime.utils.Float32Array;\r\n\r\n\r\nclass ColorTransform {\r\n\t\r\n\t\r\n\tpublic var alphaMultiplier:Float;\r\n\tpublic var alphaOffset:Float;\r\n\tpublic var blueMultiplier:Float;\r\n\tpublic var blueOffset:Float;\r\n\tpublic var color (get, set):Int;\r\n\tpublic var greenMultiplier:Float;\r\n\tpublic var greenOffset:Float;\r\n\tpublic var redMultiplier:Float;\r\n\tpublic var redOffset:Float;\r\n\t\r\n\t\r\n\tpublic function new (redMultiplier:Float = 1, greenMultiplier:Float = 1, blueMultiplier:Float = 1, alphaMultiplier:Float = 1, redOffset:Float = 0, greenOffset:Float = 0, blueOffset:Float = 0, alphaOffset:Float = 0):Void {\r\n\t\t\r\n\t\tthis.redMultiplier = redMultiplier;\r\n\t\tthis.greenMultiplier = greenMultiplier;\r\n\t\tthis.blueMultiplier = blueMultiplier;\r\n\t\tthis.alphaMultiplier = alphaMultiplier;\r\n\t\tthis.redOffset = redOffset;\r\n\t\tthis.greenOffset = greenOffset;\r\n\t\tthis.blueOffset = blueOffset;\r\n\t\tthis.alphaOffset = alphaOffset;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function concat (second:ColorTransform):Void {\r\n\t\t\r\n\t\tredMultiplier *= second.redMultiplier;   \r\n\t\tgreenMultiplier *= second.greenMultiplier;\r\n\t\tblueMultiplier *= second.blueMultiplier;\r\n\t\talphaMultiplier *= second.alphaMultiplier;\r\n\t\t\r\n\t\tredOffset = second.redMultiplier * redOffset + second.redOffset;\r\n\t\tgreenOffset = second.greenMultiplier * greenOffset + second.greenOffset;\r\n\t\tblueOffset = second.blueMultiplier * blueOffset + second.blueOffset;\r\n\t\talphaOffset = second.alphaMultiplier * alphaOffset + second.alphaOffset;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function toString ():String {\r\n\t\t\r\n\t\treturn '(redMultiplier=$redMultiplier, greenMultiplier=$greenMultiplier, blueMultiplier=$blueMultiplier, alphaMultiplier=$alphaMultiplier, redOffset=$redOffset, greenOffset=$greenOffset, blueOffset=$blueOffset, alphaOffset=$alphaOffset)';\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __clone ():ColorTransform {\r\n\t\t\r\n\t\treturn new ColorTransform (redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __combine (ct:ColorTransform):Void {\r\n\t\t\r\n\t\tredMultiplier *= ct.redMultiplier;\r\n\t\tgreenMultiplier *= ct.greenMultiplier;\r\n\t\tblueMultiplier *= ct.blueMultiplier;\r\n\t\talphaMultiplier *= ct.alphaMultiplier;\r\n\t\t\r\n\t\tredOffset += ct.redOffset;\r\n\t\tgreenOffset += ct.greenOffset;\r\n\t\tblueOffset += ct.blueOffset;\r\n\t\talphaOffset += ct.alphaOffset;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __equals (ct:ColorTransform, ?skipAlphaMultiplier:Bool = false):Bool {\r\n\t\t\r\n\t\treturn (ct != null && redMultiplier == ct.redMultiplier && greenMultiplier == ct.greenMultiplier && blueMultiplier == ct.blueMultiplier && (skipAlphaMultiplier || alphaMultiplier == ct.alphaMultiplier) && redOffset == ct.redOffset && greenOffset == ct.greenOffset && blueOffset == ct.blueOffset && alphaOffset == ct.alphaOffset);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __isDefault ():Bool {\r\n\t\t\r\n\t\treturn (redMultiplier == 1 && greenMultiplier == 1 && blueMultiplier == 1 && alphaMultiplier == 1 && redOffset == 0 && greenOffset == 0 && blueOffset == 0 && alphaOffset == 0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\r\n\tprivate function get_color ():Int {\r\n\t\t\r\n\t\treturn ((Std.int (redOffset) << 16) | (Std.int (greenOffset) << 8) | Std.int (blueOffset));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_color (value:Int):Int {\r\n\t\t\r\n\t\tredOffset = (value >> 16) & 0xFF;\r\n\t\tgreenOffset = (value >> 8) & 0xFF;\r\n\t\tblueOffset = value & 0xFF;\r\n\t\t\r\n\t\tredMultiplier = 0;\r\n\t\tgreenMultiplier = 0;\r\n\t\tblueMultiplier = 0;\r\n\t\t\r\n\t\treturn color;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __toLimeColorMatrix ():ColorMatrix {\r\n\t\t\r\n\t\treturn cast new Float32Array ([ redMultiplier, 0, 0, 0, redOffset / 255, 0, greenMultiplier, 0, 0, greenOffset / 255, 0, 0, blueMultiplier, 0, blueOffset / 255, 0, 0, 0, alphaMultiplier, alphaOffset / 255 ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef ColorTransform = openfl._legacy.geom.ColorTransform;\r\n#end","package openfl; #if !macro #if !openfl_legacy\r\n\r\n\r\nimport lime.system.System;\r\nimport openfl.display.Application;\r\nimport openfl.display.MovieClip;\r\nimport openfl.display.Stage;\r\nimport openfl.net.URLRequest;\r\n\r\n#if (js && html5)\r\nimport js.Browser;\r\n#end\r\n\r\n\r\n@:access(openfl.display.Stage) class Lib {\r\n\t\r\n\t\r\n\tpublic static var application:Application;\r\n\t\r\n\t#if !flash\r\n\tpublic static var current (default, null):MovieClip = new MovieClip ();\r\n\t#else\r\n\tpublic static var current (get, set):MovieClip;\r\n\t#end\r\n\t\r\n\t@:noCompletion private static var __sentWarnings = new Map<String, Bool> ();\r\n\t\r\n\t\r\n\tpublic static function as<T> (v:Dynamic, c:Class<T>):Null<T> {\r\n\t\t\r\n\t\t#if flash\r\n\t\treturn flash.Lib.as (v,c);\r\n\t\t#else\r\n\t\treturn Std.is (v, c) ? v : null;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function attach (name:String):MovieClip {\r\n\t\t\r\n\t\t#if flash\r\n\t\treturn cast flash.Lib.attach (name);\r\n\t\t#else\r\n\t\treturn new MovieClip ();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if (js && html5)\r\n\t@:keep @:expose(\"openfl.embed\")\r\n\tpublic static function embed (elementName:String, width:Null<Int> = null, height:Null<Int> = null, background:String = null, assetsPrefix:String = null) {\r\n\t\t\r\n\t\tSystem.embed (elementName, width, height, background, assetsPrefix);\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t#if flash\r\n\tpublic static function eval (path:String):Dynamic {\r\n\t\t\r\n\t\treturn flash.Lib.eval (path);\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t#if flash\r\n\tpublic static function fscommand (cmd:String, ?param:String) {\r\n\t\t\r\n\t\treturn flash.Lib.fscommand (cmd, param);\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\tpublic static function getTimer ():Int {\r\n\t\t\r\n\t\t#if flash\r\n\t\treturn flash.Lib.getTimer ();\r\n\t\t#else\r\n\t\treturn System.getTimer ();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function getURL (request:URLRequest, target:String = null) {\r\n\t\t\r\n\t\tif (target == null) {\r\n\t\t\t\r\n\t\t\ttarget = \"_blank\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tBrowser.window.open (request.url, target);\r\n\t\t#elseif flash\r\n\t\treturn flash.Lib.getURL (request, target);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function notImplemented (api:String):Void {\r\n\t\t\r\n\t\tif (!__sentWarnings.exists (api)) {\r\n\t\t\t\r\n\t\t\t__sentWarnings.set (api, true);\r\n\t\t\t\r\n\t\t\ttrace (\"Warning: \" + api + \" is not implemented\");\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function preventDefaultTouchMove ():Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tBrowser.document.addEventListener (\"touchmove\", function (evt:js.html.Event):Void {\r\n\t\t\t\r\n\t\t\tevt.preventDefault ();\r\n\t\t\t\r\n\t\t}, false);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if flash\r\n\tpublic static function redirectTraces () {\r\n\t\t\r\n\t\treturn flash.Lib.redirectTraces ();\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\tpublic static function trace (arg:Dynamic):Void {\r\n\t\t\r\n\t\thaxe.Log.trace (arg);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t#if flash\r\n\t@:noCompletion private static function get_current ():MovieClip {\r\n\t\t\r\n\t\treturn cast flash.Lib.current;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private static function set_current (current:MovieClip):MovieClip {\r\n\t\t\r\n\t\treturn cast flash.Lib.current = cast current;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Lib = openfl._legacy.Lib;\r\n#end\r\n#else\r\n\r\n\r\nimport haxe.macro.Compiler;\r\nimport haxe.macro.Context;\r\n\r\n\r\nclass Lib {\r\n\t\r\n\t\r\n\tpublic static function includeExterns ():Void {\r\n\t\t\r\n\t\tvar childPath = Context.resolvePath (\"extern/openfl\");\r\n\t\t\r\n\t\tvar parts = StringTools.replace (childPath, \"\\\\\", \"/\").split (\"/\");\r\n\t\tparts.pop ();\r\n\t\t\r\n\t\tCompiler.addClassPath (parts.join (\"/\"));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#end","package openfl._internal.aglsl;\r\n\r\n\r\nimport openfl.utils.ByteArray;\r\n\r\n\r\nclass AGALTokenizer {\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function decribeAGALByteArray (bytes:ByteArray):Description {\r\n\t\t\r\n\t\tvar header = new Header ();\r\n\t\tbytes.position = 0;\r\n\t\t\r\n\t\tif (bytes.readUnsignedByte () != 0xa0)  {\r\n\t\t\t\r\n\t\t\tthrow \"Bad AGAL: Missing 0xa0 magic byte.\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\theader.version = bytes.readUnsignedInt ();\r\n\t\t\r\n\t\tif (header.version >= 0x10) {\r\n\t\t\t\r\n\t\t\tbytes.readUnsignedByte ();\r\n\t\t\theader.version >>= 1;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (bytes.readUnsignedByte () != 0xa1) {\r\n\t\t\t\r\n\t\t\tthrow \"Bad AGAL: Missing 0xa1 magic byte.\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\theader.progid = bytes.readUnsignedByte ();\r\n\t\tvar _sw0_ = (header.progid);\r\n\t\t\r\n\t\theader.type = switch (_sw0_) {\r\n\t\t\t\r\n\t\t\tcase 1: \"fragment\";\r\n\t\t\tcase 0: \"vertex\";\r\n\t\t\tcase 2: \"cpu\";\r\n\t\t\tdefault: \"\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar desc = new Description();\r\n\t\tvar tokens = new Array<Dynamic>();\r\n\t\tvar agal2glsllut:Array<Dynamic> = Mapping.agal2glsllut;\r\n\t\tvar bytesLength:UInt = bytes.length;\r\n\t\t\r\n\t\twhile (bytes.position < bytesLength) {\r\n\t\t\t\r\n\t\t\tvar token = new Token ();\r\n\t\t\ttoken.opcode = bytes.readUnsignedInt ();\r\n\t\t\tvar lutentry:OpLUT = Mapping.agal2glsllut[token.opcode];\r\n\t\t\t\r\n\t\t\tif (lutentry == null)  {\r\n\t\t\t\t\r\n\t\t\t\tthrow \"Opcode not valid or not implemented yet: \" + token.opcode;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (lutentry.matrixheight == 0)  {\r\n\t\t\t\t\r\n\t\t\t\tdesc.hasmatrix = true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (lutentry.dest) {\r\n\t\t\t\t\r\n\t\t\t\ttoken.dest.regnum = bytes.readUnsignedShort ();\r\n\t\t\t\ttoken.dest.mask = bytes.readUnsignedByte ();\r\n\t\t\t\ttoken.dest.regtype = bytes.readUnsignedByte ();\r\n\t\t\t\t\r\n\t\t\t\tif (desc.regwrite[token.dest.regtype][token.dest.regnum] == null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tdesc.regwrite[token.dest.regtype][token.dest.regnum] = token.dest.mask;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tdesc.regwrite[token.dest.regtype][token.dest.regnum] |= token.dest.mask;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\ttoken.dest = null;\r\n\t\t\t\tbytes.readUnsignedInt ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (lutentry.a) {\r\n\t\t\t\t\r\n\t\t\t\tthis.readReg (token.a, 1, desc, bytes);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\ttoken.a = null;\r\n\t\t\t\tbytes.readUnsignedInt ();\r\n\t\t\t\tbytes.readUnsignedInt ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (lutentry.b)  {\r\n\t\t\t\t\r\n\t\t\t\tthis.readReg (token.b, lutentry.matrixheight | 0, desc, bytes);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\ttoken.b = null;\r\n\t\t\t\tbytes.readUnsignedInt ();\r\n\t\t\t\tbytes.readUnsignedInt ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttokens.push (token);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tdesc.header = header;\r\n\t\tdesc.tokens = tokens;\r\n\t\treturn desc;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readReg (s:Destination, mh:Int, desc:Description, bytes:ByteArray):Void {\r\n\t\t\r\n\t\ts.regnum = bytes.readUnsignedShort ();\r\n\t\ts.indexoffset = bytes.readByte ();\r\n\t\ts.swizzle = bytes.readUnsignedByte ();\r\n\t\ts.regtype = bytes.readUnsignedByte ();\r\n\t\tdesc.regread[s.regtype][s.regnum] = 0xf;\r\n\t\t// sould be swizzle to mask? should be |=\r\n\t\t\r\n\t\tif (s.regtype == 0x5) {\r\n\t\t\t\r\n\t\t\t// sampler\r\n\t\t\ts.lodbiad = s.indexoffset;\r\n\t\t\t//why\r\n\t\t\ts.indexoffset = 0;\r\n\t\t\ts.swizzle = 0;\r\n\t\t\t// sampler\r\n\t\t\ts.readmode = bytes.readUnsignedByte ();\r\n\t\t\ts.dim = s.readmode >> 4;\r\n\t\t\ts.readmode &= 0xf;\r\n\t\t\ts.special = bytes.readUnsignedByte ();\r\n\t\t\ts.wrap = s.special >> 4;\r\n\t\t\ts.special &= 0xf;\r\n\t\t\ts.mipmap = bytes.readUnsignedByte ();\r\n\t\t\ts.filter = s.mipmap >> 4;\r\n\t\t\ts.mipmap &= 0xf;\r\n\t\t\tdesc.samplers[s.regnum] = s;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\ts.indexregtype = bytes.readUnsignedByte ();\r\n\t\t\ts.indexselect = bytes.readUnsignedByte ();\r\n\t\t\ts.indirectflag = bytes.readUnsignedByte ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (s.indirectflag == 1) {\r\n\t\t\t\r\n\t\t\tdesc.hasindirect = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (s.indirectflag == 0 && mh > 0) {\r\n\t\t\t\r\n\t\t\tvar mhi:Int = 0;\r\n\t\t\t\r\n\t\t\twhile (mhi < mh) {\r\n\t\t\t\t\r\n\t\t\t\t//TODO wrong, should be |=  \r\n\t\t\t\tdesc.regread[s.regtype][s.regnum + mhi] = desc.regread[s.regtype][s.regnum];\r\n\t\t\t\tmhi++;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl; \r\n\r\n\r\nimport openfl.utils.AGALMiniAssembler; \r\nimport openfl.utils.ByteArray;\r\n\r\n\r\nclass AGLSLCompiler {\r\n\t\r\n\t\r\n\tpublic var glsl:String;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function compile (programType:String, source:String):String {\r\n\t\t\r\n\t\tvar agalMiniAssembler = new AGALMiniAssembler ();\r\n\t\tvar tokenizer = new AGALTokenizer ();\r\n\t\tvar data:ByteArray;\r\n\t\tvar concatSource:String;\r\n\t\t\r\n\t\tswitch (programType) {\r\n\t\t\tcase \"vertex\":\r\n\t\t\t\t\r\n\t\t\t\tconcatSource = \"part vertex 1 \\n\" + source + \"\\nendpart\\n\";\r\n\t\t\t\tagalMiniAssembler.assemble (concatSource);\r\n\t\t\t\tdata = agalMiniAssembler.r.get (\"vertex\").data;\r\n\t\t\t\r\n\t\t\tcase \"fragment\":\r\n\t\t\t\t\r\n\t\t\t\tconcatSource = \"part fragment 1 \\n\" + source + \"\\nendpart\\n\";\r\n\t\t\t\tagalMiniAssembler.assemble (concatSource);\r\n\t\t\t\tdata = agalMiniAssembler.r.get (\"fragment\").data;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t\tthrow \"Unknown Context3DProgramType\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar description:Description = tokenizer.decribeAGALByteArray (data);\r\n\t\tvar parser = new AGLSLParser ();\r\n\t\tthis.glsl = parser.parse (description);\r\n\t\treturn this.glsl;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl;\r\n\r\n\r\nusing StringTools;\r\n\r\n\r\nclass AGLSLParser {\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function parse (desc:Description):String {\r\n\t\t\r\n\t\tvar header:String;\r\n\t\tvar body:String = \"\";\r\n\t\tvar i:Int = 0;\r\n\t\t\r\n\t\theader = \"\"\r\n\t\t\t+ \"#ifdef GL_ES\\n\"\r\n\t\t\t+ \"precision \" + ( desc.header.type == \"vertex\" ? \"highp\" : \"mediump\" ) + \" float;\\n\"\r\n\t\t\t+ \"#endif\\n\";\r\n\t\t\r\n\t\tvar tag = desc.header.type.charAt (0); //TODO\r\n\t\t\r\n\t\t// declare uniforms\r\n\t\tif (desc.header.type == \"vertex\") {\r\n\t\t\t\r\n\t\t\theader += \"uniform float yflip;\\n\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!desc.hasindirect) {\r\n\t\t\t\r\n\t\t\ti  = 0;\r\n\t\t\twhile (i < desc.regread[0x1].length) {\r\n\t\t\t\t\r\n\t\t\t\tif (desc.regread[0x1][i] > 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\theader += \"uniform vec4 \" + tag + \"c\" + i + \";\\n\";\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\theader += \"uniform vec4 \" + tag + \"carrr[\" + Context3D.maxvertexconstants + \"];\\n\"; // use max const count instead\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// declare temps\r\n\t\ti = 0;\r\n\t\twhile (i < desc.regread[0x2].length || i < desc.regwrite[0x2].length) {\r\n\t\t\t\r\n\t\t\tif (desc.regread[0x2][i] > 0 || desc.regwrite[0x2][i] > 0) { // duh, have to check write only also... \r\n\t\t\t\t\r\n\t\t\t\theader += \"vec4 \" + tag + \"t\" + i + \";\\n\";\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// declare streams\r\n\t\ti = 0;\r\n\t\twhile (i < desc.regread[0x0].length) {\r\n\t\t\t\r\n\t\t\tif (desc.regread[0x0][i] > 0) {\r\n\t\t\t\t\r\n\t\t\t\theader += \"attribute vec4 va\" + i + \";\\n\";\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// declare interpolated\r\n\t\ti = 0;\r\n\t\twhile (i < desc.regread[0x4].length || i < desc.regwrite[0x4].length) {\r\n\t\t\t\r\n\t\t\tif (desc.regread[0x4][i] > 0 || desc.regwrite[0x4][i] > 0) {\r\n\t\t\t\t\r\n\t\t\t\theader += \"varying vec4 vi\" + i + \";\\n\";\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// declare samplers\r\n\t\tvar samptype = [\"2D\", \"Cube\", \"3D\", \"\"];\r\n\t\ti = 0;\r\n\t\twhile (i < desc.samplers.length) {\r\n\t\t \t\r\n\t\t\tif (desc.samplers[i] != null) {\r\n\t\t\t\t\r\n\t\t\t\theader += \"uniform sampler\" + samptype[desc.samplers[i].dim & 3] + \" fs\" + i + \";\\n\";\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#if js\r\n\t\tif (desc.header.type == \"fragment\")\r\n\t\t\theader += \"vec4 texture2DYFlip(in sampler2D s, in vec2 coord) {return texture2D(s, vec2(coord.x, 1.0 - coord.y));}\\n\";\r\n\t\t#end\r\n\t\t// extra gl fluff: setup position and depth adjust temps\r\n\t\tif (desc.header.type == \"vertex\") {\r\n\t\t\t\r\n\t\t\theader += \"vec4 outpos;\\n\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (desc.writedepth) {\r\n\t\t\t\r\n\t\t\theader += \"vec4 tmp_FragDepth;\\n\";\r\n\t\t\t\r\n\t\t}\r\n\t\t//if ( desc.hasmatrix )\r\n\t\t//    header += \"vec4 tmp_matrix;\\n\";\r\n\t\t\r\n\t\t// start body of code\r\n\t\tbody += \"void main() {\\n\";\r\n\t\ti  = 0;\r\n\t\twhile (i < desc.tokens.length) {\r\n\t\t\t\r\n\t\t\tvar lutentry = Mapping.agal2glsllut[desc.tokens[i].opcode];\r\n\t\t\t\r\n\t\t\tif (lutentry == null) {\r\n\t\t\t\t\r\n\t\t\t\tthrow \"Opcode not valid or not implemented yet: \";\r\n\t\t\t\t/*+token.opcode;*/\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar sublines = Std.int (Math.max (lutentry.matrixheight, 1));\r\n\t\t\t\r\n\t\t\tfor (sl in 0...sublines) {\r\n\t\t\t\t\r\n\t\t\t\tvar line = \"  \" + lutentry.s;\r\n\t\t\t\tvar destregstring:String;\r\n\t\t\t\tvar destcaststring:String;\r\n\t\t\t\tvar destmaskstring:String;\r\n\t\t\t\t\r\n\t\t\t\tif (desc.tokens[i].dest != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (lutentry.matrixheight > 0) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (((desc.tokens[i].dest.mask >> sl) & 1) != 1) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdestregstring = this.regtostring (desc.tokens[i].dest.regtype, desc.tokens[i].dest.regnum, desc, tag);\r\n\t\t\t\t\t\tdestcaststring = \"float\";\r\n\t\t\t\t\t\tdestmaskstring = [ \"x\", \"y\", \"z\", \"w\" ][sl];\r\n\t\t\t\t\t\tdestregstring += \".\" + destmaskstring;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdestregstring = this.regtostring (desc.tokens[i].dest.regtype, desc.tokens[i].dest.regnum, desc, tag);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (desc.tokens[i].dest.mask != 0xf) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar ndest = 0;\r\n\t\t\t\t\t\t\tdestmaskstring = \"\";\r\n\t\t\t\t\t\t\t//why\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (desc.tokens[i].dest.mask & 1 != 0) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tndest++;\r\n\t\t\t\t\t\t\t\tdestmaskstring += \"x\";\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (desc.tokens[i].dest.mask & 2 != 0) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tndest++;\r\n\t\t\t\t\t\t\t\tdestmaskstring += \"y\";\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (desc.tokens[i].dest.mask & 4 != 0) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tndest++;\r\n\t\t\t\t\t\t\t\tdestmaskstring += \"z\";\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (desc.tokens[i].dest.mask & 8 != 0) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tndest++;\r\n\t\t\t\t\t\t\t\tdestmaskstring += \"w\";\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdestregstring += \".\" + destmaskstring;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tswitch (ndest) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tdestcaststring = \"float\";\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tdestcaststring = \"vec2\";\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tdestcaststring = \"vec3\";\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tthrow \"Unexpected destination mask\" + desc.tokens[i].dest.mask;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdestcaststring = \"vec4\";\r\n\t\t\t\t\t\t\tdestmaskstring = \"xyzw\";\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tline = line.replace (\"%dest\", destregstring);\r\n\t\t\t\t\tline = line.replace (\"%cast\", destcaststring);\r\n\t\t\t\t\tline = line.replace (\"%dm\", destmaskstring);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar dwm:Int = 0xf;\r\n\t\t\t\t\r\n\t\t\t\tif (!lutentry.ndwm && lutentry.dest && desc.tokens[i].dest != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tdwm = desc.tokens[i].dest.mask;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (desc.tokens[i].a != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tline = line.replace (\"%a\", this.sourcetostring (desc.tokens[i].a, 0, dwm, lutentry.scalar, desc, tag));\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (desc.tokens[i].b != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tline = line.replace (\"%b\", this.sourcetostring (desc.tokens[i].b, sl, dwm, lutentry.scalar, desc, tag));\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (desc.tokens[i].b.regtype == 0x5) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// sampler dim\r\n\t\t\t\t\t\tvar texdim = [ \"2D\", \"Cube\", \"3D\" ][desc.tokens[i].b.dim];\r\n\t\t\t\t\t\tvar texsize = [ \"vec2\", \"vec3\", \"vec3\" ][desc.tokens[i].b.dim];\r\n\t\t\t\t\t\tline = line.replace (\"%texdim\", texdim);\r\n\t\t\t\t\t\tline = line.replace (\"%texsize\", texsize);\r\n\t\t\t\t\t\tvar texlod = \"\";\r\n\t\t\t\t\t\tline = line.replace (\"%lod\", texlod);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbody += line;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ti++;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// adjust z from opengl range of -1..1 to 0..1 as in d3d, this also enforces a left handed coordinate system\r\n\t\tif (desc.header.type == \"vertex\") {\r\n\t\t\t\r\n\t\t\tbody += \"  gl_Position = vec4(outpos.x, yflip*outpos.y, outpos.z*2.0 - outpos.w, outpos.w);\\n\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// clamp fragment depth\r\n\t\tif (desc.writedepth) {\r\n\t\t\t\r\n\t\t\tbody += \"  gl_FragDepth = clamp(tmp_FragDepth,0.0,1.0);\\n\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// close main\r\n\t\tbody += \"}\\n\";\r\n\t\t\r\n\t\treturn header + body;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function regtostring (regtype:Int, regnum:Int, desc, tag):String {\r\n\t\t\r\n\t\tswitch (regtype) {\r\n\t\t\t\r\n\t\t\tcase 0x0:\r\n\t\t\t\t\r\n\t\t\t\treturn \"va\" + regnum;\r\n\t\t\t\r\n\t\t\tcase 0x1:\r\n\t\t\t\t\r\n\t\t\t\tif (desc.hasindirect && desc.header.type == \"vertex\")  {\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn \"vcarrr[\" + regnum + \"]\";\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn tag + \"c\" + regnum;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tcase 0x2:\r\n\t\t\t\t\r\n\t\t\t\treturn tag + \"t\" + regnum;\r\n\t\t\t\r\n\t\t\tcase 0x3:\r\n\t\t\t\t\r\n\t\t\t\treturn desc.header.type == (\"vertex\") ? \"outpos\" : \"gl_FragColor\";\r\n\t\t\t\r\n\t\t\tcase 0x4:\r\n\t\t\t\t\r\n\t\t\t\treturn \"vi\" + regnum;\r\n\t\t\t\r\n\t\t\tcase 0x5:\r\n\t\t\t\t\r\n\t\t\t\treturn \"fs\" + regnum;\r\n\t\t\t\r\n\t\t\tcase 0x6:\r\n\t\t\t\t\r\n\t\t\t\treturn \"tmp_FragDepth\";\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t\tthrow \"Unknown register type\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function sourcetostring (s:Destination, subline, dwm, isscalar, desc, tag):String {\r\n\t\t\r\n\t\tvar swiz = [ \"x\", \"y\", \"z\", \"w\" ];\r\n\t\tvar r;\r\n\t\t\r\n\t\tif (s.indirectflag == 1) {\r\n\t\t\t\r\n\t\t\tr = \"vcarrr[int(\" + this.regtostring (s.indexregtype, s.regnum, desc, tag) + \".\" + swiz[s.indexselect] + \")\";\r\n\t\t\tvar realofs = subline + s.indexoffset;\r\n\t\t\tif(realofs < 0) r += Std.string (realofs);\r\n\t\t\tif(realofs > 0) r += \"+\" + Std.string (realofs);\r\n\t\t\tr += \"]\";\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tr = this.regtostring (s.regtype, s.regnum + subline, desc, tag);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// samplers never add swizzle\r\n\t\tif (s.regtype == 0x5) {\r\n\t\t\t\r\n\t\t\treturn r;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (isscalar) {\r\n\t\t\t\r\n\t\t\treturn r + \".\" + swiz[(s.swizzle >> 0) & 3];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (s.swizzle == 0xe4 && dwm == 0xf) {\r\n\t\t\t\r\n\t\t\treturn r;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tr += \".\";\r\n\t\t\r\n\t\t//why\r\n\t\tif (dwm & 1!=0) r += swiz[(s.swizzle >> 0) & 3];\r\n\t\tif (dwm & 2!=0) r += swiz[(s.swizzle >> 2) & 3];\r\n\t\tif (dwm & 4!=0) r += swiz[(s.swizzle >> 4) & 3];\r\n\t\tif (dwm & 8!=0) r += swiz[(s.swizzle >> 6) & 3];\r\n\t\treturn r;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n","package openfl._internal.aglsl;\r\n\r\n\r\nclass Sampler {\r\n\t\r\n\t\r\n\tpublic var dim:Float;\r\n\tpublic var filter:Float;\r\n\tpublic var lodbias:Float;\r\n\tpublic var mipmap:Float;\r\n\tpublic var readmode:Float;\r\n\tpublic var special:Float;\r\n\tpublic var wrap:Float;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tlodbias = 0;\r\n\t\tdim = 0;\r\n\t\treadmode = 0;\r\n\t\tspecial = 0;\r\n\t\twrap = 0;\r\n\t\tmipmap = 0;\r\n\t\tfilter = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl;\r\n\r\n\r\nclass Description {\r\n\t\r\n\t\r\n\tpublic var hasindirect:Bool;\r\n\tpublic var hasmatrix:Bool;\r\n\tpublic var header:Header;\r\n\tpublic var regread:Array<Dynamic>;\r\n\tpublic var regwrite:Array<Dynamic>;\r\n\tpublic var samplers:Array<Dynamic>;\r\n\tpublic var tokens:Array<Dynamic>; // added due to dynamic assignment 3*0xFFFFFFuuuu\r\n\tpublic var writedepth:Bool;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tregread = [[], [], [], [], [], [], []];\r\n\t\tregwrite = [[], [], [], [], [], [], []];\r\n\t\thasindirect = false;\r\n\t\twritedepth = false;\r\n\t\thasmatrix = false;\r\n\t\tsamplers = [];\r\n\t\t\r\n\t\t//\r\n\t\t// added due to dynamic assignment 3*0xFFFFFFuuuu\r\n\t\ttokens = [];\r\n\t\theader = new Header ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl;\r\n\r\n\r\nclass Destination {\r\n\t\r\n\t\r\n\tpublic var dim:Int;\r\n\tpublic var filter:Int;\r\n\tpublic var indexoffset:Int;\r\n\tpublic var indexregtype:Int;\r\n\tpublic var indexselect:Int;\r\n\tpublic var indirectflag:Int;\r\n\tpublic var lodbiad:Int; // sampler\r\n\tpublic var mask:Int;\r\n\tpublic var mipmap:Int;\r\n\tpublic var readmode:Int; // sampler\r\n\tpublic var regnum:Int;\r\n\tpublic var regtype:UInt;\r\n\tpublic var special:Int;\r\n\tpublic var swizzle:Int;\r\n\tpublic var wrap:Int;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tmask = 0;\r\n\t\tregnum = 0;\r\n\t\tregtype = 0;\r\n\t\tdim = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl;\r\n\r\n\r\nclass Header {\r\n\t\r\n\t\r\n\tpublic var progid:Int;\r\n\tpublic var type:String;\r\n\tpublic var version:Int;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tprogid = 0;\r\n\t\tversion = 0;\r\n\t\ttype = \"\";\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl;\r\n\r\n\r\nclass Mapping {\r\n\t\r\n\t\r\n\tpublic static var agal2glsllut (get, never):Array<OpLUT>;\r\n\t\r\n\tprivate static var _agal2glsllut:Array<OpLUT>;\r\n\t\r\n\t\r\n\tprivate static function get_agal2glsllut ():Array<OpLUT> {\r\n\t\t\r\n\t\tif (Mapping._agal2glsllut == null) {\r\n\t\t\t\r\n\t\t\tMapping._agal2glsllut = [\r\n\t\t\t\t//         s \t\t\t\t\t\t\t\t\t\t\t\tflags   dest    a     b \t    mw \t  mh    ndwm  scale dm\t  lod\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(%a);\\n\", 0, true, true, false, null, null, null, null, null, null), //mov\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(%a + %b);\\n\", 0, true, true, true, null, null, null, null, null, null), //add\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(%a - %b);\\n\", 0, true, true, true, null, null, null, null, null, null), //sub\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(%a * %b);\\n\", 0, true, true, true, null, null, null, null, null, null), //mul\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(%a / %b);\\n\", 0, true, true, true, null, null, null, null, null, null), //div\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(1.0) / %a;\\n\", 0, true, true, false, null, null, null, null, null, null), //rcp\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(min(%a,%b));\\n\", 0, true, true, true, null, null, null, null, null, null), //min\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(max(%a,%b));\\n\", 0, true, true, true, null, null, null, null, null, null), //max\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(fract(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //frc\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(sqrt(abs(%a)));\\n\", 0, true, true, false, null, null, null, null, null, null), //sqt\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(inversesqrt(abs(%a)));\\n\", 0, true, true, false, null, null, null, null, null, null), //rsq\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(pow(abs(%a),%b));\\n\", 0, true, true, true, null, null, null, null, null, null), //pow\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(log2(abs(%a)));\\n\", 0, true, true, false, null, null, null, null, null, null), //log\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(exp2(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //exp\r\n\t\t\t\t\r\n\t\t\t\t//         s \t\t\t\t\t\t\t\t\t\t\t\tflags  \tdest    a     b \t    mw \t  mh    ndwm  scale dm\t  lod\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(normalize(vec3( %a ) ));\\n\", 0, true, true, false, null, null, true, null, null, null), //nrm\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(sin(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //sin\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(cos(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //cos\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(cross(vec3(%a),vec3(%b)));\\n\", 0, true, true, true, null, null, true, null, null, null), //crs\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(dot(vec3(%a),vec3(%b)));\\n\", 0, true, true, true, null, null, true, null, null, null), //dp3\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(dot(vec4(%a),vec4(%b)));\\n\", 0, true, true, true, null, null, true, null, null, null), //dp4\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(abs(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //abs\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(%a * -1.0);\\n\", 0, true, true, false, null, null, null, null, null, null), //neg\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(clamp(%a,0.0,1.0));\\n\", 0, true, true, false, null, null, null, null, null, null), //sat\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(dot(vec3(%a),vec3(%b)));\\n\", null, true, true, true, 3, 3, true, null, null, null), //m33\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(dot(vec4(%a),vec4(%b)));\\n\", null, true, true, true, 4, 4, true, null, null, null), //m44\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(dot(vec4(%a),vec4(%b)));\\n\", null, true, true, true, 4, 3, true, null, null, null), //m43\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(dFdx(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //dFdx\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(dFdx(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //dFdx\r\n\t\t\t\tnew OpLUT (\"if (float(%a)==float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null),\r\n\t\t\t\tnew OpLUT (\"if (float(%a)!=float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null),\r\n\t\t\t\tnew OpLUT (\"if (float(%a)>=float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null),\r\n\t\t\t\tnew OpLUT (\"if (float(%a)<float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null),\r\n\t\t\t\tnew OpLUT (\"} else {;\\n\", 0, false, false, false, null, null, null, null, null, null),\r\n\t\t\t\tnew OpLUT (\"};\\n\", 0, false, false, false, null, null, null, null, null, null),\r\n\t\t\t\tnew OpLUT (null, null, null, null, false, null, null, null, null, null, null),\r\n\t\t\t\tnew OpLUT (null, null, null, null, false, null, null, null, null, null, null),\r\n\t\t\t\tnew OpLUT (null, null, null, null, false, null, null, null, null, null, null),\r\n\t\t\t\tnew OpLUT (null, null, null, null, false, null, null, null, null, null, null),\r\n\t\t\t\t\r\n\t\t\t\t//         s \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tflags  \tdest    a     b \t    mw \t  mh    ndwm  scale dm\t  lod \r\n\t\t\t\tnew OpLUT (\"%dest = %cast(texture%texdimLod(%b,%texsize(%a)).%dm);\\n\", null, true, true, true, null, null, null, null, true, null),\r\n\t\t\t\tnew OpLUT (\"if ( float(%a)<0.0 ) discard;\\n\", null, false, true, false, null, null, null, true, null, null),\r\n                #if js\r\n\t\t\t\t\tnew OpLUT (\"%dest = %cast(texture%texdimYFlip(%b,%texsize(%a)%lod).%dm);\\n\", null, true, true, true, null, null, true, null, true, true),\r\n\t\t\t\t#else\r\n\t\t\t\t\tnew OpLUT (\"%dest = %cast(texture%texdim(%b,%texsize(%a)%lod).%dm);\\n\", null, true, true, true, null, null, true, null, true, true),\r\n\t\t\t\t#end\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(greaterThanEqual(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null),\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(lessThan(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null),\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(sign(%a));\\n\", 0, true, true, false, null, null, null, null, null, null),\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(equal(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null),\r\n\t\t\t\tnew OpLUT (\"%dest = %cast(notEqual(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null)\r\n\t\t\t\t\r\n\t\t\t];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn Mapping._agal2glsllut;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl;\r\n\r\n\r\nclass OpLUT {\r\n\t\r\n\t\r\n\tpublic var a:Bool;\r\n\tpublic var b:Bool;\r\n\tpublic var dest:Bool;\r\n\tpublic var dm:Bool;\r\n\tpublic var flags:Int;\r\n\tpublic var lod:Bool;\r\n\tpublic var matrixwidth:Int;\r\n\tpublic var matrixheight:Int;\r\n\tpublic var ndwm:Bool;\r\n\tpublic var s:String;\r\n\tpublic var scalar:Bool;\r\n\t\r\n\t\r\n\tpublic function new (?s:Null<String>, ?flags:Int = 0, ?dest:Bool = false, ?a:Bool = false, ?b:Bool = false, ?matrixwidth:Int = 0, ?matrixheight:Int = 0, ?ndwm:Bool = false, ?scaler:Bool = false, ?dm:Bool = false, ?lod:Bool = false) {\r\n\t\t\r\n\t\tthis.s = s;\r\n\t\tthis.flags = flags;\r\n\t\tthis.dest = dest;\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.matrixwidth = matrixwidth;\r\n\t\tthis.matrixheight = matrixheight;\r\n\t\tthis.ndwm = ndwm;\r\n\t\tthis.scalar = scaler;\r\n\t\tthis.dm = dm;\r\n\t\tthis.lod = lod;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl;\r\n\r\n\r\nclass Token {\r\n\t\r\n\t\r\n\tpublic var a:Destination;\r\n\tpublic var b:Destination;\r\n\tpublic var dest:Destination;\r\n\tpublic var opcode:Int;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tdest = new Destination ();\r\n\t\topcode = 0;\r\n\t\ta = new Destination ();\r\n\t\tb = new Destination ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl.assembler;\r\n\r\n\r\nclass FS {\r\n\t\r\n\t\r\n\tpublic var format:String;\r\n\tpublic var size:Int;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl.assembler;\r\n\r\n\r\nclass Flags {\r\n\t\r\n\t\r\n\tpublic var fragonly:Bool;\r\n\tpublic var horizontal:Bool;\r\n\tpublic var matrix:Bool;\r\n\tpublic var simple:Bool;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl.assembler;\r\n\r\n\r\nclass Opcode {\r\n\t\r\n\t\r\n\t\r\n\tpublic var a:FS;\r\n\tpublic var b:FS;\r\n\tpublic var dest:String;\r\n\tpublic var flags:Flags;\r\n\tpublic var opcode:Int;\r\n\t\r\n\t\r\n\tpublic function new (dest:String, aformat:String, asize:Int, bformat:String, bsize:Int, opcode:Int, simple:Bool, horizontal:Bool = false, fragonly:Bool = false, matrix:Bool = false) {\r\n\t\t\r\n\t\tthis.a = new FS ();\r\n\t\tthis.b = new FS ();\r\n\t\tthis.flags = new Flags ();\r\n\t\tthis.dest = dest;\r\n\t\tthis.a.format = aformat;\r\n\t\tthis.a.size = asize;\r\n\t\tthis.b.format = bformat;\r\n\t\tthis.b.size = bsize;\r\n\t\tthis.opcode = opcode;\r\n\t\tthis.flags.simple = simple;\r\n\t\tthis.flags.horizontal = horizontal;\r\n\t\tthis.flags.fragonly = fragonly;\r\n\t\tthis.flags.matrix = matrix;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl.assembler;\r\n\r\n\r\nclass OpcodeMap {\r\n\t\r\n\t\r\n\tpublic static var map (get, never):Map<String, Opcode>;\r\n\t\r\n\tprivate static var _map:Map<String, Opcode>;\r\n\t\r\n\t\r\n\tprivate static function get_map ():Map<String, Opcode> {\r\n\t\t\r\n\t\tif (OpcodeMap._map == null)  {\r\n\t\t\t\r\n\t\t\tOpcodeMap._map = new Map<String, Opcode> ();\r\n\t\t\tOpcodeMap._map.set (\"mov\", new Opcode (\"vector\", \"vector\", 4, \"none\", 0, 0x00, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"add\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x01, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"sub\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x02, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"mul\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x03, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"div\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x04, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"rcp\", new Opcode (\"vector\", \"vector\", 4, \"none\", 0, 0x05, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"min\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x06, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"max\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x07, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"frc\", new Opcode (\"vector\", \"vector\", 4, \"none\", 0, 0x08, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"sqt\", new Opcode (\"vector\", \"vector\", 4, \"none\", 0, 0x09, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"rsq\", new Opcode (\"vector\", \"vector\", 4, \"none\", 0, 0x0a, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"pow\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x0b, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"log\", new Opcode (\"vector\", \"vector\", 4, \"none\", 0, 0x0c, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"exp\", new Opcode (\"vector\", \"vector\", 4, \"none\", 0, 0x0d, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"nrm\", new Opcode (\"vector\", \"vector\", 4, \"none\", 0, 0x0e, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"sin\", new Opcode (\"vector\", \"vector\", 4, \"none\", 0, 0x0f, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"cos\", new Opcode (\"vector\", \"vector\", 4, \"none\", 0, 0x10, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"crs\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x11, true, true, false, false));\r\n\t\t\tOpcodeMap._map.set (\"dp3\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x12, true, true, false, false));\r\n\t\t\tOpcodeMap._map.set (\"dp4\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x13, true, true, false, false));\r\n\t\t\tOpcodeMap._map.set (\"abs\", new Opcode (\"vector\", \"vector\", 4, \"none\", 0, 0x14, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"neg\", new Opcode (\"vector\", \"vector\", 4, \"none\", 0, 0x15, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"sat\", new Opcode (\"vector\", \"vector\", 4, \"none\", 0, 0x16, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"ted\", new Opcode (\"vector\", \"vector\", 4, \"sampler\", 1, 0x26, true, false, true, false));\r\n\t\t\tOpcodeMap._map.set (\"kil\", new Opcode (\"none\", \"scalar\", 1, \"none\", 0, 0x27, true, false, true, false));\r\n\t\t\tOpcodeMap._map.set (\"tex\", new Opcode (\"vector\", \"vector\", 4, \"sampler\", 1, 0x28, true, false, true, false));\r\n\t\t\tOpcodeMap._map.set (\"m33\", new Opcode (\"vector\", \"matrix\", 3, \"vector\", 3, 0x17, true, false, false, true));\r\n\t\t\tOpcodeMap._map.set (\"m44\", new Opcode (\"vector\", \"matrix\", 4, \"vector\", 4, 0x18, true, false, false, true));\r\n\t\t\tOpcodeMap._map.set (\"m43\", new Opcode (\"vector\", \"matrix\", 3, \"vector\", 4, 0x19, true, false, false, true));\r\n\t\t\tOpcodeMap._map.set (\"sge\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x29, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"slt\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x2a, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"sgn\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x2b, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"seq\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x2c, true, false, false, false));\r\n\t\t\tOpcodeMap._map.set (\"sne\", new Opcode (\"vector\", \"vector\", 4, \"vector\", 4, 0x2d, true, false, false, false));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn OpcodeMap._map;\r\n\t\t\r\n\t}\r\n\t\r\n}","package openfl._internal.aglsl.assembler;\r\n\r\n\r\nimport openfl.utils.ByteArray;\r\nimport openfl.utils.Endian;\r\n\r\n\r\nclass Part {\r\n\t\r\n\t\r\n\tpublic var data:ByteArray;\r\n\tpublic var name:String;\r\n\tpublic var version:Int;\r\n\t\r\n\t\r\n\tpublic function new (name:String = \"\", version:Int = 0) {\r\n\t\t\r\n\t\tthis.name = name;\r\n\t\tthis.version = version;\r\n\t\t\r\n\t\tthis.data = new ByteArray ();\r\n\t\tdata.endian = Endian.LITTLE_ENDIAN;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl.assembler;\r\n\r\n\r\nclass Reg {\r\n\t\r\n\t\r\n\tpublic var code:Int;\r\n\tpublic var desc:String;\r\n\t\r\n\t\r\n\tpublic function new (code:Int, desc:String) {\r\n\t\t\r\n\t\tthis.code = code;\r\n\t\tthis.desc = desc;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl.assembler;\r\n\r\n\r\nimport haxe.ds.StringMap;\r\n\r\n\r\nclass RegMap {\r\n\t\r\n\t\r\n\tpublic static var map (get, never):StringMap<Reg>;\r\n\t\r\n\tprivate static var _map:StringMap<Reg>;\r\n\t\r\n\t\r\n\tprivate static function get_map ():StringMap<Reg> {\r\n\t\t\r\n\t\tif (RegMap._map == null) {\r\n\t\t\t\r\n\t\t\tRegMap._map = new StringMap<Reg> ();\r\n\t\t\tRegMap._map.set (\"va\", new Reg (0x00, \"vertex attribute\"));\r\n\t\t\tRegMap._map.set (\"fc\", new Reg (0x01, \"fragment constant\"));\r\n\t\t\tRegMap._map.set (\"vc\", new Reg (0x01, \"vertex constant\"));\r\n\t\t\tRegMap._map.set (\"ft\", new Reg (0x02, \"fragment temporary\"));\r\n\t\t\tRegMap._map.set (\"vt\", new Reg (0x02, \"vertex temporary\"));\r\n\t\t\tRegMap._map.set (\"vo\", new Reg (0x03, \"vertex output\"));\r\n\t\t\tRegMap._map.set (\"op\", new Reg (0x03, \"vertex output\"));\r\n\t\t\tRegMap._map.set (\"fd\", new Reg (0x03, \"fragment depth output\"));\r\n\t\t\tRegMap._map.set (\"fo\", new Reg (0x03, \"fragment output\"));\r\n\t\t\tRegMap._map.set (\"oc\", new Reg (0x03, \"fragment output\"));\r\n\t\t\tRegMap._map.set (\"v\", new Reg (0x04, \"varying\"));\r\n\t\t\tRegMap._map.set (\"vi\", new Reg (0x04, \"varying output\"));\r\n\t\t\tRegMap._map.set (\"fi\", new Reg (0x04, \"varying input\"));\r\n\t\t\tRegMap._map.set (\"fs\", new Reg (0x05, \"sampler\"));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn RegMap._map;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl.assembler;\r\n\r\n\r\nclass Sampler {\r\n\t\r\n\t\r\n\tpublic var mask:Int;\r\n\tpublic var shift:Int;\r\n\tpublic var value:Int;\r\n\t\r\n\t\r\n\tpublic function new (shift:Int, mask:Int, value:Int) {\r\n\t\t\r\n\t\tthis.shift = shift;\r\n\t\tthis.mask = mask;\r\n\t\tthis.value = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.aglsl.assembler;\r\n\r\n\r\nimport haxe.ds.StringMap;\r\n\r\n\r\nclass SamplerMap {\r\n\t\r\n\t\r\n\tpublic static var map (get, never):StringMap<Sampler>;\r\n\r\n\tprivate static var _map:StringMap<Sampler>;\r\n\t\r\n\t\r\n\tprivate static function get_map ():StringMap<Sampler> {\r\n\t\t\r\n\t\tif (SamplerMap._map == null)  {\r\n\t\t\t\r\n\t\t\tSamplerMap._map = new  StringMap<Sampler> ();\r\n\t\t\tSamplerMap._map.set (\"rgba\", new Sampler(8, 0xf, 0));\r\n\t\t\tSamplerMap._map.set (\"rg\", new Sampler(8, 0xf, 5));\r\n\t\t\tSamplerMap._map.set (\"r\", new Sampler(8, 0xf, 4));\r\n\t\t\tSamplerMap._map.set (\"compressed\", new Sampler(8, 0xf, 1));\r\n\t\t\tSamplerMap._map.set (\"compressed_alpha\", new Sampler(8, 0xf, 2));\r\n\t\t\tSamplerMap._map.set (\"dxt1\", new Sampler(8, 0xf, 1));\r\n\t\t\tSamplerMap._map.set (\"dxt5\", new Sampler(8, 0xf, 2));\r\n\t\t\t// dimension\r\n\t\t\tSamplerMap._map.set (\"2d\", new Sampler(12, 0xf, 0));\r\n\t\t\tSamplerMap._map.set (\"cube\", new Sampler(12, 0xf, 1));\r\n\t\t\tSamplerMap._map.set (\"3d\", new Sampler(12, 0xf, 2));\r\n\t\t\t// special\r\n\t\t\tSamplerMap._map.set (\"centroid\", new Sampler(16, 1, 1));\r\n\t\t\tSamplerMap._map.set (\"ignoresampler\", new Sampler(16, 4, 4));\r\n\t\t\t// repeat\r\n\t\t\tSamplerMap._map.set (\"clamp\", new Sampler(20, 0xf, 0));\r\n\t\t\tSamplerMap._map.set (\"repeat\", new Sampler(20, 0xf, 1));\r\n\t\t\tSamplerMap._map.set (\"wrap\", new Sampler(20, 0xf, 1));\r\n\t\t\t// mip\r\n\t\t\tSamplerMap._map.set (\"nomip\", new Sampler(24, 0xf, 0));\r\n\t\t\tSamplerMap._map.set (\"mipnone\", new Sampler(24, 0xf, 0));\r\n\t\t\tSamplerMap._map.set (\"mipnearest\", new Sampler(24, 0xf, 1));\r\n\t\t\tSamplerMap._map.set (\"miplinear\", new Sampler(24, 0xf, 2));\r\n\t\t\t// filter\r\n\t\t\tSamplerMap._map.set (\"nearest\", new Sampler(28, 0xf, 0));\r\n\t\t\tSamplerMap._map.set (\"linear\", new Sampler(28, 0xf, 1));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn SamplerMap._map;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer;\r\n\r\n\r\nimport openfl.display.*;\r\nimport openfl.geom.*;\r\n\r\n@:access(openfl.display.DisplayObject)\r\n@:keep\r\n\r\n\r\nclass AbstractMaskManager {\r\n\t\r\n\t\r\n\tprivate var renderSession:RenderSession;\r\n\t\r\n\t\r\n\tpublic function new (renderSession:RenderSession) {\r\n\t\t\r\n\t\tthis.renderSession = renderSession;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function pushMask (mask:DisplayObject):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function pushRect (rect:Rectangle, transform:Matrix):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function popMask ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function popRect ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function saveState ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function restoreState ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer;\r\n\r\n\r\nimport openfl.display.Shape;\r\nimport openfl.display.Stage;\r\nimport openfl.geom.Rectangle;\r\n\r\n\r\nclass AbstractRenderer {\r\n\t\r\n\t\r\n\tpublic var height:Int;\r\n\tpublic var width:Int;\r\n\tpublic var transparent:Bool;\r\n\tpublic var viewport:Rectangle;\r\n\t\r\n\tprivate var renderSession:RenderSession;\r\n\t\r\n\t\r\n\tprivate function new (width:Int, height:Int) {\r\n\t\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function render (stage:Stage):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function renderShape (shape:Shape):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\tpublic function setViewport (x:Int, y:Int, width:Int, height:Int):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function resize (width:Int, height:Int):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer;\r\n\r\n\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.CapsStyle;\r\nimport openfl.display.GradientType;\r\nimport openfl.display.GraphicsPathWinding;\r\nimport openfl.display.InterpolationMethod;\r\nimport openfl.display.JointStyle;\r\nimport openfl.display.LineScaleMode;\r\nimport openfl.display.Shader;\r\nimport openfl.display.SpreadMethod;\r\nimport openfl.display.Tilesheet;\r\nimport openfl.display.TriangleCulling;\r\nimport openfl.geom.Matrix;\r\nimport openfl.Vector;\r\n\r\n@:allow(openfl._internal.renderer.DrawCommandReader)\r\n\r\n\r\nclass DrawCommandBuffer {\r\n\t\r\n\t\r\n\tpublic var length (get, never):Int; \r\n\tpublic var types:Array<DrawCommandType>;\r\n\t\r\n\tprivate var b:Array<Bool>;\r\n\tprivate var f:Array<Float>;\r\n\tprivate var ff:Array<Array<Float>>;\r\n\tprivate var i:Array<Int>;\r\n\tprivate var ii:Array<Array<Int>>;\r\n\tprivate var o:Array<Dynamic>;\r\n\tprivate var ts:Array<Tilesheet>;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\ttypes = [];\r\n\t\t\r\n\t\tb = [];\r\n\t\ti = [];\r\n\t\tf = [];\r\n\t\to = [];\r\n\t\tff = [];\r\n\t\tii = [];\r\n\t\tts = [];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function append (other:DrawCommandBuffer):DrawCommandBuffer {\r\n\t\t\r\n\t\tvar data = new DrawCommandReader (other);\r\n\t\t\r\n\t\tfor (type in other.types) {\r\n\t\t\t\r\n\t\t\tswitch (type) {\r\n\t\t\t\t\r\n\t\t\t\tcase BEGIN_BITMAP_FILL: var c = data.readBeginBitmapFill (); beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\tcase BEGIN_FILL: var c = data.readBeginFill (); beginFill (c.color, c.alpha);\r\n\t\t\t\tcase BEGIN_GRADIENT_FILL: var c = data.readBeginGradientFill (); beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\tcase CUBIC_CURVE_TO: var c = data.readCubicCurveTo (); cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\r\n\t\t\t\tcase CURVE_TO: var c = data.readCurveTo (); curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\r\n\t\t\t\tcase DRAW_CIRCLE: var c = data.readDrawCircle (); drawCircle (c.x, c.y, c.radius);\r\n\t\t\t\tcase DRAW_ELLIPSE: var c = data.readDrawEllipse (); drawEllipse (c.x, c.y, c.width, c.height);\r\n\t\t\t\tcase DRAW_PATH: var c = data.readDrawPath (); drawPath (c.commands, c.data, c.winding);\r\n\t\t\t\tcase DRAW_RECT: var c = data.readDrawRect (); drawRect (c.x, c.y, c.width, c.height);\r\n\t\t\t\tcase DRAW_ROUND_RECT: var c = data.readDrawRoundRect (); drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\r\n\t\t\t\tcase DRAW_TILES: var c = data.readDrawTiles (); drawTiles (c.sheet, c.tileData, c.smooth, c.flags, c.shader, c.count);\r\n\t\t\t\tcase DRAW_TRIANGLES: var c = data.readDrawTriangles (); drawTriangles (c.vertices, c.indices, c.uvtData, c.culling);\r\n\t\t\t\tcase END_FILL: var c = data.readEndFill (); endFill ();\r\n\t\t\t\tcase LINE_BITMAP_STYLE: var c = data.readLineBitmapStyle (); lineBitmapStyle (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\tcase LINE_GRADIENT_STYLE: var c = data.readLineGradientStyle (); lineGradientStyle (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\tcase LINE_STYLE: var c = data.readLineStyle (); lineStyle (c.thickness, c.color, c.alpha, c.pixelHinting, c.scaleMode, c.caps, c.joints, c.miterLimit);\r\n\t\t\t\tcase LINE_TO: var c = data.readLineTo (); lineTo (c.x, c.y);\r\n\t\t\t\tcase MOVE_TO: var c = data.readMoveTo (); moveTo (c.x, c.y);\r\n\t\t\t\tcase OVERRIDE_MATRIX: var c = data.readOverrideMatrix (); overrideMatrix (c.matrix);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tdata.destroy ();\r\n\t\treturn other;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function beginBitmapFill(bitmap:BitmapData, matrix:Matrix, repeat:Bool, smooth:Bool):Void {\r\n\t\t\r\n\t\ttypes.push (BEGIN_BITMAP_FILL);\r\n\t\to.push (bitmap);\r\n\t\to.push (matrix);\r\n\t\tb.push (repeat);\r\n\t\tb.push (smooth);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function beginFill (color:Int, alpha:Float):Void {\r\n\t\t\r\n\t\ttypes.push (BEGIN_FILL);\r\n\t\ti.push (color);\r\n\t\tf.push (alpha);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function beginGradientFill (type:GradientType, colors:Array<Int>, alphas:Array<Float>, ratios:Array<Int>, matrix:Matrix, spreadMethod:SpreadMethod, interpolationMethod:InterpolationMethod, focalPointRatio:Float):Void {\r\n\t\t\r\n\t\ttypes.push (BEGIN_GRADIENT_FILL);\r\n\t\to.push (type);\r\n\t\tii.push (colors);\r\n\t\tff.push (alphas);\r\n\t\tii.push (ratios);\r\n\t\to.push (matrix);\r\n\t\to.push (spreadMethod);\r\n\t\to.push (interpolationMethod);\r\n\t\tf.push (focalPointRatio);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clear ():Void {\r\n\t\t\r\n\t\ttypes.splice (0, types.length);\r\n\t\t\r\n\t\tb.splice (0, b.length);\r\n\t\ti.splice (0, i.length);\r\n\t\tf.splice (0, f.length);\r\n\t\to.splice (0, o.length);\r\n\t\tff.splice (0, ff.length);\r\n\t\tii.splice (0, ii.length);\r\n\t\tts.splice (0, ts.length);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copy ():DrawCommandBuffer {\r\n\t\t\r\n\t\tvar copy = new DrawCommandBuffer ();\r\n\t\tcopy.append (this);\r\n\t\treturn copy;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function cubicCurveTo (controlX1:Float, controlY1:Float, controlX2:Float, controlY2:Float, anchorX:Float, anchorY:Float):Void {\r\n\t\t\r\n\t\ttypes.push (CUBIC_CURVE_TO);\r\n\t\tf.push (controlX1);\r\n\t\tf.push (controlY1);\r\n\t\tf.push (controlX2);\r\n\t\tf.push (controlY2);\r\n\t\tf.push (anchorX);\r\n\t\tf.push (anchorY);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function curveTo (controlX:Float, controlY:Float, anchorX:Float, anchorY:Float):Void {\r\n\t\t\r\n\t\ttypes.push (CURVE_TO);\r\n\t\tf.push (controlX);\r\n\t\tf.push (controlY);\r\n\t\tf.push (anchorX);\r\n\t\tf.push (anchorY);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function destroy ():Void {\r\n\t\t\r\n\t\tclear ();\r\n\t\t\r\n\t\ttypes = null;\r\n\t\t\r\n\t\tb = null;\r\n\t\ti = null;\r\n\t\tf = null;\r\n\t\to = null;\r\n\t\tff = null;\r\n\t\tii = null;\r\n\t\tts = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawCircle (x:Float, y:Float, radius:Float):Void {\r\n\t\t\r\n\t\ttypes.push (DRAW_CIRCLE);\r\n\t\tf.push (x);\r\n\t\tf.push (y);\r\n\t\tf.push (radius);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawEllipse (x:Float, y:Float, width:Float, height:Float):Void {\r\n\t\t\r\n\t\ttypes.push (DRAW_ELLIPSE);\r\n\t\tf.push (x);\r\n\t\tf.push (y);\r\n\t\tf.push (width);\r\n\t\tf.push (height);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawPath (commands:Vector<Int>, data:Vector<Float>, winding:GraphicsPathWinding):Void {\r\n\t\t\r\n\t\ttypes.push (DRAW_PATH);\r\n\t\to.push (commands);\r\n\t\to.push (data);\r\n\t\to.push (winding);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawRect (x:Float, y:Float, width:Float, height:Float):Void {\r\n\t\t\r\n\t\ttypes.push (DRAW_RECT);\r\n\t\tf.push (x);\r\n\t\tf.push (y);\r\n\t\tf.push (width);\r\n\t\tf.push (height);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function drawRoundRect (x:Float, y:Float, width:Float, height:Float, ellipseWidth:Float, ellipseHeight:Null<Float>):Void {\r\n\t\t\r\n\t\ttypes.push (DRAW_ROUND_RECT);\r\n\t\tf.push (x);\r\n\t\tf.push (y);\r\n\t\tf.push (width);\r\n\t\tf.push (height);\r\n\t\tf.push (ellipseWidth);\r\n\t\to.push (ellipseHeight);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawTiles (sheet:Tilesheet, tileData:Array<Float>, smooth:Bool, flags:Int, ?shader:Shader, count:Int):Void {\r\n\t\t\r\n\t\ttypes.push (DRAW_TILES);\r\n\t\tts.push (sheet);\r\n\t\tff.push (tileData);\r\n\t\tb.push (smooth);\r\n\t\ti.push (flags);\r\n\t\to.push (shader);\r\n\t\ti.push (count);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawTriangles (vertices:Vector<Float>, indices:Vector<Int>, uvtData:Vector<Float>, culling:TriangleCulling):Void {\r\n\t\t\r\n\t\ttypes.push (DRAW_TRIANGLES);\r\n\t\to.push (vertices);\r\n\t\to.push (indices);\r\n\t\to.push (uvtData);\r\n\t\to.push (culling);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function endFill ():Void {\r\n\t\t\r\n\t\ttypes.push (END_FILL);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function lineBitmapStyle (bitmap:BitmapData, matrix:Matrix, repeat:Bool, smooth:Bool):Void {\r\n\t\t\r\n\t\ttypes.push (LINE_BITMAP_STYLE);\r\n\t\to.push (bitmap);\r\n\t\to.push (matrix);\r\n\t\tb.push (repeat);\r\n\t\tb.push (smooth);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function lineGradientStyle (type:GradientType, colors:Array<Int>, alphas:Array<Float>, ratios:Array<Int>, matrix:Matrix, spreadMethod:SpreadMethod, interpolationMethod:InterpolationMethod, focalPointRatio:Float):Void {\r\n\t\t\r\n\t\ttypes.push (LINE_GRADIENT_STYLE);\r\n\t\to.push (type);\r\n\t\tii.push (colors);\r\n\t\tff.push (alphas);\r\n\t\tii.push (ratios);\r\n\t\to.push (matrix);\r\n\t\to.push (spreadMethod);\r\n\t\to.push (interpolationMethod);\r\n\t\tf.push (focalPointRatio);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function lineStyle (thickness:Null<Float>, color:Int, alpha:Float, pixelHinting:Bool, scaleMode:LineScaleMode, caps:CapsStyle, joints:JointStyle, miterLimit:Float):Void {\r\n\t\t\r\n\t\ttypes.push (LINE_STYLE);\r\n\t\to.push (thickness);\r\n\t\ti.push (color);\r\n\t\tf.push (alpha);\r\n\t\tb.push (pixelHinting);\r\n\t\to.push (scaleMode);\r\n\t\to.push (caps);\r\n\t\to.push (joints);\r\n\t\tf.push (miterLimit);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function lineTo (x:Float, y:Float):Void {\r\n\t\t\r\n\t\ttypes.push (LINE_TO);\r\n\t\tf.push (x);\r\n\t\tf.push (y);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function moveTo (x:Float, y:Float):Void {\r\n\t\t\r\n\t\ttypes.push (MOVE_TO);\r\n\t\tf.push (x);\r\n\t\tf.push (y);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function overrideMatrix (matrix:Matrix):Void {\r\n\t\t\r\n\t\ttypes.push (OVERRIDE_MATRIX);\r\n\t\to.push (matrix);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_length ():Int {\r\n\t\t\r\n\t\treturn types.length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer;\r\n\r\n\r\nimport openfl._internal.renderer.opengl.utils.DrawPath;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.CapsStyle;\r\nimport openfl.display.GradientType;\r\nimport openfl.display.GraphicsPathWinding;\r\nimport openfl.display.InterpolationMethod;\r\nimport openfl.display.JointStyle;\r\nimport openfl.display.LineScaleMode;\r\nimport openfl.display.Shader;\r\nimport openfl.display.SpreadMethod;\r\nimport openfl.display.Tilesheet;\r\nimport openfl.display.TriangleCulling;\r\nimport openfl.geom.Matrix;\r\nimport openfl.Vector;\r\n\r\n@:allow(openfl._internal.renderer)\r\n\r\n\r\nclass DrawCommandReader {\r\n\t\r\n\t\r\n\tpublic var buffer:DrawCommandBuffer;\r\n\t\r\n\tprivate var bPos:Int;\r\n\tprivate var iiPos:Int;\r\n\tprivate var iPos:Int;\r\n\tprivate var ffPos:Int;\r\n\tprivate var fPos:Int;\r\n\tprivate var oPos:Int;\r\n\tprivate var prev:DrawCommandType;\r\n\tprivate var tsPos:Int;\r\n\t\r\n\t\r\n\tpublic function new (buffer:DrawCommandBuffer) {\r\n\t\t\r\n\t\tthis.buffer = buffer;\r\n\t\t\r\n\t\tbPos = iPos = fPos = oPos = ffPos = iiPos = tsPos = 0;\r\n\t\tprev = UNKNOWN;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function advance ():Void {\r\n\t\t\r\n\t\tswitch (prev) {\r\n\t\t\t\r\n\t\t\tcase BEGIN_BITMAP_FILL:\r\n\t\t\t\t\r\n\t\t\t\toPos += 2; //bitmap, matrix\r\n\t\t\t\tbPos += 2; //repeat, smooth\r\n\t\t\t\r\n\t\t\tcase BEGIN_FILL:\r\n\t\t\t\t\r\n\t\t\t\tiPos += 1; //color\r\n\t\t\t\tfPos += 1; //alpha\r\n\t\t\t\r\n\t\t\tcase BEGIN_GRADIENT_FILL:\r\n\t\t\t\t\r\n\t\t\t\toPos += 4;  //type, matrix, spreadMethod, interpolationMethod\r\n\t\t\t\tiiPos += 2; //colors, ratios\r\n\t\t\t\tffPos += 1; //alphas\r\n\t\t\t\tfPos += 1;  //focalPointRatio\r\n\t\t\t\r\n\t\t\tcase CUBIC_CURVE_TO:\r\n\t\t\t\t\r\n\t\t\t\tfPos += 6; //controlX1, controlY1, controlX2, controlY2, anchorX, anchorY\r\n\t\t\t\r\n\t\t\tcase CURVE_TO: \r\n\t\t\t\t\r\n\t\t\t\tfPos += 4; //controlX, controlY, anchorX, anchorY\r\n\t\t\t\r\n\t\t\tcase DRAW_CIRCLE:\r\n\t\t\t\t\r\n\t\t\t\tfPos += 3; //x, y, radius\r\n\t\t\t\r\n\t\t\tcase DRAW_ELLIPSE:\r\n\t\t\t\t\r\n\t\t\t\tfPos += 4; //x, y, width, height\r\n\t\t\t\r\n\t\t\tcase DRAW_PATH:\r\n\t\t\t\t\r\n\t\t\t\toPos += 3; //commands, data, winding\r\n\t\t\t\r\n\t\t\tcase DRAW_RECT:\r\n\t\t\t\t\r\n\t\t\t\tfPos += 4; //x, y, width, height\r\n\t\t\t\r\n\t\t\tcase DRAW_ROUND_RECT:\r\n\t\t\t\t\r\n\t\t\t\tfPos += 5; //x, y, width, height, ellipseWidth\r\n\t\t\t\toPos += 1; //ellipseHeight\r\n\t\t\t\r\n\t\t\tcase DRAW_TILES:\r\n\t\t\t\t\r\n\t\t\t\ttsPos += 1; //sheet\r\n\t\t\t\tffPos += 1; //tileData\r\n\t\t\t\tbPos += 1; //smooth\r\n\t\t\t\tiPos += 2; //flags, count\r\n\t\t\t\toPos += 1;\r\n\t\t\t\r\n\t\t\tcase DRAW_TRIANGLES:\r\n\t\t\t\t\r\n\t\t\t\toPos += 4; //vertices, indices, uvtData, culling\r\n\t\t\t\r\n\t\t\tcase END_FILL:\r\n\t\t\t\t\r\n\t\t\t\t//no parameters\r\n\t\t\t\r\n\t\t\tcase LINE_BITMAP_STYLE:\r\n\t\t\t\t\r\n\t\t\t\toPos += 2; //bitmap, matrix\r\n\t\t\t\tbPos += 2; //repeat, smooth\r\n\t\t\t\r\n\t\t\tcase LINE_GRADIENT_STYLE:\r\n\t\t\t\t\r\n\t\t\t\toPos += 4; //type, matrix, spreadMethod, interpolationMethod\r\n\t\t\t\tiiPos += 2; //colors, ratios\r\n\t\t\t\tffPos += 1; //alphas\r\n\t\t\t\tfPos += 1; //focalPointRatio\r\n\t\t\t\r\n\t\t\tcase LINE_STYLE:\r\n\t\t\t\t\r\n\t\t\t\toPos += 4; //thickness, scaleMode, caps, joints\r\n\t\t\t\tiPos += 1; //color\r\n\t\t\t\tfPos += 2; //alpha, miterLimit\r\n\t\t\t\tbPos += 1; //pixelHinting\r\n\t\t\t\r\n\t\t\tcase LINE_TO:\r\n\t\t\t\t\r\n\t\t\t\tfPos += 2; //x, y\r\n\t\t\t\r\n\t\t\tcase MOVE_TO:\r\n\t\t\t\t\r\n\t\t\t\tfPos += 2; //x, y\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\tcase OVERRIDE_MATRIX:\r\n\t\t\t\t\r\n\t\t\t\toPos += 1; //matrix\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function bool (index:Int):Bool {\r\n\t\t\r\n\t\treturn buffer.b[bPos + index];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function destroy ():Void {\r\n\t\t\r\n\t\tbuffer = null;\r\n\t\treset ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function fArr (index:Int):Array<Float> {\r\n\t\t\r\n\t\treturn buffer.ff[ffPos + index];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function float (index:Int):Float {\r\n\t\t\r\n\t\treturn buffer.f[fPos + index];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function iArr (index:Int):Array<Int> {\r\n\t\t\r\n\t\treturn buffer.ii[iiPos + index];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function int (index:Int):Int {\r\n\t\t\r\n\t\treturn buffer.i[iPos + index];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function obj (index:Int):Dynamic {\r\n\t\t\r\n\t\treturn buffer.o[oPos + index];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function readBeginBitmapFill ():BeginBitmapFillView { advance (); prev = BEGIN_BITMAP_FILL; return new BeginBitmapFillView (this); }\r\n\tpublic inline function readBeginFill ():BeginFillView { advance (); prev = BEGIN_FILL; return new BeginFillView (this); }\r\n\tpublic inline function readBeginGradientFill ():BeginGradientFillView { advance (); prev = BEGIN_GRADIENT_FILL; return new BeginGradientFillView (this); }\r\n\tpublic inline function readCubicCurveTo ():CubicCurveToView { advance (); prev = CUBIC_CURVE_TO; return new CubicCurveToView (this); }\r\n\tpublic inline function readCurveTo ():CurveToView { advance (); prev = CURVE_TO; return new CurveToView (this); }\r\n\tpublic inline function readDrawCircle ():DrawCircleView { advance (); prev = DRAW_CIRCLE; return new DrawCircleView (this); }\r\n\tpublic inline function readDrawEllipse ():DrawEllipseView { advance (); prev = DRAW_ELLIPSE; return new DrawEllipseView (this); }\r\n\tpublic inline function readDrawPath ():DrawPathView { advance (); prev = DRAW_PATH; return new DrawPathView (this); }\r\n\tpublic inline function readDrawRect ():DrawRectView { advance (); prev = DRAW_RECT; return new DrawRectView (this); }\r\n\tpublic inline function readDrawRoundRect ():DrawRoundRectView { advance (); prev = DRAW_ROUND_RECT; return new DrawRoundRectView (this); }\r\n\tpublic inline function readDrawTiles ():DrawTilesView { advance (); prev = DRAW_TILES; return new DrawTilesView (this); }\r\n\tpublic inline function readDrawTriangles ():DrawTrianglesView { advance (); prev = DRAW_TRIANGLES; return new DrawTrianglesView (this); }\r\n\tpublic inline function readEndFill ():EndFillView { advance (); prev = END_FILL; return new EndFillView (this); }\r\n\tpublic inline function readLineBitmapStyle ():LineBitmapStyleView { advance (); prev = LINE_BITMAP_STYLE; return new LineBitmapStyleView (this); }\r\n\tpublic inline function readLineGradientStyle ():LineGradientStyleView { advance (); prev = LINE_GRADIENT_STYLE; return new LineGradientStyleView (this); }\r\n\tpublic inline function readLineStyle ():LineStyleView { advance (); prev = LINE_STYLE; return new LineStyleView (this); }\r\n\tpublic inline function readLineTo ():LineToView { advance (); prev = LINE_TO; return new LineToView (this); }\r\n\tpublic inline function readMoveTo ():MoveToView { advance (); prev = MOVE_TO; return new MoveToView (this); }\r\n\tpublic inline function readOverrideMatrix ():OverrideMatrixView { advance (); prev = OVERRIDE_MATRIX; return new OverrideMatrixView (this); }\r\n\t\r\n\t\r\n\tpublic function reset ():Void {\r\n\t\t\r\n\t\tbPos = iPos = fPos = oPos = ffPos = iiPos = tsPos = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function skip (type:DrawCommandType):Void {\r\n\t\t\r\n\t\tadvance ();\r\n\t\tprev = type;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function tileSheet (index:Int):Tilesheet {\r\n\t\t\r\n\t\treturn buffer.ts[tsPos + index];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nabstract BeginBitmapFillView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var bitmap (get, never):BitmapData; private inline function get_bitmap ():BitmapData { return cast this.obj (0); }\r\n\tpublic var matrix (get, never):Matrix; private inline function get_matrix ():Matrix { return cast this.obj (1); }\r\n\tpublic var repeat (get, never):Bool; private inline function get_repeat ():Bool { return this.bool (0); }\r\n\tpublic var smooth (get, never):Bool; private inline function get_smooth ():Bool { return this.bool (1); }\r\n\t\r\n}\r\n\r\n\r\nabstract BeginFillView (DrawCommandReader) {\r\n\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var color (get, never):Int; private inline function get_color ():Int { return this.int (0); }\r\n\tpublic var alpha (get, never):Float; private inline function get_alpha ():Float { return this.float (0); }\r\n\t\r\n}\r\n\r\n\r\nabstract BeginGradientFillView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var type (get, never):GradientType; private inline function get_type ():GradientType { return cast this.obj (0); }\r\n\tpublic var colors (get, never):Array<Int>; private inline function get_colors ():Array<Int> { return cast this.iArr (0); }\r\n\tpublic var alphas (get, never):Array<Float>; private inline function get_alphas ():Array<Float> { return cast this.fArr (0); }\r\n\tpublic var ratios (get, never):Array<Int>; private inline function get_ratios ():Array<Int> { return cast this.iArr (1); }\r\n\tpublic var matrix (get, never):Matrix; private inline function get_matrix ():Matrix { return cast this.obj (1); }\r\n\tpublic var spreadMethod (get, never):SpreadMethod; private inline function get_spreadMethod ():SpreadMethod { return cast this.obj (2); }\r\n\tpublic var interpolationMethod (get, never):InterpolationMethod; private inline function get_interpolationMethod ():InterpolationMethod { return cast this.obj (3); }\r\n\tpublic var focalPointRatio (get, never):Float; private inline function get_focalPointRatio ():Float { return cast this.float (0); }\r\n\t\r\n}\r\n\r\n\r\nabstract CubicCurveToView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var controlX1 (get, never):Float; private inline function get_controlX1 ():Float { return this.float (0); }\r\n\tpublic var controlY1 (get, never):Float; private inline function get_controlY1 ():Float { return this.float (1); }\r\n\tpublic var controlX2 (get, never):Float; private inline function get_controlX2 ():Float { return this.float (2); }\r\n\tpublic var controlY2 (get, never):Float; private inline function get_controlY2 ():Float { return this.float (3); }\r\n\tpublic var anchorX (get, never):Float; private inline function get_anchorX ():Float { return this.float (4); }\r\n\tpublic var anchorY (get, never):Float; private inline function get_anchorY ():Float { return this.float (5); }\r\n\t\r\n}\r\n\r\n\r\nabstract CurveToView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var controlX (get, never):Float; private inline function get_controlX ():Float { return this.float (0); }\r\n\tpublic var controlY (get, never):Float; private inline function get_controlY ():Float { return this.float (1); }\r\n\tpublic var anchorX (get, never):Float; private inline function get_anchorX ():Float { return this.float (2); }\r\n\tpublic var anchorY (get, never):Float; private inline function get_anchorY ():Float { return this.float (3); }\r\n\t\r\n}\r\n\r\n\r\nabstract DrawCircleView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var x (get, never):Float; private inline function get_x ():Float { return this.float (0); }\r\n\tpublic var y (get, never):Float; private inline function get_y ():Float { return this.float (1); }\r\n\tpublic var radius(get, never):Float; private inline function get_radius ():Float { return this.float (2); }\r\n\t\r\n}\r\n\r\n\r\nabstract DrawEllipseView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var x (get, never):Float; private inline function get_x ():Float { return this.float (0); }\r\n\tpublic var y (get, never):Float; private inline function get_y ():Float { return this.float (1); }\r\n\tpublic var width (get, never):Float; private inline function get_width ():Float { return this.float (2); }\r\n\tpublic var height(get, never):Float; private inline function get_height ():Float { return this.float (3); }\r\n\t\r\n}\r\n\r\n\r\nabstract DrawPathView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var commands (get, never):Vector<Int>; private inline function get_commands ():Vector<Int> { return cast this.obj (0); }\r\n\tpublic var data (get, never):Vector<Float>; private inline function get_data ():Vector<Float> { return cast this.obj (1); }\r\n\tpublic var winding (get, never):GraphicsPathWinding; private inline function get_winding ():GraphicsPathWinding { return cast this.obj (2); }\r\n\t\r\n}\r\n\r\n\r\nabstract DrawRectView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var x (get, never):Float; private inline function get_x ():Float { return this.float (0); }\r\n\tpublic var y (get, never):Float; private inline function get_y ():Float { return this.float (1); }\r\n\tpublic var width (get, never):Float; private inline function get_width ():Float { return this.float (2); }\r\n\tpublic var height(get, never):Float; private inline function get_height ():Float { return this.float (3); }\r\n\t\r\n}\r\n\r\n\r\nabstract DrawRoundRectView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var x (get, never):Float; private inline function get_x ():Float { return this.float (0); }\r\n\tpublic var y (get, never):Float; private inline function get_y ():Float { return this.float (1); }\r\n\tpublic var width (get, never):Float; private inline function get_width ():Float { return this.float (2); }\r\n\tpublic var height(get, never):Float; private inline function get_height ():Float { return this.float (3); }\r\n\tpublic var ellipseWidth (get, never):Float; private inline function get_ellipseWidth ():Float { return this.float (4); }\r\n\tpublic var ellipseHeight (get, never):Null<Float>; private inline function get_ellipseHeight ():Null<Float> { return this.obj (0); }\r\n\t\r\n}\r\n\r\n\r\nabstract DrawTilesView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var sheet (get, never):Tilesheet; private inline function get_sheet ():Tilesheet { return this.tileSheet (0); }\r\n\tpublic var tileData (get, never):Array<Float>; private inline function get_tileData ():Array<Float> { return this.fArr (0); }\r\n\tpublic var smooth (get, never):Bool; private inline function get_smooth ():Bool { return this.bool (0); }\r\n\tpublic var flags (get, never):Int; private inline function get_flags ():Int { return this.int (0); }\r\n\tpublic var shader (get, never):Shader; private inline function get_shader ():Shader { return cast this.obj (0); }\r\n\tpublic var count (get, never):Int; private inline function get_count ():Int { return this.int (1); }\r\n\t\r\n}\r\n\r\n\r\nabstract DrawTrianglesView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var vertices (get, never):Vector<Float>; private inline function get_vertices ():Vector<Float> { return cast this.obj (0); }\r\n\tpublic var indices (get, never):Vector<Int>; private inline function get_indices ():Vector<Int> { return cast this.obj (1); }\r\n\tpublic var uvtData (get, never):Vector<Float>; private inline function get_uvtData ():Vector<Float> { return cast this.obj (2); }\r\n\tpublic var culling (get, never):TriangleCulling; private inline function get_culling ():TriangleCulling { return cast this.obj (3); }\r\n\t\r\n}\r\n\r\n\r\nabstract EndFillView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\t\r\n}\r\n\r\n\r\nabstract LineBitmapStyleView (DrawCommandReader) { \r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var bitmap (get, never):BitmapData; private inline function get_bitmap ():BitmapData { return cast this.obj (0); }\r\n\tpublic var matrix (get, never):Matrix; private inline function get_matrix ():Matrix { return cast this.obj (1); }\r\n\tpublic var repeat (get, never):Bool; private inline function get_repeat ():Bool { return cast this.bool (0); }\r\n\tpublic var smooth (get, never):Bool; private inline function get_smooth ():Bool { return cast this.bool (1); }\r\n\t\r\n}\r\n\r\n\r\nabstract LineGradientStyleView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var type (get, never):GradientType; private inline function get_type ():GradientType { return cast this.obj (0); }\r\n\tpublic var colors (get, never):Array<Int>; private inline function get_colors ():Array<Int> { return cast this.iArr (0); }\r\n\tpublic var alphas (get, never):Array<Float>; private inline function get_alphas ():Array<Float> { return cast this.fArr (0); }\r\n\tpublic var ratios (get, never):Array<Int>; private inline function get_ratios ():Array<Int> { return cast this.iArr (1); }\r\n\tpublic var matrix (get, never):Matrix; private inline function get_matrix ():Matrix { return cast this.obj (1); }\r\n\tpublic var spreadMethod (get, never):SpreadMethod; private inline function get_spreadMethod ():SpreadMethod { return cast this.obj (2); }\r\n\tpublic var interpolationMethod (get, never):InterpolationMethod; private inline function get_interpolationMethod ():InterpolationMethod { return cast this.obj (3); }\r\n\tpublic var focalPointRatio (get, never):Float; private inline function get_focalPointRatio ():Float { return cast this.float (0); }\r\n\t\r\n}\r\n\r\n\r\nabstract LineStyleView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var thickness (get, never):Null<Float>; private inline function get_thickness ():Null<Float> { return cast this.obj (0); }\r\n\tpublic var color (get, never):Int; private inline function get_color ():Int { return cast this.int (0); }\r\n\tpublic var alpha (get, never):Float; private inline function get_alpha ():Float { return cast this.float (0); }\r\n\tpublic var pixelHinting (get, never):Bool; private inline function get_pixelHinting ():Bool { return cast this.bool (0); }\r\n\tpublic var scaleMode (get, never):LineScaleMode; private inline function get_scaleMode ():LineScaleMode { return cast this.obj (1); }\r\n\tpublic var caps (get, never):CapsStyle; private inline function get_caps ():CapsStyle { return cast this.obj (2); }\r\n\tpublic var joints (get, never):JointStyle; private inline function get_joints ():JointStyle { return cast this.obj (3); }\r\n\tpublic var miterLimit (get, never):Float; private inline function get_miterLimit ():Float { return cast this.float (1); }\r\n\t\r\n}\r\n\r\n\r\nabstract LineToView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var x (get, never):Float; private inline function get_x ():Float { return this.float (0); }\r\n\tpublic var y (get, never):Float; private inline function get_y ():Float { return this.float (1); }\r\n\t\r\n}\r\n\r\n\r\nabstract MoveToView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var x (get, never):Float; private inline function get_x ():Float { return this.float (0); }\r\n\tpublic var y (get, never):Float; private inline function get_y ():Float { return this.float (1); }\r\n\t\r\n}\r\n\r\n\r\nabstract OverrideMatrixView (DrawCommandReader) {\r\n\t\r\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\r\n\tpublic var matrix (get, never):Matrix; private inline function get_matrix ():Matrix { return cast this.obj (0); }\r\n\t\r\n}","package openfl._internal.renderer;\r\n\r\n\r\nclass GraphicsPaths {\r\n\t\r\n\t\r\n\tprivate static var SIN45 = 0.70710678118654752440084436210485;\r\n\tprivate static var TAN22 = 0.4142135623730950488016887242097;\r\n\r\n\r\n\tpublic static inline function ellipse (\r\n\t\tpoints:Array<Float>,\r\n\t\tx:Float, y:Float,\r\n\t\trx:Float, ry:Float,\r\n\t\tsegmentCount:Int\r\n\t) {\r\n\r\n\t\tvar seg = (Math.PI * 2) / segmentCount;\r\n\r\n\t\tfor (i in 0...segmentCount + 1) {\r\n\r\n\t\t\tpoints.push (x + Math.sin (seg * i) * rx);\r\n\t\t\tpoints.push (y + Math.cos (seg * i) * ry);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t\r\n\tpublic static inline function cubicCurveTo (\r\n\t\tpoints:Array<Float>,\r\n\t\tcx:Float, cy:Float,\r\n\t\tcx2:Float, cy2:Float,\r\n\t\tx:Float, y:Float\r\n\t) {\r\n\r\n\t\tvar n = 20;\r\n\t\tvar dt:Float = 0;\r\n\t\tvar dt2:Float = 0;\r\n\t\tvar dt3:Float = 0;\r\n\t\tvar t2:Float = 0;\r\n\t\tvar t3:Float = 0;\r\n\t\t\r\n\t\tvar fromX = points[points.length-2];\r\n\t\tvar fromY = points[points.length-1];\r\n\t\t\r\n\t\tvar px:Float = 0;\r\n\t\tvar py:Float = 0;\r\n\t\t\r\n\t\tvar tmp:Float = 0;\r\n\t\t\r\n\t\tfor (i in 1...(n + 1)) {\r\n\t\t\t\r\n\t\t\ttmp = i / n;\r\n\t\t\t\r\n\t\t\tdt = 1 - tmp;\r\n\t\t\tdt2 = dt * dt;\r\n\t\t\tdt3 = dt2 * dt;\r\n\t\t\t\r\n\t\t\tt2 = tmp * tmp;\r\n\t\t\tt3 = t2 * tmp;\r\n\t\t\t\r\n\t\t\tpx = dt3 * fromX + 3 * dt2 * tmp * cx + 3 * dt * t2 * cx2 + t3 * x;\r\n\t\t\tpy = dt3 * fromY + 3 * dt2 * tmp * cy + 3 * dt * t2 * cy2 + t3 * y;\r\n\t\t\t\r\n\t\t\tpoints.push (px);\r\n\t\t\tpoints.push (py);\r\n\t\t\t\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tpublic static function curveTo (\r\n\t\tpoints:Array<Float>,\r\n\t\tcx:Float, cy:Float, x:Float, y:Float\r\n\t) {\r\n\t\t\r\n\t\tvar xa:Float = 0;\r\n\t\tvar ya:Float = 0;\r\n\t\tvar n = 20;\r\n\t\t\r\n\t\tvar fromX = points[points.length-2];\r\n\t\tvar fromY = points[points.length-1];\r\n\t\t\r\n\t\tvar px:Float = 0;\r\n\t\tvar py:Float = 0;\r\n\t\t\r\n\t\tvar tmp:Float = 0;\r\n\t\t\r\n\t\tfor (i in 1...(n + 1)) {\r\n\t\t\t\r\n\t\t\ttmp = i / n;\r\n\t\t\t\r\n\t\t\txa = fromX + ((cx - fromX) * tmp);\r\n\t\t\tya = fromY + ((cy - fromY) * tmp);\r\n\t\t\t\r\n\t\t\tpx = xa + ((cx + (x - cx) * tmp) - xa) * tmp;\r\n\t\t\tpy = ya + ((cy + (y - cy) * tmp) - ya) * tmp;\r\n\t\t\t\r\n\t\t\tpoints.push (px);\r\n\t\t\tpoints.push (py);\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic static function roundRectangle (\r\n\t\tpoints:Array<Float>,\r\n\t\tx:Float, y:Float, width:Float, height:Float,\r\n\t\trx:Float, ry:Float\r\n\t) {\r\n\r\n\t\tvar xe = x + width;\r\n\t\tvar ye = y + height;\r\n\t\tvar cx1 = -rx + (rx * SIN45);\r\n\t\tvar cx2 = -rx + (rx * TAN22);\r\n\t\tvar cy1 = -ry + (ry * SIN45);\r\n\t\tvar cy2 = -ry + (ry * TAN22);\r\n\r\n\t\tpoints.push (xe);\r\n\t\tpoints.push (ye - ry);\r\n\t\tcurveTo (points, xe, ye + cy2, xe + cx1, ye + cy1);\r\n\t\tcurveTo (points, xe + cx2, ye, xe - rx, ye);\r\n\t\tpoints.push(x + rx);\r\n\t\tpoints.push(ye); \r\n\t\tcurveTo (points, x - cx2, ye, x - cx1, ye + cy1);\r\n\t\tcurveTo (points, x, ye + cy2, x, ye - ry);\r\n\t\tpoints.push(x);\r\n\t\tpoints.push(y + ry);\r\n\t\tcurveTo (points, x, y - cy2, x - cx1, y - cy1);\r\n\t\tcurveTo (points, x - cx2, y, x + rx, y);\r\n\t\tpoints.push(xe - rx);\r\n\t\tpoints.push(y);\r\n\t\tcurveTo (points, xe + cx2, y, xe + cx1, y - cy1);\r\n\t\tcurveTo (points, xe, y - cy2, xe, y + ry);\r\n\t\tpoints.push(xe);\r\n\t\tpoints.push(ye - ry);\r\n\r\n\t}\r\n\t\r\n\t\r\n}\r\n","/*\r\nPolyK library\r\nurl: http://polyk.ivank.net\r\nReleased under MIT licence.\r\n\r\nCopyright (c) 2012 - 2014 Ivan Kuckir\r\n\r\nPermission is hereby granted, free of charge, to any person\r\nobtaining a copy of this software and associated documentation\r\nfiles (the \"Software\"), to deal in the Software without\r\nrestriction, including without limitation the rights to use,\r\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the\r\nSoftware is furnished to do so, subject to the following\r\nconditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\r\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\nOTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\npackage openfl._internal.renderer;\r\n\r\n\r\nclass PolyK {\r\n\t\r\n\t\r\n\tpublic static function triangulate (tgs:Array<Int>, p:Array<Float>) {\r\n\t\t\r\n\t\tvar sign = true;\r\n\r\n\t\tvar n = p.length >> 1;\r\n\t\tif (n < 3) return [];\r\n\t\t\r\n\t\t//var tgs:Array<Int> = [];\r\n\t\tvar avl:Array<Int> = [for (i in 0...n) i];\r\n\t\t\r\n\t\tvar i = 0;\r\n\t\tvar al = n;\r\n\t\tvar earFound = false;\r\n\t\t\r\n\t\twhile (al > 3) {\r\n\t\t\t\r\n\t\t\tvar i0 = avl[(i + 0) % al];\r\n\t\t\tvar i1 = avl[(i + 1) % al];\r\n\t\t\tvar i2 = avl[(i + 2) % al];\r\n\t\t\t\r\n\t\t\tvar ax = p[2* i0], ay = p[2 * i0 + 1];\r\n\t\t\tvar bx = p[2 * i1], by = p[2 * i1 + 1];\r\n\t\t\tvar cx = p[2 * i2], cy = p[2 * i2 + 1];\r\n\t\t\t\r\n\t\t\tearFound = false;\r\n\t\t\t\r\n\t\t\tif (PolyK._convex (ax, ay, bx, by, cx, cy, sign)) {\r\n\t\t\t\t\r\n\t\t\t\tearFound = true;\r\n\t\t\t\t\r\n\t\t\t\tfor (j in 0...al) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar vi = avl[j];\r\n\t\t\t\t\tif (vi == i0 || vi == i1 || vi == i2) continue;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (PolyK._PointInTriangle (p[2 * vi], p[2 * vi + 1], ax, ay, bx, by, cx, cy)) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tearFound = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (earFound) {\r\n\t\t\t\t\r\n\t\t\t\ttgs.push (i0);\r\n\t\t\t\ttgs.push (i1);\r\n\t\t\t\ttgs.push (i2);\r\n\t\t\t\tavl.splice ((i + 1) % al, 1);\r\n\t\t\t\tal--;\r\n\t\t\t\ti = 0;\r\n\t\t\t\t\r\n\t\t\t} else if (i++ > 3 * al) {\r\n\t\t\t\t\r\n\t\t\t\tif (sign) {\r\n\t\t\t\t\t\r\n\t\t\t\t\ttgs = [];\r\n\t\t\t\t\tavl = [for (k in 0...n) k];\r\n\t\t\t\t\t\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\t\tal = n;\r\n\t\t\t\t\tsign = false;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\ttrace (\"Warning: shape too complex to fill\");\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\ttgs.push (avl[0]);\r\n\t\ttgs.push (avl[1]);\r\n\t\ttgs.push (avl[2]);\r\n\t\treturn tgs;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function _PointInTriangle (px:Float, py:Float, ax:Float, ay:Float, bx:Float, by:Float, cx:Float, cy:Float) {\r\n\t\t\r\n\t\tvar v0x = Std.int(cx-ax);\r\n\t\tvar v0y = Std.int(cy-ay);\r\n\t\tvar v1x = Std.int(bx-ax);\r\n\t\tvar v1y = Std.int(by-ay);\r\n\t\tvar v2x = Std.int(px-ax);\r\n\t\tvar v2y = Std.int(py-ay);\r\n\t\t\r\n\t\tvar dot00 = (v0x * v0x) + (v0y * v0y);\r\n\t\tvar dot01 = (v0x * v1x) + (v0y * v1y);\r\n\t\tvar dot02 = (v0x * v2x) + (v0y * v2y);\r\n\t\tvar dot11 = (v1x * v1x) + (v1y * v1y);\r\n\t\tvar dot12 = (v1x * v2x) + (v1y * v2y);\r\n\t\t\r\n\t\tvar invDenom = 1 / (dot00 * dot11 - dot01 * dot01);\r\n\t\tvar u = (dot11 * dot02 - dot01 * dot12) * invDenom;\r\n\t\tvar v = (dot00 * dot12 - dot01 * dot02) * invDenom;\r\n\t\t\r\n\t\treturn (u >= 0) && (v >= 0) && (u + v < 1);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function _convex (ax:Float, ay:Float, bx:Float, by:Float, cx:Float, cy:Float, sign:Bool) {\r\n\t\t\r\n\t\treturn ((ay - by) * (cx - bx) + (bx - ax) * (cy - by) >= 0) == sign;\r\n\t\t\r\n\t}\r\n\t\t\r\n}\r\n","package openfl._internal.renderer; #if (!display && !flash)\r\n\r\n\r\nimport lime.graphics.CairoRenderContext;\r\nimport lime.graphics.CanvasRenderContext;\r\nimport lime.graphics.DOMRenderContext;\r\nimport lime.graphics.GLRenderContext;\r\nimport lime.graphics.opengl.GLFramebuffer;\r\nimport openfl._internal.renderer.opengl.utils.BlendModeManager;\r\nimport openfl._internal.renderer.opengl.utils.FilterManager;\r\nimport openfl._internal.renderer.opengl.utils.ShaderManager;\r\nimport openfl._internal.renderer.opengl.utils.SpriteBatch;\r\nimport openfl._internal.renderer.opengl.utils.StencilManager;\r\nimport openfl.display.BlendMode;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\n\r\n\r\nclass RenderSession {\r\n\t\r\n\t\r\n\tpublic var cairo:CairoRenderContext;\r\n\tpublic var context:CanvasRenderContext;\r\n\tpublic var element:DOMRenderContext;\r\n\tpublic var gl:GLRenderContext;\r\n\tpublic var renderer:AbstractRenderer;\r\n\tpublic var roundPixels:Bool;\r\n\tpublic var transformProperty:String;\r\n\tpublic var transformOriginProperty:String;\r\n\tpublic var vendorPrefix:String;\r\n\tpublic var z:Int;\r\n\tpublic var projectionMatrix:Matrix;\r\n\t\r\n\tpublic var drawCount:Int;\r\n\tpublic var currentBlendMode:BlendMode;\r\n\tpublic var activeTextures:Int = 0;\r\n\t\r\n\tpublic var shaderManager:ShaderManager;\r\n\tpublic var maskManager:AbstractMaskManager;\r\n\tpublic var filterManager:FilterManager;\r\n\tpublic var blendModeManager:BlendModeManager;\r\n\tpublic var spriteBatch:SpriteBatch;\r\n\tpublic var stencilManager:StencilManager;\r\n\tpublic var defaultFramebuffer:GLFramebuffer;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t//maskManager = new MaskManager (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n} #end","package openfl._internal.renderer.cairo;\r\n\r\n\r\nimport lime.graphics.cairo.CairoFilter;\r\nimport lime.graphics.cairo.CairoFormat;\r\nimport lime.graphics.cairo.CairoPattern;\r\nimport lime.graphics.cairo.CairoSurface;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.Bitmap;\r\n\r\n@:access(lime.graphics.ImageBuffer)\r\n@:access(openfl.display.Bitmap)\r\n@:access(openfl.display.BitmapData)\r\n@:access(openfl.geom.Matrix)\r\n\r\n\r\nclass CairoBitmap {\r\n\t\r\n\t\r\n\tpublic static inline function render (bitmap:Bitmap, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (!bitmap.__renderable || bitmap.__worldAlpha <= 0) return;\r\n\t\t\r\n\t\t//var context = renderSession.context;\r\n\t\tvar cairo = renderSession.cairo;\r\n\t\t\r\n\t\tif (bitmap.bitmapData != null && bitmap.bitmapData.__isValid) {\r\n\t\t\t\r\n\t\t\tif (bitmap.__mask != null) {\r\n\t\t\t\t\r\n\t\t\t\trenderSession.maskManager.pushMask (bitmap.__mask);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//bitmap.bitmapData.__sync ();\r\n\t\t\t\r\n\t\t\t//context.globalAlpha = bitmap.__worldAlpha;\r\n\t\t\tvar transform = bitmap.__renderTransform;\r\n\t\t\tvar scrollRect = bitmap.scrollRect;\r\n\t\t\t\r\n\t\t\tif (renderSession.roundPixels) {\r\n\t\t\t\t\r\n\t\t\t\tvar matrix = transform.__toMatrix3 ();\r\n\t\t\t\tmatrix.tx = Math.round (matrix.tx);\r\n\t\t\t\tmatrix.ty = Math.round (matrix.ty);\r\n\t\t\t\tcairo.matrix = matrix;\r\n\t\t\t\t//context.setTransform (transform.a, transform.b, transform.c, transform.d, Std.int (transform.tx), Std.int (transform.ty));\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tcairo.matrix = transform.__toMatrix3 ();\r\n\t\t\t\t//context.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar surface = bitmap.bitmapData.getSurface ();\r\n\t\t\t\r\n\t\t\tif (surface != null) {\r\n\t\t\t\t\r\n\t\t\t\tvar pattern = CairoPattern.createForSurface (surface);\r\n\t\t\t\tpattern.filter = bitmap.smoothing ? CairoFilter.GOOD : CairoFilter.NEAREST;\r\n\t\t\t\t\r\n\t\t\t\tif (scrollRect != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.pushGroup ();\r\n\t\t\t\t\tcairo.source = pattern;\r\n\t\t\t\t\tcairo.newPath ();\r\n\t\t\t\t\tcairo.rectangle (scrollRect.x, scrollRect.y, scrollRect.width, scrollRect.height);\r\n\t\t\t\t\tcairo.fill ();\r\n\t\t\t\t\tcairo.popGroupToSource ();\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.source = pattern;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (bitmap.__worldAlpha == 1) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.paint ();\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.paintWithAlpha (bitmap.__worldAlpha);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bitmap.__mask != null) {\r\n\t\t\t\t\r\n\t\t\t\trenderSession.maskManager.popMask ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n","package openfl._internal.renderer.cairo;\r\n\r\n\r\nimport lime.graphics.cairo.Cairo;\r\nimport lime.graphics.cairo.CairoExtend;\r\nimport lime.graphics.cairo.CairoImageSurface;\r\nimport lime.graphics.cairo.CairoPattern;\r\nimport lime.graphics.cairo.CairoSurface;\r\nimport lime.math.Matrix3;\r\nimport lime.math.Vector2;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.CapsStyle;\r\nimport openfl.display.DisplayObject;\r\nimport openfl._internal.renderer.DrawCommandBuffer;\r\nimport openfl._internal.renderer.DrawCommandReader;\r\nimport openfl._internal.renderer.DrawCommandType;\r\nimport openfl.display.GradientType;\r\nimport openfl.display.Graphics;\r\nimport openfl.display.InterpolationMethod;\r\nimport openfl.display.SpreadMethod;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.Lib;\r\nimport openfl.Vector;\r\n\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.display.BitmapData)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.display.Tilesheet)\r\n@:access(openfl.geom.Matrix)\r\n\r\n\r\nclass CairoGraphics {\r\n\t\r\n\t\r\n\tprivate static var SIN45 = 0.70710678118654752440084436210485;\r\n\tprivate static var TAN22 = 0.4142135623730950488016887242097;\r\n\t\r\n\tprivate static var bitmapFill:BitmapData;\r\n\tprivate static var bitmapRepeat:Bool;\r\n\tprivate static var bounds:Rectangle;\r\n\tprivate static var cairo:Cairo;\r\n\tprivate static var fillCommands:DrawCommandBuffer = new DrawCommandBuffer();\r\n\tprivate static var fillPattern:CairoPattern;\r\n\tprivate static var fillPatternMatrix:Matrix;\r\n\tprivate static var graphics:Graphics;\r\n\tprivate static var hasFill:Bool;\r\n\tprivate static var hasStroke:Bool;\r\n\tprivate static var hitTesting:Bool;\r\n\tprivate static var inversePendingMatrix:Matrix;\r\n\tprivate static var pendingMatrix:Matrix;\r\n\tprivate static var strokeCommands:DrawCommandBuffer = new DrawCommandBuffer();\r\n\tprivate static var strokePattern:CairoPattern;\r\n\t\r\n\t\r\n\tprivate static function closePath ():Void {\r\n\t\t\r\n\t\tif (strokePattern == null) {\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tcairo.closePath ();\r\n\t\tcairo.source = strokePattern;\r\n\t\tif (!hitTesting) cairo.strokePreserve ();\r\n\t\tcairo.newPath ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function createGradientPattern (type:GradientType, colors:Array<Dynamic>, alphas:Array<Dynamic>, ratios:Array<Dynamic>, matrix:Matrix, spreadMethod:SpreadMethod, interpolationMethod:InterpolationMethod, focalPointRatio:Float):CairoPattern {\r\n\t\t\r\n\t\tvar pattern:CairoPattern = null;\r\n\t\t\r\n\t\tswitch (type) {\r\n\t\t\t\r\n\t\t\tcase RADIAL:\r\n\t\t\t\t\r\n\t\t\t\tif (matrix == null) matrix = new Matrix ();\r\n\t\t\t\t\r\n\t\t\t\tvar point = matrix.transformPoint (new Point (1638.4, 0));\r\n\t\t\t\t\r\n\t\t\t\tvar x = matrix.tx + graphics.__bounds.x;\r\n\t\t\t\tvar y = matrix.ty + graphics.__bounds.y;\r\n\t\t\t\t\r\n\t\t\t\tpattern = CairoPattern.createRadial (x, y, 0, x, y, (point.x - matrix.tx) / 2);\r\n\t\t\t\r\n\t\t\tcase LINEAR:\r\n\t\t\t\t\r\n\t\t\t\tif (matrix == null) matrix = new Matrix ();\r\n\t\t\t\t\r\n\t\t\t\tvar point1 = matrix.transformPoint (new Point (-819.2, 0));\r\n\t\t\t\tvar point2 = matrix.transformPoint (new Point (819.2, 0));\r\n\t\t\t\t\r\n\t\t\t\tpoint1.x += graphics.__bounds.x;\r\n\t\t\t\tpoint2.x += graphics.__bounds.x;\r\n\t\t\t\tpoint1.y += graphics.__bounds.y;\r\n\t\t\t\tpoint2.y += graphics.__bounds.y;\r\n\t\t\t\t\r\n\t\t\t\tpattern = CairoPattern.createLinear (point1.x, point1.y, point2.x, point2.y);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (i in 0...colors.length) {\r\n\t\t\t\r\n\t\t\tvar rgb = colors[i];\r\n\t\t\tvar alpha = alphas[i];\r\n\t\t\tvar r = ((rgb & 0xFF0000) >>> 16) / 0xFF;\r\n\t\t\tvar g = ((rgb & 0x00FF00) >>> 8) / 0xFF;\r\n\t\t\tvar b = (rgb & 0x0000FF) / 0xFF;\r\n\t\t\t\r\n\t\t\tvar ratio = ratios[i] / 0xFF;\r\n\t\t\tif (ratio < 0) ratio = 0;\r\n\t\t\tif (ratio > 1) ratio = 1;\r\n\t\t\t\r\n\t\t\tpattern.addColorStopRGBA (ratio, r, g, b, alpha);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar mat = pattern.matrix;\r\n\t\t\r\n\t\tmat.tx = bounds.x; \r\n\t\tmat.ty = bounds.y; \r\n\t\t\r\n\t\tpattern.matrix = mat;\r\n\t\t\r\n\t\treturn pattern;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function createImagePattern (bitmapFill:BitmapData, matrix:Matrix, bitmapRepeat:Bool):CairoPattern {\r\n\t\t\r\n\t\tvar pattern = CairoPattern.createForSurface (bitmapFill.getSurface ());\r\n\t\t\r\n\t\tif (bitmapRepeat) {\r\n\t\t\t\r\n\t\t\tpattern.extend = CairoExtend.REPEAT;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfillPatternMatrix = matrix;\r\n\t\t\r\n\t\treturn pattern;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function drawRoundRect (x:Float, y:Float, width:Float, height:Float, ellipseWidth:Float, ellipseHeight:Null<Float>):Void {\r\n\t\t\r\n\t\tif (ellipseHeight == null) ellipseHeight = ellipseWidth;\r\n\t\t\r\n\t\tellipseWidth *= 0.5;\r\n\t\tellipseHeight *= 0.5;\r\n\t\t\r\n\t\tif (ellipseWidth > width / 2) ellipseWidth = width / 2;\r\n\t\tif (ellipseHeight > height / 2) ellipseHeight = height / 2;\r\n\t\t\r\n\t\tvar xe = x + width,\r\n\t\tye = y + height,\r\n\t\tcx1 = -ellipseWidth + (ellipseWidth * SIN45),\r\n\t\tcx2 = -ellipseWidth + (ellipseWidth * TAN22),\r\n\t\tcy1 = -ellipseHeight + (ellipseHeight * SIN45),\r\n\t\tcy2 = -ellipseHeight + (ellipseHeight * TAN22);\r\n\t\t\r\n\t\tcairo.moveTo (xe, ye - ellipseHeight);\r\n\t\tquadraticCurveTo (xe, ye + cy2, xe + cx1, ye + cy1);\r\n\t\tquadraticCurveTo (xe + cx2, ye, xe - ellipseWidth, ye);\r\n\t\tcairo.lineTo (x + ellipseWidth, ye);\r\n\t\tquadraticCurveTo (x - cx2, ye, x - cx1, ye + cy1);\r\n\t\tquadraticCurveTo (x, ye + cy2, x, ye - ellipseHeight);\r\n\t\tcairo.lineTo (x, y + ellipseHeight);\r\n\t\tquadraticCurveTo (x, y - cy2, x - cx1, y - cy1);\r\n\t\tquadraticCurveTo (x - cx2, y, x + ellipseWidth, y);\r\n\t\tcairo.lineTo (xe - ellipseWidth, y);\r\n\t\tquadraticCurveTo (xe + cx2, y, xe + cx1, y - cy1);\r\n\t\tquadraticCurveTo (xe, y - cy2, xe, y + ellipseHeight);\r\n\t\tcairo.lineTo (xe, ye - ellipseHeight);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function endFill ():Void {\r\n\t\t\r\n\t\tcairo.newPath ();\r\n\t\tplayCommands (fillCommands, false);\r\n\t\tfillCommands.clear();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function endStroke ():Void {\r\n\t\t\r\n\t\tcairo.newPath ();\r\n\t\tplayCommands (strokeCommands, true);\r\n\t\tcairo.closePath ();\r\n\t\tstrokeCommands.clear();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function hitTest (graphics:Graphics, x:Float, y:Float):Bool {\r\n\t\t\r\n\t\t#if lime_cairo\r\n\t\tCairoGraphics.graphics = graphics;\r\n\t\tbounds = graphics.__bounds;\r\n\t\t\r\n\t\tif (graphics.__commands.length == 0 || bounds == null || bounds.width == 0 || bounds.height == 0 || !bounds.contains (x, y)) {\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\thitTesting = true;\r\n\t\t\t\r\n\t\t\tx -= bounds.x;\r\n\t\t\ty -= bounds.y;\r\n\t\t\t\r\n\t\t\tif (graphics.__cairo == null) {\r\n\t\t\t\t\r\n\t\t\t\tvar bitmap = new BitmapData (Math.floor (bounds.width), Math.floor (bounds.height), true);\r\n\t\t\t\tvar surface = bitmap.getSurface ();\r\n\t\t\t\tgraphics.__cairo = new Cairo (surface);\r\n\t\t\t\t//graphics.__bitmap = bitmap;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcairo = graphics.__cairo;\r\n\t\t\t\r\n\t\t\tfillCommands.clear ();\r\n\t\t\tstrokeCommands.clear ();\r\n\t\t\t\r\n\t\t\thasFill = false;\r\n\t\t\thasStroke = false;\r\n\t\t\t\r\n\t\t\tfillPattern = null;\r\n\t\t\tstrokePattern = null;\r\n\t\t\t\r\n\t\t\tcairo.newPath ();\r\n\t\t\t\r\n\t\t\tvar data = new DrawCommandReader (graphics.__commands);\r\n\t\t\t\r\n\t\t\tfor (type in graphics.__commands.types) {\r\n\t\t\t\t\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase CUBIC_CURVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readCubicCurveTo ();\r\n\t\t\t\t\t\tfillCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\tstrokeCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase CURVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readCurveTo ();\r\n\t\t\t\t\t\tfillCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\tstrokeCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineTo ();\r\n\t\t\t\t\t\tfillCommands.lineTo (c.x, c.y);\r\n\t\t\t\t\t\tstrokeCommands.lineTo (c.x, c.y);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase MOVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readMoveTo ();\r\n\t\t\t\t\t\tfillCommands.moveTo (c.x, c.y);\r\n\t\t\t\t\t\tstrokeCommands.moveTo (c.x, c.y);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_STYLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineStyle ();\r\n\t\t\t\t\t\tstrokeCommands.lineStyle (c.thickness, c.color, 1, c.pixelHinting, c.scaleMode, c.caps, c.joints, c.miterLimit);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_GRADIENT_STYLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineGradientStyle ();\r\n\t\t\t\t\t\tstrokeCommands.lineGradientStyle (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_BITMAP_STYLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineBitmapStyle ();\r\n\t\t\t\t\t\tstrokeCommands.lineBitmapStyle (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase END_FILL:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata.readEndFill ();\r\n\t\t\t\t\t\tendFill ();\r\n\t\t\t\t\t\tendStroke ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (hasFill && cairo.inFill (x, y)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdata.destroy ();\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (hasStroke && cairo.inStroke (x, y)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdata.destroy ();\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thasFill = false;\r\n\t\t\t\t\t\tbitmapFill = null;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase BEGIN_BITMAP_FILL, BEGIN_FILL, BEGIN_GRADIENT_FILL:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tendFill ();\r\n\t\t\t\t\t\tendStroke ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (hasFill && cairo.inFill (x, y)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdata.destroy ();\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (hasStroke && cairo.inStroke (x, y)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdata.destroy ();\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (type == BEGIN_BITMAP_FILL) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readBeginBitmapFill ();\r\n\t\t\t\t\t\t\tfillCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\t\t\t\tstrokeCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (type == BEGIN_GRADIENT_FILL) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readBeginGradientFill ();\r\n\t\t\t\t\t\t\tfillCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\t\tstrokeCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readBeginFill ();\r\n\t\t\t\t\t\t\tfillCommands.beginFill (c.color, 1);\r\n\t\t\t\t\t\t\tstrokeCommands.beginFill (c.color, 1);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_CIRCLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawCircle ();\r\n\t\t\t\t\t\tfillCommands.drawCircle (c.x, c.y, c.radius);\r\n\t\t\t\t\t\tstrokeCommands.drawCircle (c.x, c.y, c.radius);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_ELLIPSE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawEllipse ();\r\n\t\t\t\t\t\tfillCommands.drawEllipse (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\tstrokeCommands.drawEllipse (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_RECT:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawRect ();\r\n\t\t\t\t\t\tfillCommands.drawRect (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\tstrokeCommands.drawRect (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_ROUND_RECT:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawRoundRect ();\r\n\t\t\t\t\t\tfillCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\r\n\t\t\t\t\t\tstrokeCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata.skip (type);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (fillCommands.length > 0) {\r\n\t\t\t\t\r\n\t\t\t\tendFill ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (strokeCommands.length > 0) {\r\n\t\t\t\t\r\n\t\t\t\tendStroke ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdata.destroy ();\r\n\t\t\t\r\n\t\t\tif (hasFill && cairo.inFill (x, y)) {\r\n\t\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (hasStroke && cairo.inStroke (x, y)) {\r\n\t\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static inline function isCCW (x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float) {\r\n\t\t\r\n\t\treturn ((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1)) < 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function normalizeUVT (uvt:Vector<Float>, skipT:Bool = false):{ max:Float, uvt:Vector<Float> } {\r\n\t\t\r\n\t\tvar max:Float = Math.NEGATIVE_INFINITY;\r\n\t\tvar tmp = Math.NEGATIVE_INFINITY;\r\n\t\tvar len = uvt.length;\r\n\t\t\r\n\t\tfor (t in 1...len + 1) {\r\n\t\t\t\r\n\t\t\tif (skipT && t % 3 == 0) {\r\n\t\t\t\t\r\n\t\t\t\tcontinue;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttmp = uvt[t - 1];\r\n\t\t\t\r\n\t\t\tif (max < tmp) {\r\n\t\t\t\t\r\n\t\t\t\tmax = tmp;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar result = new Vector<Float> ();\r\n\t\t\r\n\t\tfor (t in 1...len + 1) {\r\n\t\t\t\r\n\t\t\tif (skipT && t % 3 == 0) {\r\n\t\t\t\t\r\n\t\t\t\tcontinue;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresult.push ((uvt[t - 1] / max));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn { max: max, uvt: result };\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function playCommands (commands:DrawCommandBuffer, stroke:Bool = false):Void {\r\n\t\t\r\n\t\tif (commands.length == 0) return;\r\n\t\t\r\n\t\tbounds = graphics.__bounds;\r\n\t\t\r\n\t\tvar offsetX = bounds.x;\r\n\t\tvar offsetY = bounds.y;\r\n\t\t\r\n\t\tvar positionX = 0.0;\r\n\t\tvar positionY = 0.0;\r\n\t\t\r\n\t\tvar closeGap = false;\r\n\t\tvar startX = 0.0;\r\n\t\tvar startY = 0.0;\r\n\t\t\r\n\t\tcairo.fillRule = EVEN_ODD;\r\n\t\tcairo.antialias = SUBPIXEL;\r\n\t\t\r\n\t\tvar hasPath:Bool = false;\r\n\t\t\r\n\t\tvar data = new DrawCommandReader (commands);\r\n\t\t\r\n\t\tfor (type in commands.types) {\r\n\t\t\t\r\n\t\t\tswitch (type) {\r\n\t\t\t\t\r\n\t\t\t\tcase CUBIC_CURVE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readCubicCurveTo ();\r\n\t\t\t\t\thasPath = true;\r\n\t\t\t\t\tcairo.curveTo (c.controlX1 - offsetX, c.controlY1 - offsetY, c.controlX2 - offsetX, c.controlY2 - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\r\n\t\t\t\t\r\n\t\t\t\tcase CURVE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readCurveTo ();\r\n\t\t\t\t\thasPath = true;\r\n\t\t\t\t\tquadraticCurveTo (c.controlX - offsetX, c.controlY - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\r\n\t\t\t\t\r\n\t\t\t\tcase DRAW_CIRCLE:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readDrawCircle ();\r\n\t\t\t\t\thasPath = true;\r\n\t\t\t\t\tcairo.moveTo (c.x - offsetX + c.radius, c.y - offsetY);\r\n\t\t\t\t\tcairo.arc (c.x - offsetX, c.y - offsetY, c.radius, 0, Math.PI * 2);\r\n\t\t\t\t\r\n\t\t\t\tcase DRAW_RECT:\r\n\t\t\t\t\r\n\t\t\t\t\tvar c = data.readDrawRect ();\r\n\t\t\t\t\thasPath = true;\r\n\t\t\t\t\tcairo.rectangle (c.x - offsetX, c.y - offsetY, c.width, c.height);\r\n\t\t\t\t\r\n\t\t\t\tcase DRAW_ELLIPSE:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readDrawEllipse ();\r\n\t\t\t\t\thasPath = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar x = c.x;\r\n\t\t\t\t\tvar y = c.y;\r\n\t\t\t\t\tvar width = c.width;\r\n\t\t\t\t\tvar height = c.height;\r\n\t\t\t\t\t\r\n\t\t\t\t\tx -= offsetX;\r\n\t\t\t\t\ty -= offsetY;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar kappa = .5522848,\r\n\t\t\t\t\t\tox = (width / 2) * kappa, // control point offset horizontal\r\n\t\t\t\t\t\toy = (height / 2) * kappa, // control point offset vertical\r\n\t\t\t\t\t\txe = x + width,           // x-end\r\n\t\t\t\t\t\tye = y + height,           // y-end\r\n\t\t\t\t\t\txm = x + width / 2,       // x-middle\r\n\t\t\t\t\t\tym = y + height / 2;       // y-middle\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.moveTo (x, ym);\r\n\t\t\t\t\tcairo.curveTo (x, ym - oy, xm - ox, y, xm, y);\r\n\t\t\t\t\tcairo.curveTo (xm + ox, y, xe, ym - oy, xe, ym);\r\n\t\t\t\t\tcairo.curveTo (xe, ym + oy, xm + ox, ye, xm, ye);\r\n\t\t\t\t\tcairo.curveTo (xm - ox, ye, x, ym + oy, x, ym);\r\n\t\t\t\t\r\n\t\t\t\tcase DRAW_ROUND_RECT:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readDrawRoundRect ();\r\n\t\t\t\t\thasPath = true;\r\n\t\t\t\t\tdrawRoundRect (c.x - offsetX, c.y - offsetY, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\r\n\t\t\t\t\r\n\t\t\t\tcase LINE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readLineTo ();\r\n\t\t\t\t\thasPath = true;\r\n\t\t\t\t\tcairo.lineTo (c.x - offsetX, c.y - offsetY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tpositionX = c.x;\r\n\t\t\t\t\tpositionY = c.y;\r\n\t\t\t\t\r\n\t\t\t\tcase MOVE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readMoveTo ();\r\n\t\t\t\t\tcairo.moveTo (c.x - offsetX, c.y - offsetY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tpositionX = c.x;\r\n\t\t\t\t\tpositionY = c.y;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcloseGap = true;\r\n\t\t\t\t\tstartX = c.x;\r\n\t\t\t\t\tstartY = c.y;\r\n\t\t\t\t\r\n\t\t\t\tcase LINE_STYLE:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readLineStyle ();\r\n\t\t\t\t\tif (stroke && hasStroke) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tclosePath ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.moveTo (positionX - offsetX, positionY - offsetY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (c.thickness == null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thasStroke = false;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thasStroke = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcairo.lineWidth = (c.thickness > 0 ? c.thickness : 1);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (c.joints == null) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcairo.lineJoin = ROUND;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcairo.lineJoin = switch (c.joints) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcase MITER: MITER;\r\n\t\t\t\t\t\t\t\tcase BEVEL: BEVEL;\r\n\t\t\t\t\t\t\t\tdefault: ROUND;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (c.caps == null) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcairo.lineCap = ROUND;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcairo.lineCap = switch (c.caps) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcase NONE: BUTT;\r\n\t\t\t\t\t\t\t\tcase SQUARE: SQUARE;\r\n\t\t\t\t\t\t\t\tdefault: ROUND;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcairo.miterLimit = c.miterLimit;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar r = ((c.color & 0xFF0000) >>> 16) / 0xFF;\r\n\t\t\t\t\t\tvar g = ((c.color & 0x00FF00) >>> 8) / 0xFF;\r\n\t\t\t\t\t\tvar b = (c.color & 0x0000FF) / 0xFF;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (c.alpha == 1) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tstrokePattern = CairoPattern.createRGB (r, g, b);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tstrokePattern = CairoPattern.createRGBA (r, g, b, c.alpha);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcase LINE_GRADIENT_STYLE:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readLineGradientStyle ();\r\n\t\t\t\t\tif (stroke && hasStroke) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tclosePath ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.moveTo (positionX - offsetX, positionY - offsetY);\r\n\t\t\t\t\tstrokePattern = createGradientPattern (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\r\n\t\t\t\t\thasStroke = true;\r\n\t\t\t\t\r\n\t\t\t\tcase LINE_BITMAP_STYLE:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readLineBitmapStyle ();\r\n\t\t\t\t\tif (stroke && hasStroke) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tclosePath ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.moveTo (positionX - offsetX, positionY - offsetY);\r\n\t\t\t\t\tstrokePattern = createImagePattern (c.bitmap, c.matrix, c.repeat);\r\n\t\t\t\t\t\r\n\t\t\t\t\thasStroke = true;\r\n\t\t\t\t\r\n\t\t\t\tcase BEGIN_BITMAP_FILL:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readBeginBitmapFill ();\r\n\t\t\t\t\tfillPattern = createImagePattern (c.bitmap, c.matrix, c.repeat);\r\n\t\t\t\t\t\r\n\t\t\t\t\tbitmapFill = c.bitmap;\r\n\t\t\t\t\tbitmapRepeat = c.repeat;\r\n\t\t\t\t\t\r\n\t\t\t\t\thasFill = true;\r\n\t\t\t\t\r\n\t\t\t\tcase BEGIN_FILL:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readBeginFill ();\r\n\t\t\t\t\tif (c.alpha < 0.005) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thasFill = false;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (fillPattern != null) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfillPatternMatrix = null;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfillPattern = CairoPattern.createRGBA (((c.color & 0xFF0000) >>> 16) / 0xFF, ((c.color & 0x00FF00) >>> 8) / 0xFF, (c.color & 0x0000FF) / 0xFF, c.alpha);\r\n\t\t\t\t\t\thasFill = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbitmapFill = null;\r\n\t\t\t\t\r\n\t\t\t\tcase BEGIN_GRADIENT_FILL:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readBeginGradientFill ();\r\n\t\t\t\t\tif (fillPattern != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfillPatternMatrix = null;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfillPattern = createGradientPattern (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\r\n\t\t\t\t\thasFill = true;\r\n\t\t\t\t\tbitmapFill = null;\r\n\t\t\t\t\r\n\t\t\t\tcase DRAW_TRIANGLES:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readDrawTriangles ();\r\n\t\t\t\t\tvar v = c.vertices;\r\n\t\t\t\t\tvar ind = c.indices;\r\n\t\t\t\t\tvar uvt:Vector<Float> = c.uvtData;\r\n\t\t\t\t\tvar colorFill = bitmapFill == null;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (colorFill && uvt != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar width = 0;\r\n\t\t\t\t\tvar height = 0;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!colorFill) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//TODO move this to Graphics?\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (uvt == null) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tuvt = new Vector<Float> ();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (i in 0...(Std.int (v.length / 2))) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tuvt.push (v[i * 2] / bitmapFill.width);\r\n\t\t\t\t\t\t\t\tuvt.push (v[i * 2 + 1] / bitmapFill.height);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar skipT = c.uvtData.length != v.length;\r\n\t\t\t\t\t\tvar normalizedUVT = normalizeUVT (uvt, skipT);\r\n\t\t\t\t\t\tvar maxUVT = normalizedUVT.max;\r\n\t\t\t\t\t\tuvt = normalizedUVT.uvt;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (maxUVT > 1) {\r\n\t\t\t\t\t\t\twidth = Std.int (bounds.width);\r\n\t\t\t\t\t\t\theight = Std.int (bounds.height);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\twidth = bitmapFill.width;\r\n\t\t\t\t\t\t\theight = bitmapFill.height;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar i = 0;\r\n\t\t\t\t\tvar l = ind.length;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar a_:Int, b_:Int, c_:Int;\r\n\t\t\t\t\tvar iax:Int, iay:Int, ibx:Int, iby:Int, icx:Int, icy:Int;\r\n\t\t\t\t\tvar x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float;\r\n\t\t\t\t\tvar uvx1:Float, uvy1:Float, uvx2:Float, uvy2:Float, uvx3:Float, uvy3:Float;\r\n\t\t\t\t\tvar denom:Float;\r\n\t\t\t\t\tvar t1:Float, t2:Float, t3:Float, t4:Float;\r\n\t\t\t\t\tvar dx:Float, dy:Float;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.antialias = NONE;\r\n\t\t\t\t\t\r\n\t\t\t\t\twhile (i < l) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ta_ = i;\r\n\t\t\t\t\t\tb_ = i + 1;\r\n\t\t\t\t\t\tc_ = i + 2;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tiax = ind[a_] * 2;\r\n\t\t\t\t\t\tiay = ind[a_] * 2 + 1;\r\n\t\t\t\t\t\tibx = ind[b_] * 2;\r\n\t\t\t\t\t\tiby = ind[b_] * 2 + 1;\r\n\t\t\t\t\t\ticx = ind[c_] * 2;\r\n\t\t\t\t\t\ticy = ind[c_] * 2 + 1;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tx1 = v[iax];\r\n\t\t\t\t\t\ty1 = v[iay];\r\n\t\t\t\t\t\tx2 = v[ibx];\r\n\t\t\t\t\t\ty2 = v[iby];\r\n\t\t\t\t\t\tx3 = v[icx];\r\n\t\t\t\t\t\ty3 = v[icy];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tswitch (c.culling) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcase POSITIVE:\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (!isCCW (x1, y1, x2, y2, x3, y3)) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\ti += 3;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcase NEGATIVE:\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (isCCW (x1, y1, x2, y2, x3, y3)) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\ti += 3;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (colorFill) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcairo.newPath ();\r\n\t\t\t\t\t\t\tcairo.moveTo (x1, y1);\r\n\t\t\t\t\t\t\tcairo.lineTo (x2, y2);\r\n\t\t\t\t\t\t\tcairo.lineTo (x3, y3);\r\n\t\t\t\t\t\t\tcairo.closePath ();\r\n\t\t\t\t\t\t\tif (!hitTesting) cairo.fillPreserve ();\r\n\t\t\t\t\t\t\ti += 3;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcairo.identityMatrix();\r\n\t\t\t\t\t\t//cairo.resetClip();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcairo.newPath ();\r\n\t\t\t\t\t\tcairo.moveTo (x1, y1);\r\n\t\t\t\t\t\tcairo.lineTo (x2, y2);\r\n\t\t\t\t\t\tcairo.lineTo (x3, y3);\r\n\t\t\t\t\t\tcairo.closePath ();\r\n\t\t\t\t\t\t//cairo.clip ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tuvx1 = uvt[iax] * width;\r\n\t\t\t\t\t\tuvx2 = uvt[ibx] * width;\r\n\t\t\t\t\t\tuvx3 = uvt[icx] * width;\r\n\t\t\t\t\t\tuvy1 = uvt[iay] * height;\r\n\t\t\t\t\t\tuvy2 = uvt[iby] * height;\r\n\t\t\t\t\t\tuvy3 = uvt[icy] * height;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdenom = uvx1 * (uvy3 - uvy2) - uvx2 * uvy3 + uvx3 * uvy2 + (uvx2 - uvx3) * uvy1;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (denom == 0) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ti += 3;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tt1 = - (uvy1 * (x3 - x2) - uvy2 * x3 + uvy3 * x2 + (uvy2 - uvy3) * x1) / denom;\r\n\t\t\t\t\t\tt2 = (uvy2 * y3 + uvy1 * (y2 - y3) - uvy3 * y2 + (uvy3 - uvy2) * y1) / denom;\r\n\t\t\t\t\t\tt3 = (uvx1 * (x3 - x2) - uvx2 * x3 + uvx3 * x2 + (uvx2 - uvx3) * x1) / denom;\r\n\t\t\t\t\t\tt4 = - (uvx2 * y3 + uvx1 * (y2 - y3) - uvx3 * y2 + (uvx3 - uvx2) * y1) / denom;\r\n\t\t\t\t\t\tdx = (uvx1 * (uvy3 * x2 - uvy2 * x3) + uvy1 * (uvx2 * x3 - uvx3 * x2) + (uvx3 * uvy2 - uvx2 * uvy3) * x1) / denom;\r\n\t\t\t\t\t\tdy = (uvx1 * (uvy3 * y2 - uvy2 * y3) + uvy1 * (uvx2 * y3 - uvx3 * y2) + (uvx3 * uvy2 - uvx2 * uvy3) * y1) / denom;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar matrix = new Matrix3 (t1, t2, t3, t4, dx, dy);\r\n\t\t\t\t\t\tcairo.matrix = matrix;\r\n\t\t\t\t\t\tcairo.source = fillPattern;\r\n\t\t\t\t\t\tif (!hitTesting) cairo.fill ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ti += 3;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcase DRAW_TILES:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readDrawTiles ();\r\n\t\t\t\t\tvar useScale = (c.flags & Graphics.TILE_SCALE) > 0;\r\n\t\t\t\t\tvar useRotation = (c.flags & Graphics.TILE_ROTATION) > 0;\r\n\t\t\t\t\tvar offsetX = bounds.x;\r\n\t\t\t\t\tvar offsetY = bounds.y;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar useTransform = (c.flags & Graphics.TILE_TRANS_2x2) > 0;\r\n\t\t\t\t\tvar useRGB = (c.flags & Graphics.TILE_RGB) > 0;\r\n\t\t\t\t\tvar useAlpha = (c.flags & Graphics.TILE_ALPHA) > 0;\r\n\t\t\t\t\tvar useRect = (c.flags & Graphics.TILE_RECT) > 0;\r\n\t\t\t\t\tvar useOrigin = (c.flags & Graphics.TILE_ORIGIN) > 0;\r\n\t\t\t\t\tvar useBlendAdd = (c.flags & Graphics.TILE_BLEND_ADD) > 0;\r\n\t\t\t\t\tvar useBlendOverlay = (c.flags & Graphics.TILE_BLEND_OVERLAY) > 0;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (useTransform) { useScale = false; useRotation = false; }\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar scaleIndex = 0;\r\n\t\t\t\t\tvar rotationIndex = 0;\r\n\t\t\t\t\tvar rgbIndex = 0;\r\n\t\t\t\t\tvar alphaIndex = 0;\r\n\t\t\t\t\tvar transformIndex = 0;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar numValues = 3;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (useRect) { numValues = useOrigin ? 8 : 6; }\r\n\t\t\t\t\tif (useScale) { scaleIndex = numValues; numValues ++; }\r\n\t\t\t\t\tif (useRotation) { rotationIndex = numValues; numValues ++; }\r\n\t\t\t\t\tif (useTransform) { transformIndex = numValues; numValues += 4; }\r\n\t\t\t\t\tif (useRGB) { rgbIndex = numValues; numValues += 3; }\r\n\t\t\t\t\tif (useAlpha) { alphaIndex = numValues; numValues ++; }\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar totalCount = c.tileData.length;\r\n\t\t\t\t\tif (c.count >= 0 && totalCount > c.count) totalCount = c.count;\r\n\t\t\t\t\tvar itemCount = Std.int (totalCount / numValues);\r\n\t\t\t\t\tvar index = 0;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar rect = null;\r\n\t\t\t\t\tvar center = null;\r\n\t\t\t\t\tvar previousTileID = -1;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar surface:Dynamic;\r\n\t\t\t\t\tc.sheet.__bitmap.__sync ();\r\n\t\t\t\t\tsurface = c.sheet.__bitmap.getSurface ();\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.save ();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (useBlendAdd) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcairo.operator = ADD;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (useBlendOverlay) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcairo.operator = OVERLAY;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\twhile (index < totalCount) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if neko\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar f:Float = c.tileData[index + 2];\r\n\t\t\t\t\t\tvar i = 0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (f != null) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ti = Std.int (f);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#else\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar i = Std.int (c.tileData[index + 2]);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#end\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar tileID = (!useRect) ? i : -1;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!useRect && tileID != previousTileID) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\trect = c.sheet.__tileRects[tileID];\r\n\t\t\t\t\t\t\tcenter = c.sheet.__centerPoints[tileID];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tpreviousTileID = tileID;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (useRect) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\trect = c.sheet.__rectTile;\r\n\t\t\t\t\t\t\trect.setTo (c.tileData[index + 2], c.tileData[index + 3], c.tileData[index + 4], c.tileData[index + 5]);\r\n\t\t\t\t\t\t\tcenter = c.sheet.__point;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (useOrigin) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcenter.setTo (c.tileData[index + 6], c.tileData[index + 7]);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcenter.setTo (0, 0);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (rect != null && rect.width > 0 && rect.height > 0 && center != null) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// TODO: Handle rect, center, and offset X/Y properly based on matrix transform\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//cairo.save ();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcairo.identityMatrix ();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (useTransform) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar matrix = new Matrix3 (c.tileData[index + transformIndex], c.tileData[index + transformIndex + 1], c.tileData[index + transformIndex + 2], c.tileData[index + transformIndex + 3], 0, 0);\r\n\t\t\t\t\t\t\t\tcairo.matrix = matrix;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcairo.translate (c.tileData[index] - offsetX, c.tileData[index + 1] - offsetY);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (useRotation) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcairo.rotate (c.tileData[index + rotationIndex]);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (useScale) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar scale = c.tileData[index + scaleIndex];\r\n\t\t\t\t\t\t\t\tcairo.scale (scale, scale);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcairo.setSourceSurface (surface, 0, 0);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (useAlpha) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (!hitTesting) cairo.paintWithAlpha (c.tileData[index + alphaIndex]);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (!hitTesting) cairo.paint ();\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//cairo.restore ();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tindex += numValues;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (useBlendAdd || useBlendOverlay) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcairo.operator = OVER;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.restore ();\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata.skip (type);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tdata.destroy ();\r\n\t\t\r\n\t\tif (hasPath) {\r\n\t\t\t\r\n\t\t\tif (stroke && hasStroke) {\r\n\t\t\t\t\r\n\t\t\t\tif (hasFill && closeGap) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.lineTo (startX - offsetX, startY - offsetY);\r\n\t\t\t\t\t\r\n\t\t\t\t} else if (closeGap && positionX == startX && positionY == startY) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.closePath ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcairo.source = strokePattern;\r\n\t\t\t\tif (!hitTesting) cairo.strokePreserve ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!stroke && hasFill) {\r\n\t\t\t\t\r\n\t\t\t\tcairo.translate (-bounds.x, -bounds.y);\r\n\t\t\t\t\r\n\t\t\t\tif (fillPatternMatrix != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar matrix = fillPatternMatrix.clone ();\r\n\t\t\t\t\tmatrix.invert ();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (pendingMatrix != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tmatrix.concat (pendingMatrix);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfillPattern.matrix = matrix.__toMatrix3 ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcairo.source = fillPattern;\r\n\t\t\t\t\r\n\t\t\t\tif (pendingMatrix != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.transform (pendingMatrix.__toMatrix3 ());\r\n\t\t\t\t\tif (!hitTesting) cairo.fillPreserve ();\r\n\t\t\t\t\tcairo.transform (inversePendingMatrix.__toMatrix3 ());\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!hitTesting) cairo.fillPreserve ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcairo.translate (bounds.x, bounds.y);\r\n\t\t\t\tcairo.closePath ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function quadraticCurveTo (cx:Float, cy:Float, x:Float, y:Float):Void {\r\n\t\t\r\n\t\tvar current = null;\r\n\t\t\r\n\t\tif (!cairo.hasCurrentPoint) {\r\n\t\t\t\r\n\t\t\tcairo.moveTo (cx, cy);\r\n\t\t\tcurrent = new Vector2 (cx, cy);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tcurrent = cairo.currentPoint;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar cx1 = current.x + ((2 / 3) * (cx - current.x));\r\n\t\tvar cy1 = current.y + ((2 / 3) * (cy - current.y));\r\n\t\tvar cx2 = x + ((2 / 3) * (cx - x));\r\n\t\tvar cy2 = y + ((2 / 3) * (cy - y));\r\n\t\t\r\n\t\tcairo.curveTo (cx1, cy1, cx2, cy2, x, y);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function render (graphics:Graphics, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if lime_cairo\r\n\t\tCairoGraphics.graphics = graphics;\r\n\t\t\r\n\t\tif (!graphics.__dirty) return;\r\n\t\t\r\n\t\tbounds = graphics.__bounds;\r\n\t\t\r\n\t\tif (!graphics.__visible || graphics.__commands.length == 0 || bounds == null || bounds.width < 1 || bounds.height < 1) {\r\n\t\t\t\r\n\t\t\tgraphics.__cairo = null;\r\n\t\t\tgraphics.__bitmap = null;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\thitTesting = false;\r\n\t\t\t\r\n\t\t\tif (graphics.__cairo != null) {\r\n\t\t\t\t\r\n\t\t\t\tvar surface:CairoImageSurface = cast graphics.__cairo.target;\r\n\t\t\t\t\r\n\t\t\t\tif (bounds.width != surface.width || bounds.height != surface.height) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tgraphics.__cairo = null;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (graphics.__cairo == null || graphics.__bitmap == null) {\r\n\t\t\t\t\r\n\t\t\t\tvar bitmap = new BitmapData (Math.floor (bounds.width), Math.floor (bounds.height), true, 0);\r\n\t\t\t\tvar surface = bitmap.getSurface ();\r\n\t\t\t\tgraphics.__cairo = new Cairo (surface);\r\n\t\t\t\tgraphics.__bitmap = bitmap;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcairo = graphics.__cairo;\r\n\t\t\t\r\n\t\t\tcairo.operator = CLEAR;\r\n\t\t\tcairo.paint ();\r\n\t\t\tcairo.operator = OVER;\r\n\t\t\t\r\n\t\t\tfillCommands.clear ();\r\n\t\t\tstrokeCommands.clear ();\r\n\t\t\t\r\n\t\t\thasFill = false;\r\n\t\t\thasStroke = false;\r\n\t\t\t\r\n\t\t\tfillPattern = null;\r\n\t\t\tstrokePattern = null;\r\n\t\t\t\r\n\t\t\tvar data = new DrawCommandReader (graphics.__commands);\r\n\t\t\t\r\n\t\t\tfor (type in graphics.__commands.types) {\r\n\t\t\t\t\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase CUBIC_CURVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readCubicCurveTo ();\r\n\t\t\t\t\t\tfillCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\tstrokeCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase CURVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readCurveTo ();\r\n\t\t\t\t\t\tfillCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\tstrokeCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineTo ();\r\n\t\t\t\t\t\tfillCommands.lineTo (c.x, c.y);\r\n\t\t\t\t\t\tstrokeCommands.lineTo (c.x, c.y);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase MOVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readMoveTo ();\r\n\t\t\t\t\t\tfillCommands.moveTo (c.x, c.y);\r\n\t\t\t\t\t\tstrokeCommands.moveTo (c.x, c.y);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase END_FILL:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata.readEndFill ();\r\n\t\t\t\t\t\tendFill ();\r\n\t\t\t\t\t\tendStroke ();\r\n\t\t\t\t\t\thasFill = false;\r\n\t\t\t\t\t\tbitmapFill = null;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_GRADIENT_STYLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineGradientStyle ();\r\n\t\t\t\t\t\tstrokeCommands.lineGradientStyle (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_BITMAP_STYLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineBitmapStyle ();\r\n\t\t\t\t\t\tstrokeCommands.lineBitmapStyle (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_STYLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineStyle ();\r\n\t\t\t\t\t\tstrokeCommands.lineStyle (c.thickness, c.color, c.alpha, c.pixelHinting, c.scaleMode, c.caps, c.joints, c.miterLimit);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase BEGIN_BITMAP_FILL, BEGIN_FILL, BEGIN_GRADIENT_FILL:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tendFill ();\r\n\t\t\t\t\t\tendStroke ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (type == BEGIN_BITMAP_FILL) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readBeginBitmapFill ();\r\n\t\t\t\t\t\t\tfillCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\t\t\t\tstrokeCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (type == BEGIN_GRADIENT_FILL) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readBeginGradientFill ();\r\n\t\t\t\t\t\t\tfillCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\t\tstrokeCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readBeginFill ();\r\n\t\t\t\t\t\t\tfillCommands.beginFill (c.color, c.alpha);\r\n\t\t\t\t\t\t\tstrokeCommands.beginFill (c.color, c.alpha);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_CIRCLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawCircle ();\r\n\t\t\t\t\t\tfillCommands.drawCircle (c.x, c.y, c.radius);\r\n\t\t\t\t\t\tstrokeCommands.drawCircle (c.x, c.y, c.radius);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_ELLIPSE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawEllipse ();\r\n\t\t\t\t\t\tfillCommands.drawEllipse (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\tstrokeCommands.drawEllipse (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_RECT:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawRect ();\r\n\t\t\t\t\t\tfillCommands.drawRect (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\tstrokeCommands.drawRect (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_ROUND_RECT:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawRoundRect ();\r\n\t\t\t\t\t\tfillCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\r\n\t\t\t\t\t\tstrokeCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_TILES:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawTiles ();\r\n\t\t\t\t\t\tfillCommands.drawTiles (c.sheet, c.tileData, c.smooth, c.flags, c.count);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_TRIANGLES:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawTriangles ();\r\n\t\t\t\t\t\tfillCommands.drawTriangles (c.vertices, c.indices, c.uvtData, c.culling);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata.skip (type);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (fillCommands.length > 0) {\r\n\t\t\t\t\r\n\t\t\t\tendFill ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (strokeCommands.length > 0) {\r\n\t\t\t\t\r\n\t\t\t\tendStroke ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdata.destroy ();\r\n\t\t\t\r\n\t\t\tgraphics.__bitmap.image.dirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tgraphics.__dirty = false;\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function renderMask (graphics:Graphics, renderSession:RenderSession) {\r\n\t\t\r\n\t\tif (graphics.__commands.length != 0) {\r\n\t\t\t\r\n\t\t\tvar cairo = renderSession.cairo;\r\n\t\t\t\r\n\t\t\tvar positionX = 0.0;\r\n\t\t\tvar positionY = 0.0;\r\n\t\t\t\r\n\t\t\tvar offsetX = 0;\r\n\t\t\tvar offsetY = 0;\r\n\t\t\t\r\n\t\t\tvar data = new DrawCommandReader(graphics.__commands);\r\n\t\t\t\r\n\t\t\tfor (type in graphics.__commands.types) {\r\n\t\t\t\t\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase CUBIC_CURVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readCubicCurveTo ();\r\n\t\t\t\t\t\tcairo.curveTo (c.controlX1 - offsetX, c.controlY1 - offsetY, c.controlX2 - offsetX, c.controlY2 - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\r\n\t\t\t\t\t\tpositionX = c.anchorX;\r\n\t\t\t\t\t\tpositionY = c.anchorX;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase CURVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readCurveTo ();\r\n\t\t\t\t\t\tquadraticCurveTo (c.controlX - offsetX, c.controlY - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\r\n\t\t\t\t\t\tpositionX = c.anchorX;\r\n\t\t\t\t\t\tpositionY = c.anchorY;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_CIRCLE:\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawCircle ();\r\n\t\t\t\t\t\tcairo.arc (c.x - offsetX, c.y - offsetY, c.radius, 0, Math.PI * 2);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_ELLIPSE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawEllipse ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar x = c.x;\r\n\t\t\t\t\t\tvar y = c.y;\r\n\t\t\t\t\t\tvar width = c.width;\r\n\t\t\t\t\t\tvar height = c.height;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tx -= offsetX;\r\n\t\t\t\t\t\ty -= offsetY;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar kappa = .5522848,\r\n\t\t\t\t\t\t\tox = (width / 2) * kappa, // control point offset horizontal\r\n\t\t\t\t\t\t\toy = (height / 2) * kappa, // control point offset vertical\r\n\t\t\t\t\t\t\txe = x + width,           // x-end\r\n\t\t\t\t\t\t\tye = y + height,           // y-end\r\n\t\t\t\t\t\t\txm = x + width / 2,       // x-middle\r\n\t\t\t\t\t\t\tym = y + height / 2;       // y-middle\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//closePath (false);\r\n\t\t\t\t\t\t//beginPath ();\r\n\t\t\t\t\t\tcairo.moveTo (x, ym);\r\n\t\t\t\t\t\tcairo.curveTo (x, ym - oy, xm - ox, y, xm, y);\r\n\t\t\t\t\t\tcairo.curveTo (xm + ox, y, xe, ym - oy, xe, ym);\r\n\t\t\t\t\t\tcairo.curveTo (xe, ym + oy, xm + ox, ye, xm, ye);\r\n\t\t\t\t\t\tcairo.curveTo (xm - ox, ye, x, ym + oy, x, ym);\r\n\t\t\t\t\t\t//closePath (false);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_RECT:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawRect ();\r\n\t\t\t\t\t\tcairo.rectangle (c.x - offsetX, c.y - offsetY, c.width, c.height);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_ROUND_RECT:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawRoundRect ();\r\n\t\t\t\t\t\tdrawRoundRect (c.x - offsetX, c.y - offsetY, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineTo ();\r\n\t\t\t\t\t\tcairo.lineTo (c.x - offsetX, c.y - offsetY);\r\n\t\t\t\t\t\tpositionX = c.x;\r\n\t\t\t\t\t\tpositionY = c.y;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tcase MOVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readMoveTo ();\r\n\t\t\t\t\t\tcairo.moveTo (c.x - offsetX, c.y - offsetY);\r\n\t\t\t\t\t\tpositionX = c.x;\r\n\t\t\t\t\t\tpositionY = c.y;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata.skip (type);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdata.destroy();\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.cairo;\r\n\r\n\r\nimport lime.math.Matrix3;\r\nimport openfl._internal.renderer.AbstractMaskManager;\r\nimport openfl.display.*;\r\nimport openfl.geom.*;\r\n\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.geom.Matrix)\r\n@:keep\r\n\r\n\r\nclass CairoMaskManager extends AbstractMaskManager {\r\n\t\r\n\t\r\n\tpublic function new (renderSession:RenderSession) {\r\n\t\t\r\n\t\tsuper (renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function pushMask (mask:DisplayObject):Void {\r\n\t\t\r\n\t\tvar cairo = renderSession.cairo;\r\n\t\t\r\n\t\tcairo.save ();\r\n\t\t\r\n\t\t//var cacheAlpha = mask.__worldAlpha;\r\n\t\tvar transform = mask.__getWorldTransform ();\r\n\t\t\r\n\t\tcairo.matrix = transform.__toMatrix3 ();\r\n\t\t\r\n\t\tcairo.newPath ();\r\n\t\tmask.__renderCairoMask (renderSession);\r\n\t\tcairo.clip ();\r\n\t\t\r\n\t\t//mask.worldAlpha = cacheAlpha;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function pushRect (rect:Rectangle, transform:Matrix):Void {\r\n\t\t\r\n\t\tvar cairo = renderSession.cairo;\r\n\t\tcairo.save ();\r\n\t\t\r\n\t\tcairo.matrix = new Matrix3 (transform.a, transform.c, transform.b, transform.d, transform.tx, transform.ty);\r\n\t\t\r\n\t\tcairo.newPath ();\r\n\t\tcairo.rectangle (rect.x, rect.y, rect.width, rect.height);\r\n\t\tcairo.clip ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function popMask ():Void {\r\n\t\t\r\n\t\trenderSession.cairo.restore ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function popRect ():Void {\r\n\t\t\r\n\t\trenderSession.cairo.restore ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.cairo;\r\n\r\n\r\nimport lime.graphics.cairo.Cairo;\r\nimport openfl._internal.renderer.AbstractRenderer;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.DisplayObject;\r\nimport openfl.display.Stage;\r\n\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.display.Stage)\r\n@:allow(openfl.display.Stage)\r\n\r\n\r\nclass CairoRenderer extends AbstractRenderer {\r\n\t\r\n\t\r\n\tprivate var cairo:Cairo;\r\n\t\r\n\t\r\n\tpublic function new (width:Int, height:Int, cairo:Cairo) {\r\n\t\t\r\n\t\tsuper (width, height);\r\n\t\t\r\n\t\tthis.cairo = cairo;\r\n\t\t\r\n\t\trenderSession = new RenderSession ();\r\n\t\trenderSession.cairo = cairo;\r\n\t\trenderSession.roundPixels = true;\r\n\t\trenderSession.renderer = this;\r\n\t\trenderSession.maskManager = new CairoMaskManager (renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function render (stage:Stage):Void {\r\n\t\t\r\n\t\tcairo.identityMatrix ();\r\n\t\t\r\n\t\tif (stage.__clearBeforeRender) {\r\n\t\t\t\r\n\t\t\tcairo.setSourceRGB (stage.__colorSplit[0], stage.__colorSplit[1], stage.__colorSplit[2]);\r\n\t\t\tcairo.paint ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tstage.__renderCairo (renderSession);\r\n\t\t\r\n\t}\r\n\r\n\r\n\tpublic function renderDisplayObject (object:DisplayObject):Void {\r\n\r\n\t\tcairo.identityMatrix ();\r\n\t\tobject.__renderCairo (renderSession);\r\n\r\n\t}\r\n\t\r\n\t\r\n}\r\n","package openfl._internal.renderer.cairo;\r\n\r\n\r\nimport openfl.display.DisplayObject;\r\nimport openfl.text.TextField;\r\n\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.geom.Matrix)\r\n\r\n\r\nclass CairoShape {\r\n\t\r\n\t\r\n\tpublic static function render (shape:DisplayObject, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if lime_cairo\r\n\t\tif (!shape.__renderable || shape.__worldAlpha <= 0) return;\r\n\t\t\r\n\t\tvar graphics = shape.__graphics;\r\n\t\t\r\n\t\tif (graphics != null) {\r\n\t\t\t\r\n\t\t\tCairoGraphics.render (graphics, renderSession);\r\n\t\t\tvar bounds = graphics.__bounds;\r\n\t\t\t\r\n\t\t\tif (graphics.__cairo != null && graphics.__visible /*&& graphics.__commands.length > 0*/ && bounds != null && bounds.width >= 1 && bounds.height >= 1) {\r\n\t\t\t\t\r\n\t\t\t\tif (shape.__mask != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\trenderSession.maskManager.pushMask (shape.__mask);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar cairo = renderSession.cairo;\r\n\t\t\t\tvar scrollRect = shape.scrollRect;\r\n\t\t\t\tvar transform = shape.__renderTransform;\r\n\t\t\t\t\r\n\t\t\t\tif (renderSession.roundPixels) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar matrix = transform.__toMatrix3 ();\r\n\t\t\t\t\tmatrix.tx = Math.round (matrix.tx);\r\n\t\t\t\t\tmatrix.ty = Math.round (matrix.ty);\r\n\t\t\t\t\tcairo.matrix = matrix;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.matrix = transform.__toMatrix3 ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcairo.setSourceSurface (graphics.__cairo.target, graphics.__bounds.x, graphics.__bounds.y);\r\n\t\t\t\t\r\n\t\t\t\tif (scrollRect != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.pushGroup ();\r\n\t\t\t\t\tcairo.newPath ();\r\n\t\t\t\t\tcairo.rectangle (graphics.__bounds.x + scrollRect.x, graphics.__bounds.y + scrollRect.y, scrollRect.width, scrollRect.height);\r\n\t\t\t\t\tcairo.fill ();\r\n\t\t\t\t\tcairo.popGroupToSource ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcairo.paintWithAlpha (shape.__worldAlpha);\r\n\t\t\t\t\r\n\t\t\t\tif (shape.__mask != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\trenderSession.maskManager.popMask ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.cairo;\r\n\r\n\r\nimport lime.graphics.cairo.Cairo;\r\nimport lime.graphics.cairo.CairoAntialias;\r\nimport lime.graphics.cairo.CairoFontFace;\r\nimport lime.graphics.cairo.CairoFontOptions;\r\nimport lime.graphics.cairo.CairoFTFontFace;\r\nimport lime.graphics.cairo.CairoHintMetrics;\r\nimport lime.graphics.cairo.CairoHintStyle;\r\nimport lime.graphics.cairo.CairoImageSurface;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl._internal.text.TextEngine;\r\nimport openfl.display.BitmapData;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.text.TextField;\r\nimport openfl.text.TextFormat;\r\n\r\n@:access(openfl.display.BitmapData)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.text.TextField)\r\n\r\n\r\nclass CairoTextField {\r\n\t\r\n\t\r\n\tpublic static function render (textField:TextField, renderSession:RenderSession) {\r\n\t\t\r\n\t\t#if lime_cairo\r\n\t\tif (!textField.__dirty) return;\r\n\t\t\r\n\t\ttextField.__updateLayout ();\r\n\t\t\r\n\t\tvar textEngine = textField.__textEngine;\r\n\t\tvar bounds = textEngine.bounds;\r\n\t\t\r\n\t\tvar graphics = textField.__graphics;\r\n\t\tvar cairo = graphics.__cairo;\r\n\t\t\r\n\t\tif (cairo != null) {\r\n\t\t\t\r\n\t\t\tvar surface:CairoImageSurface = cast cairo.target;\r\n\t\t\t\r\n\t\t\tif (Math.ceil (bounds.width) != surface.width || Math.ceil (bounds.height) != surface.height) {\r\n\t\t\t\t\r\n\t\t\t\tgraphics.__cairo = null;\r\n\t\t\t\tgraphics.__visible = false;\r\n\t\t\t\tcairo = null;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (bounds.width <= 0 || bounds.height <= 0) return;\r\n\t\t\r\n\t\tif (cairo == null) {\r\n\t\t\t\r\n\t\t\tvar bitmap = new BitmapData (Math.ceil (bounds.width), Math.ceil (bounds.height), true, 0);\r\n\t\t\tvar surface = bitmap.getSurface ();\r\n\t\t\tgraphics.__cairo = new Cairo (surface);\r\n\t\t\tgraphics.__visible = true;\r\n\t\t\t\r\n\t\t\tgraphics.__bitmap = bitmap;\r\n\t\t\tgraphics.__bounds = new Rectangle (bounds.x, bounds.y, bounds.width, bounds.height);\r\n\t\t\t\r\n\t\t\tcairo = graphics.__cairo;\r\n\t\t\t\r\n\t\t\tvar options = new CairoFontOptions ();\r\n\t\t\t\r\n\t\t\tif (textEngine.antiAliasType == ADVANCED && textEngine.gridFitType == PIXEL) {\r\n\t\t\t\t\r\n\t\t\t\toptions.hintStyle = CairoHintStyle.NONE;\r\n\t\t\t\toptions.hintMetrics = CairoHintMetrics.OFF;\r\n\t\t\t\toptions.antialias = CairoAntialias.NONE;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\toptions.hintStyle = CairoHintStyle.DEFAULT;\r\n\t\t\t\toptions.hintMetrics = CairoHintMetrics.OFF;\r\n\t\t\t\toptions.antialias = CairoAntialias.GOOD;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcairo.fontOptions = options;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (textEngine.border) {\r\n\t\t\t\r\n\t\t\tcairo.rectangle (0.5, 0.5, Std.int (bounds.width - 1), Std.int (bounds.height - 1));\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tcairo.rectangle (0, 0, bounds.width, bounds.height);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!textEngine.background) {\r\n\t\t\t\r\n\t\t\tcairo.operator = CLEAR;\r\n\t\t\tcairo.paint ();\r\n\t\t\tcairo.operator = OVER;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar color = textEngine.backgroundColor;\r\n\t\t\tvar r = ((color & 0xFF0000) >>> 16) / 0xFF;\r\n\t\t\tvar g = ((color & 0x00FF00) >>> 8) / 0xFF;\r\n\t\t\tvar b = (color & 0x0000FF) / 0xFF;\r\n\t\t\t\r\n\t\t\tcairo.setSourceRGB (r, g, b);\r\n\t\t\tcairo.fillPreserve ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (textEngine.border) {\r\n\t\t\t\r\n\t\t\tvar color = textEngine.borderColor;\r\n\t\t\tvar r = ((color & 0xFF0000) >>> 16) / 0xFF;\r\n\t\t\tvar g = ((color & 0x00FF00) >>> 8) / 0xFF;\r\n\t\t\tvar b = (color & 0x0000FF) / 0xFF;\r\n\t\t\t\r\n\t\t\tcairo.setSourceRGB (r, g, b);\r\n\t\t\tcairo.lineWidth = 1;\r\n\t\t\tcairo.stroke ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (textEngine.text != null && textEngine.text != \"\") {\r\n\t\t\t\r\n\t\t\tcairo.rectangle (0, 0, bounds.width - (textField.border ? 1 : 0), bounds.height - (textField.border ? 1 : 0));\r\n\t\t\tcairo.clip ();\r\n\t\t\t\r\n\t\t\tvar text = textEngine.text;\r\n\t\t\t\r\n\t\t\t//if (textEngine.displayAsPassword) {\r\n\t\t\t\t//\r\n\t\t\t\t//var length = text.length;\r\n\t\t\t\t//var mask = \"\";\r\n\t\t\t\t//\r\n\t\t\t\t//for (i in 0...length) {\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//mask += \"*\";\r\n\t\t\t\t\t//\r\n\t\t\t\t//}\r\n\t\t\t\t//\r\n\t\t\t\t//text = mask;\r\n\t\t\t\t//\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t\tvar scrollX = -textField.scrollH;\r\n\t\t\tvar scrollY = 0.0;\r\n\t\t\t\r\n\t\t\tfor (i in 0...textField.scrollV - 1) {\r\n\t\t\t\t\r\n\t\t\t\tscrollY -= textEngine.lineHeights[i];\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar color, r, g, b, font, size, advance;\r\n\t\t\t\r\n\t\t\tfor (group in textEngine.layoutGroups) {\r\n\t\t\t\t\r\n\t\t\t\tif (group.lineIndex < textField.scrollV - 1) continue;\r\n\t\t\t\tif (group.lineIndex > textField.scrollV + textEngine.bottomScrollV - 2) break;\r\n\t\t\t\t\r\n\t\t\t\tcolor = group.format.color;\r\n\t\t\t\tr = ((color & 0xFF0000) >>> 16) / 0xFF;\r\n\t\t\t\tg = ((color & 0x00FF00) >>> 8) / 0xFF;\r\n\t\t\t\tb = (color & 0x0000FF) / 0xFF;\r\n\t\t\t\t\r\n\t\t\t\tcairo.setSourceRGB (r, g, b);\r\n\t\t\t\t\r\n\t\t\t\tfont = TextEngine.getFontInstance (group.format);\r\n\t\t\t\t\r\n\t\t\t\tif (font != null && group.format.size != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textEngine.__cairoFont != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (textEngine.__font != font) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttextEngine.__cairoFont = null;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textEngine.__cairoFont == null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttextEngine.__font = font;\r\n\t\t\t\t\t\ttextEngine.__cairoFont = CairoFTFontFace.create (font, 0);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.fontFace = textEngine.__cairoFont;\r\n\t\t\t\t\t\r\n\t\t\t\t\tsize = Std.int (group.format.size);\r\n\t\t\t\t\tcairo.setFontSize (size);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcairo.moveTo (group.offsetX + scrollX, group.offsetY + group.ascent + scrollY);\r\n\t\t\t\t\tcairo.showText (text.substring (group.startIndex, group.endIndex));\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textField.__caretIndex > -1 && textEngine.selectable) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (textField.__selectionIndex == textField.__caretIndex) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (textField.__showCursor && group.startIndex <= textField.__caretIndex && group.endIndex >= textField.__caretIndex) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tadvance = 0.0;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tfor (i in 0...(textField.__caretIndex - group.startIndex)) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (group.advances.length <= i) break;\r\n\t\t\t\t\t\t\t\t\tadvance += group.advances[i];\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcairo.moveTo (Math.floor (group.offsetX + advance) + 0.5, group.offsetY + 0.5);\r\n\t\t\t\t\t\t\t\tcairo.lineWidth = 1;\r\n\t\t\t\t\t\t\t\tcairo.lineTo (Math.floor (group.offsetX + advance) + 0.5, group.offsetY + group.height - 1);\r\n\t\t\t\t\t\t\t\tcairo.stroke ();\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if ((group.startIndex <= textField.__caretIndex && group.endIndex >= textField.__caretIndex) || (group.startIndex <= textField.__selectionIndex && group.endIndex >= textField.__selectionIndex)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar selectionStart = Std.int (Math.min (textField.__selectionIndex, textField.__caretIndex));\r\n\t\t\t\t\t\t\tvar selectionEnd = Std.int (Math.max (textField.__selectionIndex, textField.__caretIndex));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (group.startIndex > selectionStart) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tselectionStart = group.startIndex;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (group.endIndex < selectionEnd) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tselectionEnd = group.endIndex;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar start, end;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tstart = textField.getCharBoundaries (selectionStart);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (selectionEnd >= textEngine.text.length) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tend = textField.getCharBoundaries (textEngine.text.length - 1);\r\n\t\t\t\t\t\t\t\tend.x += end.width + 2;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tend = textField.getCharBoundaries (selectionEnd);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (start != null && end != null) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcairo.setSourceRGB (0, 0, 0);\r\n\t\t\t\t\t\t\t\tcairo.rectangle (start.x, start.y, end.x - start.x, group.height);\r\n\t\t\t\t\t\t\t\tcairo.fill ();\r\n\t\t\t\t\t\t\t\tcairo.setSourceRGB (1, 1, 1);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// TODO: draw only once\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcairo.moveTo (scrollX + start.x, group.offsetY + group.ascent + scrollY);\r\n\t\t\t\t\t\t\t\tcairo.showText (text.substring (selectionStart, selectionEnd));\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tgraphics.__bitmap.image.dirty = true;\r\n\t\ttextField.__dirty = false;\r\n\t\tgraphics.__dirty = false;\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.canvas;\r\n\r\n\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.Bitmap;\r\n\r\n@:access(openfl.display.Bitmap)\r\n@:access(openfl.display.BitmapData)\r\n\r\n\r\nclass CanvasBitmap {\r\n\t\r\n\t\r\n\tpublic static inline function render (bitmap:Bitmap, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tif (!bitmap.__renderable || bitmap.__worldAlpha <= 0) return;\r\n\t\t\r\n\t\tvar context = renderSession.context;\r\n\t\t\r\n\t\tif (bitmap.bitmapData != null && bitmap.bitmapData.__isValid) {\r\n\t\t\t\r\n\t\t\tif (bitmap.__mask != null) {\r\n\t\t\t\t\r\n\t\t\t\trenderSession.maskManager.pushMask (bitmap.__mask);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbitmap.bitmapData.__sync ();\r\n\t\t\t\r\n\t\t\tcontext.globalAlpha = bitmap.__worldAlpha;\r\n\t\t\tvar transform = bitmap.__renderTransform;\r\n\t\t\tvar scrollRect = bitmap.scrollRect;\r\n\t\t\t\r\n\t\t\tif (renderSession.roundPixels) {\r\n\t\t\t\t\r\n\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, Std.int (transform.tx), Std.int (transform.ty));\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!bitmap.smoothing) {\r\n\t\t\t\t\r\n\t\t\t\tuntyped (context).mozImageSmoothingEnabled = false;\r\n\t\t\t\t//untyped (context).webkitImageSmoothingEnabled = false;\r\n\t\t\t\tuntyped (context).msImageSmoothingEnabled = false;\r\n\t\t\t\tuntyped (context).imageSmoothingEnabled = false;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (scrollRect == null) {\r\n\t\t\t\t\r\n\t\t\t\tcontext.drawImage (bitmap.bitmapData.image.src, 0, 0);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tcontext.drawImage (bitmap.bitmapData.image.src, scrollRect.x, scrollRect.y, scrollRect.width, scrollRect.height, scrollRect.x, scrollRect.y, scrollRect.width, scrollRect.height);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!bitmap.smoothing) {\r\n\t\t\t\t\r\n\t\t\t\tuntyped (context).mozImageSmoothingEnabled = true;\r\n\t\t\t\t//untyped (context).webkitImageSmoothingEnabled = true;\r\n\t\t\t\tuntyped (context).msImageSmoothingEnabled = true;\r\n\t\t\t\tuntyped (context).imageSmoothingEnabled = true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bitmap.__mask != null) {\r\n\t\t\t\t\r\n\t\t\t\trenderSession.maskManager.popMask ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.canvas;\r\n\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.BitmapDataChannel;\r\nimport openfl.display.CapsStyle;\r\nimport openfl.display.DisplayObject;\r\nimport openfl._internal.renderer.DrawCommandBuffer;\r\nimport openfl._internal.renderer.DrawCommandReader;\r\nimport openfl._internal.renderer.DrawCommandType;\r\nimport openfl.display.GradientType;\r\nimport openfl.display.Graphics;\r\nimport openfl.display.InterpolationMethod;\r\nimport openfl.display.SpreadMethod;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.Lib;\r\nimport openfl.utils.ByteArray;\r\nimport openfl.Vector;\r\n\r\n#if (js && html5)\r\nimport js.html.CanvasElement;\r\nimport js.html.CanvasGradient;\r\nimport js.html.CanvasPattern;\r\nimport js.html.CanvasRenderingContext2D;\r\nimport js.Browser;\r\nimport js.html.ImageData;\r\n#end\r\n\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.display.BitmapData)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.display.Tilesheet)\r\n\r\n\r\nclass CanvasGraphics {\r\n\t\r\n\t\r\n\tprivate static var SIN45 = 0.70710678118654752440084436210485;\r\n\tprivate static var TAN22 = 0.4142135623730950488016887242097;\r\n\t\r\n\tprivate static var bitmapFill:BitmapData;\r\n\tprivate static var bitmapStroke:BitmapData;\r\n\tprivate static var bitmapRepeat:Bool;\r\n\tprivate static var bounds:Rectangle;\r\n\tprivate static var fillCommands:DrawCommandBuffer = new DrawCommandBuffer();\r\n\tprivate static var graphics:Graphics;\r\n\tprivate static var hasFill:Bool;\r\n\tprivate static var hasStroke:Bool;\r\n\tprivate static var hitTesting:Bool;\r\n\tprivate static var inversePendingMatrix:Matrix;\r\n\tprivate static var pendingMatrix:Matrix;\r\n\tprivate static var strokeCommands:DrawCommandBuffer = new DrawCommandBuffer();\r\n\t\r\n\t#if (js && html5)\r\n\tprivate static var context:CanvasRenderingContext2D;\r\n\t#end\r\n\t\r\n\t\r\n\tprivate static function closePath ():Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t\r\n\t\tif (context.strokeStyle == null) {\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tcontext.closePath ();\r\n\t\tcontext.stroke ();\r\n\t\tcontext.beginPath ();\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function createBitmapFill (bitmap:BitmapData, bitmapRepeat:Bool) {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t\r\n\t\tbitmap.__sync ();\r\n\t\treturn context.createPattern (bitmap.image.src, bitmapRepeat ? \"repeat\" : \"no-repeat\");\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function createGradientPattern (type:GradientType, colors:Array<Dynamic>, alphas:Array<Dynamic>, ratios:Array<Dynamic>, matrix:Matrix, spreadMethod:SpreadMethod, interpolationMethod:InterpolationMethod, focalPointRatio:Float) {\r\n\t\r\n\t\t#if (js && html5)\r\n\t\t\r\n\t\tvar gradientFill = null;\r\n\t\t\r\n\t\tswitch (type) {\r\n\t\t\t\r\n\t\t\tcase RADIAL:\r\n\t\t\t\t\r\n\t\t\t\tif (matrix == null) matrix = new Matrix ();\r\n\t\t\t\tvar point = matrix.transformPoint (new Point (1638.4, 0));\r\n\t\t\t\tgradientFill = context.createRadialGradient (matrix.tx, matrix.ty, 0, matrix.tx, matrix.ty, (point.x - matrix.tx) / 2);\r\n\t\t\t\r\n\t\t\tcase LINEAR:\r\n\t\t\t\t\r\n\t\t\t\tvar matrix = matrix != null ? matrix : new Matrix ();\r\n\t\t\t\tvar point1 = matrix.transformPoint (new Point (-819.2, 0));\r\n\t\t\t\tvar point2 = matrix.transformPoint (new Point (819.2, 0));\r\n\t\t\t\t\r\n\t\t\t\tgradientFill = context.createLinearGradient (point1.x, point1.y, point2.x, point2.y);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (i in 0...colors.length) {\r\n\t\t\t\r\n\t\t\tvar rgb = colors[i];\r\n\t\t\tvar alpha = alphas[i];\r\n\t\t\tvar r = (rgb & 0xFF0000) >>> 16;\r\n\t\t\tvar g = (rgb & 0x00FF00) >>> 8;\r\n\t\t\tvar b = (rgb & 0x0000FF);\r\n\t\t\t\r\n\t\t\tvar ratio = ratios[i] / 0xFF;\r\n\t\t\tif (ratio < 0) ratio = 0;\r\n\t\t\tif (ratio > 1) ratio = 1;\r\n\t\t\t\r\n\t\t\tgradientFill.addColorStop (ratio, \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\");\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn cast (gradientFill);\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function createTempPatternCanvas (bitmap:BitmapData, repeat:Bool, width:Int, height:Int) {\r\n\t\t\r\n\t\t// TODO: Don't create extra canvas elements like this\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tvar canvas:CanvasElement = cast Browser.document.createElement (\"canvas\");\r\n\t\tvar context = canvas.getContext (\"2d\");\r\n\t\t\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\t\t\r\n\t\tcontext.fillStyle = context.createPattern (bitmap.image.src, repeat ? \"repeat\" : \"no-repeat\");\r\n\t\tcontext.beginPath ();\r\n\t\tcontext.moveTo (0, 0);\r\n\t\tcontext.lineTo (0, height);\r\n\t\tcontext.lineTo (width, height);\r\n\t\tcontext.lineTo (width, 0);\r\n\t\tcontext.lineTo (0, 0);\r\n\t\tcontext.closePath ();\r\n\t\tif (!hitTesting) context.fill ();\r\n\t\treturn canvas;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function drawRoundRect (x:Float, y:Float, width:Float, height:Float, ellipseWidth:Float, ellipseHeight:Null<Float>):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tif (ellipseHeight == null) ellipseHeight = ellipseWidth;\r\n\t\t\r\n\t\tellipseWidth *= 0.5;\r\n\t\tellipseHeight *= 0.5;\r\n\t\t\r\n\t\tif (ellipseWidth > width / 2) ellipseWidth = width / 2;\r\n\t\tif (ellipseHeight > height / 2) ellipseHeight = height / 2;\r\n\t\t\r\n\t\tvar xe = x + width,\r\n\t\tye = y + height,\r\n\t\tcx1 = -ellipseWidth + (ellipseWidth * SIN45),\r\n\t\tcx2 = -ellipseWidth + (ellipseWidth * TAN22),\r\n\t\tcy1 = -ellipseHeight + (ellipseHeight * SIN45),\r\n\t\tcy2 = -ellipseHeight + (ellipseHeight * TAN22);\r\n\t\t\r\n\t\tcontext.moveTo (xe, ye - ellipseHeight);\r\n\t\tcontext.quadraticCurveTo (xe, ye + cy2, xe + cx1, ye + cy1);\r\n\t\tcontext.quadraticCurveTo (xe + cx2, ye, xe - ellipseWidth, ye);\r\n\t\tcontext.lineTo (x + ellipseWidth, ye);\r\n\t\tcontext.quadraticCurveTo (x - cx2, ye, x - cx1, ye + cy1);\r\n\t\tcontext.quadraticCurveTo (x, ye + cy2, x, ye - ellipseHeight);\r\n\t\tcontext.lineTo (x, y + ellipseHeight);\r\n\t\tcontext.quadraticCurveTo (x, y - cy2, x - cx1, y - cy1);\r\n\t\tcontext.quadraticCurveTo (x - cx2, y, x + ellipseWidth, y);\r\n\t\tcontext.lineTo (xe - ellipseWidth, y);\r\n\t\tcontext.quadraticCurveTo (xe + cx2, y, xe + cx1, y - cy1);\r\n\t\tcontext.quadraticCurveTo (xe, y - cy2, xe, y + ellipseHeight);\r\n\t\tcontext.lineTo (xe, ye - ellipseHeight);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function endFill ():Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tcontext.beginPath ();\r\n\t\tplayCommands (fillCommands, false);\r\n\t\tfillCommands.clear();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function endStroke ():Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tcontext.beginPath ();\r\n\t\tplayCommands (strokeCommands, true);\r\n\t\tcontext.closePath ();\r\n\t\tstrokeCommands.clear();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function hitTest (graphics:Graphics, x:Float, y:Float):Bool {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t\r\n\t\tif (graphics.__commands.length == 0 || bounds == null || bounds.width <= 0 || bounds.height <= 0) {\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\thitTesting = true;\r\n\t\t\t\r\n\t\t\tx -= bounds.x;\r\n\t\t\ty -= bounds.y;\r\n\t\t\t\r\n\t\t\tif (graphics.__canvas == null) {\r\n\t\t\t\t\r\n\t\t\t\tgraphics.__canvas = cast Browser.document.createElement (\"canvas\");\r\n\t\t\t\tgraphics.__context = graphics.__canvas.getContext (\"2d\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcontext = graphics.__context;\r\n\t\t\t\r\n\t\t\tfillCommands.clear ();\r\n\t\t\tstrokeCommands.clear ();\r\n\t\t\t\r\n\t\t\thasFill = false;\r\n\t\t\thasStroke = false;\r\n\t\t\tbitmapFill = null;\r\n\t\t\tbitmapRepeat = false;\r\n\t\t\t\r\n\t\t\tcontext.beginPath ();\r\n\t\t\t\r\n\t\t\tvar data = new DrawCommandReader (graphics.__commands);\r\n\t\t\t\r\n\t\t\tfor (type in graphics.__commands.types) {\r\n\t\t\t\t\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase CUBIC_CURVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readCubicCurveTo ();\r\n\t\t\t\t\t\tfillCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\tstrokeCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase CURVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readCurveTo ();\r\n\t\t\t\t\t\tfillCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\tstrokeCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineTo ();\r\n\t\t\t\t\t\tfillCommands.lineTo (c.x, c.y);\r\n\t\t\t\t\t\tstrokeCommands.lineTo (c.x, c.y);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tcase MOVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readMoveTo ();\r\n\t\t\t\t\t\tfillCommands.moveTo (c.x, c.y);\r\n\t\t\t\t\t\tstrokeCommands.moveTo (c.x, c.y);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_GRADIENT_STYLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineGradientStyle ();\r\n\t\t\t\t\t\tstrokeCommands.lineGradientStyle (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_BITMAP_STYLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineBitmapStyle ();\r\n\t\t\t\t\t\tstrokeCommands.lineBitmapStyle (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_STYLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineStyle ();\r\n\t\t\t\t\t\tstrokeCommands.lineStyle (c.thickness, c.color, 1, c.pixelHinting, c.scaleMode, c.caps, c.joints, c.miterLimit);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase END_FILL:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata.readEndFill ();\r\n\t\t\t\t\t\tendFill ();\r\n\t\t\t\t\t\tendStroke ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (hasFill && context.isPointInPath (x, y)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdata.destroy ();\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (hasStroke && (context:Dynamic).isPointInStroke (x, y)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdata.destroy ();\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thasFill = false;\r\n\t\t\t\t\t\tbitmapFill = null;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase BEGIN_BITMAP_FILL, BEGIN_FILL, BEGIN_GRADIENT_FILL:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tendFill ();\r\n\t\t\t\t\t\tendStroke ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (hasFill && context.isPointInPath (x, y)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdata.destroy ();\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (hasStroke && (context:Dynamic).isPointInStroke (x, y)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdata.destroy ();\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (type == BEGIN_BITMAP_FILL) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readBeginBitmapFill ();\r\n\t\t\t\t\t\t\tfillCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\t\t\t\tstrokeCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (type == BEGIN_GRADIENT_FILL) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readBeginGradientFill ();\r\n\t\t\t\t\t\t\tfillCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\t\tstrokeCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readBeginFill ();\r\n\t\t\t\t\t\t\tfillCommands.beginFill (c.color, 1);\r\n\t\t\t\t\t\t\tstrokeCommands.beginFill (c.color, 1);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_CIRCLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawCircle ();\r\n\t\t\t\t\t\tfillCommands.drawCircle (c.x, c.y, c.radius);\r\n\t\t\t\t\t\tstrokeCommands.drawCircle (c.x, c.y, c.radius);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_ELLIPSE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawEllipse ();\r\n\t\t\t\t\t\tfillCommands.drawEllipse (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\tstrokeCommands.drawEllipse (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_RECT:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawRect ();\r\n\t\t\t\t\t\tfillCommands.drawRect (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\tstrokeCommands.drawRect (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_ROUND_RECT:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawRoundRect ();\r\n\t\t\t\t\t\tfillCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\r\n\t\t\t\t\t\tstrokeCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata.skip (type);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (fillCommands.length > 0) {\r\n\t\t\t\t\r\n\t\t\t\tendFill ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (strokeCommands.length > 0) {\r\n\t\t\t\t\r\n\t\t\t\tendStroke ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdata.destroy ();\r\n\t\t\t\r\n\t\t\tif (hasFill && context.isPointInPath (x, y)) {\r\n\t\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (hasStroke && (context:Dynamic).isPointInStroke (x, y)) {\r\n\t\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static inline function isCCW (x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float) {\r\n\t\t\r\n\t\treturn ((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1)) < 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function normalizeUVT (uvt:Vector<Float>, skipT:Bool = false): { max:Float, uvt:Vector<Float> } {\r\n\t\t\r\n\t\tvar max:Float = Math.NEGATIVE_INFINITY;\r\n\t\tvar tmp = Math.NEGATIVE_INFINITY;\r\n\t\tvar len = uvt.length;\r\n\t\t\r\n\t\tfor (t in 1...len + 1) {\r\n\t\t\t\r\n\t\t\tif (skipT && t % 3 == 0) {\r\n\t\t\t\t\r\n\t\t\t\tcontinue;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttmp = uvt[t - 1];\r\n\t\t\t\r\n\t\t\tif (max < tmp) {\r\n\t\t\t\t\r\n\t\t\t\tmax = tmp;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar result = new Vector<Float> ();\r\n\t\t\r\n\t\tfor (t in 1...len + 1) {\r\n\t\t\t\r\n\t\t\tif (skipT && t % 3 == 0) {\r\n\t\t\t\t\r\n\t\t\t\tcontinue;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresult.push ((uvt[t - 1] / max));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn { max: max, uvt: result };\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function playCommands (commands:DrawCommandBuffer, stroke:Bool = false):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tbounds = graphics.__bounds;\r\n\t\t\r\n\t\tvar offsetX = bounds.x;\r\n\t\tvar offsetY = bounds.y;\r\n\t\t\r\n\t\tvar positionX = 0.0;\r\n\t\tvar positionY = 0.0;\r\n\t\t\r\n\t\tvar closeGap = false;\r\n\t\tvar startX = 0.0;\r\n\t\tvar startY = 0.0;\r\n\t\t\r\n\t\tvar data = new DrawCommandReader (commands);\r\n\t\t\r\n\t\tfor (type in commands.types) {\r\n\t\t\t\r\n\t\t\tswitch (type) {\r\n\t\t\t\t\r\n\t\t\t\tcase CUBIC_CURVE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readCubicCurveTo ();\r\n\t\t\t\t\tcontext.bezierCurveTo (c.controlX1 - offsetX, c.controlY1 - offsetY, c.controlX2 - offsetX, c.controlY2 - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\r\n\t\t\t\t\r\n\t\t\t\tcase CURVE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readCurveTo ();\r\n\t\t\t\t\tcontext.quadraticCurveTo (c.controlX - offsetX, c.controlY - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\r\n\t\t\t\t\r\n\t\t\t\tcase DRAW_CIRCLE:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readDrawCircle ();\r\n\t\t\t\t\tcontext.moveTo (c.x - offsetX + c.radius, c.y - offsetY);\r\n\t\t\t\t\tcontext.arc (c.x - offsetX, c.y - offsetY, c.radius, 0, Math.PI * 2, true);\r\n\t\t\t\t\r\n\t\t\t\tcase DRAW_ELLIPSE:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readDrawEllipse ();\r\n\t\t\t\t\tvar x = c.x;\r\n\t\t\t\t\tvar y = c.y;\r\n\t\t\t\t\tvar width = c.width;\r\n\t\t\t\t\tvar height = c.height;\r\n\t\t\t\t\tx -= offsetX;\r\n\t\t\t\t\ty -= offsetY;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar kappa = .5522848,\r\n\t\t\t\t\t\tox = (width / 2) * kappa, // control point offset horizontal\r\n\t\t\t\t\t\toy = (height / 2) * kappa, // control point offset vertical\r\n\t\t\t\t\t\txe = x + width,           // x-end\r\n\t\t\t\t\t\tye = y + height,           // y-end\r\n\t\t\t\t\t\txm = x + width / 2,       // x-middle\r\n\t\t\t\t\t\tym = y + height / 2;       // y-middle\r\n\t\t\t\t\t\r\n\t\t\t\t\tcontext.moveTo (x, ym);\r\n\t\t\t\t\tcontext.bezierCurveTo (x, ym - oy, xm - ox, y, xm, y);\r\n\t\t\t\t\tcontext.bezierCurveTo (xm + ox, y, xe, ym - oy, xe, ym);\r\n\t\t\t\t\tcontext.bezierCurveTo (xe, ym + oy, xm + ox, ye, xm, ye);\r\n\t\t\t\t\tcontext.bezierCurveTo (xm - ox, ye, x, ym + oy, x, ym);\r\n\t\t\t\t\r\n\t\t\t\tcase DRAW_ROUND_RECT:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readDrawRoundRect ();\r\n\t\t\t\t\tdrawRoundRect (c.x - offsetX, c.y - offsetY, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\r\n\t\t\t\t\r\n\t\t\t\tcase LINE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readLineTo ();\r\n\t\t\t\t\tcontext.lineTo (c.x - offsetX, c.y - offsetY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tpositionX = c.x;\r\n\t\t\t\t\tpositionY = c.y;\r\n\t\t\t\t\r\n\t\t\t\tcase MOVE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readMoveTo ();\r\n\t\t\t\t\tcontext.moveTo (c.x - offsetX, c.y - offsetY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tpositionX = c.x;\r\n\t\t\t\t\tpositionY = c.y;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcloseGap = true;\r\n\t\t\t\t\tstartX = c.x;\r\n\t\t\t\t\tstartY = c.y;\r\n\t\t\t\t\r\n\t\t\t\tcase LINE_STYLE:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readLineStyle ();\r\n\t\t\t\t\tif (stroke && hasStroke) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcontext.closePath ();\r\n\t\t\t\t\t\tif (!hitTesting) context.stroke ();\r\n\t\t\t\t\t\tcontext.beginPath ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcontext.moveTo (positionX - offsetX, positionY - offsetY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (c.thickness == null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thasStroke = false;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcontext.lineWidth = (c.thickness > 0 ? c.thickness : 1);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcontext.lineJoin = (c.joints == null ? \"round\" : Std.string (c.joints).toLowerCase ());\r\n\t\t\t\t\t\tcontext.lineCap = (c.caps == null ? \"round\" : switch (c.caps) {\r\n\t\t\t\t\t\t\tcase CapsStyle.NONE: \"butt\";\r\n\t\t\t\t\t\t\tdefault: Std.string (c.caps).toLowerCase ();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcontext.miterLimit = c.miterLimit;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (c.alpha == 1) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcontext.strokeStyle = \"#\" + StringTools.hex (c.color & 0x00FFFFFF, 6);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar r = (c.color & 0xFF0000) >>> 16;\r\n\t\t\t\t\t\t\tvar g = (c.color & 0x00FF00) >>> 8;\r\n\t\t\t\t\t\t\tvar b = (c.color & 0x0000FF);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcontext.strokeStyle = \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + c.alpha + \")\";\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thasStroke = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcase LINE_GRADIENT_STYLE:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readLineGradientStyle ();\r\n\t\t\t\t\tif (stroke && hasStroke) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tclosePath ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcontext.moveTo (positionX - offsetX, positionY - offsetY);\r\n\t\t\t\t\tcontext.strokeStyle = createGradientPattern (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\r\n\t\t\t\t\thasStroke = true;\r\n\t\t\t\t\r\n\t\t\t\tcase LINE_BITMAP_STYLE:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readLineBitmapStyle ();\r\n\t\t\t\t\tif (stroke && hasStroke) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tclosePath ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcontext.moveTo (positionX - offsetX, positionY - offsetY);\r\n\t\t\t\t\tcontext.strokeStyle = createBitmapFill (c.bitmap, c.repeat);\r\n\t\t\t\t\t\r\n\t\t\t\t\thasStroke = true;\r\n\t\t\t\t\r\n\t\t\t\tcase BEGIN_BITMAP_FILL:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readBeginBitmapFill ();\r\n\t\t\t\t\tcontext.fillStyle = createBitmapFill (c.bitmap, true);\r\n\t\t\t\t\thasFill = true;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (c.matrix != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tpendingMatrix = c.matrix;\r\n\t\t\t\t\t\tinversePendingMatrix = c.matrix.clone ();\r\n\t\t\t\t\t\tinversePendingMatrix.invert ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tpendingMatrix = null;\r\n\t\t\t\t\t\tinversePendingMatrix = null;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcase BEGIN_FILL:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readBeginFill ();\r\n\t\t\t\t\tif (c.alpha < 0.005) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thasFill = false;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (c.alpha == 1) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcontext.fillStyle = \"#\" + StringTools.hex (c.color, 6);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar r = (c.color & 0xFF0000) >>> 16;\r\n\t\t\t\t\t\t\tvar g = (c.color & 0x00FF00) >>> 8;\r\n\t\t\t\t\t\t\tvar b = (c.color & 0x0000FF);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcontext.fillStyle = \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + c.alpha + \")\";\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbitmapFill = null;\r\n\t\t\t\t\t\thasFill = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcase BEGIN_GRADIENT_FILL:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readBeginGradientFill ();\r\n\t\t\t\t\tcontext.fillStyle = createGradientPattern (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\r\n\t\t\t\t\tbitmapFill = null;\r\n\t\t\t\t\thasFill = true;\r\n\t\t\t\t\r\n\t\t\t\tcase DRAW_RECT:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar c = data.readDrawRect ();\r\n\t\t\t\t\tvar optimizationUsed = false;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (bitmapFill != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar st:Float = 0;\r\n\t\t\t\t\t\tvar sr:Float = 0;\r\n\t\t\t\t\t\tvar sb:Float = 0;\r\n\t\t\t\t\t\tvar sl:Float = 0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar canOptimizeMatrix = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (pendingMatrix != null) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (pendingMatrix.b != 0 || pendingMatrix.c != 0) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcanOptimizeMatrix = false;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar stl = inversePendingMatrix.transformPoint (new Point (c.x, c.y));\r\n\t\t\t\t\t\t\t\tvar sbr = inversePendingMatrix.transformPoint (new Point (c.x + c.width, c.y + c.height));\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tst = stl.y;\r\n\t\t\t\t\t\t\t\tsl = stl.x;\r\n\t\t\t\t\t\t\t\tsb = sbr.y;\r\n\t\t\t\t\t\t\t\tsr = sbr.x;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tst = c.y;\r\n\t\t\t\t\t\t\tsl = c.x;\r\n\t\t\t\t\t\t\tsb = c.y + c.height;\r\n\t\t\t\t\t\t\tsr = c.x + c.width;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (canOptimizeMatrix && st >= 0 && sl >= 0 && sr <= bitmapFill.width && sb <= bitmapFill.height) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\toptimizationUsed = true;\r\n\t\t\t\t\t\t\tif (!hitTesting) context.drawImage (bitmapFill.image.src, sl, st, sr - sl, sb - st, c.x - offsetX, c.y - offsetY, c.width, c.height);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!optimizationUsed) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcontext.rect (c.x - offsetX, c.y - offsetY, c.width, c.height);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata.skip (type);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tdata.destroy ();\r\n\t\t\r\n\t\tif (stroke && hasStroke) {\r\n\t\t\t\r\n\t\t\tif (hasFill && closeGap) {\r\n\t\t\t\t\r\n\t\t\t\tcontext.lineTo (startX - offsetX, startY - offsetY);\r\n\t\t\t\t\r\n\t\t\t} else if (closeGap && positionX == startX && positionY == startY) {\r\n\t\t\t\t\r\n\t\t\t\tcontext.closePath ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!hitTesting) context.stroke ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!stroke) {\r\n\t\t\t\r\n\t\t\tif (hasFill || bitmapFill != null) {\r\n\t\t\t\t\r\n\t\t\t\tcontext.translate (-bounds.x, -bounds.y);\r\n\t\t\t\t\r\n\t\t\t\tif (pendingMatrix != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcontext.transform (pendingMatrix.a, pendingMatrix.b, pendingMatrix.c, pendingMatrix.d, pendingMatrix.tx, pendingMatrix.ty);\r\n\t\t\t\t\tif (!hitTesting) context.fill ();\r\n\t\t\t\t\tcontext.transform (inversePendingMatrix.a, inversePendingMatrix.b, inversePendingMatrix.c, inversePendingMatrix.d, inversePendingMatrix.tx, inversePendingMatrix.ty);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!hitTesting) context.fill ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcontext.translate (bounds.x, bounds.y);\r\n\t\t\t\tcontext.closePath ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function render (graphics:Graphics, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t\r\n\t\t// TODO: Handle world transform if we want to use direct render\r\n\t\t\r\n\t\t//var directRender = (graphics.__hardware && renderSession.context != null);\r\n\t\tvar directRender = false;\r\n\t\t\r\n\t\tif (graphics.__dirty || directRender) {\r\n\t\t\t\r\n\t\t\thitTesting = false;\r\n\t\t\t\r\n\t\t\tCanvasGraphics.graphics = graphics;\r\n\t\t\tbounds = graphics.__bounds;\r\n\t\t\t\r\n\t\t\tif (!graphics.__visible || graphics.__commands.length == 0 || bounds == null || bounds.width <= 0 || bounds.height <= 0) {\r\n\t\t\t\t\r\n\t\t\t\tgraphics.__canvas = null;\r\n\t\t\t\tgraphics.__context = null;\r\n\t\t\t\tgraphics.__bitmap = null;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tif (directRender) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcontext = cast renderSession.context;\r\n\t\t\t\t\tbounds.setTo (0, 0, context.canvas.width, context.canvas.width);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (graphics.__canvas == null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tgraphics.__canvas = cast Browser.document.createElement (\"canvas\");\r\n\t\t\t\t\t\tgraphics.__context = graphics.__canvas.getContext (\"2d\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcontext = graphics.__context;\r\n\t\t\t\t\t\r\n\t\t\t\t\tgraphics.__canvas.width = Math.ceil (bounds.width);\r\n\t\t\t\t\tgraphics.__canvas.height = Math.ceil (bounds.height);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfillCommands.clear ();\r\n\t\t\t\tstrokeCommands.clear ();\r\n\t\t\t\t\r\n\t\t\t\thasFill = false;\r\n\t\t\t\thasStroke = false;\r\n\t\t\t\tbitmapFill = null;\r\n\t\t\t\tbitmapRepeat = false;\r\n\t\t\t\t\r\n\t\t\t\tvar data = new DrawCommandReader (graphics.__commands);\r\n\t\t\t\t\r\n\t\t\t\tfor (type in graphics.__commands.types) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase CUBIC_CURVE_TO:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readCubicCurveTo ();\r\n\t\t\t\t\t\t\tfillCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\t\tstrokeCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase CURVE_TO:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readCurveTo ();\r\n\t\t\t\t\t\t\tfillCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\t\tstrokeCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase LINE_TO:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readLineTo ();\r\n\t\t\t\t\t\t\tfillCommands.lineTo (c.x, c.y);\r\n\t\t\t\t\t\t\tstrokeCommands.lineTo (c.x, c.y);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase MOVE_TO:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readMoveTo ();\r\n\t\t\t\t\t\t\tfillCommands.moveTo (c.x, c.y);\r\n\t\t\t\t\t\t\tstrokeCommands.moveTo (c.x, c.y);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase END_FILL:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdata.readEndFill ();\r\n\t\t\t\t\t\t\tendFill ();\r\n\t\t\t\t\t\t\tendStroke ();\r\n\t\t\t\t\t\t\thasFill = false;\r\n\t\t\t\t\t\t\tbitmapFill = null;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase LINE_STYLE:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readLineStyle ();\r\n\t\t\t\t\t\t\tstrokeCommands.lineStyle (c.thickness, c.color, c.alpha, c.pixelHinting, c.scaleMode, c.caps, c.joints, c.miterLimit);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase LINE_GRADIENT_STYLE:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readLineGradientStyle ();\r\n\t\t\t\t\t\t\tstrokeCommands.lineGradientStyle (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase LINE_BITMAP_STYLE:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readLineBitmapStyle ();\r\n\t\t\t\t\t\t\tstrokeCommands.lineBitmapStyle (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase BEGIN_BITMAP_FILL, BEGIN_FILL, BEGIN_GRADIENT_FILL:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tendFill ();\r\n\t\t\t\t\t\t\tendStroke ();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (type == BEGIN_BITMAP_FILL) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar c = data.readBeginBitmapFill ();\r\n\t\t\t\t\t\t\t\tfillCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\t\t\t\t\tstrokeCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else if (type == BEGIN_GRADIENT_FILL) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar c = data.readBeginGradientFill ();\r\n\t\t\t\t\t\t\t\tfillCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\t\t\tstrokeCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar c = data.readBeginFill ();\r\n\t\t\t\t\t\t\t\tfillCommands.beginFill (c.color, c.alpha);\r\n\t\t\t\t\t\t\t\tstrokeCommands.beginFill (c.color, c.alpha);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase DRAW_CIRCLE:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readDrawCircle ();\r\n\t\t\t\t\t\t\tfillCommands.drawCircle (c.x, c.y, c.radius);\r\n\t\t\t\t\t\t\tstrokeCommands.drawCircle (c.x, c.y, c.radius);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase DRAW_ELLIPSE:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readDrawEllipse ();\r\n\t\t\t\t\t\t\tfillCommands.drawEllipse (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\t\tstrokeCommands.drawEllipse (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase DRAW_RECT:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readDrawRect ();\r\n\t\t\t\t\t\t\tfillCommands.drawRect (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\t\tstrokeCommands.drawRect (c.x, c.y, c.width, c.height);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase DRAW_ROUND_RECT:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readDrawRoundRect ();\r\n\t\t\t\t\t\t\tfillCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\r\n\t\t\t\t\t\t\tstrokeCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase DRAW_TRIANGLES:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tendFill ();\r\n\t\t\t\t\t\t\tendStroke ();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readDrawTriangles ();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar v = c.vertices;\r\n\t\t\t\t\t\t\tvar ind = c.indices;\r\n\t\t\t\t\t\t\tvar uvt = c.uvtData;\r\n\t\t\t\t\t\t\tvar pattern:CanvasElement = null;\r\n\t\t\t\t\t\t\tvar colorFill = bitmapFill == null;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (colorFill && uvt != null) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// Flash doesn't draw anything if the fill isn't a bitmap and there are uvt values\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (!colorFill) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//TODO move this to Graphics?\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (uvt == null) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tuvt = new Vector<Float> ();\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tfor (i in 0...(Std.int (v.length / 2))) {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tuvt.push (v[i * 2] / bitmapFill.width);\r\n\t\t\t\t\t\t\t\t\t\tuvt.push (v[i * 2 + 1] / bitmapFill.height);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar skipT = uvt.length != v.length;\r\n\t\t\t\t\t\t\t\tvar normalizedUVT = normalizeUVT (uvt, skipT);\r\n\t\t\t\t\t\t\t\tvar maxUVT = normalizedUVT.max;\r\n\t\t\t\t\t\t\t\tuvt = normalizedUVT.uvt;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (maxUVT > 1) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tpattern = createTempPatternCanvas (bitmapFill, bitmapRepeat, Std.int (bounds.width), Std.int (bounds.height));\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tpattern = createTempPatternCanvas (bitmapFill, bitmapRepeat, bitmapFill.width, bitmapFill.height);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar i = 0;\r\n\t\t\t\t\t\t\tvar l = ind.length;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar a_:Int, b_:Int, c_:Int;\r\n\t\t\t\t\t\t\tvar iax:Int, iay:Int, ibx:Int, iby:Int, icx:Int, icy:Int;\r\n\t\t\t\t\t\t\tvar x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float;\r\n\t\t\t\t\t\t\tvar uvx1:Float, uvy1:Float, uvx2:Float, uvy2:Float, uvx3:Float, uvy3:Float;\r\n\t\t\t\t\t\t\tvar denom:Float;\r\n\t\t\t\t\t\t\tvar t1:Float, t2:Float, t3:Float, t4:Float;\r\n\t\t\t\t\t\t\tvar dx:Float, dy:Float;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\twhile (i < l) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\ta_ = i;\r\n\t\t\t\t\t\t\t\tb_ = i + 1;\r\n\t\t\t\t\t\t\t\tc_ = i + 2;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tiax = ind[a_] * 2;\r\n\t\t\t\t\t\t\t\tiay = ind[a_] * 2 + 1;\r\n\t\t\t\t\t\t\t\tibx = ind[b_] * 2;\r\n\t\t\t\t\t\t\t\tiby = ind[b_] * 2 + 1;\r\n\t\t\t\t\t\t\t\ticx = ind[c_] * 2;\r\n\t\t\t\t\t\t\t\ticy = ind[c_] * 2 + 1;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tx1 = v[iax];\r\n\t\t\t\t\t\t\t\ty1 = v[iay];\r\n\t\t\t\t\t\t\t\tx2 = v[ibx];\r\n\t\t\t\t\t\t\t\ty2 = v[iby];\r\n\t\t\t\t\t\t\t\tx3 = v[icx];\r\n\t\t\t\t\t\t\t\ty3 = v[icy];\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tswitch (c.culling) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcase POSITIVE:\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif (!isCCW (x1, y1, x2, y2, x3, y3)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\ti += 3;\r\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcase NEGATIVE:\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif (isCCW (x1, y1, x2, y2, x3, y3)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\ti += 3;\r\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (colorFill) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcontext.beginPath ();\r\n\t\t\t\t\t\t\t\t\tcontext.moveTo (x1, y1);\r\n\t\t\t\t\t\t\t\t\tcontext.lineTo (x2, y2);\r\n\t\t\t\t\t\t\t\t\tcontext.lineTo (x3, y3);\r\n\t\t\t\t\t\t\t\t\tcontext.closePath ();\r\n\t\t\t\t\t\t\t\t\tif (!hitTesting) context.fill ();\r\n\t\t\t\t\t\t\t\t\ti += 3;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcontext.save ();\r\n\t\t\t\t\t\t\t\tcontext.beginPath ();\r\n\t\t\t\t\t\t\t\tcontext.moveTo (x1, y1);\r\n\t\t\t\t\t\t\t\tcontext.lineTo (x2, y2);\r\n\t\t\t\t\t\t\t\tcontext.lineTo (x3, y3);\r\n\t\t\t\t\t\t\t\tcontext.closePath ();\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcontext.clip ();\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tuvx1 = uvt[iax] * pattern.width;\r\n\t\t\t\t\t\t\t\tuvx2 = uvt[ibx] * pattern.width;\r\n\t\t\t\t\t\t\t\tuvx3 = uvt[icx] * pattern.width;\r\n\t\t\t\t\t\t\t\tuvy1 = uvt[iay] * pattern.height;\r\n\t\t\t\t\t\t\t\tuvy2 = uvt[iby] * pattern.height;\r\n\t\t\t\t\t\t\t\tuvy3 = uvt[icy] * pattern.height;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tdenom = uvx1 * (uvy3 - uvy2) - uvx2 * uvy3 + uvx3 * uvy2 + (uvx2 - uvx3) * uvy1;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (denom == 0) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\ti += 3;\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tt1 = - (uvy1 * (x3 - x2) - uvy2 * x3 + uvy3 * x2 + (uvy2 - uvy3) * x1) / denom;\r\n\t\t\t\t\t\t\t\tt2 = (uvy2 * y3 + uvy1 * (y2 - y3) - uvy3 * y2 + (uvy3 - uvy2) * y1) / denom;\r\n\t\t\t\t\t\t\t\tt3 = (uvx1 * (x3 - x2) - uvx2 * x3 + uvx3 * x2 + (uvx2 - uvx3) * x1) / denom;\r\n\t\t\t\t\t\t\t\tt4 = - (uvx2 * y3 + uvx1 * (y2 - y3) - uvx3 * y2 + (uvx3 - uvx2) * y1) / denom;\r\n\t\t\t\t\t\t\t\tdx = (uvx1 * (uvy3 * x2 - uvy2 * x3) + uvy1 * (uvx2 * x3 - uvx3 * x2) + (uvx3 * uvy2 - uvx2 * uvy3) * x1) / denom;\r\n\t\t\t\t\t\t\t\tdy = (uvx1 * (uvy3 * y2 - uvy2 * y3) + uvy1 * (uvx2 * y3 - uvx3 * y2) + (uvx3 * uvy2 - uvx2 * uvy3) * y1) / denom;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcontext.transform (t1, t2, t3, t4, dx, dy);\r\n\t\t\t\t\t\t\t\tcontext.drawImage (pattern, 0, 0);\r\n\t\t\t\t\t\t\t\tcontext.restore ();\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\ti += 3;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase DRAW_TILES:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar c = data.readDrawTiles ();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar useScale = (c.flags & Graphics.TILE_SCALE) > 0;\r\n\t\t\t\t\t\t\tvar offsetX = bounds.x;\r\n\t\t\t\t\t\t\tvar offsetY = bounds.y;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar useRotation = (c.flags & Graphics.TILE_ROTATION) > 0;\r\n\t\t\t\t\t\t\tvar useTransform = (c.flags & Graphics.TILE_TRANS_2x2) > 0;\r\n\t\t\t\t\t\t\tvar useRGB = (c.flags & Graphics.TILE_RGB) > 0;\r\n\t\t\t\t\t\t\tvar useAlpha = (c.flags & Graphics.TILE_ALPHA) > 0;\r\n\t\t\t\t\t\t\tvar useRect = (c.flags & Graphics.TILE_RECT) > 0;\r\n\t\t\t\t\t\t\tvar useOrigin = (c.flags & Graphics.TILE_ORIGIN) > 0;\r\n\t\t\t\t\t\t\tvar useBlendAdd = (c.flags & Graphics.TILE_BLEND_ADD) > 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (useTransform) { useScale = false; useRotation = false; }\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar scaleIndex = 0;\r\n\t\t\t\t\t\t\tvar rotationIndex = 0;\r\n\t\t\t\t\t\t\tvar rgbIndex = 0;\r\n\t\t\t\t\t\t\tvar alphaIndex = 0;\r\n\t\t\t\t\t\t\tvar transformIndex = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar numValues = 3;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (useRect) { numValues = useOrigin ? 8 : 6; }\r\n\t\t\t\t\t\t\tif (useScale) { scaleIndex = numValues; numValues ++; }\r\n\t\t\t\t\t\t\tif (useRotation) { rotationIndex = numValues; numValues ++; }\r\n\t\t\t\t\t\t\tif (useTransform) { transformIndex = numValues; numValues += 4; }\r\n\t\t\t\t\t\t\tif (useRGB) { rgbIndex = numValues; numValues += 3; }\r\n\t\t\t\t\t\t\tif (useAlpha) { alphaIndex = numValues; numValues ++; }\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar totalCount = c.tileData.length;\r\n\t\t\t\t\t\t\tif (c.count >= 0 && totalCount > c.count) totalCount = c.count;\r\n\t\t\t\t\t\t\tvar itemCount = Std.int (totalCount / numValues);\r\n\t\t\t\t\t\t\tvar index = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar rect = null;\r\n\t\t\t\t\t\t\tvar center = null;\r\n\t\t\t\t\t\t\tvar previousTileID = -1;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar surface:Dynamic;\r\n\t\t\t\t\t\t\tc.sheet.__bitmap.__sync ();\r\n\t\t\t\t\t\t\tsurface = c.sheet.__bitmap.image.src;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (useBlendAdd) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcontext.globalCompositeOperation = \"lighter\";\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\twhile (index < totalCount) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar tileID = (!useRect) ? Std.int (c.tileData[index + 2]) : -1;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (!useRect && tileID != previousTileID) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\trect = c.sheet.__tileRects[tileID];\r\n\t\t\t\t\t\t\t\t\tcenter = c.sheet.__centerPoints[tileID];\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tpreviousTileID = tileID;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t} else if (useRect) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\trect = c.sheet.__rectTile;\r\n\t\t\t\t\t\t\t\t\trect.setTo (c.tileData[index + 2], c.tileData[index + 3], c.tileData[index + 4], c.tileData[index + 5]);\r\n\t\t\t\t\t\t\t\t\tcenter = c.sheet.__point;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (useOrigin) {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcenter.setTo (c.tileData[index + 6], c.tileData[index + 7]);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcenter.setTo (0, 0);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (rect != null && rect.width > 0 && rect.height > 0 && center != null) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcontext.save ();\r\n\t\t\t\t\t\t\t\t\tcontext.translate (c.tileData[index] - offsetX, c.tileData[index + 1] - offsetY);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (useRotation) {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcontext.rotate (c.tileData[index + rotationIndex]);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tvar scale = 1.0;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (useScale) {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tscale = c.tileData[index + scaleIndex];\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (useTransform) {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcontext.transform (c.tileData[index + transformIndex], c.tileData[index + transformIndex + 1], c.tileData[index + transformIndex + 2], c.tileData[index + transformIndex + 3], 0, 0);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (useAlpha) {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcontext.globalAlpha = c.tileData[index + alphaIndex];\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcontext.imageSmoothingEnabled = c.smooth;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcontext.drawImage (surface, rect.x, rect.y, rect.width, rect.height, -center.x * scale, -center.y * scale, rect.width * scale, rect.height * scale);\r\n\t\t\t\t\t\t\t\t\tcontext.restore ();\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tindex += numValues;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (useBlendAdd) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcontext.globalCompositeOperation = \"source-over\";\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdata.skip (type);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (fillCommands.length > 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tendFill ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (strokeCommands.length > 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tendStroke ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdata.destroy ();\r\n\t\t\t\tgraphics.__bitmap = BitmapData.fromCanvas (graphics.__canvas);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgraphics.__dirty = false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function renderMask (graphics:Graphics, renderSession:RenderSession) {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t\r\n\t\tif (graphics.__commands.length != 0) {\r\n\t\t\t\r\n\t\t\tcontext = cast renderSession.context;\r\n\t\t\t\r\n\t\t\tvar positionX = 0.0;\r\n\t\t\tvar positionY = 0.0;\r\n\t\t\t\r\n\t\t\tvar offsetX = 0;\r\n\t\t\tvar offsetY = 0;\r\n\t\t\t\r\n\t\t\tvar data = new DrawCommandReader (graphics.__commands);\r\n\t\t\t\r\n\t\t\tfor (type in graphics.__commands.types) {\r\n\t\t\t\t\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase CUBIC_CURVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readCubicCurveTo ();\r\n\t\t\t\t\t\tcontext.bezierCurveTo (c.controlX1 - offsetX, c.controlY1 - offsetY, c.controlX2 - offsetX, c.controlY2 - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\r\n\t\t\t\t\t\tpositionX = c.anchorX;\r\n\t\t\t\t\t\tpositionY = c.anchorY;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase CURVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readCurveTo ();\r\n\t\t\t\t\t\tcontext.quadraticCurveTo (c.controlX - offsetX, c.controlY - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\r\n\t\t\t\t\t\tpositionX = c.anchorX;\r\n\t\t\t\t\t\tpositionY = c.anchorY;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_CIRCLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawCircle ();\r\n\t\t\t\t\t\tcontext.arc (c.x - offsetX, c.y - offsetY, c.radius, 0, Math.PI * 2, true);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_ELLIPSE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawEllipse ();\r\n\t\t\t\t\t\tvar x = c.x;\r\n\t\t\t\t\t\tvar y = c.y;\r\n\t\t\t\t\t\tvar width = c.width;\r\n\t\t\t\t\t\tvar height = c.height;\r\n\t\t\t\t\t\tx -= offsetX;\r\n\t\t\t\t\t\ty -= offsetY;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar kappa = .5522848,\r\n\t\t\t\t\t\t\tox = (width / 2) * kappa, // control point offset horizontal\r\n\t\t\t\t\t\t\toy = (height / 2) * kappa, // control point offset vertical\r\n\t\t\t\t\t\t\txe = x + width,           // x-end\r\n\t\t\t\t\t\t\tye = y + height,          // y-end\r\n\t\t\t\t\t\t\txm = x + width / 2,       // x-middle\r\n\t\t\t\t\t\t\tym = y + height / 2;      // y-middle\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//closePath (false);\r\n\t\t\t\t\t\t//beginPath ();\r\n\t\t\t\t\t\tcontext.moveTo (x, ym);\r\n\t\t\t\t\t\tcontext.bezierCurveTo (x, ym - oy, xm - ox, y, xm, y);\r\n\t\t\t\t\t\tcontext.bezierCurveTo (xm + ox, y, xe, ym - oy, xe, ym);\r\n\t\t\t\t\t\tcontext.bezierCurveTo (xe, ym + oy, xm + ox, ye, xm, ye);\r\n\t\t\t\t\t\tcontext.bezierCurveTo (xm - ox, ye, x, ym + oy, x, ym);\r\n\t\t\t\t\t\t//closePath (false);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_RECT:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawRect ();\r\n\t\t\t\t\t\tcontext.rect (c.x - offsetX, c.y - offsetY, c.width, c.height);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_ROUND_RECT:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawRoundRect ();\r\n\t\t\t\t\t\tdrawRoundRect (c.x - offsetX, c.y - offsetY, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineTo ();\r\n\t\t\t\t\t\tcontext.lineTo (c.x - offsetX, c.y - offsetY);\r\n\t\t\t\t\t\tpositionX = c.x;\r\n\t\t\t\t\t\tpositionY = c.y;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase MOVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readMoveTo ();\r\n\t\t\t\t\t\tcontext.moveTo (c.x - offsetX, c.y - offsetY);\r\n\t\t\t\t\t\tpositionX = c.x;\r\n\t\t\t\t\t\tpositionY = c.y;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata.skip (type);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdata.destroy ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n","package openfl._internal.renderer.canvas;\r\n\r\n\r\nimport openfl._internal.renderer.AbstractMaskManager;\r\nimport openfl.display.*;\r\nimport openfl.geom.*;\r\n\r\n@:access(openfl.display.DisplayObject)\r\n@:keep\r\n\r\n\r\nclass CanvasMaskManager extends AbstractMaskManager {\r\n\t\r\n\t\r\n\tpublic function new (renderSession:RenderSession) {\r\n\t\t\r\n\t\tsuper (renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function pushMask (mask:DisplayObject):Void {\r\n\t\t\r\n\t\tvar context = renderSession.context;\r\n\t\t\r\n\t\tcontext.save ();\r\n\t\t\r\n\t\t//var cacheAlpha = mask.__worldAlpha;\r\n\t\tvar transform = mask.__getWorldTransform ();\r\n\t\t\r\n\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n\t\t\r\n\t\tcontext.beginPath ();\r\n\t\tmask.__renderCanvasMask (renderSession);\r\n\t\t\r\n\t\tcontext.clip ();\r\n\t\t\r\n\t\t//mask.worldAlpha = cacheAlpha;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function pushRect (rect:Rectangle, transform:Matrix):Void {\r\n\t\t\r\n\t\tvar context = renderSession.context;\r\n\t\tcontext.save ();\r\n\t\t\r\n\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n\t\t\r\n\t\tcontext.beginPath ();\r\n\t\tcontext.rect (rect.x, rect.y, rect.width, rect.height);\r\n\t\tcontext.clip ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function popMask ():Void {\r\n\t\t\r\n\t\trenderSession.context.restore ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function popRect ():Void {\r\n\t\t\r\n\t\trenderSession.context.restore ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.canvas;\r\n\r\n\r\nimport lime.graphics.CanvasRenderContext;\r\nimport openfl._internal.renderer.AbstractRenderer;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.Stage;\r\n\r\n@:access(openfl.display.Stage)\r\n\r\n\r\nclass CanvasRenderer extends AbstractRenderer {\r\n\t\r\n\t\r\n\tprivate var context:CanvasRenderContext;\r\n\t\r\n\t\r\n\tpublic function new (width:Int, height:Int, context:CanvasRenderContext) {\r\n\t\t\r\n\t\tsuper (width, height);\r\n\t\t\r\n\t\tthis.context = context;\r\n\t\t\r\n\t\trenderSession = new RenderSession ();\r\n\t\trenderSession.context = context;\r\n\t\trenderSession.roundPixels = true ;\r\n\t\trenderSession.renderer = this;\r\n\t\t#if !neko\r\n\t\trenderSession.maskManager = new CanvasMaskManager(renderSession);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function render (stage:Stage):Void {\r\n\t\t\r\n\t\tcontext.setTransform (1, 0, 0, 1, 0, 0);\r\n\t\tcontext.globalAlpha = 1;\r\n\t\t\r\n\t\tif (!stage.__transparent && stage.__clearBeforeRender) {\r\n\t\t\t\r\n\t\t\tcontext.fillStyle = stage.__colorString;\r\n\t\t\tcontext.fillRect (0, 0, stage.stageWidth, stage.stageHeight);\r\n\t\t\t\r\n\t\t} else if (stage.__transparent && stage.__clearBeforeRender) {\r\n\t\t\t\r\n\t\t\tcontext.clearRect (0, 0, stage.stageWidth, stage.stageHeight);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tstage.__renderCanvas (renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.canvas;\r\n\r\n\r\nimport openfl.display.DisplayObject;\r\n\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.display.Graphics)\r\n\r\n\r\nclass CanvasShape {\r\n\t\r\n\t\r\n\tpublic static inline function render (shape:DisplayObject, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tif (!shape.__renderable || shape.__worldAlpha <= 0) return;\r\n\t\t\r\n\t\tvar graphics = shape.__graphics;\r\n\t\t\r\n\t\tif (graphics != null) {\r\n\t\t\t\r\n\t\t\t//#if old\r\n\t\t\tCanvasGraphics.render (graphics, renderSession);\r\n\t\t\t//#else\r\n\t\t\t//CanvasGraphics.renderObjectGraphics (shape, renderSession);\r\n\t\t\t//#end\r\n\t\t\t\r\n\t\t\tif (graphics.__canvas != null) {\r\n\t\t\t\t\r\n\t\t\t\tvar context = renderSession.context;\r\n\t\t\t\tvar scrollRect = shape.scrollRect;\r\n\t\t\t\t\r\n\t\t\t\tif (graphics.__bounds.width > 0 && graphics.__bounds.height > 0 && (scrollRect == null || (scrollRect.width > 0 && scrollRect.height > 0))) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (shape.__mask != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trenderSession.maskManager.pushMask (shape.__mask);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcontext.globalAlpha = shape.__worldAlpha;\r\n\t\t\t\t\tvar transform = shape.__renderTransform;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (renderSession.roundPixels) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, Std.int (transform.tx), Std.int (transform.ty));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (scrollRect == null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcontext.drawImage (graphics.__canvas, graphics.__bounds.x, graphics.__bounds.y);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcontext.drawImage (graphics.__canvas, Math.ceil (graphics.__bounds.x + scrollRect.x), Math.ceil (graphics.__bounds.y + scrollRect.y), scrollRect.width, scrollRect.height, Math.ceil (graphics.__bounds.x + scrollRect.x), Math.ceil (graphics.__bounds.y + scrollRect.y), scrollRect.width, scrollRect.height);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (shape.__mask != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trenderSession.maskManager.popMask ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.canvas;\r\n\r\n\r\nimport haxe.Utf8;\r\nimport openfl._internal.renderer.dom.DOMTextField;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl._internal.text.TextEngine;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.BitmapDataChannel;\r\nimport openfl.display.Graphics;\r\nimport openfl.events.Event;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.text.TextField;\r\nimport openfl.text.TextFieldAutoSize;\r\nimport openfl.text.TextFormat;\r\nimport openfl.text.TextFormatAlign;\r\nimport openfl.utils.ByteArray;\r\n\r\n#if (js && html5)\r\nimport js.html.CanvasRenderingContext2D;\r\nimport js.Browser;\r\nimport js.html.ImageData;\r\n#end\r\n\r\n@:access(openfl._internal.text.TextEngine)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.text.TextField)\r\n\r\n\r\nclass CanvasTextField {\r\n\t\r\n\t\r\n\t#if (js && html5)\r\n\tprivate static var context:CanvasRenderingContext2D;\r\n\t#end\r\n\t\r\n\t\r\n\tpublic static function disableInputMode (textEngine:TextEngine):Void {\r\n\t\t\r\n\t\t//#if (js && html5)\r\n\t\t//textEngine.this_onRemovedFromStage (null);\r\n\t\t//#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function enableInputMode (textEngine:TextEngine):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t\r\n\t\ttextEngine.__cursorPosition = -1;\r\n\t\t\r\n\t\tif (textEngine.__hiddenInput == null) {\r\n\t\t\t\r\n\t\t\ttextEngine.__hiddenInput = cast Browser.document.createElement ('input');\r\n\t\t\tvar hiddenInput = textEngine.__hiddenInput;\r\n\t\t\thiddenInput.type = 'text';\r\n\t\t\thiddenInput.style.position = 'absolute';\r\n\t\t\thiddenInput.style.opacity = \"0\";\r\n\t\t\thiddenInput.style.color = \"transparent\";\r\n\t\t\t\r\n\t\t\t// TODO: Position for mobile browsers better\r\n\t\t\t\r\n\t\t\thiddenInput.style.left = \"0px\";\r\n\t\t\thiddenInput.style.top = \"50%\";\r\n\t\t\t\r\n\t\t\tif (~/(iPad|iPhone|iPod).*OS 8_/gi.match (Browser.window.navigator.userAgent)) {\r\n\t\t\t\t\r\n\t\t\t\thiddenInput.style.fontSize = \"0px\";\r\n\t\t\t\thiddenInput.style.width = '0px';\r\n\t\t\t\thiddenInput.style.height = '0px';\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\thiddenInput.style.width = '1px';\r\n\t\t\t\thiddenInput.style.height = '1px';\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tuntyped (hiddenInput.style).pointerEvents = 'none';\r\n\t\t\thiddenInput.style.zIndex = \"-10000000\";\r\n\t\t\t\r\n\t\t\tif (textEngine.maxChars > 0) {\r\n\t\t\t\t\r\n\t\t\t\thiddenInput.maxLength = textEngine.maxChars;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tBrowser.document.body.appendChild (hiddenInput);\r\n\t\t\thiddenInput.value = textEngine.text;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t//if (textField.stage != null) {\r\n\t\t\t//\r\n\t\t\t//textEngine.this_onAddedToStage (null);\r\n\t\t\t//\r\n\t\t//} else {\r\n\t\t\t//\r\n\t\t\t//textField.addEventListener (Event.ADDED_TO_STAGE, textEngine.this_onAddedToStage);\r\n\t\t\t//textField.addEventListener (Event.REMOVED_FROM_STAGE, textEngine.this_onRemovedFromStage);\r\n\t\t\t//\r\n\t\t//}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static inline function render (textField:TextField, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t\r\n\t\tif (textField.__dirty) {\r\n\t\t\t\r\n\t\t\tvar textEngine = textField.__textEngine;\r\n\t\t\t\r\n\t\t\ttextField.__updateLayout ();\r\n\t\t\t\r\n\t\t\tif (((textEngine.text == null || textEngine.text == \"\") && !textEngine.background && !textEngine.border && !textEngine.__hasFocus) || ((textEngine.width <= 0 || textEngine.height <= 0) && textEngine.autoSize != TextFieldAutoSize.NONE)) {\r\n\t\t\t\t\r\n\t\t\t\ttextField.__graphics.__canvas = null;\r\n\t\t\t\ttextField.__graphics.__context = null;\r\n\t\t\t\ttextField.__graphics.__dirty = false;\r\n\t\t\t\ttextField.__dirty = false;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tvar bounds = textEngine.bounds;\r\n\t\t\t\t\r\n\t\t\t\tif (textField.__graphics == null || textField.__graphics.__canvas == null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textField.__graphics == null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttextField.__graphics = new Graphics ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\ttextField.__graphics.__canvas = cast Browser.document.createElement (\"canvas\");\r\n\t\t\t\t\ttextField.__graphics.__context = textField.__graphics.__canvas.getContext (\"2d\");\r\n\t\t\t\t\ttextField.__graphics.__bounds = new Rectangle (0, 0, bounds.width, bounds.height);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar graphics = textField.__graphics;\r\n\t\t\t\tcontext = graphics.__context;\r\n\t\t\t\t\r\n\t\t\t\tif ((textEngine.text != null && textEngine.text != \"\") || textEngine.__hasFocus) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar text = textEngine.text;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textEngine.displayAsPassword) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar length = text.length;\r\n\t\t\t\t\t\tvar mask = \"\";\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (i in 0...length) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tmask += \"*\";\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttext = mask;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tgraphics.__canvas.width = Math.ceil (bounds.width);\r\n\t\t\t\t\tgraphics.__canvas.height = Math.ceil (bounds.height);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textEngine.antiAliasType != ADVANCED || textEngine.gridFitType != PIXEL) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tuntyped (graphics.__context).mozImageSmoothingEnabled = true;\r\n\t\t\t\t\t\t//untyped (graphics.__context).webkitImageSmoothingEnabled = true;\r\n\t\t\t\t\t\tuntyped (graphics.__context).msImageSmoothingEnabled = true;\r\n\t\t\t\t\t\tuntyped (graphics.__context).imageSmoothingEnabled = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tuntyped (graphics.__context).mozImageSmoothingEnabled = false;\r\n\t\t\t\t\t\t//untyped (graphics.__context).webkitImageSmoothingEnabled = false;\r\n\t\t\t\t\t\tuntyped (graphics.__context).msImageSmoothingEnabled = false;\r\n\t\t\t\t\t\tuntyped (graphics.__context).imageSmoothingEnabled = false;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textEngine.border || textEngine.background) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcontext.rect (0.5, 0.5, bounds.width - 1, bounds.height - 1);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (textEngine.background) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcontext.fillStyle = \"#\" + StringTools.hex (textEngine.backgroundColor, 6);\r\n\t\t\t\t\t\t\tcontext.fill ();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (textEngine.border) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcontext.lineWidth = 1;\r\n\t\t\t\t\t\t\tcontext.strokeStyle = \"#\" + StringTools.hex (textEngine.borderColor, 6);\r\n\t\t\t\t\t\t\tcontext.stroke ();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcontext.textBaseline = \"top\";\r\n\t\t\t\t\t//context.textBaseline = \"alphabetic\";\r\n\t\t\t\t\tcontext.textAlign = \"start\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar scrollX = -textField.scrollH;\r\n\t\t\t\t\tvar scrollY = 0.0;\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (i in 0...textField.scrollV - 1) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tscrollY -= textEngine.lineHeights[i];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar advance;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Hack, baseline \"top\" is not consistent across browsers\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar offsetY = 0.0;\r\n\t\t\t\t\tvar applyHack = ~/(iPad|iPhone|iPod|Firefox)/g.match (Browser.window.navigator.userAgent);\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (group in textEngine.layoutGroups) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (group.lineIndex < textField.scrollV - 1) continue;\r\n\t\t\t\t\t\tif (group.lineIndex > textField.scrollV + textEngine.bottomScrollV - 2) break;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcontext.font = TextEngine.getFont (group.format);\r\n\t\t\t\t\t\tcontext.fillStyle = \"#\" + StringTools.hex (group.format.color, 6);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (applyHack) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\toffsetY = group.format.size * 0.185;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcontext.fillText (text.substring (group.startIndex, group.endIndex), group.offsetX + scrollX, group.offsetY + offsetY + scrollY);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (textField.__caretIndex > -1 && textEngine.selectable) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (textField.__selectionIndex == textField.__caretIndex) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (textField.__showCursor && group.startIndex <= textField.__caretIndex && group.endIndex >= textField.__caretIndex) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tadvance = 0.0;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tfor (i in 0...(textField.__caretIndex - group.startIndex)) {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif (group.advances.length <= i) break;\r\n\t\t\t\t\t\t\t\t\t\tadvance += group.advances[i];\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcontext.fillRect (group.offsetX + advance, group.offsetY, 1, group.height);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else if ((group.startIndex <= textField.__caretIndex && group.endIndex >= textField.__caretIndex) || (group.startIndex <= textField.__selectionIndex && group.endIndex >= textField.__selectionIndex)) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar selectionStart = Std.int (Math.min (textField.__selectionIndex, textField.__caretIndex));\r\n\t\t\t\t\t\t\t\tvar selectionEnd = Std.int (Math.max (textField.__selectionIndex, textField.__caretIndex));\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (group.startIndex > selectionStart) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tselectionStart = group.startIndex;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (group.endIndex < selectionEnd) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tselectionEnd = group.endIndex;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar start, end;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tstart = textField.getCharBoundaries (selectionStart);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (selectionEnd >= textEngine.text.length) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tend = textField.getCharBoundaries (textEngine.text.length - 1);\r\n\t\t\t\t\t\t\t\t\tend.x += end.width + 2;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tend = textField.getCharBoundaries (selectionEnd);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (start != null && end != null) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcontext.fillStyle = \"#000000\";\r\n\t\t\t\t\t\t\t\t\tcontext.fillRect (start.x, start.y, end.x - start.x, group.height);\r\n\t\t\t\t\t\t\t\t\tcontext.fillStyle = \"#FFFFFF\";\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// TODO: fill only once\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcontext.fillText (text.substring (selectionStart, selectionEnd), scrollX + start.x, group.offsetY + offsetY + scrollY);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tgraphics.__canvas.width = Math.ceil (bounds.width);\r\n\t\t\t\t\tgraphics.__canvas.height = Math.ceil (bounds.height);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textEngine.border || textEngine.background) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (textEngine.border) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcontext.rect (0.5, 0.5, bounds.width - 1, bounds.height - 1);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcontext.rect (0, 0, bounds.width, bounds.height);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (textEngine.background) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcontext.fillStyle = \"#\" + StringTools.hex (textEngine.backgroundColor, 6);\r\n\t\t\t\t\t\t\tcontext.fill ();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (textEngine.border) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcontext.lineWidth = 1;\r\n\t\t\t\t\t\t\tcontext.lineCap = \"square\";\r\n\t\t\t\t\t\t\tcontext.strokeStyle = \"#\" + StringTools.hex (textEngine.borderColor, 6);\r\n\t\t\t\t\t\t\tcontext.stroke ();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tgraphics.__bitmap = BitmapData.fromCanvas (textField.__graphics.__canvas);\r\n\t\t\t\ttextField.__dirty = false;\r\n\t\t\t\tgraphics.__dirty = false;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.console;\r\nimport openfl._internal.renderer.DrawCommandType;\r\n#if lime_console\r\n\r\n\r\nimport cpp.vm.WeakRef;\r\nimport cpp.Int8;\r\nimport cpp.UInt8;\r\nimport cpp.Float32;\r\nimport lime.graphics.console.IndexBuffer;\r\nimport lime.graphics.console.PointerUtil;\r\nimport lime.graphics.console.Primitive;\r\nimport lime.graphics.console.RenderState;\r\nimport lime.graphics.console.Shader;\r\nimport lime.graphics.console.Texture;\r\nimport lime.graphics.console.TextureData;\r\nimport lime.graphics.console.TextureFilter;\r\nimport lime.graphics.console.TextureFormat;\r\nimport lime.graphics.console.VertexDecl;\r\nimport lime.graphics.console.VertexBuffer;\r\nimport lime.graphics.ConsoleRenderContext;\r\nimport lime.graphics.Image;\r\nimport lime.math.Matrix4;\r\nimport lime.text.Glyph;\r\nimport lime.text.TextLayout;\r\nimport openfl._internal.renderer.cairo.CairoTextField;\r\nimport openfl._internal.renderer.AbstractRenderer;\r\nimport openfl.display.Bitmap;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.BlendMode;\r\nimport openfl.display.CapsStyle;\r\nimport openfl.display.DisplayObject;\r\nimport openfl.display.DisplayObjectContainer;\r\nimport openfl.display.Graphics;\r\nimport openfl.display.JointStyle;\r\nimport openfl.display.LineScaleMode;\r\nimport openfl.display.Shape;\r\nimport openfl.display.Sprite;\r\nimport openfl.display.Stage;\r\nimport openfl.display.Tilesheet;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.text.Font;\r\nimport openfl.text.TextField;\r\nimport openfl.text.TextFieldAutoSize;\r\nimport openfl.text.TextFormat;\r\nimport openfl.text.TextFormatAlign;\r\n\r\n\r\n@:access(openfl.display.Bitmap)\r\n@:access(openfl.display.BitmapData)\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.display.DisplayObjectContainer)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.display.Sprite)\r\n@:access(openfl.display.Stage)\r\n@:access(openfl.display.Tilesheet)\r\n@:access(openfl.geom.Rectangle)\r\n\r\n\r\nclass ConsoleRenderer extends AbstractRenderer {\r\n\t\r\n\r\n\tprivate var ctx:ConsoleRenderContext;\r\n\r\n\tprivate var defaultShader:Shader;\r\n\tprivate var fillShader:Shader;\r\n\r\n\t// TODO(james4k): move to a TransientBuffers class or something.. or move to C++\r\n\tprivate var indexBufferCounts:Array<Int> = [];\r\n\tprivate var indexBuffers:Array<IndexBuffer> = [];\r\n\tprivate var indexBufferAges:Array<Int8> = [];\r\n\tprivate var vertexBufferDecls:Array<VertexDecl> = [];\r\n\tprivate var vertexBufferCounts:Array<Int> = [];\r\n\tprivate var vertexBuffers:Array<VertexBuffer> = [];\r\n\tprivate var vertexBufferAges:Array<Int8> = [];\r\n\r\n\tprivate var textureImages:Array<WeakRef<Image>> = [];\r\n\tprivate var textures:Array<Texture> = [];\r\n\r\n\tprivate var viewProj:Matrix4;\r\n\tprivate var transform:Matrix4;\r\n\r\n\tprivate var hasFill = false;\r\n\tprivate var fillBitmap:BitmapData = null;\r\n\tprivate var fillBitmapSmooth:Bool = false;\r\n\tprivate var fillColor:Array<Float32> = [1, 1, 1, 1];\r\n\r\n\tprivate var hasStroke = false;\r\n\tprivate var lineWidth = 0.0;\r\n\tprivate var lineColor = 0;\r\n\tprivate var lineAlpha = 1.0;\r\n\tprivate var lineScaleMode = LineScaleMode.NORMAL;\r\n\tprivate var lineCaps = CapsStyle.ROUND;\r\n\tprivate var lineJoints = JointStyle.ROUND;\r\n\tprivate var lineMiter = 3.0;\r\n\r\n\tprivate var points = new Array<Float32> ();\r\n\r\n\tprivate var blendMode:BlendMode = NORMAL;\r\n\tprivate var clipRect:Rectangle = null;\r\n\r\n\t#if !console_pc\r\n\tprivate static var pixelOffsetX:Float = 0.0;\r\n\tprivate static var pixelOffsetY:Float = 0.0;\r\n\t#else\r\n\t// DirectX 9 texture sampling offset\r\n\tprivate static var pixelOffsetX:Float = 0.5;\r\n\tprivate static var pixelOffsetY:Float = 0.5;\r\n\t#end\r\n\r\n\t\r\n\tpublic function new (width:Int, height:Int, ctx:ConsoleRenderContext) {\r\n\r\n\t\tthis.ctx = ctx;\r\n\t\t\r\n\t\tsuper (width, height);\r\n\t\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t\tdefaultShader = ctx.lookupShader (\"openfl_default\");\r\n\t\tfillShader = ctx.lookupShader (\"openfl_fill\");\r\n\r\n\t}\r\n\r\n\r\n\tpublic function destroy ():Void {\r\n\r\n\t\tfor (ib in indexBuffers) {\r\n\t\t\tctx.destroyIndexBuffer (ib);\r\n\t\t}\r\n\r\n\t\tfor (vb in vertexBuffers) {\r\n\t\t\tctx.destroyVertexBuffer (vb);\r\n\t\t}\r\n\r\n\t\tfor (tex in textures) {\r\n\t\t\tctx.destroyTexture (tex);\r\n\t\t}\r\n\r\n\t\tindexBuffers = null;\r\n\t\tvertexBuffers = null;\r\n\t\ttextures = null;\r\n\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function render (stage:Stage):Void {\r\n\r\n\t\tviewProj = Matrix4.createOrtho (\r\n\t\t\t0 + pixelOffsetX,\r\n\t\t\twidth + pixelOffsetY,\r\n\t\t\theight + pixelOffsetX,\r\n\t\t\t0 + pixelOffsetY,\r\n\t\t\t-1, 1\r\n\t\t);\r\n\r\n\t\tctx.setViewport (0, 0, width, height);\r\n\t\tctx.clear (\r\n\t\t\tStd.int (stage.__colorSplit[0] * 0xff),\r\n\t\t\tStd.int (stage.__colorSplit[1] * 0xff),\r\n\t\t\tStd.int (stage.__colorSplit[2] * 0xff),\r\n\t\t\t0xff\r\n\t\t);\r\n\r\n\t\tctx.setRasterizerState (CULLNONE_SOLID);\r\n\t\tctx.setDepthStencilState (DEPTHTESTOFF_DEPTHWRITEOFF_STENCILOFF);\r\n\r\n\t\tblendMode = NORMAL;\r\n\t\tsetBlendState (blendMode);\r\n\r\n\t\trenderDisplayObject (stage);\r\n\r\n\t\tcollectTransientBuffers ();\r\n\t\tcollectTextures ();\r\n\r\n\t}\r\n\r\n\r\n\tpublic function setBlendState (b:BlendMode):Void {\r\n\r\n\t\t#if !final\r\n\t\tswitch (b) {\r\n\t\t\tcase NORMAL, ADD, MULTIPLY:\r\n\t\t\tdefault:\r\n\t\t\t\ttrace ('unsupported blend mode: $b');\r\n\t\t}\r\n\t\t#end\r\n\r\n\t\t// TODO(james4k): premultiplied alpha\r\n\t\tctx.setBlendState (switch (b) {\r\n\t\t\tcase ADD:       SRCALPHA_ONE_ONE_ZERO_RGB;\r\n\t\t\tcase MULTIPLY:  DESTCOLOR_INVSRCALPHA_ONE_ZERO_RGB;\r\n\t\t\tdefault:        SRCALPHA_INVSRCALPHA_ONE_ZERO_RGB;\r\n\t\t});\r\n\r\n\t}\r\n\r\n\r\n\tpublic override function resize (width:Int, height:Int):Void {\r\n\r\n\t\tsuper.resize (width, height);\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t}\r\n\r\n\t\r\n\tprivate function renderDisplayObject (object:DisplayObject) {\r\n\r\n\t\tif (!object.__renderable || object.__worldAlpha <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar prevClipRect = clipRect;\r\n\t\tif (object.scrollRect != null) {\r\n\t\t\tclipRect = new Rectangle (\r\n\t\t\t\tobject.scrollRect.x,\r\n\t\t\t\tobject.scrollRect.y,\r\n\t\t\t\tobject.scrollRect.width,\r\n\t\t\t\tobject.scrollRect.height\r\n\t\t\t);\r\n\t\t\tclipRect = clipRect.intersection (object.getBounds (null));\r\n\t\t\tclipRect.__transform (clipRect, object.__getWorldTransform ());\r\n\t\t}\r\n\r\n\t\tvar prevBlendMode = blendMode;\r\n\t\tvar objBlendMode:BlendMode = (object.blendMode == null) ? NORMAL : object.blendMode;\r\n\t\tif (objBlendMode != blendMode) {\r\n\t\t\tblendMode = objBlendMode;\r\n\t\t\tsetBlendState(objBlendMode);\r\n\t\t}\r\n\r\n\t\tif (Std.is (object, DisplayObjectContainer)) {\r\n\r\n\t\t\trenderDisplayObjectContainer (cast (object));\r\n\r\n\t\t} else if (Std.is (object, Bitmap)) {\r\n\r\n\t\t\tvar b:Bitmap = cast (object);\r\n\t\t\tdrawBitmapData (b, b.bitmapData);\r\n\r\n\t\t} else if (Std.is (object, Shape)) {\r\n\r\n\t\t\trenderShape_ (cast (object));\r\n\r\n\t\t} else if (Std.is (object, TextField)) {\r\n\r\n\t\t\trenderTextField (cast (object));\r\n\r\n\t\t}\r\n\r\n\t\tif (object.scrollRect != null) {\r\n\t\t\tclipRect = prevClipRect;\t\r\n\t\t}\r\n\t\tblendMode = prevBlendMode;\r\n\r\n\t}\r\n\r\n\r\n\tprivate function renderDisplayObjectContainer (object:DisplayObjectContainer) {\r\n\r\n\t\tif (Std.is (object, Sprite)) {\r\n\r\n\t\t\trenderSprite (cast (object));\r\n\t\t}\r\n\r\n\t\tfor (child in object.__children) {\r\n\r\n\t\t\trenderDisplayObject (child);\r\n\r\n\t\t}\r\n\r\n\t\tobject.__removedChildren = [];\r\n\r\n\t}\r\n\r\n\r\n\tprivate function setObjectTransform (object:DisplayObject) {\r\n\r\n\t\tvar matrix = object.__getWorldTransform ();\r\n\t\ttransform = Matrix4.createABCD (\r\n\t\t\tmatrix.a,\r\n\t\t\tmatrix.b,\r\n\t\t\tmatrix.c,\r\n\t\t\tmatrix.d,\r\n\t\t\tmatrix.tx,\r\n\t\t\tmatrix.ty\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n\t// transientIndexBuffer returns an IndexBuffer that is only valid for the frame\r\n\tprivate function transientIndexBuffer (indexCount:Int):IndexBuffer {\r\n \r\n\t\t// aligned indexCount to allow for more reusability\r\n\t\tvar align = 16;\r\n\t\tindexCount = (indexCount + align - 1) & ~(align - 1);\r\n\r\n\t\t// age of -1 to double buffer, to prevent race conditions\r\n\t\t// TODO(james4k): confirm this is necessary. dynamic vertex buffers are\r\n\t\t// double buffered internally, and dynamic index buffers are not..\r\n\t\tvar startAge = -1;\r\n\r\n\t\tfor (i in 0...indexBuffers.length) {\r\n\r\n\t\t\tif (indexBufferCounts[i] == indexCount &&\r\n\t\t\t\tindexBufferAges[i] > 0\r\n\t\t\t) {\r\n\t\t\t\tindexBufferAges[i] = startAge;\r\n\t\t\t\treturn indexBuffers[i];\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar ib = ctx.createIndexBuffer (null, indexCount);\t\r\n\r\n\t\tindexBufferCounts.push (indexCount);\r\n\t\tindexBuffers.push (ib);\r\n\t\tindexBufferAges.push (startAge);\r\n\r\n\t\treturn ib;\r\n\r\n\t}\r\n\r\n\r\n\t// transientVertexBuffer returns a VertexBuffer that is only valid for the frame\r\n\tprivate function transientVertexBuffer (decl:VertexDecl, vertexCount:Int):VertexBuffer {\r\n \r\n\t\t// aligned vertexCount to allow for more reusability\r\n\t\tvar align = 16;\r\n\t\tvertexCount = (vertexCount + align - 1) & ~(align - 1);\r\n\r\n\t\t// vertex buffers are double buffered internally, so can reuse every frame.\r\n\t\t// (compare to transientIndexBuffer)\r\n\t\tvar startAge = 0;\r\n\r\n\t\tfor (i in 0...vertexBuffers.length) {\r\n\r\n\t\t\tif (vertexBufferDecls[i] == decl &&\r\n\t\t\t\tvertexBufferCounts[i] == vertexCount &&\r\n\t\t\t\tvertexBufferAges[i] > 0\r\n\t\t\t) {\r\n\t\t\t\tvertexBufferAges[i] = startAge;\r\n\t\t\t\treturn vertexBuffers[i];\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar vb = ctx.createVertexBuffer (decl, vertexCount);\t\r\n\r\n\t\tvertexBufferDecls.push (decl);\r\n\t\tvertexBufferCounts.push (vertexCount);\r\n\t\tvertexBuffers.push (vb);\r\n\t\tvertexBufferAges.push (startAge);\r\n\r\n\t\treturn vb;\r\n\r\n\t}\r\n\r\n\r\n\tprivate function collectTransientBuffers ():Void {\r\n\r\n\t\tvar i = 0;\r\n\r\n\t\twhile (i < indexBufferAges.length) {\r\n\r\n\t\t\tif (indexBufferAges[i] > 1) {\r\n\r\n\t\t\t\tctx.destroyIndexBuffer (indexBuffers[i]);\r\n\r\n\t\t\t\tif (i == indexBufferCounts.length - 1) {\r\n\t\t\t\t\tindexBufferCounts.pop ();\r\n\t\t\t\t\tindexBuffers.pop ();\r\n\t\t\t\t\tindexBufferAges.pop ();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindexBufferCounts[i] = indexBufferCounts.pop ();\r\n\t\t\t\t\tindexBuffers[i] = indexBuffers.pop ();\r\n\t\t\t\t\tindexBufferAges[i] = indexBufferAges.pop ();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tindexBufferAges[i]++;\r\n\t\t\ti++;\r\n\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\r\n\t\twhile (i < vertexBufferAges.length) {\r\n\r\n\t\t\tif (vertexBufferAges[i] > 1) {\r\n\r\n\t\t\t\tctx.destroyVertexBuffer (vertexBuffers[i]);\r\n\r\n\t\t\t\tif (i == vertexBufferDecls.length - 1) {\r\n\t\t\t\t\tvertexBufferDecls.pop ();\r\n\t\t\t\t\tvertexBufferCounts.pop ();\r\n\t\t\t\t\tvertexBuffers.pop ();\r\n\t\t\t\t\tvertexBufferAges.pop ();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvertexBufferDecls[i] = vertexBufferDecls.pop ();\r\n\t\t\t\t\tvertexBufferCounts[i] = vertexBufferCounts.pop ();\r\n\t\t\t\t\tvertexBuffers[i] = vertexBuffers.pop ();\r\n\t\t\t\t\tvertexBufferAges[i] = vertexBufferAges.pop ();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvertexBufferAges[i]++;\r\n\t\t\ti++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tprivate function collectTextures ():Void {\r\n\r\n\t\tvar i = 0;\r\n\r\n\t\twhile (i < textureImages.length) {\r\n\r\n\t\t\tif (textureImages[i].get () == null) {\r\n\r\n\t\t\t\tctx.destroyTexture (textures[i]);\r\n\r\n\t\t\t\tif (i == textureImages.length - 1) {\r\n\t\t\t\t\ttextureImages.pop ();\r\n\t\t\t\t\ttextures.pop ();\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttextureImages[i] = textureImages.pop ();\r\n\t\t\t\t\ttextures[i] = textures.pop ();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ti++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tprivate function imageTexture (image:Image):Texture {\r\n\r\n\t\tfor (i in 0...textureImages.length) {\r\n\r\n\t\t\tif (textureImages[i].get () == image) {\r\n\r\n\t\t\t\tvar t = textures[i];\r\n\r\n\t\t\t\tif (image.dirty && image.buffer.data != null) {\r\n\r\n\t\t\t\t\tt.updateFromRGBA (\r\n\t\t\t\t\t\tcast (cpp.Pointer.arrayElem (image.buffer.data.buffer.getData (), 0))\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\timage.dirty = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn t;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar texture = ctx.createTexture (\r\n\t\t\tTextureFormat.ARGB,\r\n\t\t\timage.buffer.width,\r\n\t\t\timage.buffer.height,\r\n\t\t\tnull\r\n\t\t);\r\n\r\n\t\tif (image.buffer.data != null) {\r\n\r\n\t\t\ttexture.updateFromRGBA (\r\n\t\t\t\tcast (cpp.Pointer.arrayElem (image.buffer.data.buffer.getData (), 0))\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\timage.dirty = false;\r\n\r\n\t\ttextureImages.push (new WeakRef (image));\r\n\t\ttextures.push (texture);\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\r\n\tprivate function drawBitmapData (object:DisplayObject, bitmap:BitmapData) {\r\n\r\n\t\tsetObjectTransform (object);\r\n\t\ttransform.append (viewProj);\r\n\t\ttransform.transpose ();\r\n\r\n\t\tvar w = bitmap.width;\r\n\t\tvar h = bitmap.height;\r\n\t\tvar color:Array<cpp.Float32> = [1, 1, 1, object.__worldAlpha];\r\n\r\n\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.PositionTexcoordColor, 4);\r\n\t\tvar out = vertexBuffer.lock ();\r\n\t\tout.vec3 (0, 0, 0);\r\n\t\tout.vec2 (0, 0);\r\n\t\tout.color(0xff, 0xff, 0xff, 0xff);\r\n\t\tout.vec3 (0, h, 0);\r\n\t\tout.vec2 (0, 1);\r\n\t\tout.color(0xff, 0xff, 0xff, 0xff);\r\n\t\tout.vec3 (w, 0, 0);\r\n\t\tout.vec2 (1, 0);\r\n\t\tout.color(0xff, 0xff, 0xff, 0xff);\r\n\t\tout.vec3 (w, h, 0);\r\n\t\tout.vec2 (1, 1);\r\n\t\tout.color(0xff, 0xff, 0xff, 0xff);\r\n\t\tvertexBuffer.unlock ();\r\n\r\n\t\tvar texture = imageTexture (bitmap.image);\r\n\r\n\t\tctx.bindShader (defaultShader);\r\n\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\r\n\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (color, 0), 1);\r\n\t\tctx.setVertexSource (vertexBuffer);\r\n\t\tctx.setTexture (0, texture);\r\n\t\tctx.setTextureAddressMode (0, Clamp, Clamp);\r\n\t\tctx.draw (Primitive.TriangleStrip, 0, 2);\r\n\r\n\t}\r\n\r\n\r\n\tprivate function renderShape_ (shape:Shape) {\r\n\r\n\t\tvar graphics = shape.__graphics;\r\n\t\t//var dirty = graphics.__dirty;\r\n\t\tif (graphics.__commands.length == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdrawNaive (shape, graphics);\r\n\r\n\t}\r\n\r\n\r\n\tprivate function renderSprite (sprite:Sprite) {\r\n\r\n\t\tif (sprite.__graphics == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdraw (sprite);\r\n\r\n\t}\r\n\t\r\n\t\r\n\tprivate function renderTextField (tf:TextField) {\r\n\t\t\r\n\t\tCairoTextField.render (tf, null);\r\n\r\n\t\tif (tf.__graphics == null || tf.__graphics.__bitmap == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdrawBitmapData (tf, tf.__graphics.__bitmap);\r\n\r\n\t}\r\n\r\n\r\n\tprivate function draw (object:DisplayObject) {\r\n\r\n\t\tvar graphics = object.__graphics;\r\n\t\tvar dirty = graphics.__dirty;\r\n\t\tif (graphics.__commands.length == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdrawNaive (object, graphics);\r\n\r\n/*\r\n\t\tif (dirty) {\r\n\r\n\t\t\t//update (object, graphics);\r\n\r\n\t\t}\r\n\r\n\t\tif (object.cacheAsBitmap) {\r\n\r\n\t\t\ttrace (\"not implemented\");\r\n\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t//submit ();\r\n\r\n\t\t}\r\n*/\r\n\r\n\t}\r\n\r\n\r\n\tprivate function closePath (object:DisplayObject) {\r\n\r\n\t\tdrawFill (object);\r\n\t\tdrawStroke ();\r\n\r\n\t\tcpp.NativeArray.setSize (points, 0);\r\n\r\n\t}\r\n\r\n\t\r\n\t// div divides an integer by an integer using integer math.\r\n\t// Normally in haxe, Int divided by Int returns Float. Can't seem to be\r\n\t// avoided even with cast() or Std.int()\r\n\tprivate inline function div (a:Int, b:Int):Int {\r\n\r\n\t\treturn untyped __cpp__ (\"{0} / {1}\", a, b);\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate function drawFill (object:DisplayObject) {\r\n\r\n\t\t// need minimum of 3 points\r\n\t\tif (!hasFill || points.length < 6) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//var triangles = new Array<Int> ();\r\n\t\t//PolyK.triangulate (triangles, points);\r\n\r\n\t\tsetObjectTransform (object);\r\n\t\ttransform.append (viewProj);\r\n\t\ttransform.transpose ();\r\n\r\n\t\tvar vertexCount = div (points.length, 2);\r\n\t\tvar indexCount = (vertexCount - 2) * 3;\r\n\r\n\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.Position, vertexCount);\t\r\n\t\tvar indexBuffer = transientIndexBuffer (indexCount);\r\n\r\n\t\tvar out = vertexBuffer.lock ();\r\n\t\tfor (i in 0...vertexCount) {\r\n\t\t\tout.vec3 (points[i*2 + 0], points[i*2 + 1], 0);\r\n\t\t}\r\n\t\tvertexBuffer.unlock ();\r\n\r\n\t\tvar unsafeIndices = indexBuffer.lock ();\r\n\t\tfor (i in 0...vertexCount-2) {\r\n\t\t\tunsafeIndices[i*3 + 0] = 0;\r\n\t\t\tunsafeIndices[i*3 + 1] = i+1;\r\n\t\t\tunsafeIndices[i*3 + 2] = i+2;\r\n\t\t}\r\n\t\tindexBuffer.unlock ();\r\n\r\n\t\tctx.bindShader (fillShader);\r\n\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\r\n\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (fillColor, 0), 1);\r\n\t\tctx.setVertexSource (vertexBuffer);\r\n\t\t//ctx.draw (Primitive.Triangle, 0, vertexCount - 2);\r\n\t\tctx.setIndexSource (indexBuffer);\r\n\t\tctx.drawIndexed (Primitive.Triangle, vertexCount, 0, div (indexCount, 3));\r\n\r\n\t}\r\n\r\n\r\n\tprivate function drawStroke () {\r\n\r\n\t\tif (!hasStroke) {\r\n\t\t\treturn;\r\n\t\t}\t\r\n\r\n\t}\r\n\r\n\r\n\tprivate function drawNaive (object:DisplayObject, graphics:Graphics) {\r\n\r\n\t\tgraphics.__dirty = false;\r\n\r\n\t\thasFill = false;\r\n\t\thasStroke = false;\r\n\t\tfillColor[0] = 1.0;\r\n\t\tfillColor[1] = 1.0;\r\n\t\tfillColor[2] = 1.0;\r\n\t\tfillColor[3] = object.__worldAlpha;\r\n\r\n\t\t// TODO(james4k): warn on unimplemented WindingRules\r\n\r\n\t\tif (clipRect != null) {\r\n\r\n\t\t\tviewProj = Matrix4.createOrtho (\r\n\t\t\t\tMath.floor (clipRect.x) + pixelOffsetX,\r\n\t\t\t\tMath.floor (clipRect.x) + Math.ceil (clipRect.width) + pixelOffsetX,\r\n\t\t\t\tMath.floor (clipRect.y) + Math.ceil (clipRect.height) + pixelOffsetY,\r\n\t\t\t\tMath.floor (clipRect.y) + pixelOffsetY,\r\n\t\t\t\t-1, 1\r\n\t\t\t);\r\n\r\n\t\t\tvar viewport = new Rectangle (0, 0, this.width, this.height);\r\n\t\t\tviewport = viewport.intersection (clipRect);\r\n\t\t\tctx.setViewport (\r\n\t\t\t\tcast (viewport.x),\r\n\t\t\t\tcast (viewport.y),\r\n\t\t\t\tcast (Math.ceil (viewport.width)),\r\n\t\t\t\tcast (Math.ceil (viewport.height))\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tvar r = new DrawCommandReader (graphics.__commands);\r\n\r\n\t\tfor (type in graphics.__commands.types) {\r\n\r\n\t\t\tswitch (type) {\r\n\r\n\t\t\t\t//case BeginBitmapFill (bitmap, matrix, repeat, smooth):\r\n\t\t\t\tcase BEGIN_BITMAP_FILL:\r\n\r\n\t\t\t\t\tvar cmd = r.readBeginBitmapFill ();\r\n\r\n\t\t\t\t\thasFill = true;\r\n\t\t\t\t\tfillBitmap = cmd.bitmap;\r\n\t\t\t\t\tfillBitmapSmooth = cmd.smooth;\r\n\t\t\t\t\tfillColor[0] = 1.0;\r\n\t\t\t\t\tfillColor[1] = 1.0;\r\n\t\t\t\t\tfillColor[2] = 1.0;\r\n\t\t\t\t\tfillColor[3] = object.__worldAlpha;\r\n\r\n\t\t\t\t\t// TODO(james4k): deal with matrix, repeat\r\n\r\n\t\t\t\t//case BeginFill (rgb, alpha):\r\n\t\t\t\tcase BEGIN_FILL:\r\n\r\n\t\t\t\t\t// TODO(james4k): color transform. no sense doing that in shader for fill, right?\r\n\r\n\t\t\t\t\tvar cmd = r.readBeginFill ();\r\n\r\n\t\t\t\t\thasFill = true;\r\n\t\t\t\t\tfillBitmap = null;\r\n\t\t\t\t\tfillColor[0] = ((cmd.color >> 16) & 0xFF) / 255.0;\r\n\t\t\t\t\tfillColor[1] = ((cmd.color >> 8) & 0xFF) / 255.0;\r\n\t\t\t\t\tfillColor[2] = ((cmd.color >> 0) & 0xFF) / 255.0;\r\n\t\t\t\t\tfillColor[3] = cmd.alpha * object.__worldAlpha;\r\n\r\n\t\t\t\t// LineStyle (thickness:Null<Float>, color:Null<Int>, alpha:Null<Float>, pixelHinting:Null<Bool>,\r\n\t\t\t\t//            scaleMode:LineScaleMode, caps:CapsStyle, joints:JointStyle, miterLimit:Null<Float>);\r\n\t\t\t\t//case LineStyle (thickness, color, alpha, pixelHinting, scaleMode, caps, joints, miterLimit):\r\n\t\t\t\tcase LINE_STYLE:\r\n\r\n\t\t\t\t\t//closePath (object);\r\n\r\n\t\t\t\t\tvar cmd = r.readLineStyle ();\r\n\r\n\t\t\t\t\tif (cmd.thickness == null) {\r\n\t\t\t\t\t\thasStroke = false;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thasStroke = true;\r\n\r\n\t\t\t\t\tlineWidth = cmd.thickness;\r\n\t\t\t\t\tlineColor = cmd.color;\r\n\t\t\t\t\tlineAlpha = cmd.alpha;\r\n\t\t\t\t\tlineScaleMode = cmd.scaleMode;\r\n\t\t\t\t\tlineCaps = cmd.caps;\r\n\t\t\t\t\tlineJoints = cmd.joints;\r\n\t\t\t\t\tlineMiter = cmd.miterLimit;\r\n\t\t\t\t\t// TODO(james4k): pixelHinting\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t//case LineTo (x, y):\r\n\t\t\t\tcase LINE_TO:\r\n\r\n\t\t\t\t\tvar cmd = r.readLineTo ();\r\n\r\n\t\t\t\t\tpoints.push (cmd.x);\r\n\t\t\t\t\tpoints.push (cmd.y);\r\n\r\n\t\t\t\t//case MoveTo (x, y):\r\n\t\t\t\tcase MOVE_TO:\r\n\r\n\t\t\t\t\tvar cmd = r.readMoveTo ();\r\n\r\n\t\t\t\t\tclosePath (object);\r\n\r\n\t\t\t\t\tpoints.push (cmd.x);\r\n\t\t\t\t\tpoints.push (cmd.y);\r\n\r\n\t\t\t\t//case EndFill:\r\n\t\t\t\tcase END_FILL:\r\n\r\n\t\t\t\t\tvar cmd = r.readEndFill ();\r\n\r\n\t\t\t\t\tclosePath (object);\r\n\r\n\t\t\t\t\thasFill = false;\r\n\t\t\t\t\thasStroke = false;\r\n\t\t\t\t\tfillBitmap = null;\r\n\t\t\t\t\tfillColor[0] = 1.0;\r\n\t\t\t\t\tfillColor[1] = 1.0;\r\n\t\t\t\t\tfillColor[2] = 1.0;\r\n\t\t\t\t\tfillColor[3] = object.__worldAlpha;\r\n\r\n\t\t\t\t//case DrawCircle (x, y, radius):\r\n\t\t\t\tcase DRAW_CIRCLE:\r\n\r\n\t\t\t\t\t// TODO(james4k): replace with 2? curveTo calls\r\n\r\n\t\t\t\t\tvar cmd = r.readDrawCircle ();\r\n\r\n\t\t\t\t\tdrawEllipse (object, cmd.x, cmd.y, cmd.radius, cmd.radius);\r\n\r\n\t\t\t\t//case DrawEllipse (x, y, width, height):\r\n\t\t\t\tcase DRAW_ELLIPSE:\r\n\r\n\t\t\t\t\t// TODO(james4k): replace with 2? curveTo calls\r\n\r\n\t\t\t\t\tvar cmd = r.readDrawEllipse ();\r\n\r\n\t\t\t\t\tdrawEllipse (object, cmd.x + cmd.width*0.5, cmd.y + cmd.height*0.5, cmd.width*0.5, cmd.height*0.5);\r\n\r\n\t\t\t\t//case DrawRect (x, y, width, height):\r\n\t\t\t\tcase DRAW_RECT:\r\n\r\n\t\t\t\t\tvar cmd = r.readDrawRect ();\r\n\r\n\t\t\t\t\tif (!hasFill || fillBitmap != null) {\r\n\t\t\t\t\t\t// TODO(james4k): fillBitmap, stroke\r\n\t\t\t\t\t\ttrace (\"unsupported DrawRect\");\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// TODO(james4k): replace moveTo/lineTo calls\r\n\r\n\t\t\t\t\tsetObjectTransform (object);\r\n\t\t\t\t\ttransform.append (viewProj);\r\n\t\t\t\t\ttransform.transpose ();\r\n\r\n\t\t\t\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.Position, 4);\t\r\n\t\t\t\t\tvar out = vertexBuffer.lock ();\r\n\t\t\t\t\tout.vec3 (cmd.x, cmd.y, 0);\r\n\t\t\t\t\tout.vec3 (cmd.x, cmd.y + cmd.height, 0);\r\n\t\t\t\t\tout.vec3 (cmd.x + cmd.width, cmd.y, 0);\r\n\t\t\t\t\tout.vec3 (cmd.x + cmd.width, cmd.y + cmd.height, 0);\r\n\t\t\t\t\tvertexBuffer.unlock ();\r\n\r\n\t\t\t\t\tctx.bindShader (fillShader);\r\n\t\t\t\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\r\n\t\t\t\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (fillColor, 0), 1);\r\n\t\t\t\t\tctx.setVertexSource (vertexBuffer);\r\n\t\t\t\t\tctx.draw (Primitive.TriangleStrip, 0, 2);\r\n\r\n\t\t\t\t//case DrawRoundRect (x, y, width, height, rx, ry):\r\n\t\t\t\tcase DRAW_ROUND_RECT:\r\n\r\n\t\t\t\t\tvar cmd = r.readDrawRoundRect ();\r\n\r\n\t\t\t\t\tif (!hasFill || fillBitmap != null) {\r\n\t\t\t\t\t\t// TODO(james4k): fillBitmap, stroke\r\n\t\t\t\t\t\ttrace (\"unsupported DrawRoundRect\");\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// TODO(james4k): replace with lineTo/curveTo calls\r\n\r\n\t\t\t\t\tvar rx = cmd.ellipseWidth * 1.0;\r\n\t\t\t\t\tvar ry = cmd.ellipseHeight * 1.0;\r\n\r\n\t\t\t\t\tif (ry == -1) ry = rx;\r\n\t\t\t\t\t\r\n\t\t\t\t\trx *= 0.5;\r\n\t\t\t\t\try *= 0.5;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (rx > cmd.width / 2) rx = cmd.width / 2;\r\n\t\t\t\t\tif (ry > cmd.height / 2) ry = cmd.height / 2;\r\n\r\n\t\t\t\t\tvar points = new Array<Float> ();\r\n\t\t\t\t\tGraphicsPaths.roundRectangle (points, cmd.x, cmd.y, cmd.width, cmd.height, rx, ry);\r\n\r\n\t\t\t\t\tif (hasFill) {\r\n\r\n\t\t\t\t\t\tvar triangles = new Array<Int> ();\r\n\t\t\t\t\t\tPolyK.triangulate (triangles, points);\r\n\r\n\t\t\t\t\t\tsetObjectTransform (object);\r\n\t\t\t\t\t\ttransform.append (viewProj);\r\n\t\t\t\t\t\ttransform.transpose ();\r\n\r\n\t\t\t\t\t\tvar vertexCount = div (points.length, 2);\r\n\t\t\t\t\t\tvar indexCount = triangles.length;\r\n\r\n\t\t\t\t\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.Position, vertexCount);\t\r\n\t\t\t\t\t\tvar indexBuffer = transientIndexBuffer (indexCount);\r\n\r\n\t\t\t\t\t\tvar out = vertexBuffer.lock ();\r\n\t\t\t\t\t\tfor (i in 0...div (points.length, 2)) {\r\n\t\t\t\t\t\t\tout.vec3 (points[i*2], points[i*2 + 1], 0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvertexBuffer.unlock ();\r\n\r\n\t\t\t\t\t\tvar unsafeIndices = indexBuffer.lock ();\r\n\t\t\t\t\t\tfor (i in 0...triangles.length) {\r\n\t\t\t\t\t\t\tunsafeIndices[i] = triangles[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tindexBuffer.unlock ();\r\n\r\n\t\t\t\t\t\tctx.bindShader (fillShader);\r\n\t\t\t\t\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\r\n\t\t\t\t\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (fillColor, 0), 1);\r\n\t\t\t\t\t\tctx.setVertexSource (vertexBuffer);\r\n\t\t\t\t\t\tctx.setIndexSource (indexBuffer);\r\n\t\t\t\t\t\tctx.drawIndexed (Primitive.Triangle, vertexCount, 0, div (triangles.length, 3));\r\n\t\t\t\t\t\t//ctx.draw (Primitive.TriangleStrip, 0, div (triangles.length, 3));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t//case DrawTiles (sheet, tileData, smooth, flags, count):\r\n\t\t\t\tcase DRAW_TILES:\r\n\r\n\t\t\t\t\tvar cmd = r.readDrawTiles ();\r\n\r\n\t\t\t\t\tvar useScale = (cmd.flags & Tilesheet.TILE_SCALE) != 0;\r\n\t\t\t\t\tvar useRotation = (cmd.flags & Tilesheet.TILE_ROTATION) != 0;\r\n\t\t\t\t\tvar useTransform = (cmd.flags & Tilesheet.TILE_TRANS_2x2) != 0;\r\n\t\t\t\t\tvar useRGB = (cmd.flags & Tilesheet.TILE_RGB) != 0;\r\n\t\t\t\t\tvar useAlpha = (cmd.flags & Tilesheet.TILE_ALPHA) != 0;\r\n\t\t\t\t\tvar useRect = (cmd.flags & Tilesheet.TILE_RECT) != 0;\r\n\t\t\t\t\tvar useOrigin = (cmd.flags & Tilesheet.TILE_ORIGIN) != 0;\r\n\r\n\t\t\t\t\tvar blendMode:BlendMode = switch(cmd.flags & 0xF0000) {\r\n\t\t\t\t\t\tcase Tilesheet.TILE_BLEND_ADD:\t\tADD;\r\n\t\t\t\t\t\tcase Tilesheet.TILE_BLEND_MULTIPLY:\tMULTIPLY;\r\n\t\t\t\t\t\tcase Tilesheet.TILE_BLEND_SCREEN:\tSCREEN;\r\n\t\t\t\t\t\tcase _: switch(cmd.flags & 0xF00000) {\r\n\t\t\t\t\t\t\tcase Tilesheet.TILE_BLEND_DARKEN:         DARKEN;\r\n\t\t\t\t\t\t\tcase Tilesheet.TILE_BLEND_LIGHTEN:        LIGHTEN;\r\n\t\t\t\t\t\t\tcase Tilesheet.TILE_BLEND_OVERLAY:        OVERLAY;\r\n\t\t\t\t\t\t\tcase Tilesheet.TILE_BLEND_HARDLIGHT:      HARDLIGHT;\r\n\t\t\t\t\t\t\tcase _: switch(cmd.flags & 0xF000000) {\r\n\t\t\t\t\t\t\t\tcase Tilesheet.TILE_BLEND_DIFFERENCE: DIFFERENCE;\r\n\t\t\t\t\t\t\t\tcase Tilesheet.TILE_BLEND_INVERT:     INVERT;\r\n\t\t\t\t\t\t\t\tcase _:                               NORMAL;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (useTransform) {\r\n\t\t\t\t\t\tuseScale = false;\r\n\t\t\t\t\t\tuseRotation = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar scaleIndex = 0;\r\n\t\t\t\t\tvar rotationIndex = 0;\r\n\t\t\t\t\tvar transformIndex = 0;\r\n\t\t\t\t\tvar rgbIndex = 0;\r\n\t\t\t\t\tvar alphaIndex = 0;\r\n\r\n\t\t\t\t\tvar stride = 3;\r\n\t\t\t\t\tif (useRect) {\r\n\t\t\t\t\t\tstride = useOrigin ? 8 : 6;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (useScale) {\r\n\t\t\t\t\t\tscaleIndex = stride;\r\n\t\t\t\t\t\tstride += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (useRotation) {\r\n\t\t\t\t\t\trotationIndex = stride;\r\n\t\t\t\t\t\tstride += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (useTransform) {\r\n\t\t\t\t\t\ttransformIndex = stride;\r\n\t\t\t\t\t\tstride += 4;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (useRGB) {\r\n\t\t\t\t\t\trgbIndex = stride;\r\n\t\t\t\t\t\tstride += 3;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (useAlpha) {\r\n\t\t\t\t\t\talphaIndex = stride;\r\n\t\t\t\t\t\tstride += 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar totalCount = cmd.tileData.length;\r\n\t\t\t\t\tif (cmd.count >= 0 && totalCount > cmd.count) {\r\n\t\t\t\t\t\ttotalCount = cmd.count;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar itemCount = div (totalCount, stride);\r\n\t\t\t\t\tif (itemCount <= 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar tileID = -1;\r\n\t\t\t\t\tvar rect:Rectangle = cmd.sheet.__rectTile;\r\n\t\t\t\t\tvar tileUV:Rectangle = cmd.sheet.__rectUV;\r\n\t\t\t\t\tvar center:Point = cmd.sheet.__point;\r\n\r\n\t\t\t\t\tvar vertexCount = itemCount * 4;\r\n\t\t\t\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.PositionTexcoordColor, vertexCount);\t\r\n\t\t\t\t\tvar out = vertexBuffer.lock ();\r\n\r\n\t\t\t\t\tfor (itemIndex in 0...itemCount) {\r\n\r\n\t\t\t\t\t\tvar index = itemIndex * stride;\r\n\r\n\t\t\t\t\t\tvar x = cmd.tileData[index + 0];\r\n\t\t\t\t\t\tvar y = cmd.tileData[index + 1];\r\n\r\n\t\t\t\t\t\tif (useRect) {\r\n\r\n\t\t\t\t\t\t\ttileID = -1;\r\n\r\n\t\t\t\t\t\t\trect.x = cmd.tileData[index + 2];\r\n\t\t\t\t\t\t\trect.y = cmd.tileData[index + 3];\r\n\t\t\t\t\t\t\trect.width = cmd.tileData[index + 4];\r\n\t\t\t\t\t\t\trect.height = cmd.tileData[index + 5];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (useOrigin) {\r\n\t\t\t\t\t\t\t\tcenter.x = cmd.tileData[index + 6];\r\n\t\t\t\t\t\t\t\tcenter.y = cmd.tileData[index + 7];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcenter.setTo(0, 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttileUV.setTo(\r\n\t\t\t\t\t\t\t\trect.left / cmd.sheet.__bitmap.width,\r\n\t\t\t\t\t\t\t\trect.top / cmd.sheet.__bitmap.height,\r\n\t\t\t\t\t\t\t\trect.right / cmd.sheet.__bitmap.width,\r\n\t\t\t\t\t\t\t\trect.bottom / cmd.sheet.__bitmap.height\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttileID = Std.int (cmd.tileData[index + 2]);\r\n\t\t\t\t\t\t\trect = cmd.sheet.getTileRect(tileID);\t\r\n\t\t\t\t\t\t\tcenter = cmd.sheet.getTileCenter(tileID);\t\r\n\t\t\t\t\t\t\ttileUV = cmd.sheet.getTileUVs(tileID);\t\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (rect == null || rect.width <= 0 || rect.height <= 0 || center == null) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\t\r\n\r\n\t\t\t\t\t\tvar alpha = object.__worldAlpha;\r\n\t\t\t\t\t\tvar red:UInt8 = 255, green:UInt8 = 255, blue:UInt8 = 255;\r\n\t\t\t\t\t\tvar scale = 1.0;\r\n\t\t\t\t\t\tvar rotation = 0.0;\r\n\t\t\t\t\t\tvar a = 0.0, b = 0.0, c = 0.0, d = 0.0, tx = 0.0, ty = 0.0;\r\n\r\n\t\t\t\t\t\tif (useRGB) {\r\n\t\t\t\t\t\t\t// TODO(james4k): premultiplied alpha?\r\n\t\t\t\t\t\t\tred   = Std.int (cmd.tileData[index + rgbIndex + 0] * 255);\r\n\t\t\t\t\t\t\tgreen = Std.int (cmd.tileData[index + rgbIndex + 1] * 255);\r\n\t\t\t\t\t\t\tblue  = Std.int (cmd.tileData[index + rgbIndex + 2] * 255);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (useAlpha) {\r\n\t\t\t\t\t\t\talpha *= cmd.tileData[index + alphaIndex];\t\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (useScale) {\r\n\t\t\t\t\t\t\tscale = cmd.tileData[index + scaleIndex];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (useRotation) {\r\n\t\t\t\t\t\t\trotation = cmd.tileData[index + rotationIndex];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (useTransform) {\r\n\t\t\t\t\t\t\ta = cmd.tileData[index + transformIndex + 0];\r\n\t\t\t\t\t\t\tb = cmd.tileData[index + transformIndex + 1];\r\n\t\t\t\t\t\t\tc = cmd.tileData[index + transformIndex + 2];\r\n\t\t\t\t\t\t\td = cmd.tileData[index + transformIndex + 3];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ta = scale * Math.cos (rotation);\r\n\t\t\t\t\t\t\tb = scale * Math.sin (rotation);\r\n\t\t\t\t\t\t\tc = -b;\r\n\t\t\t\t\t\t\td = a;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar tx = x - (center.x * a + center.y * c);\r\n\t\t\t\t\t\tvar ty = y - (center.x * b + center.y * d);\r\n\r\n\t\t\t\t\t\tvar w0 = rect.width * 1.0;\r\n\t\t\t\t\t\tvar w1 = 0.0;\r\n\t\t\t\t\t\tvar h0 = rect.height * 1.0;\r\n\t\t\t\t\t\tvar h1 = 0.0;\r\n\r\n\t\t\t\t\t\t// tileUV.width, height are actually x1, y1\r\n\r\n\t\t\t\t\t\tout.vec3 (a*w1 + c*h1 + tx, d*h1 + b*w1 + ty, 0);\r\n\t\t\t\t\t\tout.vec2 (tileUV.x, tileUV.y);\r\n\t\t\t\t\t\tout.color (red, green, blue, Std.int(alpha * 0xff));\r\n\r\n\t\t\t\t\t\tout.vec3 (a*w0 + c*h1 + tx, d*h1 + b*w0 + ty, 0);\r\n\t\t\t\t\t\tout.vec2 (tileUV.width, tileUV.y);\r\n\t\t\t\t\t\tout.color (red, green, blue, Std.int(alpha * 0xff));\r\n\r\n\t\t\t\t\t\tout.vec3 (a*w0 + c*h0 + tx, d*h0 + b*w0 + ty, 0);\r\n\t\t\t\t\t\tout.vec2 (tileUV.width, tileUV.height);\r\n\t\t\t\t\t\tout.color (red, green, blue, Std.int(alpha * 0xff));\r\n\r\n\t\t\t\t\t\tout.vec3 (a*w1 + c*h0 + tx, d*h0 + b*w1 + ty, 0);\r\n\t\t\t\t\t\tout.vec2 (tileUV.x, tileUV.height);\r\n\t\t\t\t\t\tout.color (red, green, blue, Std.int(alpha * 0xff));\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvertexBuffer.unlock ();\r\n\r\n\t\t\t\t\tvar indexBuffer = transientIndexBuffer (itemCount * 6);\r\n\t\t\t\t\tvar unsafeIndices = indexBuffer.lock ();\r\n\t\t\t\t\tfor (i in 0...itemCount) {\r\n\t\t\t\t\t\tunsafeIndices[i*6 + 0] = i*4 + 0;\r\n\t\t\t\t\t\tunsafeIndices[i*6 + 1] = i*4 + 1;\r\n\t\t\t\t\t\tunsafeIndices[i*6 + 2] = i*4 + 2;\r\n\t\t\t\t\t\tunsafeIndices[i*6 + 3] = i*4 + 0;\r\n\t\t\t\t\t\tunsafeIndices[i*6 + 4] = i*4 + 3;\r\n\t\t\t\t\t\tunsafeIndices[i*6 + 5] = i*4 + 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tindexBuffer.unlock ();\r\n\r\n\t\t\t\t\tsetObjectTransform (object);\r\n\t\t\t\t\ttransform.append (viewProj);\r\n\t\t\t\t\ttransform.transpose ();\r\n\r\n\t\t\t\t\tvar texture = imageTexture (cmd.sheet.__bitmap.image);\r\n\r\n\t\t\t\t\tsetBlendState (blendMode);\r\n\t\t\t\t\tctx.bindShader (defaultShader);\r\n\t\t\t\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\r\n\t\t\t\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (fillColor, 0), 1);\r\n\t\t\t\t\tctx.setVertexSource (vertexBuffer);\r\n\t\t\t\t\tctx.setIndexSource (indexBuffer);\r\n\t\t\t\t\tctx.setTexture (0, texture);\r\n\t\t\t\t\tctx.setTextureAddressMode (0, Clamp, Clamp);\r\n\t\t\t\t\tif (cmd.smooth) {\r\n\t\t\t\t\t\tctx.setTextureFilter (0, TextureFilter.Linear, TextureFilter.Linear);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tctx.setTextureFilter (0, TextureFilter.Nearest, TextureFilter.Nearest);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tctx.drawIndexed (Primitive.Triangle, vertexCount, 0, itemCount * 2);\r\n\t\t\t\t\tsetBlendState (this.blendMode);\r\n\r\n\t\t\t\t//case DrawTriangles (vertices, indices, uvtData, culling, colors, blendMode):\r\n\t\t\t\tcase DRAW_TRIANGLES:\r\n\r\n\t\t\t\t\tvar cmd = r.readDrawTriangles ();\r\n\r\n\t\t\t\t\tif (!hasFill || fillBitmap == null) {\r\n\t\t\t\t\t\ttrace (\"DrawTriangles without bitmap fill\");\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (cmd.vertices.length <= 0 || cmd.indices.length <= 0) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsetObjectTransform (object);\r\n\t\t\t\t\ttransform.append (viewProj);\r\n\t\t\t\t\ttransform.transpose ();\r\n\r\n\t\t\t\t\tvar texture = imageTexture (fillBitmap.image);\r\n\r\n\t\t\t\t\tvar vertexCount = div (cmd.vertices.length, 2);\r\n\t\t\t\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.PositionTexcoordColor, vertexCount);\t\r\n\t\t\t\t\tvar out = vertexBuffer.lock ();\r\n\t\t\t\t\tvar i = 0;\r\n\t\t\t\t\twhile (i < cmd.vertices.length) {\r\n\t\t\t\t\t\tout.vec3 (cmd.vertices[i], cmd.vertices[i+1], 0);\r\n\t\t\t\t\t\tout.vec2 (cmd.uvtData[i], cmd.uvtData[i+1]);\r\n\t\t\t\t\t\t// TODO(james4k): color\r\n\t\t\t\t\t\tout.color (0xff, 0xff, 0xff, 0xff);\r\n\t\t\t\t\t\ti += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvertexBuffer.unlock ();\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar indexCount = cmd.indices.length;\r\n\t\t\t\t\tvar indexBuffer = transientIndexBuffer (indexCount);\r\n\t\t\t\t\tvar unsafeIndices = indexBuffer.lock ();\r\n\t\t\t\t\tfor (i in 0...indexCount) {\r\n\t\t\t\t\t\tunsafeIndices[i] = cmd.indices[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tindexBuffer.unlock ();\r\n\r\n\t\t\t\t\tctx.bindShader (defaultShader);\r\n\t\t\t\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\r\n\t\t\t\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (fillColor, 0), 1);\r\n\t\t\t\t\tctx.setVertexSource (vertexBuffer);\r\n\t\t\t\t\tctx.setIndexSource (indexBuffer);\r\n\t\t\t\t\tctx.setTexture (0, texture);\r\n\t\t\t\t\tctx.setTextureAddressMode (0, Wrap, Wrap);\r\n\t\t\t\t\tif (fillBitmapSmooth) {\r\n\t\t\t\t\t\tctx.setTextureFilter (0, TextureFilter.Linear, TextureFilter.Linear);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tctx.setTextureFilter (0, TextureFilter.Nearest, TextureFilter.Nearest);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tctx.drawIndexed (Primitive.Triangle, vertexCount, 0, div (cmd.indices.length, 3));\r\n\r\n\t\t\t\tcase BEGIN_GRADIENT_FILL:\r\n\r\n\t\t\t\t\tr.readBeginGradientFill ();\r\n\r\n\t\t\t\tcase CUBIC_CURVE_TO:\r\n\r\n\t\t\t\t\tr.readCubicCurveTo ();\r\n\r\n\t\t\t\tcase CURVE_TO:\r\n\r\n\t\t\t\t\tr.readCurveTo ();\r\n\r\n\t\t\t\tcase LINE_GRADIENT_STYLE:\r\n\r\n\t\t\t\t\tr.readLineGradientStyle ();\r\n\r\n\t\t\t\tcase LINE_BITMAP_STYLE:\r\n\r\n\t\t\t\t\tr.readLineBitmapStyle ();\r\n\r\n\t\t\t\tcase DRAW_PATH:\r\n\r\n\t\t\t\t\tr.readDrawPath ();\r\n\r\n\t\t\t\tcase OVERRIDE_MATRIX:\r\n\r\n\t\t\t\t\tr.readOverrideMatrix ();\r\n\r\n\t\t\t\tcase UNKNOWN:\r\n\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\r\n\t\tr.destroy ();\r\n\r\n\t\tif (points.length > 0) {\r\n\t\t\tclosePath (object);\r\n\t\t}\r\n\r\n\t\tif (clipRect != null) {\r\n\r\n\t\t\tviewProj = Matrix4.createOrtho (\r\n\t\t\t\t0 + pixelOffsetX,\r\n\t\t\t\tthis.width + pixelOffsetX,\r\n\t\t\t\tthis.height + pixelOffsetY,\r\n\t\t\t\t0 + pixelOffsetY,\r\n\t\t\t\t-1, 1\r\n\t\t\t);\r\n\r\n\t\t\tctx.setViewport (0, 0, this.width, this.height);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate function drawEllipse (object:DisplayObject, x:Float, y:Float, rx:Float, ry:Float) {\r\n\r\n\t\tif (!hasFill || fillBitmap != null) {\r\n\t\t\t// TODO(james4k): fillBitmap, stroke\r\n\t\t\ttrace (\"unsupported drawEllipse\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar segments:Int = cast (0.334 * 2 * Math.PI * Math.max (rx, ry));\r\n\t\tvar points = new Array<Float> ();\r\n\t\tGraphicsPaths.ellipse (points, x, y, rx, ry, segments);\r\n\r\n\t\tif (hasFill) {\r\n\r\n\t\t\t//var triangles = new Array<Int> ();\r\n\t\t\t//PolyK.triangulate (triangles, points);\r\n\r\n\t\t\tsetObjectTransform (object);\r\n\t\t\ttransform.append (viewProj);\r\n\t\t\ttransform.transpose ();\r\n\r\n\t\t\tvar vertexCount = div (points.length, 2) + 1;\r\n\t\t\tvar indexCount = (vertexCount - 2) * 3;\r\n\r\n\t\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.Position, vertexCount);\t\r\n\t\t\tvar indexBuffer = transientIndexBuffer (indexCount);\r\n\r\n\t\t\tvar out = vertexBuffer.lock ();\r\n\t\t\tout.vec3 (x, y, 0);\r\n\t\t\tfor (i in 0...vertexCount) {\r\n\t\t\t\tout.vec3 (points[i*2 + 0], points[i*2 + 1], 0);\r\n\t\t\t}\r\n\t\t\tvertexBuffer.unlock ();\r\n\r\n\t\t\tvar unsafeIndices = indexBuffer.lock ();\r\n\t\t\tfor (i in 0...vertexCount-2) {\r\n\t\t\t\tunsafeIndices[i*3 + 0] = 0;\r\n\t\t\t\tunsafeIndices[i*3 + 1] = i+1;\r\n\t\t\t\tunsafeIndices[i*3 + 2] = i+2;\r\n\t\t\t}\r\n\t\t\tindexBuffer.unlock ();\r\n\r\n\t\t\tctx.bindShader (fillShader);\r\n\t\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\r\n\t\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (fillColor, 0), 1);\r\n\t\t\tctx.setVertexSource (vertexBuffer);\r\n\t\t\t//ctx.draw (Primitive.Triangle, 0, vertexCount - 2);\r\n\t\t\tctx.setIndexSource (indexBuffer);\r\n\t\t\tctx.drawIndexed (Primitive.Triangle, vertexCount, 0, div (indexCount, 3));\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\n\r\n\r\nimport lime.graphics.ConsoleRenderContext;\r\nimport openfl._internal.renderer.AbstractRenderer;\r\nimport openfl.display.Stage;\r\n\r\n\r\nclass ConsoleRenderer extends AbstractRenderer {\r\n\t\r\n\r\n\tpublic function new (width:Int, height:Int, ctx:ConsoleRenderContext) {\r\n\t\t\r\n\t\tsuper (width, height);\r\n\r\n\t\tthrow \"ConsoleRenderer not supported\";\r\n\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function render (stage:Stage):Void {\r\n\r\n\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\n\t\r\n#end\r\n","package openfl._internal.renderer.dom;\r\n\r\n\r\nimport lime.graphics.ImageBuffer;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.Bitmap;\r\n\r\n#if (js && html5)\r\nimport js.Browser;\r\n#end\r\n\r\n@:access(lime.graphics.ImageBuffer)\r\n@:access(openfl.display.Bitmap)\r\n@:access(openfl.display.BitmapData)\r\n\r\n\r\nclass DOMBitmap {\r\n\t\r\n\t\r\n\tpublic static inline function render (bitmap:Bitmap, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tif (bitmap.stage != null && bitmap.__worldVisible && bitmap.__renderable && bitmap.bitmapData != null && bitmap.bitmapData.__isValid) {\r\n\t\t\t\r\n\t\t\tif (bitmap.bitmapData.image.buffer.__srcImage != null) {\r\n\t\t\t\t\r\n\t\t\t\trenderImage (bitmap, renderSession);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\trenderCanvas (bitmap, renderSession);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tif (bitmap.__image != null) {\r\n\t\t\t\t\r\n\t\t\t\trenderSession.element.removeChild (bitmap.__image);\r\n\t\t\t\tbitmap.__image = null;\r\n\t\t\t\tbitmap.__style = null;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bitmap.__canvas != null) {\r\n\t\t\t\t\r\n\t\t\t\trenderSession.element.removeChild (bitmap.__canvas);\r\n\t\t\t\tbitmap.__canvas = null;\r\n\t\t\t\tbitmap.__style = null;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function renderCanvas (bitmap:Bitmap, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tif (bitmap.__image != null) {\r\n\t\t\t\r\n\t\t\trenderSession.element.removeChild (bitmap.__image);\r\n\t\t\tbitmap.__image = null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (bitmap.__canvas == null) {\r\n\t\t\t\r\n\t\t\tbitmap.__canvas = cast Browser.document.createElement (\"canvas\");\t\r\n\t\t\tbitmap.__context = bitmap.__canvas.getContext (\"2d\");\r\n\t\t\t\r\n\t\t\tif (!bitmap.smoothing) {\r\n\t\t\t\t\r\n\t\t\t\tuntyped (bitmap.__context).mozImageSmoothingEnabled = false;\r\n\t\t\t\t//untyped (bitmap.__context).webkitImageSmoothingEnabled = false;\r\n\t\t\t\tuntyped (bitmap.__context).msImageSmoothingEnabled = false;\r\n\t\t\t\tuntyped (bitmap.__context).imageSmoothingEnabled = false;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tDOMRenderer.initializeElement (bitmap, bitmap.__canvas, renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tbitmap.bitmapData.__sync ();\r\n\t\t\r\n\t\tbitmap.__canvas.width = bitmap.bitmapData.width;\r\n\t\tbitmap.__canvas.height = bitmap.bitmapData.height;\r\n\t\t\r\n\t\tbitmap.__context.globalAlpha = bitmap.__worldAlpha;\r\n\t\tbitmap.__context.drawImage (bitmap.bitmapData.image.buffer.__srcCanvas, 0, 0);\r\n\t\t\r\n\t\tDOMRenderer.applyStyle (bitmap, renderSession, true, false, true);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function renderImage (bitmap:Bitmap, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tif (bitmap.__canvas != null) {\r\n\t\t\t\r\n\t\t\trenderSession.element.removeChild (bitmap.__canvas);\r\n\t\t\tbitmap.__canvas = null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (bitmap.__image == null) {\r\n\t\t\t\r\n\t\t\tbitmap.__image = cast Browser.document.createElement (\"img\");\r\n\t\t\tbitmap.__image.src = bitmap.bitmapData.image.buffer.__srcImage.src;\r\n\t\t\tDOMRenderer.initializeElement (bitmap, bitmap.__image, renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tDOMRenderer.applyStyle (bitmap, renderSession, true, true, true);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.dom;\r\n\r\n\r\nimport openfl._internal.renderer.AbstractMaskManager;\r\nimport openfl.display.*;\r\nimport openfl.geom.*;\r\n\r\n@:access(openfl.display.DisplayObject)\r\n@:keep\r\n\r\n\r\nclass DOMMaskManager extends AbstractMaskManager {\r\n\t\r\n\t\r\n\tpublic function new (renderSession:RenderSession) {\r\n\t\t\r\n\t\tsuper (renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function pushMask (mask:DisplayObject):Void {\r\n\t\t\r\n\t\t//var context = renderSession.context;\r\n\t\t//\r\n\t\t//context.save ();\r\n\t\t//\r\n\t\t////var cacheAlpha = mask.__worldAlpha;\r\n\t\t//var transform = mask.__getWorldTransform ();\r\n\t\t//\r\n\t\t//context.setTransform (transform.a, transform.c, transform.b, transform.d, transform.tx, transform.ty);\r\n\t\t//\r\n\t\t//context.beginPath ();\r\n\t\t//mask.__renderCanvasMask (renderSession);\r\n\t\t//\r\n\t\t//context.clip ();\r\n\t\t//\r\n\t\t////mask.worldAlpha = cacheAlpha;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function pushRect (rect:Rectangle, transform:Matrix):Void {\r\n\t\t\r\n\t\t//var context = renderSession.context;\r\n\t\t//context.save ();\r\n\t\t//\r\n\t\t//context.setTransform (transform.a, transform.c, transform.b, transform.d, transform.tx, transform.ty);\r\n\t\t//\r\n\t\t//context.beginPath ();\r\n\t\t//context.rect (rect.x, rect.y, rect.width, rect.height);\r\n\t\t//context.clip ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function popMask ():Void {\r\n\t\t\r\n\t\t//renderSession.context.restore ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.dom;\r\n\r\n\r\nimport lime.graphics.DOMRenderContext;\r\nimport openfl._internal.renderer.AbstractRenderer;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.DisplayObject;\r\nimport openfl.display.Stage;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Rectangle;\r\n\r\n#if (js && html5)\r\nimport js.html.Element;\r\n#end\r\n\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.display.Stage)\r\n@:access(openfl.geom.Matrix)\r\n@:access(openfl.geom.Rectangle)\r\n\r\n\r\nclass DOMRenderer extends AbstractRenderer {\r\n\t\r\n\t\r\n\tprivate var element:DOMRenderContext;\r\n\t\r\n\t\r\n\tpublic function new (width:Int, height:Int, element:DOMRenderContext) {\r\n\t\t\r\n\t\tsuper (width, height);\r\n\t\t\r\n\t\tthis.element = element;\r\n\t\t\r\n\t\trenderSession = new RenderSession ();\r\n\t\trenderSession.element = element;\r\n\t\trenderSession.roundPixels = true;\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tvar prefix = untyped __js__ (\"(function () {\r\n\t\t  var styles = window.getComputedStyle(document.documentElement, ''),\r\n\t\t\tpre = (Array.prototype.slice\r\n\t\t\t  .call(styles)\r\n\t\t\t  .join('') \r\n\t\t\t  .match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])\r\n\t\t\t)[1],\r\n\t\t\tdom = ('WebKit|Moz|MS|O').match(new RegExp('(' + pre + ')', 'i'))[1];\r\n\t\t  return {\r\n\t\t\tdom: dom,\r\n\t\t\tlowercase: pre,\r\n\t\t\tcss: '-' + pre + '-',\r\n\t\t\tjs: pre[0].toUpperCase() + pre.substr(1)\r\n\t\t  };\r\n\t\t})\")();\r\n\t\t\r\n\t\trenderSession.vendorPrefix = prefix.lowercase;\r\n\t\trenderSession.transformProperty = (prefix.lowercase == \"webkit\") ? \"-webkit-transform\" : \"transform\";\r\n\t\trenderSession.transformOriginProperty = (prefix.lowercase == \"webkit\") ? \"-webkit-transform-origin\" : \"transform-origin\";\r\n\t\t#end\r\n\t\t\r\n\t\trenderSession.maskManager = new DOMMaskManager (renderSession);\r\n\t\t\r\n\t\trenderSession.renderer = this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function applyStyle (displayObject:DisplayObject, renderSession:RenderSession, setTransform:Bool, setAlpha:Bool, setClip:Bool):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tvar style = displayObject.__style;\r\n\t\t\r\n\t\tif (setTransform && displayObject.__worldTransformChanged) {\r\n\t\t\t\r\n\t\t\tstyle.setProperty (renderSession.transformProperty, displayObject.__worldTransform.to3DString (renderSession.roundPixels), null);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (displayObject.__worldZ != ++renderSession.z) {\r\n\t\t\t\r\n\t\t\tdisplayObject.__worldZ = renderSession.z;\r\n\t\t\tstyle.setProperty (\"z-index\", Std.string (displayObject.__worldZ), null);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (setAlpha && displayObject.__worldAlphaChanged) {\r\n\t\t\t\r\n\t\t\tif (displayObject.__worldAlpha < 1) {\r\n\t\t\t\t\r\n\t\t\t\tstyle.setProperty (\"opacity\", Std.string (displayObject.__worldAlpha), null);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tstyle.removeProperty (\"opacity\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (setClip && displayObject.__worldClipChanged) {\r\n\t\t\t\r\n\t\t\tif (displayObject.__worldClip == null) {\r\n\t\t\t\t\r\n\t\t\t\tstyle.removeProperty (\"clip\");\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tvar clip = Rectangle.__temp;\r\n\t\t\t\tvar matrix = Matrix.__temp;\r\n\t\t\t\t\r\n\t\t\t\tmatrix.copyFrom (displayObject.__worldTransform);\r\n\t\t\t\tmatrix.invert ();\r\n\t\t\t\t\r\n\t\t\t\tdisplayObject.__worldClip.__transform (clip, matrix);\r\n\t\t\t\tstyle.setProperty (\"clip\", \"rect(\" + clip.y + \"px, \" + clip.right + \"px, \" + clip.bottom + \"px, \" + clip.x + \"px)\", null);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if (js && html5)\r\n\tpublic static function initializeElement (displayObject:DisplayObject, element:Element, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tvar style = displayObject.__style = element.style;\r\n\t\t\r\n\t\tstyle.setProperty (\"position\", \"absolute\", null);\r\n\t\tstyle.setProperty (\"top\", \"0\", null);\r\n\t\tstyle.setProperty (\"left\", \"0\", null);\r\n\t\tstyle.setProperty (renderSession.transformOriginProperty, \"0 0 0\", null);\r\n\t\t\r\n\t\trenderSession.element.appendChild (element);\r\n\t\t\r\n\t\tdisplayObject.__worldAlphaChanged = true;\r\n\t\tdisplayObject.__worldClipChanged = true;\r\n\t\tdisplayObject.__worldTransformChanged = true;\r\n\t\tdisplayObject.__worldVisibleChanged = true;\r\n\t\tdisplayObject.__worldZ = -1;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\tpublic override function render (stage:Stage):Void {\r\n\t\t\r\n\t\telement.style.background = stage.__colorString;\r\n\t\t\r\n\t\trenderSession.z = 1;\r\n\t\tstage.__renderDOM (renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.dom;\r\n\r\n\r\nimport openfl._internal.renderer.canvas.CanvasGraphics;\r\nimport openfl.display.DisplayObject;\r\nimport openfl.geom.Matrix;\r\n\r\n#if (js && html5)\r\nimport js.Browser;\r\n#end\r\n\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.geom.Matrix)\r\n\r\n\r\nclass DOMShape {\r\n\t\r\n\t\r\n\tpublic static inline function render (shape:DisplayObject, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tvar graphics = shape.__graphics;\r\n\t\t\r\n\t\tif (shape.stage != null && shape.__worldVisible && shape.__renderable && graphics != null) {\r\n\t\t\t\r\n\t\t\tif (graphics.__dirty || shape.__worldAlphaChanged || (shape.__canvas == null && graphics.__canvas != null)) {\r\n\t\t\t\t\r\n\t\t\t\t//#if old\r\n\t\t\t\tCanvasGraphics.render (graphics, renderSession);\r\n\t\t\t\t//#else\r\n\t\t\t\t//CanvasGraphics.renderObjectGraphics (shape, renderSession);\r\n\t\t\t\t//#end\r\n\t\t\t\t\r\n\t\t\t\tif (graphics.__canvas != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (shape.__canvas == null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tshape.__canvas = cast Browser.document.createElement (\"canvas\");\r\n\t\t\t\t\t\tshape.__context = shape.__canvas.getContext (\"2d\");\r\n\t\t\t\t\t\tDOMRenderer.initializeElement (shape, shape.__canvas, renderSession);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tshape.__canvas.width = graphics.__canvas.width;\r\n\t\t\t\t\tshape.__canvas.height = graphics.__canvas.height;\r\n\t\t\t\t\t\r\n\t\t\t\t\tshape.__context.globalAlpha = shape.__worldAlpha;\r\n\t\t\t\t\tshape.__context.drawImage (graphics.__canvas, 0, 0);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (shape.__canvas != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trenderSession.element.removeChild (shape.__canvas);\r\n\t\t\t\t\t\tshape.__canvas = null;\r\n\t\t\t\t\t\tshape.__style = null;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (shape.__canvas != null) {\r\n\t\t\t\t\r\n\t\t\t\tif (shape.__worldTransformChanged || graphics.__transformDirty) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tgraphics.__transformDirty = false;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar transform = Matrix.__temp;\r\n\t\t\t\t\ttransform.identity ();\r\n\t\t\t\t\ttransform.translate (graphics.__bounds.x, graphics.__bounds.y);\r\n\t\t\t\t\ttransform.concat (shape.__worldTransform);\r\n\t\t\t\t\t\r\n\t\t\t\t\tshape.__style.setProperty (renderSession.transformProperty, transform.to3DString (renderSession.roundPixels), null);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tDOMRenderer.applyStyle (shape, renderSession, false, false, true);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tif (shape.__canvas != null) {\r\n\t\t\t\t\r\n\t\t\t\trenderSession.element.removeChild (shape.__canvas);\r\n\t\t\t\tshape.__canvas = null;\r\n\t\t\t\tshape.__style = null;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.dom;\r\n\r\n\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl._internal.text.TextEngine;\r\nimport openfl.text.TextField;\r\nimport openfl.text.TextFieldAutoSize;\r\nimport openfl.text.TextFormat;\r\nimport openfl.text.TextFormatAlign;\r\n\r\n#if (js && html5)\r\nimport js.html.Element;\r\nimport js.Browser;\r\n#end\r\n\r\n@:access(openfl._internal.text.TextEngine)\r\n@:access(openfl.text.TextField)\r\n\r\n\r\nclass DOMTextField {\r\n\t\r\n\t\r\n\tpublic static function measureText (textField:TextField):Void {\r\n\t\t\r\n\t \t#if (js && html5)\r\n\t \t\r\n\t\tvar textEngine = textField.__textEngine;\r\n\t\tvar div:Element = textField.__div;\r\n\t\t\r\n\t\tif (div == null) {\r\n\t\t\t\r\n\t\t\tdiv = cast Browser.document.createElement (\"div\");\r\n\t\t\tdiv.innerHTML = new EReg (\"\\n\", \"g\").replace (textEngine.text, \"<br>\");\r\n\t\t\tdiv.style.setProperty (\"font\", TextEngine.getFont (textField.__textFormat), null);\r\n\t\t\tdiv.style.setProperty (\"pointer-events\", \"none\", null);\r\n\t\t\tdiv.style.position = \"absolute\";\r\n\t\t\tdiv.style.top = \"110%\"; // position off-screen!\r\n\t\t\tBrowser.document.body.appendChild (div);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\ttextEngine.__measuredWidth = div.clientWidth;\r\n\t\t\r\n\t\t// Now set the width so that the height is accurate as a\r\n\t\t// function of the flow within the width bounds...\r\n\t\t\r\n\t\tif (textField.__div == null) {\r\n\t\t\t\r\n\t\t\tdiv.style.width = Std.string (textEngine.width - 4) + \"px\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\ttextEngine.__measuredHeight = div.clientHeight;\r\n\t\t\r\n\t\tif (textField.__div == null) {\r\n\t\t\t\r\n\t\t\tBrowser.document.body.removeChild (div);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static inline function render (textField:TextField, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t\r\n\t\tvar textEngine = textField.__textEngine;\r\n\t\t\r\n\t\tif (textField.stage != null && textField.__worldVisible && textField.__renderable) {\r\n\t\t\t\r\n\t\t\tif (textField.__dirty || textField.__div == null) {\r\n\t\t\t\t\r\n\t\t\t\tif (textEngine.text != \"\" || textEngine.background || textEngine.border || textEngine.type == INPUT) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textField.__div == null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttextField.__div = cast Browser.document.createElement (\"div\");\r\n\t\t\t\t\t\tDOMRenderer.initializeElement (textField, textField.__div, renderSession);\r\n\t\t\t\t\t\ttextField.__style.setProperty (\"outline\", \"none\", null);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttextField.__div.addEventListener (\"input\", function (event) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tevent.preventDefault ();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// TODO: Set caret index, and replace only selection\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (textField.htmlText != textField.__div.innerHTML) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\ttextField.htmlText = textField.__div.innerHTML;\r\n\t\t\t\t\t\t\t\ttextField.__dirty = false;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textEngine.selectable) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttextField.__style.setProperty (\"cursor\", \"text\", null);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttextField.__style.setProperty (\"cursor\", \"inherit\", null);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tuntyped (textField.__div).contentEditable = (textEngine.type == INPUT);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar style = textField.__style;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// TODO: Handle ranges using span\r\n\t\t\t\t\t// TODO: Vertical align\r\n\t\t\t\t\t\r\n\t\t\t\t\ttextField.__div.innerHTML = textEngine.text;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textEngine.background) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstyle.setProperty (\"background-color\", \"#\" + StringTools.hex (textEngine.backgroundColor, 6), null);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstyle.removeProperty (\"background-color\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textEngine.border) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstyle.setProperty (\"border\", \"solid 1px #\" + StringTools.hex (textEngine.borderColor, 6), null);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstyle.removeProperty (\"border\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tstyle.setProperty (\"font\", TextEngine.getFont (textField.__textFormat), null);\r\n\t\t\t\t\tstyle.setProperty (\"color\", \"#\" + StringTools.hex (textField.__textFormat.color, 6), null);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textEngine.autoSize != TextFieldAutoSize.NONE) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstyle.setProperty (\"width\", \"auto\", null);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tstyle.setProperty (\"width\", textEngine.width + \"px\", null);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tstyle.setProperty (\"height\", textEngine.height + \"px\", null);\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch (textField.__textFormat.align) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase TextFormatAlign.CENTER:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tstyle.setProperty (\"text-align\", \"center\", null);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase TextFormatAlign.RIGHT:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tstyle.setProperty (\"text-align\", \"right\", null);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tstyle.setProperty (\"text-align\", \"left\", null);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\ttextField.__dirty = false;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (textField.__div != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trenderSession.element.removeChild (textField.__div);\r\n\t\t\t\t\t\ttextField.__div = null;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (textField.__div != null) {\r\n\t\t\t\t\r\n\t\t\t\t// TODO: Enable scrollRect clipping\r\n\t\t\t\t\r\n\t\t\t\tDOMRenderer.applyStyle (textField, renderSession, true, true, false);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tif (textField.__div != null) {\r\n\t\t\t\t\r\n\t\t\t\trenderSession.element.removeChild (textField.__div);\r\n\t\t\t\ttextField.__div = null;\r\n\t\t\t\ttextField.__style = null;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.opengl;\r\n\r\n\r\nimport lime.graphics.GLRenderContext;\r\nimport lime.graphics.Image;\r\nimport openfl._internal.renderer.opengl.utils.GLMaskManager;\r\nimport openfl._internal.renderer.opengl.utils.PingPongTexture;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.Bitmap;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.BlendMode;\r\nimport openfl.display.DisplayObject;\r\nimport openfl.display.IBitmapDrawable;\r\nimport openfl.geom.ColorTransform;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Rectangle;\r\n\r\n@:access(openfl.display.Bitmap)\r\n@:access(openfl.display.BitmapData)\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.display.IBitmapDrawable)\r\n\r\n\r\nclass GLBitmap {\r\n\t\r\n\tprivate static var fbData:Array<{texture:PingPongTexture, viewPort:Rectangle, transparent:Bool}> = [];\r\n\t\r\n\tpublic static inline function render (bitmap:Bitmap, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (!bitmap.__renderable || bitmap.__worldAlpha <= 0 || bitmap.bitmapData == null || !bitmap.bitmapData.__isValid) return;\r\n\t\t\r\n\t\trenderSession.spriteBatch.renderBitmapData(bitmap.bitmapData, bitmap.smoothing, bitmap.__renderTransform, bitmap.__worldColorTransform, bitmap.__worldAlpha, bitmap.__blendMode, bitmap.__shader, bitmap.pixelSnapping);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Push a texture to render. Binds the framebuffer of that texture.\r\n\t * @param\trenderSession\r\n\t * @param\ttexture\r\n\t * @param\tviewPort\r\n\t * @param\tsmoothing\r\n\t * @param\ttransparent\r\n\t * @param\tclearBuffer\r\n\t */\r\n\tpublic static function pushFramebuffer (renderSession:RenderSession, texture:PingPongTexture, viewPort:Rectangle, smoothing:Bool, ?transparent:Bool = true, ?clearBuffer:Bool = false, ?powerOfTwo:Bool = true) {\r\n\t\tvar gl:GLRenderContext = renderSession.gl;\r\n\t\tif (gl == null) return null;\r\n\t\t\r\n\t\tvar renderer = renderSession.renderer;\r\n\t\tvar spritebatch = renderSession.spriteBatch;\r\n\t\tvar x:Int = Std.int(viewPort.x);\r\n\t\tvar y:Int = Std.int(viewPort.y);\r\n\t\tvar width:Int = Std.int(viewPort.width);\r\n\t\tvar height:Int = Std.int(viewPort.height);\r\n\t\t\r\n\t\tspritebatch.finish();\r\n\t\t\r\n\t\t// push the default framebuffer\r\n\t\tif (fbData.length <= 0) {\r\n\t\t\tfbData.push( { texture: null, viewPort: null, transparent: renderer.transparent } );\r\n\t\t}\r\n\t\t\r\n\t\tif (texture == null) {\r\n\t\t\ttexture = new PingPongTexture(gl, width, height, smoothing, powerOfTwo);\r\n\t\t}\r\n\t\t\r\n\t\ttexture.resize(width, height);\r\n\t\trenderer.transparent = transparent;\r\n\t\t\r\n\t\t// save mask state\r\n\t\trenderSession.maskManager.saveState();\r\n\t\t\r\n\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, texture.framebuffer);\r\n\t\trenderer.setViewport (x, y, width, height);\r\n\t\t\r\n\t\t// enable writing to all the colors and alpha\r\n\t\tgl.colorMask (true, true, true, true);\r\n\t\trenderSession.blendModeManager.setBlendMode (BlendMode.NORMAL);\r\n\t\t\r\n\t\tif (clearBuffer) {\r\n\t\t\ttexture.clear();\r\n\t\t}\r\n\t\t\r\n\t\tfbData.push( { texture:texture, viewPort:viewPort, transparent: transparent } );\r\n\t\t\r\n\t\treturn texture;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Render an object to the binded framebuffer\r\n\t * @param\trenderSession\r\n\t * @param\tself\r\n\t * @param\tsource\r\n\t * @param\tmatrix\r\n\t * @param\tcolorTransform\r\n\t * @param\tblendMode\r\n\t * @param\tclipRect\r\n\t */\r\n\tpublic static function drawBitmapDrawable (renderSession:RenderSession, target:BitmapData, source:IBitmapDrawable, ?matrix:Matrix, ?colorTransform:ColorTransform, ?blendMode:BlendMode, ?clipRect:Rectangle) {\r\n\t\tvar data = fbData[fbData.length - 1];\r\n\t\tif (data == null) throw \"No data to draw to\";\r\n\t\t\r\n\t\tvar gl:GLRenderContext = renderSession.gl;\r\n\t\tif (gl == null) return;\r\n\t\t\r\n\t\tvar viewPort = data.viewPort;\r\n\t\tvar renderer = renderSession.renderer;\r\n\t\tvar spritebatch = renderSession.spriteBatch;\r\n\t\tvar drawTarget = target != null;\r\n\t\t\r\n\t\tvar tmpRect = clipRect == null ? new Rectangle (viewPort.x, viewPort.y, viewPort.width, viewPort.height) : clipRect.clone ();\r\n\t\t\r\n\t\tspritebatch.begin (renderSession, drawTarget ? null : tmpRect);\r\n\t\t\r\n\t\tif (drawTarget) {\r\n\t\t\t\r\n\t\t\ttarget.__worldTransform.identity ();\r\n\t\t\tGLBitmap.flipMatrix (target.__worldTransform, viewPort.height);\r\n\t\t\ttarget.__renderGL (renderSession);\r\n\t\t\tspritebatch.stop ();\r\n\t\t\tif (target.__texture != null) gl.deleteTexture (target.__texture);\r\n\t\t\ttarget.__texture = null;\r\n\t\t\tspritebatch.start (tmpRect);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar ctCache = source.__worldColorTransform;\r\n\t\tvar blendModeCache = source.__blendMode;\r\n\t\tvar cached = source.__cacheAsBitmap;\r\n\t\t\r\n\t\tvar m = matrix != null ? matrix.clone () : new Matrix ();\r\n\t\t\r\n\t\tGLBitmap.flipMatrix (m, viewPort.height);\r\n\t\t\r\n\t\tsource.__worldColorTransform = colorTransform != null ? colorTransform : new ColorTransform ();\r\n\t\tsource.__blendMode = blendMode;\r\n\t\tDisplayObject.__cacheAsBitmapMode = true;\r\n\t\t\r\n\t\tsource.__updateTransforms(m);\r\n\t\tsource.__updateChildren (false);\r\n\t\t\r\n\t\tsource.__cacheAsBitmap = false;\r\n\t\tsource.__renderGL (renderSession);\r\n\t\tsource.__cacheAsBitmap = cached;\r\n\t\t\r\n\t\tsource.__worldColorTransform = ctCache;\r\n\t\tsource.__blendMode = blendModeCache;\r\n\t\tDisplayObject.__cacheAsBitmapMode = false;\r\n\t\t\r\n\t\tsource.__updateTransforms();\r\n\t\tsource.__updateChildren (false);\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Pop the framebuffer and binds the last framebuffer\r\n\t * @param\trenderSession\r\n\t * @param\ttransparent\r\n\t * @param\timage\r\n\t */\r\n\tpublic static function popFramebuffer (renderSession:RenderSession, ?image:Image) {\r\n\t\tvar gl:GLRenderContext = renderSession.gl;\r\n\t\tif (gl == null) return;\r\n\t\t\r\n\t\trenderSession.spriteBatch.finish();\r\n\t\t\r\n\t\t// remove the actual binded framebuffer from the array\r\n\t\tfbData.pop();\r\n\t\tvar data = fbData[fbData.length - 1];\r\n\t\tif (data == null) {\r\n\t\t\tthrow \"oh\";\r\n\t\t}\r\n\t\t\r\n\t\tvar x:Int, y:Int, width:Int, height:Int;\r\n\t\t\r\n\t\tif (data.viewPort == null) {\r\n\t\t\tx = y = 0;\r\n\t\t\twidth = renderSession.renderer.width;\r\n\t\t\theight = renderSession.renderer.height;\r\n\t\t} else {\r\n\t\t\tx = Math.floor(data.viewPort.x);\r\n\t\t\ty = Math.floor(data.viewPort.y);\r\n\t\t\twidth = Math.ceil(data.viewPort.width);\r\n\t\t\theight = Math.ceil(data.viewPort.height);\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (image != null) {\r\n\t\t\t\r\n\t\t\t// TODO is this possible?\r\n\t\t\tif (image.width != width || image.height != height) {\r\n\t\t\t\t\r\n\t\t\t\timage.resize (width, height);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgl.readPixels (x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, image.buffer.data);\r\n\t\t\t\r\n\t\t\timage.dirty = false;\r\n\t\t\timage.premultiplied = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, data.texture == null ? renderSession.defaultFramebuffer : data.texture.framebuffer);\r\n\t\trenderSession.renderer.setViewport (x, y, width, height);\r\n\t\trenderSession.renderer.transparent = data.transparent;\r\n\t\t\r\n\t\t// restore mask state\r\n\t\trenderSession.maskManager.restoreState();\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate static inline function flipMatrix (m:Matrix, height:Float):Void {\r\n\t\t\r\n\t\tvar tx = m.tx;\r\n\t\tvar ty = m.ty;\r\n\t\tm.tx = 0;\r\n\t\tm.ty = 0;\r\n\t\tm.scale (1, -1);\r\n\t\tm.translate (0, height);\r\n\t\tm.tx += tx;\r\n\t\tm.ty -= ty;\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n}","package openfl._internal.renderer.opengl;\r\n\r\nimport lime.graphics.cairo.Cairo;\r\nimport lime.graphics.cairo.CairoSurface;\r\nimport lime.graphics.Image;\r\nimport lime.graphics.ImageChannel;\r\nimport lime.graphics.opengl.GL;\r\nimport lime.graphics.opengl.GLFramebuffer;\r\nimport lime.graphics.GLRenderContext;\r\nimport lime.math.Vector2;\r\nimport openfl._internal.renderer.AbstractRenderer;\r\nimport openfl._internal.renderer.cairo.CairoGraphics;\r\nimport openfl._internal.renderer.cairo.CairoTextField;\r\nimport openfl._internal.renderer.opengl.utils.*;\r\nimport openfl._internal.renderer.opengl.utils.BlendModeManager.GLBlendMode;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.BitmapDataChannel;\r\nimport openfl.display.BlendMode;\r\nimport openfl.display.DisplayObject;\r\nimport openfl.display.Graphics;\r\nimport openfl.display.Stage;\r\nimport openfl.errors.Error;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.text.TextField;\r\nimport openfl.utils.ByteArray;\r\n\r\n#if (js && html5)\r\nimport js.html.ImageData;\r\n#end\r\n\r\n@:access(lime.graphics.opengl.GL)\r\n@:access(openfl.display.Stage)\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.display.BitmapData)\r\n@:access(openfl.geom.Matrix)\r\n@:access(openfl.geom.Rectangle)\r\n\r\n\r\nclass GLRenderer extends AbstractRenderer {\r\n\t\r\n\t\r\n\tpublic static var glContextId:Int = 0;\r\n\tpublic static var glContexts = [];\r\n\t\r\n\tpublic var blendModeManager:BlendModeManager;\r\n\tpublic var contextLost:Bool;\r\n\tpublic var defaultFramebuffer:GLFramebuffer;\r\n\tpublic var filterManager:FilterManager;\r\n\tpublic var gl:GLRenderContext;\r\n\tpublic var _glContextId:Int;\r\n\tpublic var maskManager:GLMaskManager;\r\n\tpublic var offset:Point;\r\n\tpublic var options:Dynamic;\r\n\tpublic var preserveDrawingBuffer:Bool;\r\n\tpublic var projection:Point;\r\n\tpublic var shaderManager:ShaderManager;\r\n\tpublic var spriteBatch:SpriteBatch;\r\n\tpublic var stencilManager:StencilManager;\r\n\tpublic var view:Dynamic;\r\n\tpublic var projectionMatrix:Matrix;\r\n\t\r\n\tprivate var __stage:Dynamic;\r\n\t\r\n\tprivate var vpX:Int = 0;\r\n\tprivate var vpY:Int = 0;\r\n\tprivate var vpWidth:Int = 0;\r\n\tprivate var vpHeight:Int = 0;\r\n\t\r\n\t\r\n\tpublic function new (width:Int = 800, height:Int = 600, gl:GLRenderContext /*view:Dynamic = null*/, transparent:Bool = false, antialias:Bool = false, preserveDrawingBuffer:Bool = false) {\r\n\t\t\r\n\t\tsuper (width, height);\r\n\t\t\r\n\t\tthis.transparent = transparent;\r\n\t\tthis.preserveDrawingBuffer = preserveDrawingBuffer;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.viewport = new Rectangle ();\r\n\t\t\r\n\t\tthis.options = {\r\n\t\t\talpha: transparent,\r\n\t\t\tantialias: antialias, \r\n\t\t\tpremultipliedAlpha: transparent,\r\n\t\t\tstencil: true,\r\n\t\t\tpreserveDrawingBuffer: preserveDrawingBuffer\r\n\t\t};\r\n\t\t\r\n\t\t_glContextId = glContextId ++;\r\n\t\tthis.gl = gl;\r\n\t\t\r\n\t\t#if (ios || tvos)\r\n\t\tdefaultFramebuffer = new GLFramebuffer (GL.version, GL.getParameter (GL.FRAMEBUFFER_BINDING));\r\n\t\t#else\r\n\t\tdefaultFramebuffer = null;\r\n\t\t#end\r\n\t\t\r\n\t\tglContexts[_glContextId] = gl;\r\n\t\t\r\n\t\tprojectionMatrix = new Matrix();\r\n\t\t\r\n\t\tprojection = new Point ();\r\n\t\tprojection.x =  this.width / 2;\r\n\t\tprojection.y =  -this.height / 2;\r\n\t\t\r\n\t\toffset = new Point (0, 0);\r\n\t\t\r\n\t\tresize (this.width, this.height);\r\n\t\tcontextLost = false;\r\n\t\t\r\n\t\tshaderManager = new ShaderManager (gl);\r\n\t\tspriteBatch = new SpriteBatch (gl);\r\n\t\tfilterManager = new FilterManager (gl, this.transparent);\r\n\t\tstencilManager = new StencilManager (gl);\r\n\t\tblendModeManager = new BlendModeManager (gl);\r\n\t\t\r\n\t\trenderSession = new RenderSession ();\r\n\t\trenderSession.gl = this.gl;\r\n\t\trenderSession.drawCount = 0;\r\n\t\trenderSession.shaderManager = this.shaderManager;\r\n\t\trenderSession.filterManager = this.filterManager;\r\n\t\trenderSession.blendModeManager = this.blendModeManager;\r\n\t\trenderSession.spriteBatch = this.spriteBatch;\r\n\t\trenderSession.stencilManager = this.stencilManager;\r\n\t\trenderSession.renderer = this;\r\n\t\trenderSession.defaultFramebuffer = this.defaultFramebuffer;\r\n\t\trenderSession.projectionMatrix = this.projectionMatrix;\r\n\t\t\r\n\t\tmaskManager = new GLMaskManager (renderSession);\r\n\t\trenderSession.maskManager = maskManager;\r\n\t\t\r\n\t\tshaderManager.setShader(shaderManager.defaultShader);\r\n\t\t\r\n\t\tgl.disable (gl.DEPTH_TEST);\r\n\t\tgl.disable (gl.CULL_FACE);\r\n\t\t\r\n\t\tgl.enable (gl.BLEND);\r\n\t\tgl.colorMask (true, true, true, this.transparent);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function destroy ():Void {\r\n\t\t\r\n\t\t//this.view.removeEventListener('webglcontextlost', this.handleContextLost);\r\n\t\t//this.view.removeEventListener('webglcontextrestored', this.handleContextRestored);\r\n\t\t\r\n\t\tglContexts[_glContextId] = null;\r\n\t\t\r\n\t\tprojection = null;\r\n\t\toffset = null;\r\n\t\t\r\n\t\tshaderManager.destroy ();\r\n\t\tspriteBatch.destroy ();\r\n\t\tmaskManager.destroy ();\r\n\t\tfilterManager.destroy ();\r\n\t\t\r\n\t\tshaderManager = null;\r\n\t\tspriteBatch = null;\r\n\t\tmaskManager = null;\r\n\t\tfilterManager = null;\r\n\t\t\r\n\t\tthis.gl = null;\r\n\t\t\r\n\t\trenderSession = null;\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic override function setViewport(x:Int, y:Int, width:Int, height:Int) {\r\n\t\tif (!(vpX == x && vpY == y && vpWidth == width && vpHeight == height)) {\r\n\t\t\tvpX = x;\r\n\t\t\tvpY = y;\r\n\t\t\tvpWidth = width;\r\n\t\t\tvpHeight = height;\r\n\t\t\tgl.viewport(x, y, width, height);\r\n\t\t\tsetOrtho(x, y, width, height);\r\n\t\t\tviewport.setTo(x, y, width, height);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function setOrtho(x:Float, y:Float, width:Float, height:Float) {\r\n\t\tvar o = projectionMatrix;\r\n\t\to.identity();\r\n\t\to.a = 1 / width * 2;\r\n\t\to.d = -1 / height * 2;\r\n\t\to.tx = -1 - x * o.a;\r\n\t\to.ty = 1 - y * o.d;\r\n\t}\r\n\t\r\n\t/*private static function destroyTexture (texture:BaseTexture):Void {\r\n\t\t\r\n\t\tvar i = texture._glTextures.length - 1;\r\n\t\t\r\n\t\twhile (i >= 0) {\r\n\t\t\t\r\n\t\t\tvar glTexture = texture._glTextures[i];\r\n\t\t\tvar gl = glContexts[i];\r\n\t\t\t\r\n\t\t\tif (gl != null && glTexture != null) {\r\n\t\t\t\t\r\n\t\t\t\tgl.deleteTexture (glTexture);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ti--;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\ttexture._glTextures = [];\r\n\t\t\r\n\t}*/\r\n\t\r\n\t\r\n\tprivate function handleContextLost (event:Dynamic):Void {\r\n\t\t\r\n\t\tevent.preventDefault ();\r\n\t\tcontextLost = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function handleContextRestored ():Void {\r\n\t\t\r\n\t\t/*try {\r\n\t\t\t\r\n\t\t\tgl = this.view.getContext ('experimental-webgl',  this.options);\r\n\t\t\t\r\n\t\t} catch (e:Dynamic) {\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\t\r\n\t\t\t\tthis.gl = this.view.getContext ('webgl',  this.options);\r\n\t\t\t\t\r\n\t\t\t} catch (e2:Dynamic) {\r\n\t\t\t\t\r\n\t\t\t\tthrow new Error ('This browser does not support webGL. Try using the canvas renderer' + this);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}*/\r\n\t\t\r\n\t\tvar gl = this.gl;\r\n\t\tglContextId++;\r\n\t\t\r\n\t\tshaderManager.setContext (gl);\r\n\t\tspriteBatch.setContext (gl);\r\n\t\tmaskManager.setContext (gl);\r\n\t\tfilterManager.setContext (gl);\r\n\t\t\r\n\t\trenderSession.gl = gl;\r\n\t\t\r\n\t\t#if (ios || tvos)\r\n\t\tdefaultFramebuffer = new GLFramebuffer (GL.version, GL.getParameter (GL.FRAMEBUFFER_BINDING));\r\n\t\t#else\r\n\t\tdefaultFramebuffer = null;\r\n\t\t#end\r\n\t\t\r\n\t\tgl.disable (gl.DEPTH_TEST);\r\n\t\tgl.disable (gl.CULL_FACE);\r\n\t\t\r\n\t\tgl.enable (gl.BLEND);\r\n\t\tgl.colorMask (true, true, true, transparent);\r\n\t\t\r\n\t\tsetViewport (0, 0, width, height);\r\n\t\t\r\n\t\t/*for (key in Texture.TextureCache.keys ()) {\r\n\t\t\t\r\n\t\t\tvar texture = Texture.TextureCache.get (key).baseTexture;\r\n\t\t\ttexture._glTextures = [];\r\n\t\t\t\r\n\t\t}*/\r\n\t\t\r\n\t\tcontextLost = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function render (stage:Stage):Void {\r\n\t\t\r\n\t\tif (contextLost) return;\r\n\t\t\r\n\t\t//updateTextures ();\r\n\t\t\r\n\t\tvar gl = this.gl;\r\n\t\tsetViewport (0, 0, width, height);\r\n\t\t\r\n\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, defaultFramebuffer);\r\n\t\t\r\n\t\tif (this.transparent) {\r\n\t\t\t\r\n\t\t\tgl.clearColor (0, 0, 0, 0);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tgl.clearColor (stage.__colorSplit[0], stage.__colorSplit[1], stage.__colorSplit[2], 1);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tgl.clear (gl.COLOR_BUFFER_BIT);\r\n\t\trenderDisplayObject (stage, projection);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function renderBitmap (shape:DisplayObject, renderSession:RenderSession, smooth:Bool = true):Void {\r\n\t\t\r\n\t\tif (!shape.__renderable || shape.__worldAlpha <= 0) return;\r\n\t\tif (shape.__graphics == null || shape.__graphics.__bitmap == null) return;\r\n\t\t\r\n\t\tvar rect = openfl.geom.Rectangle.__temp;\r\n\t\tvar matrix = openfl.geom.Matrix.__temp;\r\n\t\t\r\n\t\trect.setEmpty ();\r\n\t\tmatrix.identity ();\r\n\t\t\r\n\t\tshape.__getBounds (rect, matrix);\r\n\t\t\r\n\t\tvar bitmap = shape.__graphics.__bitmap;\r\n\t\t\r\n\t\tmatrix.translate (shape.__graphics.__bounds.x, shape.__graphics.__bounds.y);\r\n\t\tmatrix.concat (shape.__renderTransform);\r\n\t\t\r\n\t\trenderSession.spriteBatch.renderBitmapData (bitmap, smooth, matrix, shape.__worldColorTransform, shape.__worldAlpha, shape.__blendMode, null, ALWAYS);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function renderDisplayObject (displayObject:DisplayObject, projection:Point, buffer:GLFramebuffer = null):Void {\r\n\t\t\r\n\t\trenderSession.blendModeManager.setBlendMode (BlendMode.NORMAL);\r\n\t\t\r\n\t\trenderSession.drawCount = 0;\r\n\t\trenderSession.currentBlendMode = null;\r\n\t\t\r\n\t\tspriteBatch.begin (renderSession);\r\n\t\tfilterManager.begin (renderSession, buffer);\r\n\t\tdisplayObject.__renderGL (renderSession);\r\n\t\t\r\n\t\tspriteBatch.finish();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function resize (width:Int, height:Int):Void {\r\n\t\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\t\r\n\t\tsuper.resize (width, height);\r\n\t\t\r\n\t\tsetViewport (0, 0, width, height);\r\n\t\t\r\n\t\tprojection.x =  width / 2;\r\n\t\tprojection.y =  -height / 2;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/*private static function updateTextureFrame (texture:Texture):Void {\r\n\t\t\r\n\t\ttexture._updateWebGLuvs ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function updateTextures ():Void {\r\n\t\t\r\n\t\tfor (frame in Texture.frameUpdates) {\r\n\t\t\t\r\n\t\t\tupdateTextureFrame (frame);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (texture in Texture.texturesToDestroy) {\r\n\t\t\t\r\n\t\t\tdestroyTexture (texture);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tTexture.texturesToUpdate = [];\r\n\t\tTexture.texturesToDestroy = [];\r\n\t\tTexture.frameUpdates = [];\r\n\t\t\r\n\t}*/\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.opengl.shaders2;\r\n\r\nimport haxe.crypto.Md5;\r\nimport lime.graphics.GLRenderContext;\r\nimport openfl._internal.renderer.opengl.utils.ShaderManager;\r\nimport openfl._internal.renderer.opengl.utils.VertexArray;\r\nimport openfl._internal.renderer.opengl.utils.VertexAttribute;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.BlendMode;\r\nimport openfl.display.Shader.GLShaderData;\r\nimport openfl.display.Shader.GLShaderParameter;\r\nimport openfl.display.Shader.RepeatMode;\r\nimport openfl.gl.GLProgram;\r\nimport openfl.gl.GLShader;\r\nimport openfl.gl.GLUniformLocation;\r\nimport openfl.utils.Float32Array;\r\n\r\n@:allow(openfl.display.Shader)\r\n@:access(openfl._internal.renderer.opengl.utils.ShaderManager)\r\nclass Shader {\r\n\t\r\n\tprivate static var UID:Int = 0;\r\n\t\r\n\tpublic var gl:GLRenderContext;\r\n\t\r\n\tpublic var vertexSrc:Array<String>;\r\n\tpublic var fragmentSrc:Array<String>;\r\n\tpublic var attributes:Map<String, Int> = new Map();\r\n\tpublic var uniforms:Map<String, GLUniformLocation> = new Map();\r\n\tpublic var compiled:Bool = false;\r\n\tpublic var ID(default, null):Int;\r\n\t\r\n\tpublic var program:GLProgram;\r\n\t\r\n\tpublic var wrapS:RepeatMode = NONE;\r\n\tpublic var wrapT:RepeatMode = NONE;\r\n\tpublic var smooth:Null<Bool>;\r\n\tpublic var blendMode:BlendMode;\r\n\t\r\n\tprivate var vertexString:String;\r\n\tprivate var fragmentString:String;\r\n\t\r\n\tpublic function new(gl:GLRenderContext) {\r\n\t\tID = UID++;\r\n\t\tthis.gl = gl;\r\n\t\t\r\n\t\tprogram = null;\r\n\t}\r\n\t\r\n\tprivate function init(force:Bool = false) {\r\n\t\t\r\n\t\tif (compiled && !force) return;\r\n\t\t\r\n\t\tif (vertexSrc != null) {\r\n\t\t\tvertexString = vertexSrc.join(\"\\n\");\r\n\t\t}\r\n\t\tif (fragmentSrc != null) {\r\n\t\t\tfragmentString = fragmentSrc.join(\"\\n\");\r\n\t\t}\r\n\t\t\r\n\t\tif (vertexString == null || fragmentString == null) {\r\n\t\t\tthrow \"No vertex or fragment source provided\";\r\n\t\t}\r\n\t\t\r\n\t\tprogram = Shader.compileProgram(gl, vertexString, fragmentString);\r\n\t\tif (program != null) {\r\n\t\t\tcompiled = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function destroy() {\r\n\t\tif (program != null) {\r\n\t\t\tgl.deleteProgram(program);\r\n\t\t}\r\n\t\tcompiled = false;\r\n\t\tattributes = null;\r\n\t}\r\n\t\r\n\tpublic function applyData(shaderData:GLShaderData, renderSession:RenderSession) {\r\n\t\tif (shaderData == null) return;\r\n\t\t\r\n\t\tvar param:GLShaderParameter;\r\n\t\tvar u:GLUniformLocation;\r\n\t\tvar v:Array<Float>;\r\n\t\tvar bd:BitmapData;\r\n\t\tfor (key in shaderData.keys()) {\r\n\t\t\tu = getUniformLocation(key);\r\n\t\t\tparam = shaderData.get(key);\r\n\t\t\tif (param == null) continue;\r\n\t\t\tv = param.value;\r\n\t\t\tbd = param.bitmap;\r\n\t\t\tif (v == null && bd == null) continue;\r\n\t\t\t// TODO Investigate Array support\r\n\t\t\tswitch(@:privateAccess param.internalType) {\r\n\t\t\t\tcase INT:\r\n\t\t\t\t\tswitch(param.size) {\r\n\t\t\t\t\t\tcase 1:\tgl.uniform1i(u, Std.int(v[0]));\r\n\t\t\t\t\t\tcase 2:\tgl.uniform2i(u, Std.int(v[0]), Std.int(v[1]));\r\n\t\t\t\t\t\tcase 3: gl.uniform3i(u, Std.int(v[0]), Std.int(v[1]), Std.int(v[2]));\r\n\t\t\t\t\t\tcase 4:\tgl.uniform4i(u, Std.int(v[0]), Std.int(v[1]), Std.int(v[2]), Std.int(v[3]));\r\n\t\t\t\t\t}\r\n\t\t\t\tcase FLOAT:\r\n\t\t\t\t\tswitch(param.size) {\r\n\t\t\t\t\t\tcase 1: gl.uniform1f(u, v[0]);\r\n\t\t\t\t\t\tcase 2: gl.uniform2f(u, v[0], v[1]);\r\n\t\t\t\t\t\tcase 3: gl.uniform3f(u, v[0], v[1], v[2]);\r\n\t\t\t\t\t\tcase 4: gl.uniform4f(u, v[0], v[1], v[2], v[3]);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase MAT:\r\n\t\t\t\t\tswitch(param.size) {\r\n\t\t\t\t\t\tcase 2: gl.uniformMatrix2fv(u, param.transpose, new Float32Array(param.value));\r\n\t\t\t\t\t\tcase 3: gl.uniformMatrix3fv(u, param.transpose, new Float32Array(param.value));\r\n\t\t\t\t\t\tcase 4: gl.uniformMatrix4fv(u, param.transpose, new Float32Array(param.value));\r\n\t\t\t\t\t}\r\n\t\t\t\tcase SAMPLER:\r\n\t\t\t\t\tif (bd == null ||  @:privateAccess !bd.__isValid) continue;\r\n\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + renderSession.activeTextures);\r\n\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, bd.getTexture(gl));\r\n\t\t\t\t\tgl.uniform1i(u, renderSession.activeTextures);\r\n\t\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, param.smooth ? gl.LINEAR : gl.NEAREST);\r\n\t\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, param.smooth ? gl.LINEAR : gl.NEAREST);\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, param.repeatX);\r\n\t\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, param.repeatY);\r\n\t\t\t\t\t\r\n\t\t\t\t\trenderSession.activeTextures++;\r\n\t\t\t\tcase _:\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function getAttribLocation(attribute:String):Int {\r\n\t\tif (program == null) {\r\n\t\t\tthrow \"Shader isn't initialized\";\r\n\t\t}\r\n\t\tif (attributes.exists(attribute)) {\r\n\t\t\treturn attributes.get(attribute);\r\n\t\t} else {\r\n\t\t\tvar location = gl.getAttribLocation(program, attribute);\r\n\t\t\tattributes.set(attribute, location);\r\n\t\t\treturn location;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function getUniformLocation(uniform:String):GLUniformLocation {\r\n\t\tif (program == null) {\r\n\t\t\tthrow \"Shader isn't initialized\";\r\n\t\t}\r\n\t\tif (uniforms.exists(uniform)) {\r\n\t\t\treturn uniforms.get(uniform);\r\n\t\t} else {\r\n\t\t\tvar location = gl.getUniformLocation(program, uniform);\r\n\t\t\tuniforms.set(uniform, location);\r\n\t\t\treturn location;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function enableVertexAttribute(attribute:VertexAttribute, stride:Int, offset:Int) {\r\n\t\tvar location = getAttribLocation(attribute.name);\r\n\t\tgl.enableVertexAttribArray(location);\r\n\t\tgl.vertexAttribPointer(location, attribute.components, attribute.type, attribute.normalized, stride, offset * 4);\r\n\t}\r\n\t\r\n\tpublic function disableVertexAttribute(attribute:VertexAttribute, setDefault:Bool = true) {\r\n\t\tvar location = getAttribLocation(attribute.name);\r\n\t\tgl.disableVertexAttribArray(location);\r\n\t\tif (setDefault) {\r\n\t\t\tswitch(attribute.components) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tgl.vertexAttrib1fv(location, attribute.defaultValue.subarray(0, 1));\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tgl.vertexAttrib2fv(location, attribute.defaultValue.subarray(0, 2));\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tgl.vertexAttrib3fv(location, attribute.defaultValue.subarray(0, 3));\r\n\t\t\t\tcase _:\r\n\t\t\t\t\tgl.vertexAttrib4fv(location, attribute.defaultValue.subarray(0, 4));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function bindVertexArray(va:VertexArray) {\r\n\t\tvar offset = 0;\r\n\t\tvar stride = va.stride;\r\n\t\t\r\n\t\tfor (attribute in va.attributes) {\r\n\t\t\tif (attribute.enabled) {\r\n\t\t\t\tenableVertexAttribute(attribute, stride, offset);\r\n\t\t\t\toffset += attribute.elements;\r\n\t\t\t} else {\r\n\t\t\t\tdisableVertexAttribute(attribute, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function unbindVertexArray(va:VertexArray) {\r\n\t\tfor (attribute in va.attributes) {\r\n\t\t\tdisableVertexAttribute(attribute, false);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function compileProgram(gl:GLRenderContext, vertexSrc:String, fragmentSrc:String):GLProgram {\r\n\t\t\r\n\t\tvar cache = ShaderManager.compiledShadersCache;\r\n\t\tvar key = Md5.encode(vertexSrc + fragmentSrc);\r\n\t\t\r\n\t\tif (cache.exists(key)) {\r\n\t\t\t\r\n\t\t\treturn cache.get(key);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar vertexShader = Shader.compileShader(gl, vertexSrc, gl.VERTEX_SHADER);\r\n\t\tvar fragmentShader = Shader.compileShader(gl, fragmentSrc, gl.FRAGMENT_SHADER);\r\n\t\tvar program = gl.createProgram();\r\n\t\t\r\n\t\tif (vertexShader != null && fragmentShader != null) {\r\n\t\t\tgl.attachShader(program, vertexShader);\r\n\t\t\tgl.attachShader(program, fragmentShader);\r\n\t\t\tgl.linkProgram(program);\r\n\t\t\t\r\n\t\t\tgl.deleteShader(vertexShader);\r\n\t\t\tgl.deleteShader(fragmentShader);\r\n\t\t\t\r\n\t\t\tif (gl.getProgramParameter(program, gl.LINK_STATUS) == 0) {\r\n\t\t\t\ttrace (\"Could not compile the program:\\n\\t\" + gl.getProgramInfoLog(program));\r\n\t\t\t\ttrace (\"VERTEX:\\n\" + vertexSrc + \"\\nFRAGMENT:\\n\" + fragmentSrc);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tcache.set(key, program);\r\n\t\t\r\n\t\treturn program;\r\n\t}\r\n\t\r\n\tstatic function compileShader(gl:GLRenderContext, shaderSrc:String, type:Int):GLShader {\r\n\t\tvar src = shaderSrc;\r\n\t\tvar shader = gl.createShader(type);\r\n\t\tgl.shaderSource(shader, src);\r\n\t\tgl.compileShader(shader);\r\n\t\t\r\n\t\tif (gl.getShaderParameter(shader, gl.COMPILE_STATUS) == 0) {\r\n\t\t\ttrace (\"Could not compile the shader:\\n\\t\" + gl.getShaderInfoLog(shader));\r\n\t\t\ttrace (shaderSrc);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\treturn shader;\r\n\t}\r\n\t\r\n}\r\n","package openfl._internal.renderer.opengl.shaders2;\r\n\r\nimport lime.graphics.GLRenderContext;\r\n\r\n\r\nclass DefaultShader extends Shader {\r\n\t\r\n\tpublic static var VERTEX_SRC(default, null) = [\r\n\t\t\t'attribute vec2 ${Attrib.Position};',\r\n\t\t\t'attribute vec2 ${Attrib.TexCoord};',\r\n\t\t\t'attribute vec4 ${Attrib.Color};',\r\n\t\t\t\r\n\t\t\t'uniform mat3 ${Uniform.ProjectionMatrix};',\r\n\t\t\t'uniform bool ${Uniform.UseColorTransform};',\r\n\t\t\t\r\n\t\t\t'varying vec2 ${Varying.TexCoord};',\r\n\t\t\t'varying vec4 ${Varying.Color};',\r\n\t\t\t\r\n\t\t\t'void main(void) {',\r\n\t\t\t'   gl_Position = vec4((${Uniform.ProjectionMatrix} * vec3(${Attrib.Position}, 1.0)).xy, 0.0, 1.0);',\r\n\t\t\t'   ${Varying.TexCoord} = ${Attrib.TexCoord};',\r\n\t\t\t'   if(${Uniform.UseColorTransform})',\r\n\t\t\t'   \t${Varying.Color} = ${Attrib.Color};',\r\n\t\t\t'   else',\r\n\t\t\t#if (js && html5)\r\n\t\t\t'   \t${Varying.Color} = vec4(${Attrib.Color}.rgb * ${Attrib.Color}.a, ${Attrib.Color}.a);',\r\n\t\t\t#else\r\n\t\t\t'   \t${Varying.Color} = vec4(${Attrib.Color}.bgr * ${Attrib.Color}.a, ${Attrib.Color}.a);',\r\n\t\t\t#end\r\n\t\t\t'}'\r\n\t\t];\r\n\r\n\tpublic function new(gl:GLRenderContext) {\r\n\t\tsuper(gl);\r\n\t\t\r\n\t\tvertexSrc = VERTEX_SRC;\r\n\t\t\r\n\t\tfragmentSrc = [\r\n\t\t\t'#ifdef GL_ES',\r\n\t\t\t'precision lowp float;',\r\n\t\t\t'#endif',\r\n\t\t\t\r\n\t\t\t'uniform sampler2D ${Uniform.Sampler};',\r\n\t\t\t'uniform vec4 ${Uniform.ColorMultiplier};',\r\n\t\t\t'uniform vec4 ${Uniform.ColorOffset};',\r\n\t\t\t'uniform bool ${Uniform.UseColorTransform};',\r\n\t\t\t\r\n\t\t\t'varying vec2 ${Varying.TexCoord};',\r\n\t\t\t'varying vec4 ${Varying.Color};',\r\n\t\t\t\r\n\t\t\t'vec4 colorTransform(const vec4 color, const vec4 tint, const vec4 multiplier, const vec4 offset) {',\r\n\t\t\t'\tif(!${Uniform.UseColorTransform}) {',\r\n\t\t\t'\t\treturn color * tint;',\r\n\t\t\t'\t}',\r\n\t\t\t\r\n\t\t\t'\tvec4 unmultiply;',\r\n\t\t\t'\tif (color.a == 0.0) {',\r\n\t\t\t'\t\tunmultiply = vec4(0.0, 0.0, 0.0, 0.0);',\r\n\t\t\t'\t} else {',\r\n\t\t\t'   \tunmultiply = vec4(color.rgb / color.a, color.a);',\r\n\t\t\t'\t}',\r\n\t\t\t'   vec4 result = unmultiply * tint * multiplier;',\r\n\t\t\t'   result = result + offset;',\r\n\t\t\t'   result = clamp(result, 0., 1.);',\r\n\t\t\t'   result = vec4(result.rgb * result.a, result.a);',\r\n\t\t\t'   return result;',\r\n\t\t\t'}',\r\n\t\t\t\r\n\t\t\t'void main(void) {',\r\n\t\t\t'   vec4 tc = texture2D(${Uniform.Sampler}, ${Varying.TexCoord});',\r\n\t\t\t'   gl_FragColor = colorTransform(tc, ${Varying.Color}, ${Uniform.ColorMultiplier}, ${Uniform.ColorOffset});',\r\n\t\t\t'}'\r\n\t\t\r\n\t\t];\r\n\t\t\r\n\t\tinit();\r\n\t\t\r\n\t}\r\n\t\r\n\toverride private function init(force:Bool = false) {\r\n\t\tsuper.init(force);\r\n\r\n\t\tgetAttribLocation(Attrib.Position);\r\n\t\tgetAttribLocation(Attrib.TexCoord);\r\n\t\tgetAttribLocation(Attrib.Color);\r\n\t\tgetUniformLocation(Uniform.ProjectionMatrix);\r\n\t\tgetUniformLocation(Uniform.Sampler);\r\n\t\tgetUniformLocation(Uniform.ColorMultiplier);\r\n\t\tgetUniformLocation(Uniform.ColorOffset);\r\n\t\tgetUniformLocation(Uniform.UseColorTransform);\r\n\t}\r\n\t\r\n}\r\n\r\n// TODO Find a way to apply these default attributes and uniforms to other shaders\r\n@:enum abstract Attrib(String) from String to String {\r\n\tvar Position = \"openfl_aPosition\";\r\n\tvar TexCoord = \"openfl_aTexCoord0\";\r\n\tvar Color = \"openfl_aColor\";\r\n}\r\n\r\n@:enum abstract Uniform(String) from String to String {\r\n\tvar Sampler = \"openfl_uSampler0\";\r\n\tvar ProjectionMatrix = \"openfl_uProjectionMatrix\";\r\n\tvar Color = \"openfl_uColor\";\r\n\tvar Alpha = \"openfl_uAlpha\";\r\n\tvar ColorMultiplier = \"openfl_uColorMultiplier\";\r\n\tvar ColorOffset = \"openfl_uColorOffset\";\r\n\tvar UseColorTransform = \"openfl_uUseColorTransform\";\r\n}\r\n\r\n@:enum abstract Varying(String) from String to String {\r\n\tvar TexCoord = \"openfl_vTexCoord\";\r\n\tvar Color = \"openfl_vColor\";\r\n}\r\n\r\ntypedef DefAttrib = Attrib;\r\ntypedef DefUniform = Uniform;\r\ntypedef DefVarying = Varying;\r\n","package openfl._internal.renderer.opengl.shaders2;\r\n\r\nimport lime.graphics.GLRenderContext;\r\nimport openfl._internal.renderer.opengl.shaders2.DefaultShader.DefAttrib;\r\nimport openfl._internal.renderer.opengl.shaders2.DefaultShader.DefUniform;\r\n\r\n\r\nclass DrawTrianglesShader extends Shader {\r\n\r\n\tpublic function new(gl:GLRenderContext) {\r\n\t\tsuper(gl);\r\n\t\t\r\n\t\tvertexSrc = [\r\n\t\t\t'attribute vec2 ${Attrib.Position};',\r\n\t\t\t'attribute vec2 ${Attrib.TexCoord};',\r\n\t\t\t'attribute vec4 ${Attrib.Color};',\r\n\t\t\t'uniform mat3 ${Uniform.ProjectionMatrix};',\r\n\t\t\t\r\n\t\t\t'varying vec2 vTexCoord;',\r\n\t\t\t'varying vec4 vColor;',\r\n\t\t\r\n\t\t\t'void main(void) {',\r\n\t\t\t'   gl_Position = vec4((${Uniform.ProjectionMatrix} * vec3(${Attrib.Position}, 1.0)).xy, 0.0, 1.0);',\r\n\t\t\t'   vTexCoord = ${Attrib.TexCoord};',\r\n\t\t\t// the passed color is ARGB format\r\n\t\t\t'   vColor = ${Attrib.Color}.bgra;',\r\n\t\t\t'}',\r\n\r\n\t\t];\r\n\t\t\r\n\t\tfragmentSrc = [\r\n\t\t\t'#ifdef GL_ES',\r\n\t\t\t'precision lowp float;',\r\n\t\t\t'#endif',\r\n\t\t\t\r\n\t\t\t'uniform sampler2D ${Uniform.Sampler};',\r\n\t\t\t'uniform vec3 ${Uniform.Color};',\r\n\t\t\t'uniform bool ${Uniform.UseTexture};',\r\n\t\t\t'uniform float ${Uniform.Alpha};',\r\n\t\t\t'uniform vec4 ${Uniform.ColorMultiplier};',\r\n\t\t\t'uniform vec4 ${Uniform.ColorOffset};',\r\n\t\t\t\r\n\t\t\t'varying vec2 vTexCoord;',\r\n\t\t\t'varying vec4 vColor;',\r\n\t\t\t\r\n\t\t\t'vec4 tmp;',\r\n\t\t\t\r\n\t\t\t'vec4 colorTransform(const vec4 color, const vec4 tint, const vec4 multiplier, const vec4 offset) {',\r\n\t\t\t'   vec4 unmultiply = vec4(color.rgb / color.a, color.a);',\r\n\t\t\t'   vec4 result = unmultiply * tint * multiplier;',\r\n\t\t\t'   result = result + offset;',\r\n\t\t\t'   result = clamp(result, 0., 1.);',\r\n\t\t\t'   result = vec4(result.rgb * result.a, result.a);',\r\n\t\t\t'   return result;',\r\n\t\t\t'}',\r\n\t\t\t\r\n\t\t\t'void main(void) {',\r\n\t\t\t'   if(${Uniform.UseTexture}) {',\r\n\t\t\t'       tmp = texture2D(${Uniform.Sampler}, vTexCoord);',\r\n\t\t\t'   } else {',\r\n\t\t\t'       tmp = vec4(${Uniform.Color}, 1.);',\r\n\t\t\t'   }',\r\n\t\t\t'   gl_FragColor = colorTransform(tmp, vColor, ${Uniform.ColorMultiplier}, ${Uniform.ColorOffset});',\r\n\t\t\t'}'\r\n\t\t];\r\n\t\t\r\n\t\tinit ();\r\n\t}\r\n\t\r\n\toverride private function init(force:Bool = false) {\r\n\t\tsuper.init(force);\r\n\t\t\r\n\t\tgetAttribLocation(Attrib.Position);\r\n\t\tgetAttribLocation(Attrib.TexCoord);\r\n\t\tgetAttribLocation(Attrib.Color);\r\n\t\t\r\n\t\tgetUniformLocation(Uniform.Sampler);\r\n\t\tgetUniformLocation(Uniform.ProjectionMatrix);\r\n\t\tgetUniformLocation(Uniform.Color);\r\n\t\tgetUniformLocation(Uniform.Alpha);\r\n\t\tgetUniformLocation(Uniform.UseTexture);\r\n\t\tgetUniformLocation(Uniform.ColorMultiplier);\r\n\t\tgetUniformLocation(Uniform.ColorOffset);\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n@:enum private abstract Attrib(String) from String to String {\r\n\tvar Position = DefAttrib.Position;\r\n\tvar TexCoord = DefAttrib.TexCoord;\r\n\tvar Color = DefAttrib.Color;\r\n}\r\n\r\n@:enum private abstract Uniform(String) from String to String {\r\n\tvar UseTexture = \"openfl_uUseTexture\";\r\n\tvar Sampler = DefUniform.Sampler;\r\n\tvar ProjectionMatrix = DefUniform.ProjectionMatrix;\r\n\tvar Color = DefUniform.Color;\r\n\tvar Alpha = DefUniform.Alpha;\r\n\tvar ColorMultiplier = DefUniform.ColorMultiplier;\r\n\tvar ColorOffset = DefUniform.ColorOffset;\t\r\n}\r\n\r\ntypedef DrawTrianglesAttrib = Attrib;\r\ntypedef DrawTrianglesUniform = Uniform;","package openfl._internal.renderer.opengl.shaders2;\r\n\r\nimport lime.graphics.GLRenderContext;\r\nimport openfl._internal.renderer.opengl.shaders2.DefaultShader.DefAttrib;\r\nimport openfl._internal.renderer.opengl.shaders2.DefaultShader.DefUniform;\r\n\r\nclass FillShader extends Shader {\r\n\r\n\tpublic function new(gl:GLRenderContext) {\r\n\t\tsuper(gl);\r\n\t\t\r\n\t\tvertexSrc = [\r\n\t\t\t'attribute vec2 ${Attrib.Position};',\r\n\t\t\t'uniform mat3 ${Uniform.TranslationMatrix};',\r\n\t\t\t'uniform mat3 ${Uniform.ProjectionMatrix};',\r\n\t\t\t\r\n\t\t\t'uniform vec4 ${Uniform.Color};',\r\n\t\t\t'uniform float ${Uniform.Alpha};',\r\n\t\t\t'uniform vec4 ${Uniform.ColorMultiplier};',\r\n\t\t\t'uniform vec4 ${Uniform.ColorOffset};',\r\n\t\t\t\r\n\t\t\t'varying vec4 vColor;',\r\n\t\t\t\r\n\t\t\t'vec4 colorTransform(const vec4 color, const float alpha, const vec4 multiplier, const vec4 offset) {',\r\n\t\t\t'   vec4 result = color * multiplier;',\r\n\t\t\t'   result.a *= alpha;',\r\n\t\t\t'   result = result + offset;',\r\n\t\t\t'   result = clamp(result, 0., 1.);',\r\n\t\t\t'   result = vec4(result.rgb * result.a, result.a);',\r\n\t\t\t'   return result;',\r\n\t\t\t'}',\t\t\t\r\n\t\t\t\r\n\t\t\t'void main(void) {',\r\n\t\t\t'   gl_Position = vec4((${Uniform.ProjectionMatrix} * ${Uniform.TranslationMatrix} * vec3(${Attrib.Position}, 1.0)).xy, 0.0, 1.0);',\r\n\t\t\t'   vColor = colorTransform(${Uniform.Color}, ${Uniform.Alpha}, ${Uniform.ColorMultiplier}, ${Uniform.ColorOffset});',\r\n\t\t\t'}'\r\n\r\n\t\t];\r\n\t\t\r\n\t\tfragmentSrc = [\r\n\t\t\t'#ifdef GL_ES',\r\n\t\t\t'precision lowp float;',\r\n\t\t\t'#endif',\r\n\t\t\t\r\n\t\t\t'varying vec4 vColor;',\r\n\t\t\t\r\n\t\t\t'void main(void) {',\r\n\t\t\t'   gl_FragColor = vColor;',\r\n\t\t\t'}'\r\n\t\t];\r\n\t\t\r\n\t\tinit ();\r\n\t}\r\n\t\r\n\toverride private function init(force:Bool = false) {\r\n\t\tsuper.init(force);\r\n\t\t\r\n\t\tgetAttribLocation(Attrib.Position);\r\n\t\tgetUniformLocation(Uniform.TranslationMatrix);\r\n\t\tgetUniformLocation(Uniform.ProjectionMatrix);\r\n\t\tgetUniformLocation(Uniform.Color);\r\n\t\tgetUniformLocation(Uniform.ColorMultiplier);\r\n\t\tgetUniformLocation(Uniform.ColorOffset);\r\n\t}\r\n\t\r\n}\r\n\r\n@:enum private abstract Attrib(String) from String to String {\r\n\tvar Position = DefAttrib.Position;\r\n}\r\n\r\n@:enum private abstract Uniform(String) from String to String {\r\n\tvar TranslationMatrix = \"openfl_uTranslationMatrix\";\r\n\tvar ProjectionMatrix = DefUniform.ProjectionMatrix;\r\n\tvar Color = DefUniform.Color;\r\n\tvar Alpha = DefUniform.Alpha;\r\n\tvar ColorMultiplier = DefUniform.ColorMultiplier;\r\n\tvar ColorOffset = DefUniform.ColorOffset;\r\n}\r\n\r\ntypedef FillAttrib = Attrib;\r\ntypedef FillUniform = Uniform;","package openfl._internal.renderer.opengl.shaders2;\r\n\r\nimport lime.graphics.GLRenderContext;\r\nimport openfl._internal.renderer.opengl.shaders2.DefaultShader.DefAttrib;\r\nimport openfl._internal.renderer.opengl.shaders2.DefaultShader.DefUniform;\r\n\r\nclass PatternFillShader extends Shader {\r\n\r\n\tpublic function new(gl:GLRenderContext) {\r\n\t\tsuper(gl);\r\n\t\t\r\n\t\tvertexSrc = [\r\n\t\t\t'attribute vec2 ${Attrib.Position};',\r\n\t\t\t'uniform mat3 ${Uniform.TranslationMatrix};',\r\n\t\t\t'uniform mat3 ${Uniform.ProjectionMatrix};',\r\n\t\t\t'uniform mat3 ${Uniform.PatternMatrix};',\r\n\t\t\t\r\n\t\t\t'varying vec2 vPosition;',\r\n\t\t\t\r\n\t\t\t'void main(void) {',\r\n\t\t\t'   gl_Position = vec4((${Uniform.ProjectionMatrix} * ${Uniform.TranslationMatrix} * vec3(${Attrib.Position}, 1.0)).xy, 0.0, 1.0);',\r\n\t\t\t'   vPosition = (${Uniform.PatternMatrix} * vec3(${Attrib.Position}, 1)).xy;',\r\n\t\t\t'}'\r\n\r\n\t\t];\r\n\t\t\r\n\t\tfragmentSrc = [\r\n\t\t\t'#ifdef GL_ES',\r\n\t\t\t'precision lowp float;',\r\n\t\t\t'#endif',\r\n\t\t\t\r\n\t\t\t'uniform float ${Uniform.Alpha};',\r\n\t\t\t'uniform vec2 ${Uniform.PatternTL};',\r\n\t\t\t'uniform vec2 ${Uniform.PatternBR};',\r\n\t\t\t'uniform sampler2D ${Uniform.Sampler};',\r\n\t\t\t\r\n\t\t\t'uniform vec4 ${Uniform.ColorMultiplier};',\r\n\t\t\t'uniform vec4 ${Uniform.ColorOffset};',\r\n\t\t\t\r\n\t\t\t'varying vec2 vPosition;',\r\n\t\t\t\r\n\t\t\t'vec4 colorTransform(const vec4 color, const float alpha, const vec4 multiplier, const vec4 offset) {',\r\n\t\t\t'   vec4 unmultiply = vec4(color.rgb / color.a, color.a);',\r\n\t\t\t'   vec4 result = unmultiply * multiplier;',\r\n\t\t\t'   result.a *= alpha;',\r\n\t\t\t'   result = result + offset;',\r\n\t\t\t'   result = clamp(result, 0., 1.);',\r\n\t\t\t'   result = vec4(result.rgb * result.a, result.a);',\r\n\t\t\t'   return result;',\r\n\t\t\t'}',\t\r\n\t\t\t\r\n\t\t\t'void main(void) {',\r\n\t\t\t'   vec2 pos = mix(${Uniform.PatternTL}, ${Uniform.PatternBR}, vPosition);',\r\n\t\t\t'   vec4 tcol = texture2D(${Uniform.Sampler}, pos);',\r\n\t\t\t'   gl_FragColor = colorTransform(tcol, ${Uniform.Alpha}, ${Uniform.ColorMultiplier}, ${Uniform.ColorOffset});',\r\n\t\t\t'}'\r\n\t\t];\r\n\t\t\r\n\t\tinit();\r\n\t}\r\n\t\r\n\toverride private function init(force:Bool = false) {\r\n\t\tsuper.init(force);\r\n\t\t\r\n\t\tgetAttribLocation(Attrib.Position);\r\n\t\t\r\n\t\tgetUniformLocation(Uniform.TranslationMatrix);\r\n\t\tgetUniformLocation(Uniform.PatternMatrix);\r\n\t\tgetUniformLocation(Uniform.ProjectionMatrix);\r\n\t\tgetUniformLocation(Uniform.Sampler);\r\n\t\tgetUniformLocation(Uniform.PatternTL);\r\n\t\tgetUniformLocation(Uniform.PatternBR);\r\n\t\tgetUniformLocation(Uniform.Alpha);\r\n\t\tgetUniformLocation(Uniform.ColorMultiplier);\r\n\t\tgetUniformLocation(Uniform.ColorOffset);\r\n\t}\r\n\t\r\n}\r\n\r\n@:enum private abstract Attrib(String) to String from String {\r\n\tvar Position = DefAttrib.Position;\r\n}\r\n\r\n@:enum private abstract Uniform(String) from String to String {\r\n\tvar TranslationMatrix = \"openfl_uTranslationMatrix\";\r\n\tvar PatternMatrix = \"openfl_uPatternMatrix\";\r\n\tvar PatternTL = \"openfl_uPatternTL\";\r\n\tvar PatternBR = \"openfl_uPatternBR\";\r\n\tvar Sampler = DefUniform.Sampler;\r\n\tvar ProjectionMatrix = DefUniform.ProjectionMatrix;\r\n\tvar Color = DefUniform.Color;\r\n\tvar Alpha = DefUniform.Alpha;\r\n\tvar ColorMultiplier = DefUniform.ColorMultiplier;\r\n\tvar ColorOffset = DefUniform.ColorOffset;\r\n\t\r\n}\r\n\r\ntypedef PatternFillAttrib = Attrib;\r\ntypedef PatternFillUniform = Uniform;","package openfl._internal.renderer.opengl.shaders2;\r\n\r\nimport lime.graphics.GLRenderContext;\r\nimport openfl._internal.renderer.opengl.shaders2.DefaultShader.DefAttrib;\r\nimport openfl._internal.renderer.opengl.shaders2.DefaultShader.DefUniform;\r\n\r\nclass PrimitiveShader extends Shader {\r\n\r\n\tpublic function new(gl:GLRenderContext) {\r\n\t\tsuper(gl);\r\n\t\t\r\n\t\tvertexSrc  = [\r\n\t\t\t'attribute vec2 ${Attrib.Position};',\r\n\t\t\t'attribute vec4 ${Attrib.Color};',\r\n\t\t\t\r\n\t\t\t'uniform mat3 ${Uniform.TranslationMatrix};',\r\n\t\t\t'uniform mat3 ${Uniform.ProjectionMatrix};',\r\n\t\t\t'uniform vec4 ${Uniform.ColorMultiplier};',\r\n\t\t\t'uniform vec4 ${Uniform.ColorOffset};',\r\n\t\t\t'uniform float ${Uniform.Alpha};',\r\n\t\t\t\r\n\t\t\t'varying vec4 vColor;',\r\n\t\t\t\r\n\t\t\t'vec4 colorTransform(const vec4 color, const float alpha, const vec4 multiplier, const vec4 offset) {',\r\n\t\t\t'   vec4 result = color * multiplier;',\r\n\t\t\t'   result.a *= alpha;',\r\n\t\t\t'   result = result + offset;',\r\n\t\t\t'   result = clamp(result, 0., 1.);',\r\n\t\t\t'   result = vec4(result.rgb * result.a, result.a);',\r\n\t\t\t'   return result;',\r\n\t\t\t'}',\t\r\n\t\t\t\r\n\t\t\t'void main(void) {',\r\n\t\t\t'   gl_Position = vec4((${Uniform.ProjectionMatrix} * ${Uniform.TranslationMatrix} * vec3(${Attrib.Position}, 1.0)).xy, 0.0, 1.0);',\r\n\t\t\t'   vColor = colorTransform(${Attrib.Color}, ${Uniform.Alpha}, ${Uniform.ColorMultiplier}, ${Uniform.ColorOffset});',\r\n\t\t\t'}'\r\n\t\t];\r\n\t\t\r\n\t\tfragmentSrc = [\r\n\t\t\t'#ifdef GL_ES',\r\n\t\t\t'precision lowp float;',\r\n\t\t\t'#endif',\r\n\t\t\t\r\n\t\t\t'varying vec4 vColor;',\r\n\t\t\t\r\n\t\t\t'void main(void) {',\r\n\t\t\t'   gl_FragColor = vColor;',\r\n\t\t\t'}'\r\n\t\t];\r\n\t\t\r\n\t\tinit();\r\n\t}\r\n\t\r\n\toverride private function init(force:Bool = false) {\r\n\t\tsuper.init(force);\r\n\t\t\r\n\t\tgetAttribLocation(Attrib.Position);\r\n\t\tgetAttribLocation(Attrib.Color);\r\n\t\tgetUniformLocation(Uniform.TranslationMatrix);\r\n\t\tgetUniformLocation(Uniform.ProjectionMatrix);\r\n\t\tgetUniformLocation(Uniform.Alpha);\r\n\t\tgetUniformLocation(Uniform.ColorMultiplier);\r\n\t\tgetUniformLocation(Uniform.ColorOffset);\r\n\t}\r\n\t\r\n}\r\n\r\n@:enum private abstract Attrib(String) to String from String {\r\n\tvar Position = DefAttrib.Position;\r\n\tvar Color = DefAttrib.Color;\r\n}\r\n\r\n@:enum private abstract Uniform(String) from String to String {\r\n\tvar TranslationMatrix = \"openfl_uTranslationMatrix\";\r\n\tvar ProjectionMatrix = DefUniform.ProjectionMatrix;\r\n\tvar Alpha = DefUniform.Alpha;\r\n\tvar ColorMultiplier = DefUniform.ColorMultiplier;\r\n\tvar ColorOffset = DefUniform.ColorOffset;\r\n}\r\n\r\ntypedef PrimitiveAttrib =  Attrib;\r\ntypedef PrimitiveUniform =  Uniform;","package openfl._internal.renderer.opengl.utils;\r\n\r\n\r\nimport lime.graphics.GLRenderContext;\r\nimport openfl.display.BlendMode;\r\nimport openfl.gl.GL;\r\n\r\n\r\nclass BlendModeManager {\r\n\t\r\n\tpublic var currentBlendMode:BlendMode;\r\n\tpublic var gl:GLRenderContext;\r\n\t\r\n\t\r\n\tpublic function new (gl:GLRenderContext) {\r\n\t\t\r\n\t\tthis.gl = gl;\r\n\t\tcurrentBlendMode = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function destroy ():Void {\r\n\t\t\r\n\t\tgl = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setBlendMode (blendMode:BlendMode, ?force:Bool = false):Bool {\r\n\t\t\r\n\t\tif (blendMode == null) {\r\n\t\t\t\r\n\t\t\tblendMode = BlendMode.NORMAL;\r\n\t\t\tforce = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!force && currentBlendMode == blendMode) {\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tcurrentBlendMode = blendMode;\r\n\t\t\r\n\t\tswitch (blendMode) {\r\n\t\t\t\r\n\t\t\tcase ADD:\r\n\t\t\t\t\r\n\t\t\t\tgl.blendEquation (GL.FUNC_ADD);\r\n\t\t\t\tgl.blendFunc (GL.ONE, GL.ONE);\r\n\t\t\t\r\n\t\t\tcase MULTIPLY:\r\n\t\t\t\t\r\n\t\t\t\tgl.blendEquation (GL.FUNC_ADD);\r\n\t\t\t\tgl.blendFunc (GL.DST_COLOR, GL.ONE_MINUS_SRC_ALPHA);\r\n\t\t\t\r\n\t\t\tcase SCREEN:\r\n\t\t\t\t\r\n\t\t\t\tgl.blendEquation (GL.FUNC_ADD);\r\n\t\t\t\tgl.blendFunc (GL.ONE, GL.ONE_MINUS_SRC_COLOR);\r\n\t\t\t\r\n\t\t\tcase SUBTRACT:\r\n\t\t\t\t\r\n\t\t\t\tgl.blendEquation (GL.FUNC_REVERSE_SUBTRACT);\r\n\t\t\t\tgl.blendFunc (GL.ONE, GL.ONE);\r\n\t\t\t\r\n\t\t\t#if desktop\r\n\t\t\tcase DARKEN:\r\n\t\t\t\t\r\n\t\t\t\tgl.blendEquation (0x8007); // GL_MIN\r\n\t\t\t\tgl.blendFunc (GL.ONE, GL.ONE);\r\n\t\t\t\t\r\n\t\t\tcase LIGHTEN:\r\n\t\t\t\t\r\n\t\t\t\tgl.blendEquation (0x8008); // GL_MAX\r\n\t\t\t\tgl.blendFunc (GL.ONE, GL.ONE);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t\tgl.blendEquation (GL.FUNC_ADD);\r\n\t\t\t\tgl.blendFunc (GL.ONE, GL.ONE_MINUS_SRC_ALPHA);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\ntypedef GLBlendMode = {\r\n\tsrc:GLBlendFunction, dest:GLBlendFunction, func:GLBlendEquation\r\n}\r\n\r\n@:enum abstract GLBlendEquation(Int) from Int to Int {\r\n\tvar ADD = GL.FUNC_ADD;\r\n\tvar SUBTRACT = GL.FUNC_SUBTRACT;\r\n\tvar REVERSE_SUBTRACT = GL.FUNC_REVERSE_SUBTRACT;\r\n\t\r\n}\r\n\r\n@:enum abstract GLBlendFunction(Int) from Int to Int {\r\n\tvar ZERO = GL.ZERO;\r\n\tvar ONE = GL.ONE;\r\n\tvar SRC_COLOR = GL.SRC_COLOR;\r\n\tvar DST_COLOR = GL.DST_COLOR;\r\n\tvar ONE_MINUS_SRC_COLOR = GL.ONE_MINUS_SRC_COLOR;\r\n\tvar ONE_MINUS_DST_COLOR = GL.ONE_MINUS_DST_COLOR;\r\n\tvar CONSTANT_COLOR = GL.CONSTANT_COLOR;\r\n\tvar ONE_MINUS_CONSTANT_COLOR = GL.ONE_MINUS_CONSTANT_COLOR;\r\n\tvar SRC_ALPHA = GL.SRC_ALPHA;\r\n\tvar DST_ALPHA = GL.DST_ALPHA;\r\n\tvar ONE_MINUS_SRC_ALPHA = GL.ONE_MINUS_SRC_ALPHA;\r\n\tvar ONE_MINUS_DST_ALPHA = GL.ONE_MINUS_DST_ALPHA;\r\n\tvar CONSTANT_ALPHA = GL.CONSTANT_ALPHA;\r\n\tvar ONE_MINUS_CONSTANT_ALPHA = GL.ONE_MINUS_CONSTANT_ALPHA;\r\n\tvar SRC_ALPHA_SATURATE = GL.SRC_ALPHA_SATURATE;\r\n}\r\n","package openfl._internal.renderer.opengl.utils;\r\n\r\nimport lime.graphics.GLRenderContext;\r\nimport openfl._internal.renderer.opengl.GLRenderer;\r\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer;\r\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer.GLStack;\r\nimport openfl._internal.renderer.DrawCommandReader;\r\nimport openfl.display.Graphics;\r\nimport openfl.display.Bitmap;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.BlendMode;\r\nimport openfl.display.CapsStyle;\r\nimport openfl.display.DisplayObject;\r\nimport openfl._internal.renderer.DrawCommandType;\r\nimport openfl.display.Graphics;\r\nimport openfl.display.GraphicsPathCommand;\r\nimport openfl.display.GraphicsPathWinding;\r\nimport openfl.display.JointStyle;\r\nimport openfl.display.LineScaleMode;\r\nimport openfl.display.TriangleCulling;\r\nimport openfl.display.Tilesheet;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.Vector;\r\nimport openfl.display.Shader;\r\n\r\nclass DrawPath {\r\n\r\n\r\n\tpublic var line:LineStyle;\r\n\tpublic var fill:FillType;\r\n\tpublic var fillIndex:Int = 0;\r\n\tpublic var isRemovable:Bool = true;\r\n\tpublic var winding:WindingRule = WindingRule.EVEN_ODD;\r\n\r\n\tpublic var points:Array<Float> = null;\r\n\r\n\tpublic var type:GraphicType = Polygon;\r\n\r\n\tpublic function new(makeArray:Bool=true) {\r\n\t\tline = new LineStyle();\r\n\t\tfill = None;\r\n\t\tif (makeArray)\r\n\t\t{\r\n\t\t\tpoints = [];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function update(line:LineStyle, fill:FillType, fillIndex:Int, winding:WindingRule):Void {\r\n\t\tupdateLine(line);\r\n\t\tthis.fill = fill;\r\n\t\tthis.fillIndex = fillIndex;\r\n\t\tthis.winding = winding;\r\n\t}\r\n\r\n\tpublic function updateLine(line:LineStyle):Void {\r\n\t\tthis.line.width = line.width;\r\n\t\tthis.line.color = line.color;\r\n\t\tthis.line.alpha = line.alpha == null ? 1 : line.alpha;\r\n\t\tthis.line.scaleMode = line.scaleMode == null ? LineScaleMode.NORMAL : line.scaleMode;\r\n\t\tthis.line.caps = line.caps == null ? CapsStyle.ROUND : line.caps;\r\n\t\tthis.line.joints = line.joints == null ? JointStyle.ROUND : line.joints;\r\n\t\tthis.line.miterLimit = line.miterLimit;\r\n\t}\r\n\r\n\tpublic static function getStack(graphics:Graphics, gl:GLRenderContext):GLStack {\r\n\t\treturn PathBuiler.build(graphics, gl);\r\n\t}\r\n\r\n}\r\n\r\n@:access(openfl._internal.renderer.opengl.utils.GraphicsRenderer)\r\n@:access(openfl.display.Graphics)\r\nclass PathBuiler {\r\n\r\n\tprivate static var __currentPath:DrawPath;\r\n\tprivate static var __currentWinding:WindingRule = WindingRule.EVEN_ODD;\r\n\tprivate static var __drawPaths:Array<DrawPath>;\r\n\tprivate static var __line:LineStyle;\r\n\tprivate static var __fill:FillType;\r\n\tprivate static var __fillIndex:Int = 0;\r\n\r\n\tprivate static function closePath():Void {\r\n\t\tvar l = __currentPath.points == null ? 0 : __currentPath.points.length;\r\n\t\tif (l <= 0) return;\r\n\t\t// the paths are only closed when the type is a polygon and there is a fill\r\n\t\tif (__currentPath.type == Polygon && __currentPath.fill != None) {\r\n\t\t\tvar sx = __currentPath.points[0];\r\n\t\t\tvar sy = __currentPath.points[1];\r\n\t\t\tvar ex = __currentPath.points[l - 2];\r\n\t\t\tvar ey = __currentPath.points[l - 1];\r\n\t\t\t\r\n\t\t\tif (!(sx == ex && sy == ey)) {\r\n\t\t\t\tlineTo(sx, sy);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static function endFill ():Void {\r\n\t\t\r\n\t\t__fill = None;\r\n\t\t__fillIndex++;\r\n\t\t\r\n\t}\r\n\r\n\tprivate static inline function moveTo (x:Float, y:Float) {\r\n\t\t\r\n\t\tgraphicDataPop ();\r\n\t\t__currentPath = new DrawPath ();\r\n\t\t__currentPath.update(__line, __fill, __fillIndex, __currentWinding);\r\n\t\t__currentPath.type = Polygon;\r\n\t\t__currentPath.points.push (x);\r\n\t\t__currentPath.points.push (y);\r\n\t\t\r\n\t\t__drawPaths.push (__currentPath);\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate static inline function lineTo (x:Float, y:Float) {\r\n\t\tvar points = __currentPath.points;\r\n\t\tvar push_point:Bool = true;\r\n\r\n\t\t// Skip duplicate point.\r\n\t\tif (points.length > 1) {\r\n\t\t\tvar lastX = points[points.length-2];\r\n\t\t\tvar lastY = points[points.length-1];\r\n\t\t\tif (lastX == x && lastY == y) {\r\n\t\t\t\tpush_point = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (push_point == true) {\r\n\t\t\t__currentPath.points.push (x);\r\n\t\t\t__currentPath.points.push (y);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate static inline function curveTo (cx:Float, cy:Float, x:Float, y:Float) {\r\n\r\n\t\tif (__currentPath.points == null || __currentPath.points.length == 0) {\r\n\t\t\tmoveTo (0, 0);\r\n\t\t}\r\n\t\t\r\n\t\tGraphicsPaths.curveTo (__currentPath.points, cx, cy, x, y);\r\n\r\n\t}\r\n\t\r\n\tprivate static inline function cubicCurveTo(cx:Float, cy:Float, cx2:Float, cy2:Float, x:Float, y:Float) {\r\n\r\n\t\tif (__currentPath.points == null || __currentPath.points.length == 0) {\r\n\t\t\tmoveTo (0, 0);\r\n\t\t}\r\n\r\n\t\tGraphicsPaths.cubicCurveTo (__currentPath.points, cx, cy, cx2, cy2, x, y);\r\n\t\t\r\n\t}\r\n\r\n\tprivate inline static function graphicDataPop ():Void {\r\n\t\t\r\n\t\tif (__currentPath.isRemovable && ( __currentPath.points == null || __currentPath.points.length == 0)) {\r\n\t\t\t__drawPaths.pop ();\r\n\t\t} else {\r\n\t\t\tclosePath();\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic static function build(graphics:Graphics, gl:GLRenderContext):GLStack {\r\n\t\t\r\n\t\tvar glStack:GLStack = null;\r\n\t\tvar bounds = graphics.__bounds;\r\n\t\t\r\n\t\t__drawPaths = new Array<DrawPath> ();\r\n\t\t__currentPath = new DrawPath ();\r\n\t\t__line = new LineStyle();\r\n\t\t__fill = None;\r\n\t\t__fillIndex = 0;\r\n\t\t\r\n\t\tglStack = graphics.__glStack[GLRenderer.glContextId];\r\n\t\t\t\r\n\t\tif (glStack == null) {\r\n\t\t\t\r\n\t\t\tglStack = graphics.__glStack[GLRenderer.glContextId] = new GLStack (gl);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!graphics.__visible || graphics.__commands.length == 0 || bounds == null || bounds.width == 0 || bounds.height == 0) {\r\n\t\t\t\r\n\t\t\t//glStack = graphics.__glStack[GLRenderer.glContextId] = new GLStack (gl);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar data = new DrawCommandReader (graphics.__commands);\r\n\t\t\t\r\n\t\t\tfor (type in graphics.__commands.types) {\r\n\t\t\t\t\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase BEGIN_BITMAP_FILL:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readBeginBitmapFill ();\r\n\t\t\t\t\t\tendFill ();\r\n\t\t\t\t\t\t__fill = c.bitmap != null ? Texture (c.bitmap, c.matrix, c.repeat, c.smooth) : None;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (__currentPath.points == null || __currentPath.points.length == 0) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tgraphicDataPop ();\r\n\t\t\t\t\t\t\t__currentPath = new DrawPath ();\r\n\t\t\t\t\t\t\t__currentPath.update (__line, __fill, __fillIndex, __currentWinding);\r\n\t\t\t\t\t\t\t__currentPath.points = [];\r\n\t\t\t\t\t\t\t__currentPath.type = Polygon;\r\n\t\t\t\t\t\t\t__drawPaths.push (__currentPath);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase BEGIN_FILL:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readBeginFill ();\r\n\t\t\t\t\t\tendFill ();\r\n\t\t\t\t\t\t__fill = c.alpha > 0 ? Color (c.color & 0xFFFFFF, c.alpha) : None;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (__currentPath.points == null || __currentPath.points.length == 0) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tgraphicDataPop ();\r\n\t\t\t\t\t\t\t__currentPath = new DrawPath ();\r\n\t\t\t\t\t\t\t__currentPath.update (__line, __fill, __fillIndex, __currentWinding);\r\n\t\t\t\t\t\t\t__currentPath.points = [];\r\n\t\t\t\t\t\t\t__currentPath.type = Polygon;\r\n\t\t\t\t\t\t\t__drawPaths.push (__currentPath);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase CUBIC_CURVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readCubicCurveTo ();\r\n\t\t\t\t\t\tcubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase CURVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readCurveTo ();\r\n\t\t\t\t\t\tcurveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_CIRCLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawCircle ();\r\n\t\t\t\t\t\tgraphicDataPop ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__currentPath = new DrawPath ();\r\n\t\t\t\t\t\t__currentPath.update (__line, __fill, __fillIndex, __currentWinding);\r\n\t\t\t\t\t\t__currentPath.type = Circle;\r\n\t\t\t\t\t\t__currentPath.points = [ c.x, c.y, c.radius ];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_ELLIPSE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawEllipse ();\r\n\t\t\t\t\t\tgraphicDataPop ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__currentPath = new DrawPath ();\r\n\t\t\t\t\t\t__currentPath.update (__line, __fill, __fillIndex, __currentWinding);\r\n\t\t\t\t\t\t__currentPath.type = Ellipse;\r\n\t\t\t\t\t\t__currentPath.points = [ c.x, c.y, c.width, c.height ];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_RECT:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawRect ();\r\n\t\t\t\t\t\tgraphicDataPop ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__currentPath = new DrawPath ();\r\n\t\t\t\t\t\t__currentPath.update (__line, __fill, __fillIndex, __currentWinding);\r\n\t\t\t\t\t\t__currentPath.type = Rectangle (false);\r\n\t\t\t\t\t\t__currentPath.points = [ c.x, c.y, c.width, c.height ];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_ROUND_RECT:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawRoundRect ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar x = c.x;\r\n\t\t\t\t\t\tvar y = c.y;\r\n\t\t\t\t\t\tvar width = c.width;\r\n\t\t\t\t\t\tvar height = c.height;\r\n\t\t\t\t\t\tvar rx = c.ellipseWidth;\r\n\t\t\t\t\t\tvar ry = c.ellipseHeight;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (ry == null) ry = rx;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trx *= 0.5;\r\n\t\t\t\t\t\try *= 0.5;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (rx > width / 2) rx = width / 2;\r\n\t\t\t\t\t\tif (ry > height / 2) ry = height / 2;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tgraphicDataPop ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__currentPath = new DrawPath ();\r\n\t\t\t\t\t\t__currentPath.update (__line, __fill, __fillIndex, __currentWinding);\r\n\t\t\t\t\t\t__currentPath.type = Rectangle (true);\r\n\t\t\t\t\t\t__currentPath.points = [ x, y, width, height, rx, ry ];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase END_FILL:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readEndFill ();\r\n\t\t\t\t\t\tendFill ();\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_STYLE:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineStyle ();\r\n\t\t\t\t\t\t__line = new LineStyle ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (c.thickness == null || Math.isNaN (c.thickness) || c.thickness < 0) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t__line.width = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (c.thickness == 0) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t__line.width = 1;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t__line.width = c.thickness;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tgraphicDataPop ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__line.color = c.color;\r\n\t\t\t\t\t\t__line.alpha = c.alpha;\r\n\t\t\t\t\t\t__line.scaleMode = c.scaleMode;\r\n\t\t\t\t\t\t__line.caps = c.caps;\r\n\t\t\t\t\t\t__line.joints = c.joints;\r\n\t\t\t\t\t\t__line.miterLimit = c.miterLimit;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__currentPath = new DrawPath ();\r\n\t\t\t\t\t\t__currentPath.update (__line, __fill, __fillIndex, __currentWinding);\r\n\t\t\t\t\t\t__currentPath.points = [];\r\n\t\t\t\t\t\t__currentPath.type = GraphicType.Polygon;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LINE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readLineTo ();\r\n\t\t\t\t\t\tlineTo (c.x, c.y);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase MOVE_TO:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readMoveTo ();\r\n\t\t\t\t\t\tmoveTo(c.x, c.y);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_TRIANGLES:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawTriangles ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar uvtData:Vector<Float> = c.uvtData;\r\n\t\t\t\t\t\tvar vertices = c.vertices;\r\n\t\t\t\t\t\tvar indices = c.indices;\r\n\t\t\t\t\t\tvar culling = c.culling;\r\n\t\t\t\t\t\t//var colors = c.colors;\r\n\t\t\t\t\t\t//var blendMode = c.blendMode;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar isColor = switch (__fill) { case Color (_, _): true; case _: false; };\r\n\t\t\t\t\t\tif (isColor && uvtData != null) {\r\n\t\t\t\t\t\t\t\t// Flash doesn't draw anything if the fill isn't a bitmap and there are uvt values\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tgraphicDataPop ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__currentPath = new DrawPath ();\r\n\t\t\t\t\t\t__currentPath.update (__line, __fill, __fillIndex, __currentWinding);\r\n\t\t\t\t\t\tif (uvtData == null) {\r\n\t\t\t\t\t\t\tuvtData = new Vector<Float> ();\r\n\t\t\t\t\t\t\tswitch(__fill) {\r\n\t\t\t\t\t\t\t\tcase Texture(b, _):\r\n\t\t\t\t\t\t\t\t\tfor (i in 0...Std.int(vertices.length / 2)) {\r\n\t\t\t\t\t\t\t\t\t\tuvtData.push(vertices[i * 2] / b.width);\r\n\t\t\t\t\t\t\t\t\t\tuvtData.push(vertices[i * 2 + 1] / b.height);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcase _:\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//__currentPath.type = GraphicType.DrawTriangles (vertices, indices, uvtData, culling, colors, blendMode);\r\n\t\t\t\t\t\t__currentPath.type = GraphicType.DrawTriangles (vertices, indices, uvtData, culling, null, 0);\r\n\t\t\t\t\t\t__currentPath.isRemovable = false;\r\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_TILES:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawTiles ();\r\n\t\t\t\t\t\tgraphicDataPop ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__fillIndex++;\r\n\t\t\t\t\t\t__currentPath = new DrawPath (false);\r\n\t\t\t\t\t\t__currentPath.update (__line, __fill, __fillIndex, __currentWinding);\r\n\t\t\t\t\t\t__currentPath.type = GraphicType.DrawTiles (c.sheet, c.tileData, c.smooth, c.flags, c.shader, c.count);\r\n\t\t\t\t\t\t__currentPath.isRemovable = false;\r\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase DRAW_PATH:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readDrawPath ();\r\n\t\t\t\t\t\tgraphicDataPop ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tswitch (c.winding) {\r\n\t\t\t\t\t\t\tcase GraphicsPathWinding.EVEN_ODD:\r\n\t\t\t\t\t\t\t\t__currentWinding = EVEN_ODD;\r\n\t\t\t\t\t\t\tcase GraphicsPathWinding.NON_ZERO:\r\n\t\t\t\t\t\t\t\t__currentWinding = NON_ZERO;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t__currentWinding = EVEN_ODD;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar command:Int;\r\n\t\t\t\t\t\tvar cx:Float, cy:Float;\r\n\t\t\t\t\t\tvar cx2:Float, cy2:Float;\r\n\t\t\t\t\t\tvar ax:Float, ay:Float;\r\n\t\t\t\t\t\tvar idx = 0;\r\n\t\t\t\t\t\tfor (i in 0...c.commands.length) {\r\n\t\t\t\t\t\t\tcommand = c.commands[i];\r\n\t\t\t\t\t\t\tswitch(command) {\r\n\t\t\t\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\r\n\t\t\t\t\t\t\t\t\tax = c.data[idx + 0];\r\n\t\t\t\t\t\t\t\t\tay = c.data[idx + 1];\r\n\t\t\t\t\t\t\t\t\tidx += 2;\r\n\t\t\t\t\t\t\t\t\tmoveTo(ax, ay);\r\n\t\t\t\t\t\t\t\tcase GraphicsPathCommand.WIDE_MOVE_TO:\r\n\t\t\t\t\t\t\t\t\tax = c.data[idx + 2];\r\n\t\t\t\t\t\t\t\t\tay = c.data[idx + 3];\r\n\t\t\t\t\t\t\t\t\tidx += 4;\r\n\t\t\t\t\t\t\t\t\tmoveTo(ax, ay);\r\n\t\t\t\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\r\n\t\t\t\t\t\t\t\t\tax = c.data[idx + 0];\r\n\t\t\t\t\t\t\t\t\tay = c.data[idx + 1];\r\n\t\t\t\t\t\t\t\t\tidx += 2;\r\n\t\t\t\t\t\t\t\t\tlineTo(ax, ay);\r\n\t\t\t\t\t\t\t\tcase GraphicsPathCommand.WIDE_LINE_TO:\r\n\t\t\t\t\t\t\t\t\tax = c.data[idx + 2];\r\n\t\t\t\t\t\t\t\t\tay = c.data[idx + 3];\r\n\t\t\t\t\t\t\t\t\tidx += 4;\r\n\t\t\t\t\t\t\t\t\tlineTo(ax, ay);\r\n\t\t\t\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\r\n\t\t\t\t\t\t\t\t\tcx = c.data[idx + 0];\r\n\t\t\t\t\t\t\t\t\tcy = c.data[idx + 1];\r\n\t\t\t\t\t\t\t\t\tax = c.data[idx + 2];\r\n\t\t\t\t\t\t\t\t\tay = c.data[idx + 3];\r\n\t\t\t\t\t\t\t\t\tidx += 4;\r\n\t\t\t\t\t\t\t\t\tcurveTo(cx, cy, ax, ay);\r\n\t\t\t\t\t\t\t\tcase GraphicsPathCommand.CUBIC_CURVE_TO:\r\n\t\t\t\t\t\t\t\t\tcx  = c.data[idx + 0];\r\n\t\t\t\t\t\t\t\t\tcy  = c.data[idx + 1];\r\n\t\t\t\t\t\t\t\t\tcx2 = c.data[idx + 2];\r\n\t\t\t\t\t\t\t\t\tcy2 = c.data[idx + 3];\r\n\t\t\t\t\t\t\t\t\tax  = c.data[idx + 4];\r\n\t\t\t\t\t\t\t\t\tay  = c.data[idx + 5];\r\n\t\t\t\t\t\t\t\t\tidx += 6;\r\n\t\t\t\t\t\t\t\t\tcubicCurveTo(cx, cy, cx2, cy2, ax, ay);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__currentWinding = EVEN_ODD;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tcase OVERRIDE_MATRIX:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar c = data.readOverrideMatrix ();\r\n\t\t\t\t\t\tgraphicDataPop ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__currentPath = new DrawPath ();\r\n\t\t\t\t\t\t__currentPath.update (__line, __fill, __fillIndex, __currentWinding);\r\n\t\t\t\t\t\t__currentPath.type = GraphicType.OverrideMatrix(c.matrix);\r\n\t\t\t\t\t\t__currentPath.isRemovable = false;\r\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdata.skip (type);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tclosePath ();\r\n\t\t\tdata.destroy ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tgraphics.__drawPaths = __drawPaths;\r\n\t\t\r\n\t\treturn glStack;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\nclass LineStyle {\r\n\r\n\tpublic var width:Float;\r\n\tpublic var color:Int;\r\n\tpublic var alpha:Null<Float>;\r\n\r\n\tpublic var scaleMode:LineScaleMode;\r\n\tpublic var caps:CapsStyle;\r\n\tpublic var joints:JointStyle;\r\n\tpublic var miterLimit:Float;\r\n\t\r\n\tpublic function new() {\r\n\t\twidth = 0;\r\n\t\tcolor = 0;\r\n\t\talpha = 1;\r\n\t\tscaleMode = LineScaleMode.NORMAL;\r\n\t\tcaps = CapsStyle.ROUND;\r\n\t\tjoints = JointStyle.ROUND;\r\n\t\tmiterLimit = 3;\r\n\t}\r\n\r\n}\r\n\r\n@:enum abstract WindingRule(Int) {\r\n\tvar EVEN_ODD = 0;\r\n\tvar NON_ZERO = 1;\r\n}\r\n\r\nenum FillType {\r\n\tNone;\r\n\tColor(color:Int, alpha:Float);\r\n\tTexture(bitmap:BitmapData, matrix:Matrix, repeat:Bool, smooth:Bool);\r\n\tGradient;\r\n}\r\n","package openfl._internal.renderer.opengl.utils;\r\n\r\n\r\nimport lime.graphics.opengl.GLBuffer;\r\nimport lime.graphics.opengl.GLFramebuffer;\r\nimport lime.graphics.GLRenderContext;\r\nimport lime.utils.Float32Array;\r\nimport lime.utils.UInt16Array;\r\nimport openfl._internal.renderer.opengl.shaders2.*;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.geom.Rectangle;\r\n\r\n\r\nclass FilterManager {\r\n\t\r\n\t\r\n\tpublic var buffer:GLFramebuffer;\r\n\tpublic var colorArray:Float32Array;\r\n\tpublic var colorBuffer:GLBuffer;\r\n\tpublic var defaultShader:DefaultShader;\r\n\tpublic var filterStack:Array<Dynamic>;\r\n\tpublic var gl:GLRenderContext;\r\n\tpublic var height:Int;\r\n\tpublic var indexBuffer:GLBuffer;\r\n\tpublic var offsetX:Float;\r\n\tpublic var offsetY:Float;\r\n\tpublic var renderSession:RenderSession;\r\n\tpublic var texturePool:Array<RenderTexture>;\r\n\tpublic var transparent:Bool;\r\n\tpublic var uvArray:Float32Array;\r\n\tpublic var uvBuffer:GLBuffer;\r\n\tpublic var vertexArray:Float32Array;\r\n\tpublic var vertexBuffer:GLBuffer;\r\n\tpublic var width:Int;\r\n\t\r\n\t\r\n\tpublic function new (gl:GLRenderContext, transparent:Bool) {\r\n\t\t\r\n\t\tthis.transparent = transparent;\r\n\t\t\r\n\t\tfilterStack = [];\r\n\t\t\r\n\t\toffsetX = 0;\r\n\t\toffsetY = 0;\r\n\t\t\r\n\t\tsetContext (gl);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function applyFilterPass (filter:Dynamic, filterArea:Rectangle, width:Int, height:Int):Void {\r\n\t\t\r\n\t\t/*\r\n\t\tvar gl = this.gl;\r\n\t\tvar shader:DefaultShader = cast filter.shaders[GLRenderer.glContextId];\r\n\t\t\r\n\t\tif (shader == null) {\r\n\t\t\t\r\n\t\t\tshader = new DefaultShader (gl);\r\n\t\t\tshader.fragmentSrc = filter.fragmentSrc;\r\n\t\t\tshader.uniforms = filter.uniforms;\r\n\t\t\tshader.init ();\r\n\t\t\t\r\n\t\t\tfilter.shaders[GLRenderer.glContextId] = shader;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\trenderSession.shaderManager.setShader (shader);\r\n\t\t\r\n\t\tgl.uniform2f (shader.projectionVector, width / 2, -height / 2);\r\n\t\tgl.uniform2f (shader.offsetVector, 0, 0);\r\n\t\t\r\n\t\tif (filter.uniforms.dimensions != null) {\r\n\t\t\t\r\n\t\t\tfilter.uniforms.dimensions.value[0] = this.width + 0.0;\r\n\t\t\tfilter.uniforms.dimensions.value[1] = this.height + 0.0;\r\n\t\t\tfilter.uniforms.dimensions.value[2] = this.vertexArray[0];\r\n\t\t\tfilter.uniforms.dimensions.value[3] = this.vertexArray[5];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tshader.syncUniforms ();\r\n\t\t\r\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, vertexBuffer);\r\n\t\tgl.vertexAttribPointer (shader.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\r\n\t\t\r\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, uvBuffer);\r\n\t\tgl.vertexAttribPointer (shader.aTextureCoord, 2, gl.FLOAT, false, 0, 0);\r\n\t\t\r\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, colorBuffer);\r\n\t\tgl.vertexAttribPointer (shader.colorAttribute, 2, gl.FLOAT, false, 0, 0);\r\n\t\t\r\n\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\t\t\r\n\t\tgl.drawElements (gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\r\n\t\trenderSession.drawCount++;\r\n\t\t*/\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function begin (renderSession:RenderSession, buffer:GLFramebuffer = null):Void {\r\n\t\t\r\n\t\tthis.renderSession = renderSession;\r\n\t\tdefaultShader = renderSession.shaderManager.defaultShader;\r\n\t\t\r\n\t\t// TODO\r\n\t\twidth = 0;\r\n\t\theight = 0;\r\n\t\tthis.buffer = buffer;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function destroy ():Void {\r\n\t\t\r\n\t\tvar gl = this.gl;\r\n\t\t\r\n\t\tfilterStack = null;\r\n\t\t\r\n\t\toffsetX = 0;\r\n\t\toffsetY = 0;\r\n\t\t\r\n\t\tfor (texture in texturePool) {\r\n\t\t\t\r\n\t\t\ttexture.destroy ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\ttexturePool = null;\r\n\t\t\r\n\t\tgl.deleteBuffer (vertexBuffer);\r\n\t\tgl.deleteBuffer (uvBuffer);\r\n\t\tgl.deleteBuffer (colorBuffer);\r\n\t\tgl.deleteBuffer (indexBuffer);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function initShaderBuffers ():Void {\r\n\t\t\r\n\t\tvar gl = this.gl;\r\n\t\t\r\n\t\tvertexBuffer = gl.createBuffer ();\r\n\t\tuvBuffer = gl.createBuffer ();\r\n\t\tcolorBuffer = gl.createBuffer ();\r\n\t\tindexBuffer = gl.createBuffer ();\r\n\t\t\r\n\t\tvertexArray = new Float32Array ([ 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0 ]);\r\n\t\t\r\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, vertexBuffer);\r\n\t\tgl.bufferData (gl.ARRAY_BUFFER, vertexArray, gl.STATIC_DRAW);\r\n\t\t\r\n\t\tuvArray = new Float32Array ([ 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0 ]);\r\n\t\t\r\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, uvBuffer);\r\n\t\tgl.bufferData (gl.ARRAY_BUFFER, uvArray, gl.STATIC_DRAW);\r\n\t\t\r\n\t\tcolorArray = new Float32Array ([ 1.0, 0xFFFFFF, 1.0, 0xFFFFFF, 1.0, 0xFFFFFF, 1.0, 0xFFFFFF ]);\r\n\t\t\r\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, colorBuffer);\r\n\t\tgl.bufferData (gl.ARRAY_BUFFER, colorArray, gl.STATIC_DRAW);\r\n\t\t\r\n\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\t\tgl.bufferData (gl.ELEMENT_ARRAY_BUFFER, new UInt16Array ([ 0, 1, 2, 1, 3, 2 ]), gl.STATIC_DRAW);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function popFilter ():Void {\r\n\t\t\r\n\t\t/*\r\n\t\tvar gl = this.gl;\r\n\t\tvar filterBlock = filterStack.pop();\r\n\t\tvar filterArea:Rectangle = filterBlock._filterArea;\r\n\t\tvar texture = filterBlock._glFilterTexture;\r\n\t\tvar projection = renderSession.projection;\r\n\t\tvar offset = renderSession.offset;\r\n\t\t\r\n\t\tif (filterBlock.filterPasses.length > 1) {\r\n\t\t\t\r\n\t\t\tgl.viewport (0, 0, Std.int (filterArea.width), Std.int (filterArea.height));\r\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, vertexBuffer);\r\n\t\t\t\r\n\t\t\tthis.vertexArray[0] = 0;\r\n\t\t\tthis.vertexArray[1] = filterArea.height;\r\n\t\t\tthis.vertexArray[2] = filterArea.width;\r\n\t\t\tthis.vertexArray[3] = filterArea.height;\r\n\t\t\tthis.vertexArray[4] = 0;\r\n\t\t\tthis.vertexArray[5] = 0;\r\n\t\t\tthis.vertexArray[6] = filterArea.width;\r\n\t\t\tthis.vertexArray[7] = 0;\r\n\t\t\t\r\n\t\t\tgl.bufferSubData (gl.ARRAY_BUFFER, 0, vertexArray);\r\n\t\t\t\r\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, uvBuffer);\r\n\t\t\t\r\n\t\t\tthis.uvArray[2] = filterArea.width / width;\r\n\t\t\tthis.uvArray[5] = filterArea.height / height;\r\n\t\t\tthis.uvArray[6] = filterArea.width / width;\r\n\t\t\tthis.uvArray[7] = filterArea.height / height;\r\n\t\t\t\r\n\t\t\tgl.bufferSubData (gl.ARRAY_BUFFER, 0, uvArray);\r\n\t\t\t\r\n\t\t\tvar inputTexture:FilterTexture = texture;\r\n\t\t\tvar outputTexture:FilterTexture = texturePool.pop ();\r\n\t\t\t\r\n\t\t\tif (outputTexture == null) {\r\n\t\t\t\t\r\n\t\t\t\toutputTexture = new FilterTexture (gl, width, height);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toutputTexture.resize (width, height);\r\n\t\t\t\r\n\t\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, outputTexture.frameBuffer);\r\n\t\t\tgl.clear (gl.COLOR_BUFFER_BIT);\r\n\t\t\t\r\n\t\t\tgl.disable (gl.BLEND);\r\n\t\t\t\r\n\t\t\tfor (i in 0...Std.int (filterBlock.filterPasses.length - 1)) {\r\n\t\t\t\t\r\n\t\t\t\tvar filterPass = filterBlock.filterPasses[i];\r\n\t\t\t\t\r\n\t\t\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, outputTexture.frameBuffer);\r\n\t\t\t\t\r\n\t\t\t\tgl.activeTexture (gl.TEXTURE0);\r\n\t\t\t\tgl.bindTexture (gl.TEXTURE_2D, inputTexture.texture);\r\n\t\t\t\t\r\n\t\t\t\tapplyFilterPass (filterPass, filterArea, Std.int (filterArea.width), Std.int (filterArea.height));\r\n\t\t\t\t\r\n\t\t\t\tvar temp = inputTexture;\r\n\t\t\t\tinputTexture = outputTexture;\r\n\t\t\t\toutputTexture = temp;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgl.enable (gl.BLEND);\r\n\t\t\t\r\n\t\t\ttexture = inputTexture;\r\n\t\t\ttexturePool.push (outputTexture);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar filter = filterBlock.filterPasses[Std.int (filterBlock.filterPasses.length - 1)];\r\n\t\t\r\n\t\tthis.offsetX -= filterArea.x;\r\n\t\tthis.offsetY -= filterArea.y;\r\n\t\t\r\n\t\tvar sizeX = width;\r\n\t\tvar sizeY = height;\r\n\t\t\r\n\t\tvar offsetX = 0.0;\r\n\t\tvar offsetY = 0.0;\r\n\t\t\r\n\t\tvar buffer = this.buffer;\r\n\t\t\r\n\t\tif (filterStack.length == 0) {\r\n\t\t\t\r\n\t\t\tgl.colorMask (true, true, true, true);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar currentFilter = filterStack[filterStack.length-1];\r\n\t\t\tfilterArea = currentFilter._filterArea;\r\n\t\t\t\r\n\t\t\tsizeX = Std.int (filterArea.width);\r\n\t\t\tsizeY = Std.int (filterArea.height);\r\n\t\t\t\r\n\t\t\toffsetX = filterArea.x;\r\n\t\t\toffsetY = filterArea.y;\r\n\t\t\t\r\n\t\t\tbuffer = currentFilter._glFilterTexture.frameBuffer;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tprojection.x = sizeX / 2;\r\n\t\tprojection.y = -sizeY / 2;\r\n\t\t\r\n\t\toffset.x = offsetX;\r\n\t\toffset.y = offsetY;\r\n\t\t\r\n\t\tfilterArea = filterBlock._filterArea;\r\n\t\t\r\n\t\tvar x = filterArea.x - offsetX;\r\n\t\tvar y = filterArea.y - offsetY;\r\n\t\t\r\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\t\t\r\n\t\tvertexArray[0] = x;\r\n\t\tvertexArray[1] = y + filterArea.height;\r\n\t\tvertexArray[2] = x + filterArea.width;\r\n\t\tvertexArray[3] = y + filterArea.height;\r\n\t\tvertexArray[4] = x;\r\n\t\tvertexArray[5] = y;\r\n\t\tvertexArray[6] = x + filterArea.width;\r\n\t\tvertexArray[7] = y;\r\n\t\t\r\n\t\tgl.bufferSubData (gl.ARRAY_BUFFER, 0, vertexArray);\r\n\t\t\r\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, uvBuffer);\r\n\t\t\r\n\t\tthis.uvArray[2] = filterArea.width / width;\r\n\t\tthis.uvArray[5] = filterArea.height / height;\r\n\t\tthis.uvArray[6] = filterArea.width / width;\r\n\t\tthis.uvArray[7] = filterArea.height / height;\r\n\t\t\r\n\t\tgl.bufferSubData (gl.ARRAY_BUFFER, 0, uvArray);\r\n\t\t\r\n\t\tgl.viewport (0, 0, sizeX, sizeY);\r\n\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, buffer);\r\n\t\t\r\n\t\tgl.activeTexture (gl.TEXTURE0);\r\n\t\tgl.bindTexture (gl.TEXTURE_2D, texture.texture);\r\n\t\t\r\n\t\tapplyFilterPass (filter, filterArea, sizeX, sizeY);\r\n\t\t\r\n\t\trenderSession.shaderManager.setShader (defaultShader);\r\n\t\tgl.uniform2f (defaultShader.projectionVector, sizeX / 2, -sizeY / 2);\r\n\t\tgl.uniform2f (defaultShader.offsetVector, -offsetX, -offsetY);\r\n\t\t\r\n\t\ttexturePool.push (texture);\r\n\t\tfilterBlock._glFilterTexture = null;\r\n\t\t*/\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function pushFilter (filterBlock:Dynamic):Void {\r\n\t\t\r\n\t\t/*\r\n\t\tvar gl = this.gl;\r\n\t\t\r\n\t\tvar projection = renderSession.projection;\r\n\t\tvar offset =  renderSession.offset;\r\n\t\t\r\n\t\tif (filterBlock.target.filterArea != null) {\r\n\t\t\t\r\n\t\t\tfilterBlock._filterArea = filterBlock.target.filterArea;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tfilterBlock._filterArea = filterBlock.target.getBounds ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfilterStack.push (filterBlock);\r\n\t\t\r\n\t\tvar filter = filterBlock.filterPasses[0];\r\n\t\t\r\n\t\toffsetX += filterBlock._filterArea.x;\r\n\t\toffsetY += filterBlock._filterArea.y;\r\n\t\t\r\n\t\tvar texture = this.texturePool.pop ();\r\n\t\t\r\n\t\tif (texture == null) {\r\n\t\t\t\r\n\t\t\ttexture = new FilterTexture (gl, width, height);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\ttexture.resize (width, height);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tgl.bindTexture (gl.TEXTURE_2D, texture.texture);\r\n\t\t\r\n\t\tvar filterArea:Rectangle = filterBlock._filterArea;\r\n\t\t\r\n\t\tvar padding = filter.padding;\r\n\t\tfilterArea.x -= padding;\r\n\t\tfilterArea.y -= padding;\r\n\t\tfilterArea.width += padding * 2;\r\n\t\tfilterArea.height += padding * 2;\r\n\t\t\r\n\t\tif (filterArea.x < 0) filterArea.x = 0;\r\n\t\tif (filterArea.width > this.width) filterArea.width = this.width;\r\n\t\tif (filterArea.y < 0) filterArea.y = 0;\r\n\t\tif (filterArea.height > this.height) filterArea.height = this.height;\r\n\t\t\r\n\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, texture.frameBuffer);\r\n\t\t\r\n\t\tgl.viewport (0, 0, Std.int (filterArea.width), Std.int (filterArea.height));\r\n\t\t\r\n\t\tprojection.x = filterArea.width / 2;\r\n\t\tprojection.y = -filterArea.height / 2;\r\n\t\t\r\n\t\toffset.x = -filterArea.x;\r\n\t\toffset.y = -filterArea.y;\r\n\t\t\r\n\t\trenderSession.shaderManager.setShader (defaultShader);\r\n\t\tgl.uniform2f (defaultShader.projectionVector, filterArea.width / 2, -filterArea.height / 2);\r\n\t\tgl.uniform2f (defaultShader.offsetVector, -filterArea.x, -filterArea.y);\r\n\t\t\r\n\t\tgl.colorMask (true, true, true, true);\r\n\t\tgl.clearColor (0, 0, 0, 0);\r\n\t\tgl.clear (gl.COLOR_BUFFER_BIT);\r\n\t\t\r\n\t\tfilterBlock._glFilterTexture = texture;\r\n\t\t*/\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setContext (gl:GLRenderContext):Void {\r\n\t\t\r\n\t\tthis.gl = gl;\r\n\t\ttexturePool = [];\r\n\t\t\r\n\t\tinitShaderBuffers ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.opengl.utils;\r\n\r\n\r\nimport lime.graphics.GLRenderContext;\r\nimport openfl._internal.renderer.AbstractMaskManager;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.DisplayObject;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Rectangle;\r\n\r\n\r\nclass GLMaskManager extends AbstractMaskManager {\r\n\t\r\n\t\r\n\tpublic var gl:GLRenderContext;\r\n\t\r\n\tprivate var clips:Array<Rectangle>;\r\n\tprivate var currentClip:Rectangle;\r\n\tprivate var savedClip:Rectangle;\r\n\t\r\n\t\r\n\tpublic function new (renderSession:RenderSession) {\r\n\t\t\r\n\t\tsuper (renderSession);\r\n\t\t\r\n\t\tsetContext (renderSession.gl);\r\n\t\t\r\n\t\tclips = [];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function destroy () {\r\n\t\t\r\n\t\tgl = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\toverride public function pushRect(rect:Rectangle, transform:Matrix):Void {\r\n\t\t\r\n\t\tif (rect == null) return;\r\n\t\t\r\n\t\tvar m = transform.clone ();\r\n\t\t// correct coords from top-left (OpenFL) to bottom-left (GL)\r\n\t\t@:privateAccess GLBitmap.flipMatrix (m, renderSession.renderer.viewport.height);\r\n\t\tvar clip = rect.clone ();\r\n\t\t@:privateAccess clip.__transform (clip, m);\r\n\t\t\r\n\t\tif (currentClip != null /*&& currentClip.intersects(clip)*/) {\r\n\t\t\t\r\n\t\t\tclip = currentClip.intersection (clip);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar restartBatch = (currentClip == null || clip.isEmpty () || currentClip.containsRect (clip));\r\n\t\t\r\n\t\tclips.push (clip);\r\n\t\tcurrentClip = clip;\r\n\t\t\r\n\t\tif (restartBatch) {\r\n\t\t\t\r\n\t\t\trenderSession.spriteBatch.stop ();\r\n\t\t\trenderSession.spriteBatch.start (currentClip);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function pushMask (mask:DisplayObject) {\r\n\t\t\r\n\t\trenderSession.spriteBatch.stop ();\r\n\t\trenderSession.stencilManager.pushMask (mask, renderSession);\r\n\t\trenderSession.spriteBatch.start (currentClip);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function popMask () {\r\n\t\t\r\n\t\trenderSession.spriteBatch.stop ();\r\n\t\trenderSession.stencilManager.popMask (null, renderSession);\r\n\t\trenderSession.spriteBatch.start (currentClip);\r\n\t\t\r\n\t}\r\n\t\r\n\toverride public function popRect():Void {\r\n\t\t\r\n\t\trenderSession.spriteBatch.stop ();\r\n\t\t\r\n\t\tclips.pop ();\r\n\t\tcurrentClip = clips[clips.length - 1];\r\n\t\t\r\n\t\trenderSession.spriteBatch.start (currentClip);\r\n\t\t\r\n\t}\r\n\t\r\n\toverride public function saveState():Void {\r\n\t\t\r\n\t\tsavedClip = currentClip;\r\n\t\tcurrentClip = null;\r\n\t\t\r\n\t}\r\n\t\r\n\toverride public function restoreState():Void {\r\n\t\t\r\n\t\tcurrentClip = savedClip;\r\n\t\tsavedClip = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setContext (gl:GLRenderContext) {\r\n\t\t\r\n\t\tif (renderSession != null) {\r\n\t\t\t\r\n\t\t\trenderSession.gl = gl;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.gl = gl;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n/*\r\nclass MaskManager {\r\n\t\r\n\t\r\n\tpublic var count:Int;\r\n\tpublic var gl:GLRenderContext;\r\n\tpublic var maskPosition:Int;\r\n\tpublic var maskStack:Array<Dynamic>;\r\n\tpublic var reverse:Bool;\r\n\t\r\n\t\r\n\tpublic function new (gl:GLRenderContext) {\r\n\t\t\r\n\t\tmaskStack = [];\r\n\t\tmaskPosition = 0;\r\n\t\t\r\n\t\tsetContext (gl);\r\n\t\t\r\n\t\treverse = false;\r\n\t\tcount = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function destroy ():Void {\r\n\t\t\r\n\t\tmaskStack = null;\r\n\t\tgl = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function popMask (maskData:Dynamic, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tvar gl = this.gl;\r\n\t\trenderSession.stencilManager.popStencil (maskData, maskData._webGL[GLRenderer.glContextId].data[0], renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function pushMask (maskData:Dynamic, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tvar gl = renderSession.gl;\r\n\t\t\r\n\t\tif (maskData.dirty) {\r\n\t\t\t\r\n\t\t\tGraphicsRenderer.updateGraphics (maskData, gl);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (maskData._webGL[GLRenderer.glContextId].data.length == 0) return;\r\n\t\trenderSession.stencilManager.pushStencil (maskData, maskData._webGL[GLRenderer.glContextId].data[0], renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setContext (gl:GLRenderContext):Void {\r\n\t\t\r\n\t\tthis.gl = gl;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n*/\r\n\r\n/*class MaskManager {\r\n\t\r\n\t\r\n\tprivate var renderSession:RenderSession;\r\n\t\r\n\t\r\n\tpublic function new (renderSession:RenderSession) {\r\n\t\t\r\n\t\tthis.renderSession = renderSession;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function pushMask (mask:IBitmapDrawable):Void {\r\n\t\t\r\n\t\tvar context = renderSession.context;\r\n\t\t\r\n\t\tcontext.save ();\r\n\t\t\r\n\t\t//var cacheAlpha = mask.__worldAlpha;\r\n\t\tvar transform = mask.__worldTransform;\r\n\t\tif (transform == null) transform = new Matrix ();\r\n\t\t\r\n\t\tcontext.setTransform (transform.a, transform.c, transform.b, transform.d, transform.tx, transform.ty);\r\n\t\t\r\n\t\tcontext.beginPath ();\r\n\t\tmask.__renderMask (renderSession);\r\n\t\t\r\n\t\tcontext.clip ();\r\n\t\t\r\n\t\t//mask.worldAlpha = cacheAlpha;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function pushRect (rect:Rectangle, transform:Matrix):Void {\r\n\t\t\r\n\t\tvar context = renderSession.context;\r\n\t\tcontext.save ();\r\n\t\t\r\n\t\tcontext.setTransform (transform.a, transform.c, transform.b, transform.d, transform.tx, transform.ty);\r\n\t\t\r\n\t\tcontext.beginPath ();\r\n\t\tcontext.rect (rect.x, rect.y, rect.width, rect.height);\r\n\t\tcontext.clip ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function popMask ():Void {\r\n\t\t\r\n\t\trenderSession.context.restore ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}*/","package openfl._internal.renderer.opengl.utils;\r\n\r\nimport lime.graphics.opengl.GL;\r\nimport openfl.utils.ArrayBufferView;\r\nimport openfl.utils.Float32Array;\r\n\r\n\r\nclass VertexAttribute {\r\n\r\n\tpublic var components:Int;\r\n\tpublic var normalized:Bool = false;\r\n\tpublic var type:ElementType;\r\n\tpublic var name:String;\r\n\tpublic var enabled:Bool = true;\r\n\tpublic var elements(get, never):Int;\r\n\t\r\n\tpublic var defaultValue:Float32Array;\r\n\t\r\n\tpublic function new(components:Int, type:ElementType, normalized:Bool = false, name:String, ?defaultValue:Float32Array) {\r\n\t\tthis.components = components;\r\n\t\tthis.type = type;\r\n\t\tthis.normalized = normalized;\r\n\t\tthis.name = name;\r\n\t\t\r\n\t\tif (defaultValue == null) {\r\n\t\t\tthis.defaultValue = new Float32Array(components);\r\n\t\t} else {\r\n\t\t\tthis.defaultValue = defaultValue;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function copy() {\r\n\t\treturn new VertexAttribute(components, type, normalized, name, defaultValue);\r\n\t}\r\n\t\r\n\tprivate inline function getElementsBytes() {\r\n\t\treturn switch(type) {\r\n\t\t\tcase BYTE, UNSIGNED_BYTE: 1;\r\n\t\t\tcase SHORT, UNSIGNED_SHORT: 2;\r\n\t\t\tdefault: 4;\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tprivate inline function get_elements():Int {\r\n\t\treturn Math.floor((components * getElementsBytes()) / 4);\r\n\t}\r\n\t\r\n}\r\n\r\n@:enum abstract ElementType(Int) from Int to Int {\r\n\tvar BYTE = GL.BYTE;\r\n\tvar UNSIGNED_BYTE = GL.UNSIGNED_BYTE;\r\n\tvar SHORT = GL.SHORT;\r\n\tvar UNSIGNED_SHORT = GL.UNSIGNED_SHORT;\r\n\tvar FLOAT = GL.FLOAT;\r\n}","package openfl._internal.renderer.opengl.utils;\r\n\r\n\r\nimport haxe.EnumFlags;\r\nimport lime.graphics.opengl.GLBuffer;\r\nimport lime.graphics.GLRenderContext;\r\nimport lime.utils.Float32Array;\r\nimport lime.utils.UInt16Array;\r\nimport lime.utils.UInt32Array;\r\nimport openfl._internal.renderer.opengl.shaders2.*;\r\nimport openfl._internal.renderer.opengl.shaders2.DefaultShader.DefUniform;\r\nimport openfl._internal.renderer.opengl.shaders2.DrawTrianglesShader.DrawTrianglesAttrib;\r\nimport openfl._internal.renderer.opengl.shaders2.DrawTrianglesShader.DrawTrianglesUniform;\r\nimport openfl._internal.renderer.opengl.shaders2.FillShader.FillAttrib;\r\nimport openfl._internal.renderer.opengl.shaders2.FillShader.FillUniform;\r\nimport openfl._internal.renderer.opengl.shaders2.PatternFillShader.PatternFillUniform;\r\nimport openfl._internal.renderer.opengl.shaders2.PrimitiveShader.PrimitiveAttrib;\r\nimport openfl._internal.renderer.opengl.shaders2.PrimitiveShader.PrimitiveUniform;\r\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer.GLBucketData;\r\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer.RenderMode;\r\nimport openfl._internal.renderer.opengl.utils.VertexAttribute.ElementType;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.Bitmap;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.BlendMode;\r\nimport openfl.display.CapsStyle;\r\nimport openfl.display.DisplayObject;\r\nimport openfl.display.Graphics;\r\nimport openfl.display.JointStyle;\r\nimport openfl.display.LineScaleMode;\r\nimport openfl.display.TriangleCulling;\r\nimport openfl.display.Tilesheet;\r\nimport openfl.geom.ColorTransform;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.gl.GLTexture;\r\nimport openfl.utils.Int16Array;\r\nimport openfl.Vector;\r\nimport openfl.display.Shader in FlashShader;\r\n\r\n\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.display.BitmapData)\r\n@:access(openfl.geom.Matrix)\r\n\r\nclass GraphicsRenderer {\r\n\t\r\n\tpublic static var fillVertexAttributes = [\r\n\t\tnew VertexAttribute(2, ElementType.FLOAT, false, FillAttrib.Position),\r\n\t];\r\n\tpublic static var drawTrianglesVertexAttributes = [\r\n\t\tnew VertexAttribute(2, ElementType.FLOAT, false, DrawTrianglesAttrib.Position),\r\n\t\tnew VertexAttribute(2, ElementType.FLOAT, false, DrawTrianglesAttrib.TexCoord),\r\n\t\tnew VertexAttribute(4, ElementType.UNSIGNED_BYTE, true, DrawTrianglesAttrib.Color),\r\n\t];\r\n\tpublic static var primitiveVertexAttributes = [\r\n\t\tnew VertexAttribute(2, ElementType.FLOAT, false, PrimitiveAttrib.Position),\r\n\t\tnew VertexAttribute(4, ElementType.FLOAT, false, PrimitiveAttrib.Color),\r\n\t];\r\n\t\r\n\tpublic static var graphicsDataPool:Array<GLGraphicsData> = [];\r\n\tpublic static var bucketPool:Array<GLBucket> = [];\r\n\t\r\n\tprivate static var SIN45 = 0.70710678118654752440084436210485;\r\n\tprivate static var TAN22 = 0.4142135623730950488016887242097;\r\n\t\r\n\tprivate static var objectPosition:Point = new Point();\r\n\tprivate static var objectBounds:Rectangle = new Rectangle();\r\n\t\r\n\tprivate static var lastVertsBuffer:GLBuffer;\r\n\tprivate static var lastBucketMode:BucketMode;\r\n\tprivate static var lastTexture:GLTexture;\r\n\tprivate static var lastTextureRepeat:Bool;\r\n\tprivate static var lastTextureSmooth:Bool;\r\n\tprivate static var overrideMatrix:Matrix;\r\n\t\r\n\tpublic static function buildCircle (path:DrawPath, glStack:GLStack, localCoords:Bool = false):Void {\r\n\t\tvar rectData = path.points;\r\n\r\n\t\tvar x = rectData[0];\r\n\t\tvar y = rectData[1];\r\n\t\tvar rx = rectData[2];\r\n\t\tvar ry = (rectData.length == 3) ? rx : rectData[3];\r\n\t\t\r\n\t\tif (path.type == Ellipse) {\r\n\t\t\trx /= 2;\r\n\t\t\try /= 2;\r\n\t\t\tx += rx;\r\n\t\t\ty += ry;\r\n\t\t}\r\n\r\n\t\tif(localCoords) {\r\n\t\t\tx -= objectBounds.x;\r\n\t\t\ty -= objectBounds.y;\r\n\t\t}\r\n\r\n\t\tvar totalSegs = 40;\r\n\t\tvar seg = (Math.PI * 2) / totalSegs;\r\n\t\t\r\n\t\tvar bucket = prepareBucket(path, glStack);\r\n\t\tvar fill = bucket.getData(Fill);\r\n\t\t\r\n\t\tif(fill != null) {\r\n\t\t\tvar verts = fill.verts;\r\n\t\t\tvar indices = fill.indices;\r\n\t\t\t\r\n\t\t\tvar vertPos = Std.int (verts.length / 2);\r\n\t\t\t\r\n\t\t\tindices.push (vertPos);\r\n\t\t\t\r\n\t\t\tfor (i in 0...totalSegs + 1) {\r\n\t\t\t\t\r\n\t\t\t\tverts.push (x);\r\n\t\t\t\tverts.push (y);\r\n\t\t\t\t\r\n\t\t\t\tverts.push (x + Math.sin (seg * i) * rx);\r\n\t\t\t\tverts.push (y + Math.cos (seg * i) * ry);\r\n\t\t\t\t\r\n\t\t\t\tindices.push (vertPos++);\r\n\t\t\t\tindices.push (vertPos++);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tindices.push (vertPos - 1);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif (path.line.width > 0) {\r\n\t\t\t\r\n\t\t\tvar tempPoints = path.points;\r\n\t\t\tpath.points = [];\r\n\t\t\t\r\n\t\t\tGraphicsPaths.ellipse (path.points, x, y, rx, ry, totalSegs);\r\n\t\t\t\r\n\t\t\tbuildLine (path, bucket);\r\n\t\t\tpath.points = tempPoints;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic static function buildComplexPoly (path:DrawPath, glStack:GLStack, localCoords:Bool = false):Void {\r\n\t\t\r\n\t\tvar bucket:GLBucket = null;\r\n\t\t\r\n\t\tif (path.points.length >= 6) {\r\n\t\t\tvar points = path.points.copy();\r\n\t\t\t\r\n\t\t\tif(localCoords) {\r\n\t\t\t\tfor (i in 0...Std.int(points.length / 2)) {\r\n\t\t\t\t\tpoints[i * 2] -= objectBounds.x;\r\n\t\t\t\t\tpoints[i * 2 + 1] -= objectBounds.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tbucket = prepareBucket(path, glStack);\r\n\t\t\tvar fill = bucket.getData(Fill);\r\n\t\t\tfill.drawMode = glStack.gl.TRIANGLE_FAN;\r\n\t\t\tfill.verts = points;\r\n\t\t\t\r\n\t\t\tvar indices = fill.indices;\r\n\t\t\tvar length = Std.int (points.length / 2);\r\n\t\t\tfor (i in 0...length) {\r\n\t\t\t\t\r\n\t\t\t\tindices.push (i);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (path.line.width > 0) {\r\n\t\t\t\r\n\t\t\tif (bucket == null) {\r\n\t\t\t\tbucket = prepareBucket(path, glStack);\r\n\t\t\t}\r\n\t\t\tbuildLine (path, bucket, localCoords);\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function buildLine (path:DrawPath, bucket:GLBucket, localCoords:Bool = false):Void {\r\n\t\t\r\n\t\tvar points = path.points;\r\n\t\tif (points.length == 0) return;\r\n\t\t\r\n\t\tvar line = bucket.getData(Line);\r\n\t\t\r\n\t\tif (localCoords) {\r\n\t\t\tfor (i in 0...Std.int(points.length / 2)) {\r\n\t\t\t\tpoints[i * 2] -= objectBounds.x;\r\n\t\t\t\tpoints[i * 2 + 1] -= objectBounds.y;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// this seems to move the line when scaling is applied\r\n\t\t/*\r\n\t\tif (path.line.width % 2 > 0) {\r\n\t\t\t\r\n\t\t\tfor (i in 0...points.length) {\r\n\t\t\t\t\r\n\t\t\t\tpoints[i] += 0.5;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\tvar firstPoint = new Point (points[0], points[1]);\r\n\t\tvar lastPoint = new Point (points[Std.int (points.length - 2)], points[Std.int (points.length - 1)]);\r\n\t\t\r\n\t\tif (firstPoint.x == lastPoint.x && firstPoint.y == lastPoint.y) {\r\n\t\t\t\r\n\t\t\tpoints = points.copy ();\r\n\t\t\t\r\n\t\t\tpoints.pop ();\r\n\t\t\tpoints.pop ();\r\n\t\t\t\r\n\t\t\tlastPoint = new Point (points[Std.int (points.length - 2)], points[Std.int (points.length - 1)]);\r\n\t\t\t\r\n\t\t\tvar midPointX = lastPoint.x + (firstPoint.x - lastPoint.x) * 0.5;\r\n\t\t\tvar midPointY = lastPoint.y + (firstPoint.y - lastPoint.y) * 0.5;\r\n\t\t\t\r\n\t\t\tpoints.unshift (midPointY);\r\n\t\t\tpoints.unshift (midPointX);\r\n\t\t\tpoints.push (midPointX);\r\n\t\t\tpoints.push (midPointY);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar verts = line.verts;\r\n\t\tvar indices = line.indices;\r\n\t\tvar length = Std.int (points.length / 2);\r\n\t\tvar indexCount = points.length;\r\n\t\tvar indexStart = Std.int (verts.length / 6);\r\n\t\t\r\n\t\tvar width = path.line.width / 2;\r\n\t\t\r\n\t\tvar color = hex2rgb (path.line.color);\r\n\t\tvar alpha = path.line.alpha;\r\n\t\tvar r = color[0];\r\n\t\tvar g = color[1];\r\n\t\tvar b = color[2];\r\n\t\t\r\n\t\tvar px:Float, py:Float, p1x:Float, p1y:Float, p2x:Float, p2y:Float, p3x:Float, p3y:Float;\r\n\t\tvar perpx:Float, perpy:Float, perp2x:Float, perp2y:Float, perp3x:Float, perp3y:Float;\r\n\t\tvar a1:Float, b1:Float, c1:Float, a2:Float, b2:Float, c2:Float;\r\n\t\tvar denom:Float, pdist:Float, dist:Float;\r\n\t\t\r\n\t\tp1x = points[0];\r\n\t\tp1y = points[1];\r\n\t\t\r\n\t\tp2x = points[2];\r\n\t\tp2y = points[3];\r\n\t\t\r\n\t\tperpx = -(p1y - p2y);\r\n\t\tperpy =  p1x - p2x;\r\n\t\t\r\n\t\tdist = Math.sqrt (Math.abs((perpx * perpx) + (perpy * perpy)));\r\n\t\t\r\n\t\tperpx = perpx / dist;\r\n\t\tperpy = perpy / dist;\r\n\t\tperpx = perpx * width;\r\n\t\tperpy = perpy * width;\r\n\t\t\r\n\t\tverts.push (p1x - perpx);\r\n\t\tverts.push (p1y - perpy);\r\n\t\tverts.push (r);\r\n\t\tverts.push (g);\r\n\t\tverts.push (b);\r\n\t\tverts.push (alpha);\r\n\t\t\r\n\t\tverts.push (p1x + perpx);\r\n\t\tverts.push (p1y + perpy);\r\n\t\tverts.push (r);\r\n\t\tverts.push (g);\r\n\t\tverts.push (b);\r\n\t\tverts.push (alpha);\r\n\t\t\r\n\t\tfor (i in 1...(length - 1)) {\r\n\t\t\t\r\n\t\t\tp1x = points[(i - 1) * 2];\r\n\t\t\tp1y = points[(i - 1) * 2 + 1];\r\n\t\t\tp2x = points[(i) * 2];\r\n\t\t\tp2y = points[(i) * 2 + 1];\r\n\t\t\tp3x = points[(i + 1) * 2];\r\n\t\t\tp3y = points[(i + 1) * 2 + 1];\r\n\t\t\t\r\n\t\t\tperpx = -(p1y - p2y);\r\n\t\t\tperpy = p1x - p2x;\r\n\t\t\t\r\n\t\t\tdist = Math.sqrt (Math.abs((perpx * perpx) + (perpy * perpy)));\r\n\t\t\tperpx = perpx / dist;\r\n\t\t\tperpy = perpy / dist;\r\n\t\t\tperpx = perpx * width;\r\n\t\t\tperpy = perpy * width;\r\n\t\t\t\r\n\t\t\tperp2x = -(p2y - p3y);\r\n\t\t\tperp2y = p2x - p3x;\r\n\t\t\t\r\n\t\t\tdist = Math.sqrt (Math.abs((perp2x * perp2x) + (perp2y * perp2y)));\r\n\t\t\tperp2x = perp2x / dist;\r\n\t\t\tperp2y = perp2y / dist;\r\n\t\t\tperp2x = perp2x * width;\r\n\t\t\tperp2y = perp2y * width;\r\n\t\t\t\r\n\t\t\ta1 = (-perpy + p1y) - (-perpy + p2y);\r\n\t\t\tb1 = (-perpx + p2x) - (-perpx + p1x);\r\n\t\t\tc1 = (-perpx + p1x) * (-perpy + p2y) - (-perpx + p2x) * (-perpy + p1y);\r\n\t\t\ta2 = (-perp2y + p3y) - (-perp2y + p2y);\r\n\t\t\tb2 = (-perp2x + p2x) - (-perp2x + p3x);\r\n\t\t\tc2 = (-perp2x + p3x) * (-perp2y + p2y) - (-perp2x + p2x) * (-perp2y + p3y);\r\n\t\t\t\r\n\t\t\tdenom = (a1 * b2) - (a2 * b1);\r\n\t\t\t\r\n\t\t\tif (Math.abs (denom) < 0.1) {\r\n\t\t\t\t\r\n\t\t\t\tdenom += 10.1;\r\n\t\t\t\t\r\n\t\t\t\tverts.push (p2x - perpx);\r\n\t\t\t\tverts.push (p2y - perpy);\r\n\t\t\t\tverts.push (r);\r\n\t\t\t\tverts.push (g);\r\n\t\t\t\tverts.push (b);\r\n\t\t\t\tverts.push (alpha);\r\n\t\t\t\t\r\n\t\t\t\tverts.push (p2x + perpx);\r\n\t\t\t\tverts.push (p2y + perpy);\r\n\t\t\t\tverts.push (r);\r\n\t\t\t\tverts.push (g);\r\n\t\t\t\tverts.push (b);\r\n\t\t\t\tverts.push (alpha);\r\n\t\t\t\t\r\n\t\t\t\tcontinue;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tpx = ((b1 * c2) - (b2 * c1)) / denom;\r\n\t\t\tpy = ((a2 * c1) - (a1 * c2)) / denom;\r\n\t\t\t\r\n\t\t\tpdist = (px - p2x) * (px - p2x) + (py - p2y) + (py - p2y);\r\n\t\t\t\r\n\t\t\tif (pdist > 140 * 140) {\r\n\t\t\t\t\r\n\t\t\t\tperp3x = perpx - perp2x;\r\n\t\t\t\tperp3y = perpy - perp2y;\r\n\t\t\t\t\r\n\t\t\t\tdist = Math.sqrt (Math.abs((perp3x * perp3x) + (perp3y * perp3y)));\r\n\t\t\t\tperp3x = perp3x / dist;\r\n\t\t\t\tperp3y = perp3y / dist;\r\n\t\t\t\tperp3x = perp3x * width;\r\n\t\t\t\tperp3y = perp3y * width;\r\n\t\t\t\t\r\n\t\t\t\tverts.push (p2x - perp3x);\r\n\t\t\t\tverts.push (p2y - perp3y);\r\n\t\t\t\tverts.push (r);\r\n\t\t\t\tverts.push (g);\r\n\t\t\t\tverts.push (b);\r\n\t\t\t\tverts.push (alpha);\r\n\t\t\t\t\r\n\t\t\t\tverts.push (p2x + perp3x);\r\n\t\t\t\tverts.push (p2y + perp3y);\r\n\t\t\t\tverts.push (r);\r\n\t\t\t\tverts.push (g);\r\n\t\t\t\tverts.push (b);\r\n\t\t\t\tverts.push (alpha);\r\n\t\t\t\t\r\n\t\t\t\tverts.push (p2x - perp3x);\r\n\t\t\t\tverts.push (p2y -perp3y);\r\n\t\t\t\tverts.push (r);\r\n\t\t\t\tverts.push (g);\r\n\t\t\t\tverts.push (b);\r\n\t\t\t\tverts.push (alpha);\r\n\t\t\t\t\r\n\t\t\t\tindexCount++;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tverts.push (px);\r\n\t\t\t\tverts.push (py);\r\n\t\t\t\tverts.push (r);\r\n\t\t\t\tverts.push (g);\r\n\t\t\t\tverts.push (b);\r\n\t\t\t\tverts.push (alpha);\r\n\t\t\t\t\r\n\t\t\t\tverts.push (p2x - (px - p2x));\r\n\t\t\t\tverts.push (p2y - (py - p2y));\r\n\t\t\t\tverts.push (r);\r\n\t\t\t\tverts.push (g);\r\n\t\t\t\tverts.push (b);\r\n\t\t\t\tverts.push (alpha);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tp1x = points[(length - 2) * 2];\r\n\t\tp1y = points[(length - 2) * 2 + 1];\r\n\t\tp2x = points[(length - 1) * 2];\r\n\t\tp2y = points[(length - 1) * 2 + 1];\r\n\t\tperpx = -(p1y - p2y);\r\n\t\tperpy = p1x - p2x;\r\n\t\t\r\n\t\tdist = Math.sqrt (Math.abs((perpx * perpx) + (perpy * perpy)));\r\n\t\tif (!Math.isFinite(dist)) trace(((perpx * perpx) + (perpy * perpy)));\r\n\t\tperpx = perpx / dist;\r\n\t\tperpy = perpy / dist;\r\n\t\tperpx = perpx * width;\r\n\t\tperpy = perpy * width;\r\n\t\t\r\n\t\tverts.push (p2x - perpx);\r\n\t\tverts.push (p2y - perpy);\r\n\t\tverts.push (r);\r\n\t\tverts.push (g);\r\n\t\tverts.push (b);\r\n\t\tverts.push (alpha);\r\n\t\t\r\n\t\tverts.push (p2x + perpx);\r\n\t\tverts.push (p2y + perpy);\r\n\t\tverts.push (r);\r\n\t\tverts.push (g);\r\n\t\tverts.push (b);\r\n\t\tverts.push (alpha);\r\n\t\t\r\n\t\tindices.push (indexStart);\r\n\t\t\r\n\t\tfor (i in 0...indexCount) {\r\n\t\t\t\r\n\t\t\tindices.push (indexStart++);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tindices.push (indexStart - 1);\r\n\t}\r\n\t\r\n\tpublic static function buildPoly (path:DrawPath, glStack:GLStack):Void {\r\n\t\tif (path.points.length < 6) return;\r\n\t\tvar points = path.points;\r\n\t\t\r\n\t\tvar l = points.length;\r\n\t\tvar sx = points[0];\t\tvar sy = points[1];\r\n\t\tvar ex = points[l - 2];\tvar ey = points[l - 1];\r\n\t\t// close polygon\r\n\t\tif (sx != ex || sy != ey) {\r\n\t\t\tpoints.push(sx);\r\n\t\t\tpoints.push(sy);\r\n\t\t}\r\n\t\t\r\n\t\tvar length = Std.int (points.length / 2);\r\n\t\t\r\n\t\tvar bucket = prepareBucket(path, glStack);\r\n\t\tvar fill = bucket.getData(Fill);\r\n\t\tvar verts = fill.verts;\r\n\t\tvar indices = fill.indices;\r\n\t\t\r\n\t\tif (fill != null) {\r\n\t\t\tvar triangles = new Array<Int> ();\r\n\t\t\tPolyK.triangulate (triangles, points);\r\n\t\t\tvar vertPos = verts.length / 2;\r\n\t\t\t\r\n\t\t\tvar i = 0;\r\n\t\t\twhile (i < triangles.length) {\r\n\t\t\t\t\r\n\t\t\t\tindices.push (Std.int (triangles[i] + vertPos));\r\n\t\t\t\tindices.push (Std.int (triangles[i] + vertPos));\r\n\t\t\t\tindices.push (Std.int (triangles[i+1] + vertPos));\r\n\t\t\t\tindices.push (Std.int (triangles[i+2] + vertPos));\r\n\t\t\t\tindices.push (Std.int (triangles[i+2] + vertPos));\r\n\t\t\t\ti += 3;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (i in 0...length) {\r\n\t\t\t\t\r\n\t\t\t\tverts.push (points[i * 2]);\r\n\t\t\t\tverts.push (points[i * 2 + 1]);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (path.line.width > 0) {\r\n\t\t\t\r\n\t\t\tbuildLine (path, bucket);\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function buildRectangle (path:DrawPath, glStack:GLStack, localCoords:Bool = false):Void {\r\n\t\tvar rectData = path.points;\r\n\t\tvar x = rectData[0];\r\n\t\tvar y = rectData[1];\r\n\t\tvar width = rectData[2];\r\n\t\tvar height = rectData[3];\r\n\t\t\r\n\t\tif (localCoords) {\r\n\t\t\tx -= objectBounds.x;\r\n\t\t\ty -= objectBounds.y;\r\n\t\t}\r\n\t\t\r\n\t\tvar bucket = prepareBucket(path, glStack);\r\n\t\tvar fill = bucket.getData(Fill);\r\n\t\t\r\n\t\tif(fill != null) {\r\n\t\t\tvar verts = fill.verts;\r\n\t\t\tvar indices = fill.indices;\r\n\t\t\t\r\n\t\t\tvar vertPos = Std.int (verts.length / 2);\r\n\t\t\t\r\n\t\t\tverts.push (x); \r\n\t\t\tverts.push (y);\r\n\t\t\tverts.push (x + width);\r\n\t\t\tverts.push (y);\r\n\t\t\tverts.push (x);\r\n\t\t\tverts.push (y + height);\r\n\t\t\tverts.push (x + width);\r\n\t\t\tverts.push (y + height);\r\n\t\t\t\r\n\t\t\tindices.push (vertPos);\r\n\t\t\tindices.push (vertPos);\r\n\t\t\tindices.push (vertPos + 1);\r\n\t\t\tindices.push (vertPos + 2);\r\n\t\t\tindices.push (vertPos + 3);\r\n\t\t\tindices.push (vertPos + 3);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif (path.line.width > 0) {\r\n\t\t\t\r\n\t\t\tvar tempPoints = path.points;\r\n\t\t\tpath.points = [ x, y, x + width, y, x + width, y + height, x, y + height, x, y];\r\n\t\t\tbuildLine (path, bucket);\r\n\t\t\tpath.points = tempPoints;\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function buildRoundedRectangle (path:DrawPath, glStack:GLStack, localCoords:Bool = false):Void {\r\n\t\tvar points = path.points.copy();\r\n\t\tvar x = points[0];\r\n\t\tvar y = points[1];\r\n\t\tvar width = points[2];\r\n\t\tvar height = points[3];\r\n\t\tvar rx = points[4];\r\n\t\tvar ry = points[5];\r\n\t\t\r\n\t\tif (localCoords) {\r\n\t\t\tx -= objectBounds.x;\r\n\t\t\ty -= objectBounds.y;\r\n\t\t}\r\n\t\t\r\n\t\tvar recPoints:Array<Float> = [];\r\n\t\tGraphicsPaths.roundRectangle (recPoints, x, y, width, height, rx, ry);\r\n\t\t\r\n\t\tvar bucket = prepareBucket(path, glStack);\r\n\t\tvar fill = bucket.getData(Fill);\r\n\t\t\r\n\t\tif (fill != null) {\r\n\t\t\tvar verts = fill.verts;\r\n\t\t\tvar indices = fill.indices;\r\n\t\t\t\r\n\t\t\tvar vecPos = verts.length / 2;\r\n\t\t\t\r\n\t\t\tvar triangles = new Array<Int> ();\r\n\t\t\tPolyK.triangulate (triangles, recPoints);\r\n\t\t\t\r\n\t\t\tvar i = 0;\r\n\t\t\twhile (i < triangles.length) {\r\n\r\n\t\t\t\tindices.push (Std.int (triangles[i] + vecPos));\r\n\t\t\t\tindices.push (Std.int (triangles[i] + vecPos));\r\n\t\t\t\tindices.push (Std.int (triangles[i + 1] + vecPos));\r\n\t\t\t\tindices.push (Std.int (triangles[i + 2] + vecPos));\r\n\t\t\t\tindices.push (Std.int (triangles[i + 2] + vecPos));\r\n\t\t\t\ti += 3;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ti = 0;\r\n\t\t\twhile (i < recPoints.length) {\r\n\t\t\t\t\r\n\t\t\t\tverts.push (recPoints[i]);\r\n\t\t\t\tverts.push (recPoints[++i]);\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (path.line.width > 0) {\r\n\t\t\t\r\n\t\t\tvar tempPoints = path.points;\r\n\t\t\tpath.points = recPoints;\r\n\t\t\tbuildLine (path, bucket);\r\n\t\t\tpath.points = tempPoints;\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function buildDrawTriangles (path:DrawPath, object:DisplayObject, glStack:GLStack, localCoords:Bool = false):Void {\r\n\t\t\r\n\t\tvar args = Type.enumParameters(path.type);\r\n\t\t\r\n\t\tvar vertices:Vector<Float> = cast args[0];\r\n\t\tvar indices:Vector<Int> = cast args[1];\r\n\t\tvar uvtData:Vector<Float> = cast args[2];\r\n\t\tvar culling:TriangleCulling = cast args[3];\r\n\t\tvar colors:Vector<Int> = cast args[4];\r\n\t\tvar blendMode:Int = args[5];\r\n\t\t\r\n\t\tvar a, b, c, d, tx, ty;\r\n\t\t\r\n\t\tif (localCoords) {\r\n\t\t\ta = 1.0;\r\n\t\t\tb = 0.0;\r\n\t\t\tc = 0.0;\r\n\t\t\td = 1.0;\r\n\t\t\ttx = 0.0;\r\n\t\t\tty = 0.0;\r\n\t\t} else {\r\n\t\t\ta = object.__worldTransform.a;\r\n\t\t\tb = object.__worldTransform.b;\r\n\t\t\tc = object.__worldTransform.c;\r\n\t\t\td = object.__worldTransform.d;\r\n\t\t\ttx = object.__worldTransform.tx;\r\n\t\t\tty = object.__worldTransform.ty;\r\n\t\t}\r\n\t\t\r\n\t\tvar hasColors = colors != null && colors.length > 0;\r\n\t\t\r\n\t\tvar bucket = prepareBucket(path, glStack);\r\n\t\tvar fill = bucket.getData(Fill);\r\n\t\tvar colorAttrib = fill.vertexArray.attributes[2];\r\n\t\tcolorAttrib.enabled = hasColors;\r\n\t\tcolorAttrib.defaultValue = new Float32Array([1, 1, 1, 1]);\r\n\t\t\r\n\t\tfill.rawVerts = true;\r\n\t\tfill.glLength = indices.length;\r\n\t\tfill.stride = Std.int(fill.vertexArray.stride / 4);\r\n\t\t\r\n\t\tvar vertsLength = fill.glLength * fill.stride;\r\n\t\tvar verts:Float32Array;\r\n\t\t\r\n\t\tif (fill.glVerts == null || fill.glVerts.length < vertsLength) {\r\n\t\t\tverts = new Float32Array(vertsLength);\r\n\t\t\tfill.glVerts = verts;\r\n\t\t} else {\r\n\t\t\tverts = fill.glVerts;\r\n\t\t}\r\n\t\t\r\n\t\tvar glColors = new UInt32Array(verts.buffer);\r\n\t\t\r\n\t\tvar v0 = 0; var v1 = 0; var v2 = 0;\r\n\t\tvar i0 = 0; var i1 = 0; var i2 = 0;\r\n\t\t\r\n\t\tvar x0 = 0.0; var y0 = 0.0;\r\n\t\tvar x1 = 0.0; var y1 = 0.0;\r\n\t\tvar x2 = 0.0; var y2 = 0.0;\r\n\t\t\r\n\t\tvar idx = 0;\r\n\t\tfor (i in 0...Std.int(indices.length / 3)) {\r\n\t\t\t\r\n\t\t\ti0 = indices[i * 3]; i1 = indices[i * 3 + 1]; i2 = indices[i * 3 + 2];\t\r\n\t\t\tv0 = i0 * 2; v1 = i1 * 2; v2 = i2 * 2;\r\n\t\t\t\r\n\t\t\tx0 = vertices[v0];\ty0 = vertices[v0 + 1];\r\n\t\t\tx1 = vertices[v1];\ty1 = vertices[v1 + 1];\r\n\t\t\tx2 = vertices[v2];\ty2 = vertices[v2 + 1];\r\n\t\t\t\r\n\t\t\tif (localCoords) {\r\n\t\t\t\tx0 -= objectBounds.x;\r\n\t\t\t\ty0 -= objectBounds.y;\r\n\t\t\t\tx1 -= objectBounds.x;\r\n\t\t\t\ty1 -= objectBounds.y;\r\n\t\t\t\tx2 -= objectBounds.x;\r\n\t\t\t\ty2 -= objectBounds.y;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tswitch(culling) {\r\n\t\t\t\tcase POSITIVE:\r\n\t\t\t\t\tif (!isCCW(x0, y0, x1, y1, x2, y2)) continue;\r\n\t\t\t\tcase NEGATIVE:\r\n\t\t\t\t\tif (isCCW(x0, y0, x1, y1, x2, y2)) continue;\r\n\t\t\t\tcase _:\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tverts[idx++] = a * x0 + c * y0 + tx;\r\n\t\t\tverts[idx++] = b * x0 + d * y0 + ty;\r\n\t\t\tverts[idx++] = uvtData[v0];\r\n\t\t\tverts[idx++] = uvtData[v0 + 1];\r\n\t\t\tif (hasColors) {\r\n\t\t\t\tglColors[idx++] = colors[i0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tverts[idx++] = a * x1 + c * y1 + tx;\r\n\t\t\tverts[idx++] = b * x1 + d * y1 + ty;\r\n\t\t\tverts[idx++] = uvtData[v1];\r\n\t\t\tverts[idx++] = uvtData[v1 + 1];\r\n\t\t\tif (hasColors) {\r\n\t\t\t\tglColors[idx++] = colors[i1];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tverts[idx++] = a * x2 + c * y2 + tx;\r\n\t\t\tverts[idx++] = b * x2 + d * y2 + ty;\r\n\t\t\tverts[idx++] = uvtData[v2];\r\n\t\t\tverts[idx++] = uvtData[v2 + 1];\r\n\t\t\tif (hasColors) {\r\n\t\t\t\tglColors[idx++] = colors[i2];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic static inline function buildDrawTiles (path:DrawPath, glStack:GLStack):Void {\r\n\t\tprepareBucket(path, glStack);\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function quadraticBezierCurve (fromX:Float, fromY:Float, cpX:Float, cpY:Float, toX:Float, toY:Float):Array<Float> {\r\n\t\t\r\n\t\tvar xa, ya, xb, yb, x, y;\r\n\t\tvar n = 20;\r\n\t\tvar points = [];\r\n\t\t\r\n\t\tvar getPt = function (n1:Float , n2:Float, perc:Float):Float {\r\n\t\t\t\r\n\t\t\tvar diff = n2 - n1;\r\n\t\t\treturn n1 + (diff * perc);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar j = 0.0;\r\n\t\tfor (i in 0...(n + 1)) {\r\n\t\t\t\r\n\t\t\tj = i / n;\r\n\t\t\t\r\n\t\t\txa = getPt (fromX, cpX, j);\r\n\t\t\tya = getPt (fromY, cpY, j);\r\n\t\t\txb = getPt (cpX, toX, j);\r\n\t\t\tyb = getPt (cpY, toY, j);\r\n\t\t\t\r\n\t\t\tx = getPt (xa, xb, j);\r\n\t\t\ty = getPt (ya, yb, j);\r\n\t\t\t\r\n\t\t\tpoints.push (x);\r\n\t\t\tpoints.push (y);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn points;\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic static function render (object:DisplayObject, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tvar graphics = object.__graphics;\r\n\t\tvar bounds = graphics.__bounds;\r\n\t\tvar spritebatch = renderSession.spriteBatch;\r\n\t\tvar dirty = graphics.__dirty;\r\n\t\t\r\n\t\tif (!graphics.__visible || graphics.__commands.length == 0 || bounds == null || bounds.width == 0 || bounds.height == 0) {\r\n\t\t\t\r\n\t\t\tgraphics.__glStack.splice (0, graphics.__glStack.length);\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (dirty) {\r\n\t\t\tupdateGraphics (object, object.__graphics, renderSession.gl, object.cacheAsBitmap);\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\t//TODO find a way to remove drawTiles calls\r\n\t\tif (object.cacheAsBitmap) {\r\n\t\t\t\r\n\t\t\tif (dirty) {\r\n\t\t\t\t\r\n\t\t\t\tvar gl = renderSession.gl;\r\n\t\t\t\tvar bounds = graphics.__bounds;\r\n\t\t\t\tvar texture = graphics.__cachedTexture;\r\n\t\t\t\t\r\n\t\t\t\tvar w = Math.floor(bounds.width + 0.5);\r\n\t\t\t\tvar h = Math.floor(bounds.height+ 0.5);\r\n\t\t\t\t\r\n\t\t\t\tif (texture == null) {\r\n\t\t\t\t\ttexture = new FilterTexture(gl, w, h, false);\r\n\t\t\t\t\tgraphics.__cachedTexture = texture;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\ttexture.resize(w, h);\r\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, texture.frameBuffer);\r\n\t\t\t\tgl.viewport (0, 0, w, h);\r\n\t\t\t\ttexture.clear();\r\n\t\t\t\trenderGraphics(object, renderSession, new Point(w / 2, -h / 2), true);\r\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\t\t\t\t\r\n\t\t\t\tgl.viewport(0, 0, renderSession.renderer.width, renderSession.renderer.height);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!spritebatch.drawing) {\r\n\t\t\t\tspritebatch.begin(renderSession);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tspritebatch.renderCachedGraphics(object);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\trenderGraphics(object, renderSession, renderSession.projection, false);\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\trenderGraphics(object, renderSession, false);\r\n\r\n\t}\r\n\t\r\n\tpublic static function renderGraphics (object:DisplayObject, renderSession:RenderSession, ?localCoords:Bool = false):Void {\r\n\t\tvar graphics = object.__graphics;\r\n\t\tvar gl = renderSession.gl;\r\n\t\t\r\n\t\tvar glStack = graphics.__glStack[GLRenderer.glContextId];\r\n\t\tif (glStack == null) return;\r\n\t\tvar bucket:GLBucket;\r\n\t\t\r\n\t\tvar translationMatrix:Matrix;\r\n\t\tif (localCoords) {\r\n\t\t\ttranslationMatrix = Matrix.__identity;\r\n\t\t} else {\r\n\t\t\ttranslationMatrix = object.__worldTransform;\r\n\t\t}\r\n\t\t\r\n\t\tvar clipRect = @:privateAccess renderSession.spriteBatch.clipRect;\r\n\t\tvar batchDrawing = renderSession.spriteBatch.drawing;\r\n\t\t\r\n\t\tbatchDrawing = renderSession.spriteBatch.drawing;\r\n\t\t\r\n\t\tfor (i in 0...glStack.buckets.length) {\r\n\t\t\tbatchDrawing = renderSession.spriteBatch.drawing;\r\n\t\t\t\r\n\t\t\tif (batchDrawing && !localCoords) {\r\n\t\t\t\trenderSession.spriteBatch.finish();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\trenderSession.blendModeManager.setBlendMode(object.__blendMode);\r\n\t\t\t\r\n\t\t\tif (clipRect != null) {\r\n\t\t\t\tgl.enable(gl.SCISSOR_TEST);\r\n\t\t\t\tgl.scissor(Math.floor(clipRect.x), \r\n\t\t\t\t\t\t\tMath.floor(clipRect.y),\r\n\t\t\t\t\t\t\tMath.floor(clipRect.width),\r\n\t\t\t\t\t\t\tMath.floor(clipRect.height)\r\n\t\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbucket = glStack.buckets[i];\r\n\t\t\t\r\n\t\t\tswitch(bucket.mode) {\r\n\t\t\t\tcase Fill, PatternFill:\r\n\t\t\t\t\trenderSession.stencilManager.pushBucket(bucket, renderSession, translationMatrix.toArray(true));\r\n\t\t\t\t\tvar shader = prepareShader(bucket, renderSession, object, translationMatrix.toArray(true));\r\n\t\t\t\t\trenderFill(bucket, shader, renderSession);\r\n\t\t\t\t\trenderSession.stencilManager.popBucket(object, bucket, renderSession);\r\n\t\t\t\tcase DrawTriangles:\r\n\t\t\t\t\tvar shader = prepareShader(bucket, renderSession, object, null);\r\n\t\t\t\t\trenderDrawTriangles(bucket, shader, renderSession);\r\n\t\t\t\tcase DrawTiles:\r\n\t\t\t\t\tif (!batchDrawing) {\r\n\t\t\t\t\t\trenderSession.spriteBatch.begin(renderSession, clipRect);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar args = Type.enumParameters(bucket.graphicType);\t\t\r\n\t\t\t\t\trenderSession.spriteBatch.renderTiles(object, cast args[0], cast args[1], cast args[2], cast args[3], cast args[4], cast args[5]);\r\n\t\t\t\t\t\r\n\t\t\t\t\trenderSession.spriteBatch.finish();\r\n\t\t\t\tcase _:\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar ct:ColorTransform = object.__worldColorTransform;\r\n\t\t\tfor (line in bucket.lines) {\r\n\t\t\t\tif (line != null && line.verts.length > 0) {\r\n\t\t\t\t\tvar shader = renderSession.shaderManager.primitiveShader;\r\n\t\t\t\t\r\n\t\t\t\t\trenderSession.shaderManager.setShader (shader);\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl.uniformMatrix3fv (shader.getUniformLocation(PrimitiveUniform.TranslationMatrix), false, translationMatrix.toArray(true));\r\n\t\t\t\t\tgl.uniformMatrix3fv (shader.getUniformLocation(PrimitiveUniform.ProjectionMatrix), false, renderSession.projectionMatrix.toArray(true));\r\n\t\t\t\t\tgl.uniform1f (shader.getUniformLocation(PrimitiveUniform.Alpha), 1);\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl.uniform4f (shader.getUniformLocation(FillUniform.ColorMultiplier), ct.redMultiplier, ct.greenMultiplier, ct.blueMultiplier, ct.alphaMultiplier);\r\n\t\t\t\t\tgl.uniform4f (shader.getUniformLocation(FillUniform.ColorOffset), ct.redOffset / 255, ct.greenOffset / 255, ct.blueOffset / 255, ct.alphaOffset / 255);\r\n\t\t\t\t\t\r\n\t\t\t\t\tline.vertexArray.bind();\r\n\t\t\t\t\tshader.bindVertexArray(line.vertexArray);\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, line.indexBuffer);\r\n\t\t\t\t\tgl.drawElements (gl.TRIANGLE_STRIP, line.indices.length, gl.UNSIGNED_SHORT, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (clipRect != null) {\r\n\t\t\t\tgl.disable(gl.SCISSOR_TEST);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbatchDrawing = renderSession.spriteBatch.drawing;\r\n\t\t\tif (!batchDrawing && !localCoords) {\r\n\t\t\t\trenderSession.spriteBatch.begin(renderSession, clipRect);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function updateGraphics (object:DisplayObject, graphics:Graphics, gl:GLRenderContext, ?localCoords:Bool = false):Void {\r\n\t\t\r\n\t\tobjectPosition.setTo(object.x, object.y);\r\n\t\t\r\n\t\tif (graphics.__bounds == null) {\r\n\t\t\tobjectBounds = new Rectangle();\r\n\t\t} else {\r\n\t\t\tobjectBounds.copyFrom(graphics.__bounds);\r\n\t\t}\r\n\t\t\r\n\t\tvar glStack:GLStack = null;\r\n\t\t\r\n\t\tif (graphics.__dirty) {\r\n\t\t\t\r\n\t\t\tglStack = DrawPath.getStack(graphics, gl);\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tgraphics.__dirty = false;\r\n\t\t\r\n\t\tfor (data in glStack.buckets) {\r\n\t\t\tdata.reset();\r\n\t\t\tbucketPool.push(data);\r\n\t\t}\r\n\t\t\r\n\t\tglStack.reset();\r\n\t\t\r\n\t\tfor (i in glStack.lastIndex...graphics.__drawPaths.length) {\r\n\t\t\tvar path = graphics.__drawPaths[i];\r\n\t\t\t\r\n\t\t\tswitch(path.type) {\r\n\t\t\t\tcase Polygon:\r\n\t\t\t\t\tbuildComplexPoly (path, glStack, localCoords);\r\n\t\t\t\tcase Rectangle(rounded):\r\n\t\t\t\t\tif (rounded) {\r\n\t\t\t\t\t\tbuildRoundedRectangle (path, glStack, localCoords);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbuildRectangle (path, glStack, localCoords);\r\n\t\t\t\t\t}\r\n\t\t\t\tcase Circle, Ellipse:\r\n\t\t\t\t\tbuildCircle (path, glStack, localCoords);\r\n\t\t\t\tcase DrawTriangles(_):\r\n\t\t\t\t\tbuildDrawTriangles(path, object, glStack, localCoords);\r\n\t\t\t\tcase DrawTiles(_):\r\n\t\t\t\t\tbuildDrawTiles(path, glStack);\r\n\t\t\t\tcase OverrideMatrix(m):\r\n\t\t\t\t\toverrideMatrix = m;\r\n\t\t\t\tcase _:\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tglStack.lastIndex++;\r\n\t\t}\r\n\t\t\r\n\t\tfor (bucket in glStack.buckets) {\r\n\t\t\t\r\n\t\t\tif (bucket.uploadTileBuffer) {\r\n\t\t\t\t\r\n\t\t\t\tbucket.uploadTile(\r\n\t\t\t\t\tMath.ceil(objectBounds.left), \r\n\t\t\t\t\tMath.ceil(objectBounds.top),\r\n\t\t\t\t\tMath.floor(objectBounds.right), \r\n\t\t\t\t\tMath.floor(objectBounds.bottom));\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tbucket.optimize();\r\n\t\t}\r\n\t\t\r\n\t\tglStack.upload();\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate static function prepareBucket(path:DrawPath, glStack:GLStack):GLBucket {\r\n\t\tvar bucket:GLBucket = null;\r\n\t\tswitch(path.fill) {\r\n\t\t\tcase Color(c, a):\r\n\t\t\t\tbucket = switchBucket(path.fillIndex, glStack, Fill);\r\n\t\t\t\tbucket.color = hex2rgb(c);\r\n\t\t\t\tbucket.color[3] = a;\r\n\t\t\t\tbucket.uploadTileBuffer = true;\r\n\t\t\t\t\r\n\t\t\tcase Texture(b, m, r, s):\r\n\t\t\t\tbucket = switchBucket(path.fillIndex, glStack, PatternFill);\r\n\t\t\t\tbucket.bitmap = b;\r\n\t\t\t\tbucket.textureRepeat = r;\r\n\t\t\t\tbucket.textureSmooth = s;\r\n\t\t\t\tbucket.texture = b.getTexture(glStack.gl);\r\n\t\t\t\tbucket.uploadTileBuffer = true;\r\n\t\t\t\t\r\n\t\t\t\t//prepare the matrix\r\n\t\t\t\tvar pMatrix:Matrix;\r\n\t\t\t\tif (m == null) {\r\n\t\t\t\t\tpMatrix = new Matrix();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpMatrix = m.clone();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tpMatrix.invert();\r\n\t\t\t\tpMatrix.scale(1 / b.width, 1 / b.height);\r\n\t\t\t\tvar tx = pMatrix.tx;\r\n\t\t\t\tvar ty = pMatrix.ty;\r\n\t\t\t\tpMatrix.tx = 0;\r\n\t\t\t\tpMatrix.ty = 0;\r\n\t\t\t\t\r\n\t\t\t\tbucket.textureTL.x = tx;\r\n\t\t\t\tbucket.textureTL.y = ty;\r\n\t\t\t\tbucket.textureBR.x = tx + 1;\r\n\t\t\t\tbucket.textureBR.y = ty + 1;\r\n\r\n\t\t\t\tbucket.textureMatrix = pMatrix;\r\n\t\t\tcase _:\r\n\t\t\t\tbucket = switchBucket(path.fillIndex, glStack, Line);\r\n\t\t\t\tbucket.uploadTileBuffer = false;\r\n\t\t}\r\n\t\t\r\n\t\tswitch(path.type) {\r\n\t\t\tcase DrawTriangles(_):\r\n\t\t\t\tbucket.mode = DrawTriangles;\r\n\t\t\t\tbucket.uploadTileBuffer = false;\r\n\t\t\tcase DrawTiles(_):\r\n\t\t\t\tbucket.mode = DrawTiles;\r\n\t\t\t\tbucket.uploadTileBuffer = false;\r\n\t\t\tcase _:\r\n\t\t}\r\n\t\t\r\n\t\tbucket.graphicType = path.type;\r\n\t\tbucket.overrideMatrix = overrideMatrix;\r\n\t\t\r\n\t\treturn bucket;\r\n\t}\r\n\t\r\n\tprivate static function getBucket(glStack:GLStack, mode:BucketMode):GLBucket {\r\n\t\tvar b = bucketPool.pop();\r\n\t\tif (b == null) {\r\n\t\t\tb = new GLBucket(glStack.gl);\r\n\t\t}\r\n\t\tb.mode = mode;\r\n\t\tglStack.buckets.push(b);\r\n\t\treturn b;\r\n\t}\r\n\t\r\n\tprivate static function switchBucket (fillIndex:Int, glStack:GLStack, mode:BucketMode):GLBucket {\r\n\t\t\r\n\t\tvar bucket:GLBucket = null;\r\n\t\t\r\n\t\tfor (b in glStack.buckets) {\r\n\t\t\tif (b.fillIndex == fillIndex) {\r\n\t\t\t\tbucket = b;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (bucket == null) {\r\n\t\t\tbucket = getBucket(glStack, mode);\r\n\t\t}\r\n\t\t\r\n\t\tbucket.dirty = true;\r\n\t\tbucket.fillIndex = fillIndex;\r\n\t\t\r\n\t\treturn bucket;\r\n\t}\r\n\t\r\n\tprivate static function prepareShader(bucket:GLBucket, renderSession:RenderSession, object:DisplayObject, translationMatrix:Float32Array) {\r\n\t\tvar gl = renderSession.gl;\r\n\t\tvar shader:Shader =  null;\r\n\t\t\r\n\t\tshader = switch(bucket.mode) {\r\n\t\t\tcase Fill:\r\n\t\t\t\trenderSession.shaderManager.fillShader;\r\n\t\t\tcase PatternFill:\r\n\t\t\t\trenderSession.shaderManager.patternFillShader;\r\n\t\t\tcase DrawTriangles:\r\n\t\t\t\trenderSession.shaderManager.drawTrianglesShader;\r\n\t\t\tcase _:\r\n\t\t\t\tnull;\r\n\t\t}\r\n\t\t\r\n\t\tif (shader == null) return null;\r\n\t\t\r\n\t\tvar newShader = renderSession.shaderManager.setShader(shader);\r\n\t\t\r\n\t\t// common uniforms\r\n\t\tgl.uniform1f (shader.getUniformLocation(DefUniform.Alpha), object.__worldAlpha);\r\n\t\tgl.uniformMatrix3fv(shader.getUniformLocation(DefUniform.ProjectionMatrix), false, @:privateAccess renderSession.projectionMatrix.toArray(true));\r\n\t\t\r\n\t\tvar ct:ColorTransform = object.__worldColorTransform;\r\n\t\tgl.uniform4f (shader.getUniformLocation(FillUniform.ColorMultiplier), ct.redMultiplier, ct.greenMultiplier, ct.blueMultiplier, ct.alphaMultiplier);\r\n\t\tgl.uniform4f (shader.getUniformLocation(FillUniform.ColorOffset), ct.redOffset / 255, ct.greenOffset / 255, ct.blueOffset / 255, ct.alphaOffset / 255);\r\n\t\t\r\n\t\t// specific uniforms\r\n\t\tswitch(bucket.mode) {\r\n\t\t\tcase Fill:\r\n\t\t\t\tgl.uniformMatrix3fv (shader.getUniformLocation(FillUniform.TranslationMatrix), false, translationMatrix);\r\n\t\t\t\tgl.uniform4fv (shader.getUniformLocation(FillUniform.Color), new Float32Array (bucket.color));\r\n\t\t\tcase PatternFill:\r\n\t\t\t\tgl.uniformMatrix3fv (shader.getUniformLocation(PatternFillUniform.TranslationMatrix), false, translationMatrix);\r\n\t\t\t\tgl.uniform2f(shader.getUniformLocation(PatternFillUniform.PatternTL), bucket.textureTL.x, bucket.textureTL.y);\r\n\t\t\t\tgl.uniform2f(shader.getUniformLocation(PatternFillUniform.PatternBR), bucket.textureBR.x, bucket.textureBR.y);\r\n\t\t\t\tgl.uniformMatrix3fv(shader.getUniformLocation(PatternFillUniform.PatternMatrix), false, bucket.textureMatrix.toArray(true));\r\n\t\t\tcase DrawTriangles:\r\n\t\t\t\tif (bucket.texture != null) {\r\n\t\t\t\t\tgl.uniform1i(shader.getUniformLocation(DrawTrianglesUniform.UseTexture), 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgl.uniform1i(shader.getUniformLocation(DrawTrianglesUniform.UseTexture), 0);\r\n\t\t\t\t\tgl.uniform4fv(shader.getUniformLocation(DrawTrianglesUniform.Color), new Float32Array (bucket.color));\r\n\t\t\t\t}\r\n\t\t\tcase _:\r\n\t\t}\r\n\t\t\r\n\t\treturn shader;\r\n\t}\r\n\t\r\n\tprivate static function renderFill(bucket:GLBucket, shader:Shader, renderSession:RenderSession) {\r\n\t\tvar gl = renderSession.gl;\r\n\t\t\r\n\t\tif (bucket.mode == PatternFill && bucket.texture != null) {\r\n\t\t\tbindTexture(gl, bucket);\r\n\t\t}\r\n\r\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, bucket.tileBuffer);\r\n\t\tgl.vertexAttribPointer (shader.getAttribLocation(FillAttrib.Position), 4, gl.SHORT, false, 0, 0);\r\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n\t}\r\n\t\r\n\tprivate static function renderDrawTriangles(bucket:GLBucket, shader:Shader, renderSession:RenderSession) {\r\n\t\tvar gl = renderSession.gl;\r\n\t\t\r\n\t\tfor (fill in bucket.fills) {\r\n\t\t\tif (fill.available) continue;\r\n\t\t\t\r\n\t\t\tbindTexture(gl, bucket);\r\n\t\t\tfill.vertexArray.bind();\r\n\t\t\tshader.bindVertexArray(fill.vertexArray);\r\n\t\t\t\r\n\t\t\tgl.drawArrays(gl.TRIANGLES, fill.glStart, fill.glLength);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate static function bindTexture(gl:GLRenderContext, bucket:GLBucket) {\r\n\t\t\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, bucket.texture);\r\n\t\t\r\n\t\t// TODO Fix this: webgl can only repeat textures that are power of two\r\n\t\tif (bucket.textureRepeat #if (!desktop || rpi) && bucket.bitmap.image.powerOfTwo #end) {\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n\t\t} else {\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\t\t}\r\n\t\t\r\n\t\tif (bucket.textureSmooth) {\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\t\t} else {\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tprivate static inline function isCCW(x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float) {\r\n\t\treturn ((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1)) < 0;\r\n\t}\r\n\t\r\n\tpublic static inline function hex2rgb (hex:Null<Int>):Array<Float> {\r\n\t\treturn hex == null ? [1,1,1] : [(hex >> 16 & 0xFF) / 255, ( hex >> 8 & 0xFF) / 255, (hex & 0xFF) / 255];\r\n\t}\r\n\t\r\n\tpublic static inline function hex2rgba (hex:Null<Int>):Array<Float> {\r\n\t\treturn hex == null ? [1,1,1,1] : [(hex >> 16 & 0xFF) / 255, ( hex >> 8 & 0xFF) / 255, (hex & 0xFF) / 255, (hex >> 24 & 0xFF) / 255];\r\n\t}\r\n\r\n}\r\n\r\nclass GLStack {\r\n\r\n\tpublic var lastIndex:Int = 0;\r\n\tpublic var buckets:Array<GLBucket>;\r\n\tpublic var gl:GLRenderContext;\r\n\r\n\tpublic function new (gl:GLRenderContext) {\r\n\t\tthis.gl = gl;\r\n\t\tbuckets = [];\r\n\t\tlastIndex = 0;\r\n\t}\r\n\t\r\n\tpublic function reset() {\r\n\t\tbuckets = [];\r\n\t\tlastIndex = 0;\r\n\t}\r\n\t\r\n\tpublic function upload() {\r\n\t\tfor (bucket in buckets) {\r\n\t\t\t\r\n\t\t\tif (bucket.dirty) {\r\n\t\t\t\tbucket.upload ();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nclass GLBucket {\r\n\tpublic var gl:GLRenderContext;\r\n\tpublic var color:Array<Float>;\r\n\tpublic var alpha:Float;\t\r\n\tpublic var dirty:Bool;\r\n\tpublic var graphicType:GraphicType;\r\n\t\r\n\tpublic var lastIndex:Int;\r\n\t\r\n\tpublic var fillIndex:Int = -1;\r\n\t\r\n\tpublic var mode:BucketMode;\r\n\t\r\n\tpublic var fills:Array<GLBucketData> = [];\r\n\tpublic var lines:Array<GLBucketData> = [];\r\n\t\r\n\tpublic var bitmap:BitmapData;\r\n\tpublic var texture:GLTexture;\r\n\tpublic var textureMatrix:Matrix;\r\n\tpublic var textureRepeat:Bool = false;\r\n\tpublic var textureSmooth:Bool = true;\r\n\tpublic var textureTL:Point;\r\n\tpublic var textureBR:Point;\r\n\t\r\n\tpublic var overrideMatrix:Matrix;\r\n\t\r\n\tpublic var tileBuffer:GLBuffer;\r\n\tpublic var glTile:Int16Array;\r\n\tpublic var tile:Array<Int>;\r\n\t\r\n\tpublic var uploadTileBuffer = true;\r\n\t\r\n\tpublic function new (gl:GLRenderContext) {\r\n\t\t\r\n\t\tthis.gl = gl;\r\n\t\t\r\n\t\tcolor = [0, 0, 0];\r\n\t\tlastIndex = 0;\r\n\t\talpha = 1;\r\n\t\tdirty = true;\r\n\t\t\r\n\t\tmode = Fill;\r\n\t\t\r\n\t\ttextureMatrix = new Matrix();\r\n\t\ttextureTL = new Point();\r\n\t\ttextureBR = new Point(1, 1);\r\n\t}\r\n\t\r\n\tpublic function getData(type:BucketDataType):GLBucketData {\r\n\t\tvar data:Array<GLBucketData>;\r\n\t\tswitch(type) {\r\n\t\t\tcase Fill:\r\n\t\t\t\tdata = fills;\r\n\t\t\tcase _:\r\n\t\t\t\tdata = lines;\r\n\t\t}\r\n\t\tvar result:GLBucketData = null;\r\n\t\tvar remove = false;\r\n\t\tfor (d in data) {\r\n\t\t\tif (d.available) {\r\n\t\t\t\tresult = d;\r\n\t\t\t\tremove = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (result == null) {\r\n\t\t\tresult = new GLBucketData(gl);\r\n\t\t}\r\n\t\t\r\n\t\tresult.available = false;\r\n\t\tresult.parent = this;\r\n\t\tresult.type = type;\r\n\t\t\r\n\t\tif(remove) data.remove(result);\r\n\t\tdata.push(result);\r\n\t\t\r\n\t\tswitch(type) {\r\n\t\t\tcase Fill:\r\n\t\t\t\tswitch(mode) {\r\n\t\t\t\t\tcase Fill, PatternFill:\r\n\t\t\t\t\t\tresult.vertexArray.attributes = GraphicsRenderer.fillVertexAttributes;\r\n\t\t\t\t\tcase DrawTriangles:\r\n\t\t\t\t\t\t// we are using static values and we don't want the color attribute to be shared.\r\n\t\t\t\t\t\tresult.vertexArray.attributes = GraphicsRenderer.drawTrianglesVertexAttributes.copy();\r\n\t\t\t\t\t\tresult.vertexArray.attributes[2] = result.vertexArray.attributes[2].copy();\r\n\t\t\t\t\tcase _:\r\n\t\t\t\t}\r\n\t\t\tcase Line:\r\n\t\t\t\tresult.vertexArray.attributes = GraphicsRenderer.primitiveVertexAttributes;\r\n\t\t}\r\n\t\t\r\n\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tpublic function optimize() {\r\n\t\t\r\n\t\tinline function opt(data:Array<GLBucketData>, type:BucketDataType) {\r\n\t\t\tif (data.length > 1) {\r\n\t\t\t\tvar result:Array<GLBucketData> = [];\r\n\t\t\t\tvar tmp:GLBucketData = null;\r\n\t\t\t\tvar last:GLBucketData = null;\r\n\t\t\t\tvar idx:Int = 0;\r\n\t\t\t\tvar vi:Int = 0;\r\n\t\t\t\tvar ii:Int = 0;\r\n\t\t\t\tvar before = data.length;\r\n\t\t\t\tfor (d in data) {\r\n\t\t\t\t\tif (d.available || d.rawVerts || d.rawIndices) {\r\n\t\t\t\t\t\tif (tmp != null) {\r\n\t\t\t\t\t\t\tresult.push(tmp);\r\n\t\t\t\t\t\t\ttmp = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresult.push(d);\r\n\t\t\t\t\t\tlast = d;\r\n\t\t\t\t\t\t//trace(\"destroyed or raw data\");\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//trace(\"last null? \"+(last == null)+\" or same drawmode? \"+ (last != null && last.drawMode == d.drawMode) + \" \" + d.drawMode);\r\n\t\t\t\t\tif (last == null || (last.drawMode == d.drawMode)) {\r\n\t\t\t\t\t\tif (tmp == null) {\r\n\t\t\t\t\t\t\ttmp = d;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvi = tmp.verts.length;\r\n\t\t\t\t\t\t\tii = tmp.indices.length;\r\n\t\t\t\t\t\t\tfor (j in 0...d.verts.length) {\r\n\t\t\t\t\t\t\t\ttmp.verts[j + vi] = d.verts[j];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (j in 0...d.indices.length) {\r\n\t\t\t\t\t\t\t\ttmp.indices[j + ii] = d.indices[j] + idx;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tidx = tmp.indices[tmp.indices.length - 1] + 1;\r\n\t\t\t\t\t\tlast = d;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (tmp != null) {\r\n\t\t\t\t\t\t\tresult.push(tmp);\r\n\t\t\t\t\t\t\ttmp = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresult.push(d);\r\n\t\t\t\t\t\tlast = d;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (result.length == 0 && tmp != null) {\r\n\t\t\t\t\tresult.push(tmp);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(result.length > 0) {\r\n\t\t\t\t\tswitch(type) {\r\n\t\t\t\t\t\tcase Fill:\r\n\t\t\t\t\t\t\tthis.fills = result;\r\n\t\t\t\t\t\tcase _:\r\n\t\t\t\t\t\t\tthis.lines = result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//data = result;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//trace(\"Optimized from: \" + before + \" to: \" + result.length);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//opt(fills, Fill);\r\n\t\topt(lines, Line);\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function reset ():Void {\r\n\t\tfor (fill in fills) {\r\n\t\t\tfill.reset();\r\n\t\t}\r\n\t\t\r\n\t\tfor (line in lines) {\r\n\t\t\tline.reset();\r\n\t\t}\r\n\t\t\r\n\t\tfillIndex = -1;\r\n\t\tuploadTileBuffer = true;\r\n\t\tgraphicType = GraphicType.Polygon;\r\n\t}\r\n\t\r\n\tpublic function uploadTile (x:Int, y:Int, w:Int, h:Int):Void {\r\n\t\t\r\n\t\tif(tileBuffer == null) {\r\n\t\t\ttileBuffer = gl.createBuffer();\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\ttile = [\r\n\t\t\tx, y,\t0, 0,\r\n\t\t\tw, y, \t1, 0,\r\n\t\t\tx, h, \t0, 1,\r\n\t\t\tw, h,\t1, 1\r\n\t\t];\r\n\t\t\r\n\t\tglTile = new Int16Array (tile);\r\n\t\t\r\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, tileBuffer);\r\n\t\tgl.bufferData (gl.ARRAY_BUFFER, glTile, gl.STATIC_DRAW);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function upload ():Void {\r\n\r\n\t\tif(this.mode != Line) {\r\n\t\t\tfor (fill in fills) {\r\n\t\t\t\tif (!fill.available) {\r\n\t\t\t\t\tfill.upload();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (line in lines) {\r\n\t\t\tif (!line.available) {\r\n\t\t\t\tline.upload();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tdirty = false;\r\n\t\t\r\n\t}\r\n}\r\n\r\nclass GLBucketData {\r\n\tpublic var type:BucketDataType;\r\n\t\r\n\tpublic var gl:GLRenderContext;\r\n\tpublic var drawMode:Int;\r\n\tpublic var glLength:Int = 0;\r\n\tpublic var glStart:Int = 0;\r\n\t\r\n\tpublic var vertexArray:VertexArray;\r\n\tpublic var glVerts:Float32Array;\r\n\tpublic var lastVertsSize:Int = 0;\r\n\tpublic var verts:Array<Float>;\r\n\tpublic var rawVerts:Bool = false;\r\n\tpublic var stride:Int = 0;\r\n\t\r\n\tpublic var indexBuffer:GLBuffer;\r\n\tpublic var glIndices:UInt16Array;\r\n\tpublic var indices:Array<Int>;\r\n\tpublic var rawIndices:Bool = false;\r\n\t\r\n\tpublic var available:Bool = false;\r\n\t\r\n\tpublic var parent:GLBucket;\r\n\t\r\n\tpublic function new (gl:GLRenderContext) {\r\n\t\tthis.gl = gl;\r\n\t\tdrawMode = gl.TRIANGLE_STRIP;\r\n\t\tverts = [];\r\n\t\tindices = [];\r\n\t\tvertexArray = new VertexArray([]);\r\n\t}\r\n\t\r\n\tpublic function reset():Void {\r\n\t\tavailable = true;\r\n\t\tverts = [];\r\n\t\tindices = [];\r\n\t\tglLength = 0;\r\n\t\tglStart = 0;\r\n\t\tstride = 0;\r\n\t\trawVerts = false;\r\n\t\trawIndices = false;\r\n\t\tdrawMode = gl.TRIANGLE_STRIP;\r\n\t}\r\n\t\r\n\tpublic function upload():Void {\r\n\t\t\r\n\t\t// only upload a verts buffer if verts has anything inside\r\n\t\tif ((rawVerts && glVerts != null && glVerts.length > 0) || verts.length > 0) {\r\n\t\t\t\r\n\t\t\tif (!rawVerts) glVerts = new Float32Array (verts);\r\n\t\t\t\r\n\t\t\tvertexArray.buffer = glVerts.buffer;\r\n\t\t\t\r\n\t\t\tif (glVerts.length <= lastVertsSize) {\r\n\t\t\t\tvertexArray.bind();\r\n\t\t\t\tvar end = glLength * stride;\r\n\t\t\t\tif (glLength > 0 && lastVertsSize > end) {\r\n\t\t\t\t\tvar view = glVerts.subarray(0, end);\r\n\t\t\t\t\tvertexArray.upload(view);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvertexArray.upload(glVerts);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvertexArray.setContext(gl, glVerts);\r\n\t\t\t\tlastVertsSize = glVerts.length;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// only upload a index buffer is there is no length provided and indices has anything inside\r\n\t\tif (glLength == 0 && ((rawIndices && glIndices != null && glIndices.length > 0) || indices.length > 0)) {\r\n\t\t\t\r\n\t\t\tif (indexBuffer == null) {\r\n\t\t\t\tindexBuffer = gl.createBuffer ();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!rawIndices) glIndices = new UInt16Array (indices);\r\n\t\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\t\t\tgl.bufferData (gl.ELEMENT_ARRAY_BUFFER, glIndices, gl.STREAM_DRAW);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nenum BucketMode {\r\n\tNone;\r\n\tFill;\r\n\tPatternFill;\r\n\tLine;\r\n\tPatternLine;\r\n\tDrawTriangles;\r\n\tDrawTiles;\r\n}\r\n\r\nenum BucketDataType {\r\n\tLine; Fill;\r\n}\r\n\r\n\r\nclass GLGraphicsData {\r\n\t\r\n\tpublic var gl:GLRenderContext;\r\n\t\r\n\tpublic var tint:Array<Float> = [1.0, 1.0, 1.0];\r\n\tpublic var alpha:Float = 1.0;\r\n\tpublic var dirty:Bool = true;\r\n\tpublic var mode:RenderMode = RenderMode.DEFAULT;\r\n\tpublic var lastIndex:Int = 0;\r\n\t\r\n\tpublic var data:Array<Float> = [];\r\n\tpublic var glData:Float32Array;\r\n\tpublic var dataBuffer:GLBuffer;\r\n\t\r\n\tpublic var indices:Array<Int> = [];\r\n\tpublic var glIndices:UInt16Array;\r\n\tpublic var indexBuffer:GLBuffer;\r\n\t\r\n\t\r\n\tpublic function new (gl:GLRenderContext) {\r\n\t\t\r\n\t\tthis.gl = gl;\r\n\t\t\r\n\t\tdataBuffer = gl.createBuffer();\r\n\t\tindexBuffer = gl.createBuffer();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function reset ():Void {\r\n\t\t\r\n\t\tdata = [];\r\n\t\tindices = [];\r\n\t\tlastIndex = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function upload ():Void {\r\n\t\t\r\n\t\tglData = new Float32Array (cast data);\r\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, dataBuffer);\r\n\t\tgl.bufferData (gl.ARRAY_BUFFER, glData, gl.STATIC_DRAW);\r\n\t\t\r\n\t\t\r\n\t\tglIndices = new UInt16Array (cast indices);\r\n\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\t\tgl.bufferData (gl.ELEMENT_ARRAY_BUFFER, glIndices, gl.STATIC_DRAW);\r\n\t\t\r\n\t\tdirty = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nenum GraphicType {\r\n\r\n\tPolygon;\r\n\tRectangle(rounded:Bool);\r\n\tCircle;\r\n\tEllipse;\r\n\tDrawTriangles(vertices:Vector<Float>, indices:Vector<Int>, uvtData:Vector<Float>, culling:TriangleCulling, colors:Vector<Int>, blendMode:Int);\r\n\tDrawTiles (sheet:Tilesheet, tileData:Array<Float>, smooth:Bool, flags:Int, shader:FlashShader, count:Int);\r\n\tOverrideMatrix (matrix:Matrix);\r\n\r\n}\r\n\r\n@:enum abstract RenderMode(Int) {\r\n\tvar DEFAULT = 0;\r\n\tvar STENCIL = 1;\r\n}\r\n","package openfl._internal.renderer.opengl.utils;\r\nimport lime.graphics.GLRenderContext;\r\nimport openfl.gl.GLFramebuffer;\r\nimport openfl.gl.GLTexture;\r\n\r\n/**\r\n * ...\r\n * @author MrCdK\r\n */\r\nclass PingPongTexture\r\n{\r\n\t\r\n\tpublic var gl:GLRenderContext;\r\n\tpublic var renderTexture(get, set):RenderTexture;\r\n\tpublic var oldRenderTexture(get, set):RenderTexture;\r\n\tpublic var framebuffer(get, never):GLFramebuffer;\r\n\tpublic var texture(get, never):GLTexture;\r\n\tpublic var width:Int;\r\n\tpublic var height:Int;\r\n\tpublic var smoothing:Bool;\r\n\tpublic var useOldTexture:Bool = false;\r\n\tpublic var powerOfTwo:Bool = true;\r\n\r\n\tprivate var __swapped:Bool = false;\r\n\tprivate var __texture0:RenderTexture;\r\n\tprivate var __texture1:RenderTexture;\r\n\tprivate var __otherTexture(get, never):RenderTexture;\r\n\t\r\n\tpublic function new(gl:GLRenderContext, width:Int, height:Int, smoothing:Bool = true, powerOfTwo:Bool = true) {\r\n\t\tthis.gl = gl;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.smoothing = smoothing;\r\n\t\tthis.powerOfTwo = powerOfTwo;\r\n\t\t\r\n\t\trenderTexture = new RenderTexture(gl, width, height, smoothing, powerOfTwo);\r\n\t}\r\n\t\r\n\tpublic function swap() {\r\n\t\t__swapped = !__swapped;\r\n\t\tif (renderTexture == null) {\r\n\t\t\trenderTexture = new RenderTexture(gl, width, height, smoothing, powerOfTwo);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic inline function clear (?r:Float = 0, ?g:Float = 0, ?b:Float = 0, ?a:Float = 0, ?mask:Null<Int>):Void {\r\n\t\t\r\n\t\trenderTexture.clear(r, g, b, a, mask);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function resize(width:Int, height:Int) {\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\trenderTexture.resize(width, height);\r\n\t}\r\n\t\r\n\tpublic function destroy() {\r\n\t\tif (__texture0 != null) {\r\n\t\t\t__texture0.destroy();\r\n\t\t\t__texture0 = null;\r\n\t\t}\r\n\t\tif (__texture1 != null) {\r\n\t\t\t__texture1.destroy();\r\n\t\t\t__texture1 = null;\r\n\t\t}\r\n\t\t__swapped = false;\r\n\t}\r\n\t\r\n\tinline function get_renderTexture() {\r\n\t\treturn __swapped ? __texture1 : __texture0;\r\n\t}\r\n\t\r\n\tinline function set_renderTexture(v) {\r\n\t\treturn {\r\n\t\t\tif (__swapped) \r\n\t\t\t\t__texture1 = v;\r\n\t\t\telse \r\n\t\t\t\t__texture0 = v;\r\n\t\t};\r\n\t}\r\n\t\r\n\tinline function get_oldRenderTexture() {\r\n\t\treturn __swapped ? __texture0 : __texture1;\r\n\t}\r\n\t\r\n\tinline function set_oldRenderTexture(v) {\r\n\t\treturn {\r\n\t\t\tif (__swapped) \r\n\t\t\t\t__texture0 = v;\r\n\t\t\telse \r\n\t\t\t\t__texture1 = v;\r\n\t\t};\r\n\t}\r\n\t\r\n\tinline function get_framebuffer() {\r\n\t\treturn renderTexture.frameBuffer;\r\n\t}\r\n\t\r\n\tinline function get_texture() {\r\n\t\treturn useOldTexture ? __otherTexture.texture : renderTexture.texture;\r\n\t}\r\n\t\r\n\tinline function get___otherTexture() {\r\n\t\treturn __swapped ? __texture0 : __texture1;\r\n\t}\r\n}","package openfl._internal.renderer.opengl.utils ;\r\n\r\n\r\nimport lime.graphics.opengl.GLFramebuffer;\r\nimport lime.graphics.opengl.GLRenderbuffer;\r\nimport lime.graphics.opengl.GLTexture;\r\nimport lime.graphics.GLRenderContext;\r\nimport openfl.display.BitmapData.TextureUvs;\r\n\r\n\r\nclass RenderTexture {\r\n\t\r\n\t\r\n\tpublic var gl:GLRenderContext;\r\n\tpublic var frameBuffer:GLFramebuffer;\r\n\tpublic var renderBuffer:GLRenderbuffer;\r\n\tpublic var texture:GLTexture;\r\n\tpublic var smoothing:Bool;\r\n\tpublic var width:Int;\r\n\tpublic var height:Int;\r\n\tpublic var powerOfTwo:Bool = true;\r\n\t\r\n\tprivate var __width:Int;\r\n\tprivate var __height:Int;\r\n\tprivate var __uvData:TextureUvs;\r\n\t\r\n\tpublic function new (gl:GLRenderContext, width:Int, height:Int, smoothing:Bool = true, powerOfTwo:Bool = true) {\r\n\t\t\r\n\t\tthis.gl = gl;\r\n\t\tthis.powerOfTwo = powerOfTwo;\r\n\t\t\r\n\t\tframeBuffer = gl.createFramebuffer ();\r\n\t\ttexture = gl.createTexture ();\r\n\t\t\r\n\t\tgl.bindTexture (gl.TEXTURE_2D, texture);\r\n\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, smoothing ? gl.LINEAR : gl.NEAREST);\r\n\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, smoothing ? gl.LINEAR : gl.NEAREST);\r\n\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\t\t\r\n\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, frameBuffer);\r\n\t\tgl.framebufferTexture2D (gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n\t\t\r\n\t\trenderBuffer = gl.createRenderbuffer ();\r\n\t\tgl.bindRenderbuffer (gl.RENDERBUFFER, renderBuffer);\r\n\t\tgl.framebufferRenderbuffer (gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, renderBuffer);\r\n\t\t\r\n\t\tresize (width, height);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clear (?r:Float = 0, ?g:Float = 0, ?b:Float = 0, ?a:Float = 0, ?mask:Null<Int>):Void {\r\n\t\t\r\n\t\tgl.clearColor (r, g, b, a);\r\n\t\tgl.clear (mask == null ? gl.COLOR_BUFFER_BIT : mask);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function destroy ():Void {\r\n\t\t\r\n\t\tif(frameBuffer != null) gl.deleteFramebuffer (frameBuffer);\r\n\t\tif(texture != null) gl.deleteTexture (texture);\r\n\t\t\r\n\t\tframeBuffer = null;\r\n\t\ttexture = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function resize (width:Int, height:Int):Void {\r\n\t\t\r\n\t\tif (this.width == width && this.height == height) return;\r\n\t\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\t\r\n\t\tvar pow2W = width;\r\n\t\tvar pow2H = height;\r\n\t\t\r\n\t\tif (powerOfTwo) {\r\n\t\t\tpow2W = powOfTwo(width);\r\n\t\t\tpow2H = powOfTwo(height);\r\n\t\t}\r\n\r\n\t\tvar lastW = __width;\r\n\t\tvar lastH = __height;\r\n\t\t\r\n\t\t__width = pow2W;\r\n\t\t__height = pow2H;\r\n\t\t\r\n\t\tcreateUVs();\r\n\t\t\r\n\t\tif (lastW == pow2W && lastH == pow2H) return;\r\n\t\t\r\n\t\tgl.bindTexture (gl.TEXTURE_2D, texture);\r\n\t\tgl.texImage2D (gl.TEXTURE_2D, 0, gl.RGBA, __width, __height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n\t\t\r\n\t\tgl.bindRenderbuffer (gl.RENDERBUFFER, renderBuffer);\r\n\t\tgl.renderbufferStorage (gl.RENDERBUFFER, gl.DEPTH_STENCIL, __width, __height);\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function createUVs() {\r\n\t\tif (__uvData == null) __uvData = new TextureUvs();\r\n\t\tvar w = width / __width;\r\n\t\tvar h = height / __height;\r\n\t\t__uvData.x0 = 0;\r\n\t\t__uvData.y0 = 0;\r\n\t\t__uvData.x1 = w;\r\n\t\t__uvData.y1 = 0;\r\n\t\t__uvData.x2 = w;\r\n\t\t__uvData.y2 = h;\r\n\t\t__uvData.x3 = 0;\r\n\t\t__uvData.y3 = h;\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate inline function powOfTwo(value:Int) {\r\n\t\tvar n = 1;\r\n\t\twhile (n < value) n <<= 1;\r\n\t\treturn n;\r\n\t}\r\n}","package openfl._internal.renderer.opengl.utils;\r\n\r\nimport lime.graphics.GLRenderContext;\r\nimport openfl._internal.renderer.opengl.shaders2.*;\r\nimport openfl.gl.GLProgram;\r\n\r\nclass ShaderManager {\r\n\r\n\t//TODO change this\r\n\tprivate static var compiledShadersCache:Map<String, GLProgram> = new Map();\r\n\t\r\n\tpublic var gl:GLRenderContext;\r\n\tpublic var currentShader:Shader;\r\n\t\r\n\tpublic var defaultShader:DefaultShader;\r\n\tpublic var fillShader:FillShader;\r\n\tpublic var patternFillShader:PatternFillShader;\r\n\tpublic var drawTrianglesShader:DrawTrianglesShader;\r\n\tpublic var primitiveShader:PrimitiveShader;\r\n\t\r\n\tpublic function new(gl:GLRenderContext) {\r\n\t\tsetContext(gl);\r\n\t}\r\n\t\r\n\tpublic function setContext(gl:GLRenderContext) {\r\n\t\tthis.gl = gl;\r\n\t\t\r\n\t\tdefaultShader = new DefaultShader(gl);\r\n\t\tfillShader = new FillShader(gl);\r\n\t\tpatternFillShader = new PatternFillShader(gl);\r\n\t\tdrawTrianglesShader = new DrawTrianglesShader(gl);\r\n\t\tprimitiveShader = new PrimitiveShader(gl);\r\n\t\t\r\n\t\tsetShader(defaultShader, true);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function destroy ():Void {\r\n\t\t\r\n\t\tdefaultShader.destroy();\r\n\t\tfillShader.destroy();\r\n\t\tpatternFillShader.destroy();\r\n\t\tdrawTrianglesShader.destroy();\r\n\t\tprimitiveShader.destroy();\r\n\t\t\r\n\t\tgl = null;\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function setShader(shader:Shader, ?force:Bool = false) {\r\n\t\tif (shader == null) {\r\n\t\t\t// Assume we want to force, if we get called with null.\r\n\t\t\tcurrentShader = null;\r\n\t\t\tgl.useProgram(null);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif (currentShader != null && !force && currentShader.ID == shader.ID) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tcurrentShader = shader;\r\n\t\t\r\n\t\tgl.useProgram(shader.program);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n}\r\n","package openfl._internal.renderer.opengl.utils;\r\n\r\nimport lime.graphics.GLRenderContext;\r\nimport openfl._internal.renderer.opengl.shaders2.*;\r\nimport openfl._internal.renderer.opengl.shaders2.DefaultShader.DefAttrib;\r\nimport openfl._internal.renderer.opengl.shaders2.DefaultShader.DefUniform;\r\nimport openfl._internal.renderer.opengl.utils.VertexAttribute;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.DisplayObject;\r\nimport openfl.display.PixelSnapping;\r\nimport openfl.display.Shader in FlashShader;\r\nimport openfl.display.Shader.GLShaderData;\r\nimport openfl.display.Tilesheet;\r\nimport openfl.geom.ColorTransform;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.gl.GLBuffer;\r\nimport openfl.gl.GLTexture;\r\nimport openfl.display.BlendMode;\r\nimport lime.utils.*;\r\n\r\n@:access(openfl.display.BitmapData)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.display.Tilesheet)\r\n@:access(openfl.display.Shader)\r\n@:access(openfl.geom.Matrix)\r\n\r\nclass SpriteBatch {\r\n\r\n\tstatic inline var VERTS_PER_SPRITE:Int = 4;\r\n\t\r\n\tpublic var gl:GLRenderContext;\r\n\tvar renderSession:RenderSession;\r\n\t\r\n\tvar states:Array<State> = [];\r\n\tvar currentState:State;\r\n\t\r\n\tvar vertexArray:VertexArray;\r\n\tvar positions:Float32Array;\r\n\tvar colors:UInt32Array;\r\n\t\r\n\tvar indexBuffer:GLBuffer;\r\n\tvar indices:UInt16Array;\r\n\t\r\n\tvar dirty:Bool = true;\r\n\tpublic var drawing:Bool = false;\r\n\t\r\n\tvar clipRect:Rectangle;\r\n\t\r\n\tvar maxSprites:Int;\r\n\tvar batchedSprites:Int;\r\n\tvar vertexArraySize:Int;\r\n\tvar indexArraySize:Int;\r\n\tvar maxElementsPerVertex:Int;\r\n\tvar elementsPerVertex:Int;\r\n\t\r\n\tvar writtenVertexBytes:Int = 0;\r\n\t\r\n\tvar shader:Shader;\r\n\tvar attributes:Array<VertexAttribute> = [];\r\n\t\r\n\tvar enableColor:Bool = true;\r\n\t\r\n\tvar lastEnableColor:Bool = true;\r\n\t\r\n\tvar matrix:Matrix = new Matrix();\r\n\tvar uvs:TextureUvs = new TextureUvs();\r\n\tvar colorTransform:ColorTransform = new ColorTransform();\r\n\t\r\n\tpublic function new(gl:GLRenderContext, maxSprites:Int = 2000) {\r\n\t\tthis.maxSprites = maxSprites;\r\n\t\t\r\n\t\tattributes.push(new VertexAttribute(2, ElementType.FLOAT, false, DefAttrib.Position));\r\n\t\tattributes.push(new VertexAttribute(2, ElementType.FLOAT, false, DefAttrib.TexCoord));\r\n\t\tattributes.push(new VertexAttribute(4, ElementType.UNSIGNED_BYTE, true, DefAttrib.Color));\r\n\t\t\r\n\t\tattributes[2].defaultValue = new Float32Array([1, 1, 1, 1]);\r\n\t\t\r\n\t\tmaxElementsPerVertex = 0;\r\n\t\t\r\n\t\tfor (a in attributes) {\r\n\t\t\tmaxElementsPerVertex += a.elements;\r\n\t\t}\r\n\t\t\r\n\t\tvertexArraySize = maxSprites * maxElementsPerVertex * VERTS_PER_SPRITE * 4;\r\n\t\tindexArraySize = maxSprites * 6;\r\n\t\t\r\n\t\tvertexArray = new VertexArray(attributes, vertexArraySize, false);\r\n\t\tpositions = new Float32Array(vertexArray.buffer);\r\n\t\tcolors = new UInt32Array(vertexArray.buffer);\r\n\t\t\r\n\t\tindices = new UInt16Array(indexArraySize);\r\n\t\t\r\n\t\tvar i = 0, j = 0;\r\n\t\twhile (i < indexArraySize) {\r\n\t\t\tindices[i + 0] = j + 0;\r\n\t\t\tindices[i + 1] = j + 1;\r\n\t\t\tindices[i + 2] = j + 2;\r\n\t\t\tindices[i + 3] = j + 0;\r\n\t\t\tindices[i + 4] = j + 2;\r\n\t\t\tindices[i + 5] = j + 3;\r\n\t\t\ti += 6;\r\n\t\t\tj += 4;\r\n\t\t}\r\n\t\t\r\n\t\tcurrentState = new State();\r\n\t\tdirty = true;\r\n\t\tdrawing = false;\r\n\t\tbatchedSprites = 0;\r\n\t\t\r\n\t\tsetContext(gl);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function destroy() {\r\n\t\tvertexArray.destroy();\r\n\t\tvertexArray = null;\r\n\t\t\r\n\t\tindices = null;\r\n\t\tgl.deleteBuffer(indexBuffer);\r\n\t\t\r\n\t\tcurrentState.destroy();\r\n\t\tfor (state in states) {\r\n\t\t\tstate.destroy();\r\n\t\t}\r\n\t\t\r\n\t\tcolorTransform = null;\r\n\t\t\r\n\t\tgl = null;\r\n\t}\r\n\t\r\n\tpublic function begin(renderSession:RenderSession, ?clipRect:Rectangle = null):Void {\r\n\t\t\r\n\t\tthis.renderSession = renderSession;\r\n\t\tshader = renderSession.shaderManager.defaultShader;\r\n\t\tdrawing = true;\r\n\t\tstart(clipRect);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function finish() {\r\n\t\tstop();\r\n\t\tclipRect = null;\r\n\t\tdrawing = false;\r\n\t}\r\n\t\r\n\tpublic function start(?clipRect:Rectangle = null) {\r\n\t\tif (!drawing) {\r\n\t\t\tstop();\r\n\t\t}\r\n\t\tdirty = true;\r\n\t\tthis.clipRect = clipRect;\r\n\t}\r\n\t\r\n\tpublic function stop() {\r\n\t\tflush();\r\n\t}\r\n\t\r\n\tpublic function renderBitmapData(bitmapData:BitmapData, smoothing:Bool, matrix:Matrix, ct:ColorTransform, ?alpha:Float = 1, ?blendMode:BlendMode, ?flashShader:FlashShader, ?pixelSnapping:PixelSnapping, bgra:Bool = false) {\r\n\t\tif (bitmapData == null) return;\r\n\t\tvar texture = bitmapData.getTexture(gl);\r\n\t\t\r\n\t\tif (batchedSprites >= maxSprites) {\r\n\t\t\tflush();\r\n\t\t}\r\n\t\t\r\n\t\tvar uvs = bitmapData.__uvData;\r\n\t\tif (uvs == null) return;\r\n\t\t\r\n\t\tprepareShader(flashShader, bitmapData);\r\n\t\t\r\n\t\tvar color:Int = ((Std.int(alpha * 255)) & 0xFF) << 24 | 0xFFFFFF;\r\n\t\t\r\n\t\t//enableAttributes(color);\r\n\t\tenableAttributes(0);\r\n\t\t\r\n\t\tvar index = batchedSprites * 4 * elementsPerVertex;\r\n\t\tfillVertices(index, bitmapData.width, bitmapData.height, matrix, uvs, color, pixelSnapping);\r\n\t\t\r\n\t\tsetState(batchedSprites, texture, smoothing, blendMode, ct, flashShader, true);\r\n\t\t\r\n\t\tbatchedSprites++;\r\n\t}\r\n\t\r\n\tpublic function renderTiles(object:DisplayObject, sheet:Tilesheet, tileData:Array<Float>, smooth:Bool = false, flags:Int = 0, ?flashShader:FlashShader, count:Int = -1) {\r\n\t\t\r\n\t\tvar texture = sheet.__bitmap.getTexture(gl);\r\n\t\tif (texture == null) return;\r\n\t\t\r\n\t\tvar useScale = (flags & Tilesheet.TILE_SCALE) > 0;\r\n\t\tvar useRotation = (flags & Tilesheet.TILE_ROTATION) > 0;\r\n\t\tvar useTransform = (flags & Tilesheet.TILE_TRANS_2x2) > 0;\r\n\t\tvar useRGB = (flags & Tilesheet.TILE_RGB) > 0;\r\n\t\tvar useAlpha = (flags & Tilesheet.TILE_ALPHA) > 0;\r\n\t\tvar useRect = (flags & Tilesheet.TILE_RECT) > 0;\r\n\t\tvar useOrigin = (flags & Tilesheet.TILE_ORIGIN) > 0;\r\n\t\tvar useRGBOffset = ((flags & Tilesheet.TILE_TRANS_COLOR) > 0);\r\n\t\t\r\n\t\tvar blendMode:BlendMode = switch(flags & 0xF0000) {\r\n\t\t\tcase Tilesheet.TILE_BLEND_ADD:                ADD;\r\n\t\t\tcase Tilesheet.TILE_BLEND_MULTIPLY:           MULTIPLY;\r\n\t\t\tcase Tilesheet.TILE_BLEND_SCREEN:             SCREEN;\r\n\t\t\tcase Tilesheet.TILE_BLEND_SUBTRACT:           SUBTRACT;\r\n\t\t\tcase _: switch(flags & 0xF00000) {\r\n\t\t\t\tcase Tilesheet.TILE_BLEND_DARKEN:         DARKEN;\r\n\t\t\t\tcase Tilesheet.TILE_BLEND_LIGHTEN:        LIGHTEN;\r\n\t\t\t\tcase Tilesheet.TILE_BLEND_OVERLAY:        OVERLAY;\r\n\t\t\t\tcase Tilesheet.TILE_BLEND_HARDLIGHT:      HARDLIGHT;\r\n\t\t\t\tcase _: switch(flags & 0xF000000) {\r\n\t\t\t\t\tcase Tilesheet.TILE_BLEND_DIFFERENCE: DIFFERENCE;\r\n\t\t\t\t\tcase Tilesheet.TILE_BLEND_INVERT:     INVERT;\r\n\t\t\t\t\tcase _:                               NORMAL;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tif (useTransform) { useScale = false; useRotation = false; }\r\n\t\t\r\n\t\tvar scaleIndex = 0;\r\n\t\tvar rotationIndex = 0;\r\n\t\tvar rgbIndex = 0;\r\n\t\tvar rgbOffsetIndex = 0;\r\n\t\tvar alphaIndex = 0;\r\n\t\tvar transformIndex = 0;\r\n\t\t\r\n\t\tvar numValues = 3;\r\n\t\t\r\n\t\tif (useRect) { numValues = useOrigin ? 8 : 6; }\r\n\t\tif (useScale) { scaleIndex = numValues; numValues ++; }\r\n\t\tif (useRotation) { rotationIndex = numValues; numValues ++; }\r\n\t\tif (useTransform) { transformIndex = numValues; numValues += 4; }\r\n\t\tif (useRGB) { rgbIndex = numValues; numValues += 3; }\r\n\t\tif (useAlpha) { alphaIndex = numValues; numValues ++; }\r\n\t\tif (useRGBOffset) { rgbOffsetIndex = numValues; numValues += 4; }\r\n\t\t\r\n\t\tvar totalCount = tileData.length;\r\n\t\tif (count >= 0 && totalCount > count) totalCount = count;\r\n\t\tvar itemCount = Math.ceil (totalCount / numValues);\r\n\t\tvar iIndex = 0;\r\n\t\t\r\n\t\tvar tileID = -1;\r\n\t\tvar rect:Rectangle = sheet.__rectTile;\r\n\t\tvar tileUV:Rectangle = sheet.__rectUV;\r\n\t\tvar center:Point = sheet.__point;\r\n\t\tvar x = 0.0, y = 0.0;\r\n\t\tvar alpha = 1.0, tint = 0xFFFFFF, color = 0xFFFFFFFF;\r\n\t\tvar scale = 1.0, rotation = 0.0;\r\n\t\tvar cosTheta = 1.0, sinTheta = 0.0;\r\n\t\tvar a = 0.0, b = 0.0, c = 0.0, d = 0.0, tx = 0.0, ty = 0.0;\r\n\t\tvar ox = 0.0, oy = 0.0;\r\n\t\t\r\n\t\tvar oMatrix = object.__worldTransform;\r\n\t\t\r\n\t\tvar bIndex = 0;\r\n\t\tvar tMa  = 1.0, tMb  = 0.0;\r\n\t\tvar tMc  = 0.0, tMd  = 1.0;\r\n\t\tvar tMtx = 0.0, tMty = 0.0;\r\n\t\t\r\n\t\tvar oMa  = oMatrix.a;\r\n\t\tvar oMb  = oMatrix.b;\r\n\t\tvar oMc  = oMatrix.c;\r\n\t\tvar oMd  = oMatrix.d;\r\n\t\tvar oMtx = oMatrix.tx;\r\n\t\tvar oMty = oMatrix.ty;\r\n\t\t\r\n\t\tvar rx = 0.0, ry = 0.0, rw = 0.0, rh = 0.0;\r\n\t\tvar tuvx = 0.0, tuvy = 0.0, tuvw = 0.0, tuvh = 0.0;\r\n\t\t\r\n\t\t//enableAttributes((useRGB || useAlpha) ? 0 : 0xFFFFFFFF);\r\n\t\tenableAttributes(0);\r\n\t\t\r\n\t\tprepareShader(flashShader);\r\n\t\t\r\n\t\twhile (iIndex < totalCount) {\r\n\t\t\t\r\n\t\t\tif (batchedSprites >= maxSprites) {\r\n\t\t\t\tflush ();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tx = tileData[iIndex + 0];\r\n\t\t\ty = tileData[iIndex + 1];\r\n\t\t\t\r\n\t\t\tif (useRect) {\r\n\t\t\t\ttileID = -1;\r\n\t\t\t\t\r\n\t\t\t\trect.x = tileData[iIndex + 2];\r\n\t\t\t\trect.y = tileData[iIndex + 3];\r\n\t\t\t\trect.width = tileData[iIndex + 4];\r\n\t\t\t\trect.height = tileData[iIndex + 5];\r\n\t\t\t\t\r\n\t\t\t\tif (useOrigin) {\r\n\t\t\t\t\tcenter.x = tileData[iIndex + 6];\r\n\t\t\t\t\tcenter.y = tileData[iIndex + 7];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcenter.setTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\trw = rect.width; rh = rect.height;\r\n\t\t\t\ttuvx = rect.left / sheet.__bitmap.width;\r\n\t\t\t\ttuvy = rect.top / sheet.__bitmap.height;\r\n\t\t\t\ttuvw = rect.right / sheet.__bitmap.width;\r\n\t\t\t\ttuvh = rect.bottom / sheet.__bitmap.height;\r\n\t\t\t} else {\r\n\t\t\t\ttileID = Std.int(#if (neko || js) tileData[iIndex + 2] == null ? 0 : #end tileData[iIndex + 2]);\r\n\t\t\t\trect = sheet.getTileRect(tileID);\r\n\t\t\t\tcenter = sheet.getTileCenter(tileID);\r\n\t\t\t\ttileUV = sheet.getTileUVs(tileID);\r\n\t\t\t\t\r\n\t\t\t\tif (rect != null) {\r\n\t\t\t\t\trw = rect.width; rh = rect.height;\r\n\t\t\t\t\ttuvx = tileUV.x; tuvy = tileUV.y; tuvw = tileUV.width; tuvh = tileUV.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (rect != null && rect.width > 0 && rect.height > 0 && center != null) {\r\n\t\t\t\t\r\n\t\t\t\talpha = 1;\r\n\t\t\t\ttint = 0xFFFFFF;\r\n\t\t\t\tscale = 1.0;\r\n\t\t\t\trotation = 0.0;\r\n\t\t\t\tcosTheta = 1.0;\r\n\t\t\t\tsinTheta = 0.0;\r\n\t\t\t\t\r\n\t\t\t\tif (useAlpha) {\r\n\t\t\t\t\talpha = tileData[iIndex + alphaIndex] * object.__worldAlpha;\r\n\t\t\t\t} else {\r\n\t\t\t\t\talpha = object.__worldAlpha;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (useRGB) {\r\n\t\t\t\t\ttint = Std.int(tileData[iIndex + rgbIndex] * 255) << 16 | Std.int(tileData[iIndex + rgbIndex + 1] * 255) << 8 | Std.int(tileData[iIndex + rgbIndex + 2] * 255);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar wct = object.__worldColorTransform;\r\n\t\t\t\tcolorTransform.redMultiplier   = wct.redMultiplier;\r\n\t\t\t\tcolorTransform.greenMultiplier = wct.greenMultiplier;\r\n\t\t\t\tcolorTransform.blueMultiplier  = wct.blueMultiplier;\r\n\t\t\t\tcolorTransform.alphaMultiplier = wct.alphaMultiplier;\r\n\t\t\t\tcolorTransform.redOffset       = wct.redOffset;\r\n\t\t\t\tcolorTransform.greenOffset     = wct.greenOffset;\r\n\t\t\t\tcolorTransform.blueOffset      = wct.blueOffset;\r\n\t\t\t\tcolorTransform.alphaOffset     = wct.alphaOffset;\r\n\t\t\t\t\r\n\t\t\t\tif (useRGBOffset) {\r\n\t\t\t\t\tcolorTransform.redOffset   += tileData[iIndex + rgbOffsetIndex + 0];\r\n\t\t\t\t\tcolorTransform.greenOffset += tileData[iIndex + rgbOffsetIndex + 1];\r\n\t\t\t\t\tcolorTransform.blueOffset  += tileData[iIndex + rgbOffsetIndex + 2];\r\n\t\t\t\t\tcolorTransform.alphaOffset += tileData[iIndex + rgbOffsetIndex + 3];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (useScale) {\r\n\t\t\t\t\tscale = tileData[iIndex + scaleIndex];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (useRotation) {\r\n\t\t\t\t\trotation = tileData[iIndex + rotationIndex];\r\n\t\t\t\t\tcosTheta = Math.cos(rotation);\r\n\t\t\t\t\tsinTheta = Math.sin(rotation);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (useTransform) {\r\n\t\t\t\t\ta = tileData[iIndex + transformIndex + 0];\r\n\t\t\t\t\tb = tileData[iIndex + transformIndex + 1];\r\n\t\t\t\t\tc = tileData[iIndex + transformIndex + 2];\r\n\t\t\t\t\td = tileData[iIndex + transformIndex + 3];\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta = scale * cosTheta;\r\n\t\t\t\t\tb = scale * sinTheta;\r\n\t\t\t\t\tc = -b;\r\n\t\t\t\t\td = a;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tox = center.x * a + center.y * c;\r\n\t\t\t\toy = center.x * b + center.y * d;\r\n\t\t\t\t\r\n\t\t\t\ttx = x - ox;\r\n\t\t\t\tty = y - oy;\r\n\t\t\t\t\r\n\t\t\t\t// expanded fillVertices here since it doesn't need to access matrix or uvs\r\n\t\t\t\t\r\n\t\t\t\ttMa = (a * oMa + b * oMc) * rw;\r\n\t\t\t\ttMb = (a * oMb + b * oMd) * rw;\r\n\t\t\t\ttMc = (c * oMa + d * oMc) * rh;\r\n\t\t\t\ttMd = (c * oMb + d * oMd) * rh;\r\n\t\t\t\ttMtx = tx * oMa + ty * oMc + oMtx;\r\n\t\t\t\ttMty = tx * oMb + ty * oMd + oMty;\r\n\t\t\t\t\r\n\t\t\t\tbIndex = batchedSprites * 4 * elementsPerVertex;\r\n\t\t\t\t// POSITIONS\r\n\t\t\t\tpositions[bIndex + 0] \t= (tMtx);\r\n\t\t\t\tpositions[bIndex + 1] \t= (tMty);\r\n\t\t\t\tpositions[bIndex + 5] \t= (tMa + tMtx);\r\n\t\t\t\tpositions[bIndex + 6] \t= (tMb + tMty);\r\n\t\t\t\tpositions[bIndex + 10] \t= (tMa + tMc + tMtx);\r\n\t\t\t\tpositions[bIndex + 11] \t= (tMd + tMb + tMty);\r\n\t\t\t\tpositions[bIndex + 15] \t= (tMc + tMtx);\r\n\t\t\t\tpositions[bIndex + 16] \t= (tMd + tMty);\r\n\t\t\t\t//COLORS\r\n\t\t\t\tcolors[bIndex + 4] = colors[bIndex + 9] = colors[bIndex + 14] = colors[bIndex + 19] = ((Std.int(alpha * 255)) & 0xFF) << 24 | tint;\r\n\t\t\t\t// UVS\r\n\t\t\t\tpositions[bIndex + 2]  = tuvx;\r\n\t\t\t\tpositions[bIndex + 3]  = tuvy;\r\n\t\t\t\tpositions[bIndex + 7]  = tuvw;\r\n\t\t\t\tpositions[bIndex + 8]  = tuvy;\r\n\t\t\t\tpositions[bIndex + 12] = tuvw;\r\n\t\t\t\tpositions[bIndex + 13] = tuvh;\r\n\t\t\t\tpositions[bIndex + 17] = tuvx;\r\n\t\t\t\tpositions[bIndex + 18] = tuvh;\r\n\t\t\t\t\r\n\t\t\t\twrittenVertexBytes = bIndex + 20;\r\n\t\t\t\t\r\n\t\t\t\tsetState(batchedSprites, texture, smooth, blendMode, colorTransform, flashShader, false);\r\n\t\t\t\t\r\n\t\t\t\tbatchedSprites++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tiIndex += numValues;\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tinline function fillVertices(index:Int, width:Float, height:Float, matrix:Matrix, uvs:TextureUvs,\r\n\t\tcolor:Int = 0xFFFFFFFF, ?pixelSnapping:PixelSnapping) {\r\n\t\t\r\n\t\tvar a = matrix.a;\r\n\t\tvar b = matrix.b;\r\n\t\tvar c = matrix.c;\r\n\t\tvar d = matrix.d;\r\n\t\tvar tx = matrix.tx;\r\n\t\tvar ty = matrix.ty;\r\n\t\t\r\n\t\t// POSITION\r\n\t\tif (pixelSnapping == null || pixelSnapping == NEVER) {\r\n\t\t\tpositions[index + 0] \t= (tx);\r\n\t\t\tpositions[index + 1] \t= (ty);\r\n\t\t\tpositions[index + 5] \t= (a * width + tx);\r\n\t\t\tpositions[index + 6] \t= (b * width + ty);\r\n\t\t\tpositions[index + 10] \t= (a * width + c * height + tx);\r\n\t\t\tpositions[index + 11] \t= (d * height + b * width + ty);\r\n\t\t\tpositions[index + 15] \t= (c * height + tx);\r\n\t\t\tpositions[index + 16] \t= (d * height + ty);\r\n\t\t} else {\r\n\t\t\tpositions[index + 0] \t= Math.fround(tx);\r\n\t\t\tpositions[index + 1] \t= Math.fround(ty);\r\n\t\t\tpositions[index + 5] \t= Math.fround(a * width + tx);\r\n\t\t\tpositions[index + 6] \t= Math.fround(b * width + ty);\r\n\t\t\tpositions[index + 10] \t= Math.fround(a * width + c * height + tx);\r\n\t\t\tpositions[index + 11] \t= Math.fround(d * height + b * width + ty);\r\n\t\t\tpositions[index + 15] \t= Math.fround(c * height + tx);\r\n\t\t\tpositions[index + 16] \t= Math.fround(d * height + ty);\r\n\t\t}\r\n\t\t\r\n\t\t// COLOR\r\n\t\tif (enableColor) {\r\n\t\t\tcolors[index + 4] = colors[index + 9] = colors[index + 14] = colors[index + 19] = color;\r\n\t\t}\r\n\t\t\r\n\t\t// UVS\r\n\t\tpositions[index + 2] = uvs.x0;\r\n\t\tpositions[index + 3] = uvs.y0;\r\n\t\tpositions[index + 7] = uvs.x1;\r\n\t\tpositions[index + 8] = uvs.y1;\r\n\t\tpositions[index + 12] = uvs.x2;\r\n\t\tpositions[index + 13] = uvs.y2;\r\n\t\tpositions[index + 17] = uvs.x3;\r\n\t\tpositions[index + 18] = uvs.y3;\r\n\t\t\r\n\t\twrittenVertexBytes = index + 20;\r\n\t}\r\n\t\r\n\tinline function enableAttributes(?color:Int = 0xFFFFFFFF) {\r\n\t\tenableColor = color != 0xFFFFFFFF;\r\n\t\t\r\n\t\tif (enableColor != lastEnableColor) {\r\n\t\t\tflush();\r\n\t\t\tlastEnableColor = enableColor;\r\n\t\t}\r\n\t\t\r\n\t\tattributes[2].enabled = lastEnableColor;\r\n\t\t\r\n\t\telementsPerVertex = getElementsPerVertex();\r\n\t}\r\n\t\r\n\tfunction flush() {\r\n\t\tif (batchedSprites == 0) return;\r\n\t\t\r\n\t\tif (clipRect != null) {\r\n\t\t\tgl.enable(gl.SCISSOR_TEST);\r\n\t\t\tgl.scissor(Math.floor(clipRect.x), \r\n\t\t\t\t\t\tMath.floor(clipRect.y),\r\n\t\t\t\t\t\tMath.ceil(clipRect.width),\r\n\t\t\t\t\t\tMath.ceil(clipRect.height)\r\n\t\t\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\tif (dirty) {\r\n\t\t\tdirty = false;\r\n\t\t\t\r\n\t\t\trenderSession.activeTextures = 1;\r\n\t\t\tvertexArray.bind();\r\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\t\t}\r\n\t\t\r\n\t\tif(writtenVertexBytes > (vertexArraySize * 0.5)) {\r\n\t\t\tvertexArray.upload(positions);\r\n\t\t} else {\r\n\t\t\tvar view = positions.subarray(0, writtenVertexBytes);\r\n\t\t\tvertexArray.upload(view);\r\n\t\t}\r\n\t\t\r\n\t\tvar nextState:State;\r\n\t\tvar batchSize:Int = 0;\r\n\t\tvar start:Int = 0;\r\n\t\t\r\n\t\tcurrentState.shader = null;\r\n\t\tcurrentState.shaderData = null;\r\n\t\tcurrentState.texture = null;\r\n\t\tcurrentState.textureSmooth = false;\r\n\t\tcurrentState.blendMode = renderSession.blendModeManager.currentBlendMode;\r\n\t\tcurrentState.colorTransform = null;\r\n\t\tcurrentState.skipColorTransformAlpha = false;\r\n\t\t\r\n\t\tfor (i in 0...batchedSprites) {\r\n\t\t\t\r\n\t\t\tnextState = states[i];\r\n\t\t\t\r\n\t\t\tcurrentState.skipColorTransformAlpha = nextState.skipColorTransformAlpha;\r\n\t\t\t\r\n\t\t\tif (!nextState.equals(currentState)) {\r\n\t\t\t\t\r\n\t\t\t\trenderBatch(currentState, batchSize, start);\r\n\t\t\t\t\r\n\t\t\t\tstart = i;\r\n\t\t\t\tbatchSize = 0;\r\n\t\t\t\t\r\n\t\t\t\tcurrentState.shader = nextState.shader;\r\n\t\t\t\tcurrentState.shaderData = nextState.shaderData;\r\n\t\t\t\tcurrentState.texture = nextState.texture;\r\n\t\t\t\tcurrentState.textureSmooth = nextState.textureSmooth;\r\n\t\t\t\tcurrentState.blendMode = nextState.blendMode;\r\n\t\t\t\tcurrentState.skipColorTransform = nextState.skipColorTransform;\r\n\t\t\t\tcurrentState.colorTransform = currentState.skipColorTransform ? null : nextState.colorTransform;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbatchSize++;\r\n\t\t}\r\n\t\t\r\n\t\trenderBatch (currentState, batchSize, start);\r\n\t\tbatchedSprites = 0;\r\n\t\twrittenVertexBytes = 0;\r\n\t\t\r\n\t\tif (clipRect != null) {\r\n\t\t\tgl.disable(gl.SCISSOR_TEST);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tfunction renderBatch(state:State, size:Int, start:Int) {\r\n\t\tif (size == 0 || state.texture == null) return;\r\n\t\t\r\n\t\tvar shader:Shader = state.shader == null ? renderSession.shaderManager.defaultShader : state.shader;\r\n\t\trenderSession.shaderManager.setShader(shader);\r\n\t\t\r\n\t\t// TODO cache this somehow?, don't do each state change?\r\n\t\tshader.bindVertexArray(vertexArray);\r\n\t\t\r\n\t\trenderSession.blendModeManager.setBlendMode(shader.blendMode != null ? shader.blendMode : state.blendMode);\r\n\t\t\r\n\t\tgl.uniformMatrix3fv(shader.getUniformLocation(DefUniform.ProjectionMatrix), false, renderSession.projectionMatrix.toArray(true));\r\n\t\t\r\n\t\tif (state.colorTransform != null) {\r\n\t\t\tgl.uniform1i(shader.getUniformLocation(DefUniform.UseColorTransform), 1);\r\n\t\t\tvar ct = state.colorTransform;\r\n\t\t\tgl.uniform4f(shader.getUniformLocation(DefUniform.ColorMultiplier),\r\n\t\t\t\t\t\tct.redMultiplier, ct.greenMultiplier, ct.blueMultiplier, state.skipColorTransformAlpha ? 1 : ct.alphaMultiplier);\r\n\t\t\tgl.uniform4f(shader.getUniformLocation(DefUniform.ColorOffset),\r\n\t\t\t\t\t\tct.redOffset / 255., ct.greenOffset / 255., ct.blueOffset / 255., ct.alphaOffset / 255.);\r\n\t\t} else {\r\n\t\t\tgl.uniform1i(shader.getUniformLocation(DefUniform.UseColorTransform), 0);\r\n\t\t\tgl.uniform4f(shader.getUniformLocation(DefUniform.ColorMultiplier), 1, 1, 1, 1);\r\n\t\t\tgl.uniform4f(shader.getUniformLocation(DefUniform.ColorOffset), 0, 0, 0, 0);\r\n\t\t}\r\n\t\t\r\n\t\tgl.activeTexture(gl.TEXTURE0 + 0);\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, state.texture);\r\n\t\tgl.uniform1i(shader.getUniformLocation(DefUniform.Sampler), 0);\r\n\t\t\r\n\t\tif ((shader.smooth != null && shader.smooth) || state.textureSmooth) {\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\t\t} else {\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t\t}\r\n\t\t\r\n\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, shader.wrapS);\r\n\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, shader.wrapT);\r\n\t\t\r\n\t\tshader.applyData(state.shaderData, renderSession);\r\n\t\t\r\n\t\tgl.drawElements (gl.TRIANGLES, size * 6, gl.UNSIGNED_SHORT, start * 6 * 2);\r\n\t\t\r\n\t\trenderSession.drawCount++;\r\n\t\t\r\n\t}\r\n\t\r\n\tinline function setState(index:Int, texture:GLTexture, ?smooth:Bool = false, ?blendMode:BlendMode, ?colorTransform:ColorTransform, ?shader:FlashShader, ?skipAlpha:Bool = false) {\r\n\t\t\r\n\t\tvar state:State = states[index];\r\n\t\tif (state == null) {\r\n\t\t\tstate = states[index] = new State();\r\n\t\t}\r\n\t\tstate.texture = texture;\r\n\t\tstate.textureSmooth = smooth;\r\n\t\tstate.blendMode = blendMode;\r\n\t\t\r\n\t\t// colorTransform is default, skipping it\r\n\t\tstate.skipColorTransform = (colorTransform != null && @:privateAccess colorTransform.__isDefault());\r\n\t\t\r\n\t\tif (!state.skipColorTransform) {\r\n\t\t\tstate.colorTransform.redMultiplier   = colorTransform.redMultiplier;\r\n\t\t\tstate.colorTransform.greenMultiplier = colorTransform.greenMultiplier;\r\n\t\t\tstate.colorTransform.blueMultiplier  = colorTransform.blueMultiplier;\r\n\t\t\tstate.colorTransform.alphaMultiplier = colorTransform.alphaMultiplier;\r\n\t\t\tstate.colorTransform.redOffset       = colorTransform.redOffset;\r\n\t\t\tstate.colorTransform.greenOffset     = colorTransform.greenOffset;\r\n\t\t\tstate.colorTransform.blueOffset      = colorTransform.blueOffset;\r\n\t\t\tstate.colorTransform.alphaOffset     = colorTransform.alphaOffset;\r\n\t\t}\r\n\t\t\r\n\t\tstate.skipColorTransformAlpha = skipAlpha;\r\n\t\tif (shader == null) {\r\n\t\t\tstate.shader = null;\r\n\t\t\tstate.shaderData = null;\r\n\t\t} else {\r\n\t\t\tstate.shader = shader.__shader;\r\n\t\t\tstate.shaderData = shader.data;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function setContext(gl:GLRenderContext) {\r\n\t\tthis.gl = gl;\r\n\t\t\r\n\t\tvertexArray.setContext(gl, positions);\r\n\t\t\r\n\t\tindexBuffer = gl.createBuffer();\r\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\r\n\t\t\r\n\t}\r\n\t\r\n\tinline function prepareShader(flashShader:FlashShader, ?bd:BitmapData) {\r\n\t\tif (flashShader != null) {\r\n\t\t\tflashShader.__init(this.gl);\r\n\t\t\tflashShader.__shader.wrapS = flashShader.repeatX;\r\n\t\t\tflashShader.__shader.wrapT = flashShader.repeatY;\r\n\t\t\tflashShader.__shader.smooth = flashShader.smooth;\r\n\t\t\tflashShader.__shader.blendMode = flashShader.blendMode;\r\n\t\t\t\r\n\t\t\tvar objSize = flashShader.data.get(FlashShader.uObjectSize);\r\n\t\t\tvar texSize = flashShader.data.get(FlashShader.uTextureSize);\r\n\t\t\tif (bd != null) {\r\n\t\t\t\tobjSize.value[0] = bd.width;\r\n\t\t\t\tobjSize.value[1] = bd.height;\r\n\t\t\t\tif(bd.__pingPongTexture != null) {\r\n\t\t\t\t\ttexSize.value[0] = @:privateAccess bd.__pingPongTexture.renderTexture.__width;\r\n\t\t\t\t\ttexSize.value[1] = @:privateAccess bd.__pingPongTexture.renderTexture.__height;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttexSize.value[0] = bd.width;\r\n\t\t\t\t\ttexSize.value[1] = bd.height;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tobjSize.value[0] = 0;\r\n\t\t\t\tobjSize.value[1] = 0;\r\n\t\t\t\ttexSize.value[0] = 0;\r\n\t\t\t\ttexSize.value[1] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tinline function getElementsPerVertex() {\r\n\t\tvar r = 0;\r\n\t\t\r\n\t\tfor (a in attributes) {\r\n\t\t\tif(a.enabled) r += a.elements;\r\n\t\t}\r\n\t\t\r\n\t\treturn r;\r\n\t}\r\n\t\r\n}\r\n\r\n@:access(openfl.geom.ColorTransform)\r\nprivate class State {\r\n\tpublic var texture:GLTexture;\r\n\tpublic var textureSmooth:Bool = true;\r\n\tpublic var blendMode:BlendMode;\r\n\tpublic var colorTransform:ColorTransform = new ColorTransform();\r\n\tpublic var skipColorTransform:Bool = false;\r\n\tpublic var skipColorTransformAlpha:Bool = false;\r\n\tpublic var shader:Shader;\r\n\tpublic var shaderData:GLShaderData;\r\n\t\r\n\tpublic function new() { }\r\n\t\r\n\tpublic inline function equals(other:State) {\r\n\t\treturn (\r\n\t\t\t\t// if both shaders are null we are using the DefaultShader, if not, check the id\r\n\t\t\t\t((shader == null && other.shader == null) || (shader != null && other.shader != null && shader.ID == other.shader.ID)) &&\r\n\t\t\t\ttexture == other.texture &&\r\n\t\t\t\ttextureSmooth == other.textureSmooth &&\r\n\t\t\t\tblendMode == other.blendMode &&\r\n\t\t\t\t// colorTransform.alphaMultiplier == object.__worldAlpha so we can skip it\r\n\t\t\t\t((skipColorTransform && other.skipColorTransform) || (!skipColorTransform && !other.skipColorTransform && colorTransform.__equals(other.colorTransform, skipColorTransformAlpha)))\r\n\t\t\t\t\r\n\t\t);\r\n\t}\r\n\t\r\n\tpublic function destroy() {\r\n\t\ttexture = null;\r\n\t\tcolorTransform = null;\r\n\t}\r\n}","package openfl._internal.renderer.opengl.utils;\r\n\r\n\r\nimport lime.graphics.GLRenderContext;\r\nimport lime.utils.Float32Array;\r\nimport openfl._internal.renderer.opengl.shaders2.*;\r\nimport openfl._internal.renderer.opengl.shaders2.FillShader.FillUniform;\r\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.Bitmap;\r\nimport openfl.geom.Matrix;\r\nimport openfl.display.Graphics;\r\nimport openfl.display.DisplayObject;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\n\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.display.BitmapData)\r\n@:access(openfl.geom.Matrix)\r\n\r\nclass StencilManager {\r\n\t\r\n\t\r\n\tpublic var count:Int;\r\n\tpublic var gl:GLRenderContext;\r\n\tpublic var reverse:Bool;\r\n\tpublic var stencilStack:Array<GLGraphicsData>;\r\n\tpublic var stencilMask:Int = 0;\r\n\t\r\n\t\r\n\tpublic function new (gl:GLRenderContext) {\r\n\t\t\r\n\t\tstencilStack = [];\r\n\t\tsetContext (gl);\r\n\t\treverse = true;\r\n\t\tcount = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic inline function prepareGraphics(fill:GLBucketData, renderSession:RenderSession, translationMatrix:Float32Array):Void {\r\n\t\tvar shader = renderSession.shaderManager.fillShader;\r\n\t\t\r\n\t\trenderSession.shaderManager.setShader (shader);\r\n\t\tgl.uniformMatrix3fv (shader.getUniformLocation(FillUniform.TranslationMatrix), false, translationMatrix);\r\n\t\tgl.uniformMatrix3fv (shader.getUniformLocation(FillUniform.ProjectionMatrix), false, renderSession.projectionMatrix.toArray(true));\r\n\t\t\t\r\n\t\tfill.vertexArray.bind();\r\n\t\tshader.bindVertexArray(fill.vertexArray);\r\n\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, fill.indexBuffer);\r\n\t}\r\n\t\r\n\tpublic function pushBucket (bucket:GLBucket, renderSession:RenderSession, translationMatrix:Float32Array, ?isMask:Bool = false):Void {\r\n\t\t\r\n\t\tif(!isMask) {\r\n\t\t\tgl.enable(gl.STENCIL_TEST);\r\n\t\t\tgl.clear(gl.STENCIL_BUFFER_BIT);\r\n\t\t\tgl.stencilMask(0xFF);\r\n\t\t\t\r\n\t\t\tgl.colorMask(false, false, false, false);\r\n\t\t\tgl.stencilFunc(gl.NEVER, 0x01, 0xFF);\r\n\t\t\tgl.stencilOp(gl.INVERT, gl.KEEP, gl.KEEP);\r\n\t\t\r\n\t\t\tgl.clear(gl.STENCIL_BUFFER_BIT);\r\n\t\t}\r\n\t\t\r\n\t\tfor (fill in bucket.fills) {\r\n\t\t\tif (fill.available) continue;\r\n\t\t\tprepareGraphics(fill, renderSession, translationMatrix);\r\n\t\t\tgl.drawElements (fill.drawMode, fill.glIndices.length, gl.UNSIGNED_SHORT, 0);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif(!isMask) {\r\n\t\t\tgl.colorMask(true, true, true, renderSession.renderer.transparent);\r\n\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\r\n\t\t\tgl.stencilFunc(gl.EQUAL, 0xFF, 0xFF);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function popBucket (object:DisplayObject, bucket:GLBucket, renderSession:RenderSession):Void {\r\n\t\tgl.disable(gl.STENCIL_TEST);\r\n\t}\r\n\t\r\n\tpublic function pushMask(object:DisplayObject, renderSession:RenderSession) {\r\n\t\t\r\n\t\tvar maskGraphics:Graphics = object.__maskGraphics;\r\n\t\tif (maskGraphics == null || maskGraphics.__commands.length <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (stencilMask == 0) {\r\n\t\t\tgl.enable(gl.STENCIL_TEST);\r\n\t\t\tgl.clear(gl.STENCIL_BUFFER_BIT);\r\n\t\t}\r\n\t\t\r\n\t\tstencilMask++;\r\n\t\t\r\n\t\tif (maskGraphics.__dirty) {\r\n\t\t\tGraphicsRenderer.updateGraphics(object, maskGraphics, renderSession.gl);\r\n\t\t}\r\n\t\t\r\n\t\tvar func = stencilMask == 1 ? gl.NEVER : gl.EQUAL;\r\n\t\tvar ref = stencilMask;\r\n\t\tvar mask = 0xFF - stencilMask;\r\n\t\t\r\n\t\tgl.stencilMask(0xFF);\r\n\t\tgl.colorMask(false, false, false, false);\r\n\t\tgl.stencilFunc(func, ref, mask);\r\n\t\tgl.stencilOp(gl.REPLACE, gl.KEEP, gl.KEEP);\r\n\t\t\r\n\t\t// for each bucket in the object, draw it to the stencil buffer\r\n\t\tvar glStack = maskGraphics.__glStack[GLRenderer.glContextId];\r\n\t\tvar bucket:GLBucket;\r\n\t\tvar translationMatrix:Matrix = object.__worldTransform;\r\n\t\tfor (i in 0...glStack.buckets.length) {\r\n\t\t\tbucket = glStack.buckets[i];\r\n\t\t\t\r\n\t\t\tif (bucket.overrideMatrix != null) {\r\n\t\t\t\ttranslationMatrix = bucket.overrideMatrix;\r\n\t\t\t} else {\r\n\t\t\t\ttranslationMatrix = object.__worldTransform;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tswitch(bucket.mode) {\r\n\t\t\t\tcase Fill, PatternFill:\r\n\t\t\t\t\tpushBucket(bucket, renderSession, translationMatrix.toArray(true), true);\r\n\t\t\t\tcase _:\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tgl.colorMask(true, true, true, renderSession.renderer.transparent);\r\n\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\r\n\t\tgl.stencilFunc(gl.EQUAL, stencilMask, 0xFF);\r\n\t}\r\n\t\r\n\tpublic function popMask(object:DisplayObject, renderSession:RenderSession) {\r\n\t\t\r\n\t\t//var maskGraphics:Graphics = object.__maskGraphics;\r\n\t\t//if (maskGraphics == null || maskGraphics.__commands.length <= 0) {\r\n\t\t\t//return;\r\n\t\t//}\r\n\t\t\r\n\t\tstencilMask--;\r\n\t\t\r\n\t\tif (stencilMask <= 0) {\r\n\t\t\tgl.disable (gl.STENCIL_TEST);\r\n\t\t\tstencilMask = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function bindGraphics (object:DisplayObject, glData:GLGraphicsData, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t/*var graphics = object.__graphics;\r\n\t\t\r\n\t\tvar projection = renderSession.projection;\r\n\t\tvar offset = renderSession.offset;\r\n\r\n\t\tif (glData.mode == RenderMode.STENCIL) {\r\n\t\t\t\r\n\t\t\tvar shader = renderSession.shaderManager.complexPrimitiveShader;\r\n\t\t\trenderSession.shaderManager.setShader (shader);\r\n\t\t\t\r\n\t\t\tgl.uniformMatrix3fv (shader.translationMatrix, false, object.__worldTransform.toArray (true));\r\n\t\t\t\r\n\t\t\tgl.uniform2f (shader.projectionVector, projection.x, -projection.y);\r\n\t\t\tgl.uniform2f (shader.offsetVector, -offset.x, -offset.y);\r\n\t\t\t\r\n\t\t\t// TODO tintColor\r\n\t\t\tgl.uniform3fv (shader.tintColor, new Float32Array (GraphicsRenderer.hex2rgb (0xFFFFFF)));\r\n\t\t\tgl.uniform3fv (shader.color, new Float32Array (glData.tint));\r\n\t\t\t\r\n\t\t\tgl.uniform1f (shader.alpha, object.__worldAlpha * glData.alpha);\r\n\t\t\t\r\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, glData.dataBuffer);\r\n\t\t\t\r\n\t\t\tgl.vertexAttribPointer (shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 2, 0);\r\n\t\t\t\r\n\t\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, glData.indexBuffer);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar shader = renderSession.shaderManager.primitiveShader;\r\n\t\t\trenderSession.shaderManager.setShader (shader);\r\n\t\t\t\r\n\t\t\tgl.uniformMatrix3fv (shader.translationMatrix, false, object.__worldTransform.toArray (true));\r\n\t\t\t\r\n\t\t\tgl.uniform2f (shader.projectionVector, projection.x, -projection.y);\r\n\t\t\tgl.uniform2f (shader.offsetVector, -offset.x, -offset.y);\r\n\t\t\t\r\n\t\t\t// TODO tintColor\r\n\t\t\tgl.uniform3fv (shader.tintColor, new Float32Array (GraphicsRenderer.hex2rgb (0xFFFFFF)));\r\n\t\t\t\r\n\t\t\tgl.uniform1f (shader.alpha, object.__worldAlpha);\r\n\t\t\t\r\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, glData.dataBuffer);\r\n\t\t\t\r\n\t\t\tgl.vertexAttribPointer (shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 6, 0);\r\n\t\t\tgl.vertexAttribPointer (shader.colorAttribute, 4, gl.FLOAT, false,4 * 6, 2 * 4);\r\n\t\t\t\r\n\t\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, glData.indexBuffer);\r\n\t\t\t\r\n\t\t}*/\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function destroy ():Void {\r\n\t\t\r\n\t\tstencilStack = null;\r\n\t\tgl = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function popStencil (object:DisplayObject, glData:GLGraphicsData, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tstencilStack.pop ();\r\n\t\t\r\n\t\tcount--;\r\n\t\t\r\n\t\tif (stencilStack.length == 0) {\r\n\t\t\t\t\r\n\t\t\tgl.disable (gl.STENCIL_TEST);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar level = count;\r\n\t\t\tbindGraphics (object, glData, renderSession);\r\n\t\t\t\r\n\t\t\tgl.colorMask (false, false, false, false);\r\n\t\t\t\r\n\t\t\tif (glData.mode == RenderMode.STENCIL) {\r\n\t\t\t\t\r\n\t\t\t\treverse = !reverse;\r\n\t\t\t\t\r\n\t\t\t\tif (reverse) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - (level + 1), 0xFF);\r\n\t\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.INCR);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, level + 1, 0xFF);\r\n\t\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.DECR);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tgl.drawElements (gl.TRIANGLE_FAN, 4, gl.UNSIGNED_SHORT, (glData.indices.length - 4) * 2);\r\n\t\t\t\t\r\n\t\t\t\tgl.stencilFunc (gl.ALWAYS, 0, 0xFF);\r\n\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.INVERT);\r\n\t\t\t\t\r\n\t\t\t\tgl.drawElements (gl.TRIANGLE_FAN, glData.indices.length - 4, gl.UNSIGNED_SHORT, 0);\r\n\t\t\t\t\r\n\t\t\t\tif (!reverse) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - (level), 0xFF);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, level, 0xFF);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tif (!reverse) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - (level + 1), 0xFF);\r\n\t\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.INCR);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, level + 1, 0xFF);\r\n\t\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.DECR);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tgl.drawElements (gl.TRIANGLE_STRIP, glData.indices.length, gl.UNSIGNED_SHORT, 0);\r\n\t\t\t\t\r\n\t\t\t\tif (!reverse) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - (level), 0xFF);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, level, 0xFF);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgl.colorMask (true, true, true, true);\r\n\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.KEEP);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function pushStencil (object:DisplayObject, glData:GLGraphicsData, renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tbindGraphics (object, glData, renderSession);\r\n\r\n\t\tif (stencilStack.length == 0) {\r\n\t\t\t\r\n\t\t\tgl.enable (gl.STENCIL_TEST);\r\n\t\t\tgl.clear (gl.STENCIL_BUFFER_BIT);\r\n\t\t\treverse = true;\r\n\t\t\tcount = 0;\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tstencilStack.push (glData);\r\n\t\t\r\n\t\tvar level = count;\r\n\t\t\r\n\t\t//gl.colorMask (true, true, true, true);\r\n\t\tgl.colorMask (false, false, false, false);\r\n\t\t\r\n\t\tgl.stencilFunc (gl.ALWAYS, 0, 0xFF);\r\n\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.INVERT);\r\n\t\t\r\n\t\tif (glData.mode == RenderMode.STENCIL) {\r\n\t\t\t\r\n\t\t\tgl.drawElements (gl.TRIANGLE_FAN, glData.indices.length - 4, gl.UNSIGNED_SHORT, 0);\r\n\t\t\t\r\n\t\t\tif (reverse) {\r\n\t\t\t\t\r\n\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - level, 0xFF);\r\n\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.DECR);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tgl.stencilFunc (gl.EQUAL, level, 0xFF);\r\n\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.INCR);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgl.drawElements (gl.TRIANGLE_FAN, 4, gl.UNSIGNED_SHORT, (glData.indices.length - 4) * 2);\r\n\t\t\t\r\n\t\t\tif (reverse) {\r\n\t\t\t\t\r\n\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - (level + 1), 0xFF);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tgl.stencilFunc (gl.EQUAL, level + 1, 0xFF);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treverse = !reverse;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\t\r\n\t\t\tif (!reverse) {\r\n\t\t\t\t\r\n\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - level, 0xFF);\r\n\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.DECR);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tgl.stencilFunc (gl.EQUAL, level, 0xFF);\r\n\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.INCR);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgl.drawElements (gl.TRIANGLE_STRIP, glData.indices.length, gl.UNSIGNED_SHORT, 0);\r\n\t\t\t\r\n\t\t\tif (!reverse) {\r\n\t\t\t\t\r\n\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - (level + 1), 0xFF);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tgl.stencilFunc (gl.EQUAL, level + 1, 0xFF);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tgl.colorMask (true, true, true, true);\r\n\t\t//gl.colorMask (false, false, false, false);\r\n\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.KEEP);\r\n\t\t\r\n\t\tcount++;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setContext (gl:GLRenderContext):Void {\r\n\t\t\r\n\t\tthis.gl = gl;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.renderer.opengl.utils;\r\n\r\nimport lime.graphics.GLRenderContext;\r\nimport lime.utils.Float32Array;\r\nimport openfl.gl.GLBuffer;\r\nimport openfl.utils.ArrayBuffer;\r\nimport openfl.utils.ArrayBufferView;\r\n\r\nclass VertexArray {\r\n\r\n\tpublic var gl:GLRenderContext;\r\n\tpublic var glBuffer:GLBuffer;\r\n\tpublic var attributes:Array<VertexAttribute> = [];\r\n\tpublic var buffer:ArrayBuffer;\r\n\tpublic var size:Int = 0;\r\n\tpublic var stride(get, never):Int;\r\n\r\n\tpublic var isStatic:Bool = false;\r\n\t\r\n\tpublic function new(attributes:Array<VertexAttribute>, ?size:Int = 0, isStatic:Bool = false) {\r\n\t\tthis.size = size;\r\n\t\tthis.attributes = attributes;\r\n\t\t\r\n\t\tif(size > 0) {\r\n\t\t\tbuffer = new ArrayBuffer(size);\r\n\t\t}\r\n\t\t\r\n\t\tthis.isStatic = isStatic;\r\n\t}\r\n\t\r\n\tpublic inline function bind() {\r\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, glBuffer);\r\n\t}\r\n\t\r\n\tpublic inline function unbind() {\r\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\t}\r\n\t\r\n\tpublic function upload(view:ArrayBufferView) {\r\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\r\n\t}\r\n\t\r\n\tpublic function destroy() {\r\n\t\tgl.deleteBuffer(glBuffer);\r\n\t\tbuffer = null;\r\n\t}\r\n\t\r\n\tpublic function setContext(gl:GLRenderContext, view:ArrayBufferView) {\r\n\t\tthis.gl = gl;\r\n\t\t\r\n\t\tglBuffer = gl.createBuffer();\r\n\t\t\r\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, glBuffer);\r\n\t\t// TODO fix this, it should accept an ArrayBuffer\r\n\t\tgl.bufferData(gl.ARRAY_BUFFER, view, isStatic ? gl.STATIC_DRAW : gl.DYNAMIC_DRAW);\r\n\t}\r\n\t\r\n\tprivate function get_stride() {\r\n\t\tvar s = 0;\r\n\t\tfor (a in attributes) {\r\n\t\t\tif (a.enabled) s += a.elements * 4;\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n}","package openfl._internal.text;\r\n\r\n\r\nimport haxe.Timer;\r\nimport haxe.Utf8;\r\nimport lime.graphics.cairo.CairoFontFace;\r\nimport lime.graphics.opengl.GLTexture;\r\nimport lime.system.System;\r\nimport lime.text.TextLayout;\r\nimport openfl.display.Tilesheet;\r\nimport openfl.events.Event;\r\nimport openfl.events.FocusEvent;\r\nimport openfl.events.MouseEvent;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.text.AntiAliasType;\r\nimport openfl.text.Font;\r\nimport openfl.text.GridFitType;\r\nimport openfl.text.TextField;\r\nimport openfl.text.TextFieldAutoSize;\r\nimport openfl.text.TextFieldType;\r\nimport openfl.text.TextFormat;\r\nimport openfl.text.TextFormatAlign;\r\n\r\n#if (js && html5)\r\nimport js.html.CanvasElement;\r\nimport js.html.CanvasRenderingContext2D;\r\nimport js.html.CSSStyleDeclaration;\r\nimport js.html.InputElement;\r\nimport js.html.KeyboardEvent in HTMLKeyboardEvent;\r\nimport js.Browser;\r\n#end\r\n\r\n#if sys\r\nimport haxe.io.Path;\r\n#end\r\n\r\n@:access(openfl.text.Font)\r\n@:access(openfl.text.TextField)\r\n@:access(openfl.text.TextFormat)\r\n\r\n\r\nclass TextEngine {\r\n\t\r\n\t\r\n\tprivate static inline var UTF8_TAB = 9;\r\n\tprivate static inline var UTF8_ENDLINE = 10;\r\n\tprivate static inline var UTF8_SPACE = 32;\r\n\tprivate static inline var UTF8_HYPHEN = 0x2D;\r\n\t\r\n\tprivate static var __defaultFonts = new Map<String, Font> ();\r\n\t\r\n\t#if (js && html5)\r\n\tprivate static var __canvas:CanvasElement;\r\n\tprivate static var __context:CanvasRenderingContext2D;\r\n\t#end\r\n\t\r\n\tpublic var antiAliasType:AntiAliasType;\r\n\tpublic var autoSize:TextFieldAutoSize;\r\n\tpublic var background:Bool;\r\n\tpublic var backgroundColor:Int;\r\n\tpublic var border:Bool;\r\n\tpublic var borderColor:Int;\r\n\tpublic var bottomScrollV (default, null):Int;\r\n\tpublic var bounds:Rectangle;\r\n\tpublic var caretIndex:Int;\r\n\tpublic var displayAsPassword:Bool;\r\n\tpublic var embedFonts:Bool;\r\n\tpublic var gridFitType:GridFitType;\r\n\tpublic var height:Float;\r\n\tpublic var layoutGroups:Array<TextLayoutGroup>;\r\n\tpublic var lineAscents:Array<Float>;\r\n\tpublic var lineBreaks:Array<Int>;\r\n\tpublic var lineDescents:Array<Float>;\r\n\tpublic var lineLeadings:Array<Float>;\r\n\tpublic var lineHeights:Array<Float>;\r\n\tpublic var lineWidths:Array<Float>;\r\n\tpublic var maxChars:Int;\r\n\tpublic var maxScrollH (default, null):Int;\r\n\tpublic var maxScrollV (default, null):Int;\r\n\tpublic var multiline:Bool;\r\n\tpublic var numLines (default, null):Int;\r\n\tpublic var restrict:String;\r\n\tpublic var scrollH:Int;\r\n\tpublic var scrollV:Int;\r\n\tpublic var selectable:Bool;\r\n\tpublic var sharpness:Float;\r\n\tpublic var text:String;\r\n\tpublic var textHeight:Float;\r\n\tpublic var textFormatRanges:Array<TextFormatRange>;\r\n\tpublic var textWidth:Float;\r\n\tpublic var type:TextFieldType;\r\n\tpublic var width:Float;\r\n\tpublic var wordWrap:Bool;\r\n\t\r\n\tprivate var textField:TextField;\r\n\t\r\n\t@:noCompletion private var __cursorPosition:Int;\r\n\t@:noCompletion private var __cursorTimer:Timer;\r\n\t@:noCompletion private var __hasFocus:Bool;\r\n\t@:noCompletion private var __isKeyDown:Bool;\r\n\t@:noCompletion private var __measuredHeight:Int;\r\n\t@:noCompletion private var __measuredWidth:Int;\r\n\t@:noCompletion private var __selectionStart:Int;\r\n\t@:noCompletion private var __showCursor:Bool;\r\n\t@:noCompletion private var __textFormat:TextFormat;\r\n\t@:noCompletion private var __textLayout:TextLayout;\r\n\t@:noCompletion private var __texture:GLTexture;\r\n\t@:noCompletion private var __tileData:Map<Tilesheet, Array<Float>>;\r\n\t@:noCompletion private var __tileDataLength:Map<Tilesheet, Int>;\r\n\t@:noCompletion private var __tilesheets:Map<Tilesheet, Bool>;\r\n\t\r\n\t@:noCompletion @:dox(hide) public var __cairoFont:CairoFontFace;\r\n\t@:noCompletion @:dox(hide) public var __font:Font;\r\n\t\r\n\t#if (js && html5)\r\n\tprivate var __hiddenInput:InputElement;\r\n\t#end\r\n\t\r\n\t\r\n\tpublic function new (textField:TextField) {\r\n\t\t\r\n\t\tthis.textField = textField;\r\n\t\t\r\n\t\twidth = 100;\r\n\t\theight = 100;\r\n\t\ttext = \"\";\r\n\t\t\r\n\t\tbounds = new Rectangle (0, 0, 0, 0);\r\n\t\t\r\n\t\ttype = TextFieldType.DYNAMIC;\r\n\t\tautoSize = TextFieldAutoSize.NONE;\r\n\t\tdisplayAsPassword = false;\r\n\t\tembedFonts = false;\r\n\t\tselectable = true;\r\n\t\tborderColor = 0x000000;\r\n\t\tborder = false;\r\n\t\tbackgroundColor = 0xffffff;\r\n\t\tbackground = false;\r\n\t\tgridFitType = GridFitType.PIXEL;\r\n\t\tmaxChars = 0;\r\n\t\tmultiline = false;\r\n\t\tsharpness = 0;\r\n\t\tscrollH = 0;\r\n\t\tscrollV = 1;\r\n\t\twordWrap = false;\r\n\t\t\r\n\t\tlineAscents = new Array ();\r\n\t\tlineBreaks = new Array ();\r\n\t\tlineDescents = new Array ();\r\n\t\tlineLeadings = new Array ();\r\n\t\tlineHeights = new Array ();\r\n\t\tlineWidths = new Array ();\r\n\t\tlayoutGroups = new Array ();\r\n\t\ttextFormatRanges = new Array ();\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t__canvas = cast Browser.document.createElement (\"canvas\");\r\n\t\t__context = __canvas.getContext (\"2d\");\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function findFont (name:String):Font {\r\n\t\t\r\n\t\t#if (cpp || neko || nodejs)\r\n\t\t\r\n\t\tfor (registeredFont in Font.__registeredFonts) {\r\n\t\t\t\r\n\t\t\tif (registeredFont == null) continue;\r\n\t\t\t\r\n\t\t\tif (registeredFont.fontName == name || (registeredFont.__fontPath != null && (registeredFont.__fontPath == name || registeredFont.__fontPathWithoutDirectory == name))) {\r\n\t\t\t\t\r\n\t\t\t\treturn registeredFont;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar font = Font.fromFile (name);\r\n\t\t\r\n\t\tif (font != null) {\r\n\t\t\t\r\n\t\t\tFont.__registeredFonts.push (font);\r\n\t\t\treturn font;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function getBounds ():Void {\r\n\t\t\r\n\t\tvar padding = border ? 1 : 0;\r\n\t\t\r\n\t\tbounds.width = width + padding;\r\n\t\tbounds.height = height + padding;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function getFont (format:TextFormat):String {\r\n\t\t\r\n\t\tvar font = format.italic ? \"italic \" : \"normal \";\r\n\t\tfont += \"normal \";\r\n\t\tfont += format.bold ? \"bold \" : \"normal \";\r\n\t\tfont += format.size + \"px\";\r\n\t\tfont += \"/\" + (format.size + format.leading + 6) + \"px \";\r\n\t\t\r\n\t\tfont += \"\" + switch (format.font) {\r\n\t\t\t\r\n\t\t\tcase \"_sans\": \"sans-serif\";\r\n\t\t\tcase \"_serif\": \"serif\";\r\n\t\t\tcase \"_typewriter\": \"monospace\";\r\n\t\t\tdefault: \"'\" + format.font + \"'\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn font;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function getFontInstance (format:TextFormat):Font {\r\n\t\t\r\n\t\t#if (cpp || neko || nodejs)\r\n\t\t\r\n\t\tvar instance = null;\r\n\t\tvar fontList = null;\r\n\t\t\r\n\t\tif (format != null && format.font != null) {\r\n\t\t\t\r\n\t\t\tif (__defaultFonts.exists (format.font)) {\r\n\t\t\t\t\r\n\t\t\t\treturn __defaultFonts.get (format.font);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinstance = findFont (format.font);\r\n\t\t\tif (instance != null) return instance;\r\n\t\t\t\r\n\t\t\tvar systemFontDirectory = System.fontsDirectory;\r\n\t\t\t\r\n\t\t\tswitch (format.font) {\r\n\t\t\t\t\r\n\t\t\t\tcase \"_sans\":\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if windows\r\n\t\t\t\t\tif (format.bold) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (format.italic) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/arialbi.ttf\" ];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/arialbd.ttf\" ];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (format.italic) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/ariali.ttf\" ];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/arial.ttf\" ];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t#elseif (mac || ios || tvos)\r\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/Arial Black.ttf\", systemFontDirectory + \"/Arial.ttf\", systemFontDirectory + \"/Helvetica.ttf\", systemFontDirectory + \"/Cache/Arial Black.ttf\", systemFontDirectory + \"/Cache/Arial.ttf\", systemFontDirectory + \"/Cache/Helvetica.ttf\", systemFontDirectory + \"/Core/Arial Black.ttf\", systemFontDirectory + \"/Core/Arial.ttf\", systemFontDirectory + \"/Core/Helvetica.ttf\", systemFontDirectory + \"/CoreAddition/Arial Black.ttf\", systemFontDirectory + \"/CoreAddition/Arial.ttf\", systemFontDirectory + \"/CoreAddition/Helvetica.ttf\" ];\r\n\t\t\t\t\t#elseif linux\r\n\t\t\t\t\tfontList = [ new sys.io.Process('fc-match', ['sans', '-f%{file}']).stdout.readLine() ];\r\n\t\t\t\t\t#elseif android\r\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/DroidSans.ttf\" ];\r\n\t\t\t\t\t#elseif blackberry\r\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/arial.ttf\" ];\r\n\t\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\tcase \"_serif\":\r\n\t\t\t\t\t\r\n\t\t\t\t\t// pass through\r\n\t\t\t\t\r\n\t\t\t\tcase \"_typewriter\":\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if windows\r\n\t\t\t\t\tif (format.bold) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (format.italic) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/courbi.ttf\" ];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/courbd.ttf\" ];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (format.italic) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/couri.ttf\" ];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/cour.ttf\" ];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t#elseif (mac || ios || tvos)\r\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/Courier New.ttf\", systemFontDirectory + \"/Courier.ttf\", systemFontDirectory + \"/Cache/Courier New.ttf\", systemFontDirectory + \"/Cache/Courier.ttf\", systemFontDirectory + \"/Core/Courier New.ttf\", systemFontDirectory + \"/Core/Courier.ttf\", systemFontDirectory + \"/CoreAddition/Courier New.ttf\", systemFontDirectory + \"/CoreAddition/Courier.ttf\" ];\r\n\t\t\t\t\t#elseif linux\r\n\t\t\t\t\tfontList = [ new sys.io.Process('fc-match', ['mono', '-f%{file}']).stdout.readLine() ];\r\n\t\t\t\t\t#elseif android\r\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/DroidSansMono.ttf\" ];\r\n\t\t\t\t\t#elseif blackberry\r\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/cour.ttf\" ];\r\n\t\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t\r\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/\" + format.font ];\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#if lime_console\r\n\t\t\t\t\r\n\t\t\t\t// TODO(james4k): until we figure out our story for the above switch\r\n\t\t\t\t// statement, always load arial unless a file is specified.\r\n\t\t\t\tif (format == null\r\n\t\t\t\t\t|| StringTools.startsWith (format.font,  \"_\")\r\n\t\t\t\t\t|| format.font.indexOf(\".\") == -1\r\n\t\t\t\t) {\r\n\t\t\t\t\tfontList = [ \"arial.ttf\" ];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tif (fontList != null) {\r\n\t\t\t\t\r\n\t\t\t\tfor (font in fontList) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tinstance = findFont (font);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (instance != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__defaultFonts.set (format.font, instance);\r\n\t\t\t\t\t\treturn instance;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinstance = findFont (\"_serif\");\r\n\t\t\tif (instance != null) return instance;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar systemFontDirectory = System.fontsDirectory;\r\n\t\t\r\n\t\t#if windows\r\n\t\tif (format.bold) {\r\n\t\t\t\r\n\t\t\tif (format.italic) {\r\n\t\t\t\t\r\n\t\t\t\tfontList = [ systemFontDirectory + \"/timesbi.ttf\" ];\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tfontList = [ systemFontDirectory + \"/timesb.ttf\" ];\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tif (format.italic) {\r\n\t\t\t\t\r\n\t\t\t\tfontList = [ systemFontDirectory + \"/timesi.ttf\" ];\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tfontList = [ systemFontDirectory + \"/times.ttf\" ];\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t#elseif (mac || ios || tvos)\r\n\t\tfontList = [ systemFontDirectory + \"/Georgia.ttf\", systemFontDirectory + \"/Times.ttf\", systemFontDirectory + \"/Times New Roman.ttf\", systemFontDirectory + \"/Cache/Georgia.ttf\", systemFontDirectory + \"/Cache/Times.ttf\", systemFontDirectory + \"/Cache/Times New Roman.ttf\", systemFontDirectory + \"/Core/Georgia.ttf\", systemFontDirectory + \"/Core/Times.ttf\", systemFontDirectory + \"/Core/Times New Roman.ttf\", systemFontDirectory + \"/CoreAddition/Georgia.ttf\", systemFontDirectory + \"/CoreAddition/Times.ttf\", systemFontDirectory + \"/CoreAddition/Times New Roman.ttf\" ];\r\n\t\t#elseif linux\r\n\t\tfontList = [ new sys.io.Process('fc-match', ['serif', '-f%{file}']).stdout.readLine() ];\r\n\t\t#elseif android\r\n\t\tfontList = [ systemFontDirectory + \"/DroidSerif-Regular.ttf\", systemFontDirectory + \"/NotoSerif-Regular.ttf\" ];\r\n\t\t#elseif blackberry\r\n\t\tfontList = [ systemFontDirectory + \"/georgia.ttf\" ];\r\n\t\t#else\r\n\t\tfontList = [];\r\n\t\t#end\r\n\t\t\r\n\t\tfor (font in fontList) {\r\n\t\t\t\r\n\t\t\tinstance = findFont (font);\r\n\t\t\t\r\n\t\t\tif (instance != null) {\r\n\t\t\t\t\r\n\t\t\t\t__defaultFonts.set (format.font, instance);\r\n\t\t\t\treturn instance;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__defaultFonts.set (format.font, null);\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getLine (index:Int):String {\r\n\t\t\r\n\t\tif (index < 0 || index > lineBreaks.length + 1) {\r\n\t\t\t\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (lineBreaks.length == 0) {\r\n\t\t\t\r\n\t\t\treturn text;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn text.substring (index > 0 ? lineBreaks[index - 1] : 0, lineBreaks[index]);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function getLineMeasurements ():Void {\r\n\t\t\r\n\t\tlineAscents.splice (0, lineAscents.length);\r\n\t\tlineDescents.splice (0, lineDescents.length);\r\n\t\tlineLeadings.splice (0, lineLeadings.length);\r\n\t\tlineHeights.splice (0, lineHeights.length);\r\n\t\tlineWidths.splice (0, lineWidths.length);\r\n\t\t\r\n\t\tvar currentLineAscent = 0.0;\r\n\t\tvar currentLineDescent = 0.0;\r\n\t\tvar currentLineLeading:Null<Int> = null;\r\n\t\tvar currentLineHeight = 0.0;\r\n\t\tvar currentLineWidth = 0.0;\r\n\t\t\r\n\t\ttextWidth = 0;\r\n\t\ttextHeight = 0;\r\n\t\tnumLines = 1;\r\n\t\tbottomScrollV = 0;\r\n\t\tmaxScrollH = 0;\r\n\t\t\r\n\t\tfor (group in layoutGroups) {\r\n\t\t\t\r\n\t\t\twhile (group.lineIndex > numLines - 1) {\r\n\t\t\t\t\r\n\t\t\t\tlineAscents.push (currentLineAscent);\r\n\t\t\t\tlineDescents.push (currentLineDescent);\r\n\t\t\t\tlineLeadings.push (currentLineLeading != null ? currentLineLeading : 0);\r\n\t\t\t\tlineHeights.push (currentLineHeight);\r\n\t\t\t\tlineWidths.push (currentLineWidth);\r\n\t\t\t\t\r\n\t\t\t\tcurrentLineAscent = 0;\r\n\t\t\t\tcurrentLineDescent = 0;\r\n\t\t\t\tcurrentLineLeading = null;\r\n\t\t\t\tcurrentLineHeight = 0;\r\n\t\t\t\tcurrentLineWidth = 0;\r\n\t\t\t\t\r\n\t\t\t\tnumLines++;\r\n\t\t\t\t\r\n\t\t\t\tif (textHeight <= height - 2) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tbottomScrollV++;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcurrentLineAscent = Math.max (currentLineAscent, group.ascent);\r\n\t\t\tcurrentLineDescent = Math.max (currentLineDescent, group.descent);\r\n\t\t\t\r\n\t\t\tif (currentLineLeading == null) {\r\n\t\t\t\t\r\n\t\t\t\tcurrentLineLeading = group.leading;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tcurrentLineLeading = Std.int (Math.max (currentLineLeading, group.leading));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcurrentLineHeight = Math.max (currentLineHeight, group.height);\r\n\t\t\tcurrentLineWidth = group.offsetX - 2 + group.width;\r\n\t\t\t\r\n\t\t\tif (currentLineWidth > textWidth) {\r\n\t\t\t\t\r\n\t\t\t\ttextWidth = currentLineWidth;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttextHeight = group.offsetY - 2 + group.ascent + group.descent;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tlineAscents.push (currentLineAscent);\r\n\t\tlineDescents.push (currentLineDescent);\r\n\t\tlineLeadings.push (currentLineLeading != null ? currentLineLeading : 0);\r\n\t\tlineHeights.push (currentLineHeight);\r\n\t\tlineWidths.push (currentLineWidth);\r\n\t\t\r\n\t\tif (numLines == 1) {\r\n\t\t\t\r\n\t\t\tbottomScrollV = 1;\r\n\t\t\t\r\n\t\t\tif (currentLineLeading > 0) {\r\n\t\t\t\t\r\n\t\t\t\ttextHeight += currentLineLeading;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else if (textHeight <= height - 2) {\r\n\t\t\t\r\n\t\t\tbottomScrollV++;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (textWidth > width - 4) {\r\n\t\t\t\r\n\t\t\tmaxScrollH = Std.int (textWidth - width + 4);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tmaxScrollH = 0;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tmaxScrollV = numLines - bottomScrollV + 1;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function getLayoutGroups ():Void {\r\n\t\t\r\n\t\tlayoutGroups.splice (0, layoutGroups.length);\r\n\t\t\r\n\t\tvar rangeIndex = -1;\r\n\t\tvar formatRange:TextFormatRange = null;\r\n\t\tvar font = null;\r\n\t\t\r\n\t\tvar currentFormat = TextField.__defaultTextFormat.clone ();\r\n\t\t\r\n\t\tvar leading = 0;\r\n\t\tvar ascent = 0.0;\r\n\t\tvar descent = 0.0;\r\n\t\t\r\n\t\tvar layoutGroup, advances;\r\n\t\tvar widthValue, heightValue = 0.0;\r\n\t\t\r\n\t\tvar spaceWidth = 0.0;\r\n\t\tvar previousSpaceIndex = 0;\r\n\t\tvar spaceIndex = text.indexOf (\" \");\r\n\t\tvar breakIndex = text.indexOf (\"\\n\");\r\n\t\t\r\n\t\tvar marginRight = 0.0;\r\n\t\tvar offsetX = 2.0;\r\n\t\tvar offsetY = 2.0;\r\n\t\tvar textIndex = 0;\r\n\t\tvar lineIndex = 0;\r\n\t\tvar lineFormat = null;\r\n\t\t\r\n\t\tinline function getAdvances (text:String, startIndex:Int, endIndex:Int):Array<Float> {\r\n\t\t\t\r\n\t\t\t// TODO: optimize\r\n\t\t\t\r\n\t\t\tvar advances = [];\r\n\t\t\t\r\n\t\t\t#if (js && html5)\r\n\t\t\t\r\n\t\t\tfor (i in startIndex...endIndex) {\r\n\t\t\t\t\r\n\t\t\t\tadvances.push (__context.measureText (text.charAt (i)).width);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#else\r\n\t\t\t\r\n\t\t\tif (__textLayout == null) {\r\n\t\t\t\t\r\n\t\t\t\t__textLayout = new TextLayout ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar width = 0.0;\r\n\t\t\t\r\n\t\t\t__textLayout.text = null;\r\n\t\t\t__textLayout.font = font;\r\n\t\t\t\r\n\t\t\tif (formatRange.format.size != null) {\r\n\t\t\t\t\r\n\t\t\t\t__textLayout.size = formatRange.format.size;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__textLayout.text = text.substring (startIndex, endIndex);\r\n\t\t\t\r\n\t\t\tfor (position in __textLayout.positions) {\r\n\t\t\t\t\r\n\t\t\t\tadvances.push (position.advance.x);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\treturn advances;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tinline function getAdvancesWidth (advances:Array<Float>):Float {\r\n\t\t\t\r\n\t\t\tvar width = 0.0;\r\n\t\t\t\r\n\t\t\tfor (advance in advances) {\r\n\t\t\t\t\r\n\t\t\t\twidth += advance;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn width;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tinline function getTextWidth (text:String):Float {\r\n\t\t\t\r\n\t\t\t#if (js && html5)\r\n\t\t\t\r\n\t\t\treturn __context.measureText (text).width;\r\n\t\t\t\r\n\t\t\t#else\r\n\t\t\t\r\n\t\t\tif (__textLayout == null) {\r\n\t\t\t\t\r\n\t\t\t\t__textLayout = new TextLayout ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar width = 0.0;\r\n\t\t\t\r\n\t\t\t__textLayout.text = null;\r\n\t\t\t__textLayout.font = font;\r\n\t\t\t\r\n\t\t\tif (formatRange.format.size != null) {\r\n\t\t\t\t\r\n\t\t\t\t__textLayout.size = formatRange.format.size;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__textLayout.text = text;\r\n\t\t\t\r\n\t\t\tfor (position in __textLayout.positions) {\r\n\t\t\t\t\r\n\t\t\t\twidth += position.advance.x;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn width;\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tinline function nextFormatRange ():Void {\r\n\t\t\t\r\n\t\t\tif (rangeIndex < textFormatRanges.length - 1) {\r\n\t\t\t\t\r\n\t\t\t\trangeIndex++;\r\n\t\t\t\tformatRange = textFormatRanges[rangeIndex];\r\n\t\t\t\tcurrentFormat.__merge (formatRange.format);\r\n\t\t\t\t\r\n\t\t\t\t#if (js && html5)\r\n\t\t\t\t\r\n\t\t\t\t__context.font = getFont (currentFormat);\r\n\t\t\t\t\r\n\t\t\t\tascent = currentFormat.size;\r\n\t\t\t\tdescent = currentFormat.size * 0.185;\r\n\t\t\t\tleading = currentFormat.leading;\r\n\t\t\t\t\r\n\t\t\t\theightValue = ascent + descent + leading;\r\n\t\t\t\t\r\n\t\t\t\t#elseif (cpp || neko || nodejs)\r\n\t\t\t\t\r\n\t\t\t\tfont = getFontInstance (currentFormat);\r\n\t\t\t\t\r\n\t\t\t\tif (font != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tascent = (font.ascender / font.unitsPerEM) * currentFormat.size;\r\n\t\t\t\t\tdescent = Math.abs ((font.descender / font.unitsPerEM) * currentFormat.size);\r\n\t\t\t\t\tleading = currentFormat.leading;\r\n\t\t\t\t\t\r\n\t\t\t\t\theightValue = ascent + descent + leading;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tascent = currentFormat.size;\r\n\t\t\t\t\tdescent = currentFormat.size * 0.185;\r\n\t\t\t\t\tleading = currentFormat.leading;\r\n\t\t\t\t\t\r\n\t\t\t\t\theightValue = ascent + descent + leading;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\tif (spaceIndex > -1) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tspaceWidth = getTextWidth (\" \");\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tnextFormatRange ();\r\n\t\t\r\n\t\tlineFormat = formatRange.format;\r\n\t\tvar wrap;\r\n\t\t\r\n\t\twhile (textIndex < text.length) {\r\n\t\t\t\r\n\t\t\tif ((breakIndex > -1) && (spaceIndex == -1 || breakIndex < spaceIndex) && (formatRange.end >= breakIndex)) {\r\n\t\t\t\t\r\n\t\t\t\tlayoutGroup = new TextLayoutGroup (formatRange.format, textIndex, breakIndex);\r\n\t\t\t\tlayoutGroup.advances = getAdvances (text, textIndex, breakIndex);\r\n\t\t\t\tlayoutGroup.offsetX = offsetX;\r\n\t\t\t\tlayoutGroup.ascent = ascent;\r\n\t\t\t\tlayoutGroup.descent = descent;\r\n\t\t\t\tlayoutGroup.leading = leading;\r\n\t\t\t\tlayoutGroup.lineIndex = lineIndex;\r\n\t\t\t\tlayoutGroup.offsetY = offsetY;\r\n\t\t\t\tlayoutGroup.width = getAdvancesWidth (layoutGroup.advances);\r\n\t\t\t\tlayoutGroup.height = heightValue;\r\n\t\t\t\tlayoutGroups.push (layoutGroup);\r\n\t\t\t\t\r\n\t\t\t\toffsetY += heightValue;\r\n\t\t\t\toffsetX = 2;\r\n\t\t\t\t\r\n\t\t\t\tif (wordWrap && (layoutGroup.offsetX + layoutGroup.width > width - 2)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tlayoutGroup.offsetY = offsetY;\r\n\t\t\t\t\tlayoutGroup.offsetX = offsetX;\r\n\t\t\t\t\t\r\n\t\t\t\t\toffsetY += heightValue;\r\n\t\t\t\t\tlineIndex++;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\ttextIndex = breakIndex + 1;\r\n\t\t\t\tbreakIndex = text.indexOf (\"\\n\", textIndex);\r\n\t\t\t\tlineIndex++;\r\n\t\t\t\t\r\n\t\t\t\tif (formatRange.end == breakIndex) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tnextFormatRange ();\r\n\t\t\t\t\tlineFormat = formatRange.format;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else if (formatRange.end >= spaceIndex && spaceIndex > -1) {\r\n\t\t\t\t\r\n\t\t\t\tlayoutGroup = null;\r\n\t\t\t\twrap = false;\r\n\t\t\t\t\r\n\t\t\t\twhile (true) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (spaceIndex == -1) spaceIndex = formatRange.end;\r\n\t\t\t\t\t\r\n\t\t\t\t\tadvances = getAdvances (text, textIndex, spaceIndex);\r\n\t\t\t\t\twidthValue = getAdvancesWidth (advances);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (wordWrap) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (offsetX + widthValue > width - 2) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\twrap = true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (wrap) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\toffsetY += heightValue;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar i = layoutGroups.length - 1;\r\n\t\t\t\t\t\tvar offsetCount = 0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlayoutGroup = layoutGroups[i];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (i > 0 && layoutGroup.startIndex > previousSpaceIndex) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\toffsetCount++;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlineIndex++;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\toffsetX = 2;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (offsetCount > 0) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar bumpX = layoutGroups[layoutGroups.length - offsetCount].offsetX;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (i in (layoutGroups.length - offsetCount)...layoutGroups.length) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tlayoutGroup = layoutGroups[i];\r\n\t\t\t\t\t\t\t\tlayoutGroup.offsetX -= bumpX;\r\n\t\t\t\t\t\t\t\tlayoutGroup.offsetY = offsetY;\r\n\t\t\t\t\t\t\t\tlayoutGroup.lineIndex = lineIndex;\r\n\t\t\t\t\t\t\t\toffsetX += layoutGroup.width;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlayoutGroup = new TextLayoutGroup (formatRange.format, textIndex, spaceIndex);\r\n\t\t\t\t\t\tlayoutGroup.advances = advances;\r\n\t\t\t\t\t\tlayoutGroup.offsetX = offsetX;\r\n\t\t\t\t\t\tlayoutGroup.ascent = ascent;\r\n\t\t\t\t\t\tlayoutGroup.descent = descent;\r\n\t\t\t\t\t\tlayoutGroup.leading = leading;\r\n\t\t\t\t\t\tlayoutGroup.lineIndex = lineIndex;\r\n\t\t\t\t\t\tlayoutGroup.offsetY = offsetY;\r\n\t\t\t\t\t\tlayoutGroup.width = widthValue;\r\n\t\t\t\t\t\tlayoutGroup.height = heightValue;\r\n\t\t\t\t\t\tlayoutGroups.push (layoutGroup);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\toffsetX = widthValue + spaceWidth;\r\n\t\t\t\t\t\tmarginRight = spaceWidth;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\twrap = false;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (layoutGroup != null && textIndex == spaceIndex) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (formatRange.format.align != JUSTIFY) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tlayoutGroup.endIndex = spaceIndex;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlayoutGroup.advances.push (spaceWidth);\r\n\t\t\t\t\t\t\tmarginRight += spaceWidth;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (layoutGroup == null || lineFormat.align == JUSTIFY) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlayoutGroup = new TextLayoutGroup (formatRange.format, textIndex, spaceIndex);\r\n\t\t\t\t\t\t\tlayoutGroup.advances = advances;\r\n\t\t\t\t\t\t\tlayoutGroup.offsetX = offsetX;\r\n\t\t\t\t\t\t\tlayoutGroup.ascent = ascent;\r\n\t\t\t\t\t\t\tlayoutGroup.descent = descent;\r\n\t\t\t\t\t\t\tlayoutGroup.leading = leading;\r\n\t\t\t\t\t\t\tlayoutGroup.lineIndex = lineIndex;\r\n\t\t\t\t\t\t\tlayoutGroup.offsetY = offsetY;\r\n\t\t\t\t\t\t\tlayoutGroup.width = widthValue;\r\n\t\t\t\t\t\t\tlayoutGroup.height = heightValue;\r\n\t\t\t\t\t\t\tlayoutGroups.push (layoutGroup);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlayoutGroup.advances.push (spaceWidth);\r\n\t\t\t\t\t\t\tmarginRight = spaceWidth;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlayoutGroup.endIndex = spaceIndex;\r\n\t\t\t\t\t\t\tlayoutGroup.advances = layoutGroup.advances.concat (advances);\r\n\t\t\t\t\t\t\tlayoutGroup.width += marginRight + widthValue;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlayoutGroup.advances.push (spaceWidth);\r\n\t\t\t\t\t\t\tmarginRight = spaceWidth;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\toffsetX += widthValue + spaceWidth;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\ttextIndex = spaceIndex + 1;\r\n\t\t\t\t\t\r\n\t\t\t\t\tpreviousSpaceIndex = spaceIndex;\r\n\t\t\t\t\tspaceIndex = text.indexOf (\" \", previousSpaceIndex + 1);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (formatRange.end <= previousSpaceIndex) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlayoutGroup = null;\r\n\t\t\t\t\t\tnextFormatRange ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ((spaceIndex > breakIndex && breakIndex > -1) || textIndex > text.length || spaceIndex > formatRange.end || (spaceIndex == -1 && breakIndex > -1)) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tif (textIndex >= formatRange.end) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlayoutGroup = new TextLayoutGroup (formatRange.format, textIndex, formatRange.end);\r\n\t\t\t\tlayoutGroup.advances = getAdvances (text, textIndex, formatRange.end);\r\n\t\t\t\tlayoutGroup.offsetX = offsetX;\r\n\t\t\t\tlayoutGroup.ascent = ascent;\r\n\t\t\t\tlayoutGroup.descent = descent;\r\n\t\t\t\tlayoutGroup.leading = leading;\r\n\t\t\t\tlayoutGroup.lineIndex = lineIndex;\r\n\t\t\t\tlayoutGroup.offsetY = offsetY;\r\n\t\t\t\tlayoutGroup.width = getAdvancesWidth (layoutGroup.advances);\r\n\t\t\t\tlayoutGroup.height = heightValue;\r\n\t\t\t\tlayoutGroups.push (layoutGroup);\r\n\t\t\t\t\r\n\t\t\t\toffsetX += layoutGroup.width;\r\n\t\t\t\t\r\n\t\t\t\ttextIndex = formatRange.end;\r\n\t\t\t\t\r\n\t\t\t\tnextFormatRange ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function setTextAlignment ():Void {\r\n\t\t\r\n\t\tvar lineIndex = -1;\r\n\t\tvar offsetX = 0.0;\r\n\t\tvar group, lineLength;\r\n\t\t\r\n\t\tfor (i in 0...layoutGroups.length) {\r\n\t\t\t\r\n\t\t\tgroup = layoutGroups[i];\r\n\t\t\t\r\n\t\t\tif (group.lineIndex != lineIndex) {\r\n\t\t\t\t\r\n\t\t\t\tlineIndex = group.lineIndex;\r\n\t\t\t\t\r\n\t\t\t\tswitch (group.format.align) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase CENTER:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (lineWidths[lineIndex] < width - 4) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\toffsetX = Math.round ((width - 4 - lineWidths[lineIndex]) / 2);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\toffsetX = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase RIGHT:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (lineWidths[lineIndex] < width - 4) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\toffsetX = Math.round (width - 4 - lineWidths[lineIndex]);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\toffsetX = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase JUSTIFY:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (lineWidths[lineIndex] < width - 4) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlineLength = 1;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (j in (i + 1)...layoutGroups.length) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (layoutGroups[j].lineIndex == lineIndex) {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tlineLength++;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (lineLength > 1) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tgroup = layoutGroups[i + lineLength - 1];\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (group.endIndex < text.length && text.charAt (group.endIndex) != \"\\n\") {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\toffsetX = (width - 4 - lineWidths[lineIndex]) / (lineLength - 1);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tfor (j in 1...lineLength) {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tlayoutGroups[i + j].offsetX += (offsetX * j);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\toffsetX = 0;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\toffsetX = 0;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (offsetX > 0) {\r\n\t\t\t\t\r\n\t\t\t\tgroup.offsetX += offsetX;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function update ():Void {\r\n\t\t\r\n\t\tif (text == null || StringTools.trim (text) == \"\" || textFormatRanges.length == 0) {\r\n\t\t\t\r\n\t\t\tlineAscents.splice (0, lineAscents.length);\r\n\t\t\tlineBreaks.splice (0, lineBreaks.length);\r\n\t\t\tlineDescents.splice (0, lineDescents.length);\r\n\t\t\tlineLeadings.splice (0, lineLeadings.length);\r\n\t\t\tlineHeights.splice (0, lineHeights.length);\r\n\t\t\tlineWidths.splice (0, lineWidths.length);\r\n\t\t\tlayoutGroups.splice (0, layoutGroups.length);\r\n\t\t\t\r\n\t\t\ttextWidth = 0;\r\n\t\t\ttextHeight = 0;\r\n\t\t\tnumLines = 1;\r\n\t\t\tmaxScrollH = 0;\r\n\t\t\tmaxScrollV = 1;\r\n\t\t\tbottomScrollV = 1;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tgetLayoutGroups ();\r\n\t\t\tgetLineMeasurements ();\r\n\t\t\tsetTextAlignment ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tgetBounds ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n","package openfl._internal.text;\r\n\r\n\r\nimport openfl.text.TextFormat;\r\n\r\n\r\nclass TextFormatRange {\r\n\t\r\n\t\r\n\tpublic var end:Int;\r\n\tpublic var format:TextFormat;\r\n\tpublic var start:Int;\r\n\t\r\n\t\r\n\tpublic function new (format:TextFormat, start:Int, end:Int) {\r\n\t\t\r\n\t\tthis.format = format;\r\n\t\tthis.start = start;\r\n\t\tthis.end = end;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl._internal.text;\r\n\r\n\r\nimport openfl.text.TextFormat;\r\n\r\n\r\nclass TextLayoutGroup {\r\n\t\r\n\t\r\n\tpublic var advances:Array<Float>;\r\n\tpublic var ascent:Float;\r\n\tpublic var descent:Float;\r\n\tpublic var endIndex:Int;\r\n\tpublic var format:TextFormat;\r\n\tpublic var height:Float;\r\n\tpublic var leading:Int;\r\n\tpublic var lineIndex:Int;\r\n\tpublic var offsetX:Float;\r\n\tpublic var offsetY:Float;\r\n\tpublic var startIndex:Int;\r\n\tpublic var width:Float;\r\n\t\r\n\t\r\n\tpublic function new (format:TextFormat, startIndex:Int, endIndex:Int) {\r\n\t\t\r\n\t\tthis.format = format;\r\n\t\tthis.startIndex = startIndex;\r\n\t\tthis.endIndex = endIndex;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display;\r\n\r\n\r\nimport lime.app.Application in LimeApplication;\r\nimport lime.app.Config;\r\nimport openfl.Lib;\r\n\r\n\r\nclass Application extends LimeApplication {\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\tif (Lib.application == null) {\r\n\t\t\t\r\n\t\t\tLib.application = this;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function create (config:Config):Void {\r\n\t\t\r\n\t\tthis.config = config;\r\n\t\t\r\n\t\tbackend.create (config);\r\n\t\t\r\n\t\tif (config != null) {\r\n\t\t\t\r\n\t\t\tif (Reflect.hasField (config, \"fps\")) {\r\n\t\t\t\t\r\n\t\t\t\tframeRate = config.fps;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (Reflect.hasField (config, \"windows\")) {\r\n\t\t\t\t\r\n\t\t\t\tfor (windowConfig in config.windows) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar window = new Window (windowConfig);\r\n\t\t\t\t\tcreateWindow (window);\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if (flash || html5)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t#end\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (preloader == null || preloader.complete) {\r\n\t\t\t\t\r\n\t\t\t\tonPreloadComplete ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport openfl._internal.renderer.cairo.CairoBitmap;\r\nimport openfl._internal.renderer.canvas.CanvasBitmap;\r\nimport openfl._internal.renderer.dom.DOMBitmap;\r\nimport openfl._internal.renderer.opengl.GLBitmap;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\n\r\n#if (js && html5)\r\nimport js.html.ImageElement;\r\n#end\r\n\r\n\r\n@:access(openfl.display.BitmapData)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.geom.Rectangle)\r\n\r\n\r\nclass Bitmap extends DisplayObject {\r\n\t\r\n\t\r\n\tpublic var bitmapData:BitmapData;\r\n\tpublic var pixelSnapping:PixelSnapping;\r\n\tpublic var smoothing:Bool;\r\n\t\r\n\t#if (js && html5)\r\n\tprivate var __image:ImageElement;\r\n\t#end\r\n\t\r\n\t\r\n\tpublic function new (bitmapData:BitmapData = null, pixelSnapping:PixelSnapping = null, smoothing:Bool = false) {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\tthis.bitmapData = bitmapData;\r\n\t\tthis.pixelSnapping = pixelSnapping;\r\n\t\tthis.smoothing = smoothing;\r\n\t\t\r\n\t\tif (pixelSnapping == null) {\r\n\t\t\t\r\n\t\t\tthis.pixelSnapping = PixelSnapping.AUTO;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __getBounds (rect:Rectangle, matrix:Matrix):Void {\r\n\t\t\r\n\t\tif (bitmapData != null) {\r\n\t\t\t\r\n\t\t\tvar bounds = Rectangle.__temp;\r\n\t\t\tbounds.setTo (0, 0, bitmapData.width, bitmapData.height);\r\n\t\t\tbounds.__transform (bounds, matrix);\r\n\t\t\t\r\n\t\t\trect.__expand (bounds.x, bounds.y, bounds.width, bounds.height);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\r\n\t\t\r\n\t\tif (!hitObject.visible || __isMask || bitmapData == null) return false;\r\n\t\tif (mask != null && !mask.__hitTestMask (x, y)) return false;\r\n\t\t\r\n\t\t__getWorldTransform ();\r\n\t\t\r\n\t\tvar px = __worldTransform.__transformInverseX (x, y);\r\n\t\tvar py = __worldTransform.__transformInverseY (x, y);\r\n\t\t\r\n\t\tif (px > 0 && py > 0 && px <= bitmapData.width && py <= bitmapData.height) {\r\n\t\t\t\r\n\t\t\tif (stack != null && !interactiveOnly) {\r\n\t\t\t\t\r\n\t\t\t\tstack.push (hitObject);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __hitTestMask (x:Float, y:Float):Bool {\r\n\t\t\r\n\t\tif (bitmapData == null) return false;\r\n\t\t\r\n\t\t__getWorldTransform ();\r\n\t\t\r\n\t\tvar px = __worldTransform.__transformInverseX (x, y);\r\n\t\tvar py = __worldTransform.__transformInverseY (x, y);\r\n\t\t\r\n\t\tif (px > 0 && py > 0 && px <= bitmapData.width && py <= bitmapData.height) {\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderCairo (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tCairoBitmap.render (this, renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderCairoMask (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\trenderSession.cairo.rectangle (0, 0, width, height);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderCanvas (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tCanvasBitmap.render (this, renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderCanvasMask (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\trenderSession.context.rect (0, 0, width, height);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderDOM (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tDOMBitmap.render (this, renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderGL (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (__cacheAsBitmap) {\r\n\t\t\t__cacheGL(renderSession);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t__preRenderGL (renderSession);\r\n\t\tGLBitmap.render (this, renderSession);\r\n\t\t__postRenderGL (renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __updateMask (maskGraphics:Graphics):Void {\r\n\t\t\r\n\t\tmaskGraphics.__commands.overrideMatrix (this.__worldTransform);\r\n\t\tmaskGraphics.beginFill (0);\r\n\t\tmaskGraphics.drawRect (0, 0, bitmapData.width, bitmapData.height);\r\n\t\t\r\n\t\tif (maskGraphics.__bounds == null) {\r\n\t\t\t\r\n\t\t\tmaskGraphics.__bounds = new Rectangle ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__getBounds (maskGraphics.__bounds, @:privateAccess Matrix.__identity);\r\n\t\t\r\n\t\tsuper.__updateMask (maskGraphics);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate override function get_height ():Float {\r\n\t\t\r\n\t\tif (bitmapData != null) {\r\n\t\t\t\r\n\t\t\treturn bitmapData.height * scaleY;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function set_height (value:Float):Float {\r\n\t\t\r\n\t\tif (bitmapData != null) {\r\n\t\t\t\r\n\t\t\tif (value != bitmapData.height) {\r\n\t\t\t\t\r\n\t\t\t\tscaleY = value / bitmapData.height;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn value;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function get_width ():Float {\r\n\t\t\r\n\t\tif (bitmapData != null) {\r\n\t\t\t\r\n\t\t\treturn bitmapData.width * scaleX;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function set_width (value:Float):Float {\r\n\t\t\r\n\t\tif (bitmapData != null) {\r\n\t\t\t\r\n\t\t\tif (value != bitmapData.width) {\r\n\t\t\t\t\r\n\t\t\t\tscaleX = value / bitmapData.width;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn value;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Bitmap = openfl._legacy.display.Bitmap;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport lime.graphics.cairo.CairoExtend;\r\nimport lime.graphics.cairo.CairoFilter;\r\nimport lime.graphics.cairo.CairoImageSurface;\r\nimport lime.graphics.cairo.CairoPattern;\r\nimport lime.graphics.cairo.CairoSurface;\r\nimport lime.graphics.cairo.Cairo;\r\nimport lime.graphics.opengl.GLBuffer;\r\nimport lime.graphics.opengl.GLTexture;\r\nimport lime.graphics.GLRenderContext;\r\nimport lime.graphics.Image;\r\nimport lime.graphics.ImageChannel;\r\nimport lime.graphics.ImageBuffer;\r\nimport lime.graphics.utils.ImageCanvasUtil;\r\nimport lime.math.color.ARGB;\r\nimport lime.math.ColorMatrix;\r\nimport lime.math.Rectangle in LimeRectangle;\r\nimport lime.math.Vector2;\r\nimport lime.utils.Float32Array;\r\nimport lime.utils.UInt8Array;\r\nimport openfl._internal.renderer.cairo.CairoRenderer;\r\nimport openfl._internal.renderer.cairo.CairoMaskManager;\r\nimport openfl._internal.renderer.canvas.CanvasMaskManager;\r\nimport openfl._internal.renderer.opengl.GLBitmap;\r\nimport openfl._internal.renderer.opengl.utils.PingPongTexture;\r\nimport openfl._internal.renderer.opengl.utils.SpriteBatch;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.errors.IOError;\r\nimport openfl.errors.TypeError;\r\nimport openfl.filters.BitmapFilter;\r\nimport openfl.geom.ColorTransform;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.utils.ByteArray;\r\nimport openfl.Vector;\r\n\r\n#if (js && html5)\r\nimport js.html.CanvasElement;\r\nimport js.html.CanvasRenderingContext2D;\r\nimport js.html.ImageData;\r\nimport js.html.ImageElement;\r\nimport js.html.Uint8ClampedArray;\r\nimport js.Browser;\r\n#end\r\n\r\n@:access(lime.graphics.Image)\r\n@:access(lime.graphics.ImageBuffer)\r\n@:access(lime.math.Rectangle)\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.geom.ColorTransform)\r\n@:access(openfl.geom.Matrix)\r\n@:access(openfl.geom.Point)\r\n@:access(openfl.geom.Rectangle)\r\n\r\n@:autoBuild(openfl.Assets.embedBitmap())\r\n\r\n\r\nclass BitmapData implements IBitmapDrawable {\r\n\t\r\n\t\r\n\tprivate static var __isGLES:Null<Bool> = null;\r\n\t\r\n\tpublic var height (default, null):Int;\r\n\tpublic var image (default, null):Image;\r\n\tpublic var rect (default, null):Rectangle;\r\n\tpublic var transparent (default, null):Bool;\r\n\tpublic var width (default, null):Int;\r\n\t\r\n\tpublic var __worldTransform:Matrix;\r\n\tpublic var __worldColorTransform:ColorTransform;\r\n\tpublic var __cacheAsBitmap:Bool;\r\n\t\r\n\tprivate var __blendMode:BlendMode;\r\n\tprivate var __shader:Shader;\r\n\tprivate var __buffer:GLBuffer;\r\n\tprivate var __isValid:Bool;\r\n\tprivate var __surface:CairoSurface;\r\n\tprivate var __texture:GLTexture;\r\n\tprivate var __textureImage:Image;\r\n\tprivate var __pingPongTexture:PingPongTexture;\r\n\tprivate var __usingPingPongTexture:Bool = false;\r\n\tprivate var __uvData:TextureUvs;\r\n\t\r\n\t\r\n\tpublic function new (width:Int, height:Int, transparent:Bool = true, fillColor:UInt = 0xFFFFFFFF) {\r\n\t\t\r\n\t\tthis.transparent = transparent;\r\n\t\t\r\n\t\t#if (neko || (js && html5))\r\n\t\twidth = width == null ? 0 : width;\r\n\t\theight = height == null ? 0 : height;\r\n\t\t#end\r\n\t\t\r\n\t\twidth = width < 0 ? 0 : width;\r\n\t\theight = height < 0 ? 0 : height;\r\n\t\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\trect = new Rectangle (0, 0, width, height);\r\n\t\t\r\n\t\tif (width > 0 && height > 0) {\r\n\t\t\t\r\n\t\t\tif (transparent) {\r\n\t\t\t\t\r\n\t\t\t\tif ((fillColor & 0xFF000000) == 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tfillColor = 0;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tfillColor = (0xFF << 24) | (fillColor & 0xFFFFFF);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfillColor = (fillColor << 8) | ((fillColor >> 24) & 0xFF);\r\n\t\t\t\r\n\t\t\t#if sys\r\n\t\t\tvar buffer = new ImageBuffer (new UInt8Array (width * height * 4), width, height);\r\n\t\t\tbuffer.format = BGRA32;\r\n\t\t\tbuffer.premultiplied = true;\r\n\t\t\t\r\n\t\t\timage = new Image (buffer, 0, 0, width, height);\r\n\t\t\t\r\n\t\t\tif (fillColor != 0) {\r\n\t\t\t\t\r\n\t\t\t\timage.fillRect (image.rect, fillColor);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t#else\r\n\t\t\timage = new Image (null, 0, 0, width, height, fillColor);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\timage.transparent = transparent;\r\n\t\t\t__isValid = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__createUVs ();\t\r\n\t\t\r\n\t\t__worldTransform = new Matrix();\r\n\t\t__worldColorTransform = new ColorTransform();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function applyFilter (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, filter:BitmapFilter):Void {\r\n\t\t\r\n\t\tif (!__isValid || sourceBitmapData == null || !sourceBitmapData.__isValid) return;\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tImageCanvasUtil.convertToCanvas (image);\r\n\t\tImageCanvasUtil.createImageData (image);\r\n\t\tImageCanvasUtil.convertToCanvas (sourceBitmapData.image);\r\n\t\tImageCanvasUtil.createImageData (sourceBitmapData.image);\r\n\t\t#end\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tfilter.__applyFilter (image.buffer.__srcImageData, sourceBitmapData.image.buffer.__srcImageData, sourceRect, destPoint);\r\n\t\t#end\r\n\t\t\r\n\t\timage.dirty = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clone ():BitmapData {\r\n\t\t\r\n\t\tif (!__isValid) {\r\n\t\t\t\r\n\t\t\treturn new BitmapData (width, height, transparent);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn BitmapData.fromImage (image.clone (), transparent);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function colorTransform (rect:Rectangle, colorTransform:ColorTransform):Void {\r\n\t\t\r\n\t\tif (!__isValid) return;\r\n\t\t\r\n\t\timage.colorTransform (rect.__toLimeRectangle (), colorTransform.__toLimeColorMatrix ());\r\n\t\t__usingPingPongTexture = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function compare (otherBitmapData:BitmapData):Dynamic {\r\n\t\t\r\n\t\tif (otherBitmapData == this) {\r\n\t\t\t\r\n\t\t\treturn 0;\r\n\t\t\t\r\n\t\t} else if (otherBitmapData == null) {\r\n\t\t\t\r\n\t\t\treturn -1;\r\n\t\t\t\r\n\t\t} else if (__isValid == false || otherBitmapData.__isValid == false) {\r\n\t\t\t\r\n\t\t\treturn -2;\r\n\t\t\t\r\n\t\t} else if (width != otherBitmapData.width) {\r\n\t\t\t\r\n\t\t\treturn -3;\r\n\t\t\t\r\n\t\t} else if (height != otherBitmapData.height) {\r\n\t\t\t\r\n\t\t\treturn -4;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (image != null && otherBitmapData.image != null && image.format == otherBitmapData.image.format) {\r\n\t\t\t\r\n\t\t\tvar bytes = image.data;\r\n\t\t\tvar otherBytes = otherBitmapData.image.data;\r\n\t\t\tvar equal = true;\r\n\t\t\t\r\n\t\t\tfor (i in 0...bytes.length) {\r\n\t\t\t\t\r\n\t\t\t\tif (bytes[i] != otherBytes[i]) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tequal = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (equal) {\r\n\t\t\t\t\r\n\t\t\t\treturn 0;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar bitmapData = null;\r\n\t\tvar foundDifference, pixel:ARGB, otherPixel:ARGB, comparePixel:ARGB, r, g, b, a;\r\n\t\t\r\n\t\tfor (y in 0...height) {\r\n\t\t\t\r\n\t\t\tfor (x in 0...width) {\r\n\t\t\t\t\r\n\t\t\t\tfoundDifference = false;\r\n\t\t\t\t\r\n\t\t\t\tpixel = getPixel32 (x, y);\r\n\t\t\t\totherPixel = otherBitmapData.getPixel32 (x, y);\r\n\t\t\t\tcomparePixel = 0;\r\n\t\t\t\t\r\n\t\t\t\tif (pixel != otherPixel) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tr = pixel.r - otherPixel.r;\r\n\t\t\t\t\tg = pixel.g - otherPixel.g;\r\n\t\t\t\t\tb = pixel.b - otherPixel.b;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (r < 0) r *= -1;\r\n\t\t\t\t\tif (g < 0) g *= -1;\r\n\t\t\t\t\tif (b < 0) b *= -1;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (r == 0 && g == 0 && b == 0) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ta = pixel.a - otherPixel.a;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (a != 0) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcomparePixel.r = 0xFF;\r\n\t\t\t\t\t\t\tcomparePixel.g = 0xFF;\r\n\t\t\t\t\t\t\tcomparePixel.b = 0xFF;\r\n\t\t\t\t\t\t\tcomparePixel.a = a;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfoundDifference = true;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcomparePixel.r = r;\r\n\t\t\t\t\t\tcomparePixel.g = g;\r\n\t\t\t\t\t\tcomparePixel.b = b;\r\n\t\t\t\t\t\tcomparePixel.a = 0xFF;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfoundDifference = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (foundDifference) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (bitmapData == null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbitmapData = new BitmapData (width, height, transparent || otherBitmapData.transparent, 0x00000000);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbitmapData.setPixel32 (x, y, comparePixel);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (bitmapData == null) {\r\n\t\t\t\r\n\t\t\treturn 0;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn bitmapData;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyChannel (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, sourceChannel:Int, destChannel:Int):Void {\r\n\t\t\r\n\t\tif (!__isValid) return;\r\n\t\t\r\n\t\tvar sourceChannel = switch (sourceChannel) {\r\n\t\t\t\r\n\t\t\tcase 1: ImageChannel.RED;\r\n\t\t\tcase 2: ImageChannel.GREEN;\r\n\t\t\tcase 4: ImageChannel.BLUE;\r\n\t\t\tcase 8: ImageChannel.ALPHA;\r\n\t\t\tdefault: return;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar destChannel = switch (destChannel) {\r\n\t\t\t\r\n\t\t\tcase 1: ImageChannel.RED;\r\n\t\t\tcase 2: ImageChannel.GREEN;\r\n\t\t\tcase 4: ImageChannel.BLUE;\r\n\t\t\tcase 8: ImageChannel.ALPHA;\r\n\t\t\tdefault: return;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\timage.copyChannel (sourceBitmapData.image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), sourceChannel, destChannel);\r\n\t\t__usingPingPongTexture = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyPixels (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, alphaBitmapData:BitmapData = null, alphaPoint:Point = null, mergeAlpha:Bool = false):Void {\r\n\t\t\r\n\t\tif (!__isValid || sourceBitmapData == null) return;\r\n\t\t\r\n\t\timage.copyPixels (sourceBitmapData.image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), alphaBitmapData != null ? alphaBitmapData.image : null, alphaPoint != null ? alphaPoint.__toLimeVector2 () : null, mergeAlpha);\r\n\t\t__usingPingPongTexture = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function dispose ():Void {\r\n\t\t\r\n\t\timage = null;\r\n\t\t\r\n\t\twidth = 0;\r\n\t\theight = 0;\r\n\t\trect = null;\r\n\t\t__isValid = false;\r\n\t\t\r\n\t\tif (__texture != null) {\r\n\t\t\t\r\n\t\t\tvar renderer = @:privateAccess Lib.current.stage.__renderer;\r\n\t\t\t\r\n\t\t\tif(renderer != null) {\r\n\t\t\t\t\r\n\t\t\t\tvar renderSession = @:privateAccess renderer.renderSession;\r\n\t\t\t\tvar gl = renderSession.gl;\r\n\t\t\t\t\r\n\t\t\t\tif (gl != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tgl.deleteTexture (__texture);\r\n\t\t\t\t\t__texture = null;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__pingPongTexture != null) {\r\n\t\t\t\r\n\t\t\t__pingPongTexture.destroy ();\r\n\t\t\t__pingPongTexture = null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function draw (source:IBitmapDrawable, matrix:Matrix = null, colorTransform:ColorTransform = null, blendMode:BlendMode = null, clipRect:Rectangle = null, smoothing:Bool = false):Void {\r\n\t\t\r\n\t\tif (!__isValid) return;\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t\r\n\t\tif (colorTransform != null) {\r\n\t\t\t\r\n\t\t\tvar copy = new BitmapData (Reflect.getProperty (source, \"width\"), Reflect.getProperty (source, \"height\"), true, 0);\r\n\t\t\tcopy.draw (source);\r\n\t\t\tcopy.colorTransform (copy.rect, colorTransform);\r\n\t\t\tsource = copy;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tImageCanvasUtil.convertToCanvas (image);\r\n\t\tImageCanvasUtil.sync (image, true);\r\n\t\t\r\n\t\tvar buffer = image.buffer;\r\n\t\t\r\n\t\tvar renderSession = new RenderSession ();\r\n\t\trenderSession.context = cast buffer.__srcContext;\r\n\t\trenderSession.roundPixels = true;\r\n\t\trenderSession.maskManager = new CanvasMaskManager (renderSession);\r\n\t\t\r\n\t\tif (!smoothing) {\r\n\t\t\t\r\n\t\t\tuntyped (buffer.__srcContext).mozImageSmoothingEnabled = false;\r\n\t\t\t//untyped (buffer.__srcContext).webkitImageSmoothingEnabled = false;\r\n\t\t\tuntyped (buffer.__srcContext).msImageSmoothingEnabled = false;\r\n\t\t\tuntyped (buffer.__srcContext).imageSmoothingEnabled = false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (clipRect != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.pushRect (clipRect, new Matrix ());\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar matrixCache = source.__worldTransform;\r\n\t\tsource.__updateTransforms(matrix != null ? matrix : new Matrix ());\r\n\t\tsource.__updateChildren (false);\r\n\t\tsource.__renderCanvas (renderSession);\r\n\t\tsource.__updateTransforms(matrixCache);\r\n\t\tsource.__updateChildren (true);\r\n\t\t\r\n\t\tif (!smoothing) {\r\n\t\t\t\r\n\t\t\tuntyped (buffer.__srcContext).mozImageSmoothingEnabled = true;\r\n\t\t\t//untyped (buffer.__srcContext).webkitImageSmoothingEnabled = true;\r\n\t\t\tuntyped (buffer.__srcContext).msImageSmoothingEnabled = true;\r\n\t\t\tuntyped (buffer.__srcContext).imageSmoothingEnabled = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (clipRect != null){\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.popMask ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tbuffer.__srcContext.setTransform (1, 0, 0, 1, 0, 0);\r\n\t\tbuffer.__srcImageData = null;\r\n\t\tbuffer.data = null;\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\tif (colorTransform != null) {\r\n\t\t\t\r\n\t\t\tvar copy = new BitmapData (Reflect.getProperty (source, \"width\"), Reflect.getProperty (source, \"height\"), true, 0);\r\n\t\t\tcopy.draw (source);\r\n\t\t\tcopy.colorTransform (copy.rect, colorTransform);\r\n\t\t\tsource = copy;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t//var renderSession = @:privateAccess Lib.current.stage.__renderer.renderSession;\r\n\t\t//__drawGL (renderSession, width, height, source, matrix, colorTransform, blendMode, clipRect, smoothing, !__usingPingPongTexture, false, true);\r\n\t\t\r\n\t\tvar surface = getSurface ();\r\n\t\tvar cairo = new Cairo (surface);\r\n\t\t\r\n\t\tif (!smoothing) {\r\n\t\t\t\r\n\t\t\tcairo.antialias = NONE;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar renderSession = new RenderSession ();\r\n\t\trenderSession.cairo = cairo;\r\n\t\trenderSession.roundPixels = true;\r\n\t\trenderSession.maskManager = new CairoMaskManager (renderSession);\r\n\t\t\r\n\t\tif (clipRect != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.pushRect (clipRect, new Matrix ());\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar matrixCache = source.__worldTransform;\r\n\t\tsource.__updateTransforms(matrix != null ? matrix : new Matrix ());\r\n\t\tsource.__updateChildren (false);\r\n\t\tsource.__renderCairo (renderSession);\r\n\t\tsource.__updateTransforms(matrixCache);\r\n\t\tsource.__updateChildren (true);\r\n\t\t\r\n\t\tif (clipRect != null) {\r\n\t\t\t\r\n\t\t\trenderSession.maskManager.popMask ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tsurface.flush ();\r\n\t\t\r\n\t\timage.dirty = true;\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function encode (rect:Rectangle, compressor:Dynamic, byteArray:ByteArray = null):ByteArray {\r\n\t\t\r\n\t\t// TODO: Support rect\r\n\t\t\r\n\t\tif (!__isValid || rect == null) return byteArray = null;\r\n\t\t\r\n\t\tif (Std.is (compressor, PNGEncoderOptions)) {\r\n\t\t\t\r\n\t\t\treturn byteArray = ByteArray.fromBytes (image.encode (\"png\"));\r\n\t\t\t\r\n\t\t} else if (Std.is (compressor, JPEGEncoderOptions)) {\r\n\t\t\t\r\n\t\t\treturn byteArray = ByteArray.fromBytes (image.encode (\"jpg\", cast (compressor, JPEGEncoderOptions).quality));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn byteArray = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function fillRect (rect:Rectangle, color:Int):Void {\r\n\t\t\r\n\t\tif (!__isValid || rect == null) return;\r\n\t\t\r\n\t\tif (transparent && (color & 0xFF000000) == 0) {\r\n\t\t\t\r\n\t\t\tcolor = 0;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\timage.fillRect (rect.__toLimeRectangle (), color, ARGB32);\r\n\t\t__usingPingPongTexture = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function floodFill (x:Int, y:Int, color:Int):Void {\r\n\t\t\r\n\t\tif (!__isValid) return;\r\n\t\timage.floodFill (x, y, color, ARGB32);\r\n\t\t__usingPingPongTexture = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function fromBase64 (base64:String, type:String, onload:BitmapData -> Void = null):BitmapData {\r\n\t\t\r\n\t\tvar bitmapData = new BitmapData (0, 0, true);\r\n\t\tbitmapData.__fromBase64 (base64, type, onload);\r\n\t\treturn bitmapData;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function fromBytes (bytes:ByteArray, rawAlpha:ByteArray = null, onload:BitmapData -> Void = null):BitmapData {\r\n\t\t\r\n\t\tvar bitmapData = new BitmapData (0, 0, true);\r\n\t\tbitmapData.__fromBytes (bytes, rawAlpha, onload);\r\n\t\treturn bitmapData;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if (js && html5)\r\n\tpublic static function fromCanvas (canvas:CanvasElement, transparent:Bool = true):BitmapData {\r\n\t\t\r\n\t\tif (canvas == null) return null;\r\n\t\t\r\n\t\tvar bitmapData = new BitmapData (0, 0, transparent);\r\n\t\tbitmapData.__fromImage (Image.fromCanvas (canvas));\r\n\t\tbitmapData.image.transparent = transparent;\r\n\t\treturn bitmapData;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\tpublic static function fromFile (path:String, onload:BitmapData -> Void = null, onerror:Void -> Void = null):BitmapData {\r\n\t\t\r\n\t\tvar bitmapData = new BitmapData (0, 0, true);\r\n\t\tbitmapData.__fromFile (path, onload, onerror);\r\n\t\treturn bitmapData;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function fromImage (image:Image, transparent:Bool = true):BitmapData {\r\n\t\t\r\n\t\tif (image == null || image.buffer == null) return null;\r\n\t\t\r\n\t\tvar bitmapData = new BitmapData (0, 0, transparent);\r\n\t\tbitmapData.__fromImage (image);\r\n\t\tbitmapData.image.transparent = transparent;\r\n\t\treturn bitmapData;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function generateFilterRect (sourceRect:Rectangle, filter:BitmapFilter):Rectangle {\r\n\t\t\r\n\t\treturn sourceRect.clone ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getBuffer (gl:GLRenderContext):GLBuffer {\r\n\t\t\r\n\t\tif (__buffer == null) {\r\n\t\t\t\r\n\t\t\tvar data = [\r\n\t\t\t\t\r\n\t\t\t\twidth, height, 0, 1, 1, \r\n\t\t\t\t0, height, 0, 0, 1, \r\n\t\t\t\twidth, 0, 0, 1, 0, \r\n\t\t\t\t0, 0, 0, 0, 0\r\n\t\t\t\t\r\n\t\t\t];\r\n\t\t\t\r\n\t\t\t__buffer = gl.createBuffer ();\r\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, __buffer);\r\n\t\t\tgl.bufferData (gl.ARRAY_BUFFER, new Float32Array (data), gl.STATIC_DRAW);\r\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, null);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __buffer;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getColorBoundsRect (mask:Int, color:Int, findColor:Bool = true):Rectangle {\r\n\t\t\r\n\t\tif (!__isValid) return new Rectangle (0, 0, width, height);\r\n\t\t\r\n\t\tif (!transparent || ((mask >> 24) & 0xFF) > 0) {\r\n\t\t\t\r\n\t\t\tvar color = (color:ARGB);\r\n\t\t\tif (color.a == 0) color = 0;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar rect = image.getColorBoundsRect (mask, color, findColor, ARGB32);\r\n\t\treturn new Rectangle (rect.x, rect.y, rect.width, rect.height);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getPixel (x:Int, y:Int):Int {\r\n\t\t\r\n\t\tif (!__isValid) return 0;\r\n\t\treturn image.getPixel (x, y, ARGB32);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getPixel32 (x:Int, y:Int):Int {\r\n\t\t\r\n\t\tif (!__isValid) return 0;\r\n\t\treturn image.getPixel32 (x, y, ARGB32);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getPixels (rect:Rectangle):ByteArray {\r\n\t\t\r\n\t\tif (!__isValid) return null;\r\n\t\tif (rect == null) rect = this.rect;\r\n\t\treturn ByteArray.fromBytes (image.getPixels (rect.__toLimeRectangle (), ARGB32));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getSurface ():CairoImageSurface {\r\n\t\t\r\n\t\tif (!__isValid) return null;\r\n\t\t\r\n\t\tif (__surface == null) {\r\n\t\t\t\r\n\t\t\t__surface = CairoImageSurface.fromImage (image);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __surface;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getTexture (gl:GLRenderContext):GLTexture {\r\n\t\t\r\n\t\tif (!__isValid) return null;\r\n\t\t\r\n\t\tif (__usingPingPongTexture && __pingPongTexture != null) {\r\n\t\t\t\r\n\t\t\treturn __pingPongTexture.texture;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__texture == null) {\r\n\t\t\t\r\n\t\t\t__texture = gl.createTexture ();\r\n\t\t\tgl.bindTexture (gl.TEXTURE_2D, __texture);\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\t\t\timage.dirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (image != null && image.dirty) {\r\n\t\t\t\r\n\t\t\tvar internalFormat, format;\r\n\t\t\t\r\n\t\t\tif (__surface != null) {\r\n\t\t\t\t\r\n\t\t\t\t__surface.flush ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (image.buffer.bitsPerPixel == 1) {\r\n\t\t\t\t\r\n\t\t\t\tinternalFormat = gl.ALPHA;\r\n\t\t\t\tformat = gl.ALPHA;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t#if !sys\r\n\t\t\t\t\r\n\t\t\t\tinternalFormat = gl.RGBA;\r\n\t\t\t\tformat = gl.RGBA;\r\n\t\t\t\t\r\n\t\t\t\t#elseif (ios || tvos)\r\n\t\t\t\t\r\n\t\t\t\tinternalFormat = gl.RGBA;\r\n\t\t\t\tformat = gl.BGRA_EXT;\r\n\t\t\t\t\r\n\t\t\t\t#else\r\n\t\t\t\t\r\n\t\t\t\tif (__isGLES == null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar version:String = gl.getParameter (gl.VERSION);\r\n\t\t\t\t\t__isGLES = (version.indexOf (\"OpenGL ES\") > -1 && version.indexOf (\"WebGL\") == -1);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tinternalFormat = (__isGLES ? gl.BGRA_EXT : gl.RGBA);\r\n\t\t\t\tformat = gl.BGRA_EXT;\r\n\t\t\t\t\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgl.bindTexture (gl.TEXTURE_2D, __texture);\r\n\t\t\t\r\n\t\t\tvar textureImage = image;\r\n\t\t\t\r\n\t\t\tif ((!textureImage.premultiplied && textureImage.transparent) #if (js && html5) || textureImage.format != RGBA32 #end) {\r\n\t\t\t\t\r\n\t\t\t\ttextureImage = textureImage.clone ();\r\n\t\t\t\t#if (js && html5)\r\n\t\t\t\ttextureImage.format = RGBA32;\r\n\t\t\t\t#end\r\n\t\t\t\ttextureImage.premultiplied = true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgl.texImage2D (gl.TEXTURE_2D, 0, internalFormat, width, height, 0, format, gl.UNSIGNED_BYTE, textureImage.data);\r\n\t\t\tgl.bindTexture (gl.TEXTURE_2D, null);\r\n\t\t\timage.dirty = false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __texture;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getVector (rect:Rectangle) {\r\n\t\t\r\n\t\tvar pixels = getPixels (rect);\r\n\t\tvar length = Std.int (pixels.length / 4);\r\n\t\tvar result = new Vector<UInt> (length, true);\r\n\t\t\r\n\t\tfor (i in 0...length) {\r\n\t\t\t\r\n\t\t\tresult[i] = pixels.readUnsignedInt ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function histogram (hRect:Rectangle = null) {\r\n\t\t\r\n\t\tvar rect = hRect != null ? hRect : new Rectangle (0, 0, width, height);\r\n\t\tvar pixels = getPixels (rect);\r\n\t\tvar result = [for (i in 0...4) [for (j in 0...256) 0]];\r\n\t\t\r\n\t\tfor (i in 0...pixels.length) {\r\n\t\t\t\r\n\t\t\t++result[i % 4][pixels.readUnsignedByte ()];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function hitTest (firstPoint:Point, firstAlphaThreshold:Int, secondObject:Dynamic, secondBitmapDataPoint:Point = null, secondAlphaThreshold:Int = 1):Bool {\r\n\t\t\r\n\t\tif (!__isValid) return false;\r\n\t\t\r\n\t\tif (Std.is (secondObject, Bitmap)) {\r\n\t\t\t\r\n\t\t\tsecondObject = cast (secondObject, Bitmap).bitmapData;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (Std.is (secondObject, Point)) {\r\n\t\t\t\r\n\t\t\tvar secondPoint:Point = cast secondObject;\r\n\t\t\t\r\n\t\t\tvar x = Std.int (secondPoint.x - firstPoint.x);\r\n\t\t\tvar y = Std.int (secondPoint.y - firstPoint.y);\r\n\t\t\t\r\n\t\t\tif (rect.contains (x, y)) {\r\n\t\t\t\t\r\n\t\t\t\tvar pixel = getPixel32 (x, y);\r\n\t\t\t\t\r\n\t\t\t\tif ((pixel >> 24) & 0xFF >= firstAlphaThreshold) {\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else if (Std.is (secondObject, BitmapData)) {\r\n\t\t\t\r\n\t\t\tvar secondBitmapData:BitmapData = cast secondObject;\r\n\t\t\tvar x, y;\r\n\t\t\t\r\n\t\t\tif (secondBitmapDataPoint == null) {\r\n\t\t\t\t\r\n\t\t\t\tx = 0;\r\n\t\t\t\ty = 0;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tx = Std.int (secondBitmapDataPoint.x - firstPoint.x);\r\n\t\t\t\ty = Std.int (secondBitmapDataPoint.y - firstPoint.y);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (rect.contains (x, y)) {\r\n\t\t\t\t\r\n\t\t\t\tvar hitRect = Rectangle.__temp;\r\n\t\t\t\thitRect.setTo (x, y, Math.min (secondBitmapData.width, width - x), Math.min (secondBitmapData.height, height - y));\r\n\t\t\t\t\r\n\t\t\t\tvar pixels = getPixels (hitRect);\r\n\t\t\t\t\r\n\t\t\t\thitRect.offset (-x, -y);\r\n\t\t\t\tvar testPixels = secondBitmapData.getPixels (hitRect);\r\n\t\t\t\t\r\n\t\t\t\tvar length = Std.int (hitRect.width * hitRect.height);\r\n\t\t\t\tvar pixel, testPixel;\r\n\t\t\t\t\r\n\t\t\t\tfor (i in 0...length) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tpixel = pixels.readUnsignedInt ();\r\n\t\t\t\t\ttestPixel = testPixels.readUnsignedInt ();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ((pixel >> 24) & 0xFF >= firstAlphaThreshold && (testPixel >> 24) & 0xFF >= secondAlphaThreshold) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else if (Std.is (secondObject, Rectangle)) {\r\n\t\t\t\r\n\t\t\tvar secondRectangle = Rectangle.__temp;\r\n\t\t\tsecondRectangle.copyFrom (cast secondObject);\r\n\t\t\tsecondRectangle.offset (-firstPoint.x, -firstPoint.y);\r\n\t\t\tsecondRectangle.__contract (0, 0, width, height);\r\n\t\t\t\r\n\t\t\tif (secondRectangle.width > 0 && secondRectangle.height > 0) {\r\n\t\t\t\t\r\n\t\t\t\tvar pixels = getPixels (secondRectangle);\r\n\t\t\t\tvar length = Std.int (pixels.length / 4);\r\n\t\t\t\tvar pixel;\r\n\t\t\t\t\r\n\t\t\t\tfor (i in 0...length) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tpixel = pixels.readUnsignedInt ();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ((pixel >> 24) & 0xFF >= firstAlphaThreshold) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function lock ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function merge (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, redMultiplier:UInt, greenMultiplier:UInt, blueMultiplier:UInt, alphaMultiplier:UInt):Void {\r\n\t\t\r\n\t\tif (!__isValid || sourceBitmapData == null || !sourceBitmapData.__isValid || sourceRect == null || destPoint == null) return;\r\n\t\timage.merge (sourceBitmapData.image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\r\n\t\t__usingPingPongTexture = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function noise (randomSeed:Int, low:Int = 0, high:Int = 255, channelOptions:Int = 7, grayScale:Bool = false):Void {\r\n\t\t\r\n\t\tif (!__isValid) return;\r\n\t\t\r\n\t\t//Seeded Random Number Generator\r\n\t\tvar rand:Void->Int = {\r\n\t\t\tfunction func():Int \r\n\t\t\t{\t\r\n\t\t\t\trandomSeed = randomSeed * 1103515245 + 12345; \r\n\t\t\t\treturn Std.int(Math.abs(randomSeed / 65536)) % 32768; \r\n\t\t\t}\r\n\t\t};\r\n\t\trand();\r\n\t\t\r\n\t\t//Range of values to value to.\r\n\t\tvar range:Int = high - low;\t\t\r\n\t\tvar data:ByteArray = new ByteArray();\r\n\t\t\r\n\t\tvar redChannel:Bool = ((channelOptions & ( 1 << 0 )) >> 0) == 1;\r\n\t\tvar greenChannel:Bool = ((channelOptions & ( 1 << 1 )) >> 1) == 1;\r\n\t\tvar blueChannel:Bool = ((channelOptions & ( 1 << 2 )) >> 2) == 1;\r\n\t\tvar alphaChannel:Bool = ((channelOptions & ( 1 << 3 )) >> 3) == 1;\r\n\t\t\r\n\t\tfor (y in 0...height)\r\n\t\t{\r\n\t\t\tfor (x in 0...width)\r\n\t\t\t{\r\n\t\t\t\t//Default channel colours if all channel options are false.\r\n\t\t\t\tvar red:Int = 0;\r\n\t\t\t\tvar blue:Int = 0;\r\n\t\t\t\tvar green:Int = 0;\r\n\t\t\t\tvar alpha:Int = 255;\r\n\t\t\t\t\r\n\t\t\t\tif (grayScale)\r\n\t\t\t\t{\r\n\t\t\t\t\tred = green = blue = low + (rand() % range);\r\n\t\t\t\t\talpha = 255;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (redChannel) red = low + (rand() % range);\r\n\t\t\t\t\tif (greenChannel) green = low + (rand() % range);\r\n\t\t\t\t\tif (blueChannel) blue = low + (rand() % range);\r\n\t\t\t\t\tif (alphaChannel) alpha = low + (rand() % range);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar rgb:Int = alpha;\r\n\t\t\t\trgb = (rgb << 8) + red;\r\n\t\t\t\trgb = (rgb << 8) + green;\r\n\t\t\t\trgb = (rgb << 8) + blue;\r\n\t\t\t\t\r\n\t\t\t\tsetPixel32(x, y, rgb);\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function paletteMap (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, redArray:Array<Int> = null, greenArray:Array<Int> = null, blueArray:Array<Int> = null, alphaArray:Array<Int> = null):Void {\r\n\t\t\r\n\t\tvar sw:Int = Std.int (sourceRect.width);\r\n\t\tvar sh:Int = Std.int (sourceRect.height);\r\n\t\t\r\n\t\tvar pixels = getPixels (sourceRect);\r\n\t\tpixels.position = 0;\r\n\t\t\r\n\t\tvar pixelValue:Int, r:Int, g:Int, b:Int, a:Int, color:Int, c1:Int, c2:Int, c3:Int, c4:Int;\r\n\t\t\r\n\t\tfor (i in 0...(sh * sw)) {\r\n\t\t\t\r\n\t\t\tpixelValue = pixels.readUnsignedInt ();\r\n\t\t\t\r\n\t\t\tc1 = (alphaArray == null) ? pixelValue & 0xFF000000 : alphaArray[(pixelValue >> 24) & 0xFF];\r\n\t\t\tc2 = (redArray == null) ? pixelValue & 0x00FF0000 : redArray[(pixelValue >> 16) & 0xFF];\r\n\t\t\tc3 = (greenArray == null) ? pixelValue & 0x0000FF00 : greenArray[(pixelValue >> 8) & 0xFF];\r\n\t\t\tc4 = (blueArray == null) ? pixelValue & 0x000000FF : blueArray[(pixelValue) & 0xFF];\r\n\t\t\t\r\n\t\t\ta = ((c1 >> 24) & 0xFF) + ((c2 >> 24) & 0xFF) + ((c3 >> 24) & 0xFF) + ((c4 >> 24) & 0xFF);\r\n\t\t\tif (a > 0xFF) a == 0xFF;\r\n\t\t\t\r\n\t\t\tr = ((c1 >> 16) & 0xFF) + ((c2 >> 16) & 0xFF) + ((c3 >> 16) & 0xFF) + ((c4 >> 16) & 0xFF);\r\n\t\t\tif (r > 0xFF) r == 0xFF;\r\n\t\t\t\r\n\t\t\tg = ((c1 >> 8) & 0xFF) + ((c2 >> 8) & 0xFF) + ((c3 >> 8) & 0xFF) + ((c4 >> 8) & 0xFF);\r\n\t\t\tif (g > 0xFF) g == 0xFF;\r\n\t\t\t\r\n\t\t\tb = ((c1) & 0xFF) + ((c2) & 0xFF) + ((c3) & 0xFF) + ((c4) & 0xFF);\r\n\t\t\tif (b > 0xFF) b == 0xFF;\r\n\t\t\t\r\n\t\t\tcolor = a << 24 | r << 16 | g << 8 | b;\r\n\t\t\t\r\n\t\t\tpixels.position = i * 4;\r\n\t\t\tpixels.writeUnsignedInt (color);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tpixels.position = 0;\r\n\t\tvar destRect = new Rectangle (destPoint.x, destPoint.y, sw, sh);\r\n\t\tsetPixels (destRect, pixels);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function perlinNoise (baseX:Float, baseY:Float, numOctaves:UInt, randomSeed:Int, stitch:Bool, fractalNoise:Bool, channelOptions:UInt = 7, grayScale:Bool = false, offsets:Array<Point> = null):Void {\r\n\t\t\r\n\t\topenfl.Lib.notImplemented (\"BitmapData.perlinNoise\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function scroll (x:Int, y:Int):Void {\r\n\t\t\r\n\t\tif (!__isValid) return;\r\n\t\timage.scroll (x, y);\r\n\t\t__usingPingPongTexture = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setPixel (x:Int, y:Int, color:Int):Void {\r\n\t\t\r\n\t\tif (!__isValid) return;\r\n\t\timage.setPixel (x, y, color, ARGB32);\r\n\t\t__usingPingPongTexture = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setPixel32 (x:Int, y:Int, color:Int):Void {\r\n\t\t\r\n\t\tif (!__isValid) return;\r\n\t\timage.setPixel32 (x, y, color, ARGB32);\r\n\t\t__usingPingPongTexture = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setPixels (rect:Rectangle, byteArray:ByteArray):Void {\r\n\t\t\r\n\t\tif (!__isValid || rect == null) return;\r\n\t\timage.setPixels (rect.__toLimeRectangle (), byteArray, ARGB32);\r\n\t\t__usingPingPongTexture = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setVector (rect:Rectangle, inputVector:Vector<UInt>) {\r\n\t\t\r\n\t\tvar byteArray = new ByteArray ();\r\n\t\tbyteArray.length = inputVector.length * 4;\r\n\t\t\r\n\t\tfor (color in inputVector) {\r\n\t\t\t\r\n\t\t\tbyteArray.writeUnsignedInt (color);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tbyteArray.position = 0;\r\n\t\tsetPixels (rect, byteArray);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function threshold (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, operation:String, threshold:Int, color:Int = 0x00000000, mask:Int = 0xFFFFFFFF, copySource:Bool = false):Int {\r\n\t\t\r\n\t\tif (sourceBitmapData == null || sourceRect == null || destPoint == null || sourceRect.x > sourceBitmapData.width || sourceRect.y > sourceBitmapData.height || destPoint.x > width || destPoint.y > height) return 0;\r\n\t\t\r\n\t\treturn image.threshold (sourceBitmapData.image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), operation, threshold, color, mask, copySource, ARGB32);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function unlock (changeRect:Rectangle = null):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function __asRenderTexture (width:Int = 0, height:Int = 0):BitmapData {\r\n\t\t\r\n\t\tvar b = new BitmapData (0, 0);\r\n\t\tb.__resize (width, height);\r\n\t\t\r\n\t\treturn b;\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __createUVs (\tx0:Float = 0, y0:Float = 0, x1:Float = 1, y1:Float = 0, x2:Float = 1, y2:Float = 1, x3:Float = 0, y3:Float = 1):Void {\r\n\t\t\r\n\t\tif (__uvData == null) __uvData = new TextureUvs();\r\n\t\t\r\n\t\t__uvData.x0 = x0;\r\n\t\t__uvData.y0 = y0;\r\n\t\t__uvData.x1 = x1;\r\n\t\t__uvData.y1 = y1;\r\n\t\t__uvData.x2 = x2;\r\n\t\t__uvData.y2 = y2;\r\n\t\t__uvData.x3 = x3;\r\n\t\t__uvData.y3 = y3;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __drawGL (renderSession:RenderSession, source:IBitmapDrawable, ?matrix:Matrix = null, ?colorTransform:ColorTransform = null, ?blendMode:BlendMode = null, ?clipRect:Rectangle = null, ?smoothing:Bool = false, ?drawSelf:Bool = false, ?clearBuffer:Bool = false, ?readPixels:Bool = false, ?powerOfTwo:Bool = true) {\r\n\t\t\r\n\t\t__pingPongTexture = GLBitmap.pushFramebuffer(renderSession, __pingPongTexture, rect, smoothing, transparent, clearBuffer, powerOfTwo);\r\n\t\tGLBitmap.drawBitmapDrawable(renderSession, drawSelf ? this : null, source, matrix, colorTransform, blendMode, clipRect);\r\n\t\tGLBitmap.popFramebuffer(renderSession, readPixels ? image : null);\r\n\t\t\r\n\t\tvar uv = @:privateAccess __pingPongTexture.renderTexture.__uvData;\r\n\t\t__createUVs(uv.x0, uv.y0, uv.x1, uv.y1, uv.x2, uv.y2, uv.x3, uv.y3);\r\n\t\t\r\n\t\t__isValid = true;\r\n\t\t__usingPingPongTexture = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function __fromBase64 (base64:String, type:String, ?onload:BitmapData -> Void):Void {\r\n\t\t\r\n\t\tImage.fromBase64 (base64, type, function (image) {\r\n\t\t\t\r\n\t\t\t__fromImage (image);\r\n\t\t\t\r\n\t\t\tif (onload != null) {\r\n\t\t\t\t\r\n\t\t\t\tonload (this);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function __fromBytes (bytes:ByteArray, rawAlpha:ByteArray = null, ?onload:BitmapData -> Void):Void {\r\n\t\t\r\n\t\tImage.fromBytes (bytes, function (image) {\r\n\t\t\t\r\n\t\t\t__fromImage (image);\r\n\t\t\t\r\n\t\t\tif (rawAlpha != null) {\r\n\t\t\t\t\r\n\t\t\t\t#if (js && html5)\r\n\t\t\t\tImageCanvasUtil.convertToCanvas (image);\r\n\t\t\t\tImageCanvasUtil.createImageData (image);\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\tvar data = image.buffer.data;\r\n\t\t\t\t\r\n\t\t\t\tfor (i in 0...rawAlpha.length) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata[i * 4 + 3] = rawAlpha.readUnsignedByte ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\timage.dirty = true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (onload != null) {\r\n\t\t\t\t\r\n\t\t\t\tonload (this);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __fromFile (path:String, onload:BitmapData -> Void, onerror:Void -> Void):Void {\r\n\t\t\r\n\t\tImage.fromFile (path, function (image) {\r\n\t\t\t\r\n\t\t\t__fromImage (image);\r\n\t\t\t\r\n\t\t\tif (onload != null) {\r\n\t\t\t\t\r\n\t\t\t\tonload (this);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}, onerror);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __fromImage (image:Image):Void {\r\n\t\t\r\n\t\tif (image != null && image.buffer != null) {\r\n\t\t\t\r\n\t\t\tthis.image = image;\r\n\t\t\t\r\n\t\t\twidth = image.width;\r\n\t\t\theight = image.height;\r\n\t\t\trect = new Rectangle (0, 0, image.width, image.height);\r\n\t\t\t\r\n\t\t\t#if sys\r\n\t\t\timage.format = BGRA32;\r\n\t\t\timage.premultiplied = true;\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\t__isValid = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __renderCairo (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (!__isValid) return;\r\n\t\t\r\n\t\tvar cairo = renderSession.cairo;\r\n\t\t\r\n\t\tif (__worldTransform == null) __worldTransform = new Matrix ();\r\n\t\t\r\n\t\t//context.globalAlpha = 1;\r\n\t\tvar transform = __worldTransform;\r\n\t\t\r\n\t\tif (renderSession.roundPixels) {\r\n\t\t\t\r\n\t\t\tvar matrix = transform.__toMatrix3 ();\r\n\t\t\tmatrix.tx = Math.round (matrix.tx);\r\n\t\t\tmatrix.ty = Math.round (matrix.ty);\r\n\t\t\tcairo.matrix = matrix;\r\n\t\t\t//context.setTransform (transform.a, transform.b, transform.c, transform.d, Std.int (transform.tx), Std.int (transform.ty));\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tcairo.matrix = transform.__toMatrix3 ();\r\n\t\t\t//context.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar surface = getSurface ();\r\n\t\t\r\n\t\tif (surface != null) {\r\n\t\t\t\r\n\t\t\tvar pattern = CairoPattern.createForSurface (surface);\r\n\t\t\t\r\n\t\t\tif (cairo.antialias == NONE) {\r\n\t\t\t\t\r\n\t\t\t\tpattern.filter = CairoFilter.NEAREST;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tpattern.filter = CairoFilter.GOOD;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcairo.source = pattern;\r\n\t\t\tcairo.paint ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __renderCairoMask (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __renderCanvas (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tif (!__isValid) return;\r\n\t\t\r\n\t\tImageCanvasUtil.sync (image, false);\r\n\t\t\r\n\t\tvar context = renderSession.context;\r\n\t\t\r\n\t\tif (__worldTransform == null) __worldTransform = new Matrix ();\r\n\t\t\r\n\t\tcontext.globalAlpha = 1;\r\n\t\tvar transform = __worldTransform;\r\n\t\t\r\n\t\tif (renderSession.roundPixels) {\r\n\t\t\t\r\n\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, Std.int (transform.tx), Std.int (transform.ty));\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tcontext.drawImage (image.src, 0, 0);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __renderCanvasMask (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __renderGL (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\trenderSession.spriteBatch.renderBitmapData (this, false, __worldTransform, __worldColorTransform, __worldColorTransform.alphaMultiplier, __blendMode, __shader);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tfunction __resize (width:Int, height:Int) {\r\n\t\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.rect.width = width;\r\n\t\tthis.rect.height = height;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __sync ():Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tImageCanvasUtil.sync (image, false);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __updateChildren (transformOnly:Bool):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __updateMask (maskGraphics:Graphics):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __updateTransforms (overrideTransform:Matrix = null):Void {\r\n\t\t\r\n\t\tif (overrideTransform == null) {\r\n\t\t\t\r\n\t\t\t__worldTransform.identity ();\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t__worldTransform = overrideTransform;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass TextureUvs {\r\n\t\r\n\t\r\n\tpublic var x0:Float = 0;\r\n\tpublic var x1:Float = 0;\r\n\tpublic var x2:Float = 0;\r\n\tpublic var x3:Float = 0;\r\n\tpublic var y0:Float = 0;\r\n\tpublic var y1:Float = 0;\r\n\tpublic var y2:Float = 0;\r\n\tpublic var y3:Float = 0;\r\n\t\r\n\tpublic inline function reset():Void {\r\n\t\tx0 = x1 = x2 = x3 = y0 = y1 = y2 = y3 = 0;\r\n\t}\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef BitmapData = openfl._legacy.display.BitmapData;\r\n#end\r\n","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract BlendMode(Null<Int>) {\r\n\t\r\n\tpublic var ADD = 0;\r\n\tpublic var ALPHA = 1;\r\n\tpublic var DARKEN = 2;\r\n\tpublic var DIFFERENCE = 3;\r\n\tpublic var ERASE = 4;\r\n\tpublic var HARDLIGHT = 5;\r\n\tpublic var INVERT = 6;\r\n\tpublic var LAYER = 7;\r\n\tpublic var LIGHTEN = 8;\r\n\tpublic var MULTIPLY = 9;\r\n\tpublic var NORMAL = 10;\r\n\tpublic var OVERLAY = 11;\r\n\tpublic var SCREEN = 12;\r\n\tpublic var SHADER = 13;\r\n\tpublic var SUBTRACT = 14;\r\n\t\r\n\t@:from private static function fromString (value:String):BlendMode {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"add\": ADD;\r\n\t\t\tcase \"alpha\": ALPHA;\r\n\t\t\tcase \"darken\": DARKEN;\r\n\t\t\tcase \"difference\": DIFFERENCE;\r\n\t\t\tcase \"erase\": ERASE;\r\n\t\t\tcase \"hardlight\": HARDLIGHT;\r\n\t\t\tcase \"invert\": INVERT;\r\n\t\t\tcase \"layer\": LAYER;\r\n\t\t\tcase \"lighten\": LIGHTEN;\r\n\t\t\tcase \"multiply\": MULTIPLY;\r\n\t\t\tcase \"normal\": NORMAL;\r\n\t\t\tcase \"overlay\": OVERLAY;\r\n\t\t\tcase \"screen\": SCREEN;\r\n\t\t\tcase \"shader\": SHADER;\r\n\t\t\tcase \"subtract\": SUBTRACT;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase BlendMode.ADD: \"add\";\r\n\t\t\tcase BlendMode.ALPHA: \"alpha\";\r\n\t\t\tcase BlendMode.DARKEN: \"darken\";\r\n\t\t\tcase BlendMode.DIFFERENCE: \"difference\";\r\n\t\t\tcase BlendMode.ERASE: \"erase\";\r\n\t\t\tcase BlendMode.HARDLIGHT: \"hardlight\";\r\n\t\t\tcase BlendMode.INVERT: \"invert\";\r\n\t\t\tcase BlendMode.LAYER: \"layer\";\r\n\t\t\tcase BlendMode.LIGHTEN: \"lighten\";\r\n\t\t\tcase BlendMode.MULTIPLY: \"multiply\";\r\n\t\t\tcase BlendMode.NORMAL: \"normal\";\r\n\t\t\tcase BlendMode.OVERLAY: \"overlay\";\r\n\t\t\tcase BlendMode.SCREEN: \"screen\";\r\n\t\t\tcase BlendMode.SHADER: \"shader\";\r\n\t\t\tcase BlendMode.SUBTRACT: \"subtract\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef BlendMode = openfl._legacy.display.BlendMode;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract CapsStyle(Null<Int>) {\r\n\t\r\n\tpublic var NONE = 0;\r\n\tpublic var ROUND = 1;\r\n\tpublic var SQUARE = 2;\r\n\t\r\n\t@:from private static function fromString (value:String):CapsStyle {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"none\": NONE;\r\n\t\t\tcase \"round\": ROUND;\r\n\t\t\tcase \"square\": SQUARE;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase CapsStyle.NONE: \"none\";\r\n\t\t\tcase CapsStyle.ROUND: \"round\";\r\n\t\t\tcase CapsStyle.SQUARE: \"square\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef CapsStyle = openfl._legacy.display.CapsStyle;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport openfl.display.DisplayObject;\r\nimport openfl.display.Sprite;\r\n\r\n\r\nclass DirectRenderer extends #if flash Sprite #else DisplayObject #end {\r\n\t\r\n\t\r\n\tpublic var render (get, set):Dynamic;\r\n\t\r\n\t@:noCompletion private var __render:Dynamic;\r\n\t\r\n\t\r\n\tpublic function new (type:String = \"DirectRenderer\") {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t@:noCompletion private function get_render ():Dynamic {\r\n\t\t\r\n\t\treturn __render;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function set_render (value:Dynamic):Dynamic {\r\n\t\t\r\n\t\treturn __render = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef DirectRenderer = openfl._legacy.display.DirectRenderer;\r\n#end","package openfl.display;\r\n\r\n\r\nimport openfl.events.EventDispatcher;\r\n\r\n\r\n@:final class FrameLabel extends EventDispatcher {\r\n\t\r\n\t\r\n\tpublic var frame (get, null):Int;\r\n\tpublic var name (get, null):String;\r\n\t\r\n\tprivate var __frame:Int;\r\n\tprivate var __name:String;\r\n\t\r\n\t\r\n\tpublic function new (name:String, frame:Int) {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\t__name = name;\r\n\t\t__frame = frame;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_frame ():Int { return __frame; }\r\n\tprivate function get_name ():String { return __name; }\r\n\t\r\n\t\r\n}","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract GradientType(Null<Int>) {\r\n\t\r\n\tpublic var LINEAR = 0;\r\n\tpublic var RADIAL = 1;\r\n\t\r\n\t@:from private static function fromString (value:String):GradientType {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"linear\": LINEAR;\r\n\t\t\tcase \"radial\": RADIAL;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase GradientType.LINEAR: \"linear\";\r\n\t\t\tcase GradientType.RADIAL: \"radial\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef GradientType = openfl._legacy.display.GradientType;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport lime.graphics.cairo.Cairo;\r\nimport lime.graphics.Image;\r\nimport openfl._internal.renderer.cairo.CairoGraphics;\r\nimport openfl._internal.renderer.canvas.CanvasGraphics;\r\nimport openfl._internal.renderer.DrawCommandBuffer;\r\nimport openfl._internal.renderer.opengl.utils.RenderTexture;\r\nimport openfl.display.Shader;\r\nimport openfl.errors.ArgumentError;\r\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer;\r\nimport openfl._internal.renderer.opengl.utils.DrawPath;\r\nimport openfl.display.GraphicsPathCommand;\r\nimport openfl.display.GraphicsBitmapFill;\r\nimport openfl.display.GraphicsEndFill;\r\nimport openfl.display.GraphicsGradientFill;\r\nimport openfl.display.GraphicsPath;\r\nimport openfl.display.GraphicsSolidFill;\r\nimport openfl.display.GraphicsStroke;\r\nimport openfl.display.Tilesheet;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.Vector;\r\n\r\n#if (js && html5)\r\nimport js.html.CanvasElement;\r\nimport js.html.CanvasRenderingContext2D;\r\n#end\r\n\r\n@:access(openfl.geom.Matrix)\r\n@:access(openfl.geom.Rectangle)\r\n\r\n\r\n@:final class Graphics {\r\n\t\r\n\t\r\n\tpublic static inline var TILE_SCALE = 0x0001;\r\n\tpublic static inline var TILE_ROTATION = 0x0002;\r\n\tpublic static inline var TILE_RGB = 0x0004;\r\n\tpublic static inline var TILE_ALPHA = 0x0008;\r\n\tpublic static inline var TILE_TRANS_2x2 = 0x0010;\r\n\tpublic static inline var TILE_RECT = 0x0020;\r\n\tpublic static inline var TILE_ORIGIN = 0x0040;\r\n\t\r\n\tpublic static inline var TILE_BLEND_NORMAL = 0x00000000;\r\n\tpublic static inline var TILE_BLEND_ADD = 0x00010000;\r\n\tpublic static inline var TILE_BLEND_MULTIPLY = 0x00020000;\r\n\tpublic static inline var TILE_BLEND_SCREEN = 0x00040000;\r\n\tpublic static inline var TILE_BLEND_SUBTRACT = 0x00080000;\r\n\tpublic static inline var TILE_BLEND_DARKEN = 0x00100000;\r\n\tpublic static inline var TILE_BLEND_LIGHTEN = 0x00200000;\r\n\tpublic static inline var TILE_BLEND_OVERLAY = 0x00400000;\r\n\tpublic static inline var TILE_BLEND_HARDLIGHT = 0x00800000;\r\n\tpublic static inline var TILE_BLEND_DIFFERENCE = 0x01000000;\r\n\tpublic static inline var TILE_BLEND_INVERT = 0x02000000;\r\n\t\r\n\tpublic var __hardware:Bool;\r\n\t\r\n\tprivate var __bounds:Rectangle;\r\n\tprivate var __commands:DrawCommandBuffer;\r\n\tprivate var __dirty (default, set):Bool = true;\r\n\tprivate var __glStack:Array<GLStack> = [];\r\n\tprivate var __drawPaths:Array<DrawPath>;\r\n\tprivate var __image:Image;\r\n\tprivate var __positionX:Float;\r\n\tprivate var __positionY:Float;\r\n\tprivate var __strokePadding:Float;\r\n\tprivate var __transformDirty:Bool;\r\n\tprivate var __visible:Bool;\r\n\tprivate var __cachedTexture:RenderTexture;\r\n\tprivate var __owner:DisplayObject;\r\n\t\r\n\t#if (js && html5)\r\n\tprivate var __canvas:CanvasElement;\r\n\tprivate var __context:CanvasRenderingContext2D;\r\n\t#else\r\n\tprivate var __cairo:Cairo;\r\n\t#end\r\n\t\r\n\tprivate var __bitmap:BitmapData;\r\n\t\r\n\t\r\n\tprivate function new () {\r\n\t\t\r\n\t\t__commands = new DrawCommandBuffer ();\r\n\t\t__strokePadding = 0;\r\n\t\t__positionX = 0;\r\n\t\t__positionY = 0;\r\n\t\t__hardware = true;\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tmoveTo (0, 0);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function beginBitmapFill (bitmap:BitmapData, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false) {\r\n\t\t\r\n\t\t__commands.beginBitmapFill(bitmap, matrix != null ? matrix.clone () : null, repeat, smooth);\r\n\t\t\r\n\t\t__visible = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function beginFill (color:Int = 0, alpha:Float = 1):Void {\r\n\t\t\r\n\t\t__commands.beginFill (color & 0xFFFFFF, alpha);\r\n\t\t\r\n\t\tif (alpha > 0) __visible = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function beginGradientFill (type:GradientType, colors:Array<Int>, alphas:Array<Float>, ratios:Array<Int>, matrix:Matrix = null, spreadMethod:SpreadMethod = SpreadMethod.PAD, interpolationMethod:InterpolationMethod = InterpolationMethod.RGB, focalPointRatio:Float = 0):Void {\r\n\t\t\r\n\t\t__commands.beginGradientFill (type, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio);\r\n\t\t__hardware = false;\r\n\t\t\r\n\t\tfor (alpha in alphas) {\r\n\t\t\t\r\n\t\t\tif (alpha > 0) {\r\n\t\t\t\t\r\n\t\t\t\t__visible = true;\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clear ():Void {\r\n\t\t\r\n\t\t__commands.clear();\r\n\t\t__strokePadding = 0;\r\n\t\t\r\n\t\tif (__bounds != null) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t__transformDirty = true;\r\n\t\t\t__bounds = null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__visible = false;\r\n\t\t__hardware = true;\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tmoveTo (0, 0);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function copyFrom (sourceGraphics:Graphics):Void {\r\n\t\t\r\n\t\t__bounds = sourceGraphics.__bounds != null ? sourceGraphics.__bounds.clone () : null;\r\n\t\t__commands = sourceGraphics.__commands.copy ();\r\n\t\t__dirty = true;\r\n\t\t__strokePadding = sourceGraphics.__strokePadding;\r\n\t\t__positionX = sourceGraphics.__positionX;\r\n\t\t__positionY = sourceGraphics.__positionY;\r\n\t\t__transformDirty = true;\r\n\t\t__visible = sourceGraphics.__visible;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function cubicCurveTo (controlX1:Float, controlY1:Float, controlX2:Float, controlY2:Float, anchorX:Float, anchorY:Float):Void {\r\n\t\t\r\n\t\t__inflateBounds (__positionX - __strokePadding, __positionY - __strokePadding);\r\n\t\t__inflateBounds (__positionX + __strokePadding, __positionY + __strokePadding);\r\n\t\t\r\n\t\tvar ix1, iy1, ix2, iy2;\r\n\t\t\r\n\t\tix1 = anchorX;\r\n\t\tix2 = anchorX;\r\n\t\t\r\n\t\tif (!(((controlX1 < anchorX && controlX1 > __positionX) || (controlX1 > anchorX && controlX1 < __positionX)) && ((controlX2 < anchorX && controlX2 > __positionX) || (controlX2 > anchorX && controlX2 < __positionX)))) {\r\n\t\t\t\r\n\t\t\tvar u = (2 * __positionX - 4 * controlX1 + 2 * controlX2);\r\n\t\t\tvar v = (controlX1 - __positionX);\r\n\t\t\tvar w = (-__positionX + 3 * controlX1 + anchorX - 3 * controlX2);\r\n\t\t\t\r\n\t\t\tvar t1 = (-u + Math.sqrt (u * u - 4 * v * w)) / (2 * w);\r\n\t\t\tvar t2 = (-u - Math.sqrt (u * u - 4 * v * w)) / (2 * w);\r\n\t\t\t\r\n\t\t\tif (t1 > 0 && t1 < 1) {\r\n\t\t\t\t\r\n\t\t\t\tix1 = __calculateBezierCubicPoint (t1, __positionX, controlX1, controlX2, anchorX);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (t2 > 0 && t2 < 1) {\r\n\t\t\t\t\r\n\t\t\t\tix2 = __calculateBezierCubicPoint (t2, __positionX, controlX1, controlX2, anchorX);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tiy1 = anchorY;\r\n\t\tiy2 = anchorY;\r\n\t\t\r\n\t\tif (!(((controlY1 < anchorY && controlY1 > __positionX) || (controlY1 > anchorY && controlY1 < __positionX)) && ((controlY2 < anchorY && controlY2 > __positionX) || (controlY2 > anchorY && controlY2 < __positionX)))) {\r\n\t\t\t\r\n\t\t\tvar u = (2 * __positionX - 4 * controlY1 + 2 * controlY2);\r\n\t\t\tvar v = (controlY1 - __positionX);\r\n\t\t\tvar w = (-__positionX + 3 * controlY1 + anchorY - 3 * controlY2);\r\n\t\t\t\r\n\t\t\tvar t1 = (-u + Math.sqrt (u * u - 4 * v * w)) / (2 * w);\r\n\t\t\tvar t2 = (-u - Math.sqrt (u * u - 4 * v * w)) / (2 * w);\r\n\t\t\t\r\n\t\t\tif (t1 > 0 && t1 < 1) {\r\n\t\t\t\t\r\n\t\t\t\tiy1 = __calculateBezierCubicPoint (t1, __positionX, controlY1, controlY2, anchorY);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (t2 > 0 && t2 < 1) {\r\n\t\t\t\t\r\n\t\t\t\tiy2 = __calculateBezierCubicPoint (t2, __positionX, controlY1, controlY2, anchorY);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__inflateBounds (ix1 - __strokePadding, iy1 - __strokePadding);\r\n\t\t__inflateBounds (ix1 + __strokePadding, iy1 + __strokePadding);\r\n\t\t__inflateBounds (ix2 - __strokePadding, iy2 - __strokePadding);\r\n\t\t__inflateBounds (ix2 + __strokePadding, iy2 + __strokePadding);\r\n\t\t\r\n\t\t__positionX = anchorX;\r\n\t\t__positionY = anchorY;\r\n\t\t\r\n\t\t__commands.cubicCurveTo (controlX1, controlY1, controlX2, controlY2, anchorX, anchorY);\r\n\t\t\r\n\t\t__hardware = false;\r\n\t\t__dirty = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function curveTo (controlX:Float, controlY:Float, anchorX:Float, anchorY:Float):Void {\r\n\t\t\r\n\t\t__inflateBounds (__positionX - __strokePadding, __positionY - __strokePadding);\r\n\t\t__inflateBounds (__positionX + __strokePadding, __positionY + __strokePadding);\r\n\t\t\r\n\t\tvar ix, iy;\r\n\t\t\r\n\t\tif ((controlX < anchorX && controlX > __positionX) || (controlX > anchorX && controlX < __positionX)) {\r\n\t\t\t\r\n\t\t\tix = anchorX;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar tx = ((__positionX - controlX) / (__positionX - 2 * controlX + anchorX));\r\n\t\t\tix = __calculateBezierQuadPoint (tx, __positionX, controlX, anchorX);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif ((controlY < anchorY && controlY > __positionY) || (controlY > anchorY && controlY < __positionY)) {\r\n\t\t\t\r\n\t\t\tiy = anchorY;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar ty = ((__positionY - controlY) / (__positionY - (2 * controlY) + anchorY));\r\n\t\t\tiy = __calculateBezierQuadPoint (ty, __positionY, controlY, anchorY);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__inflateBounds (ix - __strokePadding, iy - __strokePadding);\r\n\t\t__inflateBounds (ix + __strokePadding, iy + __strokePadding);\r\n\t\t\r\n\t\t__positionX = anchorX;\r\n\t\t__positionY = anchorY;\r\n\t\t\r\n\t\t__commands.curveTo (controlX, controlY, anchorX, anchorY);\r\n\t\t\r\n\t\t__hardware = false;\r\n\t\t__dirty = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawCircle (x:Float, y:Float, radius:Float):Void {\r\n\t\t\r\n\t\tif (radius <= 0) return;\r\n\t\t\r\n\t\t__inflateBounds (x - radius - __strokePadding, y - radius - __strokePadding);\r\n\t\t__inflateBounds (x + radius + __strokePadding, y + radius + __strokePadding);\r\n\t\t\r\n\t\t__commands.drawCircle (x, y, radius);\r\n\t\t\r\n\t\t__hardware = false;\r\n\t\t__dirty = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawEllipse (x:Float, y:Float, width:Float, height:Float):Void {\r\n\t\t\r\n\t\tif (width <= 0 || height <= 0) return;\r\n\t\t\r\n\t\t__inflateBounds (x - __strokePadding, y - __strokePadding);\r\n\t\t__inflateBounds (x + width + __strokePadding, y + height + __strokePadding);\r\n\t\t\r\n\t\t__commands.drawEllipse (x, y, width, height);\r\n\t\t\r\n\t\t__hardware = false;\r\n\t\t__dirty = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawGraphicsData (graphicsData:Vector<IGraphicsData>):Void {\r\n\t\t\r\n\t\tvar fill:GraphicsSolidFill;\r\n\t\tvar bitmapFill:GraphicsBitmapFill;\r\n\t\tvar gradientFill:GraphicsGradientFill;\r\n\t\tvar stroke:GraphicsStroke;\r\n\t\tvar path:GraphicsPath;\r\n\t\t\r\n\t\tfor (graphics in graphicsData) {\r\n\t\t\t\r\n\t\t\tif (Std.is (graphics, GraphicsSolidFill)) {\r\n\t\t\t\t\r\n\t\t\t\tfill = cast graphics;\r\n\t\t\t\tbeginFill (fill.color, fill.alpha);\r\n\t\t\t\t\r\n\t\t\t} else if (Std.is (graphics, GraphicsBitmapFill)) {\r\n\t\t\t\t\r\n\t\t\t\tbitmapFill = cast graphics;\r\n\t\t\t\tbeginBitmapFill (bitmapFill.bitmapData, bitmapFill.matrix, bitmapFill.repeat, bitmapFill.smooth);\r\n\t\t\t\t\r\n\t\t\t} else if (Std.is (graphics, GraphicsGradientFill)) {\r\n\t\t\t\t\r\n\t\t\t\tgradientFill = cast graphics;\r\n\t\t\t\tbeginGradientFill (gradientFill.type, gradientFill.colors, gradientFill.alphas, gradientFill.ratios, gradientFill.matrix, gradientFill.spreadMethod, gradientFill.interpolationMethod, gradientFill.focalPointRatio);\r\n\t\t\t\t\r\n\t\t\t} else if (Std.is (graphics, GraphicsStroke)) {\r\n\t\t\t\t\r\n\t\t\t\tstroke = cast graphics;\r\n\t\t\t\t\r\n\t\t\t\tif (Std.is (stroke.fill, GraphicsSolidFill)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tfill = cast stroke.fill;\r\n\t\t\t\t\tlineStyle (stroke.thickness, fill.color, fill.alpha, stroke.pixelHinting, stroke.scaleMode, stroke.caps, stroke.joints, stroke.miterLimit);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tlineStyle (stroke.thickness, 0, 1, stroke.pixelHinting, stroke.scaleMode, stroke.caps, stroke.joints, stroke.miterLimit);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (Std.is (stroke.fill, GraphicsBitmapFill)) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbitmapFill = cast stroke.fill;\r\n\t\t\t\t\t\tlineBitmapStyle (bitmapFill.bitmapData, bitmapFill.matrix, bitmapFill.repeat, bitmapFill.smooth);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else if (Std.is (stroke.fill, GraphicsGradientFill)) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tgradientFill = cast stroke.fill;\r\n\t\t\t\t\t\tlineGradientStyle (gradientFill.type, gradientFill.colors, gradientFill.alphas, gradientFill.ratios, gradientFill.matrix, gradientFill.spreadMethod, gradientFill.interpolationMethod, gradientFill.focalPointRatio);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else if (Std.is (graphics, GraphicsPath)) {\r\n\t\t\t\t\r\n\t\t\t\tpath = cast graphics;\r\n\t\t\t\tdrawPath (path.commands, path.data, path.winding);\r\n\t\t\t\t\r\n\t\t\t} else if (Std.is (graphics, GraphicsEndFill)) {\r\n\t\t\t\t\r\n\t\t\t\tendFill ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawPath (commands:Vector<Int>, data:Vector<Float>, winding:GraphicsPathWinding = GraphicsPathWinding.EVEN_ODD):Void {\r\n\t\t\r\n\t\tvar dataIndex = 0;\r\n\t\t\r\n\t\tfor (command in commands) {\r\n\t\t\t\r\n\t\t\tswitch (command) {\r\n\t\t\t\t\r\n\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tmoveTo (data[dataIndex], data[dataIndex + 1]);\r\n\t\t\t\t\tdataIndex += 2;\r\n\t\t\t\t\t\r\n\t\t\t\tcase GraphicsPathCommand.LINE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tlineTo (data[dataIndex], data[dataIndex + 1]);\r\n\t\t\t\t\tdataIndex += 2;\r\n\t\t\t\t\r\n\t\t\t\tcase GraphicsPathCommand.WIDE_MOVE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tmoveTo(data[dataIndex + 2], data[dataIndex + 3]); break;\r\n\t\t\t\t\tdataIndex += 4;\r\n\t\t\t\t\r\n\t\t\t\tcase GraphicsPathCommand.WIDE_LINE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tlineTo(data[dataIndex + 2], data[dataIndex + 3]); break;\r\n\t\t\t\t\tdataIndex += 4;\r\n\t\t\t\t\t\r\n\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tcurveTo (data[dataIndex], data[dataIndex + 1], data[dataIndex + 2], data[dataIndex + 3]);\r\n\t\t\t\t\tdataIndex += 4;\r\n\t\t\t\t\t\r\n\t\t\t\tcase GraphicsPathCommand.CUBIC_CURVE_TO:\r\n\t\t\t\t\t\r\n\t\t\t\t\tcubicCurveTo (data[dataIndex], data[dataIndex + 1], data[dataIndex + 2], data[dataIndex + 3], data[dataIndex + 4], data[dataIndex + 5]);\r\n\t\t\t\t\tdataIndex += 6;\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawRect (x:Float, y:Float, width:Float, height:Float):Void {\r\n\t\t\r\n\t\tif (width <= 0 || height <= 0) return;\r\n\t\t\r\n\t\t__inflateBounds (x - __strokePadding, y - __strokePadding);\r\n\t\t__inflateBounds (x + width + __strokePadding, y + height + __strokePadding);\r\n\t\t\r\n\t\t__commands.drawRect (x, y, width, height);\r\n\t\t\r\n\t\t__dirty = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawRoundRect (x:Float, y:Float, width:Float, height:Float, ellipseWidth:Float, ellipseHeight:Null<Float> = null):Void {\r\n\t\t\r\n\t\tif (width <= 0 || height <= 0) return;\r\n\t\t\r\n\t\t__inflateBounds (x - __strokePadding, y - __strokePadding);\r\n\t\t__inflateBounds (x + width + __strokePadding, y + height + __strokePadding);\r\n\t\t\r\n\t\t__commands.drawRoundRect (x, y, width, height, ellipseWidth, ellipseHeight);\r\n\t\t\r\n\t\t__hardware = false;\r\n\t\t__dirty = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawRoundRectComplex (x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void {\r\n\t\t\r\n\t\topenfl.Lib.notImplemented (\"Graphics.drawRoundRectComplex\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawTiles (sheet:Tilesheet, tileData:Array<Float>, smooth:Bool = false, flags:Int = 0, ?shader:Shader, count:Int = -1):Void {\r\n\t\t\r\n\t\tvar useScale = (flags & Tilesheet.TILE_SCALE) > 0;\r\n\t\tvar useRotation = (flags & Tilesheet.TILE_ROTATION) > 0;\r\n\t\tvar useRGB = (flags & Tilesheet.TILE_RGB) > 0;\r\n\t\tvar useAlpha = (flags & Tilesheet.TILE_ALPHA) > 0;\r\n\t\tvar useTransform = (flags & Tilesheet.TILE_TRANS_2x2) > 0;\r\n\t\tvar useColorTransform = (flags & Tilesheet.TILE_TRANS_COLOR) > 0;\r\n\t\tvar useRect = (flags & Tilesheet.TILE_RECT) > 0;\r\n\t\tvar useOrigin = (flags & Tilesheet.TILE_ORIGIN) > 0;\r\n\t\t\r\n\t\tvar rect = openfl.geom.Rectangle.__temp;\r\n\t\tvar matrix = Matrix.__temp;\r\n\t\t\r\n\t\tvar numValues = 3;\r\n\t\tvar totalCount = count;\r\n\t\t\r\n\t\tif (count < 0) {\r\n\t\t\t\r\n\t\t\ttotalCount = tileData.length;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (useTransform || useScale || useRotation || useRGB || useAlpha || useColorTransform) {\r\n\t\t\t\r\n\t\t\tvar scaleIndex = 0;\r\n\t\t\tvar rotationIndex = 0;\r\n\t\t\tvar transformIndex = 0;\r\n\t\t\t\r\n\t\t\tif (useRect) { numValues = useOrigin ? 8 : 6; }\r\n\t\t\tif (useScale) { scaleIndex = numValues; numValues++; }\r\n\t\t\tif (useRotation) { rotationIndex = numValues; numValues++; }\r\n\t\t\tif (useTransform) { transformIndex = numValues; numValues += 4; }\r\n\t\t\tif (useRGB) { numValues += 3; }\r\n\t\t\tif (useAlpha) { numValues++; }\r\n\t\t\tif (useColorTransform) { numValues += 4; }\r\n\t\t\t\r\n\t\t\tvar itemCount = Std.int (totalCount / numValues);\r\n\t\t\tvar index = 0;\r\n\t\t\tvar cacheID = -1;\r\n\t\t\t\r\n\t\t\tvar x, y, id, scale, rotation, tileWidth, tileHeight, originX, originY;\r\n\t\t\tvar tile = null;\r\n\t\t\tvar tilePoint = null;\r\n\t\t\t\r\n\t\t\twhile (index < totalCount) {\r\n\t\t\t\t\r\n\t\t\t\tx = tileData[index];\r\n\t\t\t\ty = tileData[index + 1];\r\n\t\t\t\tid = (!useRect #if neko && tileData[index + 2] != null #end) ? Std.int (tileData[index + 2]) : -1;\r\n\t\t\t\tscale = 1.0;\r\n\t\t\t\trotation = 0.0;\r\n\t\t\t\t\r\n\t\t\t\tif (useScale) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tscale = tileData[index + scaleIndex];\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (useRotation) {\r\n\t\t\t\t\t\r\n\t\t\t\t\trotation = tileData[index + rotationIndex];\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (id < 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\ttile = null;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!useRect && cacheID != id) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcacheID = id;\r\n\t\t\t\t\t\ttile = sheet.__tileRects[id];\r\n\t\t\t\t\t\ttilePoint = sheet.__centerPoints[id];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else if (useRect) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttile = sheet.__rectTile;\r\n\t\t\t\t\t\ttile.setTo (tileData[index + 2], tileData[index + 3], tileData[index + 4], tileData[index + 5]);\r\n\t\t\t\t\t\ttilePoint = sheet.__point;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (useOrigin) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttilePoint.setTo (tileData[index + 6] / tile.width, tileData[index + 7] / tile.height);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttilePoint.setTo (0, 0);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (tile != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (useTransform) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trect.setTo (0, 0, tile.width, tile.height);\r\n\t\t\t\t\t\tmatrix.setTo (tileData[index + transformIndex], tileData[index + transformIndex + 1], tileData[index + transformIndex + 2], tileData[index + transformIndex + 3], 0, 0);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\toriginX = tilePoint.x * scale;\r\n\t\t\t\t\t\toriginY = tilePoint.y * scale;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tmatrix.translate (x - matrix.__transformX (originX, originY), y - matrix.__transformY (originX, originY));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trect.__transform (rect, matrix);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__inflateBounds (rect.x, rect.y);\r\n\t\t\t\t\t\t__inflateBounds (rect.right, rect.bottom);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttileWidth = tile.width * scale;\r\n\t\t\t\t\t\ttileHeight = tile.height * scale;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tx -= tilePoint.x * tileWidth;\r\n\t\t\t\t\t\ty -= tilePoint.y * tileHeight;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (rotation != 0) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\trect.setTo (0, 0, tileWidth, tileHeight);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tmatrix.identity ();\r\n\t\t\t\t\t\t\tmatrix.rotate (rotation);\r\n\t\t\t\t\t\t\tmatrix.translate (x, y);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\trect.__transform (rect, matrix);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t__inflateBounds (rect.x, rect.y);\r\n\t\t\t\t\t\t\t__inflateBounds (rect.right, rect.bottom);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t__inflateBounds (x, y);\r\n\t\t\t\t\t\t\t__inflateBounds (x + tileWidth, y + tileHeight);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tindex += numValues;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar x, y, id, tile, centerPoint, originX, originY;\r\n\t\t\tvar rect = openfl.geom.Rectangle.__temp;\r\n\t\t\tvar index = 0;\r\n\t\t\t\r\n\t\t\twhile (index < totalCount) {\r\n\t\t\t\t\r\n\t\t\t\tx = tileData[index++];\r\n\t\t\t\ty = tileData[index++];\r\n\t\t\t\t\r\n\t\t\t\t#if neko\r\n\t\t\t\tif (useRect) {\r\n\t\t\t\t\tid = -1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tid = (tileData[index] != null) ? Std.int (tileData[index]) : 0;\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\r\n\t\t\t\t#else\r\n\t\t\t\tid = (!useRect) ? Std.int (tileData[index++]) : -1;\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\toriginX = 0.0;\r\n\t\t\t\toriginY = 0.0;\r\n\t\t\t\t\r\n\t\t\t\tif (useRect) {\r\n\t\t\t\t\t\r\n\t\t\t\t\trect.setTo (tileData[index++], tileData[index++], tileData[index++], tileData[index++]);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (useOrigin) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\toriginX = tileData[index++];\r\n\t\t\t\t\t\toriginY = tileData[index++];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t__inflateBounds (x - originX, y - originY);\r\n\t\t\t\t\t__inflateBounds (x - originX + rect.width, y - originY + rect.height);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\ttile = sheet.__tileRects[id];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (tile != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcenterPoint = sheet.__centerPoints[id];\r\n\t\t\t\t\t\toriginX = centerPoint.x * tile.width;\r\n\t\t\t\t\t\toriginY = centerPoint.y * tile.height;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__inflateBounds (x - originX, y - originY);\r\n\t\t\t\t\t\t__inflateBounds (x - originX + tile.width, y - originY + tile.height);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t__commands.drawTiles (sheet, tileData, smooth, flags, shader, count);\r\n\t\t\r\n\t\t__dirty = true;\r\n\t\t__visible = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawTriangles (vertices:Vector<Float>, indices:Vector<Int> = null, uvtData:Vector<Float> = null, culling:TriangleCulling = TriangleCulling.NONE):Void {\r\n\t\t\r\n\t\tvar vlen = Std.int (vertices.length / 2);\r\n\t\t\r\n\t\tif (culling == null) {\r\n\t\t\t\r\n\t\t\tculling = NONE;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (indices == null) {\r\n\t\t\t\r\n\t\t\tif (vlen % 3 != 0) {\r\n\t\t\t\t\r\n\t\t\t\tthrow new ArgumentError (\"Not enough vertices to close a triangle.\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tindices = new Vector<Int> ();\r\n\t\t\t\r\n\t\t\tfor (i in 0...vlen) {\r\n\t\t\t\t\r\n\t\t\t\tindices.push (i);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__inflateBounds (0, 0);\r\n\t\t\r\n\t\tvar tmpx = Math.NEGATIVE_INFINITY;\r\n\t\tvar tmpy = Math.NEGATIVE_INFINITY;\r\n\t\tvar maxX = Math.NEGATIVE_INFINITY;\r\n\t\tvar maxY = Math.NEGATIVE_INFINITY;\r\n\t\t\r\n\t\tfor (i in 0...vlen) {\r\n\t\t\t\r\n\t\t\ttmpx = vertices[i * 2];\r\n\t\t\ttmpy = vertices[i * 2 + 1];\r\n\t\t\tif (maxX < tmpx) maxX = tmpx;\r\n\t\t\tif (maxY < tmpy) maxY = tmpy;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__inflateBounds (maxX, maxY);\r\n\t\t__commands.drawTriangles (vertices, indices, uvtData, culling);\r\n\t\t\r\n\t\t__dirty = true;\r\n\t\t__visible = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function endFill ():Void {\r\n\t\t\r\n\t\t__commands.endFill();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function lineBitmapStyle (bitmap:BitmapData, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false):Void {\r\n\t\t\r\n\t\t__commands.lineBitmapStyle (bitmap, matrix != null ? matrix.clone () : null, repeat, smooth);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function lineGradientStyle (type:GradientType, colors:Array<Int>, alphas:Array<Float>, ratios:Array<Int>, matrix:Matrix = null, spreadMethod:SpreadMethod = SpreadMethod.PAD, interpolationMethod:InterpolationMethod = InterpolationMethod.RGB, focalPointRatio:Float = 0):Void {\r\n\t\t\r\n\t\t__commands.lineGradientStyle (type, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function lineStyle (thickness:Null<Float> = null, color:Int = 0, alpha:Float = 1, pixelHinting:Bool = false, scaleMode:LineScaleMode = LineScaleMode.NORMAL, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:Float = 3):Void {\r\n\t\t\r\n\t\tif (thickness != null) {\r\n\t\t\t\r\n\t\t\tif (joints == JointStyle.MITER) {\r\n\t\t\t\t\r\n\t\t\t\tif (thickness > __strokePadding) __strokePadding = thickness;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tif (thickness / 2 > __strokePadding) __strokePadding = thickness / 2;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__commands.lineStyle (thickness, color, alpha, pixelHinting, scaleMode, caps, joints, miterLimit);\r\n\t\t\r\n\t\tif (thickness != null) __visible = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function lineTo (x:Float, y:Float):Void {\r\n\t\t\r\n\t\t// TODO: Should we consider the origin instead, instead of inflating in all directions?\r\n\t\t\r\n\t\t__inflateBounds (__positionX - __strokePadding, __positionY - __strokePadding);\r\n\t\t__inflateBounds (__positionX + __strokePadding, __positionY + __strokePadding);\r\n\t\t\r\n\t\t__positionX = x;\r\n\t\t__positionY = y;\r\n\t\t\r\n\t\t__inflateBounds (__positionX - __strokePadding, __positionY - __strokePadding);\r\n\t\t__inflateBounds (__positionX + __strokePadding * 2, __positionY + __strokePadding);\r\n\t\t\r\n\t\t__commands.lineTo (x, y);\r\n\t\t\r\n\t\t__hardware = false;\r\n\t\t__dirty = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function moveTo (x:Float, y:Float):Void {\r\n\t\t\r\n\t\t__positionX = x;\r\n\t\t__positionY = y;\r\n\t\t\r\n\t\t__commands.moveTo (x, y);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __calculateBezierCubicPoint (t:Float, p1:Float, p2:Float, p3:Float, p4:Float):Float {\r\n\t\t\r\n\t\tvar iT = 1 - t;\r\n\t\treturn p1 * (iT * iT * iT) + 3 * p2 * t * (iT * iT) + 3 * p3 * iT * (t * t) + p4 * (t * t * t);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __calculateBezierQuadPoint (t:Float, p1:Float, p2:Float, p3:Float):Float {\r\n\t\t\r\n\t\tvar iT = 1 - t;\r\n\t\treturn iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __getBounds (rect:Rectangle, matrix:Matrix):Void {\r\n\t\t\r\n\t\tif (__bounds == null) return;\r\n\t\t\r\n\t\tvar bounds = openfl.geom.Rectangle.__temp;\r\n\t\t__bounds.__transform (bounds, matrix);\r\n\t\trect.__expand (bounds.x, bounds.y, bounds.width, bounds.height);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __hitTest (x:Float, y:Float, shapeFlag:Bool, matrix:Matrix):Bool {\r\n\t\t\r\n\t\tif (__bounds == null) return false;\r\n\t\t\r\n\t\tvar px = matrix.__transformInverseX (x, y);\r\n\t\tvar py = matrix.__transformInverseY (x, y);\r\n\t\t\r\n\t\tif (px > __bounds.x && py > __bounds.y && __bounds.contains (px, py)) {\r\n\t\t\t\r\n\t\t\tif (shapeFlag) {\r\n\t\t\t\t\r\n\t\t\t\t#if (js && html5)\r\n\t\t\t\treturn CanvasGraphics.hitTest (this, px, py);\r\n\t\t\t\t#elseif (cpp || neko)\r\n\t\t\t\treturn CairoGraphics.hitTest (this, px, py);\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function __inflateBounds (x:Float, y:Float):Void {\r\n\t\t\r\n\t\tif (__bounds == null) {\r\n\t\t\t\r\n\t\t\t__bounds = new Rectangle (x, y, 0, 0);\r\n\t\t\t__transformDirty = true;\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (x < __bounds.x) {\r\n\t\t\t\r\n\t\t\t__bounds.width += __bounds.x - x;\r\n\t\t\t__bounds.x = x;\r\n\t\t\t__transformDirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (y < __bounds.y) {\r\n\t\t\t\r\n\t\t\t__bounds.height += __bounds.y - y;\r\n\t\t\t__bounds.y = y;\r\n\t\t\t__transformDirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (x > __bounds.x + __bounds.width) {\r\n\t\t\t\r\n\t\t\t__bounds.width = x - __bounds.x;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (y > __bounds.y + __bounds.height) {\r\n\t\t\t\r\n\t\t\t__bounds.height = y - __bounds.y;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function set___dirty (value:Bool):Bool {\r\n\t\t\r\n\t\tif (value && __owner != null) {\r\n\t\t\t\r\n\t\t\t@:privateAccess __owner.__setRenderDirty();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __dirty = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Graphics = openfl._legacy.display.Graphics;\r\n#end\r\n","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport openfl.display.IGraphicsData;\r\nimport openfl.display.IGraphicsFill;\r\nimport openfl.geom.Matrix;\r\nimport openfl.Lib;\r\n\r\n\r\n@:final class GraphicsBitmapFill implements IGraphicsData implements IGraphicsFill {\r\n\t\r\n\t\r\n\tpublic var bitmapData:BitmapData;\r\n\tpublic var matrix:Matrix;\r\n\tpublic var repeat:Bool;\r\n\tpublic var smooth:Bool;\r\n\t\r\n\tpublic var __graphicsDataType (default, null):GraphicsDataType;\r\n\tpublic var __graphicsFillType (default, null):GraphicsFillType;\r\n\t\r\n\t\r\n\tpublic function new (bitmapData:BitmapData = null, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false) {\r\n\t\t\r\n\t\tthis.bitmapData = bitmapData;\r\n\t\tthis.matrix = matrix;\r\n\t\tthis.repeat = repeat;\r\n\t\tthis.smooth = smooth;\r\n\t\t\r\n\t\tthis.__graphicsDataType = BITMAP;\r\n\t\tthis.__graphicsFillType = BITMAP_FILL;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef GraphicsBitmapFill = openfl._legacy.display.GraphicsBitmapFill;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport openfl.display.IGraphicsData;\r\nimport openfl.display.IGraphicsFill;\r\n\r\n\r\n@:final class GraphicsEndFill implements IGraphicsData implements IGraphicsFill {\r\n\t\r\n\t\r\n\tpublic var __graphicsDataType (default, null):GraphicsDataType;\r\n\tpublic var __graphicsFillType (default, null):GraphicsFillType;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tthis.__graphicsDataType = END;\r\n\t\tthis.__graphicsFillType = END_FILL;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef GraphicsEndFill = openfl._legacy.display.GraphicsEndFill;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport openfl.display.IGraphicsData;\r\nimport openfl.display.IGraphicsFill;\r\nimport openfl.geom.Matrix;\r\n\r\n\r\n@:final class GraphicsGradientFill implements IGraphicsData implements IGraphicsFill {\r\n\t\r\n\t\r\n\tpublic var alphas:Array<Float>;\r\n\tpublic var colors:Array<Int>;\r\n\tpublic var focalPointRatio:Float;\r\n\tpublic var interpolationMethod:InterpolationMethod;\r\n\tpublic var matrix:Matrix;\r\n\tpublic var ratios:Array<Int>;\r\n\tpublic var spreadMethod:SpreadMethod;\r\n\tpublic var type:GradientType;\r\n\t\r\n\tpublic var __graphicsDataType (default, null):GraphicsDataType;\r\n\tpublic var __graphicsFillType (default, null):GraphicsFillType;\r\n\t\r\n\t\r\n\tpublic function new (type:GradientType = null, colors:Array<Int> = null, alphas:Array<Float> = null, ratios:Array<Int> = null, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:Float = 0) {\r\n\t\t\r\n\t\tif (type == null) {\r\n\t\t\t\r\n\t\t\ttype = GradientType.LINEAR;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (spreadMethod == null) {\r\n\t\t\t\r\n\t\t\tspreadMethod = SpreadMethod.PAD;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (interpolationMethod == null) {\r\n\t\t\t\r\n\t\t\tinterpolationMethod = InterpolationMethod.RGB;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.type = type;\r\n\t\tthis.colors = colors;\r\n\t\tthis.alphas = alphas;\r\n\t\tthis.ratios = ratios;\r\n\t\tthis.matrix = matrix;\r\n\t\tthis.spreadMethod = spreadMethod;\r\n\t\tthis.interpolationMethod = interpolationMethod;\r\n\t\tthis.focalPointRatio = focalPointRatio;\r\n\t\tthis.__graphicsDataType = GRADIENT;\r\n\t\tthis.__graphicsFillType = GRADIENT_FILL;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef GraphicsGradientFill = openfl._legacy.display.GraphicsGradientFill;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport openfl.display.IGraphicsData;\r\nimport openfl.Vector;\r\n\r\n\r\n@:final class GraphicsPath implements IGraphicsData implements IGraphicsPath {\r\n\t\r\n\t\r\n\tpublic var commands:Vector<Int>;\r\n\tpublic var data:Vector<Float>;\r\n\tpublic var winding:GraphicsPathWinding;\r\n\t\r\n\tpublic var __graphicsDataType (default, null):GraphicsDataType;\r\n\t\r\n\t\r\n\tpublic function new (commands:Vector<Int> = null, data:Vector<Float> = null, winding:GraphicsPathWinding = null) {\r\n\t\t\r\n\t\tif (winding == null) {\r\n\t\t\t\r\n\t\t\twinding = GraphicsPathWinding.EVEN_ODD;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.commands = commands;\r\n\t\tthis.data = data;\r\n\t\tthis.winding = winding;\r\n\t\tthis.__graphicsDataType = PATH;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function curveTo (controlX:Float, controlY:Float, anchorX:Float, anchorY:Float):Void {\r\n\t\t\r\n\t\tif (this.commands != null && this.data != null) {\r\n\t\t\t\r\n\t\t\tthis.commands.push (GraphicsPathCommand.CURVE_TO);\r\n\t\t\tthis.data.push (anchorX);\r\n\t\t\tthis.data.push (anchorY);\r\n\t\t\tthis.data.push (controlX);\r\n\t\t\tthis.data.push (controlY);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function lineTo (x:Float, y:Float):Void {\r\n\t\t\r\n\t\tif (this.commands != null && this.data != null) {\r\n\t\t\t\r\n\t\t\tthis.commands.push (GraphicsPathCommand.LINE_TO);\r\n\t\t\tthis.data.push (x);\r\n\t\t\tthis.data.push (y);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function moveTo (x:Float, y:Float):Void {\r\n\t\t\r\n\t\tif (this.commands != null && this.data != null) {\r\n\t\t\t\r\n\t\t\tthis.commands.push (GraphicsPathCommand.MOVE_TO);\r\n\t\t\tthis.data.push (x);\r\n\t\t\tthis.data.push (y);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function wideLineTo (x:Float, y:Float):Void {\r\n\t\t\r\n\t\tif (this.commands != null && this.data != null) {\r\n\t\t\t\r\n\t\t\tthis.commands.push (GraphicsPathCommand.LINE_TO);\r\n\t\t\tthis.data.push (x);\r\n\t\t\tthis.data.push (y);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function wideMoveTo (x:Float, y:Float):Void {\r\n\t\t\r\n\t\tif (this.commands != null && this.data != null) {\r\n\t\t\t\r\n\t\t\tthis.commands.push (GraphicsPathCommand.MOVE_TO);\r\n\t\t\tthis.data.push (x);\r\n\t\t\tthis.data.push (y);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef GraphicsPath = openfl._legacy.display.GraphicsPath;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport openfl.display.IGraphicsData;\r\nimport openfl.display.IGraphicsFill;\r\n\r\n\r\n@:final class GraphicsSolidFill implements IGraphicsData implements IGraphicsFill {\r\n\t\r\n\t\r\n\tpublic var alpha:Float;\r\n\tpublic var color:UInt;\r\n\t\r\n\tpublic var __graphicsDataType (default, null):GraphicsDataType;\r\n\tpublic var __graphicsFillType (default, null):GraphicsFillType;\r\n\t\r\n\t\r\n\tpublic function new (color:UInt = 0, alpha:Float = 1) {\r\n\t\t\r\n\t\tthis.alpha = alpha;\r\n\t\tthis.color = color;\r\n\t\tthis.__graphicsDataType = SOLID;\r\n\t\tthis.__graphicsFillType = SOLID_FILL;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef GraphicsSolidFill = openfl._legacy.display.GraphicsSolidFill;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport openfl.display.IGraphicsData;\r\n\r\n\r\n@:final class GraphicsStroke implements IGraphicsData implements IGraphicsStroke {\r\n\t\r\n\t\r\n\tpublic var caps:CapsStyle;\r\n\tpublic var fill:IGraphicsFill;\r\n\tpublic var joints:JointStyle;\r\n\tpublic var miterLimit:Float;\r\n\tpublic var pixelHinting:Bool;\r\n\tpublic var scaleMode:LineScaleMode;\r\n\tpublic var thickness:Float;\r\n\t\r\n\tpublic var __graphicsDataType (default, null):GraphicsDataType;\r\n\t\r\n\t\r\n\tpublic function new (thickness:Float = 0.0, pixelHinting:Bool = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:Float = 3, fill:IGraphicsFill = null) {\r\n\t\t\r\n\t\tthis.caps = caps != null ? caps : CapsStyle.NONE;\r\n\t\tthis.fill = fill;\r\n\t\tthis.joints = joints != null ? joints : JointStyle.ROUND;\r\n\t\tthis.miterLimit = miterLimit;\r\n\t\tthis.pixelHinting = pixelHinting;\r\n\t\tthis.scaleMode = scaleMode != null ? scaleMode : LineScaleMode.NORMAL;\r\n\t\tthis.thickness = thickness;\r\n\t\tthis.__graphicsDataType = STROKE;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef GraphicsStroke = openfl._legacy.display.GraphicsStroke;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract InterpolationMethod(Null<Int>) {\r\n\t\r\n\tpublic var LINEAR_RGB = 0;\r\n\tpublic var RGB = 1;\r\n\t\r\n\t@:from private static function fromString (value:String):InterpolationMethod {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"linearRGB\": LINEAR_RGB;\r\n\t\t\tcase \"rgb\": RGB;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase InterpolationMethod.LINEAR_RGB: \"linearRGB\";\r\n\t\t\tcase InterpolationMethod.RGB: \"rgb\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef InterpolationMethod = openfl._legacy.display.InterpolationMethod;\r\n#end","package openfl.display;\r\n\r\n\r\n@:final class JPEGEncoderOptions {\r\n\t\r\n\t\r\n\tpublic var quality:Int;\r\n\t\r\n\t\r\n\tpublic function new (quality:Int = 80) {\r\n\t\t\r\n\t\tthis.quality = quality;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract JointStyle(Null<Int>) {\r\n\t\r\n\tpublic var BEVEL = 0;\r\n\tpublic var MITER = 1;\r\n\tpublic var ROUND = 2;\r\n\t\r\n\t@:from private static function fromString (value:String):JointStyle {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"bevel\": BEVEL;\r\n\t\t\tcase \"miter\": MITER;\r\n\t\t\tcase \"round\": ROUND;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase JointStyle.BEVEL: \"bevel\";\r\n\t\t\tcase JointStyle.MITER: \"miter\";\r\n\t\t\tcase JointStyle.ROUND: \"round\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef JointStyle = openfl._legacy.display.JointStyle;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract LineScaleMode(Null<Int>) {\r\n\t\r\n\tpublic var HORIZONTAL = 0;\r\n\tpublic var NONE = 1;\r\n\tpublic var NORMAL = 2;\r\n\tpublic var VERTICAL = 3;\r\n\t\r\n\t@:from private static function fromString (value:String):LineScaleMode {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"horizontal\": HORIZONTAL;\r\n\t\t\tcase \"none\": NONE;\r\n\t\t\tcase \"normal\": NORMAL;\r\n\t\t\tcase \"vertical\": VERTICAL;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase LineScaleMode.HORIZONTAL: \"horizontal\";\r\n\t\t\tcase LineScaleMode.NONE: \"none\";\r\n\t\t\tcase LineScaleMode.NORMAL: \"normal\";\r\n\t\t\tcase LineScaleMode.VERTICAL: \"vertical\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef LineScaleMode = openfl._legacy.display.LineScaleMode;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport lime.system.BackgroundWorker;\r\nimport openfl.events.Event;\r\nimport openfl.events.IOErrorEvent;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.net.URLLoader;\r\nimport openfl.net.URLLoaderDataFormat;\r\nimport openfl.net.URLRequest;\r\nimport openfl.system.LoaderContext;\r\nimport openfl.utils.ByteArray;\r\n\r\n@:access(openfl.display.LoaderInfo)\r\n@:access(openfl.events.Event)\r\n\r\n\r\nclass Loader extends DisplayObjectContainer {\r\n\t\r\n\t\r\n\tpublic var content (default, null):DisplayObject;\r\n\tpublic var contentLoaderInfo (default, null):LoaderInfo;\r\n\t\r\n\tprivate var mImage:BitmapData;\r\n\tprivate var mShape:Shape;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\tcontentLoaderInfo = LoaderInfo.create (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function close ():Void {\r\n\t\t\r\n\t\topenfl.Lib.notImplemented (\"Loader.close\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function load (request:URLRequest, context:LoaderContext = null):Void {\r\n\t\t\r\n\t\tvar extension = \"\";\r\n\t\tvar parts = request.url.split (\".\");\r\n\t\t\r\n\t\tif (parts.length > 0) {\r\n\t\t\t\r\n\t\t\textension = parts[parts.length - 1].toLowerCase ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (extension.indexOf ('?') != -1) {\r\n\t\t\t\r\n\t\t\textension = extension.split ('?')[0];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar transparent = true;\r\n\t\t\r\n\t\tcontentLoaderInfo.url = request.url;\r\n\t\t\r\n\t\tif (request.contentType == null && request.contentType != \"\") {\r\n\t\t\t\r\n\t\t\tcontentLoaderInfo.contentType = switch (extension) {\r\n\t\t\t\t\r\n\t\t\t\tcase \"swf\": \"application/x-shockwave-flash\";\r\n\t\t\t\tcase \"jpg\", \"jpeg\": transparent = false; \"image/jpeg\";\r\n\t\t\t\tcase \"png\": \"image/png\";\r\n\t\t\t\tcase \"gif\": \"image/gif\";\r\n\t\t\t\tdefault: \"application/x-www-form-urlencoded\"; /*throw \"Unrecognized file \" + request.url;*/\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tcontentLoaderInfo.contentType = request.contentType;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#if sys\r\n\t\tif (request.url != null && request.url.indexOf (\"http://\") > -1 || request.url.indexOf (\"https://\") > -1) {\r\n\t\t\t\r\n\t\t\tvar loader = new URLLoader ();\r\n\t\t\tloader.addEventListener (Event.COMPLETE, function (e) {\r\n\t\t\t\t\r\n\t\t\t\tBitmapData_onLoad (BitmapData.fromBytes (loader.data));\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\tloader.addEventListener (IOErrorEvent.IO_ERROR, function (e) {\r\n\t\t\t\t\r\n\t\t\t\tBitmapData_onError (e);\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\tloader.dataFormat = URLLoaderDataFormat.BINARY;\r\n\t\t\tloader.load (request);\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t} else \r\n\t\t#end\r\n\t\t{\r\n\t\t\t\r\n\t\t\tvar worker = new BackgroundWorker ();\r\n\t\t\t\r\n\t\t\tworker.doWork.add (function (_) {\r\n\t\t\t\t\r\n\t\t\t\tvar path = request.url;\r\n\t\t\t\t\r\n\t\t\t\t#if sys\r\n\t\t\t\tvar index = path.indexOf (\"?\");\r\n\t\t\t\t\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tpath = path.substring (0, index);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\tBitmapData.fromFile (path, function (bitmapData) worker.sendComplete (bitmapData), function () worker.sendError (IOErrorEvent.IO_ERROR));\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tworker.onError.add (BitmapData_onError);\r\n\t\t\tworker.onComplete.add (BitmapData_onLoad);\r\n\t\t\tworker.run ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function loadBytes (buffer:ByteArray, context:LoaderContext = null):Void {\r\n\t\t\r\n\t\tvar worker = new BackgroundWorker ();\r\n\t\t\r\n\t\tworker.doWork.add (function (_) {\r\n\t\t\t\r\n\t\t\tBitmapData.fromBytes (buffer, function (bitmapData) worker.sendComplete (bitmapData));\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tworker.onComplete.add (BitmapData_onLoad);\r\n\t\tworker.run ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function unload ():Void {\r\n\t\t\r\n\t\tif (numChildren > 0) {\r\n\t\t\t\r\n\t\t\twhile (numChildren > 0) {\r\n\t\t\t\t\r\n\t\t\t\tremoveChildAt (0);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcontent = null;\r\n\t\t\tcontentLoaderInfo.url = null;\r\n\t\t\tcontentLoaderInfo.contentType = null;\r\n\t\t\tcontentLoaderInfo.content = null;\r\n\t\t\tcontentLoaderInfo.bytesLoaded = 0;\r\n\t\t\tcontentLoaderInfo.bytesTotal = 0;\r\n\t\t\tcontentLoaderInfo.width = 0;\r\n\t\t\tcontentLoaderInfo.height = 0;\r\n\t\t\t\r\n\t\t\tvar event = new Event (Event.UNLOAD);\r\n\t\t\tevent.currentTarget = this;\r\n\t\t\t__dispatchEvent (event);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function unloadAndStop (gc:Bool = true):Void {\r\n\t\t\r\n\t\topenfl.Lib.notImplemented (\"Loader.unloadAndStop\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Event Handlers\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function BitmapData_onLoad (bitmapData:BitmapData):Void {\r\n\t\t\r\n\t\tcontentLoaderInfo.content = new Bitmap (bitmapData);\r\n\t\tcontent = contentLoaderInfo.content;\r\n\t\taddChild (contentLoaderInfo.content);\r\n\t\t\r\n\t\tvar event = new Event (Event.COMPLETE);\r\n\t\tevent.target = contentLoaderInfo;\r\n\t\tevent.currentTarget = contentLoaderInfo;\r\n\t\tcontentLoaderInfo.dispatchEvent (event);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function BitmapData_onError (_):Void {\r\n\t\t\r\n\t\tvar event = new IOErrorEvent (IOErrorEvent.IO_ERROR);\r\n\t\tevent.target = contentLoaderInfo;\r\n\t\tevent.currentTarget = contentLoaderInfo;\r\n\t\tcontentLoaderInfo.dispatchEvent (event);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Loader = openfl._legacy.display.Loader;\r\n#end","package openfl.display; #if !display #if !openfl_legacy\r\n\r\n\r\n#if !flash\r\nimport openfl._internal.renderer.dom.DOMRenderer;\r\nimport openfl._internal.renderer.RenderSession;\r\n#end\r\nimport openfl.display.Stage;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.gl.GL;\r\nimport openfl.Lib;\r\n\r\n#if (js && html5)\r\nimport js.html.CanvasElement;\r\nimport js.Browser;\r\n#end\r\n\r\n@:access(lime.graphics.opengl.GL)\r\n\r\n\r\nclass OpenGLView extends DirectRenderer {\r\n\t\r\n\t\r\n\tpublic static inline var CONTEXT_LOST = \"glcontextlost\";\r\n\tpublic static inline var CONTEXT_RESTORED = \"glcontextrestored\";\r\n\t\r\n\tpublic static var isSupported (get, null):Bool;\r\n\t\r\n\tprivate var __added:Bool;\r\n\tprivate var __initialized:Bool;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper (\"OpenGLView\");\r\n\t\t\r\n\t\t#if html5\r\n\t\t#if dom\r\n\t\tif (!__initialized) {\r\n\t\t\t\r\n\t\t\t__canvas = cast Browser.document.createElement (\"canvas\");\r\n\t\t\t__canvas.width = Lib.current.stage.stageWidth;\r\n\t\t\t__canvas.height = Lib.current.stage.stageHeight;\r\n\t\t\t\r\n\t\t\tvar window = Lib.current.stage.window;\r\n\t\t\t\r\n\t\t\t__context = cast __canvas.getContext (\"webgl\", {\r\n\t\t\t\t\r\n\t\t\t\talpha: false, \r\n\t\t\t\tpremultipliedAlpha: false, \r\n\t\t\t\tantialias: true, \r\n\t\t\t\tdepth: Reflect.hasField (window.config, \"depthBuffer\") ? window.config.depthBuffer : true, \r\n\t\t\t\tstencil: Reflect.hasField (window.config, \"stencilBuffer\") ? window.config.stencilBuffer : false\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif (__context == null) {\r\n\t\t\t\t\r\n\t\t\t\t__context = cast __canvas.getContext (\"experimental-webgl\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#if debug\r\n\t\t\t__context = untyped WebGLDebugUtils.makeDebugContext (__context);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tGL.context = cast __context;\r\n\t\t\t__initialized = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t#elseif !webgl\r\n\t\tif (!__added) {\r\n\t\t\t\r\n\t\t\t__added = true;\r\n\t\t\t\r\n\t\t\ttrace (\"Warning: OpenGLView is not available in HTML5 canvas rendering mode\");\r\n\t\t\ttrace (\"Please compile your project using -Ddom or -Dwebgl (beta) to enable\");\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if !flash\r\n\tpublic override function __renderCanvas (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t/*if (!__added) {\r\n\t\t\t\r\n\t\t\t__added = true;\r\n\t\t\t\r\n\t\t\ttrace (\"Warning: openfl-html5 only can run OpenGLView content using the DOM rendering mode\");\r\n\t\t\ttrace (\"Please compile your project using -Ddom (on the command-line) or <haxedef name=\\\"dom\\\" /> to enable\");\r\n\t\t\t\r\n\t\t}*/\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t#if !flash\r\n\tpublic override function __renderDOM (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tif (stage != null && __worldVisible && __renderable) {\r\n\t\t\t\r\n\t\t\tif (!__added) {\r\n\t\t\t\t\r\n\t\t\t\t/*if (!__initialized) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__canvas = cast Browser.document.createElement (\"canvas\");\r\n\t\t\t\t\t__canvas.width = Lib.current.stage.stageWidth;\r\n\t\t\t\t\t__canvas.height = Lib.current.stage.stageHeight;\r\n\t\t\t\t\t\r\n\t\t\t\t\t__context = cast __canvas.getContext (\"webgl\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (__context == null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__context = cast __canvas.getContext (\"experimental-webgl\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if debug\r\n\t\t\t\t\t__context = untyped WebGLDebugUtils.makeDebugContext (__context);\r\n\t\t\t\t\t#end\r\n\t\t\t\t\t\r\n\t\t\t\t\t//GL.__context = __context;\r\n\t\t\t\t\t__initialized = true;\r\n\t\t\t\t\t\r\n\t\t\t\t}*/\r\n\t\t\t\t\r\n\t\t\t\trenderSession.element.appendChild (__canvas);\r\n\t\t\t\t__added = true;\r\n\t\t\t\t\r\n\t\t\t\tDOMRenderer.initializeElement (this, __canvas, renderSession);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (__context != null) {\r\n\t\t\t\t\r\n\t\t\t\t//GL.__context = __context;\r\n\t\t\t\t\r\n\t\t\t\tvar rect = null;\r\n\t\t\t\t\r\n\t\t\t\tif (scrollRect == null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\trect = new Rectangle (0, 0, stage.stageWidth, stage.stageHeight);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\trect = new Rectangle (x + scrollRect.x, y + scrollRect.y, scrollRect.width, scrollRect.height);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (__render != null) __render (rect);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//__applyStyle (renderSession, true, false, true);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tif (__added) {\r\n\t\t\t\t\r\n\t\t\t\trenderSession.element.removeChild (__canvas);\r\n\t\t\t\t__added = false;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t#if !flash\r\n\tpublic override function __renderGL (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (stage != null && __renderable) {\r\n\t\t\t\r\n\t\t\tvar rect = null;\r\n\t\t\t\r\n\t\t\tif (scrollRect == null) {\r\n\t\t\t\t\r\n\t\t\t\trect = new Rectangle (0, 0, stage.stageWidth, stage.stageHeight);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\trect = new Rectangle (x + scrollRect.x, y + scrollRect.y, scrollRect.width, scrollRect.height);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (__render != null) __render (rect);\r\n\t\t\t\r\n\t\t\trenderSession.shaderManager.setShader(null);\r\n\t\t\trenderSession.blendModeManager.setBlendMode(null);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate static function get_isSupported ():Bool {\r\n\t\t\r\n\t\t#if flash\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t\t#elseif (js && html5)\r\n\t\t\r\n\t\t#if (!dom && !webgl)\r\n\t\treturn false;\r\n\t\t#else\r\n\t\t\r\n\t\tif (untyped (!window.WebGLRenderingContext)) {\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (GL.context != null) {\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar canvas:CanvasElement = cast Browser.document.createElement (\"canvas\");\r\n\t\t\tvar context = cast canvas.getContext (\"webgl\");\r\n\t\t\t\r\n\t\t\tif (context == null) {\r\n\t\t\t\t\r\n\t\t\t\tcontext = cast canvas.getContext (\"experimental-webgl\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn (context != null);\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\treturn true;\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if (html5 && dom)\r\n\tprivate override function set_width (value:Float):Float {\r\n\t\t\r\n\t\tsuper.set_width (value);\r\n\t\t\r\n\t\t__canvas.width = Std.int (value);\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function set_height (value:Float):Float {\r\n\t\t\r\n\t\tsuper.set_height (value);\r\n\t\t\r\n\t\t__canvas.height = Std.int (value); \r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef OpenGLView = openfl._legacy.display.OpenGLView;\r\n#end\r\n#elseif !flash\r\n\r\n\r\nextern class OpenGLView extends DirectRenderer {\r\n\t\r\n\t\r\n\tpublic static inline var CONTEXT_LOST = \"glcontextlost\";\r\n\tpublic static inline var CONTEXT_RESTORED = \"glcontextrestored\";\r\n\t\r\n\tpublic static var isSupported (get, null):Bool;\r\n\t\r\n\tpublic function new ();\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#end","package openfl.display;\r\n\r\n\r\n@:final class PNGEncoderOptions {\r\n\t\r\n\t\r\n\tpublic var fastCompression:Bool;\r\n\t\r\n\t\r\n\tpublic function new (fastCompression:Bool = false) {\r\n\t\t\r\n\t\tthis.fastCompression = fastCompression;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract PixelSnapping(Null<Int>) {\r\n\t\r\n\tpublic var ALWAYS = 0;\r\n\tpublic var AUTO = 1;\r\n\tpublic var NEVER = 2;\r\n\t\r\n\t@:from private static function fromString (value:String):PixelSnapping {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"always\": ALWAYS;\r\n\t\t\tcase \"auto\": AUTO;\r\n\t\t\tcase \"never\": NEVER;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase PixelSnapping.ALWAYS: \"always\";\r\n\t\t\tcase PixelSnapping.AUTO: \"auto\";\r\n\t\t\tcase PixelSnapping.NEVER: \"never\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef PixelSnapping = openfl._legacy.display.PixelSnapping;\r\n#end","package openfl.display;\r\n\r\n\r\nimport haxe.io.Path;\r\nimport lime.app.Preloader in LimePreloader;\r\nimport lime.Assets;\r\nimport openfl.events.Event;\r\nimport openfl.events.IOErrorEvent;\r\nimport openfl.media.Sound;\r\nimport openfl.net.URLRequest;\r\nimport openfl.Lib;\r\n\r\n\r\nclass Preloader extends LimePreloader {\r\n\t\r\n\t\r\n\tprivate var display:Sprite;\r\n\tprivate var displayComplete:Bool;\r\n\t\r\n\t\r\n\tpublic function new (display:Sprite = null) {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\tif (display != null) {\r\n\t\t\t\r\n\t\t\tthis.display = display;\r\n\t\t\tLib.current.addChild (display);\r\n\t\t\t\r\n\t\t\tif (Std.is (display, OpenFLPreloader)) {\r\n\t\t\t\t\r\n\t\t\t\tcast (display, OpenFLPreloader).onInit ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function load (urls:Array<String>, types:Array<AssetType>):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t\r\n\t\tvar sounds = [];\r\n\t\tvar url = null;\r\n\t\t\r\n\t\tfor (i in 0...urls.length) {\r\n\t\t\t\r\n\t\t\turl = urls[i];\r\n\t\t\t\r\n\t\t\tswitch (types[i]) {\r\n\t\t\t\t\r\n\t\t\t\tcase MUSIC, SOUND:\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar sound = Path.withoutExtension (url);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!sounds.remove (sound)) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttotal++;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tsounds.push (sound);\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (soundName in sounds) {\r\n\t\t\t\r\n\t\t\tvar sound = new Sound ();\r\n\t\t\tsound.addEventListener (Event.COMPLETE, sound_onComplete);\r\n\t\t\tsound.addEventListener (IOErrorEvent.IO_ERROR, sound_onIOError);\r\n\t\t\tsound.load (new URLRequest (soundName + \".ogg\"));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\tsuper.load (urls, types);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function start ():Void {\r\n\t\t\r\n\t\tif (display != null && Std.is (display, OpenFLPreloader)) {\r\n\t\t\t\r\n\t\t\tdisplay.addEventListener (Event.COMPLETE, display_onComplete);\r\n\t\t\tcast (display, OpenFLPreloader).onLoaded ();\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tsuper.start ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function update (loaded:Int, total:Int):Void {\r\n\t\t\r\n\t\tif (display != null && Std.is (display, OpenFLPreloader)) {\r\n\t\t\t\r\n\t\t\tcast (display, OpenFLPreloader).onUpdate (loaded, total);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Event Handlers\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t@:noCompletion private function display_onComplete (event:Event):Void {\r\n\t\t\r\n\t\tdisplay.removeEventListener (Event.COMPLETE, display_onComplete);\r\n\t\tLib.current.removeChild (display);\r\n\t\tLib.current.stage.focus = null;\r\n\t\tdisplay = null;\r\n\t\t\r\n\t\tsuper.start ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if (js && html5)\r\n\t@:noCompletion private function sound_onComplete (event:Event):Void {\r\n\t\t\r\n\t\tloaded++;\r\n\t\t\r\n\t\tonProgress.dispatch (loaded, total);\r\n\t\t\r\n\t\tif (loaded == total) {\r\n\t\t\t\r\n\t\t\tstart ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function sound_onIOError (event:IOErrorEvent):Void {\r\n\t\t\r\n\t\t// if it is actually valid, it will load later when requested\r\n\t\t\r\n\t\tloaded++;\r\n\t\t\r\n\t\tonProgress.dispatch (loaded, total);\r\n\t\t\r\n\t\tif (loaded == total) {\r\n\t\t\t\r\n\t\t\tstart ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#if tools\r\ntypedef OpenFLPreloader = NMEPreloader\r\n#else\r\nprivate class OpenFLPreloader extends Sprite {\r\n\t\r\n\tpublic function new () { super (); }\r\n\tpublic function onInit ():Void {};\r\n\tpublic function onUpdate (loaded:Int, total:Int):Void {};\r\n\tpublic function onLoaded ():Void {};\r\n\t\r\n}\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport lime.graphics.GLRenderContext;\r\nimport openfl._internal.renderer.opengl.shaders2.Shader in InternalShader;\r\nimport openfl.geom.Matrix;\r\nimport openfl.gl.GL;\r\n\r\nusing StringTools;\r\n\r\n@:autoBuild(openfl._internal.macros.MacroShader.buildUniforms())\r\nclass Shader {\r\n\t\r\n\t@:noCompletion static var uniformRegex = ~/^\\s*uniform\\s+(sampler(?:2D|Cube)|[bi]?vec[234]|float|int|bool|mat[234])\\s+(\\w+)\\s*(?:\\[(\\d+)\\])?\\s*;.*$/gmi;\r\n\t\r\n\t/**\r\n\t * Attribute (vec2) with the object position.\r\n\t */\r\n\tpublic static var aPosition = DefaultAttrib.Position;\r\n\t/**\r\n\t * Attribute (vec2) with the object texture coordinate.\r\n\t */\r\n\tpublic static var aTexCoord = DefaultAttrib.TexCoord;\r\n\t/**\r\n\t * Attribute (vec4) with the tint and alpha values of the object.\r\n\t */\r\n\tpublic static var aColor = DefaultAttrib.Color;\r\n\t\r\n\t/**\r\n\t * Uniform (sampler2D) holding the object texture.\r\n\t */\r\n\tpublic static var uSampler = DefaultUniform.Sampler;\r\n\t/**\r\n\t * Uniform (mat4) holding the projection matrix.\r\n\t */\r\n\tpublic static var uProjectionMatrix = DefaultUniform.ProjectionMatrix;\r\n\t/**\r\n\t * Uniform (vec4) holding the colorMultiplier values from the transfrom.colorTransform of the object.\r\n\t */\r\n\tpublic static var uColorMultiplier = DefaultUniform.ColorMultiplier;\r\n\t/**\r\n\t * Uniform (vec4) holding the colorOffset values from the transfrom.colorTransform of the object.\r\n\t */\r\n\tpublic static var uColorOffset = DefaultUniform.ColorOffset;\r\n\t/**\r\n\t * Uniform (vec2) holding the object width and height. If it's used with Tilesheet.drawTiles() the value will be [0, 0]\r\n\t * For example, if the object is 200x200, the value of this uniform will be 200x200.\r\n\t */\r\n\tpublic static var uObjectSize = \"openfl_uObjectSize\";\r\n\t/**\r\n\t * Uniform (vec2) holding the object texture real width and height. If it's used with Tilesheet.drawTiles() the value will be [0, 0]\r\n\t * For example, if the object is 200x200, the value of this uniform will be 256x256.\r\n\t */\r\n\tpublic static var uTextureSize = \"openfl_uTextureSize\";\r\n\t\r\n\t/**\r\n\t * Varying (vec2) with the object texture coordinate.\r\n\t */\r\n\tpublic static var vTexCoord = DefaultVarying.TexCoord;\r\n\t/**\r\n\t * Varying (vec4) with the tint and alpha values of the object.\r\n\t */\r\n\tpublic static var vColor = DefaultVarying.Color;\r\n\t\r\n\t\r\n\t@:noCompletion static var vertexHeader = [\r\n\t\t'attribute vec2 ${Shader.aPosition};',\r\n\t\t'attribute vec2 ${Shader.aTexCoord};',\r\n\t\t'attribute vec4 ${Shader.aColor};',\r\n\t\t\r\n\t\t'uniform mat3 ${Shader.uProjectionMatrix};',\r\n\t\t\r\n\t\t'uniform vec2 ${Shader.uObjectSize};',\r\n\t\t'uniform vec2 ${Shader.uTextureSize};',\r\n\t\t\r\n\t\t'varying vec2 ${Shader.vTexCoord};',\r\n\t\t'varying vec4 ${Shader.vColor};',\r\n\t];\r\n\t\r\n\t@:noCompletion static var fragmentHeader = [\r\n\t\t'uniform sampler2D ${Shader.uSampler};',\r\n\t\t'uniform vec4 ${Shader.uColorMultiplier};',\r\n\t\t'uniform vec4 ${Shader.uColorOffset};',\r\n\t\t\r\n\t\t'uniform vec2 ${Shader.uObjectSize};',\r\n\t\t'uniform vec2 ${Shader.uTextureSize};',\r\n\t\t\r\n\t\t'varying vec2 ${Shader.vTexCoord};',\r\n\t\t'varying vec4 ${Shader.vColor};',\r\n\t\t\r\n\t\t'vec4 colorTransform(const vec4 color, const vec4 tint, const vec4 multiplier, const vec4 offset) {',\r\n\t\t'   vec4 unmultiply = vec4(color.rgb / color.a, color.a);',\r\n\t\t'   vec4 result = unmultiply * tint * multiplier;',\r\n\t\t'   result = result + offset;',\r\n\t\t'   result = clamp(result, 0., 1.);',\r\n\t\t'   result = vec4(result.rgb * result.a, result.a);',\r\n\t\t'   return result;',\r\n\t\t'}',\r\n\t];\r\n\t\r\n\t/**\r\n\t * The shader precision. It can be HIGH, MEDIUM or LOW. Defaults to MEDIUM\r\n\t */\r\n\tpublic var precision:GLShaderPrecision = MEDIUM;\r\n\t/**\r\n\t * A Map<String, GLShaderParameter>\r\n\t */\r\n\tpublic var data(default, null):GLShaderData;\r\n\t/**\r\n\t * Overrides the default repetition applied to the object's bitmap or cached bitmap.\r\n\t * By default: NONE\r\n\t */\r\n\tpublic var repeatX:RepeatMode = NONE;\r\n\t/**\r\n\t * Overrides the default repetition applied to the object's bitmap or cached bitmap.\r\n\t * By default: NONE\r\n\t */\r\n\tpublic var repeatY:RepeatMode = NONE;\r\n\t/**\r\n\t * Overrides the default smooth applied to the object's bitmap or cached bitmap.\r\n\t * By default: Null (not overriden)\r\n\t */\r\n\tpublic var smooth:Null<Bool>;\r\n\t/**\r\n\t * Overrides the object blendMode property.\r\n\t * By default: Null (not overriden)\r\n\t */\r\n\tpublic var blendMode:BlendMode;\r\n\t\r\n\t@:noCompletion private var __dirty:Bool = true;\r\n\t@:noCompletion private var __fragmentCode:String;\r\n\t@:noCompletion private var __vertexCode:String;\r\n\t@:noCompletion private var __shader:InternalShader;\r\n\t\r\n\tpublic function new(?precision:GLShaderPrecision = MEDIUM) {\r\n\t\tthis.precision = precision;\r\n\t\tdata = new Map();\r\n\t\t\r\n\t\tdata.set(Shader.uObjectSize, new GLShaderParameter(\"vec2\"));\r\n\t\tdata.set(Shader.uTextureSize, new GLShaderParameter(\"vec2\"));\r\n\t}\r\n\t\r\n\t@:noCompletion private function __init(gl:GLRenderContext) {\r\n\t\tvar dirty = __dirty;\r\n\t\tif (dirty) {\r\n\t\t\tif (__shader != null) {\r\n\t\t\t\t__shader.destroy();\r\n\t\t\t}\r\n\t\t\t__shader = new InternalShader(gl);\r\n\t\t\t__shader.vertexString = __vertexCode != null ? __vertexCode : openfl._internal.renderer.opengl.shaders2.DefaultShader.VERTEX_SRC.join(\"\\n\");\r\n\t\t\t__shader.fragmentString = __fragmentCode;\r\n\t\t\t__dirty = false;\r\n\t\t}\r\n\t\t\r\n\t\t__shader.init(dirty);\r\n\t}\r\n\t\r\n\t@:noCompletion private function __buildFragmentCode(code:String) {\r\n\t\tvar output = [];\r\n\t\t\r\n\t\toutput.push('#ifdef GL_ES');\r\n\t\toutput.push(switch(precision) {\r\n\t\t\tcase HIGH: \t\t'precision highp float;';\r\n\t\t\tcase MEDIUM: \t'precision mediump float;';\r\n\t\t\tcase _: \t\t'precision lowp float;';\r\n\t\t});\r\n\t\toutput.push('#endif');\r\n\t\t\r\n\t\t// TODO extensions\r\n\t\t\r\n\t\toutput = output.concat(fragmentHeader);\r\n\t\toutput.push(code);\r\n\t\t\r\n\t\t__fragmentCode = output.join(\"\\n\");\r\n\t}\r\n\t\r\n\t@:noCompletion private function __buildVertexCode(code:String) {\r\n\t\tvar output = [];\r\n\t\t\r\n\t\toutput.push('#ifdef GL_ES');\r\n\t\toutput.push(switch(precision) {\r\n\t\t\tcase HIGH: \t\t'precision highp float;';\r\n\t\t\tcase MEDIUM: \t'precision mediump float;';\r\n\t\t\tcase _: \t\t'precision lowp float;';\r\n\t\t});\r\n\t\toutput.push('#endif');\r\n\t\t\r\n\t\toutput = output.concat(vertexHeader);\r\n\t\toutput.push(code);\r\n\t\t\r\n\t\t__vertexCode = output.join(\"\\n\");\r\n\t}\r\n\t\r\n}\r\n\r\nclass GLShaderParameter {\r\n\t/**\r\n\t * The raw type as expressed in the glsl code\r\n\t * For example: vec4 will be \"vec4\"\r\n\t */\r\n\tpublic var type(default, null):String;\r\n\t/**\r\n\t * The size of the value.\r\n\t * For example: vec4 will be 4\r\n\t */\r\n\tpublic var size(default, null):Int = 0;\r\n\t/**\r\n\t * The size of the array.\r\n\t * For example: uniform vec2 uExample[2]; will be 2\r\n\t */\r\n\tpublic var arraySize(default, null):Int = 0;\r\n\t/**\r\n\t * The value of the parameter when the type isn't a sampler2D\r\n\t */\r\n\tpublic var value(default, set):Array<Float>;\r\n\t/**\r\n\t * The BitmapData to be used when the type is a sampler2D\r\n\t */\r\n\tpublic var bitmap(default, set):BitmapData;\r\n\t/**\r\n\t * Enables linear smoothing to the BitmapData\r\n\t */\r\n\tpublic var smooth:Bool = false;\r\n\t/**\r\n\t * Controls repetition in the x axis for the BitmapData\r\n\t */\r\n\tpublic var repeatX:RepeatMode = NONE;\r\n\t/**\r\n\t * Controls repetition in the y axis for the BitmapData\r\n\t */\r\n\tpublic var repeatY:RepeatMode = NONE;\r\n\t/**\r\n\t * Enables matrices to be transposed. Only used in mat* types.\r\n\t */\r\n\tpublic var transpose:Bool = false;\r\n\t\r\n\tprivate var internalType:GLShaderParameterInternal = NONE;\r\n\t\r\n\tpublic function new(type:String, ?arraySize:Null<Int>) {\r\n\t\tthis.type = type;\r\n\t\tthis.arraySize = arraySize == null ? 0 : arraySize;\r\n\t\t\r\n\t\t__init();\r\n\t}\r\n\t\r\n\t@:noCompletion private function __init() {\r\n\t\tswitch(type) {\r\n\t\t\tcase \"bool\": \r\n\t\t\t\tinternalType = INT;\r\n\t\t\t\tsize = 1;\r\n\t\t\t\t\r\n\t\t\t\tvalue = [0.0];\r\n\t\t\t\t\r\n\t\t\tcase \"int\": \r\n\t\t\t\tinternalType = INT;\r\n\t\t\t\tsize = 1;\r\n\t\t\t\t\r\n\t\t\t\tvalue = [0.0];\r\n\t\t\t\t\r\n\t\t\tcase \"float\":\r\n\t\t\t\tinternalType = FLOAT;\r\n\t\t\t\tsize = 1;\r\n\t\t\t\t\r\n\t\t\t\tvalue = [0.0];\r\n\t\t\t\t\r\n\t\t\tcase v if (v.indexOf(\"vec\") > -1):\r\n\t\t\t\tif(type.startsWith(\"b\") || type.startsWith(\"i\"))\r\n\t\t\t\t\tinternalType = INT;\r\n\t\t\t\telse\r\n\t\t\t\t\tinternalType = FLOAT;\r\n\t\t\t\t\r\n\t\t\t\tvar s = Std.parseInt(type.charAt(type.length - 1));\r\n\t\t\t\tsize = s;\r\n\t\t\t\t\r\n\t\t\t\tvalue = [for (i in 0...size) 0.0];\r\n\t\t\t\t\r\n\t\t\tcase m if (m.indexOf(\"mat\") > -1):\r\n\t\t\t\tinternalType = MAT;\r\n\t\t\t\tvar s = Std.parseInt(type.charAt(type.length - 1));\r\n\t\t\t\tsize = s;\r\n\t\t\t\t\r\n\t\t\t\tvalue = switch(size) {\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t[\t1, 0,\r\n\t\t\t\t\t\t\t1, 0\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t[\t1, 0, 0,\r\n\t\t\t\t\t\t\t0, 1, 0,\r\n\t\t\t\t\t\t\t0, 0, 1\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t[\t1, 0, 0, 0,\r\n\t\t\t\t\t\t\t0, 1, 0, 0,\r\n\t\t\t\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t\t\t\t0, 0, 0, 1,\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\tcase _:\r\n\t\t\t\t\t\t[0];\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\tcase \"sampler2D\" | \"samplerCube\":\r\n\t\t\t\tinternalType = SAMPLER;\r\n\t\t\t\tsize = 0;\r\n\t\t\tcase _: \r\n\t\t\t\tinternalType = NONE;\r\n\t\t\t\ttrace(\"Can't initialize value for type \" + type);\r\n\t\t}\r\n\t}\r\n\t\r\n\t@:noCompletion private inline function set_value(v) {\r\n\t\tif (internalType == SAMPLER) throw \"This parameter doesn't accept a value, use bitmap instead\";\r\n\t\treturn value = v;\r\n\t}\r\n\t@:noCompletion private inline function set_bitmap(v) {\r\n\t\tif (internalType != SAMPLER) throw \"This parameter doesn't accept a bitmap, use value instead\";\r\n\t\treturn bitmap = v;\r\n\t}\r\n}\r\n\r\n@:enum abstract GLShaderPrecision(Int) {\r\n\tvar LOW \t= 0;\r\n\tvar MEDIUM \t= 1;\r\n\tvar HIGH \t= 2;\r\n}\r\n\r\n\r\n@:enum private abstract GLShaderParameterInternal(Int) {\r\n\tvar NONE \t= 0;\r\n\tvar INT \t= 1;\r\n\tvar FLOAT \t= 2;\r\n\tvar MAT \t= 3;\r\n\tvar SAMPLER = 4;\r\n}\r\n\r\n@:enum abstract RepeatMode(Int) to Int {\r\n\tvar NONE \t= GL.CLAMP_TO_EDGE;\r\n\tvar REPEAT \t= GL.REPEAT;\r\n\tvar MIRROR \t= GL.MIRRORED_REPEAT;\r\n}\r\n\r\ntypedef GLShaderData = Map<String, GLShaderParameter>;\r\n\r\nprivate typedef DefaultAttrib = openfl._internal.renderer.opengl.shaders2.DefaultShader.Attrib;\r\nprivate typedef DefaultUniform = openfl._internal.renderer.opengl.shaders2.DefaultShader.Uniform;\r\nprivate typedef DefaultVarying = openfl._internal.renderer.opengl.shaders2.DefaultShader.Varying;\r\n\r\n\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:access(openfl.display.Graphics)\r\n \r\n\r\nclass Shape extends DisplayObject {\r\n\t\r\n\t\r\n\tpublic var graphics (get, null):Graphics;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_graphics ():Graphics {\r\n\t\t\r\n\t\tif (__graphics == null) {\r\n\t\t\t\r\n\t\t\t__graphics = new Graphics ();\r\n\t\t\t__graphics.__owner = this;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __graphics;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Shape = openfl._legacy.display.Shape;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract SpreadMethod(Null<Int>) {\r\n\t\r\n\tpublic var PAD = 0;\r\n\tpublic var REFLECT = 1;\r\n\tpublic var REPEAT = 2;\r\n\t\r\n\t@:from private static function fromString (value:String):SpreadMethod {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"pad\": PAD;\r\n\t\t\tcase \"reflect\": REFLECT;\r\n\t\t\tcase \"repeat\": REPEAT;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase SpreadMethod.PAD: \"pad\";\r\n\t\t\tcase SpreadMethod.REFLECT: \"reflect\";\r\n\t\t\tcase SpreadMethod.REPEAT: \"repeat\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef SpreadMethod = openfl._legacy.display.SpreadMethod;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport haxe.EnumFlags;\r\nimport haxe.Timer;\r\nimport lime.app.Application;\r\nimport lime.app.IModule;\r\nimport lime.graphics.opengl.GL;\r\nimport lime.graphics.opengl.GLProgram;\r\nimport lime.graphics.opengl.GLUniformLocation;\r\nimport lime.graphics.CanvasRenderContext;\r\nimport lime.graphics.ConsoleRenderContext;\r\nimport lime.graphics.DOMRenderContext;\r\nimport lime.graphics.GLRenderContext;\r\nimport lime.graphics.RenderContext;\r\nimport lime.graphics.Renderer;\r\nimport lime.math.Matrix4;\r\nimport lime.system.System;\r\nimport lime.ui.Touch;\r\nimport lime.utils.GLUtils;\r\nimport lime.ui.Gamepad;\r\nimport lime.ui.GamepadAxis;\r\nimport lime.ui.GamepadButton;\r\nimport lime.ui.Joystick;\r\nimport lime.ui.JoystickHatPosition;\r\nimport lime.ui.KeyCode;\r\nimport lime.ui.KeyModifier;\r\nimport lime.ui.Mouse;\r\nimport lime.ui.Window;\r\nimport openfl._internal.renderer.AbstractRenderer;\r\nimport openfl._internal.renderer.cairo.CairoRenderer;\r\nimport openfl._internal.renderer.canvas.CanvasRenderer;\r\nimport openfl._internal.renderer.console.ConsoleRenderer;\r\nimport openfl._internal.renderer.dom.DOMRenderer;\r\nimport openfl._internal.renderer.opengl.GLRenderer;\r\nimport openfl.display.DisplayObjectContainer;\r\nimport openfl.errors.Error;\r\nimport openfl.events.Event;\r\nimport openfl.events.EventPhase;\r\nimport openfl.events.FocusEvent;\r\nimport openfl.events.FullScreenEvent;\r\nimport openfl.events.KeyboardEvent;\r\nimport openfl.events.MouseEvent;\r\nimport openfl.events.StageVideoAvailabilityEvent;\r\nimport openfl.events.TextEvent;\r\nimport openfl.events.TouchEvent;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.media.StageVideo;\r\nimport openfl.media.StageVideoAvailability;\r\nimport openfl.text.TextField;\r\nimport openfl.ui.GameInput;\r\nimport openfl.ui.Keyboard;\r\nimport openfl.ui.KeyLocation;\r\n\r\n#if hxtelemetry\r\nimport openfl.profiler.Telemetry;\r\n#end\r\n\r\n#if (js && html5)\r\nimport js.html.CanvasElement;\r\nimport js.html.DivElement;\r\nimport js.html.Element;\r\nimport js.Browser;\r\n#end\r\n\r\n@:access(openfl.events.Event)\r\n@:access(openfl.ui.GameInput)\r\n@:access(openfl.ui.Keyboard)\r\n\r\n\r\nclass Stage extends DisplayObjectContainer implements IModule {\r\n\t\r\n\t\r\n\tpublic var align:StageAlign;\r\n\tpublic var allowsFullScreen (default, null):Bool;\r\n\tpublic var allowsFullScreenInteractive (default, null):Bool;\r\n\tpublic var application (default, null):Application;\r\n\tpublic var color (get, set):Int;\r\n\tpublic var displayState (get, set):StageDisplayState;\r\n\tpublic var focus (get, set):InteractiveObject;\r\n\tpublic var frameRate (get, set):Float;\r\n\tpublic var quality:StageQuality;\r\n\tpublic var scaleMode:StageScaleMode;\r\n\tpublic var stage3Ds (default, null):Vector<Stage3D>;\r\n\tpublic var stageFocusRect:Bool;\r\n\tpublic var stageHeight (default, null):Int;\r\n\tpublic var stageWidth (default, null):Int;\r\n\t\r\n\tpublic var window (default, null):Window;\r\n\t\r\n\tprivate var __clearBeforeRender:Bool;\r\n\tprivate var __color:Int;\r\n\tprivate var __colorSplit:Array<Float>;\r\n\tprivate var __colorString:String;\r\n\tprivate var __deltaTime:Int;\r\n\tprivate var __dirty:Bool;\r\n\tprivate var __displayState:StageDisplayState;\r\n\tprivate var __dragBounds:Rectangle;\r\n\tprivate var __dragObject:Sprite;\r\n\tprivate var __dragOffsetX:Float;\r\n\tprivate var __dragOffsetY:Float;\r\n\tprivate var __focus:InteractiveObject;\r\n\tprivate var __fullscreen:Bool;\r\n\tprivate var __invalidated:Bool;\r\n\tprivate var __lastClickTime:Int;\r\n\tprivate var __macKeyboard:Bool;\r\n\tprivate var __mouseDownLeft:InteractiveObject;\r\n\tprivate var __mouseDownMiddle:InteractiveObject;\r\n\tprivate var __mouseDownRight:InteractiveObject;\r\n\tprivate var __mouseOutStack:Array<DisplayObject>;\r\n\tprivate var __mouseX:Float;\r\n\tprivate var __mouseY:Float;\r\n\tprivate var __originalWidth:Int;\r\n\tprivate var __originalHeight:Int;\r\n\tprivate var __renderer:AbstractRenderer;\r\n\tprivate var __rendering:Bool;\r\n\tprivate var __stack:Array<DisplayObject>;\r\n\tprivate var __transparent:Bool;\r\n\tprivate var __wasDirty:Bool;\r\n\t\r\n\tpublic var _stageVideos:Array<StageVideo>;\r\n\tpublic var stageVideos(get, null):Array<StageVideo>;\r\n\t\r\n\t#if (js && html5)\r\n\t//private var __div:DivElement;\r\n\t//private var __element:HtmlElement;\r\n\t#if stats\r\n\tprivate var __stats:Dynamic;\r\n\t#end\r\n\t#end\r\n\t\r\n\t\r\n\tpublic function new (window:Window, color:Null<Int> = null) {\r\n\t\t\r\n\t\t#if hxtelemetry\r\n\t\tTelemetry.__initialize ();\r\n\t\t#end\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\tthis.application = window.application;\r\n\t\tthis.window = window;\r\n\t\t\r\n\t\tif (color == null) {\r\n\t\t\t\r\n\t\t\t__transparent = true;\r\n\t\t\tthis.color = 0x000000;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tthis.color = color;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.name = null;\r\n\t\t\r\n\t\t__deltaTime = 0;\r\n\t\t__displayState = NORMAL;\r\n\t\t__mouseX = 0;\r\n\t\t__mouseY = 0;\r\n\t\t__lastClickTime = 0;\r\n\t\t\r\n\t\tstageWidth = Std.int (window.width * window.scale);\r\n\t\tstageHeight = Std.int (window.height * window.scale);\r\n\t\t\r\n\t\tthis.stage = this;\r\n\t\t\r\n\t\talign = StageAlign.TOP_LEFT;\r\n\t\t#if html5\r\n\t\tallowsFullScreen = false;\r\n\t\tallowsFullScreenInteractive = false;\r\n\t\t#else\r\n\t\tallowsFullScreen = true;\r\n\t\tallowsFullScreenInteractive = true;\r\n\t\t#end\r\n\t\tquality = StageQuality.HIGH;\r\n\t\tscaleMode = StageScaleMode.NO_SCALE;\r\n\t\tstageFocusRect = true;\r\n\t\t\r\n\t\t#if mac\r\n\t\t__macKeyboard = true;\r\n\t\t#elseif (js && html5)\r\n\t\t__macKeyboard = untyped __js__ (\"/AppleWebKit/.test (navigator.userAgent) && /Mobile\\\\/\\\\w+/.test (navigator.userAgent) || /Mac/.test (navigator.platform)\");\r\n\t\t#end\r\n\t\t\r\n\t\t__clearBeforeRender = true;\r\n\t\t__stack = [];\r\n\t\t__mouseOutStack = [];\r\n\t\t\r\n\t\tstage3Ds = new Vector ();\r\n\t\tstage3Ds.push (new Stage3D ());\r\n\t\t\r\n\t\tif (Lib.current.stage == null) {\r\n\t\t\t\r\n\t\t\tstage.addChild (Lib.current);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\thaxe.Timer.delay(InitStageVideos, 500);\r\n\t}\r\n\t\r\n\tprivate function InitStageVideos():Void\r\n\t{\r\n\t\tsetStageVideos([]);\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function globalToLocal (pos:Point):Point {\r\n\t\t\r\n\t\treturn pos.clone ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function invalidate ():Void {\r\n\t\t\r\n\t\t__invalidated = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function localToGlobal (pos:Point):Point {\r\n\t\t\r\n\t\treturn pos.clone ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onGamepadAxisMove (gamepad:Gamepad, axis:GamepadAxis, value:Float):Void {\r\n\t\t\r\n\t\tGameInput.__onGamepadAxisMove (gamepad, axis, value);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onGamepadButtonDown (gamepad:Gamepad, button:GamepadButton):Void {\r\n\t\t\r\n\t\tGameInput.__onGamepadButtonDown (gamepad, button);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onGamepadButtonUp (gamepad:Gamepad, button:GamepadButton):Void {\r\n\t\t\r\n\t\tGameInput.__onGamepadButtonUp (gamepad, button);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onGamepadConnect (gamepad:Gamepad):Void {\r\n\t\t\r\n\t\tGameInput.__onGamepadConnect (gamepad);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onGamepadDisconnect (gamepad:Gamepad):Void {\r\n\t\t\r\n\t\tGameInput.__onGamepadDisconnect (gamepad);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onJoystickAxisMove (joystick:Joystick, axis:Int, value:Float):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onJoystickButtonDown (joystick:Joystick, button:Int):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onJoystickButtonUp (joystick:Joystick, button:Int):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onJoystickConnect (joystick:Joystick):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onJoystickDisconnect (joystick:Joystick):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onJoystickHatMove (joystick:Joystick, hat:Int, position:JoystickHatPosition):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onJoystickTrackballMove (joystick:Joystick, trackball:Int, value:Float):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onKeyDown (window:Window, keyCode:KeyCode, modifier:KeyModifier):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\t__onKey (KeyboardEvent.KEY_DOWN, keyCode, modifier);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onKeyUp (window:Window, keyCode:KeyCode, modifier:KeyModifier):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\t__onKey (KeyboardEvent.KEY_UP, keyCode, modifier);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onModuleExit (code:Int):Void {\r\n\t\t\r\n\t\tif (window != null) {\r\n\t\t\t\r\n\t\t\tvar event = new Event (Event.DEACTIVATE);\r\n\t\t\t__broadcast (event, true);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onMouseDown (window:Window, x:Float, y:Float, button:Int):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\tvar type = switch (button) {\r\n\t\t\t\r\n\t\t\tcase 1: MouseEvent.MIDDLE_MOUSE_DOWN;\r\n\t\t\tcase 2: MouseEvent.RIGHT_MOUSE_DOWN;\r\n\t\t\tdefault: MouseEvent.MOUSE_DOWN;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__onMouse (type, Std.int (x * window.scale), Std.int (y * window.scale), button);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onMouseMove (window:Window, x:Float, y:Float):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\t__onMouse (MouseEvent.MOUSE_MOVE, Std.int (x * window.scale), Std.int (y * window.scale), 0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onMouseMoveRelative (window:Window, x:Float, y:Float):Void {\r\n\t\t\r\n\t\t//if (this.window == null || this.window != window) return;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onMouseUp (window:Window, x:Float, y:Float, button:Int):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\tvar type = switch (button) {\r\n\t\t\t\r\n\t\t\tcase 1: MouseEvent.MIDDLE_MOUSE_UP;\r\n\t\t\tcase 2: MouseEvent.RIGHT_MOUSE_UP;\r\n\t\t\tdefault: MouseEvent.MOUSE_UP;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__onMouse (type, Std.int (x * window.scale), Std.int (y * window.scale), button);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onMouseWheel (window:Window, deltaX:Float, deltaY:Float):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\t__onMouseWheel (Std.int (deltaX * window.scale), Std.int (deltaY * window.scale));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onPreloadComplete ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onPreloadProgress (loaded:Int, total:Int):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onRenderContextLost (renderer:Renderer):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onRenderContextRestored (renderer:Renderer, context:RenderContext):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onTextEdit (window:Window, text:String, start:Int, length:Int):Void {\r\n\t\t\r\n\t\t//if (this.window == null || this.window != window) return;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onTextInput (window:Window, text:String):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\t// TODO: Move to TextField\r\n\t\t\r\n\t\tvar stack = new Array <DisplayObject> ();\r\n\t\t\r\n\t\tif (__focus == null) {\r\n\t\t\t\r\n\t\t\t__getInteractive (stack);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t__focus.__getInteractive (stack);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar event = new TextEvent (TextEvent.TEXT_INPUT, true, false, text);\r\n\t\tif (stack.length > 0) {\r\n\t\t\t\r\n\t\t\tstack.reverse ();\r\n\t\t\t__fireEvent (event, stack);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t__broadcast (event, true);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onTouchMove (touch:Touch):Void {\r\n\t\t\r\n\t\t__onTouch (TouchEvent.TOUCH_MOVE, touch);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onTouchEnd (touch:Touch):Void {\r\n\t\t\r\n\t\t__onTouch (TouchEvent.TOUCH_END, touch);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onTouchStart (touch:Touch):Void {\r\n\t\t\r\n\t\t__onTouch (TouchEvent.TOUCH_BEGIN, touch);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onWindowActivate (window:Window):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\tvar event = new Event (Event.ACTIVATE);\r\n\t\t__broadcast (event, true);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onWindowClose (window:Window):Void {\r\n\t\t\r\n\t\tif (this.window == window) {\r\n\t\t\t\r\n\t\t\tthis.window = null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onWindowCreate (window:Window):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\tif (window.renderer != null) {\r\n\t\t\t\r\n\t\t\tswitch (window.renderer.context) {\r\n\t\t\t\t\r\n\t\t\t\tcase OPENGL (gl):\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if !disable_cffi\r\n\t\t\t\t\t__renderer = new GLRenderer (stageWidth, stageHeight, gl);\r\n\t\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\tcase CANVAS (context):\r\n\t\t\t\t\t\r\n\t\t\t\t\t__renderer = new CanvasRenderer (stageWidth, stageHeight, context);\r\n\t\t\t\t\r\n\t\t\t\tcase DOM (element):\r\n\t\t\t\t\t\r\n\t\t\t\t\t__renderer = new DOMRenderer (stageWidth, stageHeight, element);\r\n\t\t\t\t\r\n\t\t\t\tcase CAIRO (cairo):\r\n\t\t\t\t\t\r\n\t\t\t\t\t__renderer = new CairoRenderer (stageWidth, stageHeight, cairo);\r\n\t\t\t\t\r\n\t\t\t\tcase CONSOLE (ctx):\r\n\t\t\t\t\t\r\n\t\t\t\t\t__renderer = new ConsoleRenderer (stageWidth, stageHeight, ctx);\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onWindowDeactivate (window:Window):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\tvar event = new Event (Event.DEACTIVATE);\r\n\t\t__broadcast (event, true);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onWindowEnter (window:Window):Void {\r\n\t\t\r\n\t\t//if (this.window == null || this.window != window) return;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onWindowFocusIn (window:Window):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\tvar event = new FocusEvent (FocusEvent.FOCUS_IN, true, false, null, false, 0);\r\n\t\t__broadcast (event, true);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onWindowFocusOut (window:Window):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\tvar event = new FocusEvent (FocusEvent.FOCUS_OUT, true, false, null, false, 0);\r\n\t\t__broadcast (event, true);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onWindowFullscreen (window:Window):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\tif (__displayState == NORMAL) {\r\n\t\t\t\r\n\t\t\t__displayState = FULL_SCREEN_INTERACTIVE;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onWindowLeave (window:Window):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\t__dispatchEvent (new Event (Event.MOUSE_LEAVE));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onWindowMinimize (window:Window):Void {\r\n\t\t\r\n\t\t//if (this.window == null || this.window != window) return;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onWindowMove (window:Window, x:Float, y:Float):Void {\r\n\t\t\r\n\t\t//if (this.window == null || this.window != window) return;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onWindowResize (window:Window, width:Int, height:Int):Void {\r\n\t\t\r\n\t\tif (this.window == null || this.window != window) return;\r\n\t\t\r\n\t\tif (__displayState != NORMAL && !window.fullscreen) {\r\n\t\t\t\r\n\t\t\t__displayState = NORMAL;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tstageWidth = Std.int (width * window.scale);\r\n\t\tstageHeight = Std.int (height * window.scale);\r\n\t\t\r\n\t\tif (__renderer != null) {\r\n\t\t\t\r\n\t\t\t__renderer.resize (stageWidth, stageHeight);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tsetStageVideos([]);\r\n\t\t\r\n\t\tvar event = new Event (Event.RESIZE);\r\n\t\t__broadcast (event, false);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function onWindowRestore (window:Window):Void {\r\n\t\t\r\n\t\t//if (this.window == null || this.window != window) return;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function render (renderer:Renderer):Void {\r\n\t\t\r\n\t\tif (renderer.window == null || renderer.window != window) return;\r\n\t\t\r\n\t\t// TODO: Fix multiple stages more gracefully\r\n\t\t\r\n\t\tif (application != null && application.windows.length > 0) {\r\n\t\t\t\r\n\t\t\t__setTransformDirty ();\r\n\t\t\t__setRenderDirty ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__rendering) return;\r\n\t\t__rendering = true;\r\n\t\t\r\n\t\t#if hxtelemetry\r\n\t\tTelemetry.__advanceFrame ();\r\n\t\t#end\r\n\t\t\r\n\t\t__broadcast (new Event (Event.ENTER_FRAME), true);\r\n\t\t\r\n\t\tif (__invalidated) {\r\n\t\t\t\r\n\t\t\t__invalidated = false;\r\n\t\t\t__broadcast (new Event (Event.RENDER), true);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#if hxtelemetry\r\n\t\tvar stack = Telemetry.__unwindStack ();\r\n\t\tTelemetry.__startTiming (TelemetryCommandName.RENDER);\r\n\t\t#end\r\n\t\t\r\n\t\t__renderable = true;\r\n\t\t\r\n\t\t__enterFrame (__deltaTime);\r\n\t\t__deltaTime = 0;\r\n\t\t__update (false, true);\r\n\t\t\r\n\t\tif (__renderer != null) {\r\n\t\t\t\r\n\t\t\tswitch (renderer.context) {\r\n\t\t\t\t\r\n\t\t\t\tcase CAIRO (cairo):\r\n\t\t\t\t\t\r\n\t\t\t\t\tcast (__renderer, CairoRenderer).cairo = cairo;\r\n\t\t\t\t\t@:privateAccess (__renderer.renderSession).cairo = cairo;\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__renderer.render (this);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#if hxtelemetry\r\n\t\tTelemetry.__endTiming (TelemetryCommandName.RENDER);\r\n\t\tTelemetry.__rewindStack (stack);\r\n\t\t#end\r\n\t\t\r\n\t\t__rendering = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function update (deltaTime:Int):Void {\r\n\t\t\r\n\t\t__deltaTime = deltaTime;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __drag (mouse:Point):Void {\r\n\t\t\r\n\t\tvar parent = __dragObject.parent;\r\n\t\tif (parent != null) {\r\n\t\t\t\r\n\t\t\tmouse = parent.globalToLocal (mouse);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar x = mouse.x + __dragOffsetX;\r\n\t\tvar y = mouse.y + __dragOffsetY;\r\n\t\t\r\n\t\tif (__dragBounds != null) {\r\n\t\t\t\r\n\t\t\tif (x < __dragBounds.x) {\r\n\t\t\t\t\r\n\t\t\t\tx = __dragBounds.x;\r\n\t\t\t\t\r\n\t\t\t} else if (x > __dragBounds.right) {\r\n\t\t\t\t\r\n\t\t\t\tx = __dragBounds.right;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (y < __dragBounds.y) {\r\n\t\t\t\t\r\n\t\t\t\ty = __dragBounds.y;\r\n\t\t\t\t\r\n\t\t\t} else if (y > __dragBounds.bottom) {\r\n\t\t\t\t\r\n\t\t\t\ty = __dragBounds.bottom;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__dragObject.x = x;\r\n\t\t__dragObject.y = y;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __fireEvent (event:Event, stack:Array<DisplayObject>):Void {\r\n\t\t\r\n\t\tvar length = stack.length;\r\n\t\t\r\n\t\tif (length == 0) {\r\n\t\t\t\r\n\t\t\tevent.eventPhase = EventPhase.AT_TARGET;\r\n\t\t\tevent.target.__broadcast (event, false);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tevent.eventPhase = EventPhase.CAPTURING_PHASE;\r\n\t\t\tevent.target = stack[stack.length - 1];\r\n\t\t\t\r\n\t\t\tfor (i in 0...length - 1) {\r\n\t\t\t\t\r\n\t\t\t\tstack[i].__broadcast (event, false);\r\n\t\t\t\t\r\n\t\t\t\tif (event.__isCanceled) {\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tevent.eventPhase = EventPhase.AT_TARGET;\r\n\t\t\tevent.target.__broadcast (event, false);\r\n\t\t\t\r\n\t\t\tif (event.__isCanceled) {\r\n\t\t\t\t\r\n\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (event.bubbles) {\r\n\t\t\t\t\r\n\t\t\t\tevent.eventPhase = EventPhase.BUBBLING_PHASE;\r\n\t\t\t\tvar i = length - 2;\r\n\t\t\t\t\r\n\t\t\t\twhile (i >= 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tstack[i].__broadcast (event, false);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (event.__isCanceled) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\ti--;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __getInteractive (stack:Array<DisplayObject>):Bool {\r\n\t\t\r\n\t\tif (stack != null) {\r\n\t\t\t\r\n\t\t\tstack.push (this);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __onKey (type:String, keyCode:KeyCode, modifier:KeyModifier):Void {\r\n\t\t\r\n\t\tMouseEvent.__altKey = modifier.altKey;\r\n\t\tMouseEvent.__commandKey = modifier.metaKey;\r\n\t\tMouseEvent.__ctrlKey = modifier.ctrlKey;\r\n\t\tMouseEvent.__shiftKey = modifier.shiftKey;\r\n\t\t\r\n\t\tvar stack = new Array <DisplayObject> ();\r\n\t\t\r\n\t\tif (__focus == null) {\r\n\t\t\t\r\n\t\t\t__getInteractive (stack);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t__focus.__getInteractive (stack);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (stack.length > 0) {\r\n\t\t\t\r\n\t\t\tvar keyLocation = Keyboard.__getKeyLocation (keyCode);\r\n\t\t\tvar keyCode = Keyboard.__convertKeyCode (keyCode);\r\n\t\t\tvar charCode = Keyboard.__getCharCode (keyCode, modifier.shiftKey);\r\n\t\t\t\r\n\t\t\tvar event = new KeyboardEvent (type, true, false, charCode, keyCode, keyLocation, __macKeyboard ? modifier.ctrlKey || modifier.metaKey : modifier.ctrlKey, modifier.altKey, modifier.shiftKey, modifier.ctrlKey, modifier.metaKey);\r\n\t\t\t\r\n\t\t\tstack.reverse ();\r\n\t\t\t__fireEvent (event, stack);\r\n\t\t\t\r\n\t\t\tif (event.__isCanceled) {\r\n\t\t\t\t\r\n\t\t\t\tif (type == KeyboardEvent.KEY_DOWN) {\r\n\t\t\t\t\t\r\n\t\t\t\t\twindow.onKeyDown.cancel ();\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\twindow.onKeyUp.cancel ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __onMouse (type:String, x:Float, y:Float, button:Int):Void {\r\n\t\t\r\n\t\tif (button > 2) return;\r\n\t\t\r\n\t\t__mouseX = x;\r\n\t\t__mouseY = y;\r\n\t\t\r\n\t\tvar stack = [];\r\n\t\tvar target:InteractiveObject = null;\r\n\t\tvar targetPoint = new Point (x, y);\r\n\t\t\r\n\t\tif (__hitTest (x, y, true, stack, true, this)) {\r\n\t\t\t\r\n\t\t\ttarget = cast stack[stack.length - 1];\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\ttarget = this;\r\n\t\t\tstack = [ this ];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (target == null) target = this;\r\n\t\t\r\n\t\tvar clickType = null;\r\n\t\t\r\n\t\tswitch (type) {\r\n\t\t\t\r\n\t\t\tcase MouseEvent.MOUSE_DOWN:\r\n\t\t\t\t\r\n\t\t\t\tif (target.tabEnabled) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tfocus = target;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tfocus = null;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t__mouseDownLeft = target;\r\n\t\t\t\r\n\t\t\tcase MouseEvent.MIDDLE_MOUSE_DOWN:\r\n\t\t\t\t\r\n\t\t\t\t__mouseDownMiddle = target;\r\n\t\t\t\r\n\t\t\tcase MouseEvent.RIGHT_MOUSE_DOWN:\r\n\t\t\t\t\r\n\t\t\t\t__mouseDownRight = target;\r\n\t\t\t\r\n\t\t\tcase MouseEvent.MOUSE_UP:\r\n\t\t\t\t\r\n\t\t\t\tif (__mouseDownLeft == target) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tclickType = MouseEvent.CLICK;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t__mouseDownLeft = null;\r\n\t\t\t\r\n\t\t\tcase MouseEvent.MIDDLE_MOUSE_UP:\r\n\t\t\t\t\r\n\t\t\t\tif (__mouseDownMiddle == target) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tclickType = MouseEvent.MIDDLE_CLICK;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t__mouseDownMiddle = null;\r\n\t\t\t\r\n\t\t\tcase MouseEvent.RIGHT_MOUSE_UP:\r\n\t\t\t\t\r\n\t\t\t\tif (__mouseDownRight == target) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tclickType = MouseEvent.RIGHT_CLICK;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t__mouseDownRight = null;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t__fireEvent (MouseEvent.__create (type, button, __mouseX, __mouseY, (target == this ? targetPoint : target.globalToLocal (targetPoint)), target), stack);\r\n\t\t\r\n\t\tif (clickType != null) {\r\n\t\t\t\r\n\t\t\t__fireEvent (MouseEvent.__create (clickType, button, __mouseX, __mouseY, (target == this ? targetPoint : target.globalToLocal (targetPoint)), target), stack);\r\n\t\t\t\r\n\t\t\tif (type == MouseEvent.MOUSE_UP && cast (target, openfl.display.InteractiveObject).doubleClickEnabled) {\r\n\t\t\t\t\r\n\t\t\t\tvar currentTime = Lib.getTimer ();\r\n\t\t\t\tif (currentTime - __lastClickTime < 500) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__fireEvent (MouseEvent.__create (MouseEvent.DOUBLE_CLICK, button, __mouseX, __mouseY, (target == this ? targetPoint : target.globalToLocal (targetPoint)), target), stack);\r\n\t\t\t\t\t__lastClickTime = 0;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__lastClickTime = currentTime;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar cursor = null;\r\n\t\t\r\n\t\tfor (target in stack) {\r\n\t\t\t\r\n\t\t\tcursor = target.__getCursor ();\r\n\t\t\t\r\n\t\t\tif (cursor != null) {\r\n\t\t\t\t\r\n\t\t\t\tMouse.cursor = cursor;\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (cursor == null) {\r\n\t\t\t\r\n\t\t\tMouse.cursor = ARROW;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar event, localPoint;\r\n\t\t\r\n\t\tfor (target in __mouseOutStack) {\r\n\t\t\t\r\n\t\t\tif (stack.indexOf (target) == -1) {\r\n\t\t\t\t\r\n\t\t\t\t__mouseOutStack.remove (target);\r\n\t\t\t\t\r\n\t\t\t\tlocalPoint = target.globalToLocal (targetPoint);\r\n\t\t\t\tevent = MouseEvent.__create (MouseEvent.MOUSE_OUT, button, __mouseX, __mouseY, localPoint, cast target);\r\n\t\t\t\tevent.bubbles = false;\r\n\t\t\t\ttarget.__dispatchEvent (event);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (target in stack) {\r\n\t\t\t\r\n\t\t\tif (__mouseOutStack.indexOf (target) == -1) {\r\n\t\t\t\t\r\n\t\t\t\tif (target.hasEventListener (MouseEvent.MOUSE_OVER)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tlocalPoint = target.globalToLocal (targetPoint);\r\n\t\t\t\t\tevent = MouseEvent.__create (MouseEvent.MOUSE_OVER, button, __mouseX, __mouseY, localPoint, cast target);\r\n\t\t\t\t\tevent.bubbles = false;\r\n\t\t\t\t\ttarget.__dispatchEvent (event);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (target.hasEventListener (MouseEvent.MOUSE_OUT)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__mouseOutStack.push (target);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__dragObject != null) {\r\n\t\t\t\r\n\t\t\t__drag (targetPoint);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __onMouseWheel (deltaX:Float, deltaY:Float):Void {\r\n\t\t\r\n\t\tvar x = __mouseX;\r\n\t\tvar y = __mouseY;\r\n\t\t\r\n\t\tvar stack = [];\r\n\t\t\r\n\t\tif (!__hitTest (x, y, false, stack, true, this)) {\r\n\t\t\t\r\n\t\t\tstack = [ this ];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar target:InteractiveObject = cast stack[stack.length - 1];\r\n\t\tvar targetPoint = new Point (x, y);\r\n\t\tvar delta = Std.int (deltaY);\r\n\t\t\r\n\t\t__fireEvent (MouseEvent.__create (MouseEvent.MOUSE_WHEEL, 0, __mouseX, __mouseY, (target == this ? targetPoint : target.globalToLocal (targetPoint)), target, delta), stack);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __onTouch (type:String, touch:Touch):Void {\r\n\t\t\r\n\t\tvar point = new Point (touch.x * stageWidth, touch.y * stageHeight);\r\n\t\t\r\n\t\t__mouseX = point.x;\r\n\t\t__mouseY = point.y;\r\n\t\t\r\n\t\tvar __stack = [];\r\n\t\t\r\n\t\tif (__hitTest (__mouseX, __mouseY, false, __stack, true, this)) {\r\n\t\t\t\r\n\t\t\tvar target = __stack[__stack.length - 1];\r\n\t\t\tif (target == null) target = this;\r\n\t\t\tvar localPoint = target.globalToLocal (point);\r\n\t\t\t\r\n\t\t\tvar touchEvent = TouchEvent.__create (type, /*event,*/ null/*touch*/, __mouseX, __mouseY, localPoint, cast target);\r\n\t\t\ttouchEvent.touchPointID = touch.id;\r\n\t\t\t//touchEvent.isPrimaryTouchPoint = isPrimaryTouchPoint;\r\n\t\t\ttouchEvent.isPrimaryTouchPoint = true;\r\n\t\t\t\r\n\t\t\t__fireEvent (touchEvent, __stack);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar touchEvent = TouchEvent.__create (type, /*event,*/ null/*touch*/, __mouseX, __mouseY, point, this);\r\n\t\t\ttouchEvent.touchPointID = touch.id;\r\n\t\t\t//touchEvent.isPrimaryTouchPoint = isPrimaryTouchPoint;\r\n\t\t\ttouchEvent.isPrimaryTouchPoint = true;\r\n\t\t\t\r\n\t\t\t__fireEvent (touchEvent, [ stage ]);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __resize ():Void {\r\n\t\t\r\n\t\t/*\r\n\t\tif (__element != null && (__div == null || (__div != null && __fullscreen))) {\r\n\t\t\t\r\n\t\t\tif (__fullscreen) {\r\n\t\t\t\t\r\n\t\t\t\tstageWidth = __element.clientWidth;\r\n\t\t\t\tstageHeight = __element.clientHeight;\r\n\t\t\t\t\r\n\t\t\t\tif (__canvas != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (__element != cast __canvas) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__canvas.width = stageWidth;\r\n\t\t\t\t\t\t__canvas.height = stageHeight;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__div.style.width = stageWidth + \"px\";\r\n\t\t\t\t\t__div.style.height = stageHeight + \"px\";\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tvar scaleX = __element.clientWidth / __originalWidth;\r\n\t\t\t\tvar scaleY = __element.clientHeight / __originalHeight;\r\n\t\t\t\t\r\n\t\t\t\tvar currentRatio = scaleX / scaleY;\r\n\t\t\t\tvar targetRatio = Math.min (scaleX, scaleY);\r\n\t\t\t\t\r\n\t\t\t\tif (__canvas != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (__element != cast __canvas) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__canvas.style.width = __originalWidth * targetRatio + \"px\";\r\n\t\t\t\t\t\t__canvas.style.height = __originalHeight * targetRatio + \"px\";\r\n\t\t\t\t\t\t__canvas.style.marginLeft = ((__element.clientWidth - (__originalWidth * targetRatio)) / 2) + \"px\";\r\n\t\t\t\t\t\t__canvas.style.marginTop = ((__element.clientHeight - (__originalHeight * targetRatio)) / 2) + \"px\";\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__div.style.width = __originalWidth * targetRatio + \"px\";\r\n\t\t\t\t\t__div.style.height = __originalHeight * targetRatio + \"px\";\r\n\t\t\t\t\t__div.style.marginLeft = ((__element.clientWidth - (__originalWidth * targetRatio)) / 2) + \"px\";\r\n\t\t\t\t\t__div.style.marginTop = ((__element.clientHeight - (__originalHeight * targetRatio)) / 2) + \"px\";\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}*/\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __startDrag (sprite:Sprite, lockCenter:Bool, bounds:Rectangle):Void {\r\n\t\t\r\n\t\t__dragBounds = (bounds == null) ? null : bounds.clone ();\r\n\t\t__dragObject = sprite;\r\n\t\t\r\n\t\tif (__dragObject != null) {\r\n\t\t\t\r\n\t\t\tif (lockCenter) {\r\n\t\t\t\t\r\n\t\t\t\t__dragOffsetX = -__dragObject.width / 2;\r\n\t\t\t\t__dragOffsetY = -__dragObject.height / 2;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tvar mouse = new Point (mouseX, mouseY);\r\n\t\t\t\tvar parent = __dragObject.parent;\r\n\t\t\t\t\r\n\t\t\t\tif (parent != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tmouse = parent.globalToLocal (mouse);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t__dragOffsetX = __dragObject.x - mouse.x;\r\n\t\t\t\t__dragOffsetY = __dragObject.y - mouse.y;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __stopDrag (sprite:Sprite):Void {\r\n\t\t\r\n\t\t__dragBounds = null;\r\n\t\t__dragObject = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __update (transformOnly:Bool, updateChildren:Bool, ?maskGrahpics:Graphics = null):Void {\r\n\t\t\r\n\t\tif (transformOnly) {\r\n\t\t\t\r\n\t\t\tif (DisplayObject.__worldTransformDirty > 0) {\r\n\t\t\t\t\r\n\t\t\t\tsuper.__update (true, updateChildren, maskGrahpics);\r\n\t\t\t\t\r\n\t\t\t\tif (updateChildren) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tDisplayObject.__worldTransformDirty = 0;\r\n\t\t\t\t\t__dirty = true;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tif (DisplayObject.__worldTransformDirty > 0 || __dirty || DisplayObject.__worldRenderDirty > 0) {\r\n\t\t\t\t\r\n\t\t\t\tsuper.__update (false, updateChildren, maskGrahpics);\r\n\t\t\t\t\r\n\t\t\t\tif (updateChildren) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if dom\r\n\t\t\t\t\t__wasDirty = true;\r\n\t\t\t\t\t#end\r\n\t\t\t\t\t\r\n\t\t\t\t\tDisplayObject.__worldTransformDirty = 0;\r\n\t\t\t\t\tDisplayObject.__worldRenderDirty = 0;\r\n\t\t\t\t\t__dirty = false;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} #if dom else if (__wasDirty) {\r\n\t\t\t\t\r\n\t\t\t\t// If we were dirty last time, we need at least one more\r\n\t\t\t\t// update in order to clear \"changed\" properties\r\n\t\t\t\t\r\n\t\t\t\tsuper.__update (false, updateChildren, maskGrahpics);\r\n\t\t\t\t\r\n\t\t\t\tif (updateChildren) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__wasDirty = false;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} #end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate override function get_mouseX ():Float {\r\n\t\t\r\n\t\treturn __mouseX;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function get_mouseY ():Float {\r\n\t\t\r\n\t\treturn __mouseY;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Event Handlers\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t#if (js && html5)\r\n\tprivate function canvas_onContextLost (event:js.html.webgl.ContextEvent):Void {\r\n\t\t\r\n\t\t//__glContextLost = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function canvas_onContextRestored (event:js.html.webgl.ContextEvent):Void {\r\n\t\t\r\n\t\t//__glContextLost = false;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_color ():Int {\r\n\t\t\r\n\t\treturn __color;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_color (value:Int):Int {\r\n\t\t\r\n\t\tvar r = (value & 0xFF0000) >>> 16;\r\n\t\tvar g = (value & 0x00FF00) >>> 8;\r\n\t\tvar b = (value & 0x0000FF);\r\n\t\t\r\n\t\t__colorSplit = [ r / 0xFF, g / 0xFF, b / 0xFF ];\r\n\t\t__colorString = \"#\" + StringTools.hex (value, 6);\r\n\t\t\r\n\t\treturn __color = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_displayState ():StageDisplayState {\r\n\t\t\r\n\t\treturn __displayState;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_displayState (value:StageDisplayState):StageDisplayState {\r\n\t\t\r\n\t\tif (window != null) {\r\n\t\t\t\r\n\t\t\tswitch (value) {\r\n\t\t\t\t\r\n\t\t\t\tcase NORMAL:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (window.fullscreen) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//window.minimized = false;\r\n\t\t\t\t\t\twindow.fullscreen = false;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdispatchEvent (new FullScreenEvent (FullScreenEvent.FULL_SCREEN, false, false, false, true));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!window.fullscreen) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//window.minimized = false;\r\n\t\t\t\t\t\twindow.fullscreen = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdispatchEvent (new FullScreenEvent (FullScreenEvent.FULL_SCREEN, false, false, true, true));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __displayState = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_focus ():InteractiveObject {\r\n\t\t\r\n\t\treturn __focus;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_focus (value:InteractiveObject):InteractiveObject {\r\n\t\t\r\n\t\tif (value != __focus) {\r\n\t\t\t\r\n\t\t\tvar oldFocus = __focus;\r\n\t\t\t__focus = value;\r\n\t\t\t\r\n\t\t\tif (oldFocus != null) {\r\n\t\t\t\t\r\n\t\t\t\tvar event = new FocusEvent (FocusEvent.FOCUS_OUT, true, false, __focus, false, 0);\r\n\t\t\t\t__stack = [];\r\n\t\t\t\toldFocus.__getInteractive (__stack);\r\n\t\t\t\t__stack.reverse ();\r\n\t\t\t\t__fireEvent (event, __stack);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (__focus != null) {\r\n\t\t\t\t\r\n\t\t\t\tvar event = new FocusEvent (FocusEvent.FOCUS_IN, true, false, oldFocus, false, 0);\r\n\t\t\t\t__stack = [];\r\n\t\t\t\tvalue.__getInteractive (__stack);\r\n\t\t\t\t__stack.reverse ();\r\n\t\t\t\t__fireEvent (event, __stack);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __focus;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_frameRate ():Float {\r\n\t\t\r\n\t\tif (application != null) {\r\n\t\t\t\r\n\t\t\treturn application.frameRate;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_frameRate (value:Float):Float {\r\n\t\t\r\n\t\tif (application != null) {\r\n\t\t\t\r\n\t\t\treturn application.frameRate = value;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function get_stageVideos():Array<StageVideo>\r\n\t{\r\n\t\treturn _stageVideos;\r\n\t}\r\n\t\r\n\tprivate function setStageVideos(value:Array<StageVideo>):Void\r\n\t{\r\n\t\tif (_stageVideos == value) return;\r\n\t\t_stageVideos = value;\r\n\t\tvar availability:String = StageVideoAvailability.AVAILABLE;\r\n\t\tif (_stageVideos.length == 0) {\r\n\t\t\tavailability = StageVideoAvailability.UNAVAILABLE;\r\n\t\t}\r\n\t\tthis.dispatchEvent(new StageVideoAvailabilityEvent(StageVideoAvailabilityEvent.STAGE_VIDEO_AVAILABILITY, false, false, availability));\r\n\t}\r\n\r\n}\r\n\r\n\r\n#else\r\ntypedef Stage = openfl._legacy.display.Stage;\r\n#end","package openfl.display;\r\n\r\n\r\nimport haxe.Timer;\r\nimport openfl.display.OpenGLView;\r\nimport openfl.display3D.Context3D;\r\nimport openfl.events.ErrorEvent;\r\nimport openfl.events.Event;\r\nimport openfl.events.EventDispatcher;\r\n\r\n\r\nclass Stage3D extends EventDispatcher {\r\n\t\r\n\t\r\n\tpublic var context3D:Context3D;\r\n\tpublic var visible:Bool; // TODO\r\n\tpublic var x:Float; // TODO\r\n\tpublic var y:Float; // TODO\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function requestContext3D (context3DRenderMode:String = \"\"):Void {\r\n\t\t\r\n\t\tif (OpenGLView.isSupported) {\r\n\t\t\t\r\n\t\t\tTimer.delay(function() {\r\n\t\t\t\t\r\n\t\t\t\tcontext3D = new Context3D ();\r\n\t\t\t\tdispatchEvent (new Event (Event.CONTEXT3D_CREATE));\r\n\t\t\t\t\r\n\t\t\t}, 1);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tTimer.delay(function() {\r\n\t\t\t\t\r\n\t\t\t\tdispatchEvent (new ErrorEvent (ErrorEvent.ERROR));\r\n\t\t\t\t\r\n\t\t\t}, 1);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract StageAlign(Null<Int>) {\r\n\t\r\n\tpublic var BOTTOM = 0;\r\n\tpublic var BOTTOM_LEFT = 1;\r\n\tpublic var BOTTOM_RIGHT = 2;\r\n\tpublic var LEFT = 3;\r\n\tpublic var RIGHT = 4;\r\n\tpublic var TOP = 5;\r\n\tpublic var TOP_LEFT = 6;\r\n\tpublic var TOP_RIGHT = 7;\r\n\t\r\n\t@:from private static function fromString (value:String):StageAlign {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"bottom\": BOTTOM;\r\n\t\t\tcase \"bottomLeft\": BOTTOM_LEFT;\r\n\t\t\tcase \"bottomRight\": BOTTOM_RIGHT;\r\n\t\t\tcase \"left\": LEFT;\r\n\t\t\tcase \"right\": RIGHT;\r\n\t\t\tcase \"top\": TOP;\r\n\t\t\tcase \"topLeft\": TOP_LEFT;\r\n\t\t\tcase \"topRight\": TOP_RIGHT;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase StageAlign.BOTTOM: \"bottom\";\r\n\t\t\tcase StageAlign.BOTTOM_LEFT: \"bottomLeft\";\r\n\t\t\tcase StageAlign.BOTTOM_RIGHT: \"bottomRight\";\r\n\t\t\tcase StageAlign.LEFT: \"left\";\r\n\t\t\tcase StageAlign.RIGHT: \"right\";\r\n\t\t\tcase StageAlign.TOP: \"top\";\r\n\t\t\tcase StageAlign.TOP_LEFT: \"topLeft\";\r\n\t\t\tcase StageAlign.TOP_RIGHT: \"topRight\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef StageAlign = openfl._legacy.display.StageAlign;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract StageDisplayState(Null<Int>) {\r\n\t\r\n\tpublic var FULL_SCREEN = 0;\r\n\tpublic var FULL_SCREEN_INTERACTIVE = 1;\r\n\tpublic var NORMAL = 2;\r\n\t\r\n\t@:from private static function fromString (value:String):StageDisplayState {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"fullScreen\": FULL_SCREEN;\r\n\t\t\tcase \"fullScreenInteractive\": FULL_SCREEN_INTERACTIVE;\r\n\t\t\tcase \"normal\": NORMAL;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase StageDisplayState.FULL_SCREEN: \"fullScreen\";\r\n\t\t\tcase StageDisplayState.FULL_SCREEN_INTERACTIVE: \"fullScreenInteractive\";\r\n\t\t\tcase StageDisplayState.NORMAL: \"normal\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef StageDisplayState = openfl._legacy.display.StageDisplayState;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract StageQuality(Null<Int>) {\r\n\t\r\n\tpublic var BEST = 0;\r\n\tpublic var HIGH = 1;\r\n\tpublic var LOW = 2;\r\n\tpublic var MEDIUM = 3;\r\n\t\r\n\t@:from private static function fromString (value:String):StageQuality {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"best\": BEST;\r\n\t\t\tcase \"high\": HIGH;\r\n\t\t\tcase \"low\": LOW;\r\n\t\t\tcase \"medium\": MEDIUM;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase StageQuality.BEST: \"best\";\r\n\t\t\tcase StageQuality.HIGH: \"high\";\r\n\t\t\tcase StageQuality.LOW: \"low\";\r\n\t\t\tcase StageQuality.MEDIUM: \"medium\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef StageQuality = openfl._legacy.display.StageQuality;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract StageScaleMode(Null<Int>) {\r\n\t\r\n\tpublic var EXACT_FIT = 0;\r\n\tpublic var NO_BORDER = 1;\r\n\tpublic var NO_SCALE = 2;\r\n\tpublic var SHOW_ALL = 3;\r\n\t\r\n\t@:from private static function fromString (value:String):StageScaleMode {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"exactFit\": EXACT_FIT;\r\n\t\t\tcase \"noBorder\": NO_BORDER;\r\n\t\t\tcase \"noScale\": NO_SCALE;\r\n\t\t\tcase \"showAll\": SHOW_ALL;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase StageScaleMode.EXACT_FIT: \"exactFit\";\r\n\t\t\tcase StageScaleMode.NO_BORDER: \"noBorder\";\r\n\t\t\tcase StageScaleMode.NO_SCALE: \"noScale\";\r\n\t\t\tcase StageScaleMode.SHOW_ALL: \"showAll\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef StageScaleMode = openfl._legacy.display.StageScaleMode;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.Graphics;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.Vector;\r\n\r\n@:allow(openfl.display.Graphics)\r\n\r\n\r\nclass Tilesheet {\r\n\t\r\n\t\r\n\tpublic static inline var TILE_SCALE = 0x0001;\r\n\tpublic static inline var TILE_ROTATION = 0x0002;\r\n\tpublic static inline var TILE_RGB = 0x0004;\r\n\tpublic static inline var TILE_ALPHA = 0x0008;\r\n\tpublic static inline var TILE_TRANS_2x2 = 0x0010;\r\n\tpublic static inline var TILE_RECT = 0x0020;\r\n\tpublic static inline var TILE_ORIGIN = 0x0040;\r\n\tpublic static inline var TILE_TRANS_COLOR = 0x0080;\r\n\t\r\n\tpublic static inline var TILE_BLEND_NORMAL = 0x00000000;\r\n\tpublic static inline var TILE_BLEND_ADD = 0x00010000;\r\n\tpublic static inline var TILE_BLEND_MULTIPLY = 0x00020000;\r\n\tpublic static inline var TILE_BLEND_SCREEN = 0x00040000;\r\n\tpublic static inline var TILE_BLEND_SUBTRACT = 0x00080000;\r\n\tpublic static inline var TILE_BLEND_DARKEN = 0x00100000;\r\n\tpublic static inline var TILE_BLEND_LIGHTEN = 0x00200000;\r\n\tpublic static inline var TILE_BLEND_OVERLAY = 0x00400000;\r\n\tpublic static inline var TILE_BLEND_HARDLIGHT = 0x00800000;\r\n\tpublic static inline var TILE_BLEND_DIFFERENCE = 0x01000000;\r\n\tpublic static inline var TILE_BLEND_INVERT = 0x02000000;\r\n\t\r\n\t@:noCompletion private static var __defaultPoint = new Point (0, 0);\r\n\t\r\n\t@:noCompletion private var __bitmap:BitmapData;\r\n\t@:noCompletion private var __centerPoints:Array<Point>;\r\n\t@:noCompletion private var __tileRects:Array<Rectangle>;\r\n\t@:noCompletion private var __tileUVs:Array<Rectangle>;\r\n\t\r\n\t@:noCompletion private var __rectTile:Rectangle;\r\n\t@:noCompletion private var __rectUV:Rectangle;\r\n\t@:noCompletion private var __point:Point;\r\n\t\r\n\t#if flash\r\n\t@:noCompletion private var __bitmapHeight:Int;\r\n\t@:noCompletion private var __bitmapWidth:Int;\r\n\t@:noCompletion private var __ids:Vector<Int>;\r\n\t@:noCompletion private var __indices:Vector<Int>;\r\n\t@:noCompletion private var __uvs:Vector<Float>;\r\n\t@:noCompletion private var __vertices:Vector<Float>;\r\n\t#end\r\n\t\r\n\t/**\r\n\t *Creates new TileSheet Object\r\n\t * @param\timage a bitmap data to create tiles from\r\n\t */\r\n\tpublic function new (image:BitmapData) {\r\n\t\t\r\n\t\t__bitmap = image;\r\n\t\t__centerPoints = new Array<Point> ();\r\n\t\t__tileRects = new Array<Rectangle> ();\r\n\t\t__tileUVs = new Array<Rectangle> ();\r\n\t\t\r\n\t\t__rectTile = new Rectangle();\r\n\t\t__rectUV = new Rectangle();\r\n\t\t__point = new Point();\r\n\t\t\r\n\t\t#if flash\r\n\t\t__bitmapWidth = __bitmap.width;\r\n\t\t__bitmapHeight = __bitmap.height;\r\n\t\t__ids = new Vector <Int>();\r\n\t\t__vertices = new Vector <Float>();\r\n\t\t__indices = new Vector <Int>();\r\n\t\t__uvs = new Vector <Float>();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds an single tile to this TileSheet\r\n\t * @param\trectangle a rectangle defining the dimensions and positioning of a new tile\r\n\t * @param\tcenterPoint if set, will act as the translation point of the tile, default: top-left corner\r\n\t * @return an Int representing the id of a single tile rect\r\n\t */\r\n\tpublic function addTileRect (rectangle:Rectangle, centerPoint:Point = null):Int {\r\n\t\t\r\n\t\t__tileRects.push (rectangle);\r\n\t\t\r\n\t\tif (centerPoint == null) {\r\n\t\t\t\r\n\t\t\tcenterPoint = __defaultPoint;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#if flash\r\n\t\t__centerPoints.push (new Point (centerPoint.x / rectangle.width, centerPoint.y / rectangle.height));\r\n\t\t#else\r\n\t\t__centerPoints.push (centerPoint);\r\n\t\t#end\r\n\t\t\r\n\t\t__tileUVs.push (new Rectangle (rectangle.left / __bitmap.width, rectangle.top / __bitmap.height, rectangle.right / __bitmap.width, rectangle.bottom / __bitmap.height));\r\n\t\t\r\n\t\treturn __tileRects.length - 1;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if flash\r\n\tprivate inline function adjustIDs (vec:Vector<Int>, len:Int):Vector<Int> {\r\n\t\t\r\n\t\tif (vec.length != len) {\r\n\t\t\t\r\n\t\t\tvar prevLen = vec.length;\r\n\t\t\tvec.fixed = false;\r\n\t\t\tvec.length = len;\r\n\t\t\tvec.fixed = true;\r\n\t\t\t\r\n\t\t\tfor (i in prevLen...len)\r\n\t\t\t\tvec[i] = -1;\r\n\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn vec;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function adjustIndices (vec:Vector<Int>, len:Int):Vector<Int> {\r\n\t\t\r\n\t\tif (vec.length != len) {\r\n\t\t\t\r\n\t\t\tvec.fixed = false;\r\n\t\t\t\r\n\t\t\tif (vec.length > len) {\r\n\t\t\t\t\r\n\t\t\t\tvec.length = len;\r\n\t\t\t\tvec.fixed = true;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tvar offset6 = vec.length;\r\n\t\t\t\tvar offset4 = cast (4 * offset6 / 6, Int);\r\n\t\t\t\tvec.length = len;\r\n\t\t\t\tvec.fixed = true;\r\n\t\t\t\t\r\n\t\t\t\twhile (offset6 < len) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvec[offset6] = 0 + offset4;\r\n\t\t\t\t\tvec[offset6 + 1] = vec[offset6 + 3] = 1 + offset4;\r\n\t\t\t\t\tvec[offset6 + 2] = vec[offset6 + 5] = 2 + offset4;\r\n\t\t\t\t\tvec[offset6 + 4] = 3 + offset4;\r\n\t\t\t\t\toffset4 += 4;\r\n\t\t\t\t\toffset6 += 6;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn vec;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function adjustLen (vec:Vector<Float>, len:Int):Vector<Float> {\r\n\t\t\r\n\t\tif (vec.length != len) {\r\n\t\t\t\r\n\t\t\tvec.fixed = false;\r\n\t\t\tvec.length = len;\r\n\t\t\tvec.fixed = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn vec;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t/**\r\n\t * Draws tiles to a give Graphic Object\r\n\t * @param\tgraphics the \"Graphics\" object to draw tiles to\r\n\t * @param\ttileData an Array<Float>(3) denoting the X position, Y position, and tile to render repsectively\r\n\t * @param\tsmooth whether to smooth the tile or not\r\n\t * @param\tflags\r\n\t * @param\tcount\r\n\t */\r\n\tpublic function drawTiles (graphics:Graphics, tileData:Array<Float>, smooth:Bool = false, flags:Int = 0, count:Int = -1):Void {\r\n\t\t\r\n\t\tgraphics.drawTiles (this, tileData, smooth, flags, count);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic inline function getTileCenter (index:Int):Point {\r\n\t\t\r\n\t\treturn __centerPoints[index];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function getTileRect (index:Int):Rectangle {\r\n\t\t\r\n\t\treturn __tileRects[index];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function getTileUVs (index:Int):Rectangle {\r\n\t\t\r\n\t\treturn __tileUVs[index];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Tilesheet = openfl._legacy.display.Tilesheet;\r\n#end","package openfl.display; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract TriangleCulling(Null<Int>) {\r\n\t\r\n\tpublic var NEGATIVE = 0;\r\n\tpublic var NONE = 1;\r\n\tpublic var POSITIVE = 2;\r\n\t\r\n\t@:from private static function fromString (value:String):TriangleCulling {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"negative\": NEGATIVE;\r\n\t\t\tcase \"none\": NONE;\r\n\t\t\tcase \"positive\": POSITIVE;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase TriangleCulling.NEGATIVE: \"negative\";\r\n\t\t\tcase TriangleCulling.NONE: \"none\";\r\n\t\t\tcase TriangleCulling.POSITIVE: \"positive\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef TriangleCulling = openfl._legacy.display.TriangleCulling;\r\n#end","package openfl.display;\r\n\r\n\r\nimport lime.app.Application;\r\nimport lime.app.Config;\r\nimport lime.ui.Window in LimeWindow;\r\nimport openfl.Lib;\r\n\r\n@:access(openfl.display.Stage)\r\n\r\n\r\nclass Window extends LimeWindow {\r\n\t\r\n\t\r\n\tpublic function new (config:WindowConfig = null) {\r\n\t\t\r\n\t\tsuper (config);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function create (application:Application):Void {\r\n\t\t\r\n\t\tsuper.create (application);\r\n\t\t\r\n\t\t#if (!flash && !openfl_legacy)\r\n\t\t\r\n\t\tstage = new Stage (this, Reflect.hasField (config, \"background\") ? config.background : 0xFFFFFF);\r\n\t\tapplication.addModule (stage);\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\tstage = Lib.current.stage;\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display3D;\r\n\r\n\r\n#if !lime_legacy\r\nimport lime.app.Application;\r\n#end\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.OpenGLView;\r\nimport openfl.display3D.textures.CubeTexture;\r\nimport openfl.display3D.textures.RectangleTexture;\r\nimport openfl.display3D.textures.Texture;\r\nimport openfl.display3D.textures.TextureBase;\r\nimport openfl.errors.Error;\r\nimport openfl.events.Event;\r\nimport openfl.geom.Matrix3D;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.gl.GL;\r\nimport openfl.gl.GLFramebuffer;\r\nimport openfl.gl.GLUniformLocation;\r\nimport openfl.gl.GLProgram;\r\nimport openfl.gl.GLRenderbuffer;\r\nimport openfl.utils.ByteArray;\r\nimport openfl.utils.Float32Array;\r\nimport openfl.Lib;\r\n\r\n@:final class Context3D {\r\n\t\r\n\t\r\n\tprivate static var TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;\r\n\tprivate static var MAX_SAMPLERS = 8;\r\n\tprivate static var MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\r\n\t\r\n\tprivate static var anisotropySupportTested:Bool = false;\r\n\tprivate static var supportsAnisotropy:Bool = false;\r\n\tprivate static var maxSupportedAnisotropy:UInt = 256;\r\n\t\r\n\tpublic var driverInfo (default, null):String; // TODO\r\n\tpublic var enableErrorChecking:Bool; // TODO (use GL.getError() and GL.validateProgram(program))\r\n\t\r\n\tprivate var blendDestinationFactor:Int; // to mimic Stage3d behavior of keeping blending across frames:\r\n\tprivate var blendEnabled:Bool; // to mimic Stage3d behavior of keeping blending across frames:\r\n\tprivate var blendSourceFactor:Int; // to mimic Stage3d behavior of keeping blending across frames:\r\n\tprivate var currentProgram:Program3D;\r\n\tprivate var disposed:Bool;\r\n\tprivate var drawing:Bool; // to mimic Stage3d behavior of not allowing calls to drawTriangles between present and clear\r\n\tprivate var framebuffer:GLFramebuffer;\r\n\tprivate var indexBuffersCreated:Array<IndexBuffer3D>; // to keep track of stuff to dispose when calling dispose\r\n\tprivate var ogl:OpenGLView;\r\n\tprivate var programsCreated:Array<Program3D>; // to keep track of stuff to dispose when calling dispose\r\n\tprivate var renderbuffer:GLRenderbuffer;\r\n\tprivate var samplerParameters:Array<SamplerState>; //TODO : use Tupple3\r\n\tprivate var scrollRect:Rectangle;\r\n\tprivate var stencilbuffer:GLRenderbuffer;\r\n\tprivate var stencilCompareMode:Context3DCompareMode;\r\n\tprivate var stencilRef:Int;\r\n\tprivate var stencilReadMask:Int;\r\n\tprivate var texturesCreated:Array<TextureBase>; // to keep track of stuff to dispose when calling dispose\r\n\tprivate var vertexBuffersCreated:Array<VertexBuffer3D>; // to keep track of stuff to dispose when calling dispose\r\n\tprivate var _yFlip:Float;\r\n\tprivate var backBufferDepthAndStencil:Bool;\r\n\tprivate var rttDepthAndStencil:Bool;\r\n\tprivate var scissorRectangle:Rectangle;\r\n\tprivate var renderToTexture:Bool;\r\n\tprivate var rttWidth:Int;\r\n\tprivate var rttHeight:Int;\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tdisposed = false;\r\n\t\t\r\n\t\tstencilCompareMode = Context3DCompareMode.ALWAYS;\r\n\t\tstencilRef = 0;\r\n\t\tstencilReadMask = 0xFF;\r\n\t\t\r\n\t\t_yFlip = 1;\r\n\t\t\r\n\t\tvertexBuffersCreated = new Array ();\r\n\t\tindexBuffersCreated = new Array ();\r\n\t\tprogramsCreated = new Array ();\r\n\t\ttexturesCreated = new Array (); \r\n\t\tsamplerParameters = new Array<SamplerState> ();\r\n\t\t\r\n\t\tfor (i in 0...MAX_SAMPLERS) {\r\n\t\t\t\r\n\t\t\tsamplerParameters[i] = new SamplerState ();\r\n\t\t\tsamplerParameters[i].wrap = Context3DWrapMode.CLAMP;\r\n\t\t\tsamplerParameters[i].filter = Context3DTextureFilter.LINEAR;\r\n\t\t\tsamplerParameters[i].mipfilter =Context3DMipFilter.MIPNONE;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar stage = Lib.current.stage;\r\n\t\t\r\n\t\togl = new OpenGLView ();\r\n\t\togl.scrollRect = new Rectangle (0, 0, stage.stageWidth, stage.stageHeight);\r\n\t\tscrollRect = ogl.scrollRect.clone ();\r\n\t\togl.width = stage.stageWidth;\r\n\t\togl.height = stage.stageHeight;\r\n\t\t\r\n\t\tstage.addChildAt(ogl, 0);\r\n\t\t\r\n\t\t#if js\r\n\t\tGL.pixelStorei (GL.UNPACK_FLIP_Y_WEBGL, 1);\r\n\t\tGL.pixelStorei (GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\r\n\t\t#end\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clear (red:Float = 0, green:Float = 0, blue:Float = 0, alpha:Float = 1, depth:Float = 1, stencil:Int = 0, mask:Int = Context3DClearMask.ALL):Void {\r\n\t\t\r\n\t\tif (!drawing) {\r\n\t\t\t\r\n\t\t \t__updateBlendStatus ();\r\n\t\t \tdrawing = true;\r\n\t\t \t\r\n\t\t}\r\n\t\t\r\n\t\t#if (cpp || neko || nodejs)\r\n\t\tGL.depthMask (true);\r\n\t\t#end\r\n\t\t#if js\r\n\t\tif (scissorRectangle != null) GL.disable(GL.SCISSOR_TEST);\r\n\t\t#end\r\n\t\tGL.clearColor (red, green, blue, alpha);\r\n\t\tGL.clearDepth (depth);\r\n\t\tGL.clearStencil (stencil);\r\n\t\t\r\n\t\tGL.clear (mask);\r\n\t\t\r\n\t\t#if js\r\n\t\tif (scissorRectangle != null) GL.enable(GL.SCISSOR_TEST);\r\n\t\t#end\r\n\t}\r\n\t\r\n\t\r\n\tpublic function configureBackBuffer (width:Int, height:Int, antiAlias:Int, enableDepthAndStencil:Bool = true):Void {\r\n\t\t\r\n\t\tbackBufferDepthAndStencil = enableDepthAndStencil;\r\n\t\tupdateDepthAndStencilState();\r\n\t\t\r\n\t\t// TODO use antiAlias parameter\r\n\t\tsetBackBufferViewPort (null, null, width, height);\r\n\t\tupdateScissorRectangle ();\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function setBackBufferViewPort (?x:Int, ?y:Int, ?width:Int, ?height:Int) {\r\n\t\t\r\n\t\tif (x == null) x = Std.int (scrollRect.x);\r\n\t\tif (y == null) y = Std.int (scrollRect.y);\r\n\t\tif (width == null) width = Std.int (scrollRect.width);\r\n\t\tif (height == null) height = Std.int (scrollRect.height);\r\n\t\t\r\n\t\tscrollRect.x = x;\r\n\t\tscrollRect.y = y;\r\n\t\tscrollRect.width = width;\r\n\t\tscrollRect.height = height;\r\n\t\togl.width = x + width;\r\n\t\togl.height = y + height;\r\n\t\t\r\n\t\tupdateBackBufferViewPort ();\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function updateBackBufferViewPort () {\r\n\t\t\r\n\t\tif (!renderToTexture) {\r\n\t\t\t\r\n\t\t\tGL.viewport (Std.int (scrollRect.x), Std.int (scrollRect.y), Std.int (scrollRect.width), Std.int (scrollRect.height));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function updateDepthAndStencilState() {\r\n\t\t\r\n\t\t// used to enable masking\r\n\t\tvar depthAndStencil:Bool = renderToTexture ? rttDepthAndStencil : backBufferDepthAndStencil;\r\n\t\t\r\n\t\t#if !lime_legacy\r\n\t\tif (depthAndStencil) {\r\n\t\t\t\r\n\t\t\t// TODO check whether this is kept across frame\r\n\t\t\tif (Application.current.window.config.depthBuffer)\r\n\t\t\t\tGL.enable (GL.DEPTH_TEST);\r\n\t\t\tif (Application.current.window.config.stencilBuffer)\r\n\t\t\t\tGL.enable (GL.STENCIL_TEST);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tGL.disable (GL.DEPTH_TEST);\r\n\t\t\tGL.disable (GL.STENCIL_TEST);\r\n\t\t\t\r\n\t\t}\r\n\t\t#else\r\n\t\t\tGL.disable (GL.DEPTH_TEST);\r\n\t\t\tGL.disable (GL.STENCIL_TEST);\r\n\t\t#end\r\n\t}\r\n\t\r\n\tpublic function createCubeTexture (size:Int, format:Context3DTextureFormat, optimizeForRenderToTexture:Bool, streamingLevels:Int = 0):CubeTexture {\r\n\t\t\r\n\t\tvar texture = new CubeTexture (this, GL.createTexture (), size); // TODO use format, optimizeForRenderToTexture and streamingLevels?\r\n\t\ttexturesCreated.push (texture);\r\n\t\treturn texture;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function createIndexBuffer (numIndices:Int, bufferUsage:Context3DBufferUsage = null):IndexBuffer3D {\r\n\t\t\r\n\t\tif (bufferUsage == null) bufferUsage = Context3DBufferUsage.STATIC_DRAW;\r\n\t\tvar indexBuffer = new IndexBuffer3D (this, GL.createBuffer(), numIndices, bufferUsage == Context3DBufferUsage.STATIC_DRAW ? GL.STATIC_DRAW : GL.DYNAMIC_DRAW);\r\n\t\tindexBuffersCreated.push (indexBuffer);\r\n\t\treturn indexBuffer;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function createProgram ():Program3D {\r\n\t\t\r\n\t\tvar program = new Program3D (this, GL.createProgram ());\r\n\t\tprogramsCreated.push (program);\r\n\t\treturn program;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function createRectangleTexture (width:Int, height:Int, format:Context3DTextureFormat, optimizeForRenderToTexture:Bool):RectangleTexture {\r\n\t\t\r\n\t\tvar texture = new RectangleTexture (this, GL.createTexture (), optimizeForRenderToTexture, width, height); // TODO use format, optimizeForRenderToTexture and streamingLevels?\r\n\t\ttexturesCreated.push (texture);\r\n\t\treturn texture;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function createTexture (width:Int, height:Int, format:Context3DTextureFormat, optimizeForRenderToTexture:Bool, streamingLevels:Int = 0):Texture {\r\n\t\t\r\n\t\tvar texture = new Texture (this, GL.createTexture (), optimizeForRenderToTexture, width, height); // TODO use format, optimizeForRenderToTexture and streamingLevels?\r\n\t\ttexturesCreated.push (texture);\r\n\t\treturn texture;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function createVertexBuffer (numVertices:Int, data32PerVertex:Int, bufferUsage:Context3DBufferUsage = null):VertexBuffer3D {\r\n\t\t\r\n\t\tif (bufferUsage == null) bufferUsage = Context3DBufferUsage.STATIC_DRAW;\r\n\t\tvar vertexBuffer = new VertexBuffer3D (this, GL.createBuffer (), numVertices, data32PerVertex, bufferUsage == Context3DBufferUsage.STATIC_DRAW ? GL.STATIC_DRAW : GL.DYNAMIC_DRAW);\r\n\t\tvertexBuffersCreated.push (vertexBuffer);\r\n\t\treturn vertexBuffer;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __deleteTexture (texture:TextureBase):Void {\r\n\t\t\r\n\t\tif (texture.glTexture == null)\r\n\t\t\treturn;\r\n\t\ttexturesCreated.remove (texture);\r\n\t\tGL.deleteTexture (texture.glTexture);\r\n\t\ttexture.glTexture = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __deleteVertexBuffer (buffer:VertexBuffer3D):Void {\r\n\t\t\r\n\t\tif (buffer.glBuffer == null)\r\n\t\t\treturn;\r\n\t\tvertexBuffersCreated.remove (buffer);\r\n\t\tGL.deleteBuffer (buffer.glBuffer);\r\n\t\tbuffer.glBuffer = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __deleteIndexBuffer (buffer:IndexBuffer3D):Void {\r\n\t\t\r\n\t\tif (buffer.glBuffer == null)\r\n\t\t\treturn;\r\n\t\tindexBuffersCreated.remove (buffer);\r\n\t\tGL.deleteBuffer (buffer.glBuffer);\r\n\t\tbuffer.glBuffer = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function __deleteProgram (program:Program3D):Void {\r\n\t\t\r\n\t\tif (program.glProgram == null)\r\n\t\t\treturn;\r\n\t\tprogramsCreated.remove (program);\r\n\t\tGL.deleteProgram (program.glProgram);\r\n\t\tprogram.glProgram = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function dispose ():Void {\r\n\t\t\r\n\t\t// TODO simulate context loss by recreating a context3d and dispatch event on Stage3d(see Adobe Doc)\r\n\t\t// TODO add error on other method when context3d is disposed\r\n\t\t\r\n\t\tfor (vertexBuffer in vertexBuffersCreated) {\r\n\t\t\t\r\n\t\t\tvertexBuffer.dispose ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvertexBuffersCreated = null;\r\n\t\t\r\n\t\tfor (indexBuffer in indexBuffersCreated) {\r\n\t\t\t\r\n\t\t\tindexBuffer.dispose ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tindexBuffersCreated = null;\r\n\t\t\r\n\t\tfor (program in programsCreated) {\r\n\t\t\t\r\n\t\t\tprogram.dispose ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tprogramsCreated = null;\r\n \t\t\r\n\t\tsamplerParameters = null;\r\n\t\t\r\n\t\tfor (texture in texturesCreated) {\r\n\t\t\t\r\n\t\t\ttexture.dispose ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\ttexturesCreated = null;\r\n\t\t\r\n\t\tif (framebuffer != null) {\r\n\t\t\t\r\n\t\t\tGL.deleteFramebuffer (framebuffer);\r\n\t\t\tframebuffer = null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (renderbuffer != null) {\r\n\t\t\t\r\n\t\t\tGL.deleteRenderbuffer (renderbuffer);\r\n\t\t\trenderbuffer = null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tdisposed = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawToBitmapData (destination:BitmapData):Void {\r\n\t\t\r\n\t\t// TODO\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function drawTriangles (indexBuffer:IndexBuffer3D, firstIndex:Int = 0, numTriangles:Int = -1):Void {\r\n\t\t\r\n\t\tvar location:GLUniformLocation = GL.getUniformLocation (currentProgram.glProgram, \"yflip\");\r\n\t\tGL.uniform1f (location, this._yFlip);\r\n\r\n\t\tif (!drawing) {\r\n\t\t\t\r\n\t\t\tthrow new Error (\"Need to clear before drawing if the buffer has not been cleared since the last present() call.\");\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar numIndices;\r\n\t\t\r\n\t\tif (numTriangles == -1) {\r\n\t\t\t\r\n\t\t\tnumIndices = indexBuffer.numIndices;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tnumIndices = numTriangles * 3;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar byteOffset = firstIndex * 2;\r\n\t\t\r\n\t\tGL.bindBuffer (GL.ELEMENT_ARRAY_BUFFER, indexBuffer.glBuffer);\r\n\t\tGL.drawElements (GL.TRIANGLES, numIndices, GL.UNSIGNED_SHORT, byteOffset);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function present ():Void {\r\n\t\t\r\n\t\tdrawing = false;\r\n\t\tGL.useProgram (null);\r\n\t\t\r\n\t\tGL.bindBuffer (GL.ARRAY_BUFFER, null);\r\n\t\tGL.disable (GL.CULL_FACE);\r\n\t\t\r\n\t\tif (framebuffer != null) {\r\n\r\n\t\t\tGL.bindFramebuffer (GL.FRAMEBUFFER, null);\r\n\r\n\t\t}\r\n\t\t\r\n\t\tif (renderbuffer != null) {\r\n\r\n\t\t\tGL.bindRenderbuffer (GL.RENDERBUFFER, null);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\t\r\n\tpublic function removeRenderMethod (func:Event -> Void):Void {\r\n\t\t\r\n\t\togl.render = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setBlendFactors (sourceFactor:Int, destinationFactor:Int):Void {\r\n\t\t\r\n\t\t// TODO: Type as Context3DBlendFactor instead of Int?\r\n\t\t\r\n\t\tblendEnabled = true;\r\n\t\tblendSourceFactor = sourceFactor;\r\n\t\tblendDestinationFactor = destinationFactor;\r\n\t\t\r\n\t\t__updateBlendStatus ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setColorMask (red:Bool, green:Bool, blue:Bool, alpha:Bool):Void {\r\n\t\t\r\n\t\tGL.colorMask (red, green, blue, alpha);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tpublic function setCulling (triangleFaceToCull:Int):Void {\r\n\t\t\r\n\t\t// TODO: Type as Context3DTriangleFace instead of Int?\r\n\t\t\r\n\t\tif (triangleFaceToCull == Context3DTriangleFace.NONE) {\r\n\t\t\t\r\n\t\t\tGL.disable (GL.CULL_FACE);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tGL.enable (GL.CULL_FACE);\r\n\t\t\t\r\n\t\t\tswitch (triangleFaceToCull) {\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTriangleFace.FRONT: GL.cullFace (GL.BACK);\r\n\t\t\t\tcase Context3DTriangleFace.BACK: GL.cullFace (GL.FRONT);\r\n\t\t\t\tcase Context3DTriangleFace.FRONT_AND_BACK: GL.cullFace (GL.FRONT_AND_BACK);\r\n\t\t\t\tdefault: throw \"Unknown Context3DTriangleFace type.\";\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tswitch (triangleFaceToCull) {\r\n\t\t\t\r\n\t\t\tcase Context3DTriangleFace.FRONT:\r\n\t\t\t\t\r\n\t\t\t\tthis._yFlip = -1;\r\n\t\t\t\r\n\t\t\tcase Context3DTriangleFace.BACK:\r\n\t\t\t\t\r\n\t\t\t\tthis._yFlip = 1; // checked\r\n\t\t\t\r\n\t\t\tcase Context3DTriangleFace.FRONT_AND_BACK:\r\n\t\t\t\t\r\n\t\t\t\tthis._yFlip = 1;\r\n\t\t\t\r\n\t\t\tcase Context3DTriangleFace.NONE:\r\n\t\t\t\t\r\n\t\t\t\tthis._yFlip = 1; // checked\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t\tthrow \"Unknown culling mode \" + triangleFaceToCull + \".\";\r\n \t\t\t\r\n \t\t}\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setDepthTest (depthMask:Bool, passCompareMode:Int):Void {\r\n\t\t\r\n\t\t// TODO: Type as Context3DCompareMode instead of Int?\r\n\t\t\r\n\t\tGL.depthFunc (passCompareMode);\r\n\t\tGL.depthMask (depthMask);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setGLSLProgramConstantsFromByteArray (locationName:String, data:ByteArray, byteArrayOffset:Int = 0):Void {\r\n\t\t\r\n\t\tdata.position = byteArrayOffset;\r\n\t\tvar location = GL.getUniformLocation (currentProgram.glProgram, locationName);\r\n\t\tGL.uniform4f (location, data.readFloat (), data.readFloat (), data.readFloat (), data.readFloat ());\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setGLSLProgramConstantsFromMatrix (locationName:String, matrix:Matrix3D, transposedMatrix:Bool = false):Void {\r\n\t\t\r\n\t\tvar location = GL.getUniformLocation (currentProgram.glProgram, locationName);\r\n\t\tGL.uniformMatrix4fv (location, !transposedMatrix, new Float32Array (matrix.rawData));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setGLSLProgramConstantsFromVector4 (locationName:String, data:Array<Float>, startIndex:Int = 0):Void {\r\n\t\t\r\n\t\tvar location = GL.getUniformLocation (currentProgram.glProgram, locationName);\r\n\t\tGL.uniform4f (location, data[startIndex], data[startIndex + 1], data[startIndex + 2], data[startIndex + 3]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setGLSLTextureAt (locationName:String, texture:TextureBase, textureIndex:Int):Void {\r\n\t\t\r\n\t\tswitch (textureIndex) {\r\n\t\t\t\r\n\t\t\tcase 0 : GL.activeTexture (GL.TEXTURE0);\r\n\t\t\tcase 1 : GL.activeTexture (GL.TEXTURE1);\r\n\t\t\tcase 2 : GL.activeTexture (GL.TEXTURE2);\r\n\t\t\tcase 3 : GL.activeTexture (GL.TEXTURE3);\r\n\t\t\tcase 4 : GL.activeTexture (GL.TEXTURE4);\r\n\t\t\tcase 5 : GL.activeTexture (GL.TEXTURE5);\r\n\t\t\tcase 6 : GL.activeTexture (GL.TEXTURE6);\r\n\t\t\tcase 7 : GL.activeTexture (GL.TEXTURE7);\r\n\t\t\t// TODO more?\r\n\t\t\tdefault: throw \"Does not support texture8 or more\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (texture == null) {\r\n\t\t\t\r\n\t\t\tGL.bindTexture (GL.TEXTURE_2D, null);\r\n\t\t\tGL.bindTexture (GL.TEXTURE_CUBE_MAP, null);\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t} \r\n\t\t\r\n\t\tvar location = GL.getUniformLocation (currentProgram.glProgram, locationName);\r\n\t\t\r\n\t\tif (Std.is (texture, Texture)) {\r\n\t\t\t\r\n\t\t\tGL.bindTexture (GL.TEXTURE_2D, cast (texture, Texture).glTexture);\r\n\t\t\tGL.uniform1i (location, textureIndex);\r\n\t\t\t\r\n\t\t} else if (Std.is (texture, RectangleTexture)) {\r\n\t\t\t\r\n\t\t\tGL.bindTexture (GL.TEXTURE_2D, cast (texture, RectangleTexture).glTexture);\r\n\t\t\tGL.uniform1i (location, textureIndex);\r\n\t\t\t\r\n\t\t} else if (Std.is (texture, CubeTexture) ) {\r\n\t\t\t\r\n\t\t\tGL.bindTexture (GL.TEXTURE_CUBE_MAP, cast (texture, CubeTexture).glTexture );\r\n\t\t\tGL.uniform1i (location, textureIndex);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tthrow \"Texture of type \" + Type.getClassName (Type.getClass (texture)) + \" not supported yet\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar parameters:SamplerState = samplerParameters[textureIndex];\r\n\t\t\r\n\t\tif (parameters != null) {\r\n\t\t\t\r\n\t\t\tsetTextureParameters (texture, parameters.wrap, parameters.filter, parameters.mipfilter);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tsetTextureParameters (texture, Context3DWrapMode.CLAMP, Context3DTextureFilter.NEAREST, Context3DMipFilter.MIPNONE);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setGLSLVertexBufferAt (locationName, buffer:VertexBuffer3D, bufferOffset:Int = 0, ?format:Context3DVertexBufferFormat):Void {\r\n\t\t\r\n\t\tvar location = (currentProgram != null && currentProgram.glProgram != null) ? GL.getAttribLocation (currentProgram.glProgram, locationName) : -1;\r\n\t\tif (location == -1) return;\r\n\t\t\r\n\t\tif (buffer == null) {\r\n\t\t\t\r\n\t\t\tif (location > -1) {\r\n\t\t\t\t\r\n\t\t\t\tGL.disableVertexAttribArray (location);\r\n\t\t\t\t\r\n\t\t\t\t#if (cpp || neko || nodejs)\r\n\t\t\t\tGL.bindBuffer (GL.ARRAY_BUFFER, null);\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\tGL.bindBuffer (GL.ARRAY_BUFFER, buffer.glBuffer);\r\n\t\t\r\n\t\tvar dimension = 4;\r\n\t\tvar type = GL.FLOAT;\r\n\t\tvar numBytes = 4;\r\n\t\t\r\n\t\tif (format == Context3DVertexBufferFormat.BYTES_4) {\r\n\t\t\t\r\n\t\t\tdimension = 4;\r\n\t\t\ttype = GL.FLOAT;\r\n\t\t\tnumBytes = 4;\r\n\t\t\t\r\n\t\t} else if (format == Context3DVertexBufferFormat.FLOAT_1) {\r\n\t\t\t\r\n\t\t\tdimension = 1;\r\n\t\t\ttype = GL.FLOAT;\r\n\t\t\tnumBytes = 4;\r\n\t\t\t\r\n\t\t} else if (format == Context3DVertexBufferFormat.FLOAT_2) {\r\n\t\t\t\r\n\t\t\tdimension = 2;\r\n\t\t\ttype = GL.FLOAT;\r\n\t\t\tnumBytes = 4;\r\n\t\t\t\r\n\t\t} else if (format == Context3DVertexBufferFormat.FLOAT_3) {\r\n\t\t\t\r\n\t\t\tdimension = 3;\r\n\t\t\ttype = GL.FLOAT;\r\n\t\t\tnumBytes = 4;\r\n\t\t\t\r\n\t\t} else if (format == Context3DVertexBufferFormat.FLOAT_4) {\r\n\t\t\t\r\n\t\t\tdimension = 4;\r\n\t\t\ttype = GL.FLOAT;\r\n\t\t\tnumBytes = 4;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tthrow \"Buffer format \" + format + \" is not supported\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tGL.enableVertexAttribArray (location);\r\n\t\tGL.vertexAttribPointer (location, dimension, type, false, buffer.data32PerVertex * numBytes, bufferOffset * numBytes);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setProgram (program3D:Program3D):Void {\r\n\t\t\r\n\t\tvar glProgram:GLProgram = null;\r\n\t\t\r\n\t\tif (program3D != null) {\r\n\t\t\t\r\n\t\t\tglProgram = program3D.glProgram;\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tGL.useProgram (glProgram);\r\n\t\tcurrentProgram = program3D;\r\n\t\t//TODO reset bound textures, buffers... ?\r\n\t\t// Or maybe we should have arrays and map for each program so we can switch them while keeping the bounded texture and variable?\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setProgramConstantsFromByteArray (programType:Context3DProgramType, firstRegister:Int, numRegisters:Int, data:ByteArray, byteArrayOffset:Int):Void {\r\n\t\t\r\n\t\tdata.position = byteArrayOffset;\r\n\t\t\r\n\t\tfor (i in 0...numRegisters) {\r\n\t\t\t\r\n\t\t\tvar locationName = __getUniformLocationNameFromAgalRegisterIndex (programType, firstRegister + i);\r\n\t\t\tsetGLSLProgramConstantsFromByteArray (locationName, data);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setProgramConstantsFromMatrix (programType:Context3DProgramType, firstRegister:Int, matrix:Matrix3D, transposedMatrix:Bool = false):Void {\r\n\t\t\r\n\t\t// var locationName = __getUniformLocationNameFromAgalRegisterIndex (programType, firstRegister);\r\n\t\t// setProgramConstantsFromVector (programType, firstRegister, matrix.rawData, 16);\r\n\t\t\r\n\t\tvar d = matrix.rawData;\r\n\t\tif (transposedMatrix) {\r\n\t\t\tthis.setProgramConstantsFromVector(programType, firstRegister, [ d[0], d[4], d[8], d[12] ], 1);  \r\n\t\t\tthis.setProgramConstantsFromVector(programType, firstRegister + 1, [ d[1], d[5], d[9], d[13] ], 1);\r\n\t\t\tthis.setProgramConstantsFromVector(programType, firstRegister + 2, [ d[2], d[6], d[10], d[14] ], 1);\r\n\t\t\tthis.setProgramConstantsFromVector(programType, firstRegister + 3, [ d[3], d[7], d[11], d[15] ], 1);\r\n\t\t} else {\r\n\t\t\tthis.setProgramConstantsFromVector(programType, firstRegister, [ d[0], d[1], d[2], d[3] ], 1);\r\n\t\t\tthis.setProgramConstantsFromVector(programType, firstRegister + 1, [ d[4], d[5], d[6], d[7] ], 1);\r\n\t\t\tthis.setProgramConstantsFromVector(programType, firstRegister + 2, [ d[8], d[9], d[10], d[11] ], 1);\r\n\t\t\tthis.setProgramConstantsFromVector(programType, firstRegister + 3, [ d[12], d[13], d[14], d[15] ], 1);\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setProgramConstantsFromVector (programType:Context3DProgramType, firstRegister:Int, data:Array<Float>, numRegisters:Int = 1):Void {\r\n\t\t\r\n\t\tfor (i in 0...numRegisters) {\r\n\t\t\t\r\n\t\t\tvar currentIndex = i * 4;\r\n\t\t\tvar locationName = __getUniformLocationNameFromAgalRegisterIndex (programType, firstRegister + i);\r\n\t\t\tsetGLSLProgramConstantsFromVector4 (locationName, data, currentIndex);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setRenderMethod (func:Event -> Void):Void {\r\n\t\t\r\n\t\t// TODO: Conform to API?\r\n\t\t\r\n\t\togl.render = function (rect:Rectangle) func (null);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setRenderToBackBuffer ():Void {\r\n\t\t\r\n\t\tGL.disable (GL.DEPTH_TEST);\r\n\t\tGL.disable (GL.STENCIL_TEST);\r\n\t\tGL.disable (GL.SCISSOR_TEST);\r\n\t\tGL.bindFramebuffer (GL.FRAMEBUFFER, null);\r\n\r\n\t\tif (framebuffer != null) {\r\n\r\n\t\t\tGL.bindFramebuffer (GL.FRAMEBUFFER, null);\r\n\r\n\t\t}\r\n\t\t\r\n\t\tif (renderbuffer != null) {\r\n\r\n\t\t\tGL.bindRenderbuffer (GL.RENDERBUFFER, null);\r\n\r\n\t\t}\r\n\t\t\r\n\t\trenderToTexture = false;\r\n\t\tupdateBackBufferViewPort ();\r\n\t\tupdateScissorRectangle();\r\n\t\tupdateDepthAndStencilState();\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setRenderToTexture (texture:TextureBase, enableDepthAndStencil:Bool = false, antiAlias:Int = 0, surfaceSelector:Int = 0):Void {      \r\n\t\t\r\n\t\t// TODO : currently does not work (framebufferStatus always return zero)\r\n\t\t\r\n\t\tif (framebuffer == null) {\r\n\t\t\t\r\n\t\t\tframebuffer = GL.createFramebuffer ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tGL.bindFramebuffer (GL.FRAMEBUFFER, framebuffer);\r\n\t\t\r\n\t\tif (renderbuffer == null) {\r\n\t\t\t\r\n\t\t\trenderbuffer = GL.createRenderbuffer ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tGL.bindRenderbuffer (GL.RENDERBUFFER, renderbuffer);\r\n\t\t#if (ios || tvos)\r\n\t\tGL.renderbufferStorage (GL.RENDERBUFFER, 0x88F0, texture.width, texture.height);\r\n\t\t#elseif js\r\n\t\tif (enableDepthAndStencil) GL.renderbufferStorage (GL.RENDERBUFFER, GL.DEPTH_STENCIL, texture.width, texture.height);\r\n\t\t#else\r\n\t\tGL.renderbufferStorage (GL.RENDERBUFFER, GL.RGBA, texture.width, texture.height);\r\n\t\t#end\r\n\t\tGL.framebufferTexture2D (GL.FRAMEBUFFER, GL.COLOR_ATTACHMENT0, GL.TEXTURE_2D, texture.glTexture, 0);\r\n\r\n\t\tGL.renderbufferStorage (GL.RENDERBUFFER, GL.DEPTH_STENCIL, texture.width, texture.height);\r\n\t\tGL.framebufferRenderbuffer (GL.FRAMEBUFFER, GL.DEPTH_STENCIL_ATTACHMENT, GL.RENDERBUFFER, renderbuffer);\r\n\t\t\r\n\t\tif (enableDepthAndStencil) {\r\n\t\t\t\r\n\t\t\tGL.enable (GL.DEPTH_TEST);\r\n\t\t\tGL.enable (GL.STENCIL_TEST);\r\n\t\t}\r\n\t\t\r\n\t\tGL.bindTexture (GL.TEXTURE_2D, texture.glTexture);\r\n\t\tGL.texImage2D (GL.TEXTURE_2D, 0, GL.RGBA, texture.width, texture.height, 0, GL.RGBA, GL.UNSIGNED_BYTE, null);\r\n\t\tGL.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.LINEAR);\r\n\t\tGL.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR_MIPMAP_NEAREST);\r\n\t\t\r\n\t\tGL.viewport (0, 0, texture.width, texture.height);\r\n\t\t\r\n\t\trenderToTexture = true;\r\n\t\trttDepthAndStencil = enableDepthAndStencil;\r\n\t\trttWidth = texture.width;\r\n\t\trttHeight = texture.height;\r\n\t\tupdateScissorRectangle();\r\n\t\tupdateDepthAndStencilState();\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setSamplerStateAt (sampler:Int, wrap:Context3DWrapMode, filter:Context3DTextureFilter, mipfilter:Context3DMipFilter):Void {\r\n\t\t\r\n\t\t//TODO for flash < 11.6 : patch the AGAL (using specific opcodes) and rebuild the program? \r\n\t\t\r\n\t\tif (0 <= sampler && sampler <  MAX_SAMPLERS) {\r\n\t\t\t\r\n\t\t\tsamplerParameters[sampler].wrap = wrap;\r\n\t\t\tsamplerParameters[sampler].filter = filter;\r\n\t\t\tsamplerParameters[sampler].mipfilter = mipfilter;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tthrow \"Sampler is out of bounds.\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setScissorRectangle (rectangle:Rectangle):Void {\r\n\t\t\r\n\t\t// TODO test it\r\n\t\tscissorRectangle = rectangle;\r\n\t\t\r\n\t\tif (rectangle == null) {\r\n\t\t\t\r\n\t\t\tGL.disable (GL.SCISSOR_TEST);\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tGL.enable (GL.SCISSOR_TEST);\r\n\t\tupdateScissorRectangle();\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function updateScissorRectangle()\r\n\t{\r\n\t\t\r\n\t\tif (scissorRectangle == null)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t//var width:Int = renderToTexture ? rttWidth : scrollRect.width;\r\n\t\tvar height:Int = renderToTexture ? rttHeight : Std.int(scrollRect.height);\r\n\t\tGL.scissor (Std.int (scissorRectangle.x),\r\n\t\t\tStd.int (height - Std.int(scissorRectangle.y) - Std.int(scissorRectangle.height)),\r\n\t\t\tStd.int (scissorRectangle.width),\r\n\t\t\tStd.int (scissorRectangle.height)\r\n\t\t);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function setStencilActions (?triangleFace:Int, ?compareMode:Int, ?actionOnBothPass:Int, ?actionOnDepthFail:Int, ?actionOnDepthPassStencilFail:Int):Void {\r\n\t\t\r\n\t\tthis.stencilCompareMode = compareMode;\r\n\t\tGL.stencilOp (actionOnBothPass, actionOnDepthFail, actionOnDepthPassStencilFail);\r\n\t\tGL.stencilFunc (stencilCompareMode, stencilRef, stencilReadMask);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setStencilReferenceValue (referenceValue:Int, readMask:Int = 0xFF, writeMask:Int = 0xFF):Void {\r\n\t\t\r\n\t\tstencilReadMask = readMask;\r\n\t\tstencilRef = referenceValue;\r\n\t\t\r\n\t\tGL.stencilFunc (stencilCompareMode, stencilRef, stencilReadMask);\r\n\t\tGL.stencilMask (writeMask);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setTextureAt (sampler:Int, texture:TextureBase):Void {\r\n\t\t\r\n\t\tvar locationName = \"fs\" + sampler;\r\n\t\tsetGLSLTextureAt (locationName, texture, sampler);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function setTextureParameters (texture:TextureBase, wrap:Context3DWrapMode, filter:Context3DTextureFilter, mipfilter:Context3DMipFilter):Void {\r\n\t\t\r\n\t\tif (!anisotropySupportTested) {\r\n\t\t\t\r\n\t\t\t#if !js\r\n\t\t\t\r\n\t\t\tsupportsAnisotropy = (GL.getSupportedExtensions ().indexOf (\"GL_EXT_texture_filter_anisotropic\") != -1);\r\n\t\t\t\r\n\t\t\tif (supportsAnisotropy) {\r\n\t\t\t\t// GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT is not currently recongnised in Lime\r\n\t\t\t\t// If supported, max anisotropic filtering of 256 is assumed.\r\n\t\t\t\t// maxSupportedAnisotropy = GL.getTexParameter (GL.TEXTURE_2D, MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n\t\t\t\tGL.texParameteri (GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, maxSupportedAnisotropy);\r\n\t\t\t}\r\n\r\n\t\t\t#else\r\n\r\n\t\t\tvar ext:Dynamic = GL.getExtension (\"EXT_texture_filter_anisotropic\");\r\n\t\t\tif (ext == null || Reflect.field( ext, \"MAX_TEXTURE_MAX_ANISOTROPY_EXT\" ) == null) ext = GL.getExtension (\"MOZ_EXT_texture_filter_anisotropic\");\r\n\t\t\tif (ext == null || Reflect.field( ext, \"MAX_TEXTURE_MAX_ANISOTROPY_EXT\" ) == null) ext = GL.getExtension (\"WEBKIT_EXT_texture_filter_anisotropic\");\r\n\t\t\tsupportsAnisotropy = (ext != null);\r\n\t\t\t\r\n\t\t\tif (supportsAnisotropy) {\r\n\t\t\t\tmaxSupportedAnisotropy = GL.getParameter (ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n\t\t\t\tGL.texParameteri (GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, maxSupportedAnisotropy);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tanisotropySupportTested = true;\r\n\t\t\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (Std.is (texture, Texture)) {\r\n\t\t\t\r\n\t\t\tswitch (wrap) {\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DWrapMode.CLAMP:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DWrapMode.REPEAT:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.REPEAT);\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.REPEAT);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Currently using TEXTURE_MAX_ANISOTROPY_EXT instead of GL.TEXTURE_MAX_ANISOTROPY_EXT\r\n\t\t\t// until it is implemented.\r\n\t\t\t\r\n\t\t\tswitch (filter) {\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.LINEAR:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.LINEAR);\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, 1);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.NEAREST:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, 1);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.ANISOTROPIC2X:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, (maxSupportedAnisotropy < 2) ? maxSupportedAnisotropy : 2);\r\n\t\t\t\t \r\n\t\t\t\tcase Context3DTextureFilter.ANISOTROPIC4X:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf(GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, (maxSupportedAnisotropy < 4) ? maxSupportedAnisotropy : 4);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.ANISOTROPIC8X:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf(GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, (maxSupportedAnisotropy < 8) ? maxSupportedAnisotropy : 8);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.ANISOTROPIC16X:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf(GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, (maxSupportedAnisotropy < 16) ? maxSupportedAnisotropy : 16);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tswitch (mipfilter) {\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DMipFilter.MIPLINEAR:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.LINEAR_MIPMAP_LINEAR);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DMipFilter.MIPNEAREST:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST_MIPMAP_NEAREST);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DMipFilter.MIPNONE:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, filter == Context3DTextureFilter.NEAREST ? GL.NEAREST : GL.LINEAR);\r\n\t\t\t\t\r\n\t\t\t} \r\n\r\n\t\t\tvar tex:Texture = cast texture;\r\n\t\t\tif (mipfilter != Context3DMipFilter.MIPNONE && !tex.mipmapsGenerated) {\r\n\t\t\t\tGL.generateMipmap (GL.TEXTURE_2D);\r\n\t\t\t\ttex.mipmapsGenerated = true;\r\n\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\r\n\t\t} else if (Std.is (texture, RectangleTexture)) {\r\n\t\t\t\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\t\t\r\n\t\t\tswitch (filter) {\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.LINEAR:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.LINEAR);\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, 1);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.NEAREST:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, 1);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.ANISOTROPIC2X:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, (maxSupportedAnisotropy < 2) ? maxSupportedAnisotropy : 2);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.ANISOTROPIC4X:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, (maxSupportedAnisotropy < 4) ? maxSupportedAnisotropy : 4);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.ANISOTROPIC8X:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, (maxSupportedAnisotropy < 8) ? maxSupportedAnisotropy : 8);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.ANISOTROPIC16X:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, (maxSupportedAnisotropy < 16) ? maxSupportedAnisotropy : 16);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, filter == Context3DTextureFilter.NEAREST ? GL.NEAREST : GL.LINEAR);\r\n\t\t\t\r\n\t\t} else if (Std.is (texture, CubeTexture)) {\r\n\t\t\t\r\n\t\t\tswitch (wrap) {\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DWrapMode.CLAMP:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DWrapMode.REPEAT:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_S, GL.REPEAT);\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_T, GL.REPEAT);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tswitch (filter) {\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.LINEAR:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MAG_FILTER, GL.LINEAR);\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_CUBE_MAP, TEXTURE_MAX_ANISOTROPY_EXT, 1);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.NEAREST:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_CUBE_MAP, TEXTURE_MAX_ANISOTROPY_EXT, 1);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.ANISOTROPIC2X:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_CUBE_MAP, TEXTURE_MAX_ANISOTROPY_EXT, (maxSupportedAnisotropy < 2) ? maxSupportedAnisotropy : 2);\r\n\t\t\t\t \r\n\t\t\t\tcase Context3DTextureFilter.ANISOTROPIC4X:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_CUBE_MAP, TEXTURE_MAX_ANISOTROPY_EXT, (maxSupportedAnisotropy < 4) ? maxSupportedAnisotropy : 4);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.ANISOTROPIC8X:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_CUBE_MAP, TEXTURE_MAX_ANISOTROPY_EXT, (maxSupportedAnisotropy < 8) ? maxSupportedAnisotropy : 8);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DTextureFilter.ANISOTROPIC16X:\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (supportsAnisotropy)\r\n\t\t\t\t\t\tGL.texParameterf (GL.TEXTURE_CUBE_MAP, TEXTURE_MAX_ANISOTROPY_EXT, (maxSupportedAnisotropy < 16) ? maxSupportedAnisotropy : 16);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tswitch (mipfilter) {\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DMipFilter.MIPLINEAR:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MIN_FILTER, GL.LINEAR_MIPMAP_LINEAR);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DMipFilter.MIPNEAREST:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MIN_FILTER, GL.NEAREST_MIPMAP_NEAREST);\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DMipFilter.MIPNONE:\r\n\t\t\t\t\t\r\n\t\t\t\t\tGL.texParameteri (GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MIN_FILTER, filter == Context3DTextureFilter.NEAREST ? GL.NEAREST : GL.LINEAR);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar cubetex:CubeTexture = cast texture;\r\n\t\t\tif (mipfilter != Context3DMipFilter.MIPNONE && !cubetex.mipmapsGenerated) {\r\n\t\t\t\tGL.generateMipmap (GL.TEXTURE_CUBE_MAP);\r\n\t\t\t\tcubetex.mipmapsGenerated = true;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tthrow \"Texture of type \" + Type.getClassName (Type.getClass (texture)) + \" not supported yet\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setVertexBufferAt (index:Int, buffer:VertexBuffer3D, bufferOffset:Int = 0, ?format:Context3DVertexBufferFormat):Void {\r\n\t\t\r\n\t\tvar locationName = \"va\" + index;\r\n\t\tsetGLSLVertexBufferAt (locationName, buffer, bufferOffset, format);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __getUniformLocationNameFromAgalRegisterIndex (programType:Context3DProgramType, firstRegister:Int):String {\r\n\t\t\r\n\t\tif (programType == Context3DProgramType.VERTEX) {\r\n\t\t\t\r\n\t\t\treturn \"vc\" + firstRegister;\r\n\t\t\t\r\n\t\t} else if (programType == Context3DProgramType.FRAGMENT) {\r\n\t\t\t\r\n\t\t\treturn \"fc\" + firstRegister;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthrow \"Program Type \" + programType + \" not supported\";\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __updateBlendStatus ():Void {\r\n\t\t\r\n\t\t//TODO do the same for other states ?\r\n\t\t\r\n\t\tif (blendEnabled) {\r\n\t\t\t\r\n\t\t\tGL.enable (GL.BLEND);\r\n\t\t\tGL.blendEquation (GL.FUNC_ADD);\r\n\t\t\tGL.blendFunc (blendSourceFactor, blendDestinationFactor);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tGL.disable (GL.BLEND);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nprivate class SamplerState {\r\n\t\r\n\t\r\n\tpublic var wrap:Context3DWrapMode;\r\n\tpublic var filter:Context3DTextureFilter;\r\n\tpublic var mipfilter:Context3DMipFilter;\r\n\t\r\n\t\r\n\tpublic function new ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display3D;\r\n\r\n\r\nimport openfl.gl.GL;\r\n\r\n\r\nabstract Context3DBlendFactor(Int) {\r\n\t\r\n\t\r\n\tinline public static var DESTINATION_ALPHA:Int = GL.DST_ALPHA;\r\n\tinline public static var DESTINATION_COLOR:Int = GL.DST_COLOR;\r\n\tinline public static var ONE:Int = GL.ONE;\r\n\tinline public static var ONE_MINUS_DESTINATION_ALPHA:Int = GL.ONE_MINUS_DST_ALPHA;\r\n\tinline public static var ONE_MINUS_DESTINATION_COLOR:Int = GL.ONE_MINUS_DST_COLOR;\r\n\tinline public static var ONE_MINUS_SOURCE_ALPHA:Int = GL.ONE_MINUS_SRC_ALPHA;\r\n\tinline public static var ONE_MINUS_SOURCE_COLOR:Int = GL.ONE_MINUS_SRC_COLOR;\r\n\tinline public static var SOURCE_ALPHA:Int = GL.SRC_ALPHA;\r\n\tinline public static var SOURCE_COLOR:Int = GL.SRC_COLOR;\r\n\tinline public static var ZERO:Int = GL.ZERO;\r\n\t\r\n\t\r\n\tinline function new (a:Int) {\r\n\t\t\r\n\t\tthis = a;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:from public static inline function fromInt (s:Int) {\r\n\t\t\r\n\t\treturn new Context3DBlendFactor (s);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:to public inline function toInt ():Int {\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display3D;\r\n\r\n\r\nimport openfl.gl.GL;\r\n\r\n\r\nabstract Context3DCompareMode(Int) {\r\n\t\r\n\t\r\n\tpublic static inline var ALWAYS = GL.ALWAYS;\r\n\tpublic static inline var EQUAL = GL.EQUAL;\r\n\tpublic static inline var GREATER = GL.GREATER;\r\n\tpublic static inline var GREATER_EQUAL = GL.GEQUAL;\r\n\tpublic static inline var LESS = GL.LESS;\r\n\tpublic static inline var LESS_EQUAL = GL.LEQUAL; // TODO : wrong value\r\n\tpublic static inline var NEVER = GL.NEVER;\r\n\tpublic static inline var NOT_EQUAL = GL.NOTEQUAL;\r\n\t\r\n\t\r\n\tinline function new (a:Int) {\r\n\t\t\r\n\t\tthis = a;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:from public static inline function fromInt (s:Int) {\r\n\t\t\r\n\t\treturn new Context3DCompareMode (s);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:to public inline function toInt ():Int {\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display3D;\r\n\r\n\r\nimport openfl.gl.GL;\r\n\r\n\r\nabstract Context3DStencilAction(Int) {\r\n\t\r\n\t\r\n\tpublic static inline var DECREMENT_SATURATE = GL.DECR;\r\n\tpublic static inline var DECREMENT_WRAP = GL.DECR_WRAP;\r\n\tpublic static inline var INCREMENT_SATURATE = GL.INCR;\r\n\tpublic static inline var INCREMENT_WRAP = GL.INCR_WRAP;\r\n\tpublic static inline var INVERT = GL.INVERT;\r\n\tpublic static inline var KEEP = GL.KEEP;\r\n\tpublic static inline var SET = GL.REPLACE;\r\n\tpublic static inline var ZERO = GL.ZERO;\r\n\t\r\n\t\r\n\tinline function new (a:Int) {\r\n\t\t\r\n\t\tthis = a;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:from public static inline function fromInt (s:Int) {\r\n\t\t\r\n\t\treturn new Context3DStencilAction(s);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:to public inline function toInt ():Int {\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display3D;\r\n\r\n\r\nimport openfl.gl.GL;\r\n\r\n\r\nabstract Context3DTriangleFace(Int) {\r\n\t\r\n\t\r\n\tinline public static var BACK = GL.FRONT;\r\n\tinline public static var FRONT = GL.BACK;\r\n\tinline public static var FRONT_AND_BACK = GL.FRONT_AND_BACK;\r\n\tinline public static var NONE = 0;\r\n\t\r\n\t\r\n\tinline function new (a:Int) {\r\n\t\t\r\n\t\tthis = a;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:from public static inline function fromInt (s:Int) {\r\n\t\t\r\n\t\treturn new Context3DTriangleFace (s);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:to public inline function toInt ():Int {\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display3D;\r\n\r\n\r\nimport openfl.gl.GL;\r\nimport openfl.gl.GLBuffer;\r\nimport openfl.utils.Int16Array;\r\nimport openfl.utils.ByteArray;\r\nimport openfl.Vector;\r\n\r\n\r\n@:final class IndexBuffer3D {\r\n\t\r\n\t\r\n\tpublic var context:Context3D;\r\n\tpublic var glBuffer:GLBuffer;\r\n\tpublic var numIndices:Int;\r\n\tpublic var bufferUsage:Int;\r\n\t\r\n\t\r\n\tpublic function new (context:Context3D, glBuffer:GLBuffer, numIndices:Int, bufferUsage:Int) {\r\n\t\t\r\n\t\tthis.context = context;\r\n\t\tthis.glBuffer = glBuffer;\r\n\t\tthis.numIndices = numIndices;\r\n\t\tthis.bufferUsage = bufferUsage;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function dispose ():Void {\r\n\t\t\r\n\t\tcontext.__deleteIndexBuffer (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadFromByteArray (byteArray:ByteArray, byteArrayOffset:Int, startOffset:Int, count:Int):Void {\r\n\t\t\r\n\t\tvar bytesPerIndex = 2;\r\n\t\tGL.bindBuffer (GL.ELEMENT_ARRAY_BUFFER, glBuffer);\r\n\t\t\r\n\t\tvar length:Int = count * bytesPerIndex;\r\n\t\tvar offset:Int = byteArrayOffset + startOffset * bytesPerIndex;\r\n\t\tvar indices:Int16Array;\r\n\t\t\r\n\t\t#if js\r\n\t\tindices = new Int16Array (length);\r\n\t\tbyteArray.position = offset;\r\n\t\t\r\n\t\tvar i:Int = 0;\r\n\t\t\r\n\t\twhile (byteArray.position < length + offset) {\r\n\t\t\t\r\n\t\t\tindices[i] = byteArray.readUnsignedByte ();\r\n\t\t\ti++;\r\n\t\t\t\r\n\t\t}\r\n\t\t#else\r\n\t\tindices = new Int16Array (byteArray, offset, length);\r\n\t\t#end\r\n\t\t\r\n\t\tGL.bufferData (GL.ELEMENT_ARRAY_BUFFER, indices, bufferUsage);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadFromVector (data:Vector<UInt>, startOffset:Int, count:Int):Void {\r\n\t\t\r\n\t\tGL.bindBuffer (GL.ELEMENT_ARRAY_BUFFER, glBuffer);\r\n\t\tvar indices:Int16Array;\r\n\t\t\r\n\t\t#if js\r\n\t\tindices = new Int16Array (count);\r\n\t\t\r\n\t\tfor (i in startOffset...(startOffset + count)) {\r\n\t\t\t\r\n\t\t\tindices[i] = data[i];\r\n\t\t\t\r\n\t\t}\r\n\t\t#else\r\n\t\tindices = new Int16Array (data, startOffset, count);\r\n\t\t#end\r\n\t\t\r\n\t\tGL.bufferData (GL.ELEMENT_ARRAY_BUFFER, indices, bufferUsage);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadFromInt16Array (data:Int16Array):Void {\r\n\t\t\r\n\t\tGL.bindBuffer (GL.ELEMENT_ARRAY_BUFFER, glBuffer);\r\n\t\tGL.bufferData (GL.ELEMENT_ARRAY_BUFFER, data, bufferUsage);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display3D;\r\n\r\n\r\nimport openfl.gl.GL;\r\nimport openfl.gl.GLProgram;\r\nimport openfl.gl.GLShader;\r\n\r\n\r\n@:final class Program3D {\r\n\t\r\n\t\r\n\tpublic var context:Context3D;\r\n\tpublic var glProgram:GLProgram;\r\n\t\r\n\t\r\n\tpublic function new (context:Context3D, program:GLProgram) {\r\n\t\t\r\n\t\tthis.context = context;\r\n\t\tthis.glProgram = program;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function dispose ():Void {\r\n\t\t\r\n\t\tcontext.__deleteProgram (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function upload (vertexShader:GLShader, fragmentShader:GLShader):Void {\r\n\t\t\r\n\t\t// TODO: Use ByteArray instead of Shader?\r\n\t\t\r\n\t\tGL.attachShader (glProgram, vertexShader);\r\n\t\tGL.attachShader (glProgram, fragmentShader);\r\n\t\tGL.linkProgram (glProgram);\r\n\t\t\r\n\t\tif (GL.getProgramParameter (glProgram, GL.LINK_STATUS) == 0) {\r\n\t\t\t\r\n\t\t\tvar result = GL.getProgramInfoLog (glProgram);\r\n\t\t\tif (result != \"\") throw result;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display3D;\r\n\r\n\r\nimport openfl.gl.GL;\r\nimport openfl.gl.GLBuffer;\r\nimport openfl.utils.Float32Array;\r\nimport openfl.utils.ByteArray;\r\nimport openfl.Vector;\r\n\r\n\r\nclass VertexBuffer3D {\r\n\t\r\n\t\r\n\tpublic var context:Context3D;\r\n\tpublic var data32PerVertex:Int;\r\n\tpublic var glBuffer:GLBuffer;\r\n\tpublic var numVertices:Int;\r\n\tpublic var bufferUsage:Int;\r\n\t\r\n\t\r\n\tpublic function new (context:Context3D, glBuffer:GLBuffer, numVertices:Int, data32PerVertex:Int, bufferUsage:Int) {\r\n\t\t\r\n\t\tthis.context = context;\r\n\t\tthis.glBuffer = glBuffer;\r\n\t\tthis.numVertices = numVertices;\r\n\t\tthis.data32PerVertex = data32PerVertex;\r\n\t\tthis.bufferUsage = bufferUsage;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function dispose ():Void {\r\n\t\t\r\n\t\tcontext.__deleteVertexBuffer (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadFromByteArray (byteArray:ByteArray, byteArrayOffset:Int, startOffset:Int, count:Int):Void {\r\n\t\t\r\n\t\tvar bytesPerVertex = data32PerVertex * 4;\r\n\t\t\r\n\t\tGL.bindBuffer (GL.ARRAY_BUFFER, glBuffer);\r\n\t\t\r\n\t\tvar length:Int = count * bytesPerVertex;\r\n\t\tvar offset:Int = byteArrayOffset + startOffset * bytesPerVertex;\r\n\t\tvar float32Array:Float32Array;\r\n\t\t\r\n\t\t#if js\r\n\t\tfloat32Array = new Float32Array (length);\r\n\t\tbyteArray.position = offset;\r\n\t\t\r\n\t\tvar i:Int = 0;\r\n\t\t\r\n\t\twhile (byteArray.position < length + offset) {\r\n\t\t\t\r\n\t\t\tfloat32Array[i] = byteArray.readUnsignedByte ();\r\n\t\t\ti++;\r\n\t\t\t\r\n\t\t}\r\n\t\t#else\r\n\t\tfloat32Array = new Float32Array (byteArray, offset, length);\r\n\t\t#end\r\n\t\t\r\n\t\tGL.bufferData (GL.ARRAY_BUFFER, float32Array, bufferUsage);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadFromFloat32Array (data:Float32Array):Void {\r\n\t\t\r\n\t\tGL.bindBuffer (GL.ARRAY_BUFFER, glBuffer);\r\n\t\tGL.bufferData (GL.ARRAY_BUFFER, data, bufferUsage);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadFromVector (data:Vector<Float>, startVertex:Int, numVertices:Int):Void {\r\n\t\t\r\n\t\tvar bytesPerVertex = data32PerVertex * 4;\r\n\t\t\r\n\t\tGL.bindBuffer (GL.ARRAY_BUFFER, glBuffer);\r\n\t\t\r\n\t\tvar length:Int = numVertices * data32PerVertex;\r\n\t\tvar offset:Int = startVertex;\r\n\t\tvar float32Array:Float32Array;\r\n\t\t\r\n\t\t#if js\r\n\t\tfloat32Array = new Float32Array (length);\r\n\t\t\r\n\t\tfor (i in startVertex...(startVertex + length)) {\r\n\t\t\t\r\n\t\t\tfloat32Array[i] = data[i];\r\n\t\t\t\r\n\t\t}\r\n\t\t#else\r\n\t\tfloat32Array = new Float32Array (data, offset, length);\r\n\t\t#end\r\n\t\t\r\n\t\tGL.bufferData (GL.ARRAY_BUFFER, float32Array, bufferUsage);\r\n\t\t\r\n\t\tfloat32Array = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display3D._shaders;\r\n\r\n\r\n// TODO: Refactor\r\n\r\nimport openfl.utils.AGALMiniAssembler;\r\nimport openfl._internal.aglsl.AGLSLCompiler;\r\nimport openfl.display3D.Context3DProgramType;\r\nimport openfl.utils.ByteArray;\r\n\r\n#if (cpp || neko || js)\r\nimport openfl.gl.GL;\r\n#end\r\n\r\n\r\nclass AGLSLShaderUtils {\r\n\t\r\n\t\r\n\tinline public static function compile (programType:String, source:String):ByteArray {\r\n\t\t\r\n\t\tvar agalMiniAssembler:AGALMiniAssembler = new AGALMiniAssembler ();\r\n\t\tvar data:ByteArray = null;\r\n\t\tvar concatSource:String;\r\n\t\t\r\n\t\tswitch (programType) {\r\n\t\t\t\r\n\t\t\tcase \"vertex\":\r\n\t\t\t\t\r\n\t\t\t\tconcatSource = \"part vertex 1 \\n\" + source + \"endpart\";\r\n\t\t\t\tagalMiniAssembler.assemble (concatSource);\r\n\t\t\t\tdata = agalMiniAssembler.r.get (\"vertex\").data;\r\n\t\t\t\r\n\t\t\tcase \"fragment\":\r\n\t\t\t\t\r\n\t\t\t\tconcatSource = \"part fragment 1 \\n\" + source + \"endpart\";\r\n\t\t\t\tagalMiniAssembler.assemble (concatSource);\r\n\t\t\t\tdata = agalMiniAssembler.r.get (\"fragment\").data;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t\tthrow \"Unknown Context3DProgramType\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn data;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tinline public static function createShader (type:Context3DProgramType, shaderSource:String):Shader {\r\n\t\t\r\n\t\t#if flash\r\n\t\t\t\r\n\t\t\treturn compile (cast (type, String), shaderSource);\r\n\t\t\t\r\n\t\t#elseif (cpp || neko || js)\r\n\t\t\t\r\n\t\t\tvar aglsl:AGLSLCompiler = new AGLSLCompiler ();\t\r\n\t\t\tvar glType:Int;\r\n\t\t\tvar shaderType:String;\r\n\t\t\t\r\n\t\t\tswitch (type) {\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DProgramType.VERTEX:\r\n\t\t\t\t\t\r\n\t\t\t\t\tglType = GL.VERTEX_SHADER;\r\n\t\t\t\t\tshaderType = \"vertex\";\r\n\t\t\t\t\r\n\t\t\t\tcase Context3DProgramType.FRAGMENT:\r\n\t\t\t\t\t\r\n\t\t\t\t\tglType = GL.FRAGMENT_SHADER;\r\n\t\t\t\t\tshaderType = \"fragment\";\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//trace(\"--- AGAL ---\\n\" + shaderSource);\r\n\t\t\t\r\n\t\t\tvar shaderSourceString:String = aglsl.compile (shaderType, shaderSource);\r\n\t\t\tvar shader = GL.createShader (glType);\r\n\t\t\tGL.shaderSource (shader, shaderSourceString);\r\n\t\t\tGL.compileShader (shader);\r\n\t\t\t\r\n\t\t\tif (GL.getShaderParameter (shader, GL.COMPILE_STATUS) == 0) {\r\n\t\t\t\t\r\n\t\t\t\ttrace(\"--- ERR ---\\n\" + shaderSourceString);\r\n\t\t\t\tvar err = GL.getShaderInfoLog (shader);\r\n\t\t\t\tif (err != \"\") throw err;\r\n\t\t\t\t\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\t//trace(\"--- GLSL ---\\n\" + shaderSourceString);\r\n\t\t\treturn shader;\r\n\t\t\t\r\n\t\t#else\r\n\t\t\t\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display3D.textures;\r\n\r\n\r\nimport openfl.gl.GL;\r\nimport openfl.gl.GLTexture;\r\nimport openfl.gl.GLFramebuffer;\r\nimport openfl.events.EventDispatcher;\r\n\r\n\r\nclass TextureBase extends EventDispatcher {\r\n\t\r\n\tpublic var context:Context3D;\r\n\tpublic var height:Int;\r\n\tpublic var frameBuffer:GLFramebuffer;\r\n\tpublic var glTexture:GLTexture;\r\n\tpublic var width:Int;\r\n\t\r\n\t\r\n\tpublic function new (context:Context3D, glTexture:GLTexture, width:Int = 0, height:Int = 0) {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\tthis.context = context;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.glTexture = glTexture;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function dispose ():Void {\r\n\t\t\r\n\t\tcontext.__deleteTexture (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display3D.textures;\r\n\r\n\r\nimport openfl.display3D.Context3D;\r\nimport openfl.gl.GL;\r\nimport openfl.gl.GLTexture;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.utils.ByteArray;\r\nimport openfl.utils.UInt8Array;\r\n\r\nusing openfl.display.BitmapData;\r\n\r\n\r\n@:final class CubeTexture extends TextureBase {\r\n\t\r\n\t\r\n\tpublic var size : Int;\r\n\tpublic var _textures:Array<GLTexture>;\r\n\tpublic var mipmapsGenerated:Bool;\r\n\t\r\n\t\r\n\tpublic function new (context:Context3D, glTexture:GLTexture, size:Int) {\r\n\t\t\r\n\t\tsuper (context, glTexture, size, size);\r\n\t\tthis.size = size;\r\n\t\tthis.mipmapsGenerated = false;\r\n\t\t\r\n\t\tthis._textures = [];\r\n\t\t\r\n\t\tfor (i in 0...6) {\r\n\t\t\t\r\n\t\t\tthis._textures[i] = GL.createTexture ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function glTextureAt (index:Int):GLTexture {\r\n\t\t\r\n\t\treturn this._textures[index];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadCompressedTextureFromByteArray (data:ByteArray, byteArrayOffset:Int, async:Bool = false):Void {\r\n\t\t\r\n\t\t// TODO\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadFromBitmapData (bitmapData:BitmapData, side:Int, miplevel:Int = 0):Void {\r\n\t\t\r\n\t\t// TODO: Support upload from UInt8Array directly\r\n\t\t\r\n\t\t#if openfl_legacy\r\n\t\tvar source = new UInt8Array (BitmapData.getRGBAPixels (bitmapData));\r\n\t\t#else\r\n\t\tvar source = bitmapData.image.data;\r\n\t\t#end\r\n\t\t\r\n\t\tGL.bindTexture (GL.TEXTURE_CUBE_MAP, glTexture);\r\n\t\t\r\n\t\tswitch (side) {\r\n\t\t\t\r\n\t\t\tcase 0:\r\n\t\t\t\t\r\n\t\t\t\tGL.texImage2D (GL.TEXTURE_CUBE_MAP_POSITIVE_X, miplevel, GL.RGBA, bitmapData.width, bitmapData.height, 0, GL.RGBA, GL.UNSIGNED_BYTE, source);\r\n\t\t\t\r\n\t\t\tcase 1:\r\n\t\t\t\t\r\n\t\t\t\tGL.texImage2D (GL.TEXTURE_CUBE_MAP_NEGATIVE_X, miplevel, GL.RGBA, bitmapData.width, bitmapData.height, 0, GL.RGBA, GL.UNSIGNED_BYTE, source);\r\n\t\t\t\r\n\t\t\tcase 2:\r\n\t\t\t\t\r\n\t\t\t\tGL.texImage2D (GL.TEXTURE_CUBE_MAP_POSITIVE_Y, miplevel, GL.RGBA, bitmapData.width, bitmapData.height, 0, GL.RGBA, GL.UNSIGNED_BYTE, source);\r\n\t\t\t\r\n\t\t\tcase 3:\r\n\t\t\t\t\r\n\t\t\t\tGL.texImage2D (GL.TEXTURE_CUBE_MAP_NEGATIVE_Y, miplevel, GL.RGBA, bitmapData.width, bitmapData.height, 0, GL.RGBA, GL.UNSIGNED_BYTE, source);\r\n\t\t\t\r\n\t\t\tcase 4:\r\n\t\t\t\t\r\n\t\t\t\tGL.texImage2D (GL.TEXTURE_CUBE_MAP_POSITIVE_Z, miplevel, GL.RGBA, bitmapData.width, bitmapData.height, 0, GL.RGBA, GL.UNSIGNED_BYTE, source);\r\n\t\t\t\r\n\t\t\tcase 5:\r\n\t\t\t\t\r\n\t\t\t\tGL.texImage2D (GL.TEXTURE_CUBE_MAP_NEGATIVE_Z, miplevel, GL.RGBA, bitmapData.width, bitmapData.height, 0, GL.RGBA, GL.UNSIGNED_BYTE, source);\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t\tthrow \"unknown side type\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tGL.bindTexture (GL.TEXTURE_CUBE_MAP, null);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadFromByteArray (data:ByteArray, byteArrayOffset:Int, side:Int, miplevel:Int = 0):Void {\r\n\t\t\r\n\t\t// TODO\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display3D.textures;\r\n\r\n\r\nimport openfl.display.BitmapData;\r\nimport openfl.display3D.Context3D;\r\nimport openfl.gl.GL;\r\nimport openfl.gl.GLTexture;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.utils.ByteArray;\r\nimport openfl.utils.UInt8Array;\r\n\r\n\r\n@:final class RectangleTexture extends TextureBase {\r\n\t\r\n\t\r\n\tpublic var optimizeForRenderToTexture:Bool;\r\n\t\r\n\t\r\n\tpublic function new (context:Context3D, glTexture:GLTexture, optimize:Bool, width:Int, height:Int) {\r\n\t\t\r\n\t\toptimizeForRenderToTexture = optimize;\r\n\t\t\r\n\t\t#if (js || neko)\r\n\t\tif (optimizeForRenderToTexture == null) optimizeForRenderToTexture = false;\r\n\t\t#end\r\n\t\t\r\n\t\tsuper (context, glTexture, width, height);\r\n\t\t\r\n\t\t#if (cpp || neko || nodejs)\r\n\t\tif (optimizeForRenderToTexture)\r\n\t\t\tGL.pixelStorei(GL.UNPACK_FLIP_Y_WEBGL, 1); \r\n\t\t\r\n\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\r\n\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t//public function uploadCompressedTextureFromByteArray(data:ByteArray, byteArrayOffset:Int, async:Bool = false):Void {\r\n\t\t// TODO\r\n\t//}\r\n\t\r\n\t\r\n\tpublic function uploadFromBitmapData (bitmapData:BitmapData, miplevel:Int = 0):Void {\r\n\t\t\r\n\t\t// TODO: Support upload from UInt8Array directly\r\n\t\t\r\n\t\t#if openfl_legacy\r\n\t\tvar p = BitmapData.getRGBAPixels (bitmapData);\r\n\t\t#else\r\n\t\tvar p:ByteArray = bitmapData.image.data.buffer;\r\n\t\t#end\r\n\t\t\r\n\t\twidth = bitmapData.width;\r\n\t\theight = bitmapData.height;\r\n\t\t\r\n\t\tuploadFromByteArray (p, 0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadFromByteArray (data:ByteArray, byteArrayOffset:Int):Void {\r\n\t\t\r\n\t\tGL.bindTexture (GL.TEXTURE_2D, glTexture);\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t\t\r\n\t\t\tif (optimizeForRenderToTexture)\r\n\t\t\t\tGL.pixelStorei(GL.UNPACK_FLIP_Y_WEBGL, 1);\r\n\t\t\t\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\t\t\r\n\t\t\tvar source = new UInt8Array (data.length);\r\n\t\t\tdata.position = byteArrayOffset;\r\n\t\t\t\r\n\t\t\tvar i:Int = 0;\r\n\t\t\t\r\n\t\t\twhile (data.position < data.length) {\r\n\t\t\t\t\r\n\t\t\t\tsource[i] = data.readUnsignedByte ();\r\n\t\t\t\ti++;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t#else\r\n\t\t\t\r\n\t\t\tif (optimizeForRenderToTexture) {\r\n\t\t\t\t\r\n\t\t\t\tGL.pixelStorei(GL.UNPACK_FLIP_Y_WEBGL, 1); \r\n\t\t\t\tGL.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n\t\t\t\tGL.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\r\n\t\t\t\tGL.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\t\t\tGL.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\t\t \r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#if nodejs\r\n\t\t\tvar source = data.byteView;\r\n\t\t\t#else\r\n\t\t\tvar source = new UInt8Array(data);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t#end\r\n\t\t\r\n\t\t// mipLevel always should be 0 in rectangle textures\r\n\t\tGL.texImage2D (GL.TEXTURE_2D, 0, GL.RGBA, width, height, 0, GL.RGBA, GL.UNSIGNED_BYTE, source);\r\n\t\tGL.bindTexture (GL.TEXTURE_2D, null);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.display3D.textures;\r\n\r\n\r\nimport openfl.display3D.Context3D;\r\nimport openfl.gl.GL;\r\nimport openfl.gl.GLTexture;\r\nimport openfl.gl.GLFramebuffer;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.utils.ArrayBuffer;\r\nimport openfl.utils.ByteArray;\r\nimport openfl.utils.UInt8Array;\r\n\r\nusing openfl.display.BitmapData;\r\n\r\n\r\n@:final class Texture extends TextureBase {\r\n\t\r\n\tprivate static var internalFormat:Int = -1;\r\n\t\r\n\tpublic var optimizeForRenderToTexture:Bool;\r\n\t\r\n\tpublic var mipmapsGenerated:Bool;\r\n\t\r\n\tpublic function new (context:Context3D, glTexture:GLTexture, optimize:Bool, width:Int, height:Int) {\r\n\t\t\r\n\t\toptimizeForRenderToTexture = optimize;\r\n\r\n\t\tmipmapsGenerated = false;\r\n\t\t\r\n\t\tif (internalFormat == -1){\r\n\t\t\t#if (cpp && !openfl_legacy)\r\n\t\t\tinternalFormat = GL.BGRA_EXT;\r\n\t\t\t#else\r\n\t\t\tinternalFormat = GL.RGBA;\r\n\t\t\t#end\r\n\t\t}\r\n\t\t\r\n\t\t#if (js || neko)\r\n\t\tif (optimizeForRenderToTexture == null) optimizeForRenderToTexture = false;\r\n\t\t#end\r\n\t\t\r\n\t\tsuper (context, glTexture, width, height);\r\n\t\t\r\n\t\t#if (cpp || neko || nodejs)\r\n\t\tif (optimizeForRenderToTexture) { \r\n\t\t\t\r\n\t\t\tGL.pixelStorei (GL.UNPACK_FLIP_Y_WEBGL, 1); \r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadCompressedTextureFromByteArray (data:ByteArray, byteArrayOffset:Int, async:Bool = false):Void {\r\n\t\t\r\n\t\t// TODO\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadFromBitmapData (bitmapData:BitmapData, miplevel:Int = 0):Void {\r\n\t\t\r\n\t\t#if openfl_legacy\r\n\t\t\r\n\t\tvar pixels = BitmapData.getRGBAPixels (bitmapData);\r\n\t\t\r\n\t\twidth = bitmapData.width;\r\n\t\theight = bitmapData.height;\r\n\t\t\r\n\t\tuploadFromByteArray (pixels, 0, miplevel);\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\tvar image = bitmapData.image;\r\n\t\t\r\n\t\tif (!image.premultiplied && image.transparent) {\r\n\t\t\t\r\n\t\t\timage = image.clone ();\r\n\t\t\timage.premultiplied = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\twidth = image.width;\r\n\t\theight = image.height;\r\n\t\t\r\n\t\tuploadFromUInt8Array (image.data, miplevel);\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadFromByteArray (data:ByteArray, byteArrayOffset:Int, miplevel:Int = 0):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\tvar source = new UInt8Array (data.length);\r\n\t\tdata.position = byteArrayOffset;\r\n\t\t\r\n\t\tvar i:Int = 0;\r\n\t\t\r\n\t\twhile (data.position < data.length) {\r\n\t\t\t\r\n\t\t\tsource[i] = data.readUnsignedByte ();\r\n\t\t\ti++;\r\n\t\t\t\r\n\t\t}\r\n\t\t#else\r\n\t\tvar source = new UInt8Array (data);\r\n\t\t#end\r\n\t\t\r\n\t\tuploadFromUInt8Array (source, miplevel);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uploadFromUInt8Array (data:UInt8Array, miplevel:Int = 0):Void {\r\n\t\t\r\n\t\tGL.bindTexture (GL.TEXTURE_2D, glTexture);\r\n\t\t\r\n\t\tif (optimizeForRenderToTexture) {\r\n\t\t\t\r\n\t\t\tGL.pixelStorei (GL.UNPACK_FLIP_Y_WEBGL, 1);\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST);\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n\t\t\tGL.texParameteri (GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tGL.texImage2D (GL.TEXTURE_2D, miplevel, internalFormat, width, height, 0, internalFormat, GL.UNSIGNED_BYTE, data);\r\n\t\tGL.bindTexture (GL.TEXTURE_2D, null);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.errors;\r\n\r\n\r\nimport haxe.CallStack;\r\n\r\n\r\nclass Error {\r\n\t\r\n\t\r\n\tprivate static inline var DEFAULT_TO_STRING = \"Error\";\r\n\t\r\n\tpublic var errorID (default, null):Int;\r\n\tpublic var message:String;\r\n\tpublic var name:String;\r\n\t\r\n\t\r\n\tpublic function new (message:String = \"\", id:Int = 0) {\r\n\t\t\r\n\t\tthis.message = message;\r\n\t\tthis.errorID = id;\r\n\t\tname = \"Error\";\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getStackTrace ():String {\r\n\t\t\r\n\t\treturn CallStack.toString (CallStack.exceptionStack ());\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function toString ():String {\r\n\t\t\r\n\t\tif (message != null) {\r\n\t\t\t\r\n\t\t\treturn message;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn DEFAULT_TO_STRING;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.errors;\r\n\r\n\r\nclass ArgumentError extends Error {\r\n\t\r\n\t\r\n\tpublic function new (message:String = \"\") {\r\n\t\t\r\n\t\tsuper (message);\r\n\t\t\r\n\t\tname = \"ArgumentError\";\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.errors;\r\n\r\n\r\nclass IOError extends Error {\r\n\t\r\n\t\r\n\tpublic function new (message:String = \"\") {\r\n\t\t\r\n\t\tsuper (message);\r\n\t\t\r\n\t\tname = \"IOError\";\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.errors;\r\n\r\n\r\nclass EOFError extends IOError {\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper (\"End of file was encountered\");\r\n\t\t\r\n\t\tname = \"EOFError\";\r\n\t\terrorID = 2030;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.errors;\r\n\r\n\r\nclass IllegalOperationError extends Error {\r\n\t\r\n\t\r\n\tpublic function new (message:String = \"\") {\r\n\t\t\r\n\t\tsuper (message, 0);\r\n\t\t\r\n\t\tname = \"IllegalOperationError\";\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.errors;\r\n\r\n\r\nclass RangeError extends Error {\r\n\t\r\n\t\r\n\tpublic function new (message:String = \"\") {\r\n\t\t\r\n\t\tsuper (message, 0);\r\n\t\t\r\n\t\tname = \"RangeError\";\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.errors;\r\n\r\n\r\nclass TypeError extends Error {\r\n\t\r\n\t\r\n\tpublic function new (message:String = \"\") {\r\n\t\t\r\n\t\tsuper (message, 0);\r\n\t\t\r\n\t\tname = \"TypeError\";\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.events; #if !openfl_legacy\r\n\r\n\r\nimport haxe.macro.Expr;\r\nimport openfl.display.InteractiveObject;\r\n\r\n\r\nclass Event {\r\n\t\r\n\t\r\n\tpublic static inline var ACTIVATE = \"activate\";\r\n\tpublic static inline var ADDED = \"added\";\r\n\tpublic static inline var ADDED_TO_STAGE = \"addedToStage\";\r\n\tpublic static inline var CANCEL = \"cancel\";\r\n\tpublic static inline var CHANGE = \"change\";\r\n\tpublic static inline var CLOSE = \"close\";\r\n\tpublic static inline var COMPLETE = \"complete\";\r\n\tpublic static inline var CONNECT = \"connect\";\r\n\tpublic static inline var CONTEXT3D_CREATE = \"context3DCreate\";\r\n\tpublic static inline var DEACTIVATE = \"deactivate\";\r\n\tpublic static inline var ENTER_FRAME = \"enterFrame\";\r\n\tpublic static inline var ID3 = \"id3\";\r\n\tpublic static inline var INIT = \"init\";\r\n\tpublic static inline var MOUSE_LEAVE = \"mouseLeave\";\r\n\tpublic static inline var OPEN = \"open\";\r\n\tpublic static inline var REMOVED = \"removed\";\r\n\tpublic static inline var REMOVED_FROM_STAGE = \"removedFromStage\";\r\n\tpublic static inline var RENDER = \"render\";\r\n\tpublic static inline var RESIZE = \"resize\";\r\n\tpublic static inline var SCROLL = \"scroll\";\r\n\tpublic static inline var SELECT = \"select\";\r\n\tpublic static inline var SOUND_COMPLETE = \"soundComplete\";\r\n\tpublic static inline var TAB_CHILDREN_CHANGE = \"tabChildrenChange\";\r\n\tpublic static inline var TAB_ENABLED_CHANGE = \"tabEnabledChange\";\r\n\tpublic static inline var TAB_INDEX_CHANGE = \"tabIndexChange\";\r\n\tpublic static inline var UNLOAD = \"unload\";\r\n\t\r\n\tpublic var bubbles (default, null):Bool;\r\n\tpublic var cancelable (default, null):Bool;\r\n\tpublic var currentTarget (default, null):Dynamic;\r\n\tpublic var eventPhase (default, null):EventPhase;\r\n\tpublic var target (default, null):Dynamic;\r\n\tpublic var type (default, null):String;\r\n\t\r\n\tprivate var __isCanceled:Bool;\r\n\tprivate var __isCanceledNow:Bool;\r\n\tprivate var __preventDefault:Bool;\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false) {\r\n\t\t\r\n\t\tthis.type = type;\r\n\t\tthis.bubbles = bubbles;\r\n\t\tthis.cancelable = cancelable;\r\n\t\teventPhase = EventPhase.AT_TARGET;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clone ():Event {\r\n\t\t\r\n\t\tvar event = new Event (type, bubbles, cancelable);\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function formatToString (className:String, ?p1:String, ?p2:String, ?p3:String, ?p4:String, ?p5:String):String {\r\n\t\t\r\n\t\tvar parameters = [];\r\n\t\tif (p1 != null) parameters.push (p1);\r\n\t\tif (p2 != null) parameters.push (p2);\r\n\t\tif (p3 != null) parameters.push (p3);\r\n\t\tif (p4 != null) parameters.push (p4);\r\n\t\tif (p5 != null) parameters.push (p5);\r\n\t\t\r\n\t\treturn Reflect.callMethod (this, __formatToString, [ className, parameters ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function isDefaultPrevented ():Bool {\r\n\t\t\r\n\t\treturn __preventDefault;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function preventDefault ():Void {\r\n\t\t\r\n\t\tif (cancelable) {\r\n\t\t\t\r\n\t\t\t__preventDefault = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function stopImmediatePropagation ():Void {\r\n\t\t\r\n\t\t__isCanceled = true;\r\n\t\t__isCanceledNow = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function stopPropagation ():Void {\r\n\t\t\r\n\t\t__isCanceled = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"Event\",  [ \"type\", \"bubbles\", \"cancelable\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __formatToString (className:String, parameters:Array<String>):String {\r\n\t\t\r\n\t\t// TODO: Make this a macro function, and handle at compile-time, with rest parameters?\r\n\t\t\r\n\t\tvar output = '[$className';\r\n\t\tvar arg:Dynamic = null;\r\n\t\t\r\n\t\tfor (param in parameters) {\r\n\t\t\t\r\n\t\t\targ = Reflect.field (this, param);\r\n\t\t\t\r\n\t\t\tif (Std.is (arg, String)) {\r\n\t\t\t\t\r\n\t\t\t\toutput += ' $param=\"$arg\"';\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\toutput += ' $param=$arg';\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\toutput += \"]\";\r\n\t\treturn output;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Event = openfl._legacy.events.Event;\r\n#end","package openfl.events;\r\n\r\n\r\nclass ActivityEvent extends Event {\r\n\t\r\n\t\r\n\tpublic static inline var ACTIVITY = \"activity\";\r\n\t\r\n\tpublic var activating:Bool;\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, activating:Bool = false) {\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable);\r\n\t\t\r\n\t\tthis.activating = activating;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new ActivityEvent (type, bubbles, cancelable, activating);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\t#if !openfl_legacy\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\t#end\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"ActivityEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"activating\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.events;\r\n\r\n\r\nclass TextEvent extends Event {\r\n\t\r\n\t\r\n\tpublic static inline var LINK = \"link\";\r\n\tpublic static inline var TEXT_INPUT = \"textInput\";\r\n\t\r\n\tpublic var text:String;\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, text:String = \"\") {\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable);\r\n\t\t\r\n\t\tthis.text = text;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new TextEvent (type, bubbles, cancelable, text);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\t#if !openfl_legacy\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\t#end\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"TextEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"text\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.events;\r\n\r\n\r\nclass ErrorEvent extends TextEvent {\r\n\t\r\n\t\r\n\tpublic static inline var ERROR = \"error\";\r\n\t\r\n\tpublic var errorID (default, null):Int;\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, text:String = \"\", id:Int = 0):Void {\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable, text);\r\n\t\terrorID = id;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new ErrorEvent (type, bubbles, cancelable, text, errorID);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\t#if !openfl_legacy\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\t#end\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"ErrorEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"text\", \"errorID\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.events;\r\n\r\n\r\nimport openfl.display.InteractiveObject;\r\n\r\n\r\nclass FocusEvent extends Event {\r\n\t\r\n\t\r\n\tpublic static inline var FOCUS_IN = \"focusIn\";\r\n\tpublic static inline var FOCUS_OUT = \"focusOut\";\r\n\tpublic static inline var KEY_FOCUS_CHANGE = \"keyFocusChange\";\r\n\tpublic static inline var MOUSE_FOCUS_CHANGE = \"mouseFocusChange\";\r\n\t\r\n\tpublic var keyCode:Int;\r\n\tpublic var relatedObject:InteractiveObject;\r\n\tpublic var shiftKey:Bool;\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, relatedObject:InteractiveObject = null, shiftKey:Bool = false, keyCode:Int = 0) {\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable);\r\n\t\t\r\n\t\tthis.keyCode = keyCode;\r\n\t\tthis.shiftKey = shiftKey;\r\n\t\tthis.relatedObject = relatedObject;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new FocusEvent (type, bubbles, cancelable, relatedObject, shiftKey, keyCode);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\t#if !openfl_legacy\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\t#end\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"FocusEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"relatedObject\", \"shiftKey\", \"keyCode\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.events;\r\n\r\n\r\nclass FullScreenEvent extends ActivityEvent {\r\n\t\r\n\t\r\n\tpublic static inline var FULL_SCREEN = \"fullScreen\";\r\n\tpublic static inline var FULL_SCREEN_INTERACTIVE_ACCEPTED = \"fullScreenInteractiveAccepted\";\r\n\t\r\n\tpublic var fullScreen:Bool;\r\n\tpublic var interactive:Bool;\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, fullScreen:Bool = false, interactive:Bool = false) {\r\n\t\t\r\n\t\t// TODO: What is the \"activating\" value supposed to be?\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable);\r\n\t\t\r\n\t\tthis.fullScreen = fullScreen;\r\n\t\tthis.interactive = interactive;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new FullScreenEvent (type, bubbles, cancelable, fullScreen, interactive);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\t#if !openfl_legacy\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\t#end\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"FullscreenEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"fullscreen\", \"interactive\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.events;\r\n\r\n\r\nimport openfl.ui.GameInputDevice;\r\n\r\n\r\n@:final class GameInputEvent extends Event {\r\n\t\r\n\t\r\n\tpublic static inline var DEVICE_ADDED = \"deviceAdded\";\r\n\tpublic static inline var DEVICE_REMOVED = \"deviceRemoved\";\r\n\tpublic static inline var DEVICE_UNUSABLE = \"deviceUnusable\";\r\n\t\r\n\tpublic var device (default, null):GameInputDevice;\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = true, cancelable:Bool = false, device:GameInputDevice = null) {\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable);\r\n\t\t\r\n\t\tthis.device = device;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new GameInputEvent (type, bubbles, cancelable, device);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\t#if !openfl_legacy\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\t#end\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"GameInputEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"device\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.events; #if !openfl_legacy\r\n\r\n\r\nclass HTTPStatusEvent extends Event {\r\n\t\r\n\t\r\n\tpublic static inline var HTTP_RESPONSE_STATUS = \"httpResponseStatus\";\r\n\tpublic static inline var HTTP_STATUS = \"httpStatus\";\r\n\t\r\n\tpublic var redirected:Bool;\r\n\tpublic var responseHeaders:Array<Dynamic>;\r\n\tpublic var responseURL:String;\r\n\tpublic var status (default, null):Int;\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, status:Int = 0, redirected:Bool = false):Void {\r\n\t\t\r\n\t\tthis.status = status;\r\n\t\tthis.redirected = redirected;\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new HTTPStatusEvent (type, bubbles, status, redirected);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\t#if !openfl_legacy\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\t#end\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"HTTPStatusEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"status\", \"redirected\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef HTTPStatusEvent = openfl._legacy.events.HTTPStatusEvent;\r\n#end","package openfl.events;\r\n\r\n\r\nclass IOErrorEvent extends ErrorEvent {\r\n\t\r\n\t\r\n\tpublic static inline var IO_ERROR = \"ioError\";\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = true, cancelable:Bool = false, text:String = \"\", id:Int = 0) {\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable, text, id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new IOErrorEvent (type, bubbles, cancelable, text, errorID);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\t#if !openfl_legacy\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\t#end\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"IOErrorEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"text\", \"errorID\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.events; #if !openfl_legacy\r\n\r\n\r\nimport openfl.ui.KeyLocation;\r\n\r\n\r\nclass KeyboardEvent extends Event {\r\n\t\r\n\t\r\n\tpublic static inline var KEY_DOWN = \"keyDown\";\r\n\tpublic static inline var KEY_UP = \"keyUp\";\r\n\t\r\n\tpublic var altKey:Bool;\r\n\tpublic var charCode:Int;\r\n\tpublic var ctrlKey:Bool;\r\n\tpublic var commandKey:Bool;\r\n\tpublic var controlKey:Bool;\r\n\tpublic var keyCode:Int;\r\n\tpublic var keyLocation:KeyLocation;\r\n\tpublic var shiftKey:Bool;\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, charCodeValue:Int = 0, keyCodeValue:Int = 0, keyLocationValue:KeyLocation = null, ctrlKeyValue:Bool = false, altKeyValue:Bool = false, shiftKeyValue:Bool = false, controlKeyValue:Bool = false, commandKeyValue:Bool = false) {\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable);\r\n\t\t\r\n\t\tcharCode = charCodeValue;\r\n\t\tkeyCode = keyCodeValue;\r\n\t\tkeyLocation = keyLocationValue != null ? keyLocationValue : KeyLocation.STANDARD;\r\n\t\tctrlKey = ctrlKeyValue;\r\n\t\taltKey = altKeyValue;\r\n\t\tshiftKey = shiftKeyValue;\r\n\t\tcontrolKey = controlKeyValue;\r\n\t\tcommandKey = commandKeyValue;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new KeyboardEvent (type, bubbles, cancelable, charCode, keyCode, keyLocation, ctrlKey, altKey, shiftKey, controlKey, commandKey);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"KeyboardEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"charCode\", \"keyCode\", \"keyLocation\", \"ctrlKey\", \"altKey\", \"shiftKey\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef KeyboardEvent = openfl._legacy.events.KeyboardEvent;\r\n#end","package openfl.events; #if !openfl_legacy\r\n\r\n\r\nimport openfl.display.InteractiveObject;\r\nimport openfl.geom.Point;\r\n\r\n\r\nclass MouseEvent extends Event {\r\n\t\r\n\t\r\n\tpublic static inline var CLICK = \"click\";\r\n\tpublic static inline var DOUBLE_CLICK = \"doubleClick\";\r\n\tpublic static inline var MIDDLE_CLICK = \"middleClick\";\r\n\tpublic static inline var MIDDLE_MOUSE_DOWN = \"middleMouseDown\";\r\n\tpublic static inline var MIDDLE_MOUSE_UP = \"middleMouseUp\";\r\n\tpublic static inline var MOUSE_DOWN = \"mouseDown\";\r\n\tpublic static inline var MOUSE_MOVE = \"mouseMove\";\r\n\tpublic static inline var MOUSE_OUT = \"mouseOut\";\r\n\tpublic static inline var MOUSE_OVER = \"mouseOver\";\r\n\tpublic static inline var MOUSE_UP = \"mouseUp\";\r\n\tpublic static inline var MOUSE_WHEEL = \"mouseWheel\";\r\n\tpublic static inline var RIGHT_CLICK = \"rightClick\";\r\n\tpublic static inline var RIGHT_MOUSE_DOWN = \"rightMouseDown\";\r\n\tpublic static inline var RIGHT_MOUSE_UP = \"rightMouseUp\";\r\n\tpublic static inline var ROLL_OUT = \"rollOut\";\r\n\tpublic static inline var ROLL_OVER = \"rollOver\";\r\n\t\r\n\tprivate static var __altKey:Bool;\r\n\tprivate static var __buttonDown:Bool;\r\n\tprivate static var __commandKey:Bool;\r\n\tprivate static var __ctrlKey:Bool;\r\n\tprivate static var __shiftKey:Bool;\r\n\t\r\n\tpublic var altKey:Bool;\r\n\tpublic var buttonDown:Bool;\r\n\tpublic var commandKey:Bool;\r\n\tpublic var clickCount:Int;\r\n\tpublic var ctrlKey:Bool;\r\n\tpublic var delta:Int;\r\n\tpublic var localX:Float;\r\n\tpublic var localY:Float;\r\n\tpublic var relatedObject:InteractiveObject;\r\n\tpublic var shiftKey:Bool;\r\n\tpublic var stageX:Float;\r\n\tpublic var stageY:Float;\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = true, cancelable:Bool = false, localX:Float = 0, localY:Float = 0, relatedObject:InteractiveObject = null, ctrlKey:Bool = false, altKey:Bool = false, shiftKey:Bool = false, buttonDown:Bool = false, delta:Int = 0, commandKey:Bool = false, clickCount:Int = 0) {\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable);\r\n\t\t\r\n\t\tthis.shiftKey = shiftKey;\r\n\t\tthis.altKey = altKey;\r\n\t\tthis.ctrlKey = ctrlKey;\r\n\t\tthis.bubbles = bubbles;\r\n\t\tthis.relatedObject = relatedObject;\r\n\t\tthis.delta = delta;\r\n\t\tthis.localX = localX;\r\n\t\tthis.localY = localY;\r\n\t\tthis.buttonDown = buttonDown;\r\n\t\tthis.commandKey = commandKey;\r\n\t\tthis.clickCount = clickCount;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function __create (type:String, button:Int, stageX:Float, stageY:Float, local:Point, target:InteractiveObject, delta:Int = 0):MouseEvent {\r\n\t\t\r\n\t\tswitch (type) {\r\n\t\t\t\r\n\t\t\tcase MouseEvent.MOUSE_DOWN:\r\n\t\t\t\t\r\n\t\t\t\t__buttonDown = true;\r\n\t\t\t\t\r\n\t\t\tcase MouseEvent.MOUSE_UP:\r\n\t\t\t\t\r\n\t\t\t\t__buttonDown = false;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar event = new MouseEvent (type, true, false, local.x, local.y, null, __ctrlKey, __altKey, __shiftKey, __buttonDown, delta, __commandKey);\r\n\t\tevent.stageX = stageX;\r\n\t\tevent.stageY = stageY;\r\n\t\tevent.target = target;\r\n\t\t\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new MouseEvent (type, bubbles, cancelable, localX, localY, relatedObject, ctrlKey, altKey, shiftKey, buttonDown, delta, commandKey, clickCount);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"MouseEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"localX\", \"localY\", \"relatedObject\", \"ctrlKey\", \"altKey\", \"shiftKey\", \"buttonDown\", \"delta\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function updateAfterEvent ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef MouseEvent = openfl._legacy.events.MouseEvent;\r\n#end","package openfl.events;\r\n\r\n\r\nclass NetStatusEvent extends Event {\r\n\t\r\n\t\r\n\tpublic static inline var NET_STATUS = \"netStatus\";\r\n\t\r\n\tpublic var info:Dynamic;\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, info:Dynamic = null):Void {\r\n\t\t\r\n\t\tthis.info = info;\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new NetStatusEvent (type, bubbles, cancelable, info);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\t#if !openfl_legacy\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\t#end\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"NetStatusEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"info\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.events;\r\n\r\n\r\nclass ProgressEvent extends Event {\r\n\t\r\n\t\r\n\tpublic static inline var PROGRESS = \"progress\";\r\n\tpublic static inline var SOCKET_DATA = \"socketData\";\r\n\t\r\n\tpublic var bytesLoaded:Float;\r\n\tpublic var bytesTotal:Float;\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, bytesLoaded:Float = 0, bytesTotal:Float = 0) {\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable);\r\n\t\t\r\n\t\tthis.bytesLoaded = bytesLoaded;\r\n\t\tthis.bytesTotal = bytesTotal;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new ProgressEvent (type, bubbles, cancelable, bytesLoaded, bytesTotal);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\t#if !openfl_legacy\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\t#end\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"ProgressEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"bytesLoaded\", \"bytesTotal\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.events;\r\n\r\n\r\nclass SecurityErrorEvent extends ErrorEvent {\r\n\t\r\n\t\r\n\tpublic static inline var SECURITY_ERROR = \"securityError\";\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, text:String = \"\", id:Int = 0) {\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable, text, id);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new SecurityErrorEvent (type, bubbles, cancelable, text, errorID);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\t#if !openfl_legacy\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\t#end\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"SecurityErrorEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"text\", \"errorID\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.events; #if (display || !flash)\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\nclass StageVideoAvailabilityEvent extends Event\r\n{\r\n\tpublic static var STAGE_VIDEO_AVAILABILITY:String = \"stageVideoAvailability\";\r\n\t\r\n\tprivate var _availability:String;\r\n\tpublic var availability(get, null):String;\r\n\t\r\n\tprivate var _driver:String;\r\n\tpublic var driver(get, null):String;\r\n\t\r\n\tprivate var _reason:String;\r\n\tpublic var reason(get, null):String;\r\n\t\r\n\tpublic function new(type:String, bubbles:Bool=false, cancelable:Bool=false, availability:String = null) \r\n\t{\r\n\t\tsuper(type, bubbles, cancelable);\r\n\t\t_availability = availability;\r\n\t}\r\n\t\r\n\tprivate function get_availability():String\r\n\t{\r\n\t\treturn _availability;\r\n\t}\r\n\t\r\n\tprivate function get_driver():String\r\n\t{\r\n\t\treturn _driver;\r\n\t}\r\n\t\r\n\tprivate function get_reason():String\r\n\t{\r\n\t\treturn _reason;\r\n\t}\r\n\t\r\n}\r\n\r\n#else\r\ntypedef StageVideoAvailabilityEvent = flash.events.StageVideoAvailabilityEvent;\r\n#end","package openfl.events; #if !openfl_legacy\r\n\r\n\r\nimport openfl.display.InteractiveObject;\r\nimport openfl.geom.Point;\r\nimport openfl.utils.ByteArray;\r\n\r\n\r\nclass TouchEvent extends Event {\r\n\t\r\n\t\r\n\tpublic static inline var TOUCH_BEGIN = \"touchBegin\";\r\n\tpublic static inline var TOUCH_END = \"touchEnd\";\r\n\tpublic static inline var TOUCH_MOVE = \"touchMove\";\r\n\tpublic static inline var TOUCH_OUT = \"touchOut\";\r\n\tpublic static inline var TOUCH_OVER = \"touchOver\";\r\n\tpublic static inline var TOUCH_ROLL_OUT = \"touchRollOut\";\r\n\tpublic static inline var TOUCH_ROLL_OVER = \"touchRollOver\";\r\n\tpublic static inline var TOUCH_TAP = \"touchTap\";\r\n\t\r\n\tpublic var altKey:Bool;\r\n\tpublic var commandKey:Bool;\r\n\tpublic var controlKey:Bool;\r\n\tpublic var ctrlKey:Bool;\r\n\tpublic var delta:Int;\r\n\tpublic var isPrimaryTouchPoint:Bool;\r\n\tpublic var localX:Float;\r\n\tpublic var localY:Float;\r\n\tpublic var pressure:Float;\r\n\tpublic var relatedObject:InteractiveObject;\r\n\tpublic var shiftKey:Bool;\r\n\tpublic var sizeX:Float;\r\n\tpublic var sizeY:Float;\r\n\tpublic var stageX:Float;\r\n\tpublic var stageY:Float;\r\n\tpublic var touchPointID:Int;\r\n\t\r\n\t\r\n\tpublic function new (type:String, bubbles:Bool = true, cancelable:Bool = false, touchPointID:Int = 0, isPrimaryTouchPoint:Bool = false, localX:Float = 0, localY:Float = 0, sizeX:Float = 0, sizeY:Float = 0, pressure:Float = 0, relatedObject:InteractiveObject = null, ctrlKey:Bool = false, altKey:Bool = false, shiftKey:Bool = false, commandKey:Bool = false, controlKey:Bool = false, timestamp:Float = 0, touchIntent:String = null, samples:ByteArray = null, isTouchPointCanceled:Bool = false) {\r\n\t\t\r\n\t\tsuper (type, bubbles, cancelable);\r\n\t\t\r\n\t\tthis.touchPointID = touchPointID;\r\n\t\tthis.isPrimaryTouchPoint = isPrimaryTouchPoint;\r\n\t\tthis.localX = localX;\r\n\t\tthis.localY = localY;\r\n\t\tthis.sizeX = sizeX;\r\n\t\tthis.sizeY = sizeY;\r\n\t\tthis.pressure = pressure;\r\n\t\tthis.relatedObject = relatedObject;\r\n\t\tthis.ctrlKey = ctrlKey;\r\n\t\tthis.altKey = altKey;\r\n\t\tthis.shiftKey = shiftKey;\r\n\t\tthis.commandKey = commandKey;\r\n\t\tthis.controlKey = controlKey;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function clone ():Event {\r\n\t\t\r\n\t\tvar event = new TouchEvent (type, bubbles, cancelable, touchPointID, isPrimaryTouchPoint, localX, localY, sizeX, sizeY, pressure, relatedObject, ctrlKey, altKey, shiftKey, commandKey, controlKey);\r\n\t\tevent.target = target;\r\n\t\tevent.currentTarget = currentTarget;\r\n\t\tevent.eventPhase = eventPhase;\r\n\t\treturn event;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function toString ():String {\r\n\t\t\r\n\t\treturn __formatToString (\"TouchEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"touchPointID\", \"isPrimaryTouchPoint\", \"localX\", \"localY\", \"sizeX\", \"sizeY\", \"pressure\", \"relatedObject\", \"ctrlKey\", \"altKey\", \"shiftKey\", \"commandKey\", \"controlKey\" ]);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function updateAfterEvent ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function __create (type:String, /*event:lime.ui.TouchEvent,*/ touch:Dynamic /*js.html.Touch*/, stageX:Float, stageY:Float, local:Point, target:InteractiveObject):TouchEvent {\r\n\t\t\r\n\t\tvar evt = new TouchEvent (type, true, false, 0, true, local.x, local.y, 1, 1, 1);\r\n\t\tevt.stageX = stageX;\r\n\t\tevt.stageY = stageY;\r\n\t\tevt.target = target;\r\n\t\t\r\n\t\treturn evt;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef TouchEvent = openfl._legacy.events.TouchEvent;\r\n#end","package openfl.filters; #if !openfl_legacy\r\n\r\n\r\nimport openfl._internal.renderer.opengl.utils.RenderTexture;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.Shader;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\n\r\n#if (js && html5)\r\nimport js.html.ImageData;\r\n#end\r\n\r\n@:access(openfl.display.BitmapData)\r\n@:access(openfl.geom.Rectangle)\r\n\r\n\r\nclass BitmapFilter {\r\n\t\r\n\tprivate var __dirty:Bool = true;\r\n\tprivate var __passes:Int = 0;\r\n\tprivate var __saveLastFilter:Bool = false;\r\n\t\r\n\tstatic private var __tmpRenderTexture:RenderTexture;\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clone ():BitmapFilter {\r\n\t\t\r\n\t\treturn new BitmapFilter ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if (js && html5)\r\n\tpublic function __applyFilter (sourceData:ImageData, targetData:ImageData, sourceRect:Rectangle, destPoint:Point):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\tprivate static function __applyFilters (filters:Array<BitmapFilter>, renderSession:RenderSession, source:BitmapData, target:BitmapData, sourceRect:Rectangle, destPoint:Point) {\r\n\t\t\r\n\t\tvar same = target == source && target.__usingPingPongTexture;\r\n\t\tif (same) target.__pingPongTexture.useOldTexture = true;\r\n\t\t\r\n\t\tif (sourceRect == null) sourceRect = source.rect;\r\n\t\t\r\n\t\tvar lastFilterOutput = null;\r\n\t\tvar useLastFilter = false;\r\n\t\t\r\n\t\tvar srcShader = source.__shader;\r\n\t\t\r\n\t\tfor (filter in filters) {\r\n\t\t\tuseLastFilter = false;\r\n\t\t\t\r\n\t\t\t// if the filter needs the last filter output, swap and save a copy of it\r\n\t\t\tif (filter.__saveLastFilter) {\r\n\t\t\t\ttarget.__pingPongTexture.swap();\r\n\t\t\t\ttarget.__drawGL(renderSession, source, sourceRect, true, !target.__usingPingPongTexture, true);\r\n\t\t\t\tlastFilterOutput = target.__pingPongTexture.oldRenderTexture;\r\n\t\t\t\ttarget.__pingPongTexture.oldRenderTexture = __tmpRenderTexture;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (pass in 0...filter.__passes) {\r\n\t\t\t\t\r\n\t\t\t\tuseLastFilter = filter.__saveLastFilter && filter.__useLastFilter(pass);\r\n\t\t\t\t\r\n\t\t\t\tif (same && !useLastFilter) target.__pingPongTexture.swap();\r\n\t\t\t\t\r\n\t\t\t\tif (useLastFilter) {\r\n\t\t\t\t\t__tmpRenderTexture = target.__pingPongTexture.oldRenderTexture;\r\n\t\t\t\t\ttarget.__pingPongTexture.oldRenderTexture = lastFilterOutput;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tsource.__shader = filter.__preparePass(pass);\r\n\t\t\t\ttarget.__drawGL(renderSession, source, sourceRect, true, !target.__usingPingPongTexture, !useLastFilter);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tsource.__shader = srcShader;\r\n\t\t\r\n\t\tif (same) target.__pingPongTexture.useOldTexture = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function __expandBounds (filters:Array<BitmapFilter>, rect:Rectangle, matrix:Matrix) {\r\n\t\t\r\n\t\tvar r = Rectangle.__temp;\r\n\t\tr.setEmpty ();\r\n\t\t\r\n\t\tfor (filter in filters) {\r\n\t\t\t\r\n\t\t\tfilter.__growBounds (r);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tr.__transform (r, matrix);\r\n\t\trect.__expand (r.x, r.y, r.width, r.height);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __growBounds (rect:Rectangle) {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __preparePass (pass:Int):Shader {\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __useLastFilter (pass:Int):Bool {\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef BitmapFilter = openfl._legacy.filters.BitmapFilter;\r\n#end","package openfl.geom;\r\n\r\n\r\n@:enum abstract Orientation3D(Null<Int>) {\r\n\t\r\n\tpublic var AXIS_ANGLE = 0;\r\n\tpublic var EULER_ANGLES = 1;\r\n\tpublic var QUATERNION = 2;\r\n\t\r\n\t@:from private static function fromString (value:String):Orientation3D {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"axisAngle\": AXIS_ANGLE;\r\n\t\t\tcase \"eulerAngles\": EULER_ANGLES;\r\n\t\t\tcase \"quaternion\": QUATERNION;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase Orientation3D.AXIS_ANGLE: \"axisAngle\";\r\n\t\t\tcase Orientation3D.EULER_ANGLES: \"eulerAngles\";\r\n\t\t\tcase Orientation3D.QUATERNION: \"quaternion\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}","package openfl.geom; #if !openfl_legacy\r\n\r\n\r\nimport openfl.display.DisplayObject;\r\n\r\n@:access(openfl.display.DisplayObject)\r\n@:access(openfl.geom.ColorTransform)\r\n\r\n\r\nclass Transform {\r\n\t\r\n\t\r\n\tpublic var colorTransform (get, set):ColorTransform;\r\n\tpublic var concatenatedColorTransform (default, null):ColorTransform;\r\n\tpublic var concatenatedMatrix (get, never):Matrix;\r\n\tpublic var matrix (get, set):Matrix;\r\n\tpublic var matrix3D (get, set):Matrix3D;\r\n\tpublic var pixelBounds (default, null):Rectangle;\r\n\t\r\n\tprivate var __colorTransform:ColorTransform;\r\n\tprivate var __displayObject:DisplayObject;\r\n\tprivate var __hasMatrix:Bool;\r\n\tprivate var __hasMatrix3D:Bool;\r\n\t\r\n\t\r\n\tpublic function new (displayObject:DisplayObject) {\r\n\t\t\r\n\t\t__colorTransform = new ColorTransform ();\r\n\t\tconcatenatedColorTransform = new ColorTransform ();\r\n\t\tpixelBounds = new Rectangle ();\r\n\t\t\r\n\t\t__displayObject = displayObject;\r\n\t\t__hasMatrix = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_colorTransform ():ColorTransform {\r\n\t\t\r\n\t\treturn __colorTransform;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_colorTransform (value:ColorTransform):ColorTransform {\r\n\t\t\r\n\t\tif (!__colorTransform.__equals (value)) {\r\n\t\t\t\r\n\t\t\t__colorTransform = value;\r\n\t\t\t\r\n\t\t\tif (value != null) {\r\n\t\t\t\t\r\n\t\t\t\t__displayObject.alpha = value.alphaMultiplier;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__displayObject.__setRenderDirty ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __colorTransform;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_matrix ():Matrix {\r\n\t\t\r\n\t\tif (__hasMatrix) {\r\n\t\t\t\r\n\t\t\treturn __displayObject.__transform.clone ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\tprivate function get_concatenatedMatrix ():Matrix {\r\n\t\t\r\n\t\tif (__hasMatrix) {\r\n\t\t\t\r\n\t\t\treturn __displayObject.__getWorldTransform ().clone ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_matrix (value:Matrix):Matrix {\r\n\t\t\r\n\t\tif (value == null) {\r\n\t\t\t\r\n\t\t\t__hasMatrix = false;\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__hasMatrix = true;\r\n\t\t__hasMatrix3D = false;\r\n\t\t\r\n\t\tif (__displayObject != null) {\r\n\t\t\t\r\n\t\t\tvar rotation = (180 / Math.PI) * Math.atan2 (value.d, value.c) - 90;\r\n\t\t\t\r\n\t\t\tif (rotation != __displayObject.__rotation) {\r\n\t\t\t\t\r\n\t\t\t\t__displayObject.__rotation = rotation;\r\n\t\t\t\tvar radians = rotation * (Math.PI / 180);\r\n\t\t\t\t__displayObject.__rotationSine = Math.sin (radians);\r\n\t\t\t\t__displayObject.__rotationCosine = Math.cos (radians);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__displayObject.__transform.copyFrom (value);\r\n\t\t\t__displayObject.__setTransformDirty ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_matrix3D ():Matrix3D {\r\n\t\t\r\n\t\tif (__hasMatrix3D) {\r\n\t\t\t\r\n\t\t\tvar matrix = __displayObject.__transform;\r\n\t\t\treturn new Matrix3D ([ matrix.a, matrix.b, 0.0, 0.0, matrix.c, matrix.d, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, matrix.tx, matrix.ty, 0.0, 1.0 ]);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_matrix3D (value:Matrix3D):Matrix3D {\r\n\t\t\r\n\t\tif (value == null) {\r\n\t\t\t\r\n\t\t\t__hasMatrix3D = false;\r\n\t\t\treturn null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__hasMatrix = false;\r\n\t\t__hasMatrix3D = true;\r\n\t\t\r\n\t\tif (__displayObject != null) {\r\n\t\t\t\r\n\t\t\tvar rotation = (180 / Math.PI) * Math.atan2 (value.rawData[5], value.rawData[4]) - 90;\r\n\t\t\t\r\n\t\t\tif (rotation != __displayObject.__rotation) {\r\n\t\t\t\t\r\n\t\t\t\t__displayObject.__rotation = rotation;\r\n\t\t\t\tvar radians = rotation * (Math.PI / 180);\r\n\t\t\t\t__displayObject.__rotationSine = Math.sin (radians);\r\n\t\t\t\t__displayObject.__rotationCosine = Math.cos (radians);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__displayObject.__transform.a = value.rawData[0];\r\n\t\t\t__displayObject.__transform.b = value.rawData[1];\r\n\t\t\t__displayObject.__transform.c = value.rawData[5];\r\n\t\t\t__displayObject.__transform.d = value.rawData[6];\r\n\t\t\t__displayObject.__transform.tx = value.rawData[12];\r\n\t\t\t__displayObject.__transform.ty = value.rawData[13];\r\n\t\t\t\r\n\t\t\t__displayObject.__setTransformDirty ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Transform = openfl._legacy.geom.Transform;\r\n#end","package openfl.media;\r\n\r\n\r\n@:final class ID3Info {\r\n\t\r\n\t\r\n\tpublic var album:String;\r\n\tpublic var artist:String;\r\n\tpublic var comment:String;\r\n\tpublic var genre:String;\r\n\tpublic var songName:String;\r\n\tpublic var track:String;\r\n\tpublic var year:String;\r\n\t\r\n\t\r\n\tpublic function new ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.media; #if (!openfl_legacy || disable_legacy_audio)\r\n\r\n\r\nimport haxe.io.Path;\r\nimport lime.audio.AudioBuffer;\r\nimport lime.audio.AudioSource;\r\nimport openfl.events.Event;\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.events.IOErrorEvent;\r\nimport openfl.net.URLRequest;\r\nimport openfl.utils.ByteArray;\r\n\r\n@:autoBuild(openfl.Assets.embedSound())\r\n\r\n\r\nclass Sound extends EventDispatcher {\r\n\t\r\n\t\r\n\t#if html5\r\n\tprivate static var __registeredSounds = new Map<String, Bool> ();\r\n\t#end\r\n\t\r\n\tpublic var bytesLoaded (default, null):Int;\r\n\tpublic var bytesTotal (default, null):Int;\r\n\tpublic var id3 (get, null):ID3Info;\r\n\tpublic var isBuffering (default, null):Bool;\r\n\tpublic var length (get, never):Float;\r\n\tpublic var url (default, null):String;\r\n\t\r\n\tprivate var __buffer:AudioBuffer;\r\n\t\r\n\t#if html5\r\n\tprivate var __sound:SoundJSInstance;\r\n\tprivate var __soundID:String;\r\n\t#end\r\n\t\r\n\t\r\n\tpublic function new (stream:URLRequest = null, context:SoundLoaderContext = null) {\r\n\t\t\r\n\t\tsuper (this);\r\n\t\t\r\n\t\tbytesLoaded = 0;\r\n\t\tbytesTotal = 0;\r\n\t\tid3 = null;\r\n\t\tisBuffering = false;\r\n\t\turl = null;\r\n\t\t\r\n\t\tif (stream != null) {\r\n\t\t\t\r\n\t\t\tload (stream, context);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function close ():Void {\r\n\t\t\r\n\t\t#if !html5\r\n\t\t\r\n\t\tif (__buffer != null) {\r\n\t\t\t\r\n\t\t\t__buffer.dispose ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\tif (__registeredSounds.exists (__soundID)) {\r\n\t\t\t\r\n\t\t\tSoundJS.removeSound (__soundID);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function fromAudioBuffer (buffer:AudioBuffer):Sound {\r\n\t\t\r\n\t\tvar sound = new Sound ();\r\n\t\tsound.__buffer = buffer;\r\n\t\treturn sound;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function fromFile (path:String):Sound {\r\n\t\t\r\n\t\treturn fromAudioBuffer (AudioBuffer.fromFile (path));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function load (stream:URLRequest, context:SoundLoaderContext = null):Void {\r\n\t\t\r\n\t\t#if !html5\r\n\t\t\r\n\t\tAudioBuffer.fromURL (stream.url, AudioBuffer_onURLLoad);\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\turl = stream.url;\r\n\t\t__soundID = Path.withoutExtension (stream.url);\r\n\t\t\r\n\t\tif (!__registeredSounds.exists (__soundID)) {\r\n\t\t\t\r\n\t\t\t__registeredSounds.set (__soundID, true);\r\n\t\t\tSoundJS.addEventListener (\"fileload\", SoundJS_onFileLoad);\r\n\t\t\tSoundJS.addEventListener (\"fileerror\", SoundJS_onFileError);\r\n\t\t\tSoundJS.registerSound (url, __soundID);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tdispatchEvent (new Event (Event.COMPLETE));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function loadCompressedDataFromByteArray (bytes:ByteArray, bytesLength:Int, forcePlayAsMusic:Bool = false):Void {\r\n\t\t\r\n\t\t// TODO: handle byte length\r\n\t\t\r\n\t\t#if !html5\r\n\t\t\r\n\t\t__buffer = AudioBuffer.fromBytes (bytes);\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\topenfl.Lib.notImplemented (\"Sound.loadCompressedDataFromByteArray\");\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function loadPCMFromByteArray (bytes:ByteArray, samples:Int, format:String = null, stereo:Bool = true, sampleRate:Float = 44100):Void {\r\n\t\t\r\n\t\t// TODO: handle pre-decoded data\r\n\t\t\r\n\t\t#if !html5\r\n\t\t\r\n\t\t__buffer = AudioBuffer.fromBytes (bytes);\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\topenfl.Lib.notImplemented (\"Sound.loadPCMFromByteArray\");\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function play (startTime:Float = 0.0, loops:Int = 0, sndTransform:SoundTransform = null):SoundChannel {\r\n\t\t\r\n\t\t// TODO: handle pan\r\n\t\t\r\n\t\t#if !html5\r\n\t\t\r\n\t\tvar source = new AudioSource (__buffer);\r\n\t\tsource.offset = Std.int (startTime * 1000);\r\n\t\tif (loops > 1) source.loops = loops - 1;\r\n\t\tif (sndTransform != null) source.gain = sndTransform.volume;\r\n\t\treturn new SoundChannel (source);\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\tif (sndTransform == null) {\r\n\t\t\t\r\n\t\t\tsndTransform = new SoundTransform (1, 0);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar pan = sndTransform.pan;\r\n\t\t\r\n\t\t// Hack to fix sound balance\r\n\t\t\r\n\t\tif (pan == 0) pan = -0.0000001;\r\n\t\t\r\n\t\tvar instance = \r\n\t\tif (loops > 1)\r\n\t\t\tSoundJS.play (__soundID, SoundJS.INTERRUPT_ANY, 0, Std.int (startTime), loops - 1, sndTransform.volume, pan);\r\n\t\telse\r\n\t\t\tSoundJS.play (__soundID, SoundJS.INTERRUPT_ANY, 0, Std.int (startTime), 0, sndTransform.volume, pan);\r\n\t\t\r\n\t\treturn new SoundChannel (instance);\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if html5\r\n\tprivate static function __init__ ():Void {\r\n\t\t\r\n\t\tif (untyped window.createjs != null) {\r\n\t\t\t\r\n\t\t\tSoundJS.alternateExtensions = [ \"ogg\", \"mp3\", \"wav\" ];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_id3 ():ID3Info {\r\n\t\t\r\n\t\treturn new ID3Info ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_length ():Int {\r\n\t\t\r\n\t\tif (__buffer != null) {\r\n\t\t\t\r\n\t\t\t#if flash\r\n\t\t\t\r\n\t\t\treturn Std.int (__buffer.src.length);\r\n\t\t\t\r\n\t\t\t#elseif !html5\r\n\t\t\t\r\n\t\t\tvar samples = (__buffer.data.length * 8) / (__buffer.channels * __buffer.bitsPerSample);\r\n\t\t\treturn Std.int (samples / __buffer.sampleRate * 1000);\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Event Handlers\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function AudioBuffer_onURLLoad (buffer:AudioBuffer):Void {\r\n\t\t\r\n\t\tif (buffer == null) {\r\n\t\t\t\r\n\t\t\tdispatchEvent (new IOErrorEvent (IOErrorEvent.IO_ERROR));\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t__buffer = buffer;\r\n\t\t\tdispatchEvent (new Event (Event.COMPLETE));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if html5\r\n\tprivate function SoundJS_onFileLoad (event:Dynamic):Void {\r\n\t\t\r\n\t\tif (event.id == __soundID) {\r\n\t\t\t\r\n\t\t\tSoundJS.removeEventListener (\"fileload\", SoundJS_onFileLoad);\r\n\t\t\tSoundJS.removeEventListener (\"fileerror\", SoundJS_onFileError);\r\n\t\t\tdispatchEvent (new Event (Event.COMPLETE));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function SoundJS_onFileError (event:Dynamic):Void {\r\n\t\t\r\n\t\tif (event.id == __soundID) {\r\n\t\t\t\r\n\t\t\tSoundJS.removeEventListener (\"fileload\", SoundJS_onFileLoad);\r\n\t\t\tSoundJS.removeEventListener (\"fileerror\", SoundJS_onFileError);\r\n\t\t\tdispatchEvent (new IOErrorEvent (IOErrorEvent.IO_ERROR));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#if html5\r\n@:native(\"createjs.Sound\") extern class SoundJS {\r\n\t\r\n\tpublic static function addEventListener (type:String, listener:Dynamic, ?useCapture:Bool):Dynamic;\r\n\tpublic static function dispatchEvent (eventObj:Dynamic, ?target:Dynamic):Bool;\r\n\tpublic static function hasEventListener (type:String):Bool;\r\n\tpublic static function removeAllEventListeners (?type:String):Void;\r\n\tpublic static function removeEventListener (type:String, listener:Dynamic, ?useCapture:Bool):Void;\r\n\t\r\n\tpublic static function createInstance (src:String):SoundJSInstance;\r\n\tpublic static function getCapabilities ():Dynamic;\r\n\tpublic static function getCapability (key:String):Dynamic;\r\n\tpublic static function getMute ():Bool;\r\n\tpublic static function getVolume ():Float;\r\n\tpublic static function initializeDefaultPlugins ():Bool;\r\n\tpublic static function isReady ():Bool;\r\n\tpublic static function loadComplete (src:String):Bool;\r\n\t//public static function mute(value:Bool):Void;\r\n\tpublic static function play (src:String, ?interrupt:String = INTERRUPT_NONE, ?delay:Int = 0, ?offset:Int = 0, ?loop:Int = 0, ?volume:Float = 1, ?pan:Float = 0):SoundJSInstance;\r\n\tpublic static function registerManifest (manifest:Array<Dynamic>, basepath:String):Dynamic;\r\n\tpublic static function registerPlugin (plugin:Dynamic):Bool;\r\n\tpublic static function registerPlugins (plugins:Array<Dynamic>):Bool;\r\n\tpublic static function registerSound (src:String, ?id:String, ?data:Float, ?preload:Bool = true):Dynamic;\r\n\t\r\n\tpublic static function removeAllSounds ():Void;\r\n\tpublic static function removeManifest (manifest:Array<Dynamic>):Dynamic;\r\n\tpublic static function removeSound (src:String):Void;\r\n\t\r\n\tpublic static function setMute (value:Bool):Bool;\r\n\tpublic static function setVolume (value:Float):Void;\r\n\tpublic static function stop ():Void;\r\n\t\r\n\tpublic static var activePlugin:Dynamic;\r\n\tpublic static var alternateExtensions:Array<String>;\r\n\t//public static var AUDIO_TIMEOUT:Float;\r\n\tpublic static var defaultInterruptBehavior:String;\r\n\tpublic static var DELIMITER:String;\r\n\t//public static var EXTENSION_MAP:Dynamic;\r\n\tpublic static inline var INTERRUPT_ANY:String = \"any\";\r\n\tpublic static inline var INTERRUPT_EARLY:String = \"early\";\r\n\tpublic static inline var INTERRUPT_LATE:String = \"late\";\r\n\tpublic static inline var INTERRUPT_NONE:String = \"none\";\r\n\t//public var onLoadComplete:Dynamic->Void;\r\n\tpublic static var PLAY_FAILED:String;\r\n\tpublic static var PLAY_FINISHED:String;\r\n\tpublic static var PLAY_INITED:String;\r\n\tpublic static var PLAY_INTERRUPTED:String;\r\n\tpublic static var PLAY_SUCCEEDED:String;\r\n\tpublic static var SUPPORTED_EXTENSIONS:Array<String>;\r\n\t\r\n}\r\n\r\n\r\n@:native(\"createjs.SoundInstance\") extern class SoundJSInstance extends SoundJSEventDispatcher {\r\n\t\r\n\tpublic function new (src:String, owner:Dynamic):Void;\r\n\tpublic function getDuration ():Int;\r\n\tpublic function getMute ():Bool;\r\n\tpublic function getPan ():Float;\r\n\tpublic function getPosition ():Int;\r\n\tpublic function getVolume ():Float;\r\n\t//public function mute (value:Bool):Bool;\r\n\tpublic function pause ():Bool;\r\n\tpublic function play (?interrupt:String = Sound.INTERRUPT_NONE, ?delay:Int = 0, ?offset:Int = 0, ?loop:Int = 0, ?volume:Float = 1, ?pan:Float = 0):Void;\r\n\tpublic function resume ():Bool;\r\n\tpublic function setMute (value:Bool):Bool;\r\n\tpublic function setPan (value:Float):Float;\r\n\tpublic function setPosition (value:Int):Void;\r\n\tpublic function setVolume (value:Float):Bool;\r\n\tpublic function stop ():Bool;\r\n\t\r\n\tpublic var gainNode:Dynamic;\r\n\tpublic var pan:Float;\r\n\tpublic var panNode:Dynamic;\r\n\tpublic var playState:String;\r\n\tpublic var sourceNode:Dynamic;\r\n\t//public var startTime:Float;\r\n\tpublic var uniqueId:Dynamic;\r\n\tpublic var volume:Float;\r\n\t\r\n\tpublic var onComplete:SoundJSInstance->Void;\r\n\tpublic var onLoop:SoundJSInstance->Void;\r\n\tpublic var onPlayFailed:SoundJSInstance->Void;\r\n\tpublic var onPlayInterrupted:SoundJSInstance->Void;\r\n\tpublic var onPlaySucceeded:SoundJSInstance->Void;\r\n\tpublic var onReady:SoundJSInstance->Void;\r\n\t\r\n}\r\n\r\n\r\n@:native(\"createjs.EventDispatcher\") extern class SoundJSEventDispatcher {\r\n\t\r\n\tpublic function addEventListener (type:String, listener:Dynamic, ?useCapture:Bool):Dynamic;\r\n\tpublic function dispatchEvent (eventObj:Dynamic, ?target:Dynamic):Bool;\r\n\tpublic function hasEventListener (type:String):Bool;\r\n\tpublic static function initialize (target:Dynamic):Void;\r\n\tpublic function off (type:String, listener:Dynamic, ?useCapture:Bool):Bool;\r\n\tpublic function on (type:String, listener:Dynamic, ?scope:Dynamic, ?once:Bool=false, ?data:Dynamic = null, ?useCapture:Bool=false):Dynamic;\r\n\tpublic function removeAllEventListeners (?type:String):Void;\r\n\tpublic function removeEventListener(type:String, listener:Dynamic, ?useCapture:Bool):Void;\r\n\tpublic function toString ():String;\r\n\t\r\n}\r\n#end\r\n\r\n\r\n#else\r\ntypedef Sound = openfl._legacy.media.Sound;\r\n#end","package openfl.media; #if (!openfl_legacy || disable_legacy_audio)\r\n\r\n\r\nimport lime.audio.AudioSource;\r\nimport openfl.events.Event;\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.media.Sound;\r\n\r\n\r\n@:final @:keep class SoundChannel extends EventDispatcher {\r\n\t\r\n\t\r\n\tpublic var leftPeak (default, null):Float;\r\n\tpublic var position (get, set):Float;\r\n\tpublic var rightPeak (default, null):Float;\r\n\tpublic var soundTransform (get, set):SoundTransform;\r\n\t\r\n\tprivate var __isValid:Bool;\r\n\tprivate var __source:AudioSource;\r\n\t\r\n\t#if html5\r\n\tprivate var __soundInstance:SoundJSInstance;\r\n\t#end\r\n\t\r\n\t\r\n\tprivate function new (#if !html5 source:AudioSource #else soundInstance:SoundJSInstance #end = null):Void {\r\n\t\t\r\n\t\tsuper (this);\r\n\t\t\r\n\t\tleftPeak = 1;\r\n\t\trightPeak = 1;\r\n\t\t\r\n\t\t#if !html5\r\n\t\t\t\r\n\t\t\tif (source != null) {\r\n\t\t\t\t\r\n\t\t\t\t__source = source;\r\n\t\t\t\t__source.onComplete.add (source_onComplete);\r\n\t\t\t\t__isValid = true;\r\n\t\t\t\t\r\n\t\t\t\t__source.play ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t#else\r\n\t\t\t\r\n\t\t\tif (soundInstance != null) {\r\n\t\t\t\t\r\n\t\t\t\t__soundInstance = soundInstance;\r\n\t\t\t\t__soundInstance.addEventListener (\"complete\", source_onComplete);\r\n\t\t\t\t__isValid = true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function stop ():Void {\r\n\t\t\r\n\t\tif (!__isValid) return;\r\n\t\t\r\n\t\t#if !html5\r\n\t\t__source.stop ();\r\n\t\t__dispose ();\r\n\t\t#else\r\n\t\t__soundInstance.stop ();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __dispose ():Void {\r\n\t\t\r\n\t\tif (!__isValid) return;\r\n\t\t\r\n\t\t#if !html5\r\n\t\t__source.dispose ();\r\n\t\t#else\r\n\t\t__soundInstance.stop ();\r\n\t\t__soundInstance = null;\r\n\t\t#end\r\n\t\t\r\n\t\t__isValid = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_position ():Float {\r\n\t\t\r\n\t\tif (!__isValid) return 0;\r\n\t\t\r\n\t\t#if !html5\r\n\t\treturn (__source.currentTime + __source.offset) / 1000;\r\n\t\t#else\r\n\t\treturn __soundInstance.getPosition ();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_position (value:Float):Float {\r\n\t\t\r\n\t\tif (!__isValid) return 0;\r\n\t\t\r\n\t\t#if !html5\r\n\t\t__source.currentTime = Std.int (value * 1000) - __source.offset;\r\n\t\treturn value;\r\n\t\t#else\r\n\t\t__soundInstance.setPosition (Std.int (value));\r\n\t\treturn __soundInstance.getPosition ();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_soundTransform ():SoundTransform {\r\n\t\t\r\n\t\tif (!__isValid) return new SoundTransform ();\r\n\t\t\r\n\t\t// TODO: pan\r\n\t\t\r\n\t\t#if !html5\r\n\t\treturn new SoundTransform (__source.gain, 0);\r\n\t\t#else\r\n\t\treturn new SoundTransform (__soundInstance.getVolume (), __soundInstance.getPan ());\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_soundTransform (value:SoundTransform):SoundTransform {\r\n\t\t\r\n\t\tif (!__isValid) return value;\r\n\t\t\r\n\t\t#if !html5\r\n\t\t__source.gain = value.volume;\r\n\t\t\r\n\t\t// TODO: pan\r\n\t\t\r\n\t\treturn value;\r\n\t\t#else\r\n\t\t__soundInstance.setVolume (value.volume);\r\n\t\t__soundInstance.setPan (value.pan);\r\n\t\t\r\n\t\treturn value;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Event Handlers\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t#if html5\r\n\tprivate function soundInstance_onComplete (_):Void {\r\n\t\t\r\n\t\tdispatchEvent (new Event (Event.SOUND_COMPLETE));\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\tprivate function source_onComplete ():Void {\r\n\t\t\r\n\t\t__dispose ();\r\n\t\tdispatchEvent (new Event (Event.SOUND_COMPLETE));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef SoundChannel = openfl._legacy.media.SoundChannel;\r\n#end","package openfl.media;\r\n\r\n\r\nclass SoundLoaderContext {\r\n\t\r\n\t\r\n\tpublic var bufferTime:Float;\r\n\tpublic var checkPolicyFile:Bool;\r\n\t\r\n\t\r\n\tpublic function new (bufferTime:Float = 1000, checkPolicyFile:Bool = false) {\r\n\t\t\r\n\t\tthis.bufferTime = bufferTime;\r\n\t\tthis.checkPolicyFile = checkPolicyFile;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.media;\r\n\r\n\r\n@:final class SoundTransform {\r\n\t\r\n\t\r\n\tpublic var leftToLeft:Float;\r\n\tpublic var leftToRight:Float;\r\n\tpublic var pan:Float;\r\n\tpublic var rightToLeft:Float;\r\n\tpublic var rightToRight:Float;\r\n\tpublic var volume:Float;\r\n\t\r\n\t\r\n\tpublic function new (vol:Float = 1, panning:Float = 0) {\r\n\t\t\r\n\t\tvolume = vol;\r\n\t\tpan = panning;\r\n\t\tleftToLeft = 0;\r\n\t\tleftToRight = 0;\r\n\t\trightToLeft = 0;\r\n\t\trightToRight = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clone ():SoundTransform {\r\n\t\t\r\n\t\treturn new SoundTransform (volume, pan);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.media; #if (display || !flash)\r\n\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.net.NetStream;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\nclass StageVideo extends EventDispatcher\r\n{\r\n\tprivate var _colorSpaces:Array<String>;\r\n\tpublic var colorSpaces(get, null):Array<String>;\r\n\tpublic var depth:Int;\r\n\tpublic var pan = new Point();\r\n\tpublic var videoWidth:Int;\r\n\tpublic var videoHeight:Int;\r\n\tpublic var viewPort:Rectangle;\r\n\tpublic var zoom = new Point(1, 1);\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper(null);\r\n\t}\r\n\t\r\n\tprivate function get_colorSpaces():Array<String>\r\n\t{\r\n\t\treturn _colorSpaces;\r\n\t}\r\n\t\r\n\t/*public function attachCamera(theCamera:Camera):Void\r\n\t{\r\n\t\t\r\n\t}*/\r\n\t\r\n\tpublic function attachNetStream(netStream:NetStream):Void\r\n\t{\r\n\t\t\r\n\t}\r\n}\r\n\r\n#else\r\ntypedef StageVideo = flash.media.StageVideo;\r\n#end","package openfl.media; #if (display || !flash)\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\nclass StageVideoAvailability\r\n{\r\n\tpublic static var AVAILABLE:String = \"available\";\r\n\tpublic static var UNAVAILABLE:String = \"unavailable\";\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n#else\r\ntypedef StageVideoAvailability = flash.media.StageVideoAvailability;\r\n#end","package openfl.net;\r\n\r\n\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.events.NetStatusEvent;\r\n\r\n\r\nclass NetConnection extends EventDispatcher {\r\n\t\r\n\t\r\n\tpublic static inline var CONNECT_SUCCESS:String = \"connectSuccess\";\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function connect (command:String, ?_, ?_, ?_, ?_, ?_):Void {\r\n\t\t\r\n\t\tif (command != null) {\r\n\t\t\t\r\n\t\t\tthrow \"Error: Can only connect in \\\"HTTP streaming\\\" mode\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.dispatchEvent (new NetStatusEvent (NetStatusEvent.NET_STATUS, false, true, { code: NetConnection.CONNECT_SUCCESS }));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.net;\r\n\r\n\r\nimport haxe.Timer;\r\nimport openfl.events.Event;\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.events.NetStatusEvent;\r\nimport openfl.media.SoundTransform;\r\n\r\n#if (js && html5)\r\nimport js.html.VideoElement;\r\nimport js.Browser;\r\n#end\r\n\r\n\r\nclass NetStream extends EventDispatcher {\r\n\t\r\n\t\r\n\tpublic var audioCodec (default, null):Int;\r\n\tpublic var bufferLength (default, null):Float;\r\n\tpublic var bufferTime:Float;\r\n\tpublic var bytesLoaded (default, null):Int;\r\n\tpublic var bytesTotal (default, null):Int;\r\n\tpublic var checkPolicyFile:Bool;\r\n\tpublic var client:Dynamic;\r\n\tpublic var currentFPS (default, null):Float;\r\n\tpublic var decodedFrames (default, null):Int;\r\n\tpublic var liveDelay (default, null):Float;\r\n\tpublic var objectEncoding (default, null):Int;\r\n\tpublic var soundTransform:SoundTransform;\r\n\tpublic var speed (get, set):Float;\r\n\tpublic var time (default, null):Float;\r\n\tpublic var videoCode (default, null):Int;\r\n\t\r\n\tprivate var __connection:NetConnection;\r\n\tprivate var __timer:Timer;\r\n\t\r\n\t#if (js && html5)\r\n\tprivate var __video (default, null):VideoElement;\r\n\t#end\r\n\t\r\n\t\r\n\tpublic function new (connection:NetConnection, peerID:String = null):Void {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\t__connection = connection;\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t__video = cast Browser.document.createElement (\"video\");\r\n\t\t\r\n\t\t__video.addEventListener (\"error\", video_onError, false);\r\n\t\t__video.addEventListener (\"waiting\", video_onWaiting, false);\r\n\t\t__video.addEventListener (\"ended\", video_onEnd, false);\r\n\t\t__video.addEventListener (\"pause\", video_onPause, false);\r\n\t\t__video.addEventListener (\"seeking\", video_onSeeking, false);\r\n\t\t__video.addEventListener (\"playing\", video_onPlaying, false);\r\n\t\t__video.addEventListener (\"timeupdate\", video_onTimeUpdate, false);\r\n\t\t__video.addEventListener (\"loadstart\", video_onLoadStart, false);\r\n\t\t__video.addEventListener (\"stalled\", video_onStalled, false);\r\n\t\t__video.addEventListener (\"durationchanged\", video_onDurationChanged, false);\r\n\t\t__video.addEventListener (\"canplay\", video_onCanPlay, false);\r\n\t\t__video.addEventListener (\"canplaythrough\", video_onCanPlayThrough, false);\r\n\t\t__video.addEventListener (\"loadedmetadata\", video_onLoadMetaData, false);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function close ():Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t__video.pause ();\r\n\t\t__video.src = \"\";\r\n\t\ttime = 0;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function pause ():Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t__video.pause ();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function play (url:String, ?_, ?_, ?_, ?_, ?_):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t__video.src = url;\r\n\t\t__video.play ();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function requestVideoStatus ():Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tif (__timer == null) {\r\n\t\t\t\r\n\t\t\t__timer = new Timer (1);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__timer.run = function () {\r\n\t\t\t\r\n\t\t\tif (__video.paused) {\r\n\t\t\t\t\r\n\t\t\t\t__playStatus (\"NetStream.Play.pause\");\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t__playStatus (\"NetStream.Play.playing\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__timer.stop ();\r\n\t\t\t\r\n\t\t};\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function resume ():Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t__video.play ();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function seek (offset:Float):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tvar time = __video.currentTime + offset;\r\n\t\t\r\n\t\tif (time < 0) {\r\n\t\t\t\r\n\t\t\ttime = 0;\r\n\t\t\t\r\n\t\t} else if (time > __video.duration) {\r\n\t\t\t\r\n\t\t\ttime = __video.duration;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__video.currentTime = time;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function togglePause ():Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tif (__video.paused) {\r\n\t\t\t\r\n\t\t\t__video.play ();\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t__video.pause ();\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __playStatus (code:String):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tif (client != null) {\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\t\r\n\t\t\t\tvar handler = client.onPlayStatus;\r\n\t\t\t\thandler ({ \r\n\t\t\t\t\t\r\n\t\t\t\t\tcode: code,\r\n\t\t\t\t\tduration: __video.duration,\r\n\t\t\t\t\tposition: __video.currentTime,\r\n\t\t\t\t\tspeed: __video.playbackRate,\r\n\t\t\t\t\tstart: untyped __video.startTime\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t} catch (e:Dynamic) {}\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Event Handlers\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function video_onCanPlay (event:Dynamic):Void {\r\n\t\t\r\n\t\t__playStatus (\"NetStream.Play.canplay\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function video_onCanPlayThrough (event:Dynamic):Void {\r\n\t\t\r\n\t\t__playStatus (\"NetStream.Play.canplaythrough\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function video_onDurationChanged (event:Dynamic):Void {\r\n\t\t\r\n\t\t__playStatus (\"NetStream.Play.durationchanged\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function video_onEnd (event:Dynamic):Void {\r\n\t\t\r\n\t\t__connection.dispatchEvent (new NetStatusEvent (NetStatusEvent.NET_STATUS, false, false, { code : \"NetStream.Play.Stop\" } ));\r\n\t\t__playStatus (\"NetStream.Play.Complete\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function video_onError (event:Dynamic):Void {\r\n\t\t\r\n\t\t__connection.dispatchEvent (new NetStatusEvent (NetStatusEvent.NET_STATUS, false, false, { code : \"NetStream.Play.Stop\" } ));\r\n\t\t__playStatus (\"NetStream.Play.error\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function video_onLoadMetaData (event:Dynamic):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tif (client != null) {\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\t\r\n\t\t\t\tvar handler = client.onMetaData;\r\n\t\t\t\thandler ({\r\n\t\t\t\t\t\r\n\t\t\t\t\twidth: __video.videoHeight,\r\n\t\t\t\t\theight: __video.videoWidth\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t} catch (e:Dynamic) {}\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function video_onLoadStart (event:Dynamic):Void {\r\n\t\t\r\n\t\t__playStatus (\"NetStream.Play.loadstart\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function video_onPause (event:Dynamic):Void {\r\n\t\t\r\n\t\t__playStatus (\"NetStream.Play.pause\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function video_onPlaying (event:Dynamic):Void {\r\n\t\t\r\n\t\t__connection.dispatchEvent (new NetStatusEvent (NetStatusEvent.NET_STATUS, false, false, { code : \"NetStream.Play.Start\" } ));\r\n\t\t__playStatus (\"NetStream.Play.playing\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function video_onSeeking (event:Dynamic):Void {\r\n\t\t\r\n\t\t__playStatus (\"NetStream.Play.seeking\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function video_onStalled (event:Dynamic):Void {\r\n\t\t\r\n\t\t__playStatus (\"NetStream.Play.stalled\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function video_onTimeUpdate (event:Dynamic):Void {\r\n\t\t\r\n\t\t__playStatus (\"NetStream.Play.timeupdate\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function video_onWaiting (event:Dynamic):Void {\r\n\t\t\r\n\t\t__playStatus (\"NetStream.Play.waiting\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_speed ():Float {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\treturn __video.playbackRate;\r\n\t\t#else\r\n\t\treturn 1;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_speed (value:Float):Float {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\treturn __video.playbackRate = value;\r\n\t\t#else\r\n\t\treturn value;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.net; #if (!openfl_legacy || disable_legacy_networking)\r\n\r\n\r\nimport lime.app.Event;\r\nimport lime.system.BackgroundWorker;\r\nimport lime.system.CFFI;\r\nimport lime.utils.Bytes;\r\nimport openfl.events.Event;\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.events.HTTPStatusEvent;\r\nimport openfl.events.IOErrorEvent;\r\nimport openfl.events.ProgressEvent;\r\nimport openfl.errors.IOError;\r\nimport openfl.events.SecurityErrorEvent;\r\nimport openfl.utils.ByteArray;\r\n\r\n#if (js && html5)\r\nimport js.html.ArrayBuffer;\r\nimport js.html.EventTarget;\r\nimport js.html.XMLHttpRequest;\r\nimport js.Browser;\r\nimport js.Lib;\r\n#end\r\n\r\n#if lime_curl\r\nimport lime.net.curl.CURL;\r\nimport lime.net.curl.CURLEasy;\r\nimport lime.net.curl.CURLCode;\r\nimport lime.net.curl.CURLInfo;\r\nimport lime.net.curl.CURLOption;\r\n#end\r\n\r\n@:access(openfl.events.Event)\r\n\r\n\r\nclass URLLoader extends EventDispatcher {\r\n\t\r\n\t\r\n\tpublic var bytesLoaded:Int;\r\n\tpublic var bytesTotal:Int;\r\n\tpublic var data:Dynamic;\r\n\tpublic var dataFormat (default, set):URLLoaderDataFormat;\r\n\t\r\n\t\r\n\t#if lime_curl\r\n\tprivate var __curl:CURL;\r\n\tprivate var __data:ByteArray;\r\n\t#end\r\n\t\r\n\t\r\n\tpublic function new (request:URLRequest = null) {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\tbytesLoaded = 0;\r\n\t\tbytesTotal = 0;\r\n\t\tdataFormat = URLLoaderDataFormat.TEXT;\r\n\t\t\r\n\t\t#if lime_curl\r\n\t\t__data = new ByteArray ();\r\n\t\t__curl = CURLEasy.init ();\r\n\t\t#end\r\n\t\t\r\n\t\tif (request != null) {\r\n\t\t\t\r\n\t\t\tload (request);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function close ():Void {\r\n\t\t\r\n\t\t#if lime_curl\r\n\t\tCURLEasy.cleanup (__curl);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate dynamic function getData ():Dynamic {\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function load (request:URLRequest):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\trequestUrl (request.url, request.method, request.data, request.formatRequestHeaders ());\r\n\t\t#else\r\n\t\tif (request.url != null && request.url.indexOf (\"http://\") == -1 && request.url.indexOf (\"https://\") == -1) {\r\n\t\t\t\r\n\t\t\tvar worker = new BackgroundWorker ();\r\n\t\t\tworker.doWork.add (function (_) {\r\n\t\t\t\t\r\n\t\t\t\tvar path = request.url;\r\n\t\t\t\tvar index = path.indexOf (\"?\");\r\n\t\t\t\t\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tpath = path.substring (0, index);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar bytes:ByteArray = Bytes.readFile (path);\r\n\t\t\t\tworker.sendComplete (bytes);\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\tworker.onComplete.add (function (bytes:ByteArray) {\r\n\t\t\t\t\r\n\t\t\t\tif (bytes != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch (dataFormat) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase BINARY: this.data = bytes;\r\n\t\t\t\t\t\tdefault: this.data = bytes.readUTFBytes (bytes.length);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar evt = new Event (Event.COMPLETE);\r\n\t\t\t\t\tevt.currentTarget = this;\r\n\t\t\t\t\tdispatchEvent (evt);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar evt = new IOErrorEvent (IOErrorEvent.IO_ERROR);\r\n\t\t\t\t\tevt.currentTarget = this;\r\n\t\t\t\t\tdispatchEvent (evt);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\tworker.run ();\r\n\t\t\t\r\n\t\t}\r\n\t\t#if lime_curl\r\n\t\telse\r\n\t\t{\r\n\t\t\trequestUrl (request.url, request.method, request.data, request.formatRequestHeaders ());\r\n\t\t}\r\n\t\t#end\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if (js && html5)\r\n\tprivate function registerEvents (subject:EventTarget):Void {\r\n\t\t\r\n\t\tvar self = this;\r\n\t\tif (untyped __js__(\"typeof XMLHttpRequestProgressEvent\") != __js__('\"undefined\"')) {\r\n\t\t\t\r\n\t\t\tsubject.addEventListener (\"progress\", onProgress, false);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tuntyped subject.onreadystatechange = function () {\r\n\t\t\t\r\n\t\t\tif (subject.readyState != 4) return;\r\n\t\t\t\r\n\t\t\tvar s = try subject.status catch (e:Dynamic) null;\r\n\t\t\t\r\n\t\t\tif (s == untyped __js__(\"undefined\")) {\r\n\t\t\t\t\r\n\t\t\t\ts = null;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (s != null) {\r\n\t\t\t\t\r\n\t\t\t\tself.onStatus (s);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//js.Lib.alert (s);\r\n\t\t\t\r\n\t\t\tif (s != null && s >= 200 && s < 400) {\r\n\t\t\t\t\r\n\t\t\t\tself.onData (subject.response);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tif (s == null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.onError (\"Failed to connect or resolve host\");\r\n\t\t\t\t\t\r\n\t\t\t\t} else if (s == 12029) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.onError (\"Failed to connect to host\");\r\n\t\t\t\t\t\r\n\t\t\t\t} else if (s == 12007) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.onError (\"Unknown host\");\r\n\t\t\t\t\t\r\n\t\t\t\t} else if (s == 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.onError (\"Unable to make request (may be blocked due to cross-domain permissions)\");\r\n\t\t\t\t\tself.onSecurityError (\"Unable to make request (may be blocked due to cross-domain permissions)\");\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.onError (\"Http Error #\" + subject.status);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function requestUrl (url:String, method:String, data:Dynamic, requestHeaders:Array<URLRequestHeader>):Void {\r\n\t\t\r\n\t\tvar xmlHttpRequest:XMLHttpRequest = untyped __new__(\"XMLHttpRequest\");\r\n\t\tregisterEvents (cast xmlHttpRequest);\r\n\t\tvar uri:Dynamic = \"\";\r\n\t\t\r\n\t\tif (Std.is (data, ByteArrayData)) {\r\n\t\t\t\r\n\t\t\tvar data:ByteArrayData = cast data;\r\n\t\t\t\r\n\t\t\tswitch (dataFormat) {\r\n\t\t\t\t\r\n\t\t\t\tcase BINARY: uri = cast (data, ArrayBuffer);\r\n\t\t\t\tdefault: uri = data.readUTFBytes (data.length);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else if (Std.is (data, URLVariables)) {\r\n\t\t\t\r\n\t\t\tvar data:URLVariables = cast data;\r\n\t\t\t\r\n\t\t\tfor (p in Reflect.fields (data)) {\r\n\t\t\t\t\r\n\t\t\t\tif (uri.length != 0) uri += \"&\";\r\n\t\t\t\turi += StringTools.urlEncode (p) + \"=\" + StringTools.urlEncode (Reflect.field (data, p));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tif (data != null) {\r\n\t\t\t\t\r\n\t\t\t\turi = data.toString ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tif (method == \"GET\" && uri != null && uri != \"\") {\r\n\t\t\t\t\r\n\t\t\t\tvar question = url.split (\"?\").length <= 1;\r\n\t\t\t\txmlHttpRequest.open (method, url + (if (question) \"?\" else \"&\") + uri, true);\r\n\t\t\t\turi = \"\";\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t//js.Lib.alert (\"open: \" + method + \", \" + url + \", true\");\r\n\t\t\t\txmlHttpRequest.open (method, url, true);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} catch (e:Dynamic) {\r\n\t\t\t\r\n\t\t\tonError (e.toString ());\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t//js.Lib.alert (\"dataFormat: \" + dataFormat);\r\n\t\t\r\n\t\tswitch (dataFormat) {\r\n\t\t\t\r\n\t\t\tcase BINARY: untyped xmlHttpRequest.responseType = 'arraybuffer';\r\n\t\t\tdefault:\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (header in requestHeaders) {\r\n\t\t\t\r\n\t\t\t//js.Lib.alert (\"setRequestHeader: \" + header.name + \", \" + header.value);\r\n\t\t\txmlHttpRequest.setRequestHeader (header.name, header.value);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t//js.Lib.alert (\"uri: \" + uri);\r\n\t\t\r\n\t\txmlHttpRequest.send (uri);\r\n\t\tonOpen ();\r\n\t\t\r\n\t\tgetData = function () {\r\n\t\t\t\r\n\t\t\tif (xmlHttpRequest.response != null) {\r\n\t\t\t\t\r\n\t\t\t\treturn xmlHttpRequest.response;\r\n\t\t\t\t\r\n\t\t\t} else { \r\n\t\t\t\t\r\n\t\t\t\treturn xmlHttpRequest.responseText;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#elseif lime_curl\r\n\t\r\n\t\r\n\tprivate function prepareData (data:Dynamic):ByteArray {\r\n\t\t\r\n\t\tvar uri:ByteArray = new ByteArray ();\r\n\t\t\r\n\t\tif (Std.is (data, ByteArrayData)) {\r\n\t\t\t\r\n\t\t\tvar data:ByteArray = cast data;\r\n\t\t\turi = data;\r\n\t\t\t\r\n\t\t} else if (Std.is (data, URLVariables)) {\r\n\t\t\t\r\n\t\t\tvar data:URLVariables = cast data;\r\n\t\t\tvar tmp:String = \"\";\r\n\t\t\t\r\n\t\t\tfor (p in Reflect.fields (data)) {\r\n\t\t\t\t\r\n\t\t\t\tif (tmp.length != 0) tmp += \"&\";\r\n\t\t\t\ttmp += StringTools.urlEncode (p) + \"=\" + StringTools.urlEncode (Std.string (Reflect.field (data, p)));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\turi.writeUTFBytes (tmp);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tif (data != null) {\r\n\t\t\t\t\r\n\t\t\t\turi.writeUTFBytes (Std.string (data));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn uri;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function requestUrl (url:String, method:URLRequestMethod, data:Dynamic, requestHeaders:Array<URLRequestHeader>):Void {\r\n\t\t\r\n\t\tvar uri = prepareData (data);\r\n\t\turi.position = 0;\r\n\t\t\r\n\t\t__data = new ByteArray ();\r\n\t\tbytesLoaded = 0;\r\n\t\tbytesTotal = 0;\r\n\t\t\r\n\t\tCURLEasy.reset (__curl);\r\n\t\tCURLEasy.setopt (__curl, URL, url);\r\n\t\t\r\n\t\tswitch (method) {\r\n\t\t\t\r\n\t\t\tcase HEAD:\r\n\t\t\t\t\r\n\t\t\t\tCURLEasy.setopt(__curl, NOBODY, true);\r\n\t\t\t\r\n\t\t\tcase GET:\r\n\t\t\t\t\r\n\t\t\t\tCURLEasy.setopt(__curl, HTTPGET, true);\r\n\t\t\t\t\r\n\t\t\t\tif (uri.length > 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tCURLEasy.setopt (__curl, URL, url + \"?\" + uri.readUTFBytes (uri.length));\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tcase POST:\r\n\t\t\t\t\r\n\t\t\t\tCURLEasy.setopt(__curl, POST, true);\r\n\t\t\t\tCURLEasy.setopt(__curl, READFUNCTION, readFunction.bind(_, uri));\r\n\t\t\t\tCURLEasy.setopt(__curl, POSTFIELDSIZE, uri.length);\r\n\t\t\t\tCURLEasy.setopt(__curl, INFILESIZE, uri.length);\r\n\t\t\t\r\n\t\t\tcase PUT:\r\n\t\t\t\t\r\n\t\t\t\tCURLEasy.setopt(__curl, UPLOAD, true);\r\n\t\t\t\tCURLEasy.setopt(__curl, READFUNCTION, readFunction.bind(_, uri));\r\n\t\t\t\tCURLEasy.setopt(__curl, INFILESIZE, uri.length);\r\n\t\t\t\r\n\t\t\tcase _:\r\n\t\t\t\t\r\n\t\t\t\tCURLEasy.setopt(__curl, CUSTOMREQUEST, cast method);\r\n\t\t\t\tCURLEasy.setopt(__curl, READFUNCTION, readFunction.bind(_, uri));\r\n\t\t\t\tCURLEasy.setopt(__curl, INFILESIZE, uri.length);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar headers:Array<String> = [];\r\n\t\theaders.push (\"Expect: \"); // removes the default cURL value\r\n\t\t\r\n\t\tfor (requestHeader in requestHeaders) {\r\n\t\t\t\r\n\t\t\theaders.push ('${requestHeader.name}: ${requestHeader.value}');\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tCURLEasy.setopt (__curl, FOLLOWLOCATION, true);\r\n\t\tCURLEasy.setopt (__curl, AUTOREFERER, true);\r\n\t\tCURLEasy.setopt (__curl, HTTPHEADER, headers);\r\n\t\t\r\n\t\tCURLEasy.setopt (__curl, PROGRESSFUNCTION, progressFunction);\r\n\t\tCURLEasy.setopt (__curl, WRITEFUNCTION, writeFunction);\r\n\t\tCURLEasy.setopt (__curl, HEADERFUNCTION, headerFunction);\r\n\t\t\r\n\t\tCURLEasy.setopt (__curl, SSL_VERIFYPEER, false);\r\n\t\tCURLEasy.setopt (__curl, SSL_VERIFYHOST, 0);\r\n\t\tCURLEasy.setopt (__curl, USERAGENT, \"libcurl-agent/1.0\");\r\n\t\tCURLEasy.setopt (__curl, CONNECTTIMEOUT, 30);\r\n\t\tCURLEasy.setopt (__curl, TRANSFERTEXT, dataFormat == BINARY ? 0 : 1);\r\n\t\t\r\n\t\tvar worker = new BackgroundWorker ();\r\n\t\tworker.doWork.add (function (_) {\r\n\t\t\t\r\n\t\t\tvar result = CURLEasy.perform (__curl);\r\n\t\t\tworker.sendComplete (result);\r\n\t\t\t\r\n\t\t});\r\n\t\tworker.onComplete.add (function (result) {\r\n\t\t\t\r\n\t\t\tvar responseCode = CURLEasy.getinfo (__curl, RESPONSE_CODE);\r\n\t\t\t\r\n\t\t\tif (result == CURLCode.OK) {\r\n\t\t\t\t\r\n\t\t\t\tswitch (dataFormat) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase BINARY:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.data = __data;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__data.position = 0;\r\n\t\t\t\t\t\tthis.data = __data.readUTFBytes (__data.length);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tonStatus (Std.parseInt (responseCode));\r\n\t\t\t\t\r\n\t\t\t\tvar evt = new Event (Event.COMPLETE);\r\n\t\t\t\tevt.currentTarget = this;\r\n\t\t\t\tdispatchEvent (evt);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tonError (\"Problem with curl: \" + result);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\tworker.run ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function writeFunction (output:haxe.io.Bytes, size:Int, nmemb:Int):Int {\r\n\t\t\r\n\t\t__data.writeBytes (ByteArray.fromBytes (output));\r\n\t\treturn size * nmemb;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function headerFunction (output:haxe.io.Bytes, size:Int, nmemb:Int):Int {\r\n\t\t\r\n\t\t// TODO\r\n\t\treturn size * nmemb;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function progressFunction (dltotal:Float, dlnow:Float, uptotal:Float, upnow:Float):Int {\r\n\t\t\r\n\t\tif (upnow > bytesLoaded || dlnow > bytesLoaded || uptotal > bytesTotal || dltotal > bytesTotal) {\r\n\t\t\t\r\n\t\t\tif (upnow > bytesLoaded) bytesLoaded = Std.int (upnow);\r\n\t\t\tif (dlnow > bytesLoaded) bytesLoaded = Std.int (dlnow);\r\n\t\t\tif (uptotal > bytesTotal) bytesTotal = Std.int (uptotal);\r\n\t\t\tif (dltotal > bytesTotal) bytesTotal = Std.int (dltotal);\r\n\t\t\t\r\n\t\t\tvar evt = new ProgressEvent (ProgressEvent.PROGRESS);\r\n\t\t\tevt.currentTarget = this;\r\n\t\t\tevt.bytesLoaded = bytesLoaded;\r\n\t\t\tevt.bytesTotal = bytesTotal;\r\n\t\t\tdispatchEvent (evt);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\r\n\t\r\n\tprivate function readFunction (max:Int, input:ByteArray):Bytes {\r\n\t\t\r\n\t\treturn input;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#end\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Event Handlers\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function onData (_):Void {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tvar content:Dynamic = getData ();\r\n\t\t\r\n\t\tswitch (dataFormat) {\r\n\t\t\t\r\n\t\t\tcase BINARY: this.data = ByteArray.fromArrayBuffer ((content:ArrayBuffer));\r\n\t\t\tdefault: this.data = Std.string (content);\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t\tvar evt = new Event (Event.COMPLETE);\r\n\t\tevt.currentTarget = this;\r\n\t\tdispatchEvent (evt);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function onError (msg:String):Void {\r\n\t\t\r\n\t\tvar evt = new IOErrorEvent (IOErrorEvent.IO_ERROR);\r\n\t\tevt.text = msg;\r\n\t\tevt.currentTarget = this;\r\n\t\tdispatchEvent (evt);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function onOpen ():Void {\r\n\t\t\r\n\t\tvar evt = new Event (Event.OPEN);\r\n\t\tevt.currentTarget = this;\r\n\t\tdispatchEvent (evt);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function onProgress (event:XMLHttpRequestProgressEvent):Void {\r\n\t\t\r\n\t\tvar evt = new ProgressEvent (ProgressEvent.PROGRESS);\r\n\t\tevt.currentTarget = this;\r\n\t\tevt.bytesLoaded = event.loaded;\r\n\t\tevt.bytesTotal = event.total;\r\n\t\tdispatchEvent (evt);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function onSecurityError (msg:String):Void {\r\n\t\t\r\n\t\tvar evt = new SecurityErrorEvent (SecurityErrorEvent.SECURITY_ERROR);\r\n\t\tevt.text = msg;\r\n\t\tevt.currentTarget = this;\r\n\t\tdispatchEvent (evt);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function onStatus (status:Int):Void {\r\n\t\t\r\n\t\tvar evt = new HTTPStatusEvent (HTTPStatusEvent.HTTP_STATUS, false, false, status);\r\n\t\tevt.currentTarget = this;\r\n\t\tdispatchEvent (evt);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function set_dataFormat (inputVal:URLLoaderDataFormat):URLLoaderDataFormat {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t// prevent inadvertently using typed arrays when they are unsupported\r\n\t\t// @todo move these sorts of tests somewhere common in the vein of Modernizr\r\n\t\t\r\n\t\tif (inputVal == URLLoaderDataFormat.BINARY && !Reflect.hasField (Browser.window, \"ArrayBuffer\")) {\r\n\t\t\t\r\n\t\t\tdataFormat = URLLoaderDataFormat.TEXT;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tdataFormat = inputVal;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn dataFormat;\r\n\t\t#else\r\n\t\treturn dataFormat = inputVal;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\ntypedef XMLHttpRequestProgressEvent = Dynamic;\r\n\r\n\r\n#else\r\ntypedef URLLoader = openfl._legacy.net.URLLoader;\r\n#end\r\n","package openfl.net;\r\n\r\n\r\n@:enum abstract URLLoaderDataFormat(Null<Int>) {\r\n\t\r\n\tpublic var BINARY = 0;\r\n\tpublic var TEXT = 1;\r\n\tpublic var VARIABLES = 2;\r\n\t\r\n\t@:from private static function fromString (value:String):URLLoaderDataFormat {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"binary\": BINARY;\r\n\t\t\tcase \"text\": TEXT;\r\n\t\t\tcase \"variables\": VARIABLES;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase URLLoaderDataFormat.BINARY: \"binary\";\r\n\t\t\tcase URLLoaderDataFormat.TEXT: \"text\";\r\n\t\t\tcase URLLoaderDataFormat.VARIABLES: \"variables\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}","package openfl.net; #if (!openfl_legacy || disable_legacy_networking)\r\n\r\n\r\nimport openfl.utils.ByteArray;\r\n\r\n\r\n@:final class URLRequest {\r\n\t\r\n\t\r\n\tpublic var contentType:String;\r\n\tpublic var data:Dynamic;\r\n\tpublic var method:String;\r\n\tpublic var requestHeaders:Array<URLRequestHeader>;\r\n\tpublic var url:String;\r\n\tpublic var userAgent:String;\r\n\t\r\n\t\r\n\tpublic function new (inURL:String = null) {\r\n\t\t\r\n\t\tif (inURL != null) {\r\n\t\t\t\r\n\t\t\turl = inURL;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\trequestHeaders = [];\r\n\t\tmethod = URLRequestMethod.GET;\r\n\t\tcontentType = null; // \"application/x-www-form-urlencoded\";\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function formatRequestHeaders ():Array<URLRequestHeader> {\r\n\t\t\r\n\t\tvar res = requestHeaders;\r\n\t\tif (res == null) res = [];\r\n\t\t\r\n\t\tif (method == URLRequestMethod.GET || data == null) return res;\r\n\t\t\r\n\t\tif (Std.is (data, String) || Std.is (data, ByteArrayData)) {\r\n\t\t\t\r\n\t\t\tres = res.copy ();\r\n\t\t\tres.push (new URLRequestHeader (\"Content-Type\", contentType != null ? contentType : \"application/x-www-form-urlencoded\"));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn res;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef URLRequest = openfl._legacy.net.URLRequest;\r\n#end","package openfl.net;\r\n\r\n\r\n@:final class URLRequestHeader {\r\n\t\r\n\t\r\n\tpublic var name:String;\r\n\tpublic var value:String;\r\n\t\r\n\t\r\n\tpublic function new (name:String = \"\", value:String = \"\") {\r\n\t\t\r\n\t\tthis.name = name;\r\n\t\tthis.value = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.net; #if (!openfl_legacy || disable_legacy_networking)\r\n\r\n\r\n@:enum abstract URLRequestMethod(Null<Int>) {\r\n\t\r\n\tpublic var DELETE = 0;\r\n\tpublic var GET = 1;\r\n\tpublic var HEAD = 2;\r\n\tpublic var OPTIONS = 3;\r\n\tpublic var POST = 4;\r\n\tpublic var PUT = 5;\r\n\t\r\n\t@:from private static function fromString (value:String):URLRequestMethod {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"DELETE\": DELETE;\r\n\t\t\tcase \"GET\": GET;\r\n\t\t\tcase \"HEAD\": HEAD;\r\n\t\t\tcase \"OPTIONS\": OPTIONS;\r\n\t\t\tcase \"POST\": POST;\r\n\t\t\tcase \"PUT\": PUT;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase URLRequestMethod.DELETE: \"DELETE\";\r\n\t\t\tcase URLRequestMethod.GET: \"GET\";\r\n\t\t\tcase URLRequestMethod.HEAD: \"HEAD\";\r\n\t\t\tcase URLRequestMethod.OPTIONS: \"OPTIONS\";\r\n\t\t\tcase URLRequestMethod.POST: \"POST\";\r\n\t\t\tcase URLRequestMethod.PUT: \"PUT\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef URLRequestMethod = openfl._legacy.net.URLRequestMethod;\r\n#end","package openfl.net;\r\n\r\n\r\nclass URLVariables implements Dynamic {\r\n\t\r\n\t\r\n\tpublic function new (source:String = null) {\r\n\t\t\r\n\t\tif (source != null) {\r\n\t\t\t\r\n\t\t\tdecode (source);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function decode (source:String):Void {\r\n\t\t\r\n\t\tvar fields = Reflect.fields (this);\r\n\t\t\r\n\t\tfor (f in fields) {\r\n\t\t\t\r\n\t\t\tReflect.deleteField (this, f);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar fields = source.split (\";\").join (\"&\").split (\"&\");\r\n\t\t\r\n\t\tfor (f in fields) {\r\n\t\t\t\r\n\t\t\tvar eq = f.indexOf (\"=\");\r\n\t\t\t\r\n\t\t\tif (eq > 0) {\r\n\t\t\t\t\r\n\t\t\t\tReflect.setField (this, StringTools.urlDecode (f.substr(0, eq)), StringTools.urlDecode (f.substr(eq + 1)));\r\n\t\t\t\t\r\n\t\t\t} else if (eq != 0) {\r\n\t\t\t\t\r\n\t\t\t\tReflect.setField (this, StringTools.urlDecode (f), \"\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function toString ():String {\r\n\t\t\r\n\t\tvar result = new Array<String> ();\r\n\t\tvar fields = Reflect.fields (this);\r\n\t\t\r\n\t\tfor (f in fields) {\r\n\t\t\t\r\n\t\t\tresult.push (StringTools.urlEncode (f) + \"=\" + StringTools.urlEncode (Reflect.field (this, f)));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn result.join (\"&\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.system; #if !openfl_legacy\r\n\r\n\r\nimport haxe.macro.Compiler;\r\n\r\n#if (js && html5)\r\nimport js.html.DivElement;\r\nimport js.html.Element;\r\nimport js.Browser;\r\n#end\r\n\r\n\r\n@:final class Capabilities {\r\n\t\r\n\t\r\n\tpublic static var avHardwareDisable (default, null) = true;\r\n\tpublic static var cpuArchitecture (default, null) = \"\"; // TODO\r\n\tpublic static var hasAccessibility (default, null) = false;\r\n\tpublic static var hasAudio (default, null) = true;\r\n\tpublic static var hasAudioEncoder (default, null) = false;\r\n\tpublic static var hasEmbeddedVideo (default, null) = false;\r\n\tpublic static var hasIME (default, null) = false;\r\n\tpublic static var hasMP3 (default, null) = false;\r\n\tpublic static var hasPrinting (default, null) = false;\r\n\tpublic static var hasScreenBroadcast (default, null) = false;\r\n\tpublic static var hasScreenPlayback (default, null) = false;\r\n\tpublic static var hasStreamingAudio (default, null) = false;\r\n\tpublic static var hasStreamingVideo (default, null) = false;\r\n\tpublic static var hasTLS (default, null) = true;\r\n\tpublic static var hasVideoEncoder (default, null) = false;\r\n\tpublic static var isDebugger (default, null) = #if debug true #else false #end;\r\n\tpublic static var isEmbeddedInAcrobat (default, null) = false;\r\n\tpublic static var language (get, null):String;\r\n\tpublic static var localFileReadDisable (default, null) = #if html5 true #else false #end;\r\n\tpublic static var manufacturer (default, null) = \"OpenFL Contributors\";\r\n\tpublic static var maxLevelIDC (default, null) = 0;\r\n\tpublic static var os (get, null):String;\r\n\tpublic static var pixelAspectRatio (get, null):Float;\r\n\tpublic static var playerType (default, null) = \"OpenFL\";\r\n\tpublic static var screenColor (default, null) = \"color\";\r\n\tpublic static var screenDPI (get, null):Float;\r\n\tpublic static var screenResolutionX (get, null):Float;\r\n\tpublic static var screenResolutionY (get, null):Float;\r\n\tpublic static var serverString (default, null) = \"\"; // TODO\r\n\tpublic static var supports32BitProcesses (default, null) = #if sys true #else false #end;\r\n\tpublic static var supports64BitProcesses (default, null) = #if desktop true #else false #end; // TODO\r\n\tpublic static var touchscreenType (default, null) = TouchscreenType.FINGER; // TODO\r\n\tpublic static var version (get, null):String;\r\n\t\r\n\t\r\n\tpublic static function hasMultiChannelAudio (type:String):Bool {\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate static inline function get_os ():String {\r\n\t\t\r\n\t\t// TODO: OS version, too?\r\n\t\t\r\n\t\t#if firefox\r\n\t\treturn \"Firefox\";\r\n\t\t#elseif (js && html5)\r\n\t\treturn \"HTML5\";\r\n\t\t#elseif android\r\n\t\treturn \"Android\";\r\n\t\t#elseif blackberry\r\n\t\treturn \"BlackBerry\";\r\n\t\t#elseif ios\r\n\t\treturn \"iOS\";\r\n\t\t#elseif tvos\r\n\t\treturn \"tvOS\";\r\n\t\t#elseif tizen\r\n\t\treturn \"Tizen\";\r\n\t\t#elseif webos\r\n\t\treturn \"webOS\";\r\n\t\t#elseif sys\r\n\t\treturn Sys.systemName ();\r\n\t\t#else\r\n\t\treturn \"\";\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_pixelAspectRatio ():Float { return 1; }\r\n\tprivate static function get_screenDPI ():Float {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t\r\n\t\tif (screenDPI > 0) return screenDPI;\r\n\t\t\r\n\t\t//little trick of measuring the width of a 1 inch div\r\n\t\t//but sadly most browsers/OSs still return wrong result...\r\n\t\tvar body = Browser.document.getElementsByTagName (\"body\")[0];\r\n\t\tvar testDiv:DivElement = cast Browser.document.createElement (\"div\");\r\n\t\ttestDiv.style.width = testDiv.style.height = \"1in\";\r\n\t\ttestDiv.style.padding = testDiv.style.margin = \"0px\";\r\n\t\ttestDiv.style.position = \"absolute\";\r\n\t\ttestDiv.style.top = \"-100%\";\r\n\t\tbody.appendChild (testDiv);\r\n\t\tscreenDPI = testDiv.offsetWidth;\r\n\t\tbody.removeChild (testDiv);\r\n\t\t\r\n\t\treturn screenDPI;\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_screenResolutionX ():Float { \r\n\t\t\r\n\t\tvar window = Lib.application.window;\r\n\t\t\r\n\t\tif (window != null) {\r\n\t\t\t\r\n\t\t\tvar display = window.display;\r\n\t\t\t\r\n\t\t\tif (display != null) {\r\n\t\t\t\t\r\n\t\t\t\treturn display.currentMode.width;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_screenResolutionY ():Float {\r\n\t\t\r\n\t\tvar window = Lib.application.window;\r\n\t\t\r\n\t\tif (window != null) {\r\n\t\t\t\r\n\t\t\tvar display = window.display;\r\n\t\t\t\r\n\t\t\tif (display != null) {\r\n\t\t\t\t\r\n\t\t\t\treturn display.currentMode.height;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_language ():String {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\t\r\n\t\treturn untyped navigator.language;\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\treturn \"en-US\";\r\n\t\t\r\n\t\t#end\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_version () {\r\n\t\t\r\n\t\t#if windows\r\n\t\tvar value = \"WIN\";\r\n\t\t#elseif mac\r\n\t\tvar value = \"MAC\";\r\n\t\t#elseif linux\r\n\t\tvar value = \"LNX\";\r\n\t\t#elseif ios\r\n\t\tvar value = \"IOS\";\r\n\t\t#elseif tvos\r\n\t\tvar value = \"TVO\";\r\n\t\t#elseif android\r\n\t\tvar value = \"AND\";\r\n\t\t#elseif blackberry\r\n\t\tvar value = \"QNX\";\r\n\t\t#elseif firefox\r\n\t\tvar value = \"MOZ\";\r\n\t\t#elseif html5\r\n\t\tvar value = \"WEB\";\r\n\t\t#else\r\n\t\tvar value = \"OFL\";\r\n\t\t#end\r\n\t\t\r\n\t\tif (Compiler.getDefine (\"openfl\") != null) {\r\n\t\t\t\r\n\t\t\tvalue += \" \" + StringTools.replace (Compiler.getDefine (\"openfl\"), \".\", \",\") + \",0\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Capabilities = openfl._legacy.system.Capabilities;\r\n#end","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.macro;\nimport haxe.macro.Expr;\n\n/**\n\tAll these methods can be called for compiler configuration macros.\n**/\nclass Compiler {\n\n\tmacro static public function getDefine( key : String ) {\n\t\treturn macro $v{haxe.macro.Context.definedValue(key)};\n\t}\n\n#if neko\n\n\tstatic var ident = ~/^[A-Za-z_][A-Za-z0-9_]*$/;\n\tstatic var path = ~/^[A-Za-z_][A-Za-z0-9_.]*$/;\n\n\tpublic static function allowPackage( v : String ) {\n\t\tuntyped load(\"allow_package\", 1)(v.__s);\n\t}\n\n\tpublic static function define( flag : String, ?value : String ) untyped {\n\t\tvar v = flag + (value == null ? \"\" : \"=\" + value);\n\t\tload(\"define\", 1)(v.__s);\n\t}\n\n\tpublic static function removeField( className : String, field : String, ?isStatic : Bool ) {\n\t\tif( !path.match(className) ) throw \"Invalid \"+className;\n\t\tif( !ident.match(field) ) throw \"Invalid \"+field;\n\t\tuntyped load(\"type_patch\",4)(className.__s,field.__s,isStatic == true,null);\n\t}\n\n\tpublic static function setFieldType( className : String, field : String, type : String, ?isStatic : Bool ) {\n\t\tif( !path.match(className) ) throw \"Invalid \"+className;\n\t\tif( !ident.match((field.charAt(0) == \"$\") ? field.substr(1) : field) ) throw \"Invalid \"+field;\n\t\tuntyped load(\"type_patch\",4)(className.__s,field.__s,isStatic == true,type.__s);\n\t}\n\n\tpublic static function addMetadata( meta : String, className : String, ?field : String, ?isStatic : Bool ) {\n\t\tif( !path.match(className) ) throw \"Invalid \"+className;\n\t\tif( field != null && !ident.match(field) ) throw \"Invalid \"+field;\n\t\tuntyped load(\"meta_patch\",4)(meta.__s,className.__s,(field == null)?null:field.__s,isStatic == true);\n\t}\n\n\tpublic static function addClassPath( path : String ) {\n\t\tuntyped load(\"add_class_path\",1)(path.__s);\n\t}\n\n\tpublic static function getOutput() : String {\n\t\treturn new String(untyped load(\"get_output\",0)());\n\t}\n\n\tpublic static function setOutput( fileOrDir : String ) {\n\t\tuntyped load(\"set_output\",1)(untyped fileOrDir.__s);\n\t}\n\n\tpublic static function getDisplayPos() : Null<{ file : String, pos : Int }> {\n\t\tvar o = untyped load(\"get_display_pos\",0)();\n\t\tif( o != null )\n\t\t\to.file = new String(o.file);\n\t\treturn o;\n\t}\n\n\t/**\n\t\tAdds a native library depending on the platform (eg : -swf-lib for Flash)\n\t**/\n\tpublic static function addNativeLib( name : String ) {\n\t\tuntyped load(\"add_native_lib\",1)(name.__s);\n\t}\n\n\t/**\n\t\tAdds an argument to be passed to the native compiler (eg : -javac-arg for Java)\n\t **/\n\tpublic static function addNativeArg( argument : String )\n\t{\n\t\tuntyped load(\"add_native_arg\",1)(argument.__s);\n\t}\n\n\t/**\n\t\tIncludes all modules in package `pack` in the compilation.\n\n\t\tIn order to include single modules, their paths can be listed directly\n\t\ton command line: `haxe ... ModuleName pack.ModuleName`.\n\n\t\tBy default `Compiler.include` will search for modules in the directories defined with `-cp`.\n\t\tIf you want to specify a different set of paths to search for modules, you can use the optional\n\t\targument `classPath`.\n\n\t\t@param rec If true, recursively adds all sub-packages.\n\t\t@param ignore Array of module names to ignore for inclusion.\n\t\t@param classPaths An alternative array of paths (directory names) to use to search for modules to include.\n\t\t       Note that if you pass this argument, only the specified paths will be used for inclusion.\n\t**/\n\tpublic static function include( pack : String, ?rec = true, ?ignore : Array<String>, ?classPaths : Array<String> ) {\n\t\tvar skip = if( ignore == null ) {\n\t\t\tfunction(c) return false;\n\t\t} else {\n\t\t\tfunction(c) return Lambda.has(ignore, c);\n\t\t}\n\t\tvar displayValue = Context.definedValue(\"display\");\n\t\tif( classPaths == null ) {\n\t\t\tclassPaths = Context.getClassPath();\n\t\t\t// do not force inclusion when using completion\n\t\t\tswitch (displayValue) {\n\t\t\t\tcase null:\n\t\t\t\tcase \"usage\":\n\t\t\t\tcase _: return;\n\t\t\t}\n\t\t\t// normalize class path\n\t\t\tfor( i in 0...classPaths.length ) {\n\t\t\t\tvar cp = StringTools.replace(classPaths[i], \"\\\\\", \"/\");\n\t\t\t\tif(StringTools.endsWith(cp, \"/\"))\n\t\t\t\t\tcp = cp.substr(0, -1);\n\t\t\t\tif( cp == \"\" )\n\t\t\t\t\tcp = \".\";\n\t\t\t\tclassPaths[i] = cp;\n\t\t\t}\n\t\t}\n\t\tvar prefix = pack == '' ? '' : pack + '.';\n\t\tfor( cp in classPaths ) {\n\t\t\tvar path = pack == '' ? cp : cp + \"/\" + pack.split(\".\").join(\"/\");\n\t\t\tif( !sys.FileSystem.exists(path) || !sys.FileSystem.isDirectory(path) )\n\t\t\t\tcontinue;\n\t\t\tfor( file in sys.FileSystem.readDirectory(path) ) {\n\t\t\t\tif( StringTools.endsWith(file, \".hx\") ) {\n\t\t\t\t\tvar cl = prefix + file.substr(0, file.length - 3);\n\t\t\t\t\tif( skip(cl) )\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tContext.getModule(cl);\n\t\t\t\t} else if( rec && sys.FileSystem.isDirectory(path + \"/\" + file) && !skip(prefix + file) )\n\t\t\t\t\tinclude(prefix + file, true, ignore, classPaths);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t\tExclude a class or a enum without changing it to @:nativeGen.\n\t**/\n\tstatic function excludeBaseType( baseType : Type.BaseType ) : Void {\n\t\tif (!baseType.isExtern) {\n\t\t\tvar meta = baseType.meta;\n\t\t\tif (!meta.has(\":nativeGen\")) {\n\t\t\t\tmeta.add(\":hxGen\", [], baseType.pos);\n\t\t\t}\n\t\t\tbaseType.exclude();\n\t\t}\n\t}\n\n\t/**\n\t\tExclude a given class or a complete package from being generated.\n\t**/\n\tpublic static function exclude( pack : String, ?rec = true ) {\n\t\tContext.onGenerate(function(types) {\n\t\t\tfor( t in types ) {\n\t\t\t\tvar b : Type.BaseType, name;\n\t\t\t\tswitch( t ) {\n\t\t\t\tcase TInst(c, _):\n\t\t\t\t\tname = c.toString();\n\t\t\t\t\tb = c.get();\n\t\t\t\tcase TEnum(e, _):\n\t\t\t\t\tname = e.toString();\n\t\t\t\t\tb = e.get();\n\t\t\t\tdefault: continue;\n\t\t\t\t}\n\t\t\t\tvar p = b.pack.join(\".\");\n\t\t\t\tif( (p == pack || name == pack) || (rec && StringTools.startsWith(p, pack + \".\")) )\n\t\t\t\t\texcludeBaseType(b);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t\tExclude classes listed in an extern file (one per line) from being generated.\n\t**/\n\tpublic static function excludeFile( fileName : String ) {\n\t\tfileName = Context.resolvePath(fileName);\n\t\tvar f = sys.io.File.read(fileName,true);\n\t\tvar classes = new haxe.ds.StringMap();\n\t\ttry {\n\t\t\twhile( true ) {\n\t\t\t\tvar l = StringTools.trim(f.readLine());\n\t\t\t\tif( l == \"\" || !~/[A-Za-z0-9._]/.match(l) )\n\t\t\t\t\tcontinue;\n\t\t\t\tclasses.set(l,true);\n\t\t\t}\n\t\t} catch( e : haxe.io.Eof ) {\n\t\t}\n\t\tContext.onGenerate(function(types) {\n\t\t\tfor( t in types ) {\n\t\t\t\tswitch( t ) {\n\t\t\t\tcase TInst(c, _): if( classes.exists(c.toString()) ) excludeBaseType(c.get());\n\t\t\t\tcase TEnum(e, _): if( classes.exists(e.toString()) ) excludeBaseType(e.get());\n\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t\tLoad a type patch file that can modify declared classes fields types\n\t**/\n\tpublic static function patchTypes( file : String ) : Void {\n\t\tvar file = Context.resolvePath(file);\n\t\tvar f = sys.io.File.read(file, true);\n\t\ttry {\n\t\t\twhile( true ) {\n\t\t\t\tvar r = StringTools.trim(f.readLine());\n\t\t\t\tif( r == \"\" || r.substr(0,2) == \"//\" ) continue;\n\t\t\t\tif( StringTools.endsWith(r,\";\") ) r = r.substr(0,-1);\n\t\t\t\tif( r.charAt(0) == \"-\" ) {\n\t\t\t\t\tr = r.substr(1);\n\t\t\t\t\tvar isStatic = StringTools.startsWith(r,\"static \");\n\t\t\t\t\tif( isStatic ) r = r.substr(7);\n\t\t\t\t\tvar p = r.split(\".\");\n\t\t\t\t\tvar field = p.pop();\n\t\t\t\t\tremoveField(p.join(\".\"),field,isStatic);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif( r.charAt(0) == \"@\" ) {\n\t\t\t\t\tvar rp = r.split(\" \");\n\t\t\t\t\tvar type = rp.pop();\n\t\t\t\t\tvar isStatic = rp[rp.length - 1] == \"static\";\n\t\t\t\t\tif( isStatic ) rp.pop();\n\t\t\t\t\tvar meta = rp.join(\" \");\n\t\t\t\t\tvar p = type.split(\".\");\n\t\t\t\t\tvar field = if( p.length > 1 && p[p.length-2].charAt(0) >= \"a\" ) null else p.pop();\n\t\t\t\t\taddMetadata(meta,p.join(\".\"),field,isStatic);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif( StringTools.startsWith(r, \"enum \") ) {\n\t\t\t\t\tdefine(\"fakeEnum:\" + r.substr(5));\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar rp = r.split(\" : \");\n\t\t\t\tif( rp.length > 1 ) {\n\t\t\t\t\tr = rp.shift();\n\t\t\t\t\tvar isStatic = StringTools.startsWith(r,\"static \");\n\t\t\t\t\tif( isStatic ) r = r.substr(7);\n\t\t\t\t\tvar p = r.split(\".\");\n\t\t\t\t\tvar field = p.pop();\n\t\t\t\t\tsetFieldType(p.join(\".\"),field,rp.join(\" : \"),isStatic);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow \"Invalid type patch \"+r;\n\t\t\t}\n\t\t} catch( e : haxe.io.Eof ) {\n\t\t}\n\t}\n\n\t/**\n\t\tMarks types or packages to be kept by DCE.\n\n\t\tThis also extends to the sub-types of resolved modules.\n\n\t\tIn order to include module sub-types directly, their full dot path\n\t\tincluding the containing module has to be used\n\t\t(e.g. msignal.Signal.Signal0).\n\n\t\tThis operation has no effect if the type has already been loaded, e.g.\n\t\tthrough `Context.getType`.\n\n\t\t@param path A package, module or sub-type dot path to keep.\n\t\t@param paths An Array of package, module or sub-type dot paths to keep.\n\t\t@param recursive If true, recurses into sub-packages for package paths.\n\t**/\n\tpublic static function keep(?path : String, ?paths : Array<String>, ?recursive:Bool = true) {\n\t\tif (null == paths)\n\t\t\tpaths = [];\n\t\tif (null != path)\n\t\t\tpaths.push(path);\n\t\tfor (path in paths) {\n\t\t\taddGlobalMetadata(path, \"@:keep\", recursive, true, true);\n\t\t}\n\t}\n\n\t/**\n\t\tAdds metadata `meta` to all types (if `toTypes = true`) or fields (if\n\t\t`toFields = true`) whose dot-path matches `pathFilter`.\n\n\t\tIf `recursive` is true a dot-path is considered matched if it starts\n\t\twith `pathFilter`. This automatically applies to path filters of\n\t\tpackages. Otherwise an exact match is required.\n\n\t\tIf `pathFilter` is the empty String `\"\"` it matches everything (if\n\t\t`recursive = true`) or only top-level types (if `recursive = false`).\n\n\t\tThis operation has no effect if the type has already been loaded, e.g.\n\t\tthrough `Context.getType`.\n\t**/\n\tpublic static function addGlobalMetadata(pathFilter:String, meta:String, ?recursive:Bool = true, ?toTypes:Bool = true, ?toFields:Bool = false) {\n\t\tuntyped load(\"add_global_metadata\",5)(untyped pathFilter.__s, meta.__s, recursive, toTypes, toFields);\n\t}\n\n\t/**\n\t\tChange the default JS output by using a custom generator callback\n\t**/\n\tpublic static function setCustomJSGenerator( callb : JSGenApi -> Void ) {\n\t\tload(\"custom_js\",1)(callb);\n\t}\n\n\tstatic function load( f, nargs ) : Dynamic {\n\t\t#if macro\n\t\treturn neko.Lib.load(\"macro\", f, nargs);\n\t\t#else\n\t\treturn Reflect.makeVarArgs(function(_) return throw \"Can't be called outside of macro\");\n\t\t#end\n\t}\n\n#end\n\n\t#if (js || macro)\n\t/**\n\t\tEmbed an on-disk javascript file (can be called into an __init__ method)\n\t**/\n\tpublic static macro function includeFile( fileName : Expr ) {\n\t\tvar str = switch( fileName.expr ) {\n\t\tcase EConst(c):\n\t\t\tswitch( c ) {\n\t\t\tcase CString(str): str;\n\t\t\tdefault: null;\n\t\t\t}\n\t\tdefault: null;\n\t\t}\n\t\tif( str == null ) Context.error(\"Should be a constant string\", fileName.pos);\n\t\tvar f = try sys.io.File.getContent(Context.resolvePath(str)) catch( e : Dynamic ) Context.error(Std.string(e), fileName.pos);\n\t\tvar p = Context.currentPos();\n\t\treturn { expr : EUntyped( { expr : ECall( { expr : EConst(CIdent(\"__js__\")), pos : p }, [ { expr : EConst(CString(f)), pos : p } ]), pos : p } ), pos : p };\n\t}\n\t#end\n\n}\n","package openfl.system;\r\n\r\n\r\nclass LoaderContext {\r\n\t\r\n\t\r\n\tpublic var allowCodeImport:Bool;\r\n\tpublic var allowLoadBytesCodeExecution:Bool;\r\n\tpublic var applicationDomain:ApplicationDomain;\r\n\tpublic var checkPolicyFile:Bool;\r\n\tpublic var securityDomain:SecurityDomain;\r\n\t\r\n\t\r\n\tpublic function new (checkPolicyFile:Bool = false, applicationDomain:ApplicationDomain = null, securityDomain:SecurityDomain = null):Void {\r\n\t\t\r\n\t\tthis.checkPolicyFile = checkPolicyFile;\r\n\t\tthis.securityDomain = securityDomain;\r\n\t\tthis.applicationDomain = applicationDomain;\r\n\t\t\r\n\t\tallowCodeImport = true;\r\n\t\tallowLoadBytesCodeExecution = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.system;\r\n\r\n\r\nclass SecurityDomain {\r\n\t\r\n\t\r\n\tpublic static var currentDomain (default, null) = new SecurityDomain ();\r\n\t\r\n\t\r\n\tprivate function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.system; #if !openfl_legacy\r\n\r\n\r\nimport lime.system.Clipboard;\r\nimport lime.system.System in LimeSystem;\r\n\r\n#if neko\r\nimport neko.vm.Gc;\r\n#elseif cpp\r\nimport cpp.vm.Gc;\r\n#end\r\n\r\n\r\n@:final class System {\r\n\t\r\n\t\r\n\tpublic static var totalMemory (get, null):Int;\r\n\tpublic static var useCodePage:Bool = false;\r\n\tpublic static var vmVersion (get, null):String;\r\n\t\r\n\t\r\n\tpublic static function exit (code:Int):Void {\r\n\t\t\r\n\t\tLimeSystem.exit (code);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function gc ():Void {\r\n\t\t\r\n\t\t#if (cpp || neko)\r\n\t\treturn Gc.run (true);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function pause ():Void {\r\n\t\t\r\n\t\topenfl.Lib.notImplemented (\"System.pause\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function resume ():Void {\r\n\t\t\r\n\t\topenfl.Lib.notImplemented (\"System.resume\");\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function setClipboard (string:String):Void {\r\n\t\t\r\n\t\tClipboard.text = string;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate static function get_totalMemory ():Int {\r\n\t\t\r\n\t\t#if neko\r\n\t\treturn Gc.stats ().heap;\r\n\t\t#elseif cpp\r\n\t\treturn untyped __global__.__hxcpp_gc_used_bytes ();\r\n\t\t#elseif (js && html5)\r\n\t\treturn untyped __js__ (\"(window.performance && window.performance.memory) ? window.performance.memory.usedJSHeapSize : 0\");\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_vmVersion ():String {\r\n\t\t\r\n\t\treturn \"1.0.0\";\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef System = openfl._legacy.system.System;\r\n#end","package openfl.system;\r\n\r\n\r\n@:enum abstract TouchscreenType(Null<Int>) {\r\n\t\r\n\tpublic var FINGER = 0;\r\n\tpublic var NONE = 1;\r\n\tpublic var STYLUS = 2;\r\n\t\r\n\t@:from private static function fromString (value:String):TouchscreenType {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"finger\": FINGER;\r\n\t\t\tcase \"none\": NONE;\r\n\t\t\tcase \"stylus\": STYLUS;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase TouchscreenType.FINGER: \"finger\";\r\n\t\t\tcase TouchscreenType.NONE: \"none\";\r\n\t\t\tcase TouchscreenType.STYLUS: \"stylus\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}","package openfl.text;\r\n\r\n\r\n@:enum abstract AntiAliasType(Null<Int>) {\r\n\t\r\n\tpublic var ADVANCED = 0;\r\n\tpublic var NORMAL = 1;\r\n\t\r\n\t@:from private static function fromString (value:String):AntiAliasType {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"advanced\": ADVANCED;\r\n\t\t\tcase \"normal\": NORMAL;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase AntiAliasType.ADVANCED: \"advanced\";\r\n\t\t\tcase AntiAliasType.NORMAL: \"normal\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}","package openfl.text; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract FontStyle(Null<Int>) {\r\n\t\r\n\tpublic var BOLD = 0;\r\n\tpublic var BOLD_ITALIC = 1;\r\n\tpublic var ITALIC = 2;\r\n\tpublic var REGULAR = 3;\r\n\t\r\n\t@:from private static function fromString (value:String):FontStyle {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"bold\": BOLD;\r\n\t\t\tcase \"boldItalic\": BOLD_ITALIC;\r\n\t\t\tcase \"italic\": ITALIC;\r\n\t\t\tcase \"regular\": REGULAR;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase FontStyle.BOLD: \"bold\";\r\n\t\t\tcase FontStyle.BOLD_ITALIC: \"boldItalic\";\r\n\t\t\tcase FontStyle.ITALIC: \"italic\";\r\n\t\t\tcase FontStyle.REGULAR: \"regular\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef FontStyle = openfl._legacy.text.FontStyle;\r\n#end","package openfl.text; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract FontType(Null<Int>) {\r\n\t\r\n\tpublic var DEVICE = 0;\r\n\tpublic var EMBEDDED = 1;\r\n\tpublic var EMBEDDED_CFF = 2;\r\n\t\r\n\t@:from private static function fromString (value:String):FontType {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"device\": DEVICE;\r\n\t\t\tcase \"embedded\": EMBEDDED;\r\n\t\t\tcase \"embeddedCFF\": EMBEDDED_CFF;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase FontType.DEVICE: \"device\";\r\n\t\t\tcase FontType.EMBEDDED: \"embedded\";\r\n\t\t\tcase FontType.EMBEDDED_CFF: \"embeddedCFF\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef FontType = openfl._legacy.text.FontType;\r\n#end","package openfl.text;\r\n\r\n\r\n@:enum abstract GridFitType(Null<Int>) {\r\n\t\r\n\tpublic var NONE = 0;\r\n\tpublic var PIXEL = 1;\r\n\tpublic var SUBPIXEL = 2;\r\n\t\r\n\t@:from private static function fromString (value:String):GridFitType {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"none\": NONE;\r\n\t\t\tcase \"pixel\": PIXEL;\r\n\t\t\tcase \"subpixel\": SUBPIXEL;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase GridFitType.NONE: \"none\";\r\n\t\t\tcase GridFitType.PIXEL: \"pixel\";\r\n\t\t\tcase GridFitType.SUBPIXEL: \"subpixel\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}","package openfl.text; #if !openfl_legacy\r\n\r\n\r\nimport haxe.Timer;\r\nimport lime.system.Clipboard;\r\nimport lime.ui.KeyCode;\r\nimport lime.ui.KeyModifier;\r\nimport lime.ui.MouseCursor;\r\nimport openfl._internal.renderer.cairo.CairoTextField;\r\nimport openfl._internal.renderer.canvas.CanvasTextField;\r\nimport openfl._internal.renderer.dom.DOMTextField;\r\nimport openfl._internal.renderer.opengl.GLRenderer;\r\nimport openfl._internal.renderer.RenderSession;\r\nimport openfl._internal.text.TextEngine;\r\nimport openfl._internal.text.TextFormatRange;\r\nimport openfl.display.DisplayObject;\r\nimport openfl.display.Graphics;\r\nimport openfl.display.InteractiveObject;\r\nimport openfl.events.Event;\r\nimport openfl.events.FocusEvent;\r\nimport openfl.events.MouseEvent;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.Lib;\r\n\r\n#if (js && html5)\r\nimport js.html.DivElement;\r\n#end\r\n\r\n@:access(openfl.display.Graphics)\r\n@:access(openfl.geom.Rectangle)\r\n@:access(openfl._internal.text.TextEngine)\r\n@:access(openfl.text.TextFormat)\r\n\r\n\r\nclass TextField extends InteractiveObject {\r\n\t\r\n\t\r\n\tprivate static var __defaultTextFormat:TextFormat;\r\n\t\r\n\tpublic var antiAliasType (get, set):AntiAliasType;\r\n\tpublic var autoSize (get, set):TextFieldAutoSize;\r\n\tpublic var background (get, set):Bool;\r\n\tpublic var backgroundColor (get, set):Int;\r\n\tpublic var border (get, set):Bool;\r\n\tpublic var borderColor (get, set):Int;\r\n\tpublic var bottomScrollV (get, null):Int;\r\n\tpublic var caretIndex (get, null):Int;\r\n\tpublic var defaultTextFormat (get, set):TextFormat;\r\n\tpublic var displayAsPassword (get, set):Bool;\r\n\tpublic var embedFonts (get, set):Bool;\r\n\tpublic var gridFitType (get, set):GridFitType;\r\n\tpublic var htmlText (get, set):String;\r\n\tpublic var length (get, null):Int;\r\n\tpublic var maxChars (get, set):Int;\r\n\tpublic var maxScrollH (get, null):Int;\r\n\tpublic var maxScrollV (get, null):Int;\r\n\tpublic var multiline (get, set):Bool;\r\n\tpublic var numLines (get, null):Int;\r\n\tpublic var restrict (get, set):String;\r\n\tpublic var scrollH (get, set):Int;\r\n\tpublic var scrollV (get, set):Int;\r\n\tpublic var selectable (get, set):Bool;\r\n\tpublic var selectionBeginIndex (get, null):Int;\r\n\tpublic var selectionEndIndex (get, null):Int;\r\n\tpublic var sharpness (get, set):Float;\r\n\tpublic var text (get, set):String;\r\n\tpublic var textColor (get, set):Int;\r\n\tpublic var textHeight (get, null):Float;\r\n\tpublic var textWidth (get, null):Float;\r\n\tpublic var type (get, set):TextFieldType;\r\n\tpublic var wordWrap (get, set):Bool;\r\n\t\r\n\tprivate var __bounds:Rectangle;\r\n\tprivate var __caretIndex:Int;\r\n\tprivate var __cursorTimer:Timer;\r\n\tprivate var __dirty:Bool;\r\n\tprivate var __inputEnabled:Bool;\r\n\tprivate var __isHTML:Bool;\r\n\tprivate var __layoutDirty:Bool;\r\n\tprivate var __selectionIndex:Int;\r\n\tprivate var __showCursor:Bool;\r\n\tprivate var __textEngine:TextEngine;\r\n\tprivate var __textFormat:TextFormat;\r\n\t\r\n\t#if (js && html5)\r\n\tprivate var __div:DivElement;\r\n\t#end\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\t__caretIndex = -1;\r\n\t\t__graphics = new Graphics ();\r\n\t\t__textEngine = new TextEngine (this);\r\n\t\t__layoutDirty = true;\r\n\t\t__tabEnabled = true;\r\n\t\t\r\n\t\tif (__defaultTextFormat == null) {\r\n\t\t\t\r\n\t\t\t__defaultTextFormat = new TextFormat (\"Times New Roman\", 12, 0x000000, false, false, false, \"\", \"\", TextFormatAlign.LEFT, 0, 0, 0, 0);\r\n\t\t\t__defaultTextFormat.blockIndent = 0;\r\n\t\t\t__defaultTextFormat.bullet = false;\r\n\t\t\t__defaultTextFormat.letterSpacing = 0;\r\n\t\t\t__defaultTextFormat.kerning = false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__textFormat = __defaultTextFormat.clone ();\r\n\t\t__textEngine.textFormatRanges.push (new TextFormatRange (__textFormat, 0, 0));\r\n\t\t\r\n\t\taddEventListener (MouseEvent.MOUSE_DOWN, this_onMouseDown);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function appendText (text:String):Void {\r\n\t\t\r\n\t\t__textEngine.text += text;\r\n\t\t__textEngine.textFormatRanges[__textEngine.textFormatRanges.length - 1].end = __textEngine.text.length;\r\n\t\t\r\n\t\t__dirty = true;\r\n\t\t__layoutDirty = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getCharBoundaries (charIndex:Int):Rectangle {\r\n\t\t\r\n\t\tif (charIndex < 0 || charIndex > __textEngine.text.length - 1) return null;\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\tfor (group in __textEngine.layoutGroups) {\r\n\t\t\t\r\n\t\t\tif (charIndex >= group.startIndex && charIndex <= group.endIndex) {\r\n\t\t\t\t\r\n\t\t\t\tvar x = group.offsetX;\r\n\t\t\t\t\r\n\t\t\t\tfor (i in 0...(charIndex - group.startIndex)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tx += group.advances[i];\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn new Rectangle (x, group.offsetY, group.advances[charIndex - group.startIndex], group.ascent + group.descent);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getCharIndexAtPoint (x:Float, y:Float):Int {\r\n\t\t\r\n\t\tif (x <= 2 || x > width + 4 || y <= 0 || y > height + 4) return -1;\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\tx += scrollH;\r\n\t\t\r\n\t\tfor (i in 0...scrollV - 1) {\r\n\t\t\t\r\n\t\t\ty += __textEngine.lineHeights[i];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (group in __textEngine.layoutGroups) {\r\n\t\t\t\r\n\t\t\tif (y >= group.offsetY && y <= group.offsetY + group.height) {\r\n\t\t\t\t\r\n\t\t\t\tif (x >= group.offsetX && x <= group.offsetX + group.width) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar advance = 0.0;\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (i in 0...group.advances.length) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tadvance += group.advances[i];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (x <= group.offsetX + advance) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn group.startIndex + i;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn group.endIndex;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn -1;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getFirstCharInParagraph (charIndex:Int):Int {\r\n\t\t\r\n\t\tif (charIndex < 0 || charIndex > __textEngine.text.length - 1) return 0;\r\n\t\t\r\n\t\tvar index = __textEngine.text.indexOf (\"\\n\");\r\n\t\tvar startIndex = 0;\r\n\t\t\r\n\t\twhile (index > -1) {\r\n\t\t\t\r\n\t\t\tif (index <= charIndex) {\r\n\t\t\t\t\r\n\t\t\t\tstartIndex = index + 1;\r\n\t\t\t\t\r\n\t\t\t} else if (index > charIndex) {\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tindex = __textEngine.text.indexOf (\"\\n\", index + 1);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn startIndex;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getLineIndexAtPoint (x:Float, y:Float):Int {\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\tif (x <= 2 || x > width + 4 || y <= 0 || y > height + 4) return -1;\r\n\t\t\r\n\t\tfor (i in 0...scrollV - 1) {\r\n\t\t\t\r\n\t\t\ty += __textEngine.lineHeights[i];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (group in __textEngine.layoutGroups) {\r\n\t\t\t\r\n\t\t\tif (y >= group.offsetY && y <= group.offsetY + group.height) {\r\n\t\t\t\t\r\n\t\t\t\treturn group.lineIndex;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn -1;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getLineIndexOfChar (charIndex:Int):Int {\r\n\t\t\r\n\t\tif (charIndex < 0 || charIndex > __textEngine.text.length - 1) return -1;\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\tfor (group in __textEngine.layoutGroups) {\r\n\t\t\t\r\n\t\t\tif (group.startIndex <= charIndex && group.endIndex >= charIndex) {\r\n\t\t\t\t\r\n\t\t\t\treturn group.lineIndex;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn -1;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getLineLength (lineIndex:Int):Int {\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\tif (lineIndex < 0 || lineIndex > __textEngine.numLines - 1) return 0;\r\n\t\t\r\n\t\tvar startIndex = -1;\r\n\t\tvar endIndex = -1;\r\n\t\t\r\n\t\tfor (group in __textEngine.layoutGroups) {\r\n\t\t\t\r\n\t\t\tif (group.lineIndex == lineIndex) {\r\n\t\t\t\t\r\n\t\t\t\tif (startIndex == -1) startIndex = group.startIndex;\r\n\t\t\t\t\r\n\t\t\t} else if (group.lineIndex == lineIndex + 1) {\r\n\t\t\t\t\r\n\t\t\t\tendIndex = group.startIndex;\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (endIndex == -1) endIndex = __textEngine.text.length;\r\n\t\treturn endIndex - startIndex;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getLineMetrics (lineIndex:Int):TextLineMetrics {\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\tvar ascender = __textEngine.lineAscents[lineIndex];\r\n\t\tvar descender = __textEngine.lineDescents[lineIndex];\r\n\t\tvar leading = __textEngine.lineLeadings[lineIndex];\r\n\t\tvar lineHeight = __textEngine.lineHeights[lineIndex];\r\n\t\tvar lineWidth = __textEngine.lineWidths[lineIndex];\r\n\t\t\r\n\t\t// TODO: Handle START and END based on language (don't assume LTR)\r\n\t\t\r\n\t\tvar margin = switch (__textFormat.align) {\r\n\t\t\t\r\n\t\t\tcase LEFT, JUSTIFY, START: 2;\r\n\t\t\tcase RIGHT, END: (__textEngine.width - lineWidth) - 2;\r\n\t\t\tcase CENTER: (__textEngine.width - lineWidth) / 2;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn new TextLineMetrics (margin, lineWidth, lineHeight, ascender, descender, leading); \r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getLineOffset (lineIndex:Int):Int {\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\tif (lineIndex < 0 || lineIndex > __textEngine.numLines - 1) return -1;\r\n\t\t\r\n\t\tfor (group in __textEngine.layoutGroups) {\r\n\t\t\t\r\n\t\t\tif (group.lineIndex == lineIndex) {\r\n\t\t\t\t\r\n\t\t\t\treturn group.startIndex;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getLineText (lineIndex:Int):String {\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\tif (lineIndex < 0 || lineIndex > __textEngine.numLines - 1) return null;\r\n\t\t\r\n\t\tvar startIndex = -1;\r\n\t\tvar endIndex = -1;\r\n\t\t\r\n\t\tfor (group in __textEngine.layoutGroups) {\r\n\t\t\t\r\n\t\t\tif (group.lineIndex == lineIndex) {\r\n\t\t\t\t\r\n\t\t\t\tif (startIndex == -1) startIndex = group.startIndex;\r\n\t\t\t\t\r\n\t\t\t} else if (group.lineIndex == lineIndex + 1) {\r\n\t\t\t\t\r\n\t\t\t\tendIndex = group.startIndex;\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (endIndex == -1) endIndex = __textEngine.text.length;\r\n\t\t\r\n\t\treturn __textEngine.text.substring (startIndex, endIndex);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getParagraphLength (charIndex:Int):Int {\r\n\t\t\r\n\t\tif (charIndex < 0 || charIndex > __textEngine.text.length - 1) return 0;\r\n\t\t\r\n\t\tvar startIndex = getFirstCharInParagraph (charIndex);\r\n\t\tvar endIndex = __textEngine.text.indexOf (\"\\n\", charIndex) + 1;\r\n\t\t\r\n\t\tif (endIndex == 0) endIndex = __textEngine.text.length;\r\n\t\treturn endIndex - startIndex;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getTextFormat (beginIndex:Int = 0, endIndex:Int = 0):TextFormat {\r\n\t\t\r\n\t\tvar format = null;\r\n\t\t\r\n\t\tfor (group in __textEngine.textFormatRanges) {\r\n\t\t\t\r\n\t\t\tif ((group.start <= beginIndex && group.end >= beginIndex) || (group.start <= endIndex && group.end >= endIndex)) {\r\n\t\t\t\t\r\n\t\t\t\tif (format == null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tformat = group.format.clone ();\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (group.format.font != format.font) format.font = null;\r\n\t\t\t\t\tif (group.format.size != format.size) format.size = null;\r\n\t\t\t\t\tif (group.format.color != format.color) format.color = null;\r\n\t\t\t\t\tif (group.format.bold != format.bold) format.bold = null;\r\n\t\t\t\t\tif (group.format.italic != format.italic) format.italic = null;\r\n\t\t\t\t\tif (group.format.underline != format.underline) format.underline = null;\r\n\t\t\t\t\tif (group.format.url != format.url) format.url = null;\r\n\t\t\t\t\tif (group.format.target != format.target) format.target = null;\r\n\t\t\t\t\tif (group.format.align != format.align) format.align = null;\r\n\t\t\t\t\tif (group.format.leftMargin != format.leftMargin) format.leftMargin = null;\r\n\t\t\t\t\tif (group.format.rightMargin != format.rightMargin) format.rightMargin = null;\r\n\t\t\t\t\tif (group.format.indent != format.indent) format.indent = null;\r\n\t\t\t\t\tif (group.format.leading != format.leading) format.leading = null;\r\n\t\t\t\t\tif (group.format.blockIndent != format.blockIndent) format.blockIndent = null;\r\n\t\t\t\t\tif (group.format.bullet != format.bullet) format.bullet = null;\r\n\t\t\t\t\tif (group.format.kerning != format.kerning) format.kerning = null;\r\n\t\t\t\t\tif (group.format.letterSpacing != format.letterSpacing) format.letterSpacing = null;\r\n\t\t\t\t\tif (group.format.tabStops != format.tabStops) format.tabStops = null;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn format;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function replaceSelectedText (value:String):Void {\r\n\t\t\r\n\t\tif (value == \"\" && __selectionIndex == __caretIndex) return;\r\n\t\t\r\n\t\tvar startIndex = __caretIndex < __selectionIndex ? __caretIndex : __selectionIndex;\r\n\t\tvar endIndex = __caretIndex > __selectionIndex ? __caretIndex : __selectionIndex;\r\n\t\t\r\n\t\treplaceText (startIndex, endIndex, value);\r\n\t\t\r\n\t\t__caretIndex = startIndex + value.length;\r\n\t\t__selectionIndex = __caretIndex;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function replaceText (beginIndex:Int, endIndex:Int, newText:String):Void {\r\n\t\t\r\n\t\tif (endIndex < beginIndex || beginIndex < 0 || endIndex > __textEngine.text.length || newText == null) return;\r\n\t\t\r\n\t\t__textEngine.text = __textEngine.text.substring (0, beginIndex) + newText + __textEngine.text.substring (endIndex);\r\n\t\t\r\n\t\tvar offset = newText.length - (endIndex - beginIndex);\r\n\t\t\r\n\t\tvar i = 0;\r\n\t\tvar range;\r\n\t\t\r\n\t\twhile (i < __textEngine.textFormatRanges.length) {\r\n\t\t\t\r\n\t\t\trange = __textEngine.textFormatRanges[i];\r\n\t\t\t\r\n\t\t\tif (range.start <= beginIndex && range.end >= endIndex) {\r\n\t\t\t\t\r\n\t\t\t\trange.end += offset;\r\n\t\t\t\ti++;\r\n\t\t\t\t\r\n\t\t\t} else if (range.start >= beginIndex && range.end <= endIndex) {\r\n\t\t\t\t\r\n\t\t\t\t__textEngine.textFormatRanges.splice (i, 1);\r\n\t\t\t\toffset -= (range.end - range.start);\r\n\t\t\t\t\r\n\t\t\t} else if (range.start > beginIndex && range.start <= endIndex) {\r\n\t\t\t\t\r\n\t\t\t\trange.start += offset;\r\n\t\t\t\ti++;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\ti++;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__dirty = true;\r\n\t\t__layoutDirty = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setSelection (beginIndex:Int, endIndex:Int) {\r\n\t\t\r\n\t\t__selectionIndex = beginIndex;\r\n\t\t__caretIndex = endIndex;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setTextFormat (format:TextFormat, beginIndex:Int = 0, endIndex:Int = 0):Void {\r\n\t\t\r\n\t\tif (format.font != null) __textFormat.font = format.font;\r\n\t\tif (format.size != null) __textFormat.size = format.size;\r\n\t\tif (format.color != null) __textFormat.color = format.color;\r\n\t\tif (format.bold != null) __textFormat.bold = format.bold;\r\n\t\tif (format.italic != null) __textFormat.italic = format.italic;\r\n\t\tif (format.underline != null) __textFormat.underline = format.underline;\r\n\t\tif (format.url != null) __textFormat.url = format.url;\r\n\t\tif (format.target != null) __textFormat.target = format.target;\r\n\t\tif (format.align != null) __textFormat.align = format.align;\r\n\t\tif (format.leftMargin != null) __textFormat.leftMargin = format.leftMargin;\r\n\t\tif (format.rightMargin != null) __textFormat.rightMargin = format.rightMargin;\r\n\t\tif (format.indent != null) __textFormat.indent = format.indent;\r\n\t\tif (format.leading != null) __textFormat.leading = format.leading;\r\n\t\tif (format.blockIndent != null) __textFormat.blockIndent = format.blockIndent;\r\n\t\tif (format.bullet != null) __textFormat.bullet = format.bullet;\r\n\t\tif (format.kerning != null) __textFormat.kerning = format.kerning;\r\n\t\tif (format.letterSpacing != null) __textFormat.letterSpacing = format.letterSpacing;\r\n\t\tif (format.tabStops != null) __textFormat.tabStops = format.tabStops;\r\n\t\t\r\n\t\t__dirty = true;\r\n\t\t__layoutDirty = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __getBounds (rect:Rectangle, matrix:Matrix):Void {\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\tvar bounds = Rectangle.__temp;\r\n\t\t__textEngine.bounds.__transform (bounds, matrix);\r\n\t\trect.__expand (bounds.x, bounds.y, bounds.width, bounds.height);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __getCursor ():MouseCursor {\r\n\t\t\r\n\t\treturn __textEngine.selectable ? TEXT : null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __getPosition (x:Float, y:Float):Int {\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\tx += scrollH;\r\n\t\t\r\n\t\tfor (i in 0...scrollV - 1) {\r\n\t\t\t\r\n\t\t\ty += __textEngine.lineHeights[i];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (y > __textEngine.textHeight) y = __textEngine.textHeight;\r\n\t\t\r\n\t\tvar firstGroup = true;\r\n\t\tvar group, nextGroup;\r\n\t\t\r\n\t\tfor (i in 0...__textEngine.layoutGroups.length) {\r\n\t\t\t\r\n\t\t\tgroup = __textEngine.layoutGroups[i];\r\n\t\t\t\r\n\t\t\tif (i < __textEngine.layoutGroups.length - 1) {\r\n\t\t\t\t\r\n\t\t\t\tnextGroup = __textEngine.layoutGroups[i + 1];\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tnextGroup = null;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (firstGroup) {\r\n\t\t\t\t\r\n\t\t\t\tif (y < group.offsetY) y = group.offsetY;\r\n\t\t\t\tif (x < group.offsetX) x = group.offsetX;\r\n\t\t\t\tfirstGroup = false;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ((y >= group.offsetY && y <= group.offsetY + group.height) || nextGroup == null) {\r\n\t\t\t\t\r\n\t\t\t\tif ((x >= group.offsetX && x <= group.offsetX + group.width) || (nextGroup == null || nextGroup.lineIndex != group.lineIndex)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar advance = 0.0;\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (i in 0...group.advances.length) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tadvance += group.advances[i];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (x <= group.offsetX + advance) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (x <= group.offsetX + (advance - group.advances[i]) + (group.advances[i] / 2)) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn group.startIndex + i;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn (group.startIndex + i < group.endIndex) ? group.startIndex + i + 1 : group.endIndex;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn group.endIndex;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.text.length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\r\n\t\t\r\n\t\tif (!hitObject.visible || __isMask || (interactiveOnly && !mouseEnabled)) return false;\r\n\t\tif (mask != null && !mask.__hitTestMask (x, y)) return false;\r\n\t\t\r\n\t\t__getWorldTransform ();\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\tvar px = __worldTransform.__transformInverseX (x, y);\r\n\t\tvar py = __worldTransform.__transformInverseY (x, y);\r\n\t\t\r\n\t\tif (__textEngine.bounds.contains (px, py)) {\r\n\t\t\t\r\n\t\t\tif (stack != null) {\r\n\t\t\t\t\r\n\t\t\t\tstack.push (hitObject);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function __hitTestMask (x:Float, y:Float):Bool {\r\n\t\t\r\n\t\t__getWorldTransform ();\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\tvar px = __worldTransform.__transformInverseX (x, y);\r\n\t\tvar py = __worldTransform.__transformInverseY (x, y);\r\n\t\t\r\n\t\tif (__textEngine.bounds.contains (px, py)) {\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderCairo (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tCairoTextField.render (this, renderSession);\r\n\t\tsuper.__renderCairo (renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderCanvas (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tCanvasTextField.render (this, renderSession);\r\n\t\t\r\n\t\tif (__textEngine.antiAliasType == ADVANCED && __textEngine.gridFitType == PIXEL) {\r\n\t\t\t\r\n\t\t\tvar smoothingEnabled = untyped (renderSession.context).imageSmoothingEnabled;\r\n\t\t\t\r\n\t\t\tif (smoothingEnabled) {\r\n\t\t\t\t\r\n\t\t\t\tuntyped (renderSession.context).mozImageSmoothingEnabled = false;\r\n\t\t\t\t//untyped (renderSession.context).webkitImageSmoothingEnabled = false;\r\n\t\t\t\tuntyped (renderSession.context).msImageSmoothingEnabled = false;\r\n\t\t\t\tuntyped (renderSession.context).imageSmoothingEnabled = false;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsuper.__renderCanvas (renderSession);\r\n\t\t\t\r\n\t\t\tif (smoothingEnabled) {\r\n\t\t\t\t\r\n\t\t\t\tuntyped (renderSession.context).mozImageSmoothingEnabled = true;\r\n\t\t\t\t//untyped (renderSession.context).webkitImageSmoothingEnabled = true;\r\n\t\t\t\tuntyped (renderSession.context).msImageSmoothingEnabled = true;\r\n\t\t\t\tuntyped (renderSession.context).imageSmoothingEnabled = true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tsuper.__renderCanvas (renderSession);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderDOM (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tDOMTextField.render (this, renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function __renderGL (renderSession:RenderSession):Void {\r\n\t\t\r\n\t\tif (__cacheAsBitmap) {\r\n\t\t\t__cacheGL(renderSession);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t__preRenderGL(renderSession);\r\n\t\t\r\n\t\t#if !disable_cairo_graphics\r\n\t\t\r\n\t\t#if lime_cairo\r\n\t\tCairoTextField.render (this, renderSession);\r\n\t\t#else\r\n\t\tCanvasTextField.render (this, renderSession);\r\n\t\t#end\r\n\t\t\r\n\t\tGLRenderer.renderBitmap (this, renderSession, __textEngine.antiAliasType != ADVANCED || __textEngine.gridFitType != PIXEL);\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\t//GLTextField.render (this, renderSession);\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\t__postRenderGL(renderSession);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __startCursorTimer ():Void {\r\n\t\t\r\n\t\t__cursorTimer = Timer.delay (__startCursorTimer, 600);\r\n\t\t__showCursor = !__showCursor;\r\n\t\t__dirty = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __startTextInput ():Void {\r\n\t\t\r\n\t\tif (__caretIndex < 0) {\r\n\t\t\t\r\n\t\t\t__caretIndex = __textEngine.text.length;\r\n\t\t\t__selectionIndex = __caretIndex;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (stage != null) {\r\n\t\t\t\r\n\t\t\t#if !dom\r\n\t\t\t\r\n\t\t\tstage.window.enableTextEvents = true;\r\n\t\t\t\r\n\t\t\tif (!__inputEnabled) {\r\n\t\t\t\t\r\n\t\t\t\tstage.window.enableTextEvents = true;\r\n\t\t\t\t\r\n\t\t\t\tif (!stage.window.onTextInput.has (window_onTextInput)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tstage.window.onTextInput.add (window_onTextInput);\r\n\t\t\t\t\tstage.window.onKeyDown.add (window_onKeyDown);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t__inputEnabled = true;\r\n\t\t\t\t__startCursorTimer ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __stopCursorTimer ():Void {\r\n\t\t\r\n\t\tif (__cursorTimer != null) {\r\n\t\t\t\r\n\t\t\t__cursorTimer.stop ();\r\n\t\t\t__cursorTimer = null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__showCursor) {\r\n\t\t\t\r\n\t\t\t__showCursor = false;\r\n\t\t\t__dirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __stopTextInput ():Void {\r\n\t\t\r\n\t\t#if !dom\r\n\t\t\r\n\t\tif (__inputEnabled && stage != null) {\r\n\t\t\t\r\n\t\t\tstage.window.enableTextEvents = false;\r\n\t\t\tstage.window.onTextInput.remove (window_onTextInput);\r\n\t\t\tstage.window.onKeyDown.remove (window_onKeyDown);\r\n\t\t\t\r\n\t\t\t__inputEnabled = false;\r\n\t\t\t__stopCursorTimer ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __updateLayout ():Void {\r\n\t\t\r\n\t\tif (__layoutDirty) {\r\n\t\t\t\r\n\t\t\t__textEngine.update ();\r\n\t\t\t\r\n\t\t\tif (__textEngine.autoSize != NONE) {\r\n\t\t\t\t\r\n\t\t\t\tvar cacheWidth = __textEngine.width;\r\n\t\t\t\tvar cacheHeight = __textEngine.height;\r\n\t\t\t\t\r\n\t\t\t\tswitch (__textEngine.autoSize) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase LEFT, RIGHT, CENTER:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!__textEngine.wordWrap) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t__textEngine.width = __textEngine.textWidth + 4;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__textEngine.height = __textEngine.textHeight + 4;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (__textEngine.width != cacheWidth) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch (__textEngine.autoSize) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase RIGHT:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tx += cacheWidth - __textEngine.width;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase CENTER:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tx += (cacheWidth - __textEngine.width) / 2;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t__textEngine.getBounds ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__layoutDirty = false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_antiAliasType ():AntiAliasType {\r\n\t\t\r\n\t\treturn __textEngine.antiAliasType;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_antiAliasType (value:AntiAliasType):AntiAliasType {\r\n\t\t\r\n\t\tif (value != __textEngine.antiAliasType) {\r\n\t\t\t\r\n\t\t\t//__dirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.antiAliasType = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_autoSize ():TextFieldAutoSize {\r\n\t\t\r\n\t\treturn __textEngine.autoSize;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_autoSize (value:TextFieldAutoSize):TextFieldAutoSize {\r\n\t\t\r\n\t\tif (value != __textEngine.autoSize) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t__layoutDirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.autoSize = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_background ():Bool {\r\n\t\t\r\n\t\treturn __textEngine.background;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_background (value:Bool):Bool {\r\n\t\t\r\n\t\tif (value != __textEngine.background) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.background = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_backgroundColor ():Int {\r\n\t\t\r\n\t\treturn __textEngine.backgroundColor;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_backgroundColor (value:Int):Int {\r\n\t\t\r\n\t\tif (value != __textEngine.backgroundColor) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.backgroundColor = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_border ():Bool {\r\n\t\t\r\n\t\treturn __textEngine.border;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_border (value:Bool):Bool {\r\n\t\t\r\n\t\tif (value != __textEngine.border) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.border = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_borderColor ():Int {\r\n\t\t\r\n\t\treturn __textEngine.borderColor;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_borderColor (value:Int):Int {\r\n\t\t\r\n\t\tif (value != __textEngine.borderColor) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.borderColor = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_bottomScrollV ():Int {\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\treturn __textEngine.bottomScrollV;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_caretIndex ():Int {\r\n\t\t\r\n\t\treturn __caretIndex;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_defaultTextFormat ():TextFormat {\r\n\t\t\r\n\t\treturn __textFormat.clone ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_defaultTextFormat (value:TextFormat):TextFormat {\r\n\t\t\r\n\t\t__textFormat.__merge (value);\r\n\t\t\r\n\t\t__layoutDirty = true;\r\n\t\t__dirty = true;\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_displayAsPassword ():Bool {\r\n\t\t\r\n\t\treturn __textEngine.displayAsPassword;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_displayAsPassword (value:Bool):Bool {\r\n\t\t\r\n\t\tif (value != __textEngine.displayAsPassword) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t__layoutDirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.displayAsPassword = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_embedFonts ():Bool {\r\n\t\t\r\n\t\treturn __textEngine.embedFonts;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_embedFonts (value:Bool):Bool {\r\n\t\t\r\n\t\t//if (value != __textEngine.embedFonts) {\r\n\t\t\t//\r\n\t\t\t//__dirty = true;\r\n\t\t\t//__layoutDirty = true;\r\n\t\t\t//\r\n\t\t//}\r\n\t\t\r\n\t\treturn __textEngine.embedFonts = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_gridFitType ():GridFitType {\r\n\t\t\r\n\t\treturn __textEngine.gridFitType;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_gridFitType (value:GridFitType):GridFitType {\r\n\t\t\r\n\t\t//if (value != __textEngine.gridFitType) {\r\n\t\t\t//\r\n\t\t\t//__dirty = true;\r\n\t\t\t//__layoutDirty = true;\r\n\t\t\t//\r\n\t\t//}\r\n\t\t\r\n\t\treturn __textEngine.gridFitType = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function get_height ():Float {\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\treturn __textEngine.height;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function set_height (value:Float):Float {\r\n\t\t\r\n\t\tif (scaleY != 1 || value != __textEngine.height) {\r\n\t\t\t\r\n\t\t\t__setTransformDirty ();\r\n\t\t\t__dirty = true;\r\n\t\t\t__layoutDirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tscaleY = 1;\r\n\t\treturn __textEngine.height = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_htmlText ():String {\r\n\t\t\r\n\t\treturn __textEngine.text;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_htmlText (value:String):String {\r\n\t\t\r\n\t\tif (!__isHTML || __textEngine.text != value) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t__layoutDirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t__isHTML = true;\r\n\t\t\r\n\t\tif (#if (js && html5) #if dom false && #end __div == null #else true #end) {\r\n\t\t\t\r\n\t\t\tvalue = new EReg (\"<br>\", \"g\").replace (value, \"\\n\");\r\n\t\t\tvalue = new EReg (\"<br/>\", \"g\").replace (value, \"\\n\");\r\n\t\t\t\r\n\t\t\t// crude solution\r\n\t\t\t\r\n\t\t\tvar segments = value.split (\"<font\");\r\n\t\t\t\r\n\t\t\tif (segments.length == 1) {\r\n\t\t\t\t\r\n\t\t\t\tvalue = new EReg (\"<.*?>\", \"g\").replace (value, \"\");\r\n\t\t\t\t\r\n\t\t\t\tif (__textEngine.textFormatRanges.length > 1) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__textEngine.textFormatRanges.splice (1, __textEngine.textFormatRanges.length - 1);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar range = __textEngine.textFormatRanges[0];\r\n\t\t\t\trange.format = __textFormat;\r\n\t\t\t\trange.start = 0;\r\n\t\t\t\trange.end = value.length;\r\n\t\t\t\t\r\n\t\t\t\treturn __textEngine.text = value;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t__textEngine.textFormatRanges.splice (0, __textEngine.textFormatRanges.length);\r\n\t\t\t\t\r\n\t\t\t\tvalue = \"\";\r\n\t\t\t\t\r\n\t\t\t\t// crude search for font\r\n\t\t\t\t\r\n\t\t\t\tfor (segment in segments) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (segment == \"\") continue;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar closeFontIndex = segment.indexOf (\"</font>\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (closeFontIndex > -1) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar start = segment.indexOf (\">\") + 1;\r\n\t\t\t\t\t\tvar end = closeFontIndex;\r\n\t\t\t\t\t\tvar format = __textFormat.clone ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar faceIndex = segment.indexOf (\"face=\");\r\n\t\t\t\t\t\tvar colorIndex = segment.indexOf (\"color=\");\r\n\t\t\t\t\t\tvar sizeIndex = segment.indexOf (\"size=\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (faceIndex > -1 && faceIndex < start) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tformat.font = segment.substr (faceIndex + 6, segment.indexOf (\"\\\"\", faceIndex));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (colorIndex > -1 && colorIndex < start) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tformat.color = Std.parseInt (\"0x\" + segment.substr (colorIndex + 8, 6));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (sizeIndex > -1 && sizeIndex < start) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tformat.size = Std.parseInt (segment.substr (sizeIndex + 6, segment.indexOf (\"\\\"\", sizeIndex)));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar sub = segment.substring (start, end);\r\n\t\t\t\t\t\tsub = new EReg (\"<.*?>\", \"g\").replace (sub, \"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__textEngine.textFormatRanges.push (new TextFormatRange (format, value.length, value.length + sub.length));\r\n\t\t\t\t\t\tvalue += sub;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (closeFontIndex + 7 < segment.length) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tsub = segment.substr (closeFontIndex + 7);\r\n\t\t\t\t\t\t\t__textEngine.textFormatRanges.push (new TextFormatRange (__textFormat, value.length, value.length + sub.length));\r\n\t\t\t\t\t\t\tvalue += sub;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__textEngine.textFormatRanges.push (new TextFormatRange (__textFormat, value.length, value.length + segment.length));\r\n\t\t\t\t\t\tvalue += segment;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.text = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_length ():Int {\r\n\t\t\r\n\t\tif (__textEngine.text != null) {\r\n\t\t\t\r\n\t\t\treturn __textEngine.text.length;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_maxChars ():Int {\r\n\t\t\r\n\t\treturn __textEngine.maxChars;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_maxChars (value:Int):Int {\r\n\t\t\r\n\t\tif (value != __textEngine.maxChars) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t__layoutDirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.maxChars = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_maxScrollH ():Int { \r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\treturn __textEngine.maxScrollH;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_maxScrollV ():Int { \r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\treturn __textEngine.maxScrollV;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_multiline ():Bool {\r\n\t\t\r\n\t\treturn __textEngine.multiline;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_multiline (value:Bool):Bool {\r\n\t\t\r\n\t\tif (value != __textEngine.multiline) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t__layoutDirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.multiline = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_numLines ():Int {\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\treturn __textEngine.numLines;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_restrict ():String {\r\n\t\t\r\n\t\treturn __textEngine.restrict;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_restrict (value:String):String {\r\n\t\t\r\n\t\treturn __textEngine.restrict = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_scrollH ():Int {\r\n\t\t\r\n\t\treturn __textEngine.scrollH;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_scrollH (value:Int):Int {\r\n\t\t\r\n\t\tif (value > __textEngine.maxScrollH) value = __textEngine.maxScrollH;\r\n\t\tif (value < 0) value = 0;\r\n\t\t\r\n\t\tif (value != __textEngine.scrollH) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.scrollH = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_scrollV ():Int {\r\n\t\t\r\n\t\treturn __textEngine.scrollV;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_scrollV (value:Int):Int {\r\n\t\t\r\n\t\tif (value > __textEngine.maxScrollV) value = __textEngine.maxScrollV;\r\n\t\tif (value < 1) value = 1;\r\n\t\t\r\n\t\tif (value != __textEngine.scrollV) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.scrollV = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_selectable ():Bool {\r\n\t\t\r\n\t\treturn __textEngine.selectable;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_selectable (value:Bool):Bool {\r\n\t\t\r\n\t\tif (value != __textEngine.selectable && type == INPUT) {\r\n\t\t\t\r\n\t\t\tif (stage != null && stage.focus == this) {\r\n\t\t\t\t\r\n\t\t\t\t__startTextInput ();\r\n\t\t\t\t\r\n\t\t\t} else if (!value) {\r\n\t\t\t\t\r\n\t\t\t\t__stopTextInput ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.selectable = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_selectionBeginIndex ():Int {\r\n\t\t\r\n\t\treturn Std.int (Math.min (__caretIndex, __selectionIndex));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_selectionEndIndex ():Int {\r\n\t\t\r\n\t\treturn Std.int (Math.max (__caretIndex, __selectionIndex));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_sharpness ():Float {\r\n\t\t\r\n\t\treturn __textEngine.sharpness;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_sharpness (value:Float):Float {\r\n\t\t\r\n\t\tif (value != __textEngine.sharpness) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.sharpness = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_text ():String {\r\n\t\t\r\n\t\treturn __textEngine.text;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_text (value:String):String {\r\n\t\t\r\n\t\tif (__isHTML || __textEngine.text != value) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t__layoutDirty = true;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn value;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__textEngine.textFormatRanges.length > 1) {\r\n\t\t\t\r\n\t\t\t__textEngine.textFormatRanges.splice (1, __textEngine.textFormatRanges.length - 1);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar range = __textEngine.textFormatRanges[0];\r\n\t\trange.format = __textFormat;\r\n\t\trange.start = 0;\r\n\t\trange.end = value.length;\r\n\t\t\r\n\t\t__isHTML = false;\r\n\t\t\r\n\t\treturn __textEngine.text = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_textColor ():Int { \r\n\t\t\r\n\t\treturn __textFormat.color;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_textColor (value:Int):Int {\r\n\t\t\r\n\t\tif (value != __textFormat.color) __dirty = true;\r\n\t\t\r\n\t\tfor (range in __textEngine.textFormatRanges) {\r\n\t\t\t\r\n\t\t\trange.format.color = value;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textFormat.color = value;\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function get_textWidth ():Float {\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\treturn __textEngine.textWidth;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_textHeight ():Float {\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\treturn __textEngine.textHeight;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_type ():TextFieldType {\r\n\t\t\r\n\t\treturn __textEngine.type;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_type (value:TextFieldType):TextFieldType {\r\n\t\t\r\n\t\tif (value != __textEngine.type) {\r\n\t\t\t\r\n\t\t\tif (value == TextFieldType.INPUT) {\r\n\t\t\t\t\r\n\t\t\t\taddEventListener (FocusEvent.FOCUS_IN, this_onFocusIn);\r\n\t\t\t\taddEventListener (FocusEvent.FOCUS_OUT, this_onFocusOut);\r\n\t\t\t\taddEventListener (Event.ADDED_TO_STAGE, this_onAddedToStage);\r\n\t\t\t\t\r\n\t\t\t\tthis_onFocusIn (null);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tremoveEventListener (FocusEvent.FOCUS_IN, this_onFocusIn);\r\n\t\t\t\tremoveEventListener (FocusEvent.FOCUS_OUT, this_onFocusOut);\r\n\t\t\t\tremoveEventListener (Event.ADDED_TO_STAGE, this_onAddedToStage);\r\n\t\t\t\t\r\n\t\t\t\t__stopTextInput ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.type = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\toverride private function get_width ():Float {\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\treturn __textEngine.width;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\toverride private function set_width (value:Float):Float {\r\n\t\t\r\n\t\tif (scaleX != 1 || __textEngine.width != value) {\r\n\t\t\t\r\n\t\t\t__setTransformDirty ();\r\n\t\t\t__dirty = true;\r\n\t\t\t__layoutDirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tscaleX = 1;\r\n\t\treturn __textEngine.width = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_wordWrap ():Bool {\r\n\t\t\r\n\t\treturn __textEngine.wordWrap;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function set_wordWrap (value:Bool):Bool {\r\n\t\t\r\n\t\tif (value != __textEngine.wordWrap) {\r\n\t\t\t\r\n\t\t\t__dirty = true;\r\n\t\t\t__layoutDirty = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __textEngine.wordWrap = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Event Handlers\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function stage_onMouseMove (event:MouseEvent) {\r\n\t\t\r\n\t\tif (stage == null) return;\r\n\t\t\r\n\t\tif (__textEngine.selectable && __selectionIndex >= 0) {\r\n\t\t\t\r\n\t\t\t__updateLayout ();\r\n\t\t\t\r\n\t\t\tvar position = __getPosition (mouseX, mouseY);\r\n\t\t\t\r\n\t\t\tif (position != __caretIndex) {\r\n\t\t\t\t\r\n\t\t\t\t__caretIndex = position;\r\n\t\t\t\t__dirty = true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function stage_onMouseUp (event:MouseEvent):Void {\r\n\t\t\r\n\t\tif (stage == null) return;\r\n\t\t\r\n\t\tstage.removeEventListener (MouseEvent.MOUSE_MOVE, stage_onMouseMove);\r\n\t\tstage.removeEventListener (MouseEvent.MOUSE_UP, stage_onMouseUp);\r\n\t\t\r\n\t\tif (stage.focus == this) {\r\n\t\t\t\r\n\t\t\t__getWorldTransform ();\r\n\t\t\t__updateLayout ();\r\n\t\t\t\r\n\t\t\tvar px = __worldTransform.__transformInverseX (x, y);\r\n\t\t\tvar py = __worldTransform.__transformInverseY (x, y);\r\n\t\t\t\r\n\t\t\tvar upPos:Int = __getPosition (mouseX, mouseY);\r\n\t\t\tvar leftPos:Int;\r\n\t\t\tvar rightPos:Int;\r\n\t\t\t\r\n\t\t\tleftPos = Std.int (Math.min (__selectionIndex, upPos));\r\n\t\t\trightPos = Std.int (Math.max (__selectionIndex, upPos));\r\n\t\t\t\r\n\t\t\t__selectionIndex = leftPos;\r\n\t\t\t__caretIndex = rightPos;\r\n\t\t\t\r\n\t\t\tif (__inputEnabled) {\r\n\t\t\t\t\r\n\t\t\t\tthis_onFocusIn (null);\r\n\t\t\t\t\r\n\t\t\t\t__stopCursorTimer ();\r\n\t\t\t\t__startCursorTimer ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function this_onAddedToStage (event:Event):Void {\r\n\t\t\r\n\t\tthis_onFocusIn (null);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function this_onFocusIn (event:FocusEvent):Void {\r\n\t\t\r\n\t\tif (selectable && type == INPUT && stage != null && stage.focus == this) {\r\n\t\t\t\r\n\t\t\t__startTextInput ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function this_onFocusOut (event:FocusEvent):Void {\r\n\t\t\r\n\t\t__stopTextInput ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function this_onMouseDown (event:MouseEvent):Void {\r\n\t\t\r\n\t\tif (!selectable) return;\r\n\t\t\r\n\t\t__updateLayout ();\r\n\t\t\r\n\t\t__caretIndex = __getPosition (mouseX, mouseY);\r\n\t\t__selectionIndex = __caretIndex;\r\n\t\t__dirty = true;\r\n\t\t\r\n\t\tstage.addEventListener (MouseEvent.MOUSE_MOVE, stage_onMouseMove);\r\n\t\tstage.addEventListener (MouseEvent.MOUSE_UP, stage_onMouseUp);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function window_onKeyDown (key:KeyCode, modifier:KeyModifier):Void {\r\n\t\t\r\n\t\tswitch (key) {\r\n\t\t\t\r\n\t\t\tcase BACKSPACE:\r\n\t\t\t\t\r\n\t\t\t\tif (__selectionIndex == __caretIndex && __caretIndex > 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__selectionIndex = __caretIndex - 1;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (__selectionIndex != __caretIndex) {\r\n\t\t\t\t\t\r\n\t\t\t\t\treplaceSelectedText (\"\");\r\n\t\t\t\t\t__selectionIndex = __caretIndex;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdispatchEvent (new Event (Event.CHANGE, true));\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tcase DELETE:\r\n\t\t\t\t\r\n\t\t\t\tif (__selectionIndex == __caretIndex && __caretIndex < __textEngine.text.length) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t__selectionIndex = __caretIndex + 1;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (__selectionIndex != __caretIndex) {\r\n\t\t\t\t\t\r\n\t\t\t\t\treplaceSelectedText (\"\");\r\n\t\t\t\t\t__selectionIndex = __caretIndex;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdispatchEvent (new Event (Event.CHANGE, true));\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tcase LEFT:\r\n\t\t\t\t\r\n\t\t\t\tif (modifier.shiftKey) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (__caretIndex > 0) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__caretIndex--;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (__selectionIndex == __caretIndex) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (__caretIndex > 0) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t__caretIndex--;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__caretIndex = Std.int (Math.min (__caretIndex, __selectionIndex));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t__selectionIndex = __caretIndex;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t__stopCursorTimer ();\r\n\t\t\t\t__startCursorTimer ();\r\n\t\t\t\r\n\t\t\tcase RIGHT:\r\n\t\t\t\t\r\n\t\t\t\tif (modifier.shiftKey) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (__caretIndex < __textEngine.text.length) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__caretIndex++;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (__selectionIndex == __caretIndex) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (__caretIndex < __textEngine.text.length) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t__caretIndex++;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t__caretIndex = Std.int (Math.max (__caretIndex, __selectionIndex));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t__selectionIndex = __caretIndex;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t__stopCursorTimer ();\r\n\t\t\t\t__startCursorTimer ();\r\n\t\t\t\r\n\t\t\tcase C:\r\n\t\t\t\t\r\n\t\t\t\tif (modifier == #if mac KeyModifier.LEFT_META #else KeyModifier.LEFT_CTRL #end || modifier == #if mac KeyModifier.RIGHT_META #else KeyModifier.RIGHT_CTRL #end) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tClipboard.text = __textEngine.text.substring (__caretIndex, __selectionIndex);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tcase X:\r\n\t\t\t\t\r\n\t\t\t\tif (modifier == #if mac KeyModifier.LEFT_META #else KeyModifier.LEFT_CTRL #end || modifier == #if mac KeyModifier.RIGHT_META #else KeyModifier.RIGHT_CTRL #end) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tClipboard.text = __textEngine.text.substring (__caretIndex, __selectionIndex);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (__caretIndex != __selectionIndex) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treplaceSelectedText (\"\");\r\n\t\t\t\t\t\tdispatchEvent (new Event (Event.CHANGE, true));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tcase V:\r\n\t\t\t\t\r\n\t\t\t\tif (modifier == #if mac KeyModifier.LEFT_META #else KeyModifier.LEFT_CTRL #end || modifier == #if mac KeyModifier.RIGHT_META #else KeyModifier.RIGHT_CTRL #end) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar text = Clipboard.text;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (text != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treplaceSelectedText (text);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treplaceSelectedText (\"\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tdispatchEvent (new Event (Event.CHANGE, true));\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\t__textEngine.textFormatRanges[__textEngine.textFormatRanges.length - 1].end = __textEngine.text.length;\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function window_onTextInput (value:String):Void {\r\n\t\t\r\n\t\treplaceSelectedText (value);\r\n\t\t\r\n\t\tdispatchEvent (new Event (Event.CHANGE, true));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef TextField = openfl._legacy.text.TextField;\r\n#end","package openfl.text; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract TextFieldAutoSize(Null<Int>) {\r\n\t\r\n\tpublic var CENTER = 0;\r\n\tpublic var LEFT = 1;\r\n\tpublic var NONE = 2;\r\n\tpublic var RIGHT = 3;\r\n\t\r\n\t@:from private static function fromString (value:String):TextFieldAutoSize {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"center\": CENTER;\r\n\t\t\tcase \"left\": LEFT;\r\n\t\t\tcase \"none\": NONE;\r\n\t\t\tcase \"right\": RIGHT;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase TextFieldAutoSize.CENTER: \"center\";\r\n\t\t\tcase TextFieldAutoSize.LEFT: \"left\";\r\n\t\t\tcase TextFieldAutoSize.NONE: \"none\";\r\n\t\t\tcase TextFieldAutoSize.RIGHT: \"right\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n#else\r\ntypedef TextFieldAutoSize = openfl._legacy.text.TextFieldAutoSize;\r\n#end","package openfl.text;\r\n\r\n\r\n@:enum abstract TextFieldType(Null<Int>) {\r\n\t\r\n\tpublic var DYNAMIC = 0;\r\n\tpublic var INPUT = 1;\r\n\t\r\n\t@:from private static function fromString (value:String):TextFieldType {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"dynamic\": DYNAMIC;\r\n\t\t\tcase \"input\": INPUT;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase TextFieldType.DYNAMIC: \"dynamic\";\r\n\t\t\tcase TextFieldType.INPUT: \"input\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}","package openfl.text; #if !openfl_legacy\r\n\r\n\r\nclass TextFormat {\r\n\t\r\n\t\r\n\tpublic var align:TextFormatAlign;\r\n\tpublic var blockIndent:Null<Int>;\r\n\tpublic var bold:Null<Bool>;\r\n\tpublic var bullet:Null<Bool>;\r\n\tpublic var color:Null<Int>;\r\n\tpublic var font:String;\r\n\tpublic var indent:Null<Int>;\r\n\tpublic var italic:Null<Bool>;\r\n\tpublic var kerning:Null<Bool>;\r\n\tpublic var leading:Null<Int>;\r\n\tpublic var leftMargin:Null<Int>;\r\n\tpublic var letterSpacing:Null<Float>;\r\n\tpublic var rightMargin:Null<Int>;\r\n\tpublic var size:Null<Int>;\r\n\tpublic var tabStops:Array<Int>;\r\n\tpublic var target:String;\r\n\tpublic var underline:Null<Bool>;\r\n\tpublic var url:String;\r\n\t\r\n\t\r\n\tpublic function new (font:String = null, size:Null<Int> = null, color:Null<Int> = null, bold:Null<Bool> = null, italic:Null<Bool> = null, underline:Null<Bool> = null, url:String = null, target:String = null, align:TextFormatAlign = null, leftMargin:Null<Int> = null, rightMargin:Null<Int> = null, indent:Null<Int> = null, leading:Null<Int> = null) {\r\n\t\t\r\n\t\tthis.font = font;\r\n\t\tthis.size = size;\r\n\t\tthis.color = color;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.target = target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clone ():TextFormat {\r\n\t\t\r\n\t\tvar newFormat = new TextFormat (font, size, color, bold, italic, underline, url, target);\r\n\t\t\r\n\t\tnewFormat.align = align;\r\n\t\tnewFormat.leftMargin = leftMargin;\r\n\t\tnewFormat.rightMargin = rightMargin;\r\n\t\tnewFormat.indent = indent;\r\n\t\tnewFormat.leading = leading;\r\n\t\t\r\n\t\tnewFormat.blockIndent = blockIndent;\r\n\t\tnewFormat.bullet = bullet;\r\n\t\tnewFormat.kerning = kerning;\r\n\t\tnewFormat.letterSpacing = letterSpacing;\r\n\t\tnewFormat.tabStops = tabStops;\r\n\t\t\r\n\t\treturn newFormat;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __merge (format:TextFormat):Void {\r\n\t\t\r\n\t\tif (format.font != null) font = format.font;\r\n\t\tif (format.size != null) size = format.size;\r\n\t\tif (format.color != null) color = format.color;\r\n\t\tif (format.bold != null) bold = format.bold;\r\n\t\tif (format.italic != null) italic = format.italic;\r\n\t\tif (format.underline != null) underline = format.underline;\r\n\t\tif (format.url != null) url = format.url;\r\n\t\tif (format.target != null) target = format.target;\r\n\t\tif (format.align != null) align = format.align;\r\n\t\tif (format.leftMargin != null) leftMargin = format.leftMargin;\r\n\t\tif (format.rightMargin != null) rightMargin = format.rightMargin;\r\n\t\tif (format.indent != null) indent = format.indent;\r\n\t\tif (format.leading != null) leading = format.leading;\r\n\t\tif (format.blockIndent != null) blockIndent = format.blockIndent;\r\n\t\tif (format.bullet != null) bullet = format.bullet;\r\n\t\tif (format.kerning != null) kerning = format.kerning;\r\n\t\tif (format.letterSpacing != null) letterSpacing = format.letterSpacing;\r\n\t\tif (format.tabStops != null) tabStops = format.tabStops;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef TextFormat = openfl._legacy.text.TextFormat;\r\n#end","package openfl.text; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract TextFormatAlign(Null<Int>) {\r\n\t\r\n\tpublic var CENTER = 0;\r\n\tpublic var END = 1;\r\n\tpublic var JUSTIFY = 2;\r\n\tpublic var LEFT = 3;\r\n\tpublic var RIGHT = 4;\r\n\tpublic var START = 5;\r\n\t\r\n\t@:from private static function fromString (value:String):TextFormatAlign {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"center\": CENTER;\r\n\t\t\tcase \"end\": END;\r\n\t\t\tcase \"justify\": JUSTIFY;\r\n\t\t\tcase \"left\": LEFT;\r\n\t\t\tcase \"right\": RIGHT;\r\n\t\t\tcase \"start\": START;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase TextFormatAlign.CENTER: \"center\";\r\n\t\t\tcase TextFormatAlign.END: \"end\";\r\n\t\t\tcase TextFormatAlign.JUSTIFY: \"justify\";\r\n\t\t\tcase TextFormatAlign.LEFT: \"left\";\r\n\t\t\tcase TextFormatAlign.RIGHT: \"right\";\r\n\t\t\tcase TextFormatAlign.START: \"start\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef TextFormatAlign = openfl._legacy.text.TextFormatAlign;\r\n#end","package openfl.text; #if !openfl_legacy\r\n\r\n\r\nclass TextLineMetrics {\r\n\t\r\n\t\r\n\tpublic var ascent:Float;\r\n\tpublic var descent:Float;\r\n\tpublic var height:Float;\r\n\tpublic var leading:Float;\r\n\tpublic var width:Float;\r\n\tpublic var x:Float;\r\n\t\r\n\t\r\n\tpublic function new (x:Float, width:Float, height:Float, ascent:Float, descent:Float, leading:Float) {\r\n\t\t\r\n\t\tthis.x = x;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.ascent = ascent;\r\n\t\tthis.descent = descent;\r\n\t\tthis.leading = leading;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef TextLineMetrics = openfl._legacy.text.TextLineMetrics;\r\n#end","package openfl.ui;\r\n\r\n\r\nimport lime.ui.Gamepad;\r\nimport lime.ui.GamepadAxis;\r\nimport lime.ui.GamepadButton;\r\nimport openfl.events.Event;\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.events.GameInputEvent;\r\n\r\n@:access(openfl.ui.GameInputControl)\r\n@:access(openfl.ui.GameInputDevice)\r\n\r\n\r\n@:final class GameInput extends EventDispatcher {\r\n\t\r\n\t\r\n\tpublic static var isSupported (default, null) = true;\r\n\tpublic static var numDevices (default, null) = 0;\r\n\t\r\n\tprivate static var __deviceList = new Array<GameInputDevice> ();\r\n\tprivate static var __devices = new Map<Gamepad, GameInputDevice> ();\r\n\tprivate static var __instances = [];\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\t__instances.push (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function getDeviceAt (index:Int):GameInputDevice {\r\n\t\t\r\n\t\tif (index >= 0 && index < __deviceList.length) {\r\n\t\t\t\r\n\t\t\treturn __deviceList[index];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function __getDevice (gamepad:Gamepad):GameInputDevice {\r\n\t\t\r\n\t\tif (gamepad == null) return null;\r\n\t\t\r\n\t\tif (!__devices.exists (gamepad)) {\r\n\t\t\t\r\n\t\t\tvar device = new GameInputDevice (gamepad.guid, gamepad.name);\r\n\t\t\t__deviceList.push (device);\r\n\t\t\t__devices.set (gamepad, device);\r\n\t\t\tnumDevices = __deviceList.length;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn __devices.get (gamepad);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function __onGamepadAxisMove (gamepad:Gamepad, axis:GamepadAxis, value:Float):Void {\r\n\t\t\r\n\t\tvar device = __getDevice (gamepad);\r\n\t\tif (device == null) return;\r\n\t\t\r\n\t\tif (device.enabled) {\r\n\t\t\t\r\n\t\t\tif (!device.__axis.exists (axis)) {\r\n\t\t\t\t\r\n\t\t\t\tvar control = new GameInputControl (device, \"AXIS_\" + axis, -1, 1);\r\n\t\t\t\tdevice.__axis.set (axis, control);\r\n\t\t\t\tdevice.__controls.push (control);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar control = device.__axis.get (axis);\r\n\t\t\tcontrol.value = value;\r\n\t\t\tcontrol.dispatchEvent (new Event (Event.CHANGE));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function __onGamepadButtonDown (gamepad:Gamepad, button:GamepadButton):Void {\r\n\t\t\r\n\t\tvar device = __getDevice (gamepad);\r\n\t\tif (device == null) return;\r\n\t\t\r\n\t\tif (device.enabled) {\r\n\t\t\t\r\n\t\t\tif (!device.__button.exists (button)) {\r\n\t\t\t\t\r\n\t\t\t\tvar control = new GameInputControl (device, \"BUTTON_\" + button, 0, 1);\r\n\t\t\t\tdevice.__button.set (button, control);\r\n\t\t\t\tdevice.__controls.push (control);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar control = device.__button.get (button);\r\n\t\t\tcontrol.value = 1;\r\n\t\t\tcontrol.dispatchEvent (new Event (Event.CHANGE));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function __onGamepadButtonUp (gamepad:Gamepad, button:GamepadButton):Void {\r\n\t\t\r\n\t\tvar device = __getDevice (gamepad);\r\n\t\tif (device == null) return;\r\n\t\t\r\n\t\tif (device.enabled) {\r\n\t\t\t\r\n\t\t\tif (!device.__button.exists (button)) {\r\n\t\t\t\t\r\n\t\t\t\tvar control = new GameInputControl (device, \"BUTTON_\" + button, 0, 1);\r\n\t\t\t\tdevice.__button.set (button, control);\r\n\t\t\t\tdevice.__controls.push (control);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar control = device.__button.get (button);\r\n\t\t\tcontrol.value = 0;\r\n\t\t\tcontrol.dispatchEvent (new Event (Event.CHANGE));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function __onGamepadConnect (gamepad:Gamepad):Void {\r\n\t\t\r\n\t\tvar device = __getDevice (gamepad);\r\n\t\tif (device == null) return;\r\n\t\t\r\n\t\tfor (instance in __instances) {\r\n\t\t\t\r\n\t\t\tinstance.dispatchEvent (new GameInputEvent (GameInputEvent.DEVICE_ADDED, device));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function __onGamepadDisconnect (gamepad:Gamepad):Void {\r\n\t\t\r\n\t\tvar device = __devices.get (gamepad);\r\n\t\t\r\n\t\tif (device != null) {\r\n\t\t\t\r\n\t\t\tif (__devices.exists (gamepad)) {\r\n\t\t\t\t\r\n\t\t\t\t__deviceList.remove (__devices.get (gamepad));\r\n\t\t\t\t__devices.remove (gamepad);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tnumDevices = __deviceList.length;\r\n\t\t\t\r\n\t\t\tfor (instance in __instances) {\r\n\t\t\t\t\r\n\t\t\t\tinstance.dispatchEvent (new GameInputEvent (GameInputEvent.DEVICE_REMOVED, device));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n}","package openfl.ui;\r\n\r\n\r\nimport openfl.events.EventDispatcher;\r\n\r\n\r\nclass GameInputControl extends EventDispatcher {\r\n\t\r\n\t\r\n\tpublic var device (default, null):GameInputDevice;\r\n\tpublic var id (default, null):String;\r\n\tpublic var maxValue (default, null):Float;\r\n\tpublic var minValue (default, null):Float;\r\n\tpublic var value (default, null):Float;\r\n\t\r\n\t\r\n\tprivate function new (device:GameInputDevice, id:String, minValue:Float, maxValue:Float, value:Float = 0) {\r\n\t\t\r\n\t\tsuper ();\r\n\t\t\r\n\t\tthis.device = device;\r\n\t\tthis.id = id;\r\n\t\tthis.minValue = minValue;\r\n\t\tthis.maxValue = maxValue;\r\n\t\tthis.value = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.ui;\r\n\r\n\r\nimport lime.ui.Gamepad;\r\nimport openfl.utils.ByteArray;\r\n\r\n@:access(openfl.ui.GameInputControl)\r\n\r\n\r\n@:final class GameInputDevice {\r\n\t\r\n\t\r\n\tpublic static var MAX_BUFFER_SIZE = 32000;\r\n\t\r\n\tpublic var enabled:Bool;\r\n\tpublic var id (default, null):String;\r\n\tpublic var name (default, null):String;\r\n\tpublic var numControls (get, never):Int;\r\n\tpublic var sampleInterval:Int;\r\n\t\r\n\tprivate var __axis = new Map<Int, GameInputControl> ();\r\n\tprivate var __button = new Map<Int, GameInputControl> ();\r\n\tprivate var __controls = new Array<GameInputControl> ();\r\n\tprivate var __gamepad:Gamepad;\r\n\t\r\n\t\r\n\tprivate function new (id:String, name:String) {\r\n\t\t\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t\t\r\n\t\tvar control;\r\n\t\t\r\n\t\tfor (i in 0...6) {\r\n\t\t\t\r\n\t\t\tcontrol = new GameInputControl (this, \"AXIS_\" + i, -1, 1);\r\n\t\t\t__axis.set (i, control);\r\n\t\t\t__controls.push (control);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (i in 0...15) {\r\n\t\t\t\r\n\t\t\tcontrol = new GameInputControl (this, \"BUTTON_\" + i, 0, 1);\r\n\t\t\t__button.set (i, control);\r\n\t\t\t__controls.push (control);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getCachedSamples (data:ByteArray, append:Bool = false):Int {\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getControlAt (i:Int):GameInputControl {\r\n\t\t\r\n\t\tif (i >= 0 && i < __controls.length) {\r\n\t\t\t\r\n\t\t\treturn __controls[i];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function startCachingSamples (numSamples:Int, controls:Vector<String>):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function stopCachingSamples ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_numControls ():Int {\r\n\t\t\r\n\t\treturn __controls.length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.ui; #if (!openfl_legacy || lime_hybrid)\r\n\r\n\r\nimport lime.ui.KeyCode;\r\n\r\n\r\n@:final class Keyboard {\r\n\t\r\n\t\r\n\tpublic static inline var NUMBER_0 = 48;\r\n\tpublic static inline var NUMBER_1 = 49;\r\n\tpublic static inline var NUMBER_2 = 50;\r\n\tpublic static inline var NUMBER_3 = 51;\r\n\tpublic static inline var NUMBER_4 = 52;\r\n\tpublic static inline var NUMBER_5 = 53;\r\n\tpublic static inline var NUMBER_6 = 54;\r\n\tpublic static inline var NUMBER_7 = 55;\r\n\tpublic static inline var NUMBER_8 = 56; \r\n\tpublic static inline var NUMBER_9 = 57;\r\n\tpublic static inline var A = 65;\r\n\tpublic static inline var B = 66;\r\n\tpublic static inline var C = 67;\r\n\tpublic static inline var D = 68;\r\n\tpublic static inline var E = 69;\r\n\tpublic static inline var F = 70;\r\n\tpublic static inline var G = 71;\r\n\tpublic static inline var H = 72;\r\n\tpublic static inline var I = 73;\r\n\tpublic static inline var J = 74;\r\n\tpublic static inline var K = 75;\r\n\tpublic static inline var L = 76;\r\n\tpublic static inline var M = 77;\r\n\tpublic static inline var N = 78;\r\n\tpublic static inline var O = 79;\r\n\tpublic static inline var P = 80;\r\n\tpublic static inline var Q = 81;\r\n\tpublic static inline var R = 82;\r\n\tpublic static inline var S = 83;\r\n\tpublic static inline var T = 84;\r\n\tpublic static inline var U = 85;\r\n\tpublic static inline var V = 86;\r\n\tpublic static inline var W = 87;\r\n\tpublic static inline var X = 88;\r\n\tpublic static inline var Y = 89;\r\n\tpublic static inline var Z = 90;\r\n\tpublic static inline var NUMPAD_0 = 96;\r\n\tpublic static inline var NUMPAD_1 = 97;\r\n\tpublic static inline var NUMPAD_2 = 98;\r\n\tpublic static inline var NUMPAD_3 = 99;\r\n\tpublic static inline var NUMPAD_4 = 100;\r\n\tpublic static inline var NUMPAD_5 = 101;\r\n\tpublic static inline var NUMPAD_6 = 102;\r\n\tpublic static inline var NUMPAD_7 = 103;\r\n\tpublic static inline var NUMPAD_8 = 104;\r\n\tpublic static inline var NUMPAD_9 = 105;\r\n\tpublic static inline var NUMPAD_MULTIPLY = 106;\r\n\tpublic static inline var NUMPAD_ADD = 107;\r\n\tpublic static inline var NUMPAD_ENTER = 108;\r\n\tpublic static inline var NUMPAD_SUBTRACT = 109;\r\n\tpublic static inline var NUMPAD_DECIMAL = 110;\r\n\tpublic static inline var NUMPAD_DIVIDE = 111;\r\n\tpublic static inline var F1 = 112;\r\n\tpublic static inline var F2 = 113;\r\n\tpublic static inline var F3 = 114;\r\n\tpublic static inline var F4 = 115;\r\n\tpublic static inline var F5 = 116;\r\n\tpublic static inline var F6 = 117;\r\n\tpublic static inline var F7 = 118;\r\n\tpublic static inline var F8 = 119;\r\n\tpublic static inline var F9 = 120;\r\n\tpublic static inline var F10 = 121; //  F10 is used by browser.\r\n\tpublic static inline var F11 = 122;\r\n\tpublic static inline var F12 = 123;\r\n\tpublic static inline var F13 = 124;\r\n\tpublic static inline var F14 = 125;\r\n\tpublic static inline var F15 = 126;\r\n\tpublic static inline var BACKSPACE = 8;\r\n\tpublic static inline var TAB = 9;\r\n\tpublic static inline var ALTERNATE = 18;\r\n\tpublic static inline var ENTER = 13;\r\n\tpublic static inline var COMMAND = 15;\r\n\tpublic static inline var SHIFT = 16;\r\n\tpublic static inline var CONTROL = 17;\r\n\tpublic static inline var BREAK = 19;\r\n\tpublic static inline var CAPS_LOCK = 20;\r\n\tpublic static inline var NUMPAD = 21;\r\n\tpublic static inline var ESCAPE = 27;\r\n\tpublic static inline var SPACE = 32;\r\n\tpublic static inline var PAGE_UP = 33;\r\n\tpublic static inline var PAGE_DOWN = 34;\r\n\tpublic static inline var END = 35;\r\n\tpublic static inline var HOME = 36;\r\n\tpublic static inline var LEFT = 37;\r\n\tpublic static inline var RIGHT = 39;\r\n\tpublic static inline var UP = 38;\r\n\tpublic static inline var DOWN = 40;\r\n\tpublic static inline var INSERT = 45;\r\n\tpublic static inline var DELETE = 46;\r\n\tpublic static inline var NUMLOCK = 144;\r\n\tpublic static inline var SEMICOLON = 186;\r\n\tpublic static inline var EQUAL = 187;\r\n\tpublic static inline var COMMA = 188;\r\n\tpublic static inline var MINUS = 189;\r\n\tpublic static inline var PERIOD = 190;\r\n\tpublic static inline var SLASH = 191;\r\n\tpublic static inline var BACKQUOTE = 192;\r\n\tpublic static inline var LEFTBRACKET = 219;\r\n\tpublic static inline var BACKSLASH = 220;\r\n\tpublic static inline var RIGHTBRACKET = 221;\r\n\tpublic static inline var QUOTE = 222;\r\n\t\r\n\tpublic static var capsLock (default, null):Bool;\r\n\tpublic static var numLock (default, null):Bool;\r\n\t\r\n\t\r\n\tpublic static function isAccessible ():Bool {\r\n\t\t\r\n\t\t// default browser security restrictions are always enforced\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static inline function __convertKeyCode (key:KeyCode):Int {\r\n\t\t\r\n\t\treturn switch (key) {\r\n\t\t\t\r\n\t\t\tcase BACKSPACE: Keyboard.BACKSPACE;\r\n\t\t\tcase TAB: Keyboard.TAB;\r\n\t\t\tcase RETURN: Keyboard.ENTER;\r\n\t\t\tcase ESCAPE: Keyboard.ESCAPE;\r\n\t\t\tcase SPACE: Keyboard.SPACE;\r\n\t\t\tcase EXCLAMATION: Keyboard.NUMBER_1;\r\n\t\t\tcase QUOTE: Keyboard.QUOTE;\r\n\t\t\tcase HASH: Keyboard.NUMBER_3;\r\n\t\t\tcase DOLLAR: Keyboard.NUMBER_4;\r\n\t\t\tcase PERCENT: Keyboard.NUMBER_5;\r\n\t\t\tcase AMPERSAND: Keyboard.NUMBER_7;\r\n\t\t\tcase SINGLE_QUOTE: Keyboard.QUOTE;\r\n\t\t\tcase LEFT_PARENTHESIS: Keyboard.NUMBER_9;\r\n\t\t\tcase RIGHT_PARENTHESIS: Keyboard.NUMBER_0;\r\n\t\t\tcase ASTERISK: Keyboard.NUMBER_8;\r\n\t\t\t//case PLUS: 0x2B;\r\n\t\t\tcase COMMA: Keyboard.COMMA;\r\n\t\t\tcase MINUS: Keyboard.MINUS;\r\n\t\t\tcase PERIOD: Keyboard.PERIOD;\r\n\t\t\tcase SLASH: Keyboard.SLASH;\r\n\t\t\tcase NUMBER_0: Keyboard.NUMBER_0;\r\n\t\t\tcase NUMBER_1: Keyboard.NUMBER_1;\r\n\t\t\tcase NUMBER_2: Keyboard.NUMBER_2;\r\n\t\t\tcase NUMBER_3: Keyboard.NUMBER_3;\r\n\t\t\tcase NUMBER_4: Keyboard.NUMBER_4;\r\n\t\t\tcase NUMBER_5: Keyboard.NUMBER_5;\r\n\t\t\tcase NUMBER_6: Keyboard.NUMBER_6;\r\n\t\t\tcase NUMBER_7: Keyboard.NUMBER_7;\r\n\t\t\tcase NUMBER_8: Keyboard.NUMBER_8;\r\n\t\t\tcase NUMBER_9: Keyboard.NUMBER_9;\r\n\t\t\tcase COLON: Keyboard.SEMICOLON;\r\n\t\t\tcase SEMICOLON: Keyboard.SEMICOLON;\r\n\t\t\tcase LESS_THAN: 60;\r\n\t\t\tcase EQUALS: Keyboard.EQUAL;\r\n\t\t\tcase GREATER_THAN: Keyboard.PERIOD;\r\n\t\t\tcase QUESTION: Keyboard.SLASH;\r\n\t\t\tcase AT: Keyboard.NUMBER_2;\r\n\t\t\tcase LEFT_BRACKET: Keyboard.LEFTBRACKET;\r\n\t\t\tcase BACKSLASH: Keyboard.BACKSLASH;\r\n\t\t\tcase RIGHT_BRACKET: Keyboard.RIGHTBRACKET;\r\n\t\t\tcase CARET: Keyboard.NUMBER_6;\r\n\t\t\tcase UNDERSCORE: Keyboard.MINUS;\r\n\t\t\tcase GRAVE: Keyboard.BACKQUOTE;\r\n\t\t\tcase A: Keyboard.A;\r\n\t\t\tcase B: Keyboard.B;\r\n\t\t\tcase C: Keyboard.C;\r\n\t\t\tcase D: Keyboard.D;\r\n\t\t\tcase E: Keyboard.E;\r\n\t\t\tcase F: Keyboard.F;\r\n\t\t\tcase G: Keyboard.G;\r\n\t\t\tcase H: Keyboard.H;\r\n\t\t\tcase I: Keyboard.I;\r\n\t\t\tcase J: Keyboard.J;\r\n\t\t\tcase K: Keyboard.K;\r\n\t\t\tcase L: Keyboard.L;\r\n\t\t\tcase M: Keyboard.M;\r\n\t\t\tcase N: Keyboard.N;\r\n\t\t\tcase O: Keyboard.O;\r\n\t\t\tcase P: Keyboard.P;\r\n\t\t\tcase Q: Keyboard.Q;\r\n\t\t\tcase R: Keyboard.R;\r\n\t\t\tcase S: Keyboard.S;\r\n\t\t\tcase T: Keyboard.T;\r\n\t\t\tcase U: Keyboard.U;\r\n\t\t\tcase V: Keyboard.V;\r\n\t\t\tcase W: Keyboard.W;\r\n\t\t\tcase X: Keyboard.X;\r\n\t\t\tcase Y: Keyboard.Y;\r\n\t\t\tcase Z: Keyboard.Z;\r\n\t\t\tcase DELETE: Keyboard.DELETE;\r\n\t\t\tcase CAPS_LOCK: Keyboard.CAPS_LOCK;\r\n\t\t\tcase F1: Keyboard.F1;\r\n\t\t\tcase F2: Keyboard.F2;\r\n\t\t\tcase F3: Keyboard.F3;\r\n\t\t\tcase F4: Keyboard.F4;\r\n\t\t\tcase F5: Keyboard.F5;\r\n\t\t\tcase F6: Keyboard.F6;\r\n\t\t\tcase F7: Keyboard.F7;\r\n\t\t\tcase F8: Keyboard.F8;\r\n\t\t\tcase F9: Keyboard.F9;\r\n\t\t\tcase F10: Keyboard.F10;\r\n\t\t\tcase F11: Keyboard.F11;\r\n\t\t\tcase F12: Keyboard.F12;\r\n\t\t\tcase PRINT_SCREEN: 301;\r\n\t\t\tcase SCROLL_LOCK: 145;\r\n\t\t\tcase PAUSE: Keyboard.BREAK;\r\n\t\t\tcase INSERT: Keyboard.INSERT;\r\n\t\t\tcase HOME: Keyboard.HOME;\r\n\t\t\tcase PAGE_UP: Keyboard.PAGE_UP;\r\n\t\t\tcase END: Keyboard.END;\r\n\t\t\tcase PAGE_DOWN: Keyboard.PAGE_DOWN;\r\n\t\t\tcase RIGHT: Keyboard.RIGHT;\r\n\t\t\tcase LEFT: Keyboard.LEFT;\r\n\t\t\tcase DOWN: Keyboard.DOWN;\r\n\t\t\tcase UP: Keyboard.UP;\r\n\t\t\tcase NUM_LOCK: Keyboard.NUMLOCK;\r\n\t\t\tcase NUMPAD_DIVIDE: Keyboard.NUMPAD_DIVIDE;\r\n\t\t\tcase NUMPAD_MULTIPLY: Keyboard.NUMPAD_MULTIPLY;\r\n\t\t\tcase NUMPAD_MINUS: Keyboard.NUMPAD_SUBTRACT;\r\n\t\t\tcase NUMPAD_PLUS: Keyboard.NUMPAD_ADD;\r\n\t\t\tcase NUMPAD_ENTER: Keyboard.NUMPAD_ENTER;\r\n\t\t\tcase NUMPAD_1: Keyboard.NUMPAD_1;\r\n\t\t\tcase NUMPAD_2: Keyboard.NUMPAD_2;\r\n\t\t\tcase NUMPAD_3: Keyboard.NUMPAD_3;\r\n\t\t\tcase NUMPAD_4: Keyboard.NUMPAD_4;\r\n\t\t\tcase NUMPAD_5: Keyboard.NUMPAD_5;\r\n\t\t\tcase NUMPAD_6: Keyboard.NUMPAD_6;\r\n\t\t\tcase NUMPAD_7: Keyboard.NUMPAD_7;\r\n\t\t\tcase NUMPAD_8: Keyboard.NUMPAD_8;\r\n\t\t\tcase NUMPAD_9: Keyboard.NUMPAD_9;\r\n\t\t\tcase NUMPAD_0: Keyboard.NUMPAD_0;\r\n\t\t\tcase NUMPAD_PERIOD: Keyboard.NUMPAD_DECIMAL;\r\n\t\t\tcase APPLICATION: 302;\r\n\t\t\t//case POWER: 0x40000066;\r\n\t\t\t//case NUMPAD_EQUALS: 0x40000067;\r\n\t\t\tcase F13: Keyboard.F13;\r\n\t\t\tcase F14: Keyboard.F14;\r\n\t\t\tcase F15: Keyboard.F15;\r\n\t\t\t//case F16: 0x4000006B;\r\n\t\t\t//case F17: 0x4000006C;\r\n\t\t\t//case F18: 0x4000006D;\r\n\t\t\t//case F19: 0x4000006E;\r\n\t\t\t//case F20: 0x4000006F;\r\n\t\t\t//case F21: 0x40000070;\r\n\t\t\t//case F22: 0x40000071;\r\n\t\t\t//case F23: 0x40000072;\r\n\t\t\t//case F24: 0x40000073;\r\n\t\t\t//case EXECUTE: 0x40000074;\r\n\t\t\t//case HELP: 0x40000075;\r\n\t\t\t//case MENU: 0x40000076;\r\n\t\t\t//case SELECT: 0x40000077;\r\n\t\t\t//case STOP: 0x40000078;\r\n\t\t\t//case AGAIN: 0x40000079;\r\n\t\t\t//case UNDO: 0x4000007A;\r\n\t\t\t//case CUT: 0x4000007B;\r\n\t\t\t//case COPY: 0x4000007C;\r\n\t\t\t//case PASTE: 0x4000007D;\r\n\t\t\t//case FIND: 0x4000007E;\r\n\t\t\t//case MUTE: 0x4000007F;\r\n\t\t\t//case VOLUME_UP: 0x40000080;\r\n\t\t\t//case VOLUME_DOWN: 0x40000081;\r\n\t\t\t//case NUMPAD_COMMA: 0x40000085;\r\n\t\t\t////case NUMPAD_EQUALS_AS400: 0x40000086;\r\n\t\t\t//case ALT_ERASE: 0x40000099;\r\n\t\t\t//case SYSTEM_REQUEST: 0x4000009A;\r\n\t\t\t//case CANCEL: 0x4000009B;\r\n\t\t\t//case CLEAR: 0x4000009C;\r\n\t\t\t//case PRIOR: 0x4000009D;\r\n\t\t\tcase RETURN2: Keyboard.ENTER;\r\n\t\t\t//case SEPARATOR: 0x4000009F;\r\n\t\t\t//case OUT: 0x400000A0;\r\n\t\t\t//case OPER: 0x400000A1;\r\n\t\t\t//case CLEAR_AGAIN: 0x400000A2;\r\n\t\t\t//case CRSEL: 0x400000A3;\r\n\t\t\t//case EXSEL: 0x400000A4;\r\n\t\t\t//case NUMPAD_00: 0x400000B0;\r\n\t\t\t//case NUMPAD_000: 0x400000B1;\r\n\t\t\t//case THOUSAND_SEPARATOR: 0x400000B2;\r\n\t\t\t//case DECIMAL_SEPARATOR: 0x400000B3;\r\n\t\t\t//case CURRENCY_UNIT: 0x400000B4;\r\n\t\t\t//case CURRENCY_SUBUNIT: 0x400000B5;\r\n\t\t\t//case NUMPAD_LEFT_PARENTHESIS: 0x400000B6;\r\n\t\t\t//case NUMPAD_RIGHT_PARENTHESIS: 0x400000B7;\r\n\t\t\t//case NUMPAD_LEFT_BRACE: 0x400000B8;\r\n\t\t\t//case NUMPAD_RIGHT_BRACE: 0x400000B9;\r\n\t\t\t//case NUMPAD_TAB: 0x400000BA;\r\n\t\t\t//case NUMPAD_BACKSPACE: 0x400000BB;\r\n\t\t\t//case NUMPAD_A: 0x400000BC;\r\n\t\t\t//case NUMPAD_B: 0x400000BD;\r\n\t\t\t//case NUMPAD_C: 0x400000BE;\r\n\t\t\t//case NUMPAD_D: 0x400000BF;\r\n\t\t\t//case NUMPAD_E: 0x400000C0;\r\n\t\t\t//case NUMPAD_F: 0x400000C1;\r\n\t\t\t//case NUMPAD_XOR: 0x400000C2;\r\n\t\t\t//case NUMPAD_POWER: 0x400000C3;\r\n\t\t\t//case NUMPAD_PERCENT: 0x400000C4;\r\n\t\t\t//case NUMPAD_LESS_THAN: 0x400000C5;\r\n\t\t\t//case NUMPAD_GREATER_THAN: 0x400000C6;\r\n\t\t\t//case NUMPAD_AMPERSAND: 0x400000C7;\r\n\t\t\t//case NUMPAD_DOUBLE_AMPERSAND: 0x400000C8;\r\n\t\t\t//case NUMPAD_VERTICAL_BAR: 0x400000C9;\r\n\t\t\t//case NUMPAD_DOUBLE_VERTICAL_BAR: 0x400000CA;\r\n\t\t\t//case NUMPAD_COLON: 0x400000CB;\r\n\t\t\t//case NUMPAD_HASH: 0x400000CC;\r\n\t\t\t//case NUMPAD_SPACE: 0x400000CD;\r\n\t\t\t//case NUMPAD_AT: 0x400000CE;\r\n\t\t\t//case NUMPAD_EXCLAMATION: 0x400000CF;\r\n\t\t\t//case NUMPAD_MEM_STORE: 0x400000D0;\r\n\t\t\t//case NUMPAD_MEM_RECALL: 0x400000D1;\r\n\t\t\t//case NUMPAD_MEM_CLEAR: 0x400000D2;\r\n\t\t\t//case NUMPAD_MEM_ADD: 0x400000D3;\r\n\t\t\t//case NUMPAD_MEM_SUBTRACT: 0x400000D4;\r\n\t\t\t//case NUMPAD_MEM_MULTIPLY: 0x400000D5;\r\n\t\t\t//case NUMPAD_MEM_DIVIDE: 0x400000D6;\r\n\t\t\t//case NUMPAD_PLUS_MINUS: 0x400000D7;\r\n\t\t\t//case NUMPAD_CLEAR: 0x400000D8;\r\n\t\t\t//case NUMPAD_CLEAR_ENTRY: 0x400000D9;\r\n\t\t\t//case NUMPAD_BINARY: 0x400000DA;\r\n\t\t\t//case NUMPAD_OCTAL: 0x400000DB;\r\n\t\t\tcase NUMPAD_DECIMAL: Keyboard.NUMPAD_DECIMAL;\r\n\t\t\t//case NUMPAD_HEXADECIMAL: 0x400000DD;\r\n\t\t\tcase LEFT_CTRL: Keyboard.CONTROL;\r\n\t\t\tcase LEFT_SHIFT: Keyboard.SHIFT;\r\n\t\t\tcase LEFT_ALT: Keyboard.ALTERNATE;\r\n\t\t\tcase LEFT_META: Keyboard.COMMAND;\r\n\t\t\tcase RIGHT_CTRL: Keyboard.CONTROL;\r\n\t\t\tcase RIGHT_SHIFT: Keyboard.SHIFT;\r\n\t\t\tcase RIGHT_ALT: Keyboard.ALTERNATE;\r\n\t\t\tcase RIGHT_META: Keyboard.COMMAND;\r\n\t\t\t//case MODE: 0x40000101;\r\n\t\t\t//case AUDIO_NEXT: 0x40000102;\r\n\t\t\t//case AUDIO_PREVIOUS: 0x40000103;\r\n\t\t\t//case AUDIO_STOP: 0x40000104;\r\n\t\t\t//case AUDIO_PLAY: 0x40000105;\r\n\t\t\t//case AUDIO_MUTE: 0x40000106;\r\n\t\t\t//case MEDIA_SELECT: 0x40000107;\r\n\t\t\t//case WWW: 0x40000108;\r\n\t\t\t//case MAIL: 0x40000109;\r\n\t\t\t//case CALCULATOR: 0x4000010A;\r\n\t\t\t//case COMPUTER: 0x4000010B;\r\n\t\t\t//case APP_CONTROL_SEARCH: 0x4000010C;\r\n\t\t\t//case APP_CONTROL_HOME: 0x4000010D;\r\n\t\t\t//case APP_CONTROL_BACK: 0x4000010E;\r\n\t\t\t//case APP_CONTROL_FORWARD: 0x4000010F;\r\n\t\t\t//case APP_CONTROL_STOP: 0x40000110;\r\n\t\t\t//case APP_CONTROL_REFRESH: 0x40000111;\r\n\t\t\t//case APP_CONTROL_BOOKMARKS: 0x40000112;\r\n\t\t\t//case BRIGHTNESS_DOWN: 0x40000113;\r\n\t\t\t//case BRIGHTNESS_UP: 0x40000114;\r\n\t\t\t//case DISPLAY_SWITCH: 0x40000115;\r\n\t\t\t//case BACKLIGHT_TOGGLE: 0x40000116;\r\n\t\t\t//case BACKLIGHT_DOWN: 0x40000117;\r\n\t\t\t//case BACKLIGHT_UP: 0x40000118;\r\n\t\t\t//case EJECT: 0x40000119;\r\n\t\t\t//case SLEEP: 0x4000011A;\r\n\t\t\tdefault: cast key;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function __getCharCode (key:Int, shift:Bool = false):Int {\r\n\t\t\r\n\t\tif (!shift) {\r\n\t\t\t\r\n\t\t\tswitch (key) {\r\n\t\t\t\t\r\n\t\t\t\tcase Keyboard.BACKSPACE: return 8;\r\n\t\t\t\tcase Keyboard.TAB: return 9;\r\n\t\t\t\tcase Keyboard.ENTER: return 13;\r\n\t\t\t\tcase Keyboard.ESCAPE: return 27;\r\n\t\t\t\tcase Keyboard.SPACE: return 32;\r\n\t\t\t\tcase Keyboard.SEMICOLON: return 59;\r\n\t\t\t\tcase Keyboard.EQUAL: return 61;\r\n\t\t\t\tcase Keyboard.COMMA: return 44;\r\n\t\t\t\tcase Keyboard.MINUS: return 45;\r\n\t\t\t\tcase Keyboard.PERIOD: return 46;\r\n\t\t\t\tcase Keyboard.SLASH: return 47;\r\n\t\t\t\tcase Keyboard.BACKQUOTE: return 96;\r\n\t\t\t\tcase Keyboard.LEFTBRACKET: return 91;\r\n\t\t\t\tcase Keyboard.BACKSLASH: return 92;\r\n\t\t\t\tcase Keyboard.RIGHTBRACKET: return 93;\r\n\t\t\t\tcase Keyboard.QUOTE: return 39;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (key >= Keyboard.NUMBER_0 && key <= Keyboard.NUMBER_9) {\r\n\t\t\t\t\r\n\t\t\t\treturn key - Keyboard.NUMBER_0 + 48;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (key >= Keyboard.A && key <= Keyboard.Z) {\r\n\t\t\t\t\r\n\t\t\t\treturn key - Keyboard.A + 97;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tswitch (key) {\r\n\t\t\t\t\r\n\t\t\t\tcase Keyboard.NUMBER_0: return 41;\r\n\t\t\t\tcase Keyboard.NUMBER_1: return 33;\r\n\t\t\t\tcase Keyboard.NUMBER_2: return 64;\r\n\t\t\t\tcase Keyboard.NUMBER_3: return 35;\r\n\t\t\t\tcase Keyboard.NUMBER_4: return 36;\r\n\t\t\t\tcase Keyboard.NUMBER_5: return 37;\r\n\t\t\t\tcase Keyboard.NUMBER_6: return 94;\r\n\t\t\t\tcase Keyboard.NUMBER_7: return 38;\r\n\t\t\t\tcase Keyboard.NUMBER_8: return 42;\r\n\t\t\t\tcase Keyboard.NUMBER_9: return 40;\r\n\t\t\t\tcase Keyboard.SEMICOLON: return 58;\r\n\t\t\t\tcase Keyboard.EQUAL: return 43;\r\n\t\t\t\tcase Keyboard.COMMA: return 60;\r\n\t\t\t\tcase Keyboard.MINUS: return 95;\r\n\t\t\t\tcase Keyboard.PERIOD: return 62;\r\n\t\t\t\tcase Keyboard.SLASH: return 63;\r\n\t\t\t\tcase Keyboard.BACKQUOTE: return 126;\r\n\t\t\t\tcase Keyboard.LEFTBRACKET: return 123;\r\n\t\t\t\tcase Keyboard.BACKSLASH: return 124;\r\n\t\t\t\tcase Keyboard.RIGHTBRACKET: return 125;\r\n\t\t\t\tcase Keyboard.QUOTE: return 34;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (key >= Keyboard.A && key <= Keyboard.Z) {\r\n\t\t\t\t\r\n\t\t\t\treturn key - Keyboard.A + 65;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (key >= Keyboard.NUMPAD_0 && key <= Keyboard.NUMPAD_9) {\r\n\t\t\t\r\n\t\t\treturn key - Keyboard.NUMPAD_0 + 48;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tswitch (key) {\r\n\t\t\t\r\n\t\t\tcase Keyboard.NUMPAD_MULTIPLY: return 42;\r\n\t\t\tcase Keyboard.NUMPAD_ADD: return 43;\r\n\t\t\tcase Keyboard.NUMPAD_ENTER: return 44;\r\n\t\t\tcase Keyboard.NUMPAD_DECIMAL: return 45;\r\n\t\t\tcase Keyboard.NUMPAD_DIVIDE: return 46;\r\n\t\t\tcase Keyboard.DELETE: return 127;\r\n\t\t\tcase Keyboard.ENTER: return 13;\r\n\t\t\tcase Keyboard.BACKSPACE: return 8;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static inline function __getKeyLocation (key:KeyCode):KeyLocation {\r\n\t\t\r\n\t\treturn switch (key) {\r\n\t\t\t\r\n\t\t\tcase LEFT_CTRL, LEFT_SHIFT, LEFT_ALT, LEFT_META: KeyLocation.LEFT;\r\n\t\t\tcase RIGHT_CTRL, RIGHT_SHIFT, RIGHT_ALT, RIGHT_META: KeyLocation.RIGHT;\r\n\t\t\tcase NUMPAD_DIVIDE, NUMPAD_MULTIPLY, NUMPAD_MINUS, NUMPAD_PLUS, NUMPAD_ENTER, NUMPAD_1, NUMPAD_2, NUMPAD_3, NUMPAD_4, NUMPAD_5, NUMPAD_6, NUMPAD_7, NUMPAD_8, NUMPAD_9, NUMPAD_0, NUMPAD_PERIOD, NUMPAD_DECIMAL: KeyLocation.NUM_PAD;\r\n\t\t\tdefault: KeyLocation.STANDARD;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Keyboard = openfl._legacy.ui.Keyboard;\r\n#end","package openfl.ui; #if (!openfl_legacy || lime_hybrid)\r\n\r\n\r\nimport lime.ui.Mouse in LimeMouse;\r\nimport openfl.Lib;\r\n\r\n@:access(openfl.display.Stage)\r\n\r\n\r\n@:final class Mouse {\r\n\t\r\n\t\r\n\tpublic static function hide ():Void {\r\n\t\t\r\n\t\tLimeMouse.hide ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function show ():Void {\r\n\t\t\r\n\t\tLimeMouse.show ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Mouse = openfl._legacy.ui.Mouse;\r\n#end","package openfl.ui; #if !openfl_legacy\r\n\r\n\r\nimport openfl.ui.MultitouchInputMode;\r\nimport openfl.Lib;\r\nimport openfl.Vector;\r\n\r\n#if (js && html5)\r\nimport js.Browser;\r\n#end\r\n\r\n\r\n@:final class Multitouch {\r\n\t\r\n\t\r\n\tpublic static var inputMode (get, set):MultitouchInputMode;\r\n\tpublic static var maxTouchPoints (default, null):Int;\r\n\tpublic static var supportedGestures (default, null):Vector<String>;\r\n\tpublic static var supportsGestureEvents (default, null):Bool;\r\n\tpublic static var supportsTouchEvents (get, null):Bool;\r\n\t\r\n\t\r\n\tpublic static function __init__ () {\r\n\t\t\r\n\t\tmaxTouchPoints = 2;\r\n\t\tsupportedGestures = null;\r\n\t\tsupportsGestureEvents = false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate static function get_inputMode ():MultitouchInputMode {\r\n\t\t\r\n\t\treturn MultitouchInputMode.TOUCH_POINT;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function set_inputMode (inMode:MultitouchInputMode):MultitouchInputMode {\r\n\t\t\r\n\t\tif (inMode == MultitouchInputMode.GESTURE) {\r\n\t\t\t\r\n\t\t\treturn inputMode;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// @todo set input mode\r\n\t\treturn inMode;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_supportsTouchEvents ():Bool {\r\n\t\t\r\n\t\t#if (js && html5)\r\n\t\tif (untyped __js__ (\"('ontouchstart' in document.documentElement) || (window.DocumentTouch && document instanceof DocumentTouch)\")) {\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t}\r\n\t\t#elseif (cpp)\r\n\t\treturn true;\r\n\t\t#end\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef Multitouch = openfl._legacy.ui.Multitouch;\r\n#end","package openfl.ui;\r\n\r\n\r\n@:enum abstract MultitouchInputMode(Null<Int>) {\r\n\t\r\n\tpublic var GESTURE = 0;\r\n\tpublic var NONE = 1;\r\n\tpublic var TOUCH_POINT = 2;\r\n\t\r\n\t@:from private static function fromString (value:String):MultitouchInputMode {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"gesture\": GESTURE;\r\n\t\t\tcase \"none\": NONE;\r\n\t\t\tcase \"touchPoint\": TOUCH_POINT;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase MultitouchInputMode.GESTURE: \"gesture\";\r\n\t\t\tcase MultitouchInputMode.NONE: \"none\";\r\n\t\t\tcase MultitouchInputMode.TOUCH_POINT: \"touchPoint\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}","package openfl.utils;\r\n\r\n\r\nimport haxe.ds.StringMap;\r\nimport openfl._internal.aglsl.assembler.FS;\r\nimport openfl._internal.aglsl.assembler.Part;\r\nimport openfl._internal.aglsl.assembler.Opcode;\r\nimport openfl._internal.aglsl.assembler.OpcodeMap;\r\nimport openfl._internal.aglsl.assembler.RegMap;\r\nimport openfl._internal.aglsl.assembler.Sampler;\r\nimport openfl._internal.aglsl.assembler.SamplerMap;\r\nimport openfl.errors.Error;\r\n\r\n\r\nclass AGALMiniAssembler {\r\n\t\r\n\t\r\n\tpublic var cur:Part;\r\n\tpublic var r:StringMap<Part>;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tthis.r = new StringMap<Part> ();\r\n\t\tthis.cur = new Part ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function addHeader (partname:String, version:Int) {\r\n\t\t\r\n\t\tif (version == 0) {\r\n\t\t\t\r\n\t\t\tversion = 1;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.r.exists (partname)) {\r\n\t\t\t\r\n\t\t\tthis.r.set (partname, new Part (partname, version));\r\n\t\t\tthis.emitHeader (this.r.get (partname));\r\n\t\t\t\r\n\t\t} else if (this.r.get (partname).version != Std.int (version)) {\r\n\t\t\t\r\n\t\t\tthrow \"Multiple versions for part \" + partname;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.cur = this.r.get (partname);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function assemble (source:String, ext_part = null, ext_version = null):Dynamic {\r\n\t\t\r\n\t\tif (ext_version == 0) {\r\n\t\t\t\r\n\t\t\text_version = 1;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (ext_part != null) {\r\n\t\t\t\r\n\t\t\tthis.addHeader (ext_part, ext_version);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar reg = ~/[\\n\\r]+/g;\r\n\t\tvar lines = reg.split (source); // handle breaks, then split into lines        \r\n\t\t\r\n\t\tvar i:UInt;\r\n\t\t\r\n\t\tfor (i in 0...lines.length) {\r\n\t\t\t\r\n\t\t\tthis.processLine (lines[i], i);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn this.r;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function emitDest (pr:Part, token:String, opdest:String):Bool {\r\n\t\t\r\n\t\tvar reg = getGroupMatches (~/([fov]?[tpocidavs])(\\d*)(\\.[xyzw]{1,4})?/i, token, 3); // g1: regname, g2:regnum, g3:mask\r\n\t\t\r\n\t\tif (RegMap.map.get (reg[1]) == null) {\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (Std.parseInt (reg[2]) == null) {\r\n\t\t\t\r\n\t\t\treg[2] = \"0\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar em = { num: reg[2] != null ? reg[2] : \"0\", code: RegMap.map.get (reg[1]).code, mask: this.stringToMask (reg[3]) };\r\n\t\t\r\n\t\tpr.data.writeShort (Std.parseInt (em.num));\r\n\t\tpr.data.writeByte (em.mask);\r\n\t\tpr.data.writeByte (em.code);\r\n\t\t\r\n\t\treturn true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function emitHeader (pr:Part):Void {\r\n\t\t\r\n\t\tpr.data.writeByte (0xa0); // tag version\r\n\t\tpr.data.writeUnsignedInt (pr.version);\r\n\t\t \r\n\t\tif (pr.version >= 0x10) {\r\n\t\t\t\r\n\t\t\tpr.data.writeByte (0); // align, for higher versions\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tpr.data.writeByte (0xa1); // tag program id\r\n\t\t\r\n\t\tswitch (pr.name) {\r\n\t\t\t\r\n\t\t\tcase \"fragment\": pr.data.writeByte (1);\r\n\t\t\tcase \"vertex\": pr.data.writeByte (0);\r\n\t\t\tcase \"cpu\": pr.data.writeByte (2);\r\n\t\t\tdefault: pr.data.writeByte (0xff); // unknown/comment\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function emitOpcode (pr:Part, opcode) {\r\n\t\t\r\n\t\tpr.data.writeUnsignedInt (opcode);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function emitSampler (pr:Part, token:String, opsrc:FS, opts:Array<String>):Bool {\r\n\t\t\r\n\t\tvar reg = getGroupMatches (~/fs(\\d*)/i, token, 1); // g1:regnum\r\n\t\t\r\n\t\tif (reg.length < 1) {\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tpr.data.writeShort (Std.parseInt (reg[1]));\r\n\t\tpr.data.writeByte (0); // bias\r\n\t\tpr.data.writeByte (0);\r\n\t\t/*\r\n\t\tpr.data.writeByte (0x5); \r\n\t\tpr.data.writeByte (0); // readmode, dim\r\n\t\tpr.data.writeByte (0); // special, wrap\r\n\t\tpr.data.writeByte (0); // mip, filter\r\n\t\t*/\r\n\t\tvar samplerbits:UInt = 0x5;\r\n\t\tvar sampleroptset:UInt = 0;\r\n\t\t\r\n\t\tfor (i in 0...opts.length) {\r\n\t\t\t\r\n\t\t\tvar o:Sampler = SamplerMap.map.get (opts[i].toLowerCase ());\r\n\t\t\t\r\n\t\t\tif (o != null) {\r\n\t\t\t\t\r\n\t\t\t\tif (((sampleroptset >> o.shift) & o.mask) != 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\ttrace (\"Warning, duplicate sampler option\");\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tsampleroptset |= o.mask << o.shift;\r\n\t\t\t\tsamplerbits &= ~(o.mask << o.shift);\r\n\t\t\t\tsamplerbits |= o.value << o.shift;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t// todo bias\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tpr.data.writeUnsignedInt (samplerbits);             \r\n\t \t//pr.data.writeUnsignedInt (0x5000000);\r\n        //var bC = 0;\r\n        //pr.data.position = 0;\r\n        //\r\n        //while (bC++ < pr.data.length) {\r\n        //\t\r\n        //\ttrace (\"byte-\" + bC + \"=0x\" + StringTools.hex (pr.data.readUnsignedByte (), 1).toLowerCase ());\r\n        //\t\r\n        //}\r\n        \r\n\t \treturn true;\r\n\t \t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function emitSource (pr:Part, token:String, opsrc):Bool {\r\n\t\t\r\n\t\t//trace (\"emitSource:\" + token);\r\n\t\t\r\n\t\tvar indexed = getGroupMatches (~/vc\\[(v[tcai])(\\d+)\\.([xyzw])([\\+\\-]\\d+)?\\](\\.[xyzw]{1,4})?/i, token, 5); // g1: indexregname, g2:indexregnum, g3:select, [g4:offset], [g5:swizzle]\r\n\t\tvar reg;\r\n\t\t\r\n\t\tif (indexed.length > 0) {\r\n\t\t\t\r\n\t\t\tif (RegMap.map.get (indexed[1]) == null) {\r\n\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar selindex = { x: 0, y: 1, z: 2, w: 3 };\r\n\t\t\tvar em:Dynamic = { num: Std.parseInt (indexed[2]) | 0, code: RegMap.map.get (indexed[1]).code, swizzle: this.stringToSwizzle (indexed[5]), select: Reflect.getProperty (selindex, indexed[3]), offset: Std.parseInt (indexed[4]) | 0 };\r\n\t\t\t\r\n\t\t\tpr.data.writeShort (em.num);\r\n\t\t\tpr.data.writeByte (em.offset);\r\n\t\t\tpr.data.writeByte (em.swizzle);\r\n\t\t\tpr.data.writeByte (0x1); // constant reg\r\n\t\t\tpr.data.writeByte (em.code);\r\n\t\t\tpr.data.writeByte (em.select);\r\n\t\t\tpr.data.writeByte (1 << 7);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treg = getGroupMatches (~/([fov]?[tpocidavs])(\\d*)(\\.[xyzw]{1,4})?/i, token, 3); // g1: regname, g2:regnum, g3:swizzle\r\n\t\t\t\r\n\t\t\tif (RegMap.map.get (reg[1]) == null) {\r\n\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (reg.length < 4) reg.push (\"\");\r\n\t\t\tvar em:Dynamic = { num: Std.parseInt (reg[2]) | 0, code: RegMap.map.get (reg[1]).code, swizzle: this.stringToSwizzle (reg[3]) };\r\n\t\t\t\r\n\t\t\tpr.data.writeShort (em.num);\r\n\t\t\tpr.data.writeByte (0);\r\n\t\t\tpr.data.writeByte (em.swizzle);\r\n\t\t\tpr.data.writeByte (em.code);\r\n\t\t\tpr.data.writeByte (0);\r\n\t\t\tpr.data.writeByte (0);\r\n\t\t\tpr.data.writeByte (0);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function emitZeroDword (pr:Part) {\r\n\t\t\r\n\t\tpr.data.writeUnsignedInt (0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function emitZeroQword (pr) {\r\n\t\t\r\n\t\tpr.data.writeUnsignedInt (0);\r\n\t\tpr.data.writeUnsignedInt (0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getGroupMatches (ereg:EReg, text:String, groupCount:UInt = 0):Array<String> {\r\n\t\t\r\n\t\tvar matches:Array<String> = [];\r\n\t\tif (!ereg.match (text)) return matches;\r\n\t\t\r\n\t\tvar m:UInt = 0;\r\n\t\tvar t = null;\r\n\t\tvar completed:Bool = false;\r\n\t\t\r\n\t\twhile (!completed && (t = ereg.matched (m++)) != null) {\r\n\t\t\t\r\n\t\t\tmatches.push (t);\r\n\t\t\tif (groupCount != 0 && m > groupCount) completed = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn matches;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getMatches (ereg:EReg, text:String):Array<String> {\r\n\t\t\r\n\t\tvar matches:Array<String> = [];\r\n\t\t\r\n\t\twhile (ereg.match (text)) {\r\n\t\t\t\r\n\t\t\tvar t = ereg.matched (1);\r\n\t\t\tmatches.push (t);\r\n\t\t\ttext = ereg.matchedRight ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn matches;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function processLine (line:String, linenr:UInt):Void {\r\n\t\t\r\n\t\tvar startcomment = line.indexOf (\"//\");  // remove comments\r\n\t\t\r\n\t\tif (startcomment != -1) {\r\n\t\t\t\r\n\t\t\tline = line.substring (0, startcomment);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar r = ~/^\\s+|\\s+$/g;\r\n\t\tline = r.replace (line, \"\"); // remove outer space\r\n\t\t\r\n\t\tif (!(line.length > 0 )) {\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tr = ~/<.*>/g;\r\n\t\tvar optsb = r.match (line); // split of options part <*> if there\r\n\t\tvar opts = null;\r\n\t\t\r\n\t\tif (optsb) {\r\n\t\t\t\r\n\t\t\tvar optsi = r.matchedPos ().pos;\r\n\t\t\topts = getMatches (~/([\\w\\.\\-\\+]+)/gi, line.substring (optsi));\r\n\t\t\tline = line.substring (0, optsi);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// get opcode/command\r\n\t\tvar tokens = getMatches (~/([\\w\\.\\+\\[\\]]+)/gi, line);\t\t\t            \r\n\t\tif (tokens.length == 0) {\r\n\t\t\t\r\n\t\t\tif (line.length >= 3) {\r\n\t\t\t\t\r\n\t\t\t\ttrace (\"Warning: bad line \" + linenr + \": \" + line);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t//trace ( linenr, line, cur, tokens ); \r\n\t\tswitch (tokens[0]) {\r\n\t\t\t\r\n\t\t\tcase \"part\":\r\n\t\t\t\t\r\n\t\t\t\tthis.addHeader (tokens[1], Std.parseInt (tokens[2]));\r\n\t\t\t\r\n\t\t\tcase \"endpart\":\r\n\t\t\t\t\r\n\t\t\t\tif (this.cur == null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tthrow \"Unexpected endpart\";\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.cur.data.position = 0;\r\n\t\t\t\tthis.cur = null; \r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t\t\tif (this.cur == null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\ttrace (\"Warning: bad line \" + linenr + \": \" + line + \" (Outside of any part definition)\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (this.cur.name == \"comment\") {\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar op:Opcode = OpcodeMap.map.get (tokens[0]);\r\n\t\t\t\t\r\n\t\t\t\tif (op == null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tthrow \"Bad opcode \" + tokens[0] + \" \" + linenr + \": \" + line;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.emitOpcode (this.cur, op.opcode);\r\n\t\t\t\tvar ti:Int = 1;\r\n\t\t\t\t\r\n\t\t\t\tif (op.dest != null && op.dest != \"none\") {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!this.emitDest (this.cur, tokens[ti++], op.dest)) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthrow \"Bad destination register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.emitZeroDword (this.cur);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (op.a != null && op.a.format != \"none\") {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!this.emitSource (this.cur, tokens[ti++], op.a)) throw \"Bad source register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.emitZeroQword (this.cur);\r\n\t\t\t\t\t \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (op.b != null && op.b.format != \"none\") {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (op.b.format == \"sampler\") {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!this.emitSampler (this.cur, tokens[ti++], op.b, opts)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthrow \"Bad sampler register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!this.emitSource (this.cur, tokens[ti++], op.b)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthrow \"Bad source register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.emitZeroQword (this.cur);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function stringToMask (s:String = null):UInt {\r\n\t\t\r\n\t\tif (s == null) return 0xf;\r\n\t\t\r\n\t\tvar r = 0;\r\n\t\tif (s.indexOf (\"x\") != -1) r|=1;\r\n\t\tif (s.indexOf (\"y\") != -1) r|=2;\r\n\t\tif (s.indexOf (\"z\") != -1) r|=4;\r\n\t\tif (s.indexOf (\"w\") != -1) r|=8;\r\n\t\treturn r;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function stringToSwizzle (s:String) {\r\n\t\t\r\n\t\tif (s == \"\") {\r\n\t\t\t\r\n\t\t\treturn 0xe4;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar chartoindex = { x: 0, y: 1, z: 2, w: 3 };\r\n\t\tvar sw = 0;\r\n\t\t\r\n\t\tif (s.charAt (0) != \".\") {\r\n\t\t\t\r\n\t\t\tthrow \"Missing . for swizzle\";\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (s.length > 1) {\r\n\t\t\t\r\n\t\t\tsw |= Reflect.field (chartoindex, s.charAt (1));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (s.length > 2) {\r\n\t\t\t\r\n\t\t\tsw |= Reflect.field (chartoindex, s.charAt (2)) << 2;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tsw |= (sw & 3) << 2;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (s.length > 3) {\r\n\t\t\t\r\n\t\t\tsw |= Reflect.field (chartoindex, s.charAt (3)) << 4;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tsw |= (sw & (3 << 2)) << 2;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (s.length > 4) {\r\n\t\t\t\r\n\t\t\tsw |= Reflect.field (chartoindex, s.charAt (4)) << 6;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tsw |= (sw & (3 << 4)) << 2;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn sw;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package openfl.utils; #if (!openfl_legacy || lime_hybrid)\r\n\r\n\r\nimport haxe.io.Bytes;\r\nimport haxe.io.BytesData;\r\nimport lime.utils.ArrayBuffer;\r\nimport lime.utils.Bytes in LimeBytes;\r\nimport lime.utils.LZMA;\r\nimport openfl.errors.EOFError;\r\n\r\n#if sys\r\nimport haxe.zip.Compress;\r\nimport haxe.zip.Uncompress;\r\n#elseif format\r\nimport format.tools.Inflate;\r\n#end\r\n\r\n@:access(haxe.io.Bytes)\r\n@:access(openfl.utils.ByteArrayData)\r\n@:forward(bytesAvailable, endian, objectEncoding, position, clear, compress, deflate, inflate, readBoolean, readByte, readBytes, readDouble, readFloat, readInt, readMultiByte, readShort, readUnsignedByte, readUnsignedInt, readUnsignedShort, readUTF, readUTFBytes, toString, uncompress, writeBoolean, writeByte, writeBytes, writeDouble, writeFloat, writeInt, writeMultiByte, writeShort, writeUnsignedInt, writeUTF, writeUTFBytes)\r\n\r\n\r\nabstract ByteArray(ByteArrayData) from ByteArrayData to ByteArrayData {\r\n\t\r\n\t\r\n\tpublic static var defaultObjectEncoding:UInt;\r\n\t\r\n\tpublic var length (get, set):Int;\r\n\t\r\n\t\r\n\tpublic inline function new (length:Int = 0):Void {\r\n\t\t\r\n\t\t#if (display || flash)\r\n\t\tthis = new ByteArrayData ();\r\n\t\tthis.length = length;\r\n\t\t#else\r\n\t\tthis = new ByteArrayData (length);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:arrayAccess @:noCompletion private inline function get (index:Int):Int {\r\n\t\t\r\n\t\t#if display\r\n\t\treturn 0;\r\n\t\t#elseif flash\r\n\t\treturn this[index];\r\n\t\t#else\r\n\t\treturn this.get (index);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:arrayAccess @:noCompletion private inline function set (index:Int, value:Int):Int {\r\n\t\t\r\n\t\t#if display\r\n\t\t#elseif flash\r\n\t\tthis[index] = value;\r\n\t\t#else\r\n\t\tthis.set (index, value);\r\n\t\t#end\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:from @:noCompletion public static function fromArrayBuffer (buffer:ArrayBuffer):ByteArray {\r\n\t\t\r\n\t\t#if display\r\n\t\treturn null;\r\n\t\t#elseif js\r\n\t\treturn ByteArrayData.fromBytes (Bytes.ofData (buffer));\r\n\t\t#elseif flash\r\n\t\treturn (buffer:Bytes).getData ();\r\n\t\t#else\r\n\t\treturn ByteArrayData.fromBytes ((buffer:Bytes));\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:from @:noCompletion public static function fromBytes (bytes:Bytes):ByteArray {\r\n\t\t\r\n\t\t#if display\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\tif (Std.is (bytes, ByteArrayData)) {\r\n\t\t\t\r\n\t\t\treturn cast bytes;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t#if flash\r\n\t\t\treturn bytes.getData ();\r\n\t\t\t#else\r\n\t\t\treturn ByteArrayData.fromBytes (bytes);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:from @:noCompletion public static function fromBytesData (bytesData:BytesData):ByteArray {\r\n\t\t\r\n\t\t#if display\r\n\t\treturn null;\r\n\t\t#elseif flash\r\n\t\treturn bytesData;\r\n\t\t#else\r\n\t\treturn ByteArrayData.fromBytes (Bytes.ofData (bytesData));\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:to @:noCompletion public static function toArrayBuffer (byteArray:ByteArray):ArrayBuffer {\r\n\t\t\r\n\t\t#if display\r\n\t\treturn null;\r\n\t\t#elseif js\r\n\t\treturn (byteArray:ByteArrayData).getData ();\r\n\t\t#elseif flash\r\n\t\treturn Bytes.ofData (byteArray);\r\n\t\t#else\r\n\t\treturn (byteArray:ByteArrayData);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:to @:noCompletion private static function toBytes (byteArray:ByteArray):Bytes {\r\n\t\t\r\n\t\t#if display\r\n\t\treturn null;\r\n\t\t#elseif flash\r\n\t\treturn Bytes.ofData (byteArray);\r\n\t\t#else\r\n\t\treturn (byteArray:ByteArrayData);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if !display\r\n\t@:to @:noCompletion private static function toBytesData (byteArray:ByteArray):BytesData {\r\n\t\t\r\n\t\t#if display\r\n\t\treturn null;\r\n\t\t#elseif flash\r\n\t\treturn byteArray;\r\n\t\t#else\r\n\t\treturn (byteArray:ByteArrayData).getData ();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t@:to @:noCompletion private static function toLimeBytes (byteArray:ByteArray):LimeBytes {\r\n\t\t\r\n\t\t#if display\r\n\t\treturn null;\r\n\t\t#elseif flash\r\n\t\treturn LimeBytes.ofData (byteArray);\r\n\t\t#else\r\n\t\treturn new LimeBytes (byteArray.length, (byteArray:ByteArrayData).getData ());\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t@:noCompletion private function get_length ():Int {\r\n\t\t\r\n\t\t#if display\r\n\t\treturn 0;\r\n\t\t#elseif flash\r\n\t\treturn this.length;\r\n\t\t#else\r\n\t\treturn this.__length;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function set_length (value:Int):Int {\r\n\t\t\r\n\t\t#if display\r\n\t\t#elseif flash\r\n\t\tthis.length = value;\r\n\t\t#else\r\n\t\tif (value > 0) {\r\n\t\t\t\r\n\t\t\tthis.__resize (value);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.__length = value;\r\n\t\t#end\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#if (!display && !flash)\r\n\r\n\r\n@:autoBuild(lime.Assets.embedByteArray())\r\n\r\n@:noCompletion @:dox(hide) class ByteArrayData extends Bytes implements IDataInput implements IDataOutput {\r\n\t\r\n\t\r\n\tpublic var bytesAvailable (get, never):UInt;\r\n\tpublic var endian (get, set):Endian;\r\n\tpublic var objectEncoding:UInt;\r\n\tpublic var position:Int;\r\n\t\r\n\tprivate var __endian:Endian;\r\n\tprivate var __length:Int;\r\n\t\r\n\t\r\n\tpublic function new (length:Int = 0) {\r\n\t\t\r\n\t\tvar bytes = Bytes.alloc (length);\r\n\t\t\r\n\t\t#if js\r\n\t\tsuper (bytes.b.buffer);\r\n\t\t#else\r\n\t\tsuper (length, bytes.b);\r\n\t\t#end\r\n\t\t\r\n\t\t__length = length;\r\n\t\tendian = BIG_ENDIAN;\r\n\t\tposition = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function clear ():Void {\r\n\t\t\r\n\t\t__length = 0;\r\n\t\tposition = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function compress (algorithm:CompressionAlgorithm = null):Void {\r\n\t\t\r\n\t\t#if sys\r\n\t\t\r\n\t\tif (algorithm == null) {\r\n\t\t\t\r\n\t\t\talgorithm = CompressionAlgorithm.ZLIB;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (algorithm == CompressionAlgorithm.LZMA) {\r\n\t\t\t\r\n\t\t\t__setData (LZMA.encode (this));\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar windowBits = switch (algorithm) {\r\n\t\t\t\t\r\n\t\t\t\tcase DEFLATE: -15;\r\n\t\t\t\t//case GZIP: 31;\r\n\t\t\t\tdefault: 15;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#if enable_deflate\r\n\t\t\t__setData (Compress.run (this, 8, windowBits));\r\n\t\t\t#else\r\n\t\t\t__setData (Compress.run (this, 8));\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\t__length = this.length;\r\n\t\tposition = __length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function deflate ():Void {\r\n\t\t\r\n\t\tcompress (CompressionAlgorithm.DEFLATE);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function fromBytes (bytes:Bytes):ByteArrayData {\r\n\t\t\r\n\t\tvar result = new ByteArrayData ();\r\n\t\tresult.__fromBytes (bytes);\r\n\t\treturn result;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function inflate () {\r\n\t\t\r\n\t\tuncompress (CompressionAlgorithm.DEFLATE);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readBoolean ():Bool {\r\n\t\t\r\n\t\tif (position < length) {\r\n\t\t\t\r\n\t\t\treturn (get (position++) != 0);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tthrow new EOFError ();\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readByte ():Int {\r\n\t\t\r\n\t\tvar value = readUnsignedByte ();\r\n\t\t\r\n\t\tif (value & 0x80 != 0) {\r\n\t\t\t\r\n\t\t\treturn value - 0x100;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn value;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readBytes (bytes:ByteArray, offset:Int = 0, length:Int = 0):Void {\r\n\t\t\r\n\t\tif (length == 0) length = __length - position;\r\n\t\t\r\n\t\tif (position + length > __length) {\r\n\t\t\t\r\n\t\t\tthrow new EOFError ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif ((bytes:ByteArrayData).__length < offset + length) {\r\n\t\t\t\r\n\t\t\t(bytes:ByteArrayData).__resize (offset + length);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t(bytes:ByteArrayData).blit (offset, this, position, length);\r\n\t\tposition += length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readDouble ():Float {\r\n\t\t\r\n\t\tif (position + 8 > __length) {\r\n\t\t\t\r\n\t\t\tthrow new EOFError ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tposition += 8;\r\n\t\treturn getDouble (position - 8);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readFloat ():Float {\r\n\t\t\r\n\t\tif (position + 4 > __length) {\r\n\t\t\t\r\n\t\t\tthrow new EOFError ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tposition += 4;\r\n\t\treturn getFloat (position - 4);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readInt ():Int {\r\n\t\t\r\n\t\tvar ch1 = readUnsignedByte ();\r\n\t\tvar ch2 = readUnsignedByte ();\r\n\t\tvar ch3 = readUnsignedByte ();\r\n\t\tvar ch4 = readUnsignedByte ();\r\n\t\t\r\n\t\tif (endian == LITTLE_ENDIAN) {\r\n\t\t\t\r\n\t\t\treturn (ch4 << 24) | (ch3 << 16) | (ch2 << 8) | ch1;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn (ch1 << 24) | (ch2 << 16) | (ch3 << 8) | ch4;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readMultiByte (length:Int, charSet:String):String {\r\n\t\t\r\n\t\treturn readUTFBytes (length);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readShort ():Int {\r\n\t\t\r\n\t\tvar ch1 = readUnsignedByte ();\r\n\t\tvar ch2 = readUnsignedByte ();\r\n\t\t\r\n\t\tvar value;\r\n\t\t\r\n\t\tif (endian == LITTLE_ENDIAN) {\r\n\t\t\t\r\n\t\t\tvalue = ((ch2 << 8) | ch1);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvalue = ((ch1 << 8) | ch2);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif ((value & 0x8000) != 0) {\r\n\t\t\t\r\n\t\t\treturn value - 0x10000;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn value;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readUnsignedByte ():Int {\r\n\t\t\r\n\t\tif (position < __length) {\r\n\t\t\t\r\n\t\t\treturn get (position++);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tthrow new EOFError ();\r\n\t\t\treturn 0;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readUnsignedInt ():Int {\r\n\t\t\r\n\t\tvar ch1 = readUnsignedByte ();\r\n\t\tvar ch2 = readUnsignedByte ();\r\n\t\tvar ch3 = readUnsignedByte ();\r\n\t\tvar ch4 = readUnsignedByte ();\r\n\t\t\r\n\t\tif (endian == LITTLE_ENDIAN) {\r\n\t\t\t\r\n\t\t\treturn (ch4 << 24) | (ch3 << 16) | (ch2 << 8) | ch1;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn (ch1 << 24) | (ch2 << 16) | (ch3 << 8) | ch4;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readUnsignedShort ():Int {\r\n\t\t\r\n\t\tvar ch1 = readUnsignedByte ();\r\n\t\tvar ch2 = readUnsignedByte ();\r\n\t\t\r\n\t\tif (endian == LITTLE_ENDIAN) {\r\n\t\t\t\r\n\t\t\treturn (ch2 << 8) + ch1;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn (ch1 << 8) | ch2;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readUTF ():String {\r\n\t\t\r\n\t\tvar bytesCount = readUnsignedShort ();\r\n\t\treturn readUTFBytes (bytesCount);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readUTFBytes (length:Int):String {\r\n\t\t\r\n\t\tif (position + length > __length) {\r\n\t\t\t\r\n\t\t\tthrow new EOFError ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tposition += length;\r\n\t\t\r\n\t\treturn getString (position - length, length);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uncompress (algorithm:CompressionAlgorithm = null):Void {\r\n\t\t\r\n\t\t#if sys\r\n\t\t\r\n\t\tif (algorithm == null) {\r\n\t\t\t\r\n\t\t\talgorithm = CompressionAlgorithm.DEFLATE;\r\n\t\t\t//algorithm = CompressionAlgorithm.GZIP;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (algorithm == CompressionAlgorithm.LZMA) {\r\n\t\t\t\r\n\t\t\t__setData (LZMA.decode (this));\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar windowBits = switch (algorithm) {\r\n\t\t\t\t\r\n\t\t\t\tcase DEFLATE: -15;\r\n\t\t\t\t//case GZIP: 31;\r\n\t\t\t\tdefault: 15;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#if enable_deflate\r\n\t\t\t__setData (Uncompress.run (this, null, windowBits));\r\n\t\t\t#else\r\n\t\t\t__setData (Uncompress.run (this, null));\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#elseif format\r\n\t\t\r\n\t\t__setData (Inflate.run (this));\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\t__length = this.length;\r\n\t\tposition = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeBoolean (value:Bool):Void {\r\n\t\t\r\n\t\tthis.writeByte (value ? 1 : 0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeByte (value:Int):Void {\r\n\t\t\r\n\t\t__resize (position + 1);\r\n\t\tset (position++, value & 0xFF);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeBytes (bytes:ByteArray, offset:UInt = 0, length:UInt = 0):Void {\r\n\t\t\r\n\t\tif (bytes.length == 0) return;\r\n\t\tif (length == 0) length = bytes.length - offset;\r\n\t\t\r\n\t\t__resize (position + length);\r\n\t\tblit (position, (bytes:ByteArrayData), offset, length);\r\n\t\t\r\n\t\tposition += length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeDouble (value:Float):Void {\r\n\t\t\r\n\t\t__resize (position + 8);\r\n\t\tsetDouble (position, value);\r\n\t\tposition += 8;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeFloat (value:Float):Void {\r\n\t\t\r\n\t\t__resize (position + 4);\r\n\t\tsetFloat (position, value);\r\n\t\tposition += 4;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeInt (value:Int):Void {\r\n\t\t\r\n\t\t__resize (position + 4);\r\n\t\t\r\n\t\tif (endian == LITTLE_ENDIAN) {\r\n\t\t\t\r\n\t\t\tset (position++, value);\r\n\t\t\tset (position++, value >> 8);\r\n\t\t\tset (position++, value >> 16);\r\n\t\t\tset (position++, value >> 24);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tset (position++, value >> 24);\r\n\t\t\tset (position++, value >> 16);\r\n\t\t\tset (position++, value >> 8);\r\n\t\t\tset (position++, value);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeMultiByte (value:String, charSet:String):Void {\r\n\t\t\r\n\t\twriteUTFBytes (value);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeShort (value:Int):Void {\r\n\t\t\r\n\t\t__resize (position + 2);\r\n\t\t\r\n\t\tif (endian == LITTLE_ENDIAN) {\r\n\t\t\t\r\n\t\t\tset (position++, value);\r\n\t\t\tset (position++, value >> 8);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tset (position++, value >> 8);\r\n\t\t\tset (position++, value);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeUnsignedInt (value:Int):Void {\r\n\t\t\r\n\t\twriteInt (value);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeUTF (value:String):Void {\r\n\t\t\r\n\t\tvar bytes = Bytes.ofString (value);\r\n\t\t\r\n\t\twriteShort (bytes.length);\r\n\t\twriteBytes (bytes);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeUTFBytes (value:String):Void {\r\n\t\t\r\n\t\tvar bytes = Bytes.ofString (value);\r\n\t\twriteBytes (Bytes.ofString (value));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __fromBytes (bytes:Bytes):Void {\r\n\t\t\r\n\t\t__setData (bytes);\r\n\t\t__length = bytes.length;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function __resize (size:Int) {\r\n\t\t\r\n\t\tif (size > this.length) {\r\n\t\t\t\r\n\t\t\tvar bytes = Bytes.alloc (((size + 1) * 3) >> 1);\r\n\t\t\tbytes.blit (0, this, 0, this.length);\r\n\t\t\t__setData (bytes);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (__length < size) {\r\n\t\t\t\r\n\t\t\t__length = size;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function __setData (bytes:Bytes):Void {\r\n\t\t\r\n\t\tb = bytes.b;\r\n\t\tlength = bytes.length;\r\n\t\t\r\n\t\t#if js\r\n\t\tdata = bytes.data;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t@:noCompletion private inline function get_bytesAvailable ():Int {\r\n\t\t\r\n\t\treturn __length - position;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function get_endian ():Endian {\r\n\t\t\r\n\t\treturn __endian;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private inline function set_endian (value:Endian):Endian {\r\n\t\t\r\n\t\treturn __endian = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\n\r\n\r\n/**\r\n * The ByteArray class provides methods and properties to optimize reading,\r\n * writing, and working with binary data.\r\n *\r\n * <p><i>Note:</i> The ByteArray class is for advanced developers who need to\r\n * access data on the byte level.</p>\r\n *\r\n * <p>In-memory data is a packed array(the most compact representation for\r\n * the data type) of bytes, but an instance of the ByteArray class can be\r\n * manipulated with the standard <code>[]</code>(array access) operators. It\r\n * also can be read and written to as an in-memory file, using methods similar\r\n * to those in the URLStream and Socket classes.</p>\r\n *\r\n * <p>In addition, zlib compression and decompression are supported, as well\r\n * as Action Message Format(AMF) object serialization.</p>\r\n *\r\n * <p>Possible uses of the ByteArray class include the following:\r\n * <ul>\r\n *   <li>Creating a custom protocol to connect to a server.</li>\r\n *   <li>Writing your own URLEncoder/URLDecoder.</li>\r\n *   <li>Writing your own AMF/Remoting packet.</li>\r\n *   <li>Optimizing the size of your data by using data types.</li>\r\n *   <li>Working with binary data loaded from a file in Adobe<sup>®</sup>\r\n * AIR<sup>®</sup>.</li>\r\n * </ul>\r\n * </p>\r\n */\r\n\r\n#if flash\r\n@:native(\"flash.utils.ByteArray\")\r\n#end\r\n\r\nextern class ByteArrayData implements IDataOutput implements IDataInput implements ArrayAccess<Int> {\r\n\t\r\n\t\r\n\t/**\r\n\t * Denotes the default object encoding for the ByteArray class to use for a\r\n\t * new ByteArray instance. When you create a new ByteArray instance, the\r\n\t * encoding on that instance starts with the value of\r\n\t * <code>defaultObjectEncoding</code>. The <code>defaultObjectEncoding</code>\r\n\t * property is initialized to <code>ObjectEncoding.AMF3</code>.\r\n\t *\r\n\t * <p>When an object is written to or read from binary data, the\r\n\t * <code>objectEncoding</code> value is used to determine whether the\r\n\t * ActionScript 3.0, ActionScript2.0, or ActionScript 1.0 format should be\r\n\t * used. The value is a constant from the ObjectEncoding class.</p>\r\n\t */\r\n\tpublic static var defaultObjectEncoding:UInt;\r\n\t\r\n\t/**\r\n\t * The number of bytes of data available for reading from the current\r\n\t * position in the byte array to the end of the array.\r\n\t *\r\n\t * <p>Use the <code>bytesAvailable</code> property in conjunction with the\r\n\t * read methods each time you access a ByteArray object to ensure that you\r\n\t * are reading valid data.</p>\r\n\t */\r\n\t#if (flash && !display)\r\n\tpublic var bytesAvailable (default, null):UInt;\r\n\t#else\r\n\tpublic var bytesAvailable (get, never):UInt; private inline function get_bytesAvailable ():UInt { return 0; }\r\n\t#end\r\n\t\r\n\t/**\r\n\t * Changes or reads the byte order for the data; either\r\n\t * <code>Endian.BIG_ENDIAN</code> or <code>Endian.LITTLE_ENDIAN</code>.\r\n\t */\r\n\t#if (flash && !display)\r\n\tpublic var endian:Endian;\r\n\t#else\r\n\tpublic var endian (get, set):Endian;\r\n\t\r\n\tprivate function get_endian ():Endian;\r\n\tprivate function set_endian (value:Endian):Endian;\r\n\t#end\r\n\t\r\n\t/**\r\n\t * The length of the ByteArray object, in bytes.\r\n\t *\r\n\t * <p>If the length is set to a value that is larger than the current length,\r\n\t * the right side of the byte array is filled with zeros.</p>\r\n\t *\r\n\t * <p>If the length is set to a value that is smaller than the current\r\n\t * length, the byte array is truncated.</p>\r\n\t */\r\n\tpublic var length:UInt;\r\n\t\r\n\t/**\r\n\t * Used to determine whether the ActionScript 3.0, ActionScript 2.0, or\r\n\t * ActionScript 1.0 format should be used when writing to, or reading from, a\r\n\t * ByteArray instance. The value is a constant from the ObjectEncoding class.\r\n\t */\r\n\tpublic var objectEncoding:UInt;\r\n\t\r\n\t/**\r\n\t * Moves, or returns the current position, in bytes, of the file pointer into\r\n\t * the ByteArray object. This is the point at which the next call to a read\r\n\t * method starts reading or a write method starts writing.\r\n\t */\r\n\tpublic var position:UInt;\r\n\t\r\n\t#if flash\r\n\t@:noCompletion @:dox(hide) @:require(flash11_4) public var shareable:Bool;\r\n\t#end\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a ByteArray instance representing a packed array of bytes, so that\r\n\t * you can use the methods and properties in this class to optimize your data\r\n\t * storage and stream.\r\n\t */\r\n\tpublic function new ();\r\n\t\r\n\t\r\n\t#if flash\r\n\t@:noCompletion @:dox(hide) @:require(flash11_4) public function atomicCompareAndSwapIntAt (byteIndex:Int, expectedValue:Int, newValue:Int):Int;\r\n\t#end\r\n\t\r\n\t\r\n\t#if flash\r\n\t@:noCompletion @:dox(hide) @:require(flash11_4) public function atomicCompareAndSwapLength (expectedLength:Int, newLength:Int):Int;\r\n\t#end\r\n\t\r\n\t\r\n\t/**\r\n\t * Clears the contents of the byte array and resets the <code>length</code>\r\n\t * and <code>position</code> properties to 0. Calling this method explicitly\r\n\t * frees up the memory used by the ByteArray instance.\r\n\t * \r\n\t */\r\n\tpublic function clear ():Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Compresses the byte array. The entire byte array is compressed. For\r\n\t * content running in Adobe AIR, you can specify a compression algorithm by\r\n\t * passing a value(defined in the CompressionAlgorithm class) as the\r\n\t * <code>algorithm</code> parameter. Flash Player supports only the default\r\n\t * algorithm, zlib.\r\n\t *\r\n\t * <p>After the call, the <code>length</code> property of the ByteArray is\r\n\t * set to the new length. The <code>position</code> property is set to the\r\n\t * end of the byte array.</p>\r\n\t *\r\n\t * <p>The zlib compressed data format is described at <a\r\n\t * href=\"http://www.ietf.org/rfc/rfc1950.txt\"\r\n\t * scope=\"external\">http://www.ietf.org/rfc/rfc1950.txt</a>.</p>\r\n\t *\r\n\t * <p>The deflate compression algorithm is described at <a\r\n\t * href=\"http://www.ietf.org/rfc/rfc1951.txt\"\r\n\t * scope=\"external\">http://www.ietf.org/rfc/rfc1951.txt</a>.</p>\r\n\t *\r\n\t * <p>The deflate compression algorithm is used in several compression\r\n\t * formats, such as zlib, gzip, some zip implementations, and others. When\r\n\t * data is compressed using one of those compression formats, in addition to\r\n\t * storing the compressed version of the original data, the compression\r\n\t * format data(for example, the .zip file) includes metadata information.\r\n\t * Some examples of the types of metadata included in various file formats\r\n\t * are file name, file modification date/time, original file size, optional\r\n\t * comments, checksum data, and more.</p>\r\n\t *\r\n\t * <p>For example, when a ByteArray is compressed using the zlib algorithm,\r\n\t * the resulting ByteArray is structured in a specific format. Certain bytes\r\n\t * contain metadata about the compressed data, while other bytes contain the\r\n\t * actual compressed version of the original ByteArray data. As defined by\r\n\t * the zlib compressed data format specification, those bytes(that is, the\r\n\t * portion containing the compressed version of the original data) are\r\n\t * compressed using the deflate algorithm. Consequently those bytes are\r\n\t * identical to the result of calling <code>compress(<ph\r\n\t * outputclass=\"javascript\">air.CompressionAlgorithm.DEFLATE)</code> on the\r\n\t * original ByteArray. However, the result from <code>compress(<ph\r\n\t * outputclass=\"javascript\">air.CompressionAlgorithm.ZLIB)</code> includes\r\n\t * the extra metadata, while the\r\n\t * <code>compress(CompressionAlgorithm.DEFLATE)</code> result includes only\r\n\t * the compressed version of the original ByteArray data and nothing\r\n\t * else.</p>\r\n\t *\r\n\t * <p>In order to use the deflate format to compress a ByteArray instance's\r\n\t * data in a specific format such as gzip or zip, you cannot simply call\r\n\t * <code>compress(CompressionAlgorithm.DEFLATE)</code>. You must create a\r\n\t * ByteArray structured according to the compression format's specification,\r\n\t * including the appropriate metadata as well as the compressed data obtained\r\n\t * using the deflate format. Likewise, in order to decode data compressed in\r\n\t * a format such as gzip or zip, you can't simply call\r\n\t * <code>uncompress(CompressionAlgorithm.DEFLATE)</code> on that data. First,\r\n\t * you must separate the metadata from the compressed data, and you can then\r\n\t * use the deflate format to decompress the compressed data.</p>\r\n\t * \r\n\t */\r\n\tpublic function compress (algorithm:CompressionAlgorithm = null):Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Compresses the byte array using the deflate compression algorithm. The\r\n\t * entire byte array is compressed.\r\n\t *\r\n\t * <p>After the call, the <code>length</code> property of the ByteArray is\r\n\t * set to the new length. The <code>position</code> property is set to the\r\n\t * end of the byte array.</p>\r\n\t *\r\n\t * <p>The deflate compression algorithm is described at <a\r\n\t * href=\"http://www.ietf.org/rfc/rfc1951.txt\"\r\n\t * scope=\"external\">http://www.ietf.org/rfc/rfc1951.txt</a>.</p>\r\n\t *\r\n\t * <p>In order to use the deflate format to compress a ByteArray instance's\r\n\t * data in a specific format such as gzip or zip, you cannot simply call\r\n\t * <code>deflate()</code>. You must create a ByteArray structured according\r\n\t * to the compression format's specification, including the appropriate\r\n\t * metadata as well as the compressed data obtained using the deflate format.\r\n\t * Likewise, in order to decode data compressed in a format such as gzip or\r\n\t * zip, you can't simply call <code>inflate()</code> on that data. First, you\r\n\t * must separate the metadata from the compressed data, and you can then use\r\n\t * the deflate format to decompress the compressed data.</p>\r\n\t * \r\n\t */\r\n\tpublic function deflate ():Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Decompresses the byte array using the deflate compression algorithm. The\r\n\t * byte array must have been compressed using the same algorithm.\r\n\t *\r\n\t * <p>After the call, the <code>length</code> property of the ByteArray is\r\n\t * set to the new length. The <code>position</code> property is set to 0.</p>\r\n\t *\r\n\t * <p>The deflate compression algorithm is described at <a\r\n\t * href=\"http://www.ietf.org/rfc/rfc1951.txt\"\r\n\t * scope=\"external\">http://www.ietf.org/rfc/rfc1951.txt</a>.</p>\r\n\t *\r\n\t * <p>In order to decode data compressed in a format that uses the deflate\r\n\t * compression algorithm, such as data in gzip or zip format, it will not\r\n\t * work to simply call <code>inflate()</code> on a ByteArray containing the\r\n\t * compression formation data. First, you must separate the metadata that is\r\n\t * included as part of the compressed data format from the actual compressed\r\n\t * data. For more information, see the <code>compress()</code> method\r\n\t * description.</p>\r\n\t * \r\n\t * @throws IOError The data is not valid compressed data; it was not\r\n\t *                 compressed with the same compression algorithm used to\r\n\t *                 compress.\r\n\t */\r\n\tpublic function inflate ():Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads a Boolean value from the byte stream. A single byte is read, and\r\n\t * <code>true</code> is returned if the byte is nonzero, <code>false</code>\r\n\t * otherwise.\r\n\t * \r\n\t * @return Returns <code>true</code> if the byte is nonzero,\r\n\t *         <code>false</code> otherwise.\r\n\t * @throws EOFError There is not sufficient data available to read.\r\n\t */\r\n\tpublic function readBoolean ():Bool;\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads a signed byte from the byte stream.\r\n\t *\r\n\t * <p>The returned value is in the range -128 to 127.</p>\r\n\t * \r\n\t * @return An integer between -128 and 127.\r\n\t * @throws EOFError There is not sufficient data available to read.\r\n\t */\r\n\tpublic function readByte ():Int;\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads the number of data bytes, specified by the <code>length</code>\r\n\t * parameter, from the byte stream. The bytes are read into the ByteArray\r\n\t * object specified by the <code>bytes</code> parameter, and the bytes are\r\n\t * written into the destination ByteArray starting at the position specified\r\n\t * by <code>offset</code>.\r\n\t * \r\n\t * @param bytes  The ByteArray object to read data into.\r\n\t * @param offset The offset(position) in <code>bytes</code> at which the\r\n\t *               read data should be written.\r\n\t * @param length The number of bytes to read. The default value of 0 causes\r\n\t *               all available data to be read.\r\n\t * @throws EOFError   There is not sufficient data available to read.\r\n\t * @throws RangeError The value of the supplied offset and length, combined,\r\n\t *                    is greater than the maximum for a uint.\r\n\t */\r\n\tpublic function readBytes (bytes:ByteArray, offset:UInt = 0, length:UInt = 0):Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads an IEEE 754 double-precision(64-bit) floating-point number from the\r\n\t * byte stream.\r\n\t * \r\n\t * @return A double-precision(64-bit) floating-point number.\r\n\t * @throws EOFError There is not sufficient data available to read.\r\n\t */\r\n\tpublic function readDouble ():Float;\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads an IEEE 754 single-precision(32-bit) floating-point number from the\r\n\t * byte stream.\r\n\t * \r\n\t * @return A single-precision(32-bit) floating-point number.\r\n\t * @throws EOFError There is not sufficient data available to read.\r\n\t */\r\n\tpublic function readFloat ():Float;\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads a signed 32-bit integer from the byte stream.\r\n\t *\r\n\t * <p>The returned value is in the range -2147483648 to 2147483647.</p>\r\n\t * \r\n\t * @return A 32-bit signed integer between -2147483648 and 2147483647.\r\n\t * @throws EOFError There is not sufficient data available to read.\r\n\t */\r\n\tpublic function readInt ():Int;\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads a multibyte string of specified length from the byte stream using\r\n\t * the specified character set.\r\n\t * \r\n\t * @param length  The number of bytes from the byte stream to read.\r\n\t * @param charSet The string denoting the character set to use to interpret\r\n\t *                the bytes. Possible character set strings include\r\n\t *                <code>\"shift-jis\"</code>, <code>\"cn-gb\"</code>,\r\n\t *                <code>\"iso-8859-1\"</code>, and others. For a complete list,\r\n\t *                see <a href=\"../../charset-codes.html\">Supported Character\r\n\t *                Sets</a>.\r\n\t *\r\n\t *                <p><b>Note:</b> If the value for the <code>charSet</code>\r\n\t *                parameter is not recognized by the current system, the\r\n\t *                application uses the system's default code page as the\r\n\t *                character set. For example, a value for the\r\n\t *                <code>charSet</code> parameter, as in\r\n\t *                <code>myTest.readMultiByte(22, \"iso-8859-01\")</code> that\r\n\t *                uses <code>01</code> instead of <code>1</code> might work\r\n\t *                on your development system, but not on another system. On\r\n\t *                the other system, the application will use the system's\r\n\t *                default code page.</p>\r\n\t * @return UTF-8 encoded string.\r\n\t * @throws EOFError There is not sufficient data available to read.\r\n\t */\r\n\tpublic function readMultiByte (length:UInt, charSet:String):String;\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads an object from the byte array, encoded in AMF serialized format.\r\n\t * \r\n\t * @return The deserialized object.\r\n\t * @throws EOFError There is not sufficient data available to read.\r\n\t */\r\n\t#if flash\r\n\t@:noCompletion @:dox(hide) public function readObject ():Dynamic;\r\n\t#end\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads a signed 16-bit integer from the byte stream.\r\n\t *\r\n\t * <p>The returned value is in the range -32768 to 32767.</p>\r\n\t * \r\n\t * @return A 16-bit signed integer between -32768 and 32767.\r\n\t * @throws EOFError There is not sufficient data available to read.\r\n\t */\r\n\tpublic function readShort ():Int;\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads a UTF-8 string from the byte stream. The string is assumed to be\r\n\t * prefixed with an unsigned short indicating the length in bytes.\r\n\t * \r\n\t * @return UTF-8 encoded string.\r\n\t * @throws EOFError There is not sufficient data available to read.\r\n\t */\r\n\tpublic function readUTF ():String;\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads a sequence of UTF-8 bytes specified by the <code>length</code>\r\n\t * parameter from the byte stream and returns a string.\r\n\t * \r\n\t * @param length An unsigned short indicating the length of the UTF-8 bytes.\r\n\t * @return A string composed of the UTF-8 bytes of the specified length.\r\n\t * @throws EOFError There is not sufficient data available to read.\r\n\t */\r\n\tpublic function readUTFBytes (length:UInt):String;\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads an unsigned byte from the byte stream.\r\n\t *\r\n\t * <p>The returned value is in the range 0 to 255. </p>\r\n\t * \r\n\t * @return A 32-bit unsigned integer between 0 and 255.\r\n\t * @throws EOFError There is not sufficient data available to read.\r\n\t */\r\n\tpublic function readUnsignedByte ():UInt;\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads an unsigned 32-bit integer from the byte stream.\r\n\t *\r\n\t * <p>The returned value is in the range 0 to 4294967295. </p>\r\n\t * \r\n\t * @return A 32-bit unsigned integer between 0 and 4294967295.\r\n\t * @throws EOFError There is not sufficient data available to read.\r\n\t */\r\n\tpublic function readUnsignedInt ():UInt;\r\n\t\r\n\t\r\n\t/**\r\n\t * Reads an unsigned 16-bit integer from the byte stream.\r\n\t *\r\n\t * <p>The returned value is in the range 0 to 65535. </p>\r\n\t * \r\n\t * @return A 16-bit unsigned integer between 0 and 65535.\r\n\t * @throws EOFError There is not sufficient data available to read.\r\n\t */\r\n\tpublic function readUnsignedShort ():UInt;\r\n\t\r\n\t\r\n\t/**\r\n\t * Converts the byte array to a string. If the data in the array begins with\r\n\t * a Unicode byte order mark, the application will honor that mark when\r\n\t * converting to a string. If <code>System.useCodePage</code> is set to\r\n\t * <code>true</code>, the application will treat the data in the array as\r\n\t * being in the current system code page when converting.\r\n\t * \r\n\t * @return The string representation of the byte array.\r\n\t */\r\n\tpublic function toString ():String;\r\n\t\r\n\t\r\n\t/**\r\n\t * Decompresses the byte array. For content running in Adobe AIR, you can\r\n\t * specify a compression algorithm by passing a value(defined in the\r\n\t * CompressionAlgorithm class) as the <code>algorithm</code> parameter. The\r\n\t * byte array must have been compressed using the same algorithm. Flash\r\n\t * Player supports only the default algorithm, zlib.\r\n\t *\r\n\t * <p>After the call, the <code>length</code> property of the ByteArray is\r\n\t * set to the new length. The <code>position</code> property is set to 0.</p>\r\n\t *\r\n\t * <p>The zlib compressed data format is described at <a\r\n\t * href=\"http://www.ietf.org/rfc/rfc1950.txt\"\r\n\t * scope=\"external\">http://www.ietf.org/rfc/rfc1950.txt</a>.</p>\r\n\t *\r\n\t * <p>The deflate compression algorithm is described at <a\r\n\t * href=\"http://www.ietf.org/rfc/rfc1951.txt\"\r\n\t * scope=\"external\">http://www.ietf.org/rfc/rfc1951.txt</a>.</p>\r\n\t *\r\n\t * <p>In order to decode data compressed in a format that uses the deflate\r\n\t * compression algorithm, such as data in gzip or zip format, it will not\r\n\t * work to call <code>uncompress(CompressionAlgorithm.DEFLATE)</code> on a\r\n\t * ByteArray containing the compression formation data. First, you must\r\n\t * separate the metadata that is included as part of the compressed data\r\n\t * format from the actual compressed data. For more information, see the\r\n\t * <code>compress()</code> method description.</p>\r\n\t * \r\n\t * @throws IOError The data is not valid compressed data; it was not\r\n\t *                 compressed with the same compression algorithm used to\r\n\t *                 compress.\r\n\t */\r\n\tpublic function uncompress (algorithm:CompressionAlgorithm = null):Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Writes a Boolean value. A single byte is written according to the\r\n\t * <code>value</code> parameter, either 1 if <code>true</code> or 0 if\r\n\t * <code>false</code>.\r\n\t * \r\n\t * @param value A Boolean value determining which byte is written. If the\r\n\t *              parameter is <code>true</code>, the method writes a 1; if\r\n\t *              <code>false</code>, the method writes a 0.\r\n\t */\r\n\tpublic function writeBoolean (value:Bool):Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Writes a byte to the byte stream.\r\n\t *\r\n\t * <p>The low 8 bits of the parameter are used. The high 24 bits are ignored.\r\n\t * </p>\r\n\t * \r\n\t * @param value A 32-bit integer. The low 8 bits are written to the byte\r\n\t *              stream.\r\n\t */\r\n\tpublic function writeByte (value:Int):Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Writes a sequence of <code>length</code> bytes from the specified byte\r\n\t * array, <code>bytes</code>, starting <code>offset</code>(zero-based index)\r\n\t * bytes into the byte stream.\r\n\t *\r\n\t * <p>If the <code>length</code> parameter is omitted, the default length of\r\n\t * 0 is used; the method writes the entire buffer starting at\r\n\t * <code>offset</code>. If the <code>offset</code> parameter is also omitted,\r\n\t * the entire buffer is written. </p>\r\n\t *\r\n\t * <p>If <code>offset</code> or <code>length</code> is out of range, they are\r\n\t * clamped to the beginning and end of the <code>bytes</code> array.</p>\r\n\t * \r\n\t * @param bytes  The ByteArray object.\r\n\t * @param offset A zero-based index indicating the position into the array to\r\n\t *               begin writing.\r\n\t * @param length An unsigned integer indicating how far into the buffer to\r\n\t *               write.\r\n\t */\r\n\tpublic function writeBytes (bytes:ByteArray, offset:UInt = 0, length:UInt = 0):Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Writes an IEEE 754 double-precision(64-bit) floating-point number to the\r\n\t * byte stream.\r\n\t * \r\n\t * @param value A double-precision(64-bit) floating-point number.\r\n\t */\r\n\tpublic function writeDouble (value:Float):Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Writes an IEEE 754 single-precision(32-bit) floating-point number to the\r\n\t * byte stream.\r\n\t * \r\n\t * @param value A single-precision(32-bit) floating-point number.\r\n\t */\r\n\tpublic function writeFloat (value:Float):Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Writes a 32-bit signed integer to the byte stream.\r\n\t * \r\n\t * @param value An integer to write to the byte stream.\r\n\t */\r\n\tpublic function writeInt (value:Int):Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Writes a multibyte string to the byte stream using the specified character\r\n\t * set.\r\n\t * \r\n\t * @param value   The string value to be written.\r\n\t * @param charSet The string denoting the character set to use. Possible\r\n\t *                character set strings include <code>\"shift-jis\"</code>,\r\n\t *                <code>\"cn-gb\"</code>, <code>\"iso-8859-1\"</code>, and\r\n\t *                others. For a complete list, see <a\r\n\t *                href=\"../../charset-codes.html\">Supported Character\r\n\t *                Sets</a>.\r\n\t */\r\n\tpublic function writeMultiByte (value:String, charSet:String):Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Writes an object into the byte array in AMF serialized format.\r\n\t * \r\n\t * @param object The object to serialize.\r\n\t */\r\n\t#if flash\r\n\t@:noCompletion @:dox(hide) public function writeObject (object:Dynamic):Void;\r\n\t#end\r\n\t\r\n\t\r\n\t/**\r\n\t * Writes a 16-bit integer to the byte stream. The low 16 bits of the\r\n\t * parameter are used. The high 16 bits are ignored.\r\n\t * \r\n\t * @param value 32-bit integer, whose low 16 bits are written to the byte\r\n\t *              stream.\r\n\t */\r\n\tpublic function writeShort (value:Int):Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Writes a UTF-8 string to the byte stream. The length of the UTF-8 string\r\n\t * in bytes is written first, as a 16-bit integer, followed by the bytes\r\n\t * representing the characters of the string.\r\n\t * \r\n\t * @param value The string value to be written.\r\n\t * @throws RangeError If the length is larger than 65535.\r\n\t */\r\n\tpublic function writeUTF (value:String):Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Writes a UTF-8 string to the byte stream. Similar to the\r\n\t * <code>writeUTF()</code> method, but <code>writeUTFBytes()</code> does not\r\n\t * prefix the string with a 16-bit length word.\r\n\t * \r\n\t * @param value The string value to be written.\r\n\t */\r\n\tpublic function writeUTFBytes (value:String):Void;\r\n\t\r\n\t\r\n\t/**\r\n\t * Writes a 32-bit unsigned integer to the byte stream.\r\n\t * \r\n\t * @param value An unsigned integer to write to the byte stream.\r\n\t */\r\n\tpublic function writeUnsignedInt (value:UInt):Void;\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#end\r\n#else\r\ntypedef ByteArray = openfl._legacy.utils.ByteArray;\r\ntypedef ByteArrayData = openfl._legacy.utils.ByteArray.ByteArrayData;\r\n#end","package openfl.utils; #if !openfl_legacy\r\n\r\n\r\n@:enum abstract CompressionAlgorithm(Null<Int>) {\r\n\t\r\n\tpublic var DEFLATE = 0;\r\n\t//GZIP;\r\n\tpublic var LZMA = 1;\r\n\tpublic var ZLIB = 2;\r\n\t\r\n\t@:from private static function fromString (value:String):CompressionAlgorithm {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"deflate\": DEFLATE;\r\n\t\t\tcase \"lzma\": LZMA;\r\n\t\t\tcase \"zlib\": ZLIB;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase CompressionAlgorithm.DEFLATE: \"deflate\";\r\n\t\t\tcase CompressionAlgorithm.LZMA: \"lzma\";\r\n\t\t\tcase CompressionAlgorithm.ZLIB: \"zlib\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef CompressionAlgorithm = openfl._legacy.utils.CompressionAlgorithm;\r\n#end","package openfl.utils; #if (!flash || display)\r\n\r\n\r\nimport haxe.ds.StringMap;\r\nimport haxe.ds.IntMap;\r\nimport haxe.ds.HashMap;\r\nimport haxe.ds.ObjectMap;\r\nimport haxe.ds.WeakMap;\r\nimport haxe.ds.EnumValueMap;\r\nimport haxe.Constraints.IMap;\r\n\r\n@:multiType(K)\r\n\r\n\r\nabstract Dictionary<K, V> (IMap<K, V>) {\r\n\t\r\n\t\r\n\tpublic function new (weakKeys:Bool = false);\r\n\t\r\n\t\r\n\t@:arrayAccess public inline function get (key:K):V {\r\n\t\t\r\n\t\treturn this.get (key);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:arrayAccess public inline function set (key:K, value:V):V {\r\n\t\t\r\n\t\tthis.set (key, value);\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function iterator ():Iterator<K> {\r\n\t\t\r\n\t\treturn this.keys ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:to static inline function toStringMap<K:String, V> (t:IMap<K, V>, weakKeys:Bool):StringMap<V> {\r\n\t\t\r\n\t\treturn new StringMap<V> ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:to static inline function toIntMap<K:Int, V> (t:IMap<K, V>, weakKeys:Bool):IntMap<V> {\r\n\t\t\r\n\t\treturn new IntMap<V> ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:to static inline function toEnumValueMapMap<K:EnumValue, V> (t:IMap<K, V>, weakKeys:Bool):EnumValueMap<K, V> {\r\n\t\t\r\n\t\treturn new EnumValueMap<K, V> ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:to static inline function toObjectMap<K:{},V> (t:IMap<K, V>, weakKeys:Bool):ObjectMap<K, V> {\r\n\t\t\r\n\t\treturn new ObjectMap<K, V> ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:from static inline function fromStringMap<V> (map:StringMap<V>):Dictionary<String, V> {\r\n\t\t\r\n\t\treturn cast map;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:from static inline function fromIntMap<V> (map:IntMap<V>):Dictionary<Int, V> {\r\n\t\t\r\n\t\treturn cast map;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:from static inline function fromObjectMap<K:{}, V> (map:ObjectMap<K, V>):Dictionary<K, V> {\r\n\t\t\r\n\t\treturn cast map;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\n\r\n\r\nabstract Dictionary <K, V> (flash.utils.Dictionary) from flash.utils.Dictionary to flash.utils.Dictionary {\r\n\t\r\n\t\r\n\tpublic function new (weakKeys:Bool = false) {\r\n\t\t\r\n\t\tthis = new flash.utils.Dictionary (weakKeys);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:arrayAccess public inline function get (key:K):V {\r\n\t\t\r\n\t\treturn untyped this[key];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:arrayAccess public inline function set (key:K, value:V):V {\r\n\t\t\r\n\t\treturn untyped this[key] = value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function iterator ():Iterator<K> {\r\n\t\t\r\n\t\treturn untyped __keys__ (this).iterator ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#end","package openfl.utils;\r\n\r\n\r\n@:enum abstract Endian(Null<Int>) {\r\n\t\r\n\tpublic var BIG_ENDIAN = 0;\r\n\tpublic var LITTLE_ENDIAN = 1;\r\n\t\r\n\t@:from private static function fromString (value:String):Endian {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase \"bigEndian\": BIG_ENDIAN;\r\n\t\t\tcase \"littleEndian\": LITTLE_ENDIAN;\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t@:to private static function toString (value:Int):String {\r\n\t\t\r\n\t\treturn switch (value) {\r\n\t\t\t\r\n\t\t\tcase Endian.BIG_ENDIAN: \"bigEndian\";\r\n\t\t\tcase Endian.LITTLE_ENDIAN: \"littleEndian\";\r\n\t\t\tdefault: null;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}","package openfl.utils;\r\n\r\n\r\n@:forward() abstract Object(ObjectType) from ObjectType {\r\n\t\r\n\t\r\n\tpublic inline function new () {\r\n\t\t\r\n\t\tthis = { };\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function hasOwnProperty (name:String):Bool {\r\n\t\t\r\n\t\treturn (this != null && Reflect.hasField (this, name));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function isPrototypeOf (theClass:Class<Dynamic>):Bool {\r\n\t\t\r\n\t\tvar c = Type.getClass (this);\r\n\t\t\r\n\t\twhile (c != null) {\r\n\t\t\t\r\n\t\t\tif (c == theClass) return true;\r\n\t\t\tc = Type.getSuperClass (c);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion @:dox(hide) public function iterator ():Iterator<String> {\r\n\t\t\r\n\t\tvar fields = Reflect.fields (this);\r\n\t\tif (fields == null) fields = [];\r\n\t\treturn fields.iterator ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function propertyIsEnumerable (name:String):Bool {\r\n\t\t\r\n\t\treturn (this != null && Reflect.hasField (this, name) && Std.is (Reflect.field (this, name), Iterable_));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function toLocaleString ():String {\r\n\t\t\r\n\t\treturn Std.string (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:to public inline function toString ():String {\r\n\t\t\r\n\t\treturn Std.string (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function valueOf ():Object {\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:arrayAccess @:noCompletion @:dox(hide) public inline function __get (key:String):Dynamic {\r\n\t\t\r\n\t\treturn Reflect.field (this, key);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:arrayAccess @:noCompletion @:dox(hide) public inline function __set (key:String, value:Dynamic):Dynamic {\r\n\t\t\r\n\t\tReflect.setField (this, key, value);\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n@:keep @:native('haxe.lang.Iterator') private interface Iterator_<T> {\r\n\t\r\n\tpublic function hasNext ():Bool;\r\n\tpublic function next ():T;\r\n\t\r\n}\r\n\r\n\r\n@:keep @:native('haxe.lang.Iterable') private interface Iterable_<T> {\r\n\t\r\n\tpublic function iterator ():Iterator_<T>;\r\n\t\r\n}\r\n\r\n\r\n#if !flash\r\ntypedef ObjectType = Dynamic;\r\n#else\r\ntypedef ObjectType = flash.utils.Object;\r\n#end","package scenes;\r\n\r\n\r\nimport flash.geom.Rectangle;\r\n\r\nimport starling.display.Button;\r\nimport starling.display.Sprite;\r\n\r\nimport utils.MenuButton;\r\n\r\nclass Scene extends Sprite\r\n{\r\n\tprivate var _backButton:Button;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t// the main menu listens for TRIGGERED events, so we just need to add the button.\r\n\t\t// (the event will bubble up when it's dispatched.)\r\n\t\t\r\n\t\t_backButton = new MenuButton(\"Back\", 88, 50);\r\n\t\t_backButton.x = Constants.CenterX - _backButton.width / 2;\r\n\t\t_backButton.y = Constants.GameHeight - _backButton.height + 12;\r\n\t\t_backButton.name = \"backButton\";\r\n\t\t_backButton.textBounds.y -= 3;\r\n\t\t_backButton.readjustSize();  // forces textBounds to update  \r\n\t\t\r\n\t\taddChild(_backButton);\r\n\t}\r\n}\r\n","package scenes;\r\n\r\nimport scenes.Scene;\r\n\r\nimport starling.animation.Transitions;\r\nimport starling.animation.Tween;\r\nimport starling.core.Starling;\r\nimport starling.display.Button;\r\nimport starling.display.Image;\r\nimport starling.events.Event;\r\nimport starling.text.TextField;\r\nimport starling.utils.Color;\r\nimport starling.utils.Deg2rad;\r\n\r\nimport utils.MenuButton;\r\n\r\nclass AnimationScene extends Scene\r\n{\r\n\tprivate var _startButton:Button;\r\n\tprivate var _delayButton:Button;\r\n\tprivate var _egg:Image;\r\n\tprivate var _transitionLabel:TextField;\r\n\tprivate var _transitions:Array<Dynamic>;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t_transitions = [Transitions.LINEAR, Transitions.EASE_IN_OUT, \r\n\t\t\t\tTransitions.EASE_OUT_BACK, Transitions.EASE_OUT_BOUNCE, \r\n\t\t\t\tTransitions.EASE_OUT_ELASTIC];\r\n\t\t\r\n\t\t// create a button that starts the tween\r\n\t\t_startButton = new MenuButton(\"Start animation\");\r\n\t\t_startButton.addEventListener(Event.TRIGGERED, onStartButtonTriggered);\r\n\t\t_startButton.x = Constants.CenterX - (_startButton.width / 2);\r\n\t\t_startButton.y = 20;\r\n\t\taddChild(_startButton);\r\n\t\t\r\n\t\t// this button will show you how to call a method with a delay\r\n\t\t_delayButton = new MenuButton(\"Delayed call\");\r\n\t\t_delayButton.addEventListener(Event.TRIGGERED, onDelayButtonTriggered);\r\n\t\t_delayButton.x = _startButton.x;\r\n\t\t_delayButton.y = _startButton.y + 40;\r\n\t\taddChild(_delayButton);\r\n\t\t\r\n\t\t// the Starling will be tweened\r\n\t\t_egg = new Image(Game.assets.getTexture(\"starling_front\"));\r\n\t\taddChild(_egg);\r\n\t\tresetEgg();\r\n\t\t\r\n\t\t_transitionLabel = new TextField(320, 30);\r\n\t\t_transitionLabel.format.size = 20;\r\n\t\t_transitionLabel.format.bold = true;\r\n\t\t_transitionLabel.y = _delayButton.y + 40;\r\n\t\t_transitionLabel.alpha = 0.0;  // invisible, will be shown later  \r\n\t\taddChild(_transitionLabel);\r\n\t}\r\n\t\r\n\tprivate function resetEgg():Void\r\n\t{\r\n\t\t_egg.x = 20;\r\n\t\t_egg.y = 100;\r\n\t\t_egg.scaleX = _egg.scaleY = 1.0;\r\n\t\t_egg.rotation = 0.0;\r\n\t}\r\n\t\r\n\tprivate function onStartButtonTriggered():Void\r\n\t{\r\n\t\t_startButton.enabled = false;\r\n\t\tresetEgg();\r\n\t\t\r\n\t\t// get next transition style from array and enqueue it at the end\r\n\t\tvar transition:String = _transitions.shift();\r\n\t\t_transitions.push(transition);\r\n\t\t\r\n\t\t// to animate any numeric property of an arbitrary object (not just display objects!),\r\n\t\t// you can create a 'Tween'. One tween object animates one target for a certain time,\r\n\t\t// a with certain transition function.\r\n\t\tvar tween:Tween = new Tween(_egg, 2.0, transition);\r\n\t\t\r\n\t\t// you can animate any property as long as it's numeric (int, uint, Number).\r\n\t\t// it is animated from it's current value to a target value.\r\n\t\ttween.animate(\"rotation\", Deg2rad.call(90));  // conventional 'animate' call  \r\n\t\ttween.moveTo(300, 360);  // convenience method for animating 'x' and 'y'  \r\n\t\ttween.scaleTo(0.5);  // convenience method for 'scaleX' and 'scaleY'  \r\n\t\ttween.onComplete = function():Void\r\n\t\t{\r\n\t\t\t_startButton.enabled = true;\r\n\t\t};\r\n\t\t\r\n\t\t// the tween alone is useless -- for an animation to be carried out, it has to be\r\n\t\t// advance once in every frame.\r\n\t\t// This is done by the 'Juggler'. It receives the tween and will carry it out.\r\n\t\t// We use the default juggler here, but you can create your own jugglers, as well.\r\n\t\t// That way, you can group animations into logical parts.\r\n\t\tStarling.Juggler.add(tween);\r\n\t\t\r\n\t\t// show which tweening function is used\r\n\t\t_transitionLabel.text = transition;\r\n\t\t_transitionLabel.alpha = 1.0;\r\n\t\t\r\n\t\tvar hideTween:Tween = new Tween(_transitionLabel, 2.0, Transitions.EASE_IN);\r\n\t\thideTween.animate(\"alpha\", 0.0);\r\n\t\tStarling.Juggler.add(hideTween);\r\n\t}\r\n\t\r\n\tprivate function onDelayButtonTriggered():Void\r\n\t{\r\n\t\t_delayButton.enabled = false;\r\n\t\t\r\n\t\t// Using the juggler, you can delay a method call. This is especially useful when\r\n\t\t// you use your own juggler in a component of your game, because it gives you perfect\r\n\t\t// control over the flow of time and animations.\r\n\t\t\r\n\t\tStarling.Juggler.delayCall(colorizeEgg, 1.0, [true]);\r\n\t\tStarling.Juggler.delayCall(colorizeEgg, 2.0, [false]);\r\n\t\tStarling.Juggler.delayCall(function():Void {\r\n\t\t\t_delayButton.enabled = true;\r\n\t\t}, 2.0);\r\n\t}\r\n\t\r\n\tprivate function colorizeEgg(colorize:Bool):Void\r\n\t{\r\n\t\t_egg.color = (colorize) ? Color.RED:Color.WHITE;\r\n\t}\r\n\t\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\t_startButton.removeEventListener(Event.TRIGGERED, onStartButtonTriggered);\r\n\t\t_delayButton.removeEventListener(Event.TRIGGERED, onDelayButtonTriggered);\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n","package scenes;\r\n\r\nimport scenes.Scene;\r\n\r\nimport starling.core.Starling;\r\nimport starling.display.Button;\r\nimport starling.display.DisplayObject;\r\nimport starling.display.Image;\r\nimport starling.display.Sprite;\r\nimport starling.events.EnterFrameEvent;\r\nimport starling.events.Event;\r\nimport starling.text.BitmapFont;\r\nimport starling.text.TextField;\r\nimport starling.text.TextFormat;\r\nimport starling.textures.Texture;\r\nimport starling.utils.StringUtil;\r\n\r\nimport utils.MenuButton;\r\n\r\nclass BenchmarkScene extends Scene\r\n{\r\n\tprivate static var FRAME_TIME_WINDOW_SIZE:Int = 10;\r\n\tprivate static var MAX_FAIL_COUNT:Int = 100;\r\n\t\r\n\tprivate var _startButton:Button;\r\n\tprivate var _resultText:TextField;\r\n\tprivate var _statusText:TextField;\r\n\tprivate var _container:Sprite;\r\n\tprivate var _objectPool:Array<DisplayObject>;\r\n\tprivate var _objectTexture:Texture;\r\n\t\r\n\tprivate var _frameCount:Int;\r\n\tprivate var _failCount:Int;\r\n\tprivate var _started:Bool;\r\n\tprivate var _frameTimes:Array<Float>;\r\n\tprivate var _targetFps:Int;\r\n\tprivate var _phase:Int;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\t// the container will hold all test objects\r\n\t\t_container = new Sprite();\r\n\t\t_container.x = Constants.CenterX;\r\n\t\t_container.y = Constants.CenterY;\r\n\t\t_container.touchable = false;  // we do not need touch events on the test objects --  \r\n\t\t// thus, it is more efficient to disable them.\r\n\t\taddChildAt(_container, 0);\r\n\t\t\r\n\t\t_statusText = new TextField(Constants.GameWidth - 40, 30);\r\n\t\t_statusText.format = new TextFormat(BitmapFont.MINI, BitmapFont.NATIVE_SIZE * 2);\r\n\t\t_statusText.x = 20;\r\n\t\t_statusText.y = 10;\r\n\t\taddChild(_statusText);\r\n\t\t\r\n\t\t_startButton = new MenuButton(\"Start benchmark\", 140);\r\n\t\t_startButton.addEventListener(Event.TRIGGERED, onStartButtonTriggered);\r\n\t\t_startButton.x = Constants.CenterX - (_startButton.width / 2);\r\n\t\t_startButton.y = 20;\r\n\t\taddChild(_startButton);\r\n\t\t\r\n\t\t_started = false;\r\n\t\t_frameTimes = [];\r\n\t\t_objectPool = [];\r\n\t\t_objectTexture = Game.assets.getTexture(\"benchmark_object\");\r\n\t\t\r\n\t\taddEventListener(Event.ENTER_FRAME, onEnterFrame);\r\n\t}\r\n\t\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\tremoveEventListener(Event.ENTER_FRAME, onEnterFrame);\r\n\t\t_startButton.removeEventListener(Event.TRIGGERED, onStartButtonTriggered);\r\n\t\t\r\n\t\tfor (object in _objectPool)\r\n\t\tobject.dispose();\r\n\t\t\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\tprivate function onStartButtonTriggered():Void\r\n\t{\r\n\t\ttrace(\"Starting benchmark\");\r\n\t\t\r\n\t\t_startButton.visible = false;\r\n\t\t_started = true;\r\n\t\t_targetFps = untyped Starling.Current.nativeStage.frameRate;\r\n\t\t_frameCount = 0;\r\n\t\t_failCount = 0;\r\n\t\t_phase = 0;\r\n\t\t\r\n\t\tfor (i in 0...FRAME_TIME_WINDOW_SIZE){_frameTimes[i] = 1.0 / _targetFps;\r\n\t\t}\r\n\t\t\r\n\t\tif (_resultText != null) \r\n\t\t{\r\n\t\t\t_resultText.removeFromParent(true);\r\n\t\t\t_resultText = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function onEnterFrame(event:EnterFrameEvent, passedTime:Float):Void\r\n\t{\r\n\t\tif (!_started)\t\t\t return;\r\n\t\t\r\n\t\t_frameCount++;\r\n\t\t_container.rotation += event.passedTime * 0.5;\r\n\t\t_frameTimes[FRAME_TIME_WINDOW_SIZE] = 0.0;\r\n\t\t\r\n\t\tfor (i in 0...FRAME_TIME_WINDOW_SIZE){_frameTimes[i] += passedTime;\r\n\t\t}\r\n\t\t\r\n\t\tvar measuredFps:Float = FRAME_TIME_WINDOW_SIZE / _frameTimes.shift();\r\n\t\t\r\n\t\tif (_phase == 0) \r\n\t\t{\r\n\t\t\tif (measuredFps < 0.985 * _targetFps) \r\n\t\t\t{\r\n\t\t\t\t_failCount++;\r\n\t\t\t\t\r\n\t\t\t\tif (_failCount == MAX_FAIL_COUNT) \r\n\t\t\t\t\t_phase = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\taddTestObjects(16);\r\n\t\t\t\t_container.scale *= 0.99;\r\n\t\t\t\t_failCount = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (_phase == 1) \r\n\t\t{\r\n\t\t\tif (measuredFps > 0.99 * _targetFps) \r\n\t\t\t{\r\n\t\t\t\t_failCount--;\r\n\t\t\t\t\r\n\t\t\t\tif (_failCount == 0) \r\n\t\t\t\t\tbenchmarkComplete();\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tremoveTestObjects(1);\r\n\t\t\t\t_container.scale /= 0.9993720513;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (_frameCount % cast(_targetFps / 4, Int) == 0) \r\n\t\t\t_statusText.text = Std.string(_container.numChildren) + \" objects\";\r\n\t}\r\n\t\r\n\tprivate function addTestObjects(count:Int):Void\r\n\t{\r\n\t\tvar scale:Float = 1.0 / _container.scale;\r\n\t\t\r\n\t\tfor (i in 0...count){\r\n\t\t\tvar egg:DisplayObject = getObjectFromPool();\r\n\t\t\tvar distance:Float = (100 + Math.random() * 100) * scale;\r\n\t\t\tvar angle:Float = Math.random() * Math.PI * 2.0;\r\n\t\t\t\r\n\t\t\tegg.x = Math.cos(angle) * distance;\r\n\t\t\tegg.y = Math.sin(angle) * distance;\r\n\t\t\tegg.rotation = angle + Math.PI / 2.0;\r\n\t\t\tegg.scale = scale;\r\n\t\t\t\r\n\t\t\t_container.addChild(egg);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function removeTestObjects(count:Int):Void\r\n\t{\r\n\t\tvar numChildren:Int = _container.numChildren;\r\n\t\t\r\n\t\tif (count >= numChildren) \r\n\t\t\tcount = numChildren;\r\n\t\t\r\n\t\tfor (i in 0...count){putObjectToPool(_container.removeChildAt(_container.numChildren - 1));\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function getObjectFromPool():DisplayObject\r\n\t{\r\n\t\t// we pool mainly to avoid any garbage collection while the benchmark is running\r\n\t\t\r\n\t\tif (_objectPool.length == 0) \r\n\t\t{\r\n\t\t\tvar image:Image = new Image(_objectTexture);\r\n\t\t\timage.alignPivot();\r\n\t\t\timage.pixelSnapping = false;  // slightly faster (and doesn't work here, anyway)  \r\n\t\t\treturn image;\r\n\t\t}\r\n\t\telse \r\n\t\treturn _objectPool.pop();\r\n\t}\r\n\t\r\n\tprivate function putObjectToPool(object:DisplayObject):Void\r\n\t{\r\n\t\t_objectPool[_objectPool.length] = object;\r\n\t}\r\n\t\r\n\tprivate function benchmarkComplete():Void\r\n\t{\r\n\t\t_started = false;\r\n\t\t_startButton.visible = true;\r\n\t\t\r\n\t\tvar fps:Int = untyped Starling.Current.nativeStage.frameRate;\r\n\t\tvar numChildren:Int = _container.numChildren;\r\n\t\tvar resultString:String = StringUtil.format(\r\n\t\t\t\"Result:\\n{0} objects\\nwith {1} fps\",\r\n\t\t\t[numChildren, fps]\r\n\t\t);\r\n\t\t\r\n\t\t_resultText = new TextField(240, 200, resultString);\r\n\t\t_resultText.format.size = 30;\r\n\t\t_resultText.x = Constants.CenterX - _resultText.width / 2;\r\n\t\t_resultText.y = Constants.CenterY - _resultText.height / 2;\r\n\t\t\r\n\t\taddChild(_resultText);\r\n\t\t\r\n\t\t_container.scale = 1.0;\r\n\t\t_frameTimes.splice(0, _frameTimes.length);\r\n\t\t_statusText.text = \"\";\r\n\t\t\r\n\t\tvar i:Int = numChildren - 1;\r\n\t\twhile (i >= 0){putObjectToPool(_container.removeChildAt(i));\r\n\t\t\t--i;\r\n\t\t}\r\n\t}\r\n}\r\n","package scenes;\r\n\r\nimport scenes.Scene;\r\n\r\nimport starling.display.BlendMode;\r\nimport starling.display.Button;\r\nimport starling.display.Image;\r\nimport starling.events.Event;\r\nimport starling.text.TextField;\r\n\r\nimport utils.MenuButton;\r\n\r\nclass BlendModeScene extends Scene\r\n{\r\n\tprivate var _button:Button;\r\n\tprivate var _image:Image;\r\n\tprivate var _infoText:TextField;\r\n\t\r\n\tprivate var _blendModes:Array<Dynamic> = [\r\n\t\tBlendMode.NORMAL, \r\n\t\tBlendMode.MULTIPLY, \r\n\t\tBlendMode.SCREEN, \r\n\t\tBlendMode.ADD, \r\n\t\tBlendMode.ERASE, \r\n\t\tBlendMode.NONE];\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t_button = new MenuButton(\"Switch Mode\");\r\n\t\t_button.x = (Constants.CenterX - _button.width / 2);\r\n\t\t_button.y = 15;\r\n\t\t_button.addEventListener(Event.TRIGGERED, onButtonTriggered);\r\n\t\taddChild(_button);\r\n\t\t\r\n\t\t_image = new Image(Game.assets.getTexture(\"starling_rocket\"));\r\n\t\t_image.x = (Constants.CenterX - _image.width / 2);\r\n\t\t_image.y = 170;\r\n\t\taddChild(_image);\r\n\t\t\r\n\t\t_infoText = new TextField(300, 32);\r\n\t\t_infoText.format.size = 19;\r\n\t\t_infoText.x = 10;\r\n\t\t_infoText.y = 330;\r\n\t\taddChild(_infoText);\r\n\t\t\r\n\t\tonButtonTriggered();\r\n\t}\r\n\t\r\n\tprivate function onButtonTriggered():Void\r\n\t{\r\n\t\tvar blendMode:String = cast(_blendModes.shift(), String);\r\n\t\t_blendModes.push(blendMode);\r\n\t\t\r\n\t\t_infoText.text = blendMode;\r\n\t\t_image.blendMode = blendMode;\r\n\t}\r\n}\r\n","package scenes;\r\n\r\nimport scenes.Scene;\r\n\r\nimport starling.text.TextField;\r\nimport starling.utils.Align;\r\n\r\nimport utils.RoundButton;\r\n\r\nclass CustomHitTestScene extends Scene\r\n{\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\tvar description:String = \r\n\t\t\"Pushing the bird only works when the touch occurs within a circle.\" +\r\n\t\t\"This can be accomplished by overriding the method 'hitTest'.\";\r\n\t\t\r\n\t\tvar infoText:TextField = new TextField(300, 100, description);\r\n\t\tinfoText.x = infoText.y = 10;\r\n\t\tinfoText.format.verticalAlign = Align.TOP;\r\n\t\tinfoText.format.horizontalAlign = Align.CENTER;\r\n\t\taddChild(infoText);\r\n\t\t\r\n\t\t// 'RoundButton' is a helper class of the Demo, not a part of Starling!\r\n\t\t// Have a look at its code to understand this sample.\r\n\t\t\r\n\t\tvar button:RoundButton = new RoundButton(Game.assets.getTexture(\"starling_round\"));\r\n\t\tbutton.x = Constants.CenterX - (button.width / 2);\r\n\t\tbutton.y = 150;\r\n\t\taddChild(button);\r\n\t}\r\n}\r\n","package scenes;\r\n\r\nimport scenes.Scene;\r\n\r\nimport flash.display.BitmapData;\r\nimport flash.display.BitmapDataChannel;\r\n\r\nimport starling.core.Starling;\r\nimport starling.display.Button;\r\nimport starling.display.Image;\r\nimport starling.events.Event;\r\nimport starling.filters.BlurFilter;\r\nimport starling.filters.ColorMatrixFilter;\r\nimport starling.filters.DisplacementMapFilter;\r\nimport starling.filters.DropShadowFilter;\r\nimport starling.filters.FilterChain;\r\nimport starling.filters.FragmentFilter;\r\nimport starling.filters.GlowFilter;\r\nimport starling.text.TextField;\r\nimport starling.textures.Texture;\r\n\r\nimport utils.MenuButton;\r\n\r\nclass FilterScene extends Scene\r\n{\r\n\tprivate var _button:Button;\r\n\tprivate var _image:Image;\r\n\tprivate var _infoText:TextField;\r\n\tprivate var _filterInfos:Array<Dynamic>;\r\n\tprivate var _displacementMap:Texture;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t_button = new MenuButton(\"Switch Filter\");\r\n\t\t_button.x = (Constants.CenterX - _button.width / 2);\r\n\t\t_button.y = 15;\r\n\t\t_button.addEventListener(Event.TRIGGERED, onButtonTriggered);\r\n\t\taddChild(_button);\r\n\t\t\r\n\t\t_image = new Image(Game.assets.getTexture(\"starling_rocket\"));\r\n\t\t_image.x = (Constants.CenterX - _image.width / 2);\r\n\t\t_image.y = 170;\r\n\t\taddChild(_image);\r\n\t\t\r\n\t\t_infoText = new TextField(300, 32);\r\n\t\t_infoText.format.size = 19;\r\n\t\t_infoText.x = 10;\r\n\t\t_infoText.y = 330;\r\n\t\taddChild(_infoText);\r\n\t\t\r\n\t\tinitFilters();\r\n\t\tonButtonTriggered();\r\n\t}\r\n\t\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\t_displacementMap.dispose();\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\tprivate function onButtonTriggered():Void\r\n\t{\r\n\t\tvar filterInfo:Array<Dynamic> = cast(_filterInfos.shift(), Array<Dynamic>);\r\n\t\t_filterInfos.push(filterInfo);\r\n\t\t\r\n\t\t_infoText.text = filterInfo[0];\r\n\t\t_image.filter = filterInfo[1];\r\n\t}\r\n\t\r\n\tprivate function initFilters():Void\r\n\t{\r\n\t\t_filterInfos = [\r\n\t\t\t\t[\"Identity\", new FragmentFilter()], \r\n\t\t\t\t[\"Blur\", new BlurFilter()], \r\n\t\t\t\t[\"Drop Shadow\", new DropShadowFilter()], \r\n\t\t\t\t[\"Glow\", new GlowFilter()]];\r\n\t\t\r\n\t\t_displacementMap = createDisplacementMap(_image.width, _image.height);\r\n\t\t\r\n\t\tvar displacementFilter:DisplacementMapFilter = new DisplacementMapFilter(\r\n\t\t_displacementMap, null, BitmapDataChannel.RED, BitmapDataChannel.GREEN, 25, 25);\r\n\t\t_filterInfos.push([\"Displacement Map\", displacementFilter]);\r\n\t\t\r\n\t\tvar invertFilter:ColorMatrixFilter = new ColorMatrixFilter();\r\n\t\tinvertFilter.invert();\r\n\t\t_filterInfos.push([\"Invert\", invertFilter]);\r\n\t\t\r\n\t\tvar grayscaleFilter:ColorMatrixFilter = new ColorMatrixFilter();\r\n\t\tgrayscaleFilter.adjustSaturation(-1);\r\n\t\t_filterInfos.push([\"Grayscale\", grayscaleFilter]);\r\n\t\t\r\n\t\tvar saturationFilter:ColorMatrixFilter = new ColorMatrixFilter();\r\n\t\tsaturationFilter.adjustSaturation(1);\r\n\t\t_filterInfos.push([\"Saturation\", saturationFilter]);\r\n\t\t\r\n\t\tvar contrastFilter:ColorMatrixFilter = new ColorMatrixFilter();\r\n\t\tcontrastFilter.adjustContrast(0.75);\r\n\t\t_filterInfos.push([\"Contrast\", contrastFilter]);\r\n\t\t\r\n\t\tvar brightnessFilter:ColorMatrixFilter = new ColorMatrixFilter();\r\n\t\tbrightnessFilter.adjustBrightness(-0.25);\r\n\t\t_filterInfos.push([\"Brightness\", brightnessFilter]);\r\n\t\t\r\n\t\tvar hueFilter:ColorMatrixFilter = new ColorMatrixFilter();\r\n\t\thueFilter.adjustHue(1);\r\n\t\t_filterInfos.push([\"Hue\", hueFilter]);\r\n\t\t\r\n\t\tvar chain:FilterChain = new FilterChain([hueFilter, new DropShadowFilter()]);\r\n\t\t_filterInfos.push([\"Hue + Shadow\", chain]);\r\n\t}\r\n\t\r\n\tprivate function createDisplacementMap(width:Float, height:Float):Texture\r\n\t{\r\n\t\tvar scale:Float = Starling.ContentScaleFactor;\r\n\t\tvar map:BitmapData = new BitmapData(Math.floor(width * scale), Math.floor(height * scale), false);\r\n\t\tmap.perlinNoise(20 * scale, 20 * scale, 3, 5, false, true);\r\n\t\tvar texture:Texture = Texture.fromBitmapData(map, false, false, scale);\r\n\t\treturn texture;\r\n\t}\r\n}\r\n","package scenes;\r\n\r\nimport scenes.Scene;\r\n\r\nimport flash.geom.Point;\r\n\r\nimport starling.core.Starling;\r\nimport starling.display.Canvas;\r\nimport starling.display.Image;\r\nimport starling.display.Quad;\r\nimport starling.display.Sprite;\r\nimport starling.events.Touch;\r\nimport starling.events.TouchEvent;\r\nimport starling.events.TouchPhase;\r\nimport starling.filters.ColorMatrixFilter;\r\nimport starling.text.TextField;\r\n\r\nclass MaskScene extends Scene\r\n{\r\n\tprivate var _contents:Sprite;\r\n\tprivate var canvasMask:Canvas;\r\n\tprivate var _maskDisplay:Canvas;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t_contents = new Sprite();\r\n\t\taddChild(_contents);\r\n\t\t\r\n\t\tvar stageWidth:Float = Starling.Current.stage.stageWidth;\r\n\t\tvar stageHeight:Float = Starling.Current.stage.stageHeight;\r\n\t\t\r\n\t\tvar touchQuad:Quad = new Quad(stageWidth, stageHeight);\r\n\t\ttouchQuad.alpha = 0;  // only used to get touch events  \r\n\t\taddChildAt(touchQuad, 0);\r\n\t\t\r\n\t\tvar image:Image = new Image(Game.assets.getTexture(\"flight_00\"));\r\n\t\timage.x = (stageWidth - image.width) / 2;\r\n\t\timage.y = 80;\r\n\t\t_contents.addChild(image);\r\n\t\t\r\n\t\t// just to prove it works, use a filter on the image.\r\n\t\tvar cm:ColorMatrixFilter = new ColorMatrixFilter();\r\n\t\tcm.adjustHue(-0.5);\r\n\t\timage.filter = cm;\r\n\t\t\r\n\t\tvar maskText:TextField = new TextField(256, 128, \r\n\t\t\"Move the mouse (or a finger) over the screen to move the mask.\");\r\n\t\tmaskText.x = (stageWidth - maskText.width) / 2;\r\n\t\tmaskText.y = 260;\r\n\t\tmaskText.format.size = 20;\r\n\t\t_contents.addChild(maskText);\r\n\t\t\r\n\t\t_maskDisplay = createCircle();\r\n\t\t_maskDisplay.alpha = 0.1;\r\n\t\t_maskDisplay.touchable = false;\r\n\t\taddChild(_maskDisplay);\r\n\t\t\r\n\t\tcanvasMask = createCircle();\r\n\t\t_contents.mask = canvasMask;\r\n\t\t\r\n\t\taddEventListener(TouchEvent.TOUCH, OnTouch);\r\n\t}\r\n\t\r\n\tprivate function OnTouch(event:TouchEvent):Void\r\n\t{\r\n\t\tvar touch:Touch = event.getTouch(this, TouchPhase.HOVER);\r\n\t\tif (touch == null) touch = event.getTouch(this, TouchPhase.BEGAN);\r\n\t\tif (touch == null) touch = event.getTouch(this, TouchPhase.MOVED);\r\n\t\t\r\n\t\tif (touch != null) \r\n\t\t{\r\n\t\t\tvar localPos:Point = touch.getLocation(this);\r\n\t\t\tcanvasMask.x = _maskDisplay.x = localPos.x;\r\n\t\t\tcanvasMask.y = _maskDisplay.y = localPos.y;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function createCircle():Canvas\r\n\t{\r\n\t\tvar circle:Canvas = new Canvas();\r\n\t\tcircle.beginFill(0xff0000);\r\n\t\tcircle.drawCircle(0, 0, 100);\r\n\t\tcircle.endFill();\r\n\t\treturn circle;\r\n\t}\r\n}\r\n","package scenes;\r\n\r\nimport scenes.Scene;\r\n\r\nimport flash.media.Sound;\r\n\r\nimport starling.core.Starling;\r\nimport starling.display.MovieClip;\r\nimport starling.events.Event;\r\nimport starling.textures.Texture;\r\n\r\nclass MovieScene extends Scene\r\n{\r\n\tprivate var _movie:MovieClip;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\tvar frames:Array<Texture> = Game.assets.getTextures(\"flight\");\r\n\t\t_movie = new MovieClip(frames, 15);\r\n\t\t\r\n\t\t// add sounds\r\n\t\tvar stepSound:Sound = Game.assets.getSound(\"wing_flap\");\r\n\t\t_movie.setFrameSound(2, stepSound);\r\n\t\t\r\n\t\t// move the clip to the center and add it to the stage\r\n\t\t_movie.x = Constants.CenterX - (_movie.width / 2);\r\n\t\t_movie.y = Constants.CenterY - (_movie.height / 2);\r\n\t\taddChild(_movie);\r\n\t\t\r\n\t\t// like any animation, the movie needs to be added to the juggler!\r\n\t\t// this is the recommended way to do that.\r\n\t\taddEventListener(Event.ADDED_TO_STAGE, onAddedToStage);\r\n\t\taddEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);\r\n\t}\r\n\t\r\n\tprivate function onAddedToStage():Void\r\n\t{\r\n\t\tStarling.Juggler.add(_movie);\r\n\t}\r\n\t\r\n\tprivate function onRemovedFromStage():Void\r\n\t{\r\n\t\tStarling.Juggler.remove(_movie);\r\n\t}\r\n\t\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\tremoveEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);\r\n\t\tremoveEventListener(Event.ADDED_TO_STAGE, onAddedToStage);\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n","package scenes;\r\n\r\nimport scenes.Scene;\r\n\r\nimport flash.geom.Point;\r\nimport flash.utils.Dictionary;\r\n\r\nimport starling.display.BlendMode;\r\nimport starling.display.Button;\r\nimport starling.display.Image;\r\nimport starling.events.Event;\r\nimport starling.events.Touch;\r\nimport starling.events.TouchEvent;\r\nimport starling.events.TouchPhase;\r\nimport starling.text.TextField;\r\nimport starling.textures.RenderTexture;\r\n\r\nimport utils.MenuButton;\r\n\r\nclass RenderTextureScene extends Scene\r\n{\r\n\tprivate var _renderTexture:RenderTexture;\r\n\tprivate var _canvas:Image;\r\n\tprivate var _brush:Image;\r\n\tprivate var _button:Button;\r\n\tprivate var _colors:Map<Int, Int>;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t_colors = new Map<Int, Int>();\r\n\t\t_renderTexture = new RenderTexture(320, 435);\r\n\t\t\r\n\t\t_canvas = new Image(_renderTexture);\r\n\t\t_canvas.addEventListener(TouchEvent.TOUCH, OnTouch);\r\n\t\taddChild(_canvas);\r\n\t\t\r\n\t\t_brush = new Image(Game.assets.getTexture(\"brush\"));\r\n\t\t_brush.pivotX = _brush.width / 2;\r\n\t\t_brush.pivotY = _brush.height / 2;\r\n\t\t_brush.blendMode = BlendMode.NORMAL;\r\n\t\t\r\n\t\tvar infoText:TextField = new TextField(256, 128, \"Touch the screen\\nto draw!\");\r\n\t\tinfoText.format.size = 24;\r\n\t\tinfoText.x = Constants.CenterX - infoText.width / 2;\r\n\t\tinfoText.y = Constants.CenterY - infoText.height / 2;\r\n\t\t_renderTexture.draw(infoText);\r\n\t\t\r\n\t\t_button = new MenuButton(\"Mode: Draw\");\r\n\t\t_button.x = (Constants.CenterX - _button.width / 2);\r\n\t\t_button.y = 15;\r\n\t\t_button.addEventListener(Event.TRIGGERED, onButtonTriggered);\r\n\t\taddChild(_button);\r\n\t}\r\n\t\r\n\tprivate function OnTouch(event:TouchEvent):Void\r\n\t{\r\n\t\t// touching the canvas will draw a brush texture. The 'drawBundled' method is not\r\n\t\t// strictly necessary, but it's faster when you are drawing with several fingers\r\n\t\t// simultaneously.\r\n\t\t\r\n\t\t_renderTexture.drawBundled(function():Void\r\n\t\t\t\t{\r\n\t\t\t\t\tvar touches:Array<Touch> = event.getTouches(_canvas);\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (touch in touches)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (touch.phase == TouchPhase.BEGAN) \r\n\t\t\t\t\t\t\t_colors.set(touch.id, cast Math.random() * 0x3FFFFFFF);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (touch.phase == TouchPhase.HOVER || touch.phase == TouchPhase.ENDED) \r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar location:Point = touch.getLocation(_canvas);\r\n\t\t\t\t\t\t_brush.x = location.x;\r\n\t\t\t\t\t\t_brush.y = location.y;\r\n\t\t\t\t\t\t_brush.color = _colors.get(touch.id);\r\n\t\t\t\t\t\t_brush.rotation = Math.random() * Math.PI * 2.0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_renderTexture.draw(_brush);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t}\r\n\t\r\n\tprivate function onButtonTriggered():Void\r\n\t{\r\n\t\tif (_brush.blendMode == BlendMode.NORMAL) \r\n\t\t{\r\n\t\t\t_brush.blendMode = BlendMode.ERASE;\r\n\t\t\t_button.text = \"Mode: Erase\";\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\t_brush.blendMode = BlendMode.NORMAL;\r\n\t\t\t_button.text = \"Mode: Draw\";\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\t_renderTexture.dispose();\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n","package scenes;\r\n\r\n\r\nimport flash.display3D.Context3DTriangleFace;\r\n\r\nimport starling.core.Starling;\r\nimport starling.display.Image;\r\nimport starling.display.Sprite3D;\r\nimport starling.events.Event;\r\nimport starling.rendering.Painter;\r\nimport starling.textures.Texture;\r\n\r\nclass Sprite3DScene extends Scene\r\n{\r\n\tprivate var _cube:Sprite3D;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\tvar texture:Texture = Game.assets.getTexture(\"gamua-logo\");\r\n\t\t\r\n\t\t_cube = createCube(texture);\r\n\t\t_cube.x = Constants.CenterX;\r\n\t\t_cube.y = Constants.CenterY;\r\n\t\t_cube.z = 100;\r\n\t\t\r\n\t\taddChild(_cube);\r\n\t\t\r\n\t\taddEventListener(Event.ADDED_TO_STAGE, start);\r\n\t\taddEventListener(Event.REMOVED_FROM_STAGE, stop);\r\n\t}\r\n\t\r\n\tprivate function start():Void\r\n\t{\r\n\t\tStarling.Juggler.tween(_cube, 6, {\r\n\t\t\trotationX:2 * Math.PI,\r\n\t\t\trepeatCount:0,\r\n\t\t});\r\n\t\tStarling.Juggler.tween(_cube, 7, {\r\n\t\t\trotationY:2 * Math.PI,\r\n\t\t\trepeatCount:0,\r\n\t\t});\r\n\t\tStarling.Juggler.tween(_cube, 8, {\r\n\t\t\trotationZ:2 * Math.PI,\r\n\t\t\trepeatCount:0,\r\n\t\t});\r\n\t}\r\n\t\r\n\tprivate function stop():Void\r\n\t{\r\n\t\tStarling.Juggler.removeTweens(_cube);\r\n\t}\r\n\t\r\n\tprivate function createCube(texture:Texture):Sprite3D\r\n\t{\r\n\t\tvar offset:Float = texture.width / 2;\r\n\t\t\r\n\t\tvar front:Sprite3D = createSidewall(texture, 0xff0000);\r\n\t\tfront.z = -offset;\r\n\t\t\r\n\t\tvar back:Sprite3D = createSidewall(texture, 0x00ff00);\r\n\t\tback.rotationX = Math.PI;\r\n\t\tback.z = offset;\r\n\t\t\r\n\t\tvar top:Sprite3D = createSidewall(texture, 0x0000ff);\r\n\t\ttop.y = -offset;\r\n\t\ttop.rotationX = Math.PI / -2.0;\r\n\t\t\r\n\t\tvar bottom:Sprite3D = createSidewall(texture, 0xffff00);\r\n\t\tbottom.y = offset;\r\n\t\tbottom.rotationX = Math.PI / 2.0;\r\n\t\t\r\n\t\tvar left:Sprite3D = createSidewall(texture, 0xff00ff);\r\n\t\tleft.x = -offset;\r\n\t\tleft.rotationY = Math.PI / 2.0;\r\n\t\t\r\n\t\tvar right:Sprite3D = createSidewall(texture, 0x00ffff);\r\n\t\tright.x = offset;\r\n\t\tright.rotationY = Math.PI / -2.0;\r\n\t\t\r\n\t\tvar cube:Sprite3D = new Sprite3D();\r\n\t\tcube.addChild(front);\r\n\t\tcube.addChild(back);\r\n\t\tcube.addChild(top);\r\n\t\tcube.addChild(bottom);\r\n\t\tcube.addChild(left);\r\n\t\tcube.addChild(right);\r\n\t\t\r\n\t\treturn cube;\r\n\t}\r\n\t\r\n\tprivate function createSidewall(texture:Texture, color:Int = 0xffffff):Sprite3D\r\n\t{\r\n\t\tvar image:Image = new Image(texture);\r\n\t\timage.color = color;\r\n\t\timage.alignPivot();\r\n\t\t\r\n\t\tvar sprite:Sprite3D = new Sprite3D();\r\n\t\tsprite.addChild(image);\r\n\t\t\r\n\t\treturn sprite;\r\n\t}\r\n\t\r\n\toverride public function render(painter:Painter):Void\r\n\t{\r\n\t\t// Starling does not make any depth-tests, so we use a trick in order to only show\r\n\t\t// the front quads: we're activating backface culling, i.e. we hide triangles at which\r\n\t\t// we look from behind.\r\n\t\t\r\n\t\tpainter.pushState();\r\n\t\tpainter.state.culling = Context3DTriangleFace.BACK;\r\n\t\tsuper.render(painter);\r\n\t\tpainter.popState();\r\n\t}\r\n}\r\n","package scenes;\r\n\r\n\r\nimport starling.text.BitmapFont;\r\nimport starling.text.TextField;\r\nimport starling.text.TextFormat;\r\nimport starling.utils.Align;\r\nimport starling.utils.Color;\r\n\r\nclass TextScene extends Scene\r\n{\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\tinit();\r\n\t}\r\n\t\r\n\tprivate function init():Void\r\n\t{\r\n\t\t// TrueType fonts\r\n\t\t\r\n\t\tvar offset:Int = 10;\r\n\t\tvar ttFont:String = \"Ubuntu\";\r\n\t\tvar ttFontSize:Int = 19;\r\n\t\t\r\n\t\tvar colorTF:TextField = new TextField(300, 80, \r\n\t\t\"TextFields can have a border and a color. They can be aligned in different ways, ...\");\r\n\t\tcolorTF.format = new TextFormat(ttFont, ttFontSize, 0x33399);\r\n\t\tcolorTF.x = colorTF.y = offset;\r\n\t\tcolorTF.border = true;\r\n\t\taddChild(colorTF);\r\n\t\t\r\n\t\tvar leftTF:TextField = new TextField(145, 80, \"... e.g.\\ntop-left ...\");\r\n\t\tleftTF.format = new TextFormat(ttFont, ttFontSize, 0x993333);\r\n\t\tleftTF.format.horizontalAlign = Align.LEFT;\r\n\t\tleftTF.format.verticalAlign = Align.TOP;\r\n\t\tleftTF.x = offset;\r\n\t\tleftTF.y = colorTF.y + colorTF.height + offset;\r\n\t\tleftTF.border = true;\r\n\t\taddChild(leftTF);\r\n\t\t\r\n\t\tvar rightTF:TextField = new TextField(145, 80, \"... or\\nbottom right ...\");\r\n\t\trightTF.format = new TextFormat(ttFont, ttFontSize, 0x208020);\r\n\t\trightTF.format.horizontalAlign = Align.RIGHT;\r\n\t\trightTF.format.verticalAlign = Align.BOTTOM;\r\n\t\trightTF.border = true;\r\n\t\trightTF.x = 2 * offset + leftTF.width;\r\n\t\trightTF.y = leftTF.y;\r\n\t\taddChild(rightTF);\r\n\t\t\r\n\t\tvar fontTF:TextField = new TextField(300, 80, \r\n\t\t\"... or centered. Embedded fonts are detected automatically and \" +\r\n\t\t\"<font color='#208080'>support</font> \" +\r\n\t\t\"<font color='#993333'>basic</font> \" +\r\n\t\t\"<font color='#333399'>HTML</font> \" +\r\n\t\t\"<font color='#208020'>formatting</font>.\");\r\n\t\tfontTF.format = new TextFormat(ttFont, ttFontSize);\r\n\t\tfontTF.x = offset;\r\n\t\tfontTF.y = leftTF.y + leftTF.height + offset;\r\n\t\tfontTF.format.bold = true;\r\n\t\tfontTF.border = true;\r\n\t\tfontTF.isHtmlText = true;\r\n\t\taddChild(fontTF);\r\n\t\t\r\n\t\t// Bitmap fonts!\r\n\t\t\r\n\t\t// First, you will need to create a bitmap font texture.\r\n\t\t//\r\n\t\t// E.g. with this tool: www.angelcode.com/products/bmfont/ or one that uses the same\r\n\t\t// data format. Export the font data as an XML file, and the texture as a png with\r\n\t\t// white (!) characters on a transparent background (32 bit).\r\n\t\t//\r\n\t\t// Then, you just have to register the font at the TextField class.\r\n\t\t// Look at the file \"Assets.as\" to see how this is done.\r\n\t\t// After that, you can use them just like a conventional TrueType font.\r\n\t\t\r\n\t\tvar bmpFontTF:TextField = new TextField(300, 150, \"It is very easy to use Bitmap fonts,\\nas well!\");\r\n\t\tbmpFontTF.format.font = \"Desyrel\";\r\n\t\tbmpFontTF.format.size = BitmapFont.NATIVE_SIZE;  // native bitmap font size, no scaling  \r\n\t\tbmpFontTF.format.color = Color.WHITE;  // white will draw the texture as is (no tinting)  \r\n\t\tbmpFontTF.x = offset;\r\n\t\tbmpFontTF.y = fontTF.y + 20 + offset;\r\n\t\taddChild(bmpFontTF);\r\n\t}\r\n}\r\n","package scenes;\r\n\r\nimport flash.errors.Error;\r\nimport openfl.utils.ByteArray;\r\n\r\nimport starling.display.Image;\r\nimport starling.text.TextField;\r\nimport starling.textures.Texture;\r\n\r\nclass TextureScene extends Scene\r\n{\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t// the flight textures are actually loaded from an atlas texture.\r\n\t\t// the \"AssetManager\" class wraps it away for us.\r\n\t\t\r\n\t\tvar image1:Image = new Image(Game.assets.getTexture(\"flight_00\"));\r\n\t\timage1.x = -20;\r\n\t\timage1.y = 0;\r\n\t\taddChild(image1);\r\n\t\t\r\n\t\tvar image2:Image = new Image(Game.assets.getTexture(\"flight_04\"));\r\n\t\timage2.x = 90;\r\n\t\timage2.y = 85;\r\n\t\taddChild(image2);\r\n\t\t\r\n\t\tvar image3:Image = new Image(Game.assets.getTexture(\"flight_08\"));\r\n\t\timage3.x = 100;\r\n\t\timage3.y = -60;\r\n\t\taddChild(image3);\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\t// display a compressed texture\r\n\t\t\t\r\n\t\t\tvar compressedTexture:Texture = Game.assets.getTexture(\"compressed_texture\");\r\n\t\t\tvar image:Image = new Image(compressedTexture);\r\n\t\t\timage.x = Constants.CenterX - image.width / 2;\r\n\t\t\timage.y = 280;\r\n\t\t\taddChild(image);\r\n\t\t} \r\n\t\tcatch (e:Error)\r\n\t\t{\r\n\t\t\t// if it fails, it's probably not supported\r\n\t\t\tvar textField:TextField = new TextField(220, 128, \r\n\t\t\t\"Update to Flash Player 11.4 or AIR 3.4 (swf-version=17) to see a compressed \" +\r\n\t\t\t\"ATF texture instead of this boring text.\");\r\n\t\t\ttextField.format.size = 14;\r\n\t\t\ttextField.x = Constants.CenterX - textField.width / 2;\r\n\t\t\ttextField.y = 280;\r\n\t\t\taddChild(textField);\r\n\t\t}\r\n\t}\r\n}\r\n","package scenes;\r\n\r\n\r\nimport starling.display.Image;\r\nimport starling.text.TextField;\r\nimport starling.utils.Deg2rad;\r\n\r\nimport utils.TouchSheet;\r\n\r\nclass TouchScene extends Scene\r\n{\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\tvar description:String = \"[use Ctrl/Cmd & Shift to simulate multi-touch]\";\r\n\t\t\r\n\t\tvar infoText:TextField = new TextField(300, 25, description);\r\n\t\tinfoText.x = infoText.y = 10;\r\n\t\taddChild(infoText);\r\n\t\t\r\n\t\t// to find out how to react to touch events have a look at the TouchSheet class!\r\n\t\t// It's part of the demo.\r\n\t\t\r\n\t\tvar sheet:TouchSheet = new TouchSheet(new Image(Game.assets.getTexture(\"starling_sheet\")));\r\n\t\tsheet.x = Constants.CenterX;\r\n\t\tsheet.y = Constants.CenterY;\r\n\t\tsheet.rotation = Deg2rad.call(10);\r\n\t\taddChild(sheet);\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.animation;\r\n\r\nimport haxe.Constraints.Function;\r\nimport starling.animation.IAnimatable;\r\nimport starling.utils.Execute;\r\n\r\nimport starling.events.Event;\r\nimport starling.events.EventDispatcher;\r\n\r\n/** A DelayedCall allows you to execute a method after a certain time has passed. Since it \r\n *  implements the IAnimatable interface, it can be added to a juggler. In most cases, you \r\n *  do not have to use this class directly; the juggler class contains a method to delay\r\n *  calls directly. \r\n * \r\n *  <p>DelayedCall dispatches an Event of type 'Event.REMOVE_FROM_JUGGLER' when it is finished,\r\n *  so that the juggler automatically removes it when its no longer needed.</p>\r\n * \r\n *  @see Juggler\r\n */\r\nclass DelayedCall extends EventDispatcher implements IAnimatable\r\n{\r\n\tpublic var isComplete(get, never):Bool;\r\n\tpublic var totalTime(get, never):Float;\r\n\tpublic var currentTime(get, never):Float;\r\n\tpublic var repeatCount(get, set):Int;\r\n\tpublic var callback(get, never):Function;\r\n\tpublic var arguments(get, never):Array<Dynamic>;\r\n\r\n\tprivate var _currentTime:Float;\r\n\tprivate var _totalTime:Float;\r\n\tprivate var _callback:Function;\r\n\tprivate var _args:Array<Dynamic>;\r\n\tprivate var _repeatCount:Int;\r\n\t\r\n\t/** Creates a delayed call. */\r\n\tpublic function new(callback:Function, delay:Float, args:Array<Dynamic> = null)\r\n\t{\r\n\t\tsuper();\r\n\t\treset(callback, delay, args);\r\n\t}\r\n\t\r\n\t/** Resets the delayed call to its default values, which is useful for pooling. */\r\n\tpublic function reset(callback:Function, delay:Float, args:Array<Dynamic> = null):DelayedCall\r\n\t{\r\n\t\t_currentTime = 0;\r\n\t\t_totalTime = Math.max(delay, 0.0001);\r\n\t\t_callback = callback;\r\n\t\t_args = args;\r\n\t\t_repeatCount = 1;\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\tpublic function advanceTime(time:Float):Void\r\n\t{\r\n\t\tvar previousTime:Float = _currentTime;\r\n\t\t_currentTime += time;\r\n\t\t\r\n\t\tif (_currentTime > _totalTime) \r\n\t\t\t_currentTime = _totalTime;\r\n\t\t\r\n\t\tif (previousTime < _totalTime && _currentTime >= _totalTime) \r\n\t\t{\r\n\t\t\tif (_repeatCount == 0 || _repeatCount > 1) \r\n\t\t\t{\r\n\t\t\t\t//_callback.apply(null, _args);\r\n\t\t\t\tExecute.call(_callback, _args);\r\n\t\t\t\tif (_repeatCount > 0)\t\t\t\t\t _repeatCount -= 1;\r\n\t\t\t\t_currentTime = 0;\r\n\t\t\t\tadvanceTime((previousTime + time) - _totalTime);\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t// save call & args: they might be changed through an event listener\r\n\t\t\t\tvar call:Function = _callback;\r\n\t\t\t\tvar args:Array<Dynamic> = _args;\r\n\t\t\t\t\r\n\t\t\t\t// in the callback, people might want to call \"reset\" and re-add it to the\r\n\t\t\t\t// juggler; so this event has to be dispatched *before* executing 'call'.\r\n\t\t\t\tdispatchEventWith(Event.REMOVE_FROM_JUGGLER);\r\n\t\t\t\t//call.apply(null, args);\r\n\t\t\t\tExecute.call(call, args);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Advances the delayed call so that it is executed right away. If 'repeatCount' is\r\n\t  * anything else than '1', this method will complete only the current iteration. */\r\n\tpublic function complete():Void\r\n\t{\r\n\t\tvar restTime:Float = _totalTime - _currentTime;\r\n\t\tif (restTime > 0)\t\t\t advanceTime(restTime);\r\n\t}\r\n\t\r\n\t/** Indicates if enough time has passed, and the call has already been executed. */\r\n\tprivate function get_isComplete():Bool\r\n\t{\r\n\t\treturn _repeatCount == 1 && _currentTime >= _totalTime;\r\n\t}\r\n\t\r\n\t/** The time for which calls will be delayed (in seconds). */\r\n\tprivate function get_totalTime():Float\r\n\t{\r\n\t\treturn _totalTime;\r\n\t}\r\n\t\r\n\t/** The time that has already passed (in seconds). */\r\n\tprivate function get_currentTime():Float\r\n\t{\r\n\t\treturn _currentTime;\r\n\t}\r\n\t\r\n\t/** The number of times the call will be repeated. \r\n\t *  Set to '0' to repeat indefinitely. @default 1 */\r\n\tprivate function get_repeatCount():Int\r\n\t{\r\n\t\treturn _repeatCount;\r\n\t}\r\n\tprivate function set_repeatCount(value:Int):Int{_repeatCount = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The callback that will be executed when the time is up. */\r\n\tprivate function get_callback():Function\r\n\t{\r\n\t\treturn _callback;\r\n\t}\r\n\t\r\n\t/** The arguments that the callback will be executed with.\r\n\t *  Beware: not a copy, but the actual object! */\r\n\tprivate function get_arguments():Array<Dynamic>\r\n\t{\r\n\t\treturn _args;\r\n\t}\r\n\t\r\n\t// delayed call pooling\r\n\t\r\n\tprivate static var sPool:Array<DelayedCall> = [];\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.animation)\r\n\tprivate static function fromPool(call:Function, delay:Float, args:Array<Dynamic> = null):DelayedCall\r\n\t{\r\n\t\tif (sPool.length > 0) return sPool.pop().reset(call, delay, args)\r\n\t\telse return new DelayedCall(call, delay, args);\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.animation)\r\n\tprivate static function toPool(delayedCall:DelayedCall):Void\r\n\t{\r\n\t\t// reset any object-references, to make sure we don't prevent any garbage collection\r\n\t\tdelayedCall._callback = null;\r\n\t\tdelayedCall._args = null;\r\n\t\tdelayedCall.removeEventListeners();\r\n\t\tsPool.push(delayedCall);\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.animation;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport haxe.Constraints.Function;\r\nimport openfl.errors.Error;\r\nimport starling.animation.Tween;\r\n\r\nimport starling.events.Event;\r\nimport starling.events.EventDispatcher;\r\n\r\n/** The Juggler takes objects that implement IAnimatable (like Tweens) and executes them.\r\n * \r\n *  <p>A juggler is a simple object. It does no more than saving a list of objects implementing \r\n *  \"IAnimatable\" and advancing their time if it is told to do so (by calling its own \r\n *  \"advanceTime\"-method). When an animation is completed, it throws it away.</p>\r\n *  \r\n *  <p>There is a default juggler available at the Starling class:</p>\r\n *  \r\n *  <pre>\r\n *  var juggler:Juggler = Starling.Juggler;\r\n *  </pre>\r\n *  \r\n *  <p>You can create juggler objects yourself, just as well. That way, you can group \r\n *  your game into logical components that handle their animations independently. All you have\r\n *  to do is call the \"advanceTime\" method on your custom juggler once per frame.</p>\r\n *  \r\n *  <p>Another handy feature of the juggler is the \"delayCall\"-method. Use it to \r\n *  execute a function at a later time. Different to conventional approaches, the method\r\n *  will only be called when the juggler is advanced, giving you perfect control over the \r\n *  call.</p>\r\n *  \r\n *  <pre>\r\n *  juggler.delayCall(object.removeFromParent, 1.0);\r\n *  juggler.delayCall(object.addChild, 2.0, theChild);\r\n *  juggler.delayCall(function():void { rotation += 0.1; }, 3.0);\r\n *  </pre>\r\n * \r\n *  @see Tween\r\n *  @see DelayedCall \r\n */\r\nclass Juggler implements IAnimatable\r\n{\r\n\tpublic var elapsedTime(get, never):Float;\r\n\tprivate var objects(get, never):Array<IAnimatable>;\r\n\r\n\tprivate var _objects:Array<IAnimatable>;\r\n\tprivate var _objectIDs:Map<IAnimatable, Int>;\r\n\tprivate var _elapsedTime:Float;\r\n\t\r\n\tprivate static var sCurrentObjectID:Int = 0;\r\n\t\r\n\tprivate static var tweenSetters:Array<String> = null;\r\n\t\r\n\t/** Create an empty juggler. */\r\n\tpublic function new()\r\n\t{\r\n\t\t_elapsedTime = 0;\r\n\t\t_objects = [];\r\n\t\t_objectIDs = new Map<IAnimatable, Int>();\r\n\t\t\r\n\t\tif (tweenSetters == null) {\r\n\t\t\t// Get all of the setters in the Tween class.\r\n\t\t\ttweenSetters = new Array<String>();\r\n\t\t\tfor (field in Type.getInstanceFields(Tween)) {\r\n\t\t\t\tif (field.indexOf(\"set_\") == 0) {\r\n\t\t\t\t\ttweenSetters.push(field.substr(4));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttweenSetters.sort(function(a, b) return Reflect.compare(a.toLowerCase(), b.toLowerCase()));\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Adds an object to the juggler.\r\n\t *\r\n\t *  @return Unique numeric identifier for the animation. This identifier may be used\r\n\t *\t\t  to remove the object via <code>removeByID()</code>.\r\n\t */\r\n\tpublic function add(object:IAnimatable):Int\r\n\t{\r\n\t\treturn addWithID(object, getNextID());\r\n\t}\r\n\t\r\n\tprivate function addWithID(object:IAnimatable, objectID:Int):Int\r\n\t{\r\n\t\tif (object != null && !contains(object)) \r\n\t\t{\r\n\t\t\tvar dispatcher:EventDispatcher = cast(object, EventDispatcher);\r\n\t\t\tif (dispatcher != null) dispatcher.addEventListener(Event.REMOVE_FROM_JUGGLER, onRemove);\r\n\t\t\t\r\n\t\t\t_objects[_objects.length] = object;\r\n\t\t\t_objectIDs.set(object, objectID);\r\n\t\t\t\r\n\t\t\treturn objectID;\r\n\t\t}\r\n\t\telse return 0;\r\n\t}\r\n\t\r\n\t/** Determines if an object has been added to the juggler. */\r\n\tpublic function contains(object:IAnimatable):Bool\r\n\t{\r\n\t\treturn _objectIDs.exists(object);\r\n\t}\r\n\t\r\n\t/** Removes an object from the juggler.\r\n\t *\r\n\t *  @return The (now meaningless) unique numeric identifier for the animation, or zero\r\n\t *\t\t  if the object was not found.\r\n\t */\r\n\tpublic function remove(object:IAnimatable):Int\r\n\t{\r\n\t\tvar objectID:Int = 0;\r\n\t\t\r\n\t\tif (object != null && contains(object)) \r\n\t\t{\r\n\t\t\tvar dispatcher:EventDispatcher = cast(object, EventDispatcher);\r\n\t\t\tif (dispatcher != null)\tdispatcher.removeEventListener(Event.REMOVE_FROM_JUGGLER, onRemove);\r\n\t\t\t\r\n\t\t\tvar i:Int = _objects.length - 1;\r\n\t\t\twhile (i >= 0) \r\n\t\t\t{\r\n\t\t\t\tif (_objects[i] == object) {\r\n\t\t\t\t\t_objects[i] = null;\r\n\t\t\t\t\t_objects.splice(i, 0);\r\n\t\t\t\t}\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t\tobjectID = _objectIDs.get(object);\r\n\t\t\t_objectIDs.remove(object);\r\n\t\t}\r\n\t\t\r\n\t\treturn objectID;\r\n\t}\r\n\t\r\n\t/** Removes an object from the juggler, identified by the unique numeric identifier you\r\n\t *  received when adding it.\r\n\t *\r\n\t *  <p>It's not uncommon that an animatable object is added to a juggler repeatedly,\r\n\t *  e.g. when using an object-pool. Thus, when using the <code>remove</code> method,\r\n\t *  you might accidentally remove an object that has changed its context. By using\r\n\t *  <code>removeByID</code> instead, you can be sure to avoid that, since the objectID\r\n\t *  will always be unique.</p>\r\n\t *\r\n\t *  @return if successful, the passed objectID; if the object was not found, zero.\r\n\t */\r\n\tpublic function removeByID(objectID:Int):Int\r\n\t{\r\n\t\tvar i:Int = _objects.length - 1;\r\n\t\twhile (i >= 0){\r\n\t\t\tvar object:IAnimatable = _objects[i];\r\n\t\t\t\r\n\t\t\tif (_objectIDs.get(object) == objectID) \r\n\t\t\t{\r\n\t\t\t\tremove(object);\r\n\t\t\t\treturn objectID;\r\n\t\t\t}\r\n\t\t\t--i;\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\t/** Removes all tweens with a certain target. */\r\n\tpublic function removeTweens(target:Dynamic):Void\r\n\t{\r\n\t\tif (target == null)\treturn;\r\n\t\t\r\n\t\tvar i:Int = _objects.length - 1;\r\n\t\twhile (i >= 0){\r\n\t\t\tvar tween:Tween = cast(_objects[i], Tween);\r\n\t\t\tif (tween != null && tween.target == target) \r\n\t\t\t{\r\n\t\t\t\ttween.removeEventListener(Event.REMOVE_FROM_JUGGLER, onRemove);\r\n\t\t\t\t_objects[i] = null;\r\n\t\t\t\t_objectIDs.remove(tween);\r\n\t\t\t}\r\n\t\t\t--i;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Removes all delayed and repeated calls with a certain callback. */\r\n\tpublic function removeDelayedCalls(callback:Function):Void\r\n\t{\r\n\t\tif (callback == null) return;\r\n\t\t\r\n\t\tvar i:Int = _objects.length - 1;\r\n\t\twhile (i >= 0){\r\n\t\t\tvar delayedCall:DelayedCall = cast(_objects[i], DelayedCall);\r\n\t\t\tif (delayedCall != null && delayedCall.callback == callback) \r\n\t\t\t{\r\n\t\t\t\tdelayedCall.removeEventListener(Event.REMOVE_FROM_JUGGLER, onRemove);\r\n\t\t\t\t_objects[i] = null;\r\n\t\t\t\t_objectIDs.remove(delayedCall);\r\n\t\t\t}\r\n\t\t\t--i;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Figures out if the juggler contains one or more tweens with a certain target. */\r\n\tpublic function containsTweens(target:Dynamic):Bool\r\n\t{\r\n\t\tif (target != null) \r\n\t\t{\r\n\t\t\tvar i:Int = _objects.length - 1;\r\n\t\t\twhile (i >= 0){\r\n\t\t\t\tvar tween:Tween = cast(_objects[i], Tween);\r\n\t\t\t\tif (tween != null && tween.target == target) return true;\r\n\t\t\t\t--i;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/** Figures out if the juggler contains one or more delayed calls with a certain callback. */\r\n\tpublic function containsDelayedCalls(callback:Function):Bool\r\n\t{\r\n\t\tif (callback != null) \r\n\t\t{\r\n\t\t\tvar i:Int = _objects.length - 1;\r\n\t\t\twhile (i >= 0){\r\n\t\t\t\tvar delayedCall:DelayedCall = cast(_objects[i], DelayedCall);\r\n\t\t\t\tif (delayedCall != null && delayedCall.callback == callback) return true;\r\n\t\t\t\t--i;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/** Removes all objects at once. */\r\n\tpublic function purge():Void\r\n\t{\r\n\t\t// the object vector is not purged right away, because if this method is called\r\n\t\t// from an 'advanceTime' call, this would make the loop crash. Instead, the\r\n\t\t// vector is filled with 'null' values. They will be cleaned up on the next call\r\n\t\t// to 'advanceTime'.\r\n\t\t\r\n\t\tvar i:Int = _objects.length - 1;\r\n\t\twhile (i >= 0){\r\n\t\t\tvar object:IAnimatable = _objects[i];\r\n\t\t\tvar dispatcher:EventDispatcher = cast(object, EventDispatcher);\r\n\t\t\tif (dispatcher != null) dispatcher.removeEventListener(Event.REMOVE_FROM_JUGGLER, onRemove);\r\n\t\t\t_objects[i] = null;\r\n\t\t\t_objectIDs.remove(object);\r\n\t\t\t--i;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Delays the execution of a function until <code>delay</code> seconds have passed.\r\n\t *  This method provides a convenient alternative for creating and adding a DelayedCall\r\n\t *  manually.\r\n\t *\r\n\t *  @return Unique numeric identifier for the delayed call. This identifier may be used\r\n\t *\t\t  to remove the object via <code>removeByID()</code>.\r\n\t */\r\n\tpublic function delayCall(call:Function, delay:Float, args:Array<Dynamic> = null):Int\r\n\t{\r\n\t\tif (call == null)\t\t\t throw new ArgumentError(\"call must not be null\");\r\n\t\t\r\n\t\tvar delayedCall:DelayedCall = DelayedCall.fromPool(call, delay, args);\r\n\t\tdelayedCall.addEventListener(Event.REMOVE_FROM_JUGGLER, onPooledDelayedCallComplete);\r\n\t\treturn add(delayedCall);\r\n\t}\r\n\t\r\n\t/** Runs a function at a specified interval (in seconds). A 'repeatCount' of zero\r\n\t *  means that it runs indefinitely.\r\n\t *\r\n\t *  @return Unique numeric identifier for the delayed call. This identifier may be used\r\n\t *\t\t  to remove the object via <code>removeByID()</code>.\r\n\t */\r\n\tpublic function repeatCall(call:Function, interval:Float, repeatCount:Int = 0, args:Array<Dynamic> = null):Int\r\n\t{\r\n\t\tif (call == null) throw new ArgumentError(\"call must not be null\");\r\n\t\t\r\n\t\tvar delayedCall:DelayedCall = DelayedCall.fromPool(call, interval, args);\r\n\t\tdelayedCall.repeatCount = repeatCount;\r\n\t\tdelayedCall.addEventListener(Event.REMOVE_FROM_JUGGLER, onPooledDelayedCallComplete);\r\n\t\treturn add(delayedCall);\r\n\t}\r\n\t\r\n\tprivate function onPooledDelayedCallComplete(event:Event):Void\r\n\t{\r\n\t\tDelayedCall.toPool(cast(event.target, DelayedCall));\r\n\t}\r\n\t\r\n\t/** Utilizes a tween to animate the target object over <code>time</code> seconds. Internally,\r\n\t *  this method uses a tween instance (taken from an object pool) that is added to the\r\n\t *  juggler right away. This method provides a convenient alternative for creating \r\n\t *  and adding a tween manually.\r\n\t *  \r\n\t *  <p>Fill 'properties' with key-value pairs that describe both the \r\n\t *  tween and the animation target. Here is an example:</p>\r\n\t *  \r\n\t *  <pre>\r\n\t *  juggler.tween(object, 2.0, {\r\n\t *\t  transition: Transitions.EASE_IN_OUT,\r\n\t *\t  delay: 20, // -> tween.delay = 20\r\n\t *\t  x: 50\t  // -> tween.animate(\"x\", 50)\r\n\t *  });\r\n\t *  </pre> \r\n\t *\r\n\t *  <p>To cancel the tween, call 'Juggler.removeTweens' with the same target, or pass\r\n\t *  the returned 'IAnimatable' instance to 'Juggler.remove()'. Do not use the returned\r\n\t *  IAnimatable otherwise; it is taken from a pool and will be reused.</p>\r\n\t *\r\n\t *  <p>Note that some property types may be animated in a special way:</p>\r\n\t *  <ul>\r\n\t *\t<li>If the property contains the string <code>color</code> or <code>Color</code>,\r\n\t *\t\tit will be treated as an unsigned integer with a color value\r\n\t *\t\t(e.g. <code>0xff0000</code> for red). Each color channel will be animated\r\n\t *\t\tindividually.</li>\r\n\t *\t<li>The same happens if you append the string <code>#rgb</code> to the name.</li>\r\n\t *\t<li>If you append <code>#rad</code>, the property is treated as an angle in radians,\r\n\t *\t\tmaking sure it always uses the shortest possible arc for the rotation.</li>\r\n\t *\t<li>The string <code>#deg</code> does the same for angles in degrees.</li>\r\n\t *  </ul>\r\n\t */\r\n\tpublic function tween(target:Dynamic, time:Float, properties:Dynamic):Int\r\n\t{\r\n\t\tif (target == null)\t\t\t throw new ArgumentError(\"target must not be null\");\r\n\t\t\r\n\t\tvar tween:Tween = Tween.fromPool(target, time);\r\n\t\t\r\n\t\tfor (property in Reflect.fields(properties))\r\n\t\t{\r\n\t\t\tvar value:Dynamic = Reflect.field(properties, property);\r\n\t\t\t\r\n\t\t\tif (tweenSetters.indexOf(property) >= 0) {\r\n\t\t\t\tReflect.setProperty(tween, property, value);\r\n\t\t\t} else {\r\n\t\t\t\tvar currentValue:Dynamic = Reflect.getProperty(target, property);\r\n\t\t\t\tif (currentValue == null) {\r\n\t\t\t\t\tthrow new ArgumentError(\"Invalid property: \" + property);\r\n\t\t\t\t}\r\n\t\t\t\ttween.animate(property, cast value);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttween.addEventListener(Event.REMOVE_FROM_JUGGLER, onPooledTweenComplete);\r\n\t\treturn add(tween);\r\n\t}\r\n\t\r\n\tprivate function onPooledTweenComplete(event:Event):Void\r\n\t{\r\n\t\tTween.toPool(cast(event.target, Tween));\r\n\t}\r\n\t\r\n\t/** Advances all objects by a certain time (in seconds). */\r\n\tpublic function advanceTime(time:Float):Void\r\n\t{\r\n\t\tvar numObjects:Int = _objects.length;\r\n        var currentIndex:Int = 0;\r\n        var i:Int = 0;\r\n        \r\n        _elapsedTime += time;\r\n        if (numObjects == 0) return;\r\n        \r\n        // there is a high probability that the \"advanceTime\" function modifies the list \r\n        // of animatables. we must not process new objects right now (they will be processed\r\n        // in the next frame), and we need to clean up any empty slots in the list.\r\n\r\n        while (i < numObjects)\r\n        {\r\n            var object:IAnimatable = _objects[i];\r\n            if (object != null)\r\n            {\r\n                // shift objects into empty slots along the way\r\n                if (currentIndex != i) \r\n                {\r\n                    _objects[currentIndex] = object;\r\n                    _objects[i] = null;\r\n                }\r\n                \r\n                object.advanceTime(time);\r\n                ++currentIndex;\r\n            }\r\n            \r\n            ++i;\r\n        }\r\n        \r\n        if (currentIndex != i)\r\n        {\r\n            numObjects = _objects.length; // count might have changed!\r\n\r\n            while (i < numObjects)\r\n                _objects[currentIndex++] = _objects[i++];\r\n\r\n            resize(_objects, currentIndex);\r\n        }\r\n\t}\r\n\t\r\n\tpublic function resize<T>(arr:Array<T>, newLength:Int, defaultValue:T = null):Void\r\n    {\r\n        var length:Int = arr.length;\r\n        if (newLength < length)\r\n            arr.splice(newLength, length - newLength);\r\n        else if (newLength > length)\r\n        {\r\n            for (i in length ... newLength)\r\n                arr[i] = defaultValue;\r\n        }\r\n    }\r\n\t\r\n\tprivate function onRemove(event:Event):Void\r\n\t{\r\n\t\tvar objectID:Int = remove(cast(event.target, IAnimatable));\r\n\t\t\r\n\t\tif (objectID != 0) \r\n\t\t{\r\n\t\t\tvar tween:Tween = null;\r\n\t\t\ttry { tween = cast event.target; }\r\n\t\t\tcatch (e:Error) { }\r\n\t\t\t\r\n\t\t\t//var tween:Tween = cast(event.target, Tween);\r\n\t\t\tif (tween != null && tween.isComplete) \r\n\t\t\t\taddWithID(tween.nextTween, objectID);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate static function getNextID():Int\r\n\t{\r\n\t\treturn ++sCurrentObjectID;\r\n\t}\r\n\t\r\n\t/** The total life time of the juggler (in seconds). */\r\n\tprivate function get_elapsedTime():Float\r\n\t{\r\n\t\treturn _elapsedTime;\r\n\t}\r\n\t\r\n\t/** The actual vector that contains all objects that are currently being animated. */\r\n\tprivate function get_objects():Array<IAnimatable>\r\n\t{\r\n\t\treturn _objects;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n//\r\n// easing functions thankfully taken from http://dojotoolkit.org\r\n//\t\t\t\t\t\t\t\t\tand http://www.robertpenner.com/easing\r\n//\r\n\r\npackage starling.animation;\r\n\r\nimport haxe.Constraints.Function;\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** The Transitions class contains static methods that define easing functions.\r\n *  Those functions are used by the Tween class to execute animations.\r\n * \r\n *  <p>Here is a visual representation of the available transitions:</p> \r\n *  <img src=\"http://gamua.com/img/blog/2010/sparrow-transitions.png\"/>\r\n *  \r\n *  <p>You can define your own transitions through the \"registerTransition\" function. A \r\n *  transition function must have the following signature, where <code>ratio</code> is \r\n *  in the range 0-1:</p>\r\n *  \r\n *  <pre>function myTransition(ratio:Number):Number</pre>\r\n */\r\nclass Transitions\r\n{\r\n\tpublic static var LINEAR:String = \"linear\";\r\n\tpublic static var EASE_IN:String = \"easeIn\";\r\n\tpublic static var EASE_OUT:String = \"easeOut\";\r\n\tpublic static var EASE_IN_OUT:String = \"easeInOut\";\r\n\tpublic static var EASE_OUT_IN:String = \"easeOutIn\";\r\n\tpublic static var EASE_IN_BACK:String = \"easeInBack\";\r\n\tpublic static var EASE_OUT_BACK:String = \"easeOutBack\";\r\n\tpublic static var EASE_IN_OUT_BACK:String = \"easeInOutBack\";\r\n\tpublic static var EASE_OUT_IN_BACK:String = \"easeOutInBack\";\r\n\tpublic static var EASE_IN_ELASTIC:String = \"easeInElastic\";\r\n\tpublic static var EASE_OUT_ELASTIC:String = \"easeOutElastic\";\r\n\tpublic static var EASE_IN_OUT_ELASTIC:String = \"easeInOutElastic\";\r\n\tpublic static var EASE_OUT_IN_ELASTIC:String = \"easeOutInElastic\";\r\n\tpublic static var EASE_IN_BOUNCE:String = \"easeInBounce\";\r\n\tpublic static var EASE_OUT_BOUNCE:String = \"easeOutBounce\";\r\n\tpublic static var EASE_IN_OUT_BOUNCE:String = \"easeInOutBounce\";\r\n\tpublic static var EASE_OUT_IN_BOUNCE:String = \"easeOutInBounce\";\r\n\t\r\n\tprivate static var sTransitions:Map<String, Function>;\r\n\t\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** Returns the transition function that was registered under a certain name. */\r\n\tpublic static function getTransition(name:String):Function\r\n\t{\r\n\t\tif (sTransitions == null) registerDefaults();\r\n\t\treturn sTransitions.get(name);\r\n\t}\r\n\t\r\n\t/** Registers a new transition function under a certain name. */\r\n\tpublic static function register(name:String, func:Function):Void\r\n\t{\r\n\t\tif (sTransitions == null) registerDefaults();\r\n\t\tsTransitions.set(name, func);\r\n\t}\r\n\t\r\n\tprivate static function registerDefaults():Void\r\n\t{\r\n\t\tsTransitions = new Map<String, Function>();\r\n\t\t\r\n\t\tregister(LINEAR, linear);\r\n\t\tregister(EASE_IN, easeIn);\r\n\t\tregister(EASE_OUT, easeOut);\r\n\t\tregister(EASE_IN_OUT, easeInOut);\r\n\t\tregister(EASE_OUT_IN, easeOutIn);\r\n\t\tregister(EASE_IN_BACK, easeInBack);\r\n\t\tregister(EASE_OUT_BACK, easeOutBack);\r\n\t\tregister(EASE_IN_OUT_BACK, easeInOutBack);\r\n\t\tregister(EASE_OUT_IN_BACK, easeOutInBack);\r\n\t\tregister(EASE_IN_ELASTIC, easeInElastic);\r\n\t\tregister(EASE_OUT_ELASTIC, easeOutElastic);\r\n\t\tregister(EASE_IN_OUT_ELASTIC, easeInOutElastic);\r\n\t\tregister(EASE_OUT_IN_ELASTIC, easeOutInElastic);\r\n\t\tregister(EASE_IN_BOUNCE, easeInBounce);\r\n\t\tregister(EASE_OUT_BOUNCE, easeOutBounce);\r\n\t\tregister(EASE_IN_OUT_BOUNCE, easeInOutBounce);\r\n\t\tregister(EASE_OUT_IN_BOUNCE, easeOutInBounce);\r\n\t}\r\n\t\r\n\t// transition functions\r\n\t\r\n\tprivate static function linear(ratio:Float):Float\r\n\t{\r\n\t\treturn ratio;\r\n\t}\r\n\t\r\n\tprivate static function easeIn(ratio:Float):Float\r\n\t{\r\n\t\treturn ratio * ratio * ratio;\r\n\t}\r\n\t\r\n\tprivate static function easeOut(ratio:Float):Float\r\n\t{\r\n\t\tvar invRatio:Float = ratio - 1.0;\r\n\t\treturn invRatio * invRatio * invRatio + 1;\r\n\t}\r\n\t\r\n\tprivate static function easeInOut(ratio:Float):Float\r\n\t{\r\n\t\treturn easeCombined(easeIn, easeOut, ratio);\r\n\t}\r\n\t\r\n\tprivate static function easeOutIn(ratio:Float):Float\r\n\t{\r\n\t\treturn easeCombined(easeOut, easeIn, ratio);\r\n\t}\r\n\t\r\n\tprivate static function easeInBack(ratio:Float):Float\r\n\t{\r\n\t\tvar s:Float = 1.70158;\r\n\t\treturn Math.pow(ratio, 2) * ((s + 1.0) * ratio - s);\r\n\t}\r\n\t\r\n\tprivate static function easeOutBack(ratio:Float):Float\r\n\t{\r\n\t\tvar invRatio:Float = ratio - 1.0;\r\n\t\tvar s:Float = 1.70158;\r\n\t\treturn Math.pow(invRatio, 2) * ((s + 1.0) * invRatio + s) + 1.0;\r\n\t}\r\n\t\r\n\tprivate static function easeInOutBack(ratio:Float):Float\r\n\t{\r\n\t\treturn easeCombined(easeInBack, easeOutBack, ratio);\r\n\t}\r\n\t\r\n\tprivate static function easeOutInBack(ratio:Float):Float\r\n\t{\r\n\t\treturn easeCombined(easeOutBack, easeInBack, ratio);\r\n\t}\r\n\t\r\n\tprivate static function easeInElastic(ratio:Float):Float\r\n\t{\r\n\t\tif (ratio == 0 || ratio == 1)\t\t\t return ratio\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar p:Float = 0.3;\r\n\t\t\tvar s:Float = p / 4.0;\r\n\t\t\tvar invRatio:Float = ratio - 1;\r\n\t\t\treturn -1.0 * Math.pow(2.0, 10.0 * invRatio) * Math.sin((invRatio - s) * (2.0 * Math.PI) / p);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate static function easeOutElastic(ratio:Float):Float\r\n\t{\r\n\t\tif (ratio == 0 || ratio == 1)\t\t\t return ratio\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar p:Float = 0.3;\r\n\t\t\tvar s:Float = p / 4.0;\r\n\t\t\treturn Math.pow(2.0, -10.0 * ratio) * Math.sin((ratio - s) * (2.0 * Math.PI) / p) + 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate static function easeInOutElastic(ratio:Float):Float\r\n\t{\r\n\t\treturn easeCombined(easeInElastic, easeOutElastic, ratio);\r\n\t}\r\n\t\r\n\tprivate static function easeOutInElastic(ratio:Float):Float\r\n\t{\r\n\t\treturn easeCombined(easeOutElastic, easeInElastic, ratio);\r\n\t}\r\n\t\r\n\tprivate static function easeInBounce(ratio:Float):Float\r\n\t{\r\n\t\treturn 1.0 - easeOutBounce(1.0 - ratio);\r\n\t}\r\n\t\r\n\tprivate static function easeOutBounce(ratio:Float):Float\r\n\t{\r\n\t\tvar s:Float = 7.5625;\r\n\t\tvar p:Float = 2.75;\r\n\t\tvar l:Float;\r\n\t\tif (ratio < (1.0 / p)) \r\n\t\t{\r\n\t\t\tl = s * Math.pow(ratio, 2);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tif (ratio < (2.0 / p)) \r\n\t\t\t{\r\n\t\t\t\tratio -= 1.5 / p;\r\n\t\t\t\tl = s * Math.pow(ratio, 2) + 0.75;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tif (ratio < 2.5 / p) \r\n\t\t\t\t{\r\n\t\t\t\t\tratio -= 2.25 / p;\r\n\t\t\t\t\tl = s * Math.pow(ratio, 2) + 0.9375;\r\n\t\t\t\t}\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\t\t\t\t\tratio -= 2.625 / p;\r\n\t\t\t\t\tl = s * Math.pow(ratio, 2) + 0.984375;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn l;\r\n\t}\r\n\t\r\n\tprivate static function easeInOutBounce(ratio:Float):Float\r\n\t{\r\n\t\treturn easeCombined(easeInBounce, easeOutBounce, ratio);\r\n\t}\r\n\t\r\n\tprivate static function easeOutInBounce(ratio:Float):Float\r\n\t{\r\n\t\treturn easeCombined(easeOutBounce, easeInBounce, ratio);\r\n\t}\r\n\t\r\n\tprivate static function easeCombined(startFunc:Function, endFunc:Function, ratio:Float):Float\r\n\t{\r\n\t\tif (ratio < 0.5)\t\t\t return 0.5 * startFunc(ratio * 2.0)\r\n\t\telse return 0.5 * endFunc((ratio - 0.5) * 2.0) + 0.5;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\n\r\npackage starling.animation;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport haxe.Constraints.Function;\r\nimport openfl.errors.Error;\r\nimport starling.utils.Execute;\r\n\r\nimport starling.events.Event;\r\nimport starling.events.EventDispatcher;\r\n\r\n/** A Tween animates numeric properties of objects. It uses different transition functions\r\n *  to give the animations various styles.\r\n *  \r\n *  <p>The primary use of this class is to do standard animations like movement, fading, \r\n *  rotation, etc. But there are no limits on what to animate; as long as the property you want\r\n *  to animate is numeric (<code>int, uint, Number</code>), the tween can handle it. For a list \r\n *  of available Transition types, look at the \"Transitions\" class.</p> \r\n *  \r\n *  <p>Here is an example of a tween that moves an object to the right, rotates it, and \r\n *  fades it out:</p>\r\n *  \r\n *  <listing>\r\n *  var tween:Tween = new Tween(object, 2.0, Transitions.EASE_IN_OUT);\r\n *  tween.animate(\"x\", object.x + 50);\r\n *  tween.animate(\"rotation\", Deg2rad.call(45));\r\n *  tween.fadeTo(0);\t// equivalent to 'animate(\"alpha\", 0)'\r\n *  Starling.Juggler.add(tween);</listing> \r\n *  \r\n *  <p>Note that the object is added to a juggler at the end of this sample. That's because a \r\n *  tween will only be executed if its \"advanceTime\" method is executed regularly - the \r\n *  juggler will do that for you, and will remove the tween when it is finished.</p>\r\n *  \r\n *  @see Juggler\r\n *  @see Transitions\r\n */\r\nclass Tween extends EventDispatcher implements IAnimatable\r\n{\r\n\tpublic var isComplete(get, never):Bool;\r\n\tpublic var target(get, never):Dynamic;\r\n\tpublic var transition(get, set):String;\r\n\tpublic var transitionFunc(get, set):Function;\r\n\tpublic var totalTime(get, never):Float;\r\n\tpublic var currentTime(get, never):Float;\r\n\tpublic var progress(get, never):Float;\r\n\tpublic var delay(get, set):Float;\r\n\tpublic var repeatCount(get, set):Int;\r\n\tpublic var repeatDelay(get, set):Float;\r\n\tpublic var reverse(get, set):Bool;\r\n\tpublic var roundToInt(get, set):Bool;\r\n\tpublic var onStart(get, set):Function;\r\n\tpublic var onUpdate(get, set):Function;\r\n\tpublic var onRepeat(get, set):Function;\r\n\tpublic var onComplete(get, set):Function;\r\n\tpublic var onStartArgs(get, set):Array<Dynamic>;\r\n\tpublic var onUpdateArgs(get, set):Array<Dynamic>;\r\n\tpublic var onRepeatArgs(get, set):Array<Dynamic>;\r\n\tpublic var onCompleteArgs(get, set):Array<Dynamic>;\r\n\tpublic var nextTween(get, set):Tween;\r\n\r\n\tprivate static var HINT_MARKER:String = \"#\";\r\n\t\r\n\tprivate var _target:Dynamic;\r\n\tprivate var _transitionFunc:Function;\r\n\tprivate var _transitionName:String;\r\n\t\r\n\tprivate var _properties:Array<String>;\r\n\tprivate var _startValues:Array<Float>;\r\n\tprivate var _endValues:Array<Float>;\r\n\tprivate var _updateFuncs:Array<Function>;\r\n\t\r\n\tprivate var _onStart:Function;\r\n\tprivate var _onUpdate:Function;\r\n\tprivate var _onRepeat:Function;\r\n\tprivate var _onComplete:Function;\r\n\t\r\n\tprivate var _onStartArgs:Array<Dynamic>;\r\n\tprivate var _onUpdateArgs:Array<Dynamic>;\r\n\tprivate var _onRepeatArgs:Array<Dynamic>;\r\n\tprivate var _onCompleteArgs:Array<Dynamic>;\r\n\t\r\n\tprivate var _totalTime:Float;\r\n\tprivate var _currentTime:Float;\r\n\tprivate var _progress:Float;\r\n\tprivate var _delay:Float;\r\n\tprivate var _roundToInt:Bool;\r\n\tprivate var _nextTween:Tween;\r\n\tprivate var _repeatCount:Int;\r\n\tprivate var _repeatDelay:Float;\r\n\tprivate var _reverse:Bool;\r\n\tprivate var _currentCycle:Int;\r\n\t\r\n\t/** Creates a tween with a target, duration (in seconds) and a transition function.\r\n\t *  @param target the object that you want to animate\r\n\t *  @param time the duration of the Tween (in seconds)\r\n\t *  @param transition can be either a String (e.g. one of the constants defined in the\r\n\t *\t\t Transitions class) or a function. Look up the 'Transitions' class for a   \r\n\t *\t\t documentation about the required function signature. */\r\n\tpublic function new(target:Dynamic, time:Float, transition:Dynamic = \"linear\")\r\n\t{\r\n\t\tsuper();\r\n\t\treset(target, time, transition);\r\n\t}\r\n\t\r\n\t/** Resets the tween to its default values. Useful for pooling tweens. */\r\n\tpublic function reset(target:Dynamic, time:Float, transition:Dynamic = \"linear\"):Tween\r\n\t{\r\n\t\t_target = target;\r\n\t\t_currentTime = 0.0;\r\n\t\t_totalTime = Math.max(0.0001, time);\r\n\t\t_progress = 0.0;\r\n\t\t_delay = _repeatDelay = 0.0;\r\n\t\t_onStart = _onUpdate = _onRepeat = _onComplete = null;\r\n\t\t_onStartArgs = _onUpdateArgs = _onRepeatArgs = _onCompleteArgs = null;\r\n\t\t_roundToInt = _reverse = false;\r\n\t\t_repeatCount = 1;\r\n\t\t_currentCycle = -1;\r\n\t\t_nextTween = null;\r\n\t\t\r\n\t\t\r\n\t\tif (Std.is(transition, String)) \r\n\t\t\tthis.transition = cast(transition, String);\r\n\t\telse if (Reflect.isFunction(transition)) \r\n\t\t\tthis.transitionFunc = cast(transition);\r\n\t\telse \r\n\t\tthrow new ArgumentError(\"Transition must be either a string or a function\");\r\n\t\t\r\n\t\tif (_properties != null) _properties.splice(0, _properties.length);\r\n\t\telse _properties = [];\r\n\t\tif (_startValues != null) _startValues.splice(0, _startValues.length);\r\n\t\telse _startValues = [];\r\n\t\tif (_endValues != null) _endValues.splice(0, _endValues.length);\r\n\t\telse _endValues = [];\r\n\t\tif (_updateFuncs != null) _updateFuncs.splice(0, _updateFuncs.length);\r\n\t\telse _updateFuncs = [];\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/** Animates the property of the target to a certain value. You can call this method\r\n\t *  multiple times on one tween.\r\n\t *\r\n\t *  <p>Some property types are handled in a special way:</p>\r\n\t *  <ul>\r\n\t *\t<li>If the property contains the string <code>color</code> or <code>Color</code>,\r\n\t *\t\tit will be treated as an unsigned integer with a color value\r\n\t *\t\t(e.g. <code>0xff0000</code> for red). Each color channel will be animated\r\n\t *\t\tindividually.</li>\r\n\t *\t<li>The same happens if you append the string <code>#rgb</code> to the name.</li>\r\n\t *\t<li>If you append <code>#rad</code>, the property is treated as an angle in radians,\r\n\t *\t\tmaking sure it always uses the shortest possible arc for the rotation.</li>\r\n\t *\t<li>The string <code>#deg</code> does the same for angles in degrees.</li>\r\n\t *  </ul>\r\n\t */\r\n\tpublic function animate(property:String, endValue:Float):Void\r\n\t{\r\n\t\tif (_target == null) return; // tweening null just does nothing.\r\n\t\t\r\n\t\tvar pos:Int = _properties.length;\r\n\t\tvar updateFunc:Function = getUpdateFuncFromProperty(property);\r\n\t\t\r\n\t\t_properties[pos] = getPropertyName(property);\r\n\t\t_startValues[pos] = Math.NaN;\r\n\t\t_endValues[pos] = endValue;\r\n\t\t_updateFuncs[pos] = updateFunc;\r\n\t}\r\n\t\r\n\t/** Animates the 'scaleX' and 'scaleY' properties of an object simultaneously. */\r\n\tpublic function scaleTo(factor:Float):Void\r\n\t{\r\n\t\tanimate(\"scaleX\", factor);\r\n\t\tanimate(\"scaleY\", factor);\r\n\t}\r\n\t\r\n\t/** Animates the 'x' and 'y' properties of an object simultaneously. */\r\n\tpublic function moveTo(x:Float, y:Float):Void\r\n\t{\r\n\t\tanimate(\"x\", x);\r\n\t\tanimate(\"y\", y);\r\n\t}\r\n\t\r\n\t/** Animates the 'alpha' property of an object to a certain target value. */\r\n\tpublic function fadeTo(alpha:Float):Void\r\n\t{\r\n\t\tanimate(\"alpha\", alpha);\r\n\t}\r\n\t\r\n\t/** Animates the 'rotation' property of an object to a certain target value, using the\r\n\t *  smallest possible arc. 'type' may be either 'rad' or 'deg', depending on the unit of\r\n\t *  measurement. */\r\n\tpublic function rotateTo(angle:Float, type:String = \"rad\"):Void\r\n\t{\r\n\t\tanimate(\"rotation#\" + type, angle);\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\tpublic function advanceTime(time:Float):Void\r\n\t{\r\n\t\tif (time == 0 || (_repeatCount == 1 && _currentTime == _totalTime))\treturn;\r\n\t\t\r\n\t\tvar i:Int;\r\n\t\tvar previousTime:Float = _currentTime;\r\n\t\tvar restTime:Float = _totalTime - _currentTime;\r\n\t\tvar carryOverTime:Float = time > restTime ? time - restTime : 0.0;\r\n\t\t\r\n\t\t_currentTime += time;\r\n\t\t\r\n\t\tif (_currentTime <= 0) {\r\n\t\t\treturn; // the delay is not over yet\r\n\t\t}\r\n\t\telse if (_currentTime > _totalTime) \r\n\t\t\t_currentTime = _totalTime;\r\n\t\t\r\n\t\tif (_currentCycle < 0 && previousTime <= 0 && _currentTime > 0) \r\n\t\t{\r\n\t\t\t_currentCycle++;\r\n\t\t\tif (_onStart != null) {\r\n\t\t\t\tExecute.call(_onStart, _onStartArgs);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar ratio:Float = _currentTime / _totalTime;\r\n\t\tvar reversed:Bool = _reverse && (_currentCycle % 2 == 1);\r\n\t\tvar numProperties:Int = _startValues.length;\r\n\t\t_progress = (reversed) ? _transitionFunc(1.0 - ratio):_transitionFunc(ratio);\r\n\t\t\r\n\t\tfor (i in 0...numProperties){\r\n\t\t\tif (_startValues[i] != _startValues[i])\t{ // isNaN check - \"isNaN\" causes allocation!  \r\n\t\t\t\t_startValues[i] = cast Reflect.getProperty(_target, _properties[i]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar updateFunc:Function = _updateFuncs[i];\r\n\t\t\tupdateFunc(_properties[i], _startValues[i], _endValues[i]);\r\n\t\t}\r\n\t\t\r\n\t\tif (_onUpdate != null) {\r\n\t\t\tExecute.call(_onUpdate, _onUpdateArgs);\r\n\t\t}\r\n\t\t\r\n\t\tif (previousTime < _totalTime && _currentTime >= _totalTime) \r\n\t\t{\r\n\t\t\tif (_repeatCount == 0 || _repeatCount > 1) \r\n\t\t\t{\r\n\t\t\t\t_currentTime = -_repeatDelay;\r\n\t\t\t\t_currentCycle++;\r\n\t\t\t\tif (_repeatCount > 1) _repeatCount--;\r\n\t\t\t\tif (_onRepeat != null) {\r\n\t\t\t\t\tExecute.call(_onRepeat, _onRepeatArgs);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t// save callback & args: they might be changed through an event listener\r\n\t\t\t\tvar onComplete:Function = _onComplete;\r\n\t\t\t\tvar onCompleteArgs:Array<Dynamic> = _onCompleteArgs;\r\n\t\t\t\t\r\n\t\t\t\t// in the 'onComplete' callback, people might want to call \"tween.reset\" and\r\n\t\t\t\t// add it to another juggler; so this event has to be dispatched *before*\r\n\t\t\t\t// executing 'onComplete'.\r\n\t\t\t\tdispatchEventWith(Event.REMOVE_FROM_JUGGLER);\r\n\t\t\t\tif (onComplete != null) {\r\n\t\t\t\t\tExecute.call(onComplete, onCompleteArgs);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (carryOverTime != 0) \r\n\t\t\tadvanceTime(carryOverTime);\r\n\t}\r\n\t\r\n\t// animation hints\r\n\t\r\n\tprivate function getUpdateFuncFromProperty(property:String):Function\r\n\t{\r\n\t\tvar updateFunc:Function;\r\n\t\tvar hint:String = getPropertyHint(property);\r\n\t\t\r\n\t\tswitch (hint)\r\n\t\t{\r\n\t\t\tcase null:updateFunc = updateStandard;\r\n\t\t\tcase \"rgb\":updateFunc = updateRgb;\r\n\t\t\tcase \"rad\":updateFunc = updateRad;\r\n\t\t\tcase \"deg\":updateFunc = updateDeg;\r\n\t\t\tdefault:\r\n\t\t\t\ttrace(\"[Starling] Ignoring unknown property hint:\", hint);\r\n\t\t\t\tupdateFunc = updateStandard;\r\n\t\t}\r\n\t\t\r\n\t\treturn updateFunc;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.animation)\r\n\tprivate static function getPropertyHint(property:String):String\r\n\t{\r\n\t\t// colorization is special; it does not require a hint marker, just the word 'color'.\r\n\t\tif (property.indexOf(\"color\") != -1 || property.indexOf(\"Color\") != -1) \r\n\t\t\treturn \"rgb\";\r\n\t\t\r\n\t\tvar hintMarkerIndex:Int = property.indexOf(HINT_MARKER);\r\n\t\tif (hintMarkerIndex != -1)\t\t\t return property.substr(hintMarkerIndex + 1)\r\n\t\telse return null;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.animation)\r\n\tprivate static function getPropertyName(property:String):String\r\n\t{\r\n\t\tvar hintMarkerIndex:Int = property.indexOf(HINT_MARKER);\r\n\t\tif (hintMarkerIndex != -1)\t\t\t return property.substring(0, hintMarkerIndex)\r\n\t\telse return property;\r\n\t}\r\n\t\r\n\tprivate function updateStandard(property:String, startValue:Float, endValue:Float):Void\r\n\t{\r\n\t\tvar newValue:Float = startValue + _progress * (endValue - startValue);\r\n\t\tif (_roundToInt) newValue = Math.round(newValue);\r\n\t\ttry {\r\n\t\t\tReflect.setProperty(_target, property, newValue);\r\n\t\t}\r\n\t\tcatch (e:Error) {}\r\n\t}\r\n\t\r\n\tprivate function updateRgb(property:String, startValue:Float, endValue:Float):Void\r\n\t{\r\n\t\tvar startColor:Int = cast(startValue, Int);\r\n\t\tvar endColor:Int = cast(endValue, Int);\r\n\t\t\r\n\t\tvar startA:Int = (startColor >> 24) & 0xff;\r\n\t\tvar startR:Int = (startColor >> 16) & 0xff;\r\n\t\tvar startG:Int = (startColor >> 8) & 0xff;\r\n\t\tvar startB:Int = (startColor) & 0xff;\r\n\t\t\r\n\t\tvar endA:Int = (endColor >> 24) & 0xff;\r\n\t\tvar endR:Int = (endColor >> 16) & 0xff;\r\n\t\tvar endG:Int = (endColor >> 8) & 0xff;\r\n\t\tvar endB:Int = (endColor) & 0xff;\r\n\t\t\r\n\t\tvar newA:Int = untyped startA + (endA - startA) * _progress;\r\n\t\tvar newR:Int = untyped startR + (endR - startR) * _progress;\r\n\t\tvar newG:Int = untyped startG + (endG - startG) * _progress;\r\n\t\tvar newB:Int = untyped startB + (endB - startB) * _progress;\r\n\t\t\r\n\t\tReflect.setField(_target, property, (newA << 24) | (newR << 16) | (newG << 8) | newB);\r\n\t}\r\n\t\r\n\tprivate function updateRad(property:String, startValue:Float, endValue:Float):Void\r\n\t{\r\n\t\tupdateAngle(Math.PI, property, startValue, endValue);\r\n\t}\r\n\t\r\n\tprivate function updateDeg(property:String, startValue:Float, endValue:Float):Void\r\n\t{\r\n\t\tupdateAngle(180, property, startValue, endValue);\r\n\t}\r\n\t\r\n\tprivate function updateAngle(pi:Float, property:String, startValue:Float, endValue:Float):Void\r\n\t{\r\n\t\twhile (Math.abs(endValue - startValue) > pi)\r\n\t\t{\r\n\t\t\tif (startValue < endValue)\t\t\t\t endValue -= 2.0 * pi\r\n\t\t\telse endValue += 2.0 * pi;\r\n\t\t}\r\n\t\t\r\n\t\tupdateStandard(property, startValue, endValue);\r\n\t}\r\n\t\r\n\t/** The end value a certain property is animated to. Throws an ArgumentError if the \r\n\t *  property is not being animated. */\r\n\tpublic function getEndValue(property:String):Float\r\n\t{\r\n\t\tvar index:Int = Lambda.indexOf(_properties, property);\r\n\t\tif (index == -1)\t\t\t throw new ArgumentError(\"The property '\" + property + \"' is not animated\")\r\n\t\telse return cast(_endValues[index], Float);\r\n\t}\r\n\t\r\n\t/** Indicates if the tween is finished. */\r\n\tprivate function get_isComplete():Bool\r\n\t{\r\n\t\treturn _currentTime >= _totalTime && _repeatCount == 1;\r\n\t}\r\n\t\r\n\t/** The target object that is animated. */\r\n\tprivate function get_target():Dynamic\r\n\t{\r\n\t\treturn _target;\r\n\t}\r\n\t\r\n\t/** The transition method used for the animation. @see Transitions */\r\n\tprivate function get_transition():String\r\n\t{\r\n\t\treturn _transitionName;\r\n\t}\r\n\t\r\n\tprivate function set_transition(value:String):String\r\n\t{\r\n\t\t_transitionName = value;\r\n\t\t_transitionFunc = Transitions.getTransition(value);\r\n\t\t\r\n\t\tif (_transitionFunc == null) \r\n\t\t\tthrow new ArgumentError(\"Invalid transiton: \" + value);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The actual transition function used for the animation. */\r\n\tprivate function get_transitionFunc():Function\r\n\t{\r\n\t\treturn _transitionFunc;\r\n\t}\r\n\t\r\n\tprivate function set_transitionFunc(value:Function):Function\r\n\t{\r\n\t\t_transitionName = \"custom\";\r\n\t\t_transitionFunc = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The total time the tween will take per repetition (in seconds). */\r\n\tprivate function get_totalTime():Float\r\n\t{\r\n\t\treturn _totalTime;\r\n\t}\r\n\t\r\n\t/** The time that has passed since the tween was created (in seconds). */\r\n\tprivate function get_currentTime():Float\r\n\t{\r\n\t\treturn _currentTime;\r\n\t}\r\n\t\r\n\t/** The current progress between 0 and 1, as calculated by the transition function. */\r\n\tprivate function get_progress():Float\r\n\t{\r\n\t\treturn _progress;\r\n\t}\r\n\t\r\n\t/** The delay before the tween is started (in seconds). @default 0 */\r\n\tprivate function get_delay():Float\r\n\t{\r\n\t\treturn _delay;\r\n\t}\r\n\t\r\n\tprivate function set_delay(value:Float):Float\r\n\t{\r\n\t\t_currentTime = _currentTime + _delay - value;\r\n\t\t_delay = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The number of times the tween will be executed. \r\n\t *  Set to '0' to tween indefinitely. @default 1 */\r\n\tprivate function get_repeatCount():Int\r\n\t{\r\n\t\treturn _repeatCount;\r\n\t}\r\n\t\r\n\tprivate function set_repeatCount(value:Int):Int\r\n\t{\r\n\t\t_repeatCount = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The amount of time to wait between repeat cycles (in seconds). @default 0 */\r\n\tprivate function get_repeatDelay():Float\r\n\t{\r\n\t\treturn _repeatDelay;\r\n\t}\r\n\t\r\n\tprivate function set_repeatDelay(value:Float):Float\r\n\t{\r\n\t\t_repeatDelay = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if the tween should be reversed when it is repeating. If enabled, \r\n\t *  every second repetition will be reversed. @default false */\r\n\tprivate function get_reverse():Bool\r\n\t{\r\n\t\treturn _reverse;\r\n\t}\r\n\t\r\n\tprivate function set_reverse(value:Bool):Bool\r\n\t{\r\n\t\t_reverse = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if the numeric values should be cast to Integers. @default false */\r\n\tprivate function get_roundToInt():Bool\r\n\t{\r\n\t\treturn _roundToInt;\r\n\t}\r\n\t\r\n\tprivate function set_roundToInt(value:Bool):Bool\r\n\t{\r\n\t\t_roundToInt = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** A function that will be called when the tween starts (after a possible delay). */\r\n\tprivate function get_onStart():Function\r\n\t{\r\n\t\treturn _onStart;\r\n\t}\r\n\t\r\n\tprivate function set_onStart(value:Function):Function\r\n\t{\r\n\t\t_onStart = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** A function that will be called each time the tween is advanced. */\r\n\tprivate function get_onUpdate():Function\r\n\t{\r\n\t\treturn _onUpdate;\r\n\t}\r\n\t\r\n\tprivate function set_onUpdate(value:Function):Function\r\n\t{\r\n\t\t_onUpdate = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** A function that will be called each time the tween finishes one repetition\r\n\t *  (except the last, which will trigger 'onComplete'). */\r\n\tprivate function get_onRepeat():Function\r\n\t{\r\n\t\treturn _onRepeat;\r\n\t}\r\n\t\r\n\tprivate function set_onRepeat(value:Function):Function\r\n\t{\r\n\t\t_onRepeat = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** A function that will be called when the tween is complete. */\r\n\tprivate function get_onComplete():Function\r\n\t{\r\n\t\treturn _onComplete;\r\n\t}\r\n\t\r\n\tprivate function set_onComplete(value:Function):Function\r\n\t{\r\n\t\t_onComplete = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The arguments that will be passed to the 'onStart' function. */\r\n\tprivate function get_onStartArgs():Array<Dynamic>\r\n\t{\r\n\t\treturn _onStartArgs;\r\n\t}\r\n\t\r\n\tprivate function set_onStartArgs(value:Array<Dynamic>):Array<Dynamic>\r\n\t{\r\n\t\t_onStartArgs = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The arguments that will be passed to the 'onUpdate' function. */\r\n\tprivate function get_onUpdateArgs():Array<Dynamic>\r\n\t{\r\n\t\treturn _onUpdateArgs;\r\n\t}\r\n\t\r\n\tprivate function set_onUpdateArgs(value:Array<Dynamic>):Array<Dynamic>\r\n\t{\r\n\t\t_onUpdateArgs = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The arguments that will be passed to the 'onRepeat' function. */\r\n\tprivate function get_onRepeatArgs():Array<Dynamic>\r\n\t{\r\n\t\treturn _onRepeatArgs;\r\n\t}\r\n\t\r\n\tprivate function set_onRepeatArgs(value:Array<Dynamic>):Array<Dynamic>\r\n\t{\r\n\t\t_onRepeatArgs = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The arguments that will be passed to the 'onComplete' function. */\r\n\tprivate function get_onCompleteArgs():Array<Dynamic>\r\n\t{\r\n\t\treturn _onCompleteArgs;\r\n\t}\r\n\t\r\n\tprivate function set_onCompleteArgs(value:Array<Dynamic>):Array<Dynamic>\r\n\t{\r\n\t\t_onCompleteArgs = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Another tween that will be started (i.e. added to the same juggler) as soon as \r\n\t *  this tween is completed. */\r\n\tprivate function get_nextTween():Tween\r\n\t{\r\n\t\treturn _nextTween;\r\n\t}\r\n\t\r\n\tprivate function set_nextTween(value:Tween):Tween\r\n\t{\r\n\t\t_nextTween = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t// tween pooling\r\n\t\r\n\tprivate static var sTweenPool:Array<Tween> = [];\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.animation)\r\n\tprivate static function fromPool(target:Dynamic, time:Float, transition:Dynamic = \"linear\"):Tween\r\n\t{\r\n\t\tif (sTweenPool.length > 0) return sTweenPool.pop().reset(target, time, transition)\r\n\t\telse return new Tween(target, time, transition);\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.animation)\r\n\tprivate static function toPool(tween:Tween):Void\r\n\t{\r\n\t\t// reset any object-references, to make sure we don't prevent any garbage collection\r\n\t\ttween._onStart = tween._onUpdate = tween._onRepeat = tween._onComplete = null;\r\n\t\ttween._onStartArgs = tween._onUpdateArgs = tween._onRepeatArgs = tween._onCompleteArgs = null;\r\n\t\ttween._target = null;\r\n\t\ttween._transitionFunc = null;\r\n\t\ttween.removeEventListeners();\r\n\t\tsTweenPool.push(tween);\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.core;\r\n\r\nimport openfl.display3D.Context3DProfile;\r\nimport openfl.display3D.Context3DRenderMode;\r\nimport openfl.errors.ArgumentError;\r\nimport openfl.errors.Error;\r\nimport haxe.Timer;\r\nimport starling.core.StatsDisplay;\r\nimport starling.openfl.OpenFLOverrides;\r\n\r\nimport openfl.display.Shape;\r\nimport openfl.display.Sprite;\r\nimport openfl.display.Stage3D;\r\nimport openfl.display.StageAlign;\r\nimport openfl.display.StageScaleMode;\r\nimport openfl.display3D.Context3D;\r\nimport openfl.errors.IllegalOperationError;\r\nimport openfl.events.ErrorEvent;\r\nimport openfl.events.Event;\r\nimport openfl.events.KeyboardEvent;\r\nimport openfl.events.MouseEvent;\r\nimport openfl.events.TouchEvent;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.system.Capabilities;\r\nimport openfl.text.TextField;\r\nimport openfl.text.TextFieldAutoSize;\r\nimport openfl.text.TextFormat;\r\nimport openfl.text.TextFormatAlign;\r\nimport openfl.ui.Mouse;\r\nimport openfl.ui.Multitouch;\r\nimport openfl.ui.MultitouchInputMode;\r\n\r\nimport starling.animation.Juggler;\r\nimport starling.display.DisplayObject;\r\nimport starling.display.Stage;\r\nimport starling.events.EventDispatcher;\r\nimport starling.events.ResizeEvent;\r\nimport starling.events.TouchPhase;\r\nimport starling.events.TouchProcessor;\r\nimport starling.rendering.Painter;\r\nimport starling.utils.Align;\r\nimport starling.utils.SystemUtil;\r\n\r\n/** Dispatched when a new render context is created. The 'data' property references the context. */\r\n@:meta(Event(name=\"context3DCreate\",type=\"starling.events.Event\"))\r\n\r\n\r\n/** Dispatched when the root class has been created. The 'data' property references that object. */\r\n@:meta(Event(name=\"rootCreated\",type=\"starling.events.Event\"))\r\n\r\n\r\n/** Dispatched when a fatal error is encountered. The 'data' property contains an error string. */\r\n@:meta(Event(name=\"fatalError\",type=\"starling.events.Event\"))\r\n\r\n\r\n/** Dispatched when the display list is about to be rendered. This event provides the last\r\n *  opportunity to make changes before the display list is rendered. */\r\n@:meta(Event(name=\"render\",type=\"starling.events.Event\"))\r\n\r\n\r\n/** The Starling class represents the core of the Starling framework.\r\n *\r\n *  <p>The Starling framework makes it possible to create 2D applications and games that make\r\n *  use of the Stage3D architecture introduced in Flash Player 11. It implements a display tree\r\n *  system that is very similar to that of conventional Flash, while leveraging modern GPUs\r\n *  to speed up rendering.</p>\r\n *  \r\n *  <p>The Starling class represents the link between the conventional Flash display tree and\r\n *  the Starling display tree. To create a Starling-powered application, you have to create\r\n *  an instance of the Starling class:</p>\r\n *  \r\n *  <pre>var starling:Starling = new Starling(Game, stage);</pre>\r\n *  \r\n *  <p>The first parameter has to be a Starling display object class, e.g. a subclass of \r\n *  <code>starling.display.Sprite</code>. In the sample above, the class \"Game\" is the\r\n *  application root. An instance of \"Game\" will be created as soon as Starling is initialized.\r\n *  The second parameter is the conventional (Flash) stage object. Per default, Starling will\r\n *  display its contents directly below the stage.</p>\r\n *  \r\n *  <p>It is recommended to store the Starling instance as a member variable, to make sure\r\n *  that the Garbage Collector does not destroy it. After creating the Starling object, you \r\n *  have to start it up like this:</p>\r\n * \r\n *  <pre>starling.start();</pre>\r\n * \r\n *  <p>It will now render the contents of the \"Game\" class in the frame rate that is set up for\r\n *  the application (as defined in the Flash stage).</p> \r\n * \r\n *  <strong>Context3D Profiles</strong>\r\n * \r\n *  <p>Stage3D supports different rendering profiles, and Starling works with all of them. The\r\n *  last parameter of the Starling constructor allows you to choose which profile you want.\r\n *  The following profiles are available:</p>\r\n * \r\n *  <ul>\r\n *\t<li>BASELINE_CONSTRAINED: provides the broadest hardware reach. If you develop for the\r\n *\t\tbrowser, this is the profile you should test with.</li>\r\n *\t<li>BASELINE: recommend for any mobile application, as it allows Starling to use a more\r\n *\t\tmemory efficient texture type (RectangleTextures). It also supports more complex\r\n *\t\tAGAL code.</li>\r\n *\t<li>BASELINE_EXTENDED: adds support for textures up to 4096x4096 pixels. This is\r\n *\t\tespecially useful on mobile devices with very high resolutions.</li>\r\n *\t<li>STANDARD_CONSTRAINED, STANDARD, STANDARD_EXTENDED: each provide more AGAL features,\r\n *\t\tamong other things. Most Starling games will not gain much from them.</li>\r\n *  </ul>\r\n *  \r\n *  <p>The recommendation is to deploy your app with the profile \"auto\" (which makes Starling\r\n *  pick the best available of those), but test it in all available profiles.</p>\r\n *  \r\n *  <strong>Accessing the Starling object</strong>\r\n * \r\n *  <p>From within your application, you can access the current Starling object anytime\r\n *  through the static method <code>Starling.Current</code>. It will return the active Starling\r\n *  instance (most applications will only have one Starling object, anyway).</p> \r\n * \r\n *  <strong>Viewport</strong>\r\n * \r\n *  <p>The area the Starling content is rendered into is, per default, the complete size of the \r\n *  stage. You can, however, use the \"viewPort\" property to change it. This can be  useful \r\n *  when you want to render only into a part of the screen, or if the player size changes. For\r\n *  the latter, you can listen to the RESIZE-event dispatched by the Starling\r\n *  stage.</p>\r\n * \r\n *  <strong>Native overlay</strong>\r\n *  \r\n *  <p>Sometimes you will want to display native Flash content on top of Starling. That's what the\r\n *  <code>nativeOverlay</code> property is for. It returns a Flash Sprite lying directly\r\n *  on top of the Starling content. You can add conventional Flash objects to that overlay.</p>\r\n *  \r\n *  <p>Beware, though, that conventional Flash content on top of 3D content can lead to\r\n *  performance penalties on some (mobile) platforms. For that reason, always remove all child\r\n *  objects from the overlay when you don't need them any longer. Starling will remove the \r\n *  overlay from the display list when it's empty.</p>\r\n *  \r\n *  <strong>Multitouch</strong>\r\n *  \r\n *  <p>Starling supports multitouch input on devices that provide it. During development, \r\n *  where most of us are working with a conventional mouse and keyboard, Starling can simulate \r\n *  multitouch events with the help of the \"Shift\" and \"Ctrl\" (Mac: \"Cmd\") keys. Activate\r\n *  this feature by enabling the <code>simulateMultitouch</code> property.</p>\r\n *  \r\n *  <strong>Handling a lost render context</strong>\r\n *  \r\n *  <p>On some operating systems and under certain conditions (e.g. returning from system\r\n *  sleep), Starling's stage3D render context may be lost. Starling will try to recover\r\n *  from a lost context automatically. To be able to do this, Starling will cache textures\r\n *  in RAM to be able to restore them after the context was lost. This will take up quite\r\n *  a bit of extra memory, though, which might be problematic especially on mobile platforms.\r\n *  To avoid the higher memory footprint, it's recommend to load your textures with\r\n *  Starling's \"AssetManager\"; it is smart enough to recreate a texture directly from its\r\n *  origin.</p>\r\n *\r\n *  <p>In case you want to react to a context loss, Starling dispatches an event with\r\n *  the type \"Event.CONTEXT3D_CREATE\" when the context is restored. You can recreate any \r\n *  invalid resources in a corresponding event listener.</p>\r\n * \r\n *  <strong>Sharing a 3D Context</strong>\r\n * \r\n *  <p>Per default, Starling handles the Stage3D context itself. If you want to combine\r\n *  Starling with another Stage3D engine, however, this may not be what you want. In this case,\r\n *  you can make use of the <code>shareContext</code> property:</p> \r\n *  \r\n *  <ol>\r\n *\t<li>Manually create and configure a context3D object that both frameworks can work with\r\n *\t\t(through <code>stage3D.requestContext3D</code> and\r\n *\t\t<code>context.configureBackBuffer</code>).</li>\r\n *\t<li>Initialize Starling with the stage3D instance that contains that configured context.\r\n *\t\tThis will automatically enable <code>shareContext</code>.</li>\r\n *\t<li>Call <code>start()</code> on your Starling instance (as usual). This will make  \r\n *\t\tStarling queue input events (keyboard/mouse/touch).</li>\r\n *\t<li>Create a game loop (e.g. using the native <code>ENTER_FRAME</code> event) and let it  \r\n *\t\tcall Starling's <code>nextFrame</code> as well as the equivalent method of the other \r\n *\t\tStage3D engine. Surround those calls with <code>context.clear()</code> and \r\n *\t\t<code>context.present()</code>.</li>\r\n *  </ol>\r\n *  \r\n *  <p>The Starling wiki contains a <a href=\"http://goo.gl/BsXzw\">tutorial</a> with more \r\n *  information about this topic.</p>\r\n *\r\n *  @see starling.utils.AssetManager\r\n *\r\n */\r\nclass Starling extends EventDispatcher\r\n{\r\n\tprivate var touchEventTypes(get, never):Array<Dynamic>;\r\n\tpublic var isStarted(get, never):Bool;\r\n\tpublic var juggler(get, never):Juggler;\r\n\tpublic var painter(get, never):Painter;\r\n\tpublic var context(get, never):Context3D;\r\n\tpublic var simulateMultitouch(get, set):Bool;\r\n\tpublic var enableErrorChecking(get, set):Bool;\r\n\tpublic var antiAliasing(get, set):Int;\r\n\tpublic var viewPort(get, set):Rectangle;\r\n\tpublic var contentScaleFactor(get, never):Float;\r\n\tpublic var nativeOverlay(get, never):Sprite;\r\n\tpublic var showStats(get, set):Bool;\r\n\tpublic var stage(get, never):Stage;\r\n\tpublic var stage3D(get, never):Stage3D;\r\n\tpublic var nativeStage(get, never):openfl.display.Stage;\r\n\tpublic var root(get, never):DisplayObject;\r\n\tpublic var rootClass(get, set):Class<Dynamic>;\r\n\tpublic var shareContext(get, set):Bool;\r\n\tpublic var profile(get, never):Context3DProfile;\r\n\tpublic var supportHighResolutions(get, set):Bool;\r\n\tpublic var touchProcessor(get, set):TouchProcessor;\r\n\tpublic var frameID(get, never):Int;\r\n\tpublic var contextValid(get, never):Bool;\r\n\t\r\n\tpublic static var Current(get, null):Starling;\r\n\tpublic static var All(get, null):Array<Starling>;\r\n\tpublic static var Context(get, null):Context3D;\r\n\tpublic static var Juggler(get, null):Juggler;\r\n\tpublic static var Painter(get, null):Painter;\r\n\tpublic static var ContentScaleFactor(get, null):Float;\r\n\tpublic static var MultitouchEnabled(get, set):Bool;\r\n\tpublic static var FrameID(get, null):Int;\r\n\t\r\n\t/** The version of the Starling framework. */\r\n\tpublic static var VERSION:String = \"2.0\";\r\n\t\r\n\t/** The key for the shader programs stored in 'contextData' */\r\n\tprivate static inline var PROGRAM_DATA_NAME:String = \"Starling.programs\";\r\n\t\r\n\t// members\r\n\t\r\n\tprivate var _stage:Stage;  // starling.display.stage!  \r\n\tprivate var _rootClass:Class<Dynamic>;\r\n\tprivate var _root:DisplayObject;\r\n\tprivate var _juggler:Juggler;\r\n\tprivate var _painter:Painter;\r\n\tprivate var _touchProcessor:TouchProcessor;\r\n\tprivate var _antiAliasing:Int;\r\n\tprivate var _frameTimestamp:Float;\r\n\tprivate var _frameID:Int;\r\n\tprivate var _leftMouseDown:Bool;\r\n\tprivate var _statsDisplay:StatsDisplay;\r\n\tprivate var _started:Bool;\r\n\tprivate var _rendering:Bool;\r\n\tprivate var _supportHighResolutions:Bool;\r\n\t\r\n\tprivate var _viewPort:Rectangle;\r\n\tprivate var _previousViewPort:Rectangle;\r\n\tprivate var _clippedViewPort:Rectangle;\r\n\t\r\n\tprivate var _nativeStage:openfl.display.Stage;\r\n\tprivate var _nativeOverlay:Sprite;\r\n\t\r\n\tprivate static var sCurrent:Starling;\r\n\tprivate static var sPainters = new Map<Stage3D, Painter>();\r\n\tprivate static var sAll:Array<Starling> = [];\r\n\t\r\n\tvar tempStageWidth:Int;\r\n\tvar tempStageHeight:Int;\r\n\tvar tempHorizontalAlign:String;\r\n\tvar tempVerticalAlign:String;\r\n\tvar tempScale:Float;\r\n\t\r\n\t// construction\r\n\t\r\n\t/** Creates a new Starling instance. \r\n\t *  @param rootClass  A subclass of 'starling.display.DisplayObject'. It will be created\r\n\t *\t\t\t\t\tas soon as initialization is finished and will become the first child\r\n\t *\t\t\t\t\tof the Starling stage. Pass <code>null</code> if you don't want to\r\n\t *\t\t\t\t\tcreate a root object right away. (You can use the\r\n\t *\t\t\t\t\t<code>rootClass</code> property later to make that happen.)\r\n\t *  @param stage\t  The Flash (2D) stage.\r\n\t *  @param viewPort   A rectangle describing the area into which the content will be \r\n\t *\t\t\t\t\trendered. Default: stage size\r\n\t *  @param stage3D\tThe Stage3D object into which the content will be rendered. If it \r\n\t *\t\t\t\t\talready contains a context, <code>sharedContext</code> will be set\r\n\t *\t\t\t\t\tto <code>true</code>. Default: the first available Stage3D.\r\n\t *  @param renderMode The Context3D render mode that should be requested.\r\n\t *\t\t\t\t\tUse this parameter if you want to force \"software\" rendering.\r\n\t *  @param profile\tThe Context3D profile that should be requested.\r\n\t *\r\n\t *\t\t\t\t\t<ul>\r\n\t *\t\t\t\t\t<li>If you pass a profile String, this profile is enforced.</li>\r\n\t *\t\t\t\t\t<li>Pass an Array of profiles to make Starling pick the first\r\n\t *\t\t\t\t\t\tone that works (starting with the first array element).</li>\r\n\t *\t\t\t\t\t<li>Pass the String \"auto\" to make Starling pick the best available\r\n\t *\t\t\t\t\t\tprofile automatically.</li>\r\n\t *\t\t\t\t\t</ul>\r\n\t */\r\n\tpublic function new(rootClass:Class<Dynamic>, stage:openfl.display.Stage,\r\n\t\t\tviewPort:Rectangle = null, stage3D:Stage3D = null,\r\n\t\t\trenderMode:Context3DRenderMode = null, profile:Array<Context3DProfile> = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tOpenFLOverrides;\r\n\t\t\r\n\t\tif (stage == null) throw new ArgumentError(\"Stage must not be null\");\r\n\t\tif (viewPort == null) viewPort = new Rectangle(0, 0, stage.stageWidth, stage.stageHeight);\r\n\t\tif (stage3D == null) stage3D = stage.stage3Ds[0];\r\n\t\t\r\n\t\t// TODO it might make sense to exchange the 'renderMode' and 'profile' parameters.  ;\r\n\t\t\r\n\t\tSystemUtil.initialize();\r\n\t\tsAll.push(this);\r\n\t\tmakeCurrent();\r\n\t\t\r\n\t\t_rootClass = rootClass;\r\n\t\t_viewPort = viewPort;\r\n\t\t_previousViewPort = new Rectangle();\r\n\t\t_stage = new Stage(untyped viewPort.width, untyped viewPort.height, stage.color);\r\n\t\t_nativeOverlay = new Sprite();\r\n\t\t_nativeStage = stage;\r\n\t\t_nativeStage.addChild(_nativeOverlay);\r\n\t\t_touchProcessor = new TouchProcessor(_stage);\r\n\t\t_juggler = new Juggler();\r\n\t\t_antiAliasing = 0;\r\n\t\t_supportHighResolutions = false;\r\n\t\t_frameTimestamp = Math.round(haxe.Timer.stamp() * 1000) / 1000.0;\r\n\t\t_painter = createPainter(stage3D);\r\n\t\t\r\n\t\t// all other modes are problematic in Starling, so we force those here\r\n\t\tstage.scaleMode = StageScaleMode.NO_SCALE;\r\n\t\tstage.align = StageAlign.TOP_LEFT;\r\n\t\t\r\n\t\t// register touch/mouse event handlers\r\n\t\tfor (touchEventType in touchEventTypes)\r\n\t\t\tstage.addEventListener(touchEventType, onTouch, false, 0, true);\r\n\t\t\r\n\t\t// register other event handlers\r\n\t\tstage.addEventListener(Event.ENTER_FRAME, onEnterFrame, false, 0, true);\r\n\t\tstage.addEventListener(KeyboardEvent.KEY_DOWN, onKey, false, 0, true);\r\n\t\tstage.addEventListener(KeyboardEvent.KEY_UP, onKey, false, 0, true);\r\n\t\tstage.addEventListener(Event.RESIZE, onResize, false, 0, true);\r\n\t\tstage.addEventListener(Event.MOUSE_LEAVE, onMouseLeave, false, 0, true);\r\n\t\t\r\n\t\tstage3D.addEventListener(Event.CONTEXT3D_CREATE, onContextCreated, false, 10, true);\r\n\t\tstage3D.addEventListener(ErrorEvent.ERROR, onStage3DError, false, 10, true);\r\n\t\t\r\n\t\tif (_painter.shareContext) \r\n\t\t{\r\n\t\t\tTimer.delay(initialize, 1);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tif (!SystemUtil.supportsDepthAndStencil) \r\n\t\t\t\ttrace(\"[Starling] Mask support requires 'depthAndStencil' to be enabled\" +\r\n\t\t\t\t\t\" in the application descriptor.\");\r\n\t\t\t\r\n\t\t\t_painter.requestContext3D(renderMode, profile);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Disposes all children of the stage and the render context; removes all registered\r\n\t *  event listeners. */\r\n\tpublic function dispose():Void\r\n\t{\r\n\t\tstop(true);\r\n\t\t\r\n\t\t_nativeStage.removeEventListener(Event.ENTER_FRAME, onEnterFrame, false);\r\n\t\t_nativeStage.removeEventListener(KeyboardEvent.KEY_DOWN, onKey, false);\r\n\t\t_nativeStage.removeEventListener(KeyboardEvent.KEY_UP, onKey, false);\r\n\t\t_nativeStage.removeEventListener(Event.RESIZE, onResize, false);\r\n\t\t_nativeStage.removeEventListener(Event.MOUSE_LEAVE, onMouseLeave, false);\r\n\t\t_nativeStage.removeChild(_nativeOverlay);\r\n\t\t\r\n\t\tstage3D.removeEventListener(Event.CONTEXT3D_CREATE, onContextCreated, false);\r\n\t\tstage3D.removeEventListener(Event.CONTEXT3D_CREATE, onContextRestored, false);\r\n\t\tstage3D.removeEventListener(ErrorEvent.ERROR, onStage3DError, false);\r\n\t\t\r\n\t\tfor (touchEventType in touchEventTypes)\r\n\t\t_nativeStage.removeEventListener(touchEventType, onTouch, false);\r\n\t\t\r\n\t\tvar index:Int = Lambda.indexOf(sAll, this);\r\n\t\tif (index != -1) sAll.splice(index, 1);\r\n\t\t\r\n\t\tvar numInstancesSharingThisPainter:Int = \r\n\t\tsAll.filter(function(s:Starling):Bool\r\n\t\t{\r\n\t\t\treturn s.stage3D == stage3D;\r\n\t\t}).length;\r\n\t\t\r\n\t\tif (numInstancesSharingThisPainter == 0) \r\n\t\t{\r\n\t\t\t_painter.dispose();\r\n\t\t}\r\n\t\t\r\n\t\tif (_touchProcessor != null) _touchProcessor.dispose();\r\n\t\tif (_stage != null) _stage.dispose();\r\n\t\tif (sCurrent == this) sCurrent = null;\r\n\t}\r\n\t\r\n\t// functions\r\n\t\r\n\tprivate function initialize():Void\r\n\t{\r\n\t\tmakeCurrent();\r\n\t\tupdateViewPort(true);\r\n\t\t\r\n\t\tif (!shareContext)\t\t\t   // ideal time: after viewPort setup, before root creation  \r\n\t\t\tdispatchEventWith(Event.CONTEXT3D_CREATE, false, context);\r\n\t\t\r\n\t\tinitializeRoot();\r\n\t\t_frameTimestamp = Math.round(haxe.Timer.stamp() * 1000) / 1000.0;\r\n\t}\r\n\t\r\n\tprivate function initializeRoot():Void\r\n\t{\r\n\t\tif (_root == null && _rootClass != null) \r\n\t\t{\r\n\t\t\t_root = cast(Type.createInstance(_rootClass, []), DisplayObject);\r\n\t\t\tif (_root == null) throw new Error(\"Invalid root class: \" + _rootClass);\r\n\t\t\t_stage.addChildAt(_root, 0);\r\n\t\t\t\r\n\t\t\tdispatchEventWith(starling.events.Event.ROOT_CREATED, false, _root);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function createPainter(stage3D:Stage3D):Painter\r\n\t{\r\n\t\tif (sPainters.exists(stage3D)) \r\n\t\t\treturn sPainters.get(stage3D);\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar painter:Painter = new Painter(stage3D);\r\n\t\t\tsPainters.set(stage3D, painter);\r\n\t\t\treturn painter;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Calls <code>advanceTime()</code> (with the time that has passed since the last frame)\r\n\t *  and <code>render()</code>. */\r\n\tpublic function nextFrame():Void\r\n\t{\r\n\t\tvar now:Float = Math.round(haxe.Timer.stamp() * 1000) / 1000.0;\r\n\t\tvar passedTime:Float = now - _frameTimestamp;\r\n\t\t_frameTimestamp = now;\r\n\t\t\r\n\t\t// to avoid overloading time-based animations, the maximum delta is truncated.\r\n\t\tif (passedTime > 1.0) passedTime = 1.0;\r\n\t\t\r\n\t\t// after about 25 days, 'getTimer()' will roll over. A rare event, but still ...  ;\r\n\t\tif (passedTime < 0.0) passedTime = 1.0 / _nativeStage.frameRate;\r\n\t\t\r\n\t\tadvanceTime(passedTime);\r\n\t\trender();\r\n\t}\r\n\t\r\n\t/** Dispatches ENTER_FRAME events on the display list, advances the Juggler \r\n\t *  and processes touches. */\r\n\tpublic function advanceTime(passedTime:Float):Void\r\n\t{\r\n\t\tif (!contextValid) \r\n\t\t\treturn;\r\n\t\t\r\n\t\tmakeCurrent();\r\n\t\t\r\n\t\t_touchProcessor.advanceTime(passedTime);\r\n\t\t_stage.advanceTime(passedTime);\r\n\t\t_juggler.advanceTime(passedTime);\r\n\t}\r\n\t\r\n\t/** Renders the complete display list. Before rendering, the context is cleared; afterwards,\r\n\t *  it is presented (to avoid this, enable <code>shareContext</code>).\r\n\t *\r\n\t *  <p>This method also dispatches an <code>Event.RENDER</code>-event on the Starling\r\n\t *  instance. That's the last opportunity to make changes before the display list is\r\n\t *  rendered.</p> */\r\n\tpublic function render():Void\r\n\t{\r\n\t\tif (!contextValid) \r\n\t\t\treturn;\r\n\t\t\r\n\t\tmakeCurrent();\r\n\t\tupdateViewPort();\r\n\t\tdispatchEventWith(starling.events.Event.RENDER);\r\n\t\t\r\n\t\tvar shareContext:Bool = _painter.shareContext;\r\n\t\tvar scaleX:Float = _viewPort.width / _stage.stageWidth;\r\n\t\tvar scaleY:Float = _viewPort.height / _stage.stageHeight;\r\n\t\t\r\n\t\t_painter.nextFrame();\r\n\t\t_painter.pixelSize = 1.0 / contentScaleFactor;\r\n\t\t_painter.state.setProjectionMatrix(\r\n\t\t\t\t_viewPort.x < (0) ? -_viewPort.x / scaleX:0.0,\r\n\t\t\t\t_viewPort.y < (0) ? -_viewPort.y / scaleY:0.0,\r\n\t\t\t\t_clippedViewPort.width / scaleX,\r\n\t\t\t\t_clippedViewPort.height / scaleY,\r\n\t\t\t\t_stage.stageWidth, _stage.stageHeight, _stage.cameraPosition);\r\n\t\t\r\n\t\tif (!shareContext) {\r\n\t\t\t_painter.clear(_stage.color, 1.0);\r\n\t\t\t//_painter.clear(0xCC0055, 1.0);\r\n\t\t}\r\n\t\t_stage.render(_painter);\r\n\t\t_painter.finishFrame();\r\n\t\t_painter.frameID = ++_frameID;\r\n\t\t\r\n\t\tif (_statsDisplay != null) \r\n\t\t\t_statsDisplay.drawCount = _painter.drawCount;\r\n\t\t\r\n\t\tif (!shareContext) \r\n\t\t\t_painter.present();\r\n\t}\r\n\t\r\n\tprivate function updateViewPort(forceUpdate:Bool = false):Void\r\n\t{\r\n\t\t// the last set viewport is stored in a variable; that way, people can modify the\r\n\t\t// viewPort directly (without a copy) and we still know if it has changed.\r\n\t\t\r\n\t\tif (forceUpdate ||\r\n\t\t\t_previousViewPort.width != _viewPort.width ||\r\n\t\t\t_previousViewPort.height != _viewPort.height ||\r\n\t\t\t_previousViewPort.x != _viewPort.x ||\r\n\t\t\t_previousViewPort.y != _viewPort.y) \r\n\t\t{\r\n\t\t\t_previousViewPort.setTo(_viewPort.x, _viewPort.y, _viewPort.width, _viewPort.height);\r\n\t\t\t\r\n\t\t\t// Constrained mode requires that the viewport is within the native stage bounds;\r\n\t\t\t// thus, we use a clipped viewport when configuring the back buffer. (In baseline\r\n\t\t\t// mode, that's not necessary, but it does not hurt either.)\r\n\t\t\t\r\n\t\t\t_clippedViewPort = _viewPort.intersection(\r\n\t\t\t\t\t\t\tnew Rectangle(0, 0, _nativeStage.stageWidth, _nativeStage.stageHeight));\r\n\t\t\t\r\n\t\t\tif (!shareContext) \r\n\t\t\t{\r\n\t\t\t\tvar contentScaleFactor:Float = 1;\r\n\t\t\t\tif (_supportHighResolutions && Reflect.hasField(_nativeStage, \"contentsScaleFactor\")) {\r\n\t\t\t\t\tcontentScaleFactor = Reflect.getProperty(_nativeStage, \"contentsScaleFactor\");\r\n\t\t\t\t}\r\n\t\t\t\t_painter.configureBackBuffer(_clippedViewPort, contentScaleFactor,\r\n\t\t\t\t\t\t_antiAliasing, true);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function updateNativeOverlay():Void\r\n\t{\r\n\t\t_nativeOverlay.x = _viewPort.x;\r\n\t\t_nativeOverlay.y = _viewPort.y;\r\n\t\t_nativeOverlay.scaleX = _viewPort.width / _stage.stageWidth;\r\n\t\t_nativeOverlay.scaleY = _viewPort.height / _stage.stageHeight;\r\n\t}\r\n\t\r\n\t/** Stops Starling right away and displays an error message on the native overlay.\r\n\t *  This method will also cause Starling to dispatch a FATAL_ERROR event. */\r\n\tpublic function stopWithFatalError(message:String):Void\r\n\t{\r\n\t\tvar background:Shape = new Shape();\r\n\t\tbackground.graphics.beginFill(0x0, 0.8);\r\n\t\tbackground.graphics.drawRect(0, 0, _stage.stageWidth, _stage.stageHeight);\r\n\t\tbackground.graphics.endFill();\r\n\t\t\r\n\t\tvar textField:TextField = new TextField();\r\n\t\tvar textFormat:TextFormat = new TextFormat(\"Verdana\", 14, 0xFFFFFF);\r\n\t\ttextFormat.align = TextFormatAlign.CENTER;\r\n\t\ttextField.defaultTextFormat = textFormat;\r\n\t\ttextField.wordWrap = true;\r\n\t\ttextField.width = _stage.stageWidth * 0.75;\r\n\t\ttextField.autoSize = TextFieldAutoSize.CENTER;\r\n\t\ttextField.text = message;\r\n\t\ttextField.x = (_stage.stageWidth - textField.width) / 2;\r\n\t\ttextField.y = (_stage.stageHeight - textField.height) / 2;\r\n\t\ttextField.background = true;\r\n\t\ttextField.backgroundColor = 0x550000;\r\n\t\t\r\n\t\tupdateNativeOverlay();\r\n\t\tnativeOverlay.addChild(background);\r\n\t\tnativeOverlay.addChild(textField);\r\n\t\tstop(true);\r\n\t\t\r\n\t\ttrace(\"[Starling]\", message);\r\n\t\tdispatchEventWith(starling.events.Event.FATAL_ERROR, false, message);\r\n\t}\r\n\t\r\n\t/** Make this Starling instance the <code>current</code> one. */\r\n\tpublic function makeCurrent():Void\r\n\t{\r\n\t\tsCurrent = this;\r\n\t}\r\n\t\r\n\t/** As soon as Starling is started, it will queue input events (keyboard/mouse/touch);   \r\n\t *  furthermore, the method <code>nextFrame</code> will be called once per Flash Player\r\n\t *  frame. (Except when <code>shareContext</code> is enabled: in that case, you have to\r\n\t *  call that method manually.) */\r\n\tpublic function start():Void\r\n\t{\r\n\t\t_started = _rendering = true;\r\n\t\t_frameTimestamp = Math.round(haxe.Timer.stamp() * 1000) / 1000.0;\r\n\t}\r\n\t\r\n\t/** Stops all logic and input processing, effectively freezing the app in its current state.\r\n\t *  Per default, rendering will continue: that's because the classic display list\r\n\t *  is only updated when stage3D is. (If Starling stopped rendering, conventional Flash\r\n\t *  contents would freeze, as well.)\r\n\t *  \r\n\t *  <p>However, if you don't need classic Flash contents, you can stop rendering, too.\r\n\t *  On some mobile systems (e.g. iOS), you are even required to do so if you have\r\n\t *  activated background code execution.</p>\r\n\t */\r\n\tpublic function stop(suspendRendering:Bool = false):Void\r\n\t{\r\n\t\t_started = false;\r\n\t\t_rendering = !suspendRendering;\r\n\t}\r\n\t\r\n\t// event handlers\r\n\t\r\n\tprivate function onStage3DError(event:ErrorEvent):Void\r\n\t{\r\n\t\tif (event.errorID == 3702) \r\n\t\t{\r\n\t\t\tvar mode:String = Capabilities.playerType == (\"Desktop\") ? \"renderMode\":\"wmode\";\r\n\t\t\tstopWithFatalError(\"Context3D not available! Possible reasons: wrong \" + mode +\r\n\t\t\t\t\t\" or missing device support.\");\r\n\t\t}\r\n\t\telse \r\n\t\tstopWithFatalError(\"Stage3D error: \" + event.text);\r\n\t}\r\n\t\r\n\tprivate function onContextCreated(event:Event):Void\r\n\t{\r\n\t\tstage3D.removeEventListener(Event.CONTEXT3D_CREATE, onContextCreated);\r\n\t\tstage3D.addEventListener(Event.CONTEXT3D_CREATE, onContextRestored, false, 10, true);\r\n\t\t\r\n\t\ttrace(\"[Starling] Context ready. Display Driver:\", context.driverInfo);\r\n\t\tinitialize();\r\n\t}\r\n\t\r\n\tprivate function onContextRestored(event:Event):Void\r\n\t{\r\n\t\ttrace(\"[Starling] Context restored.\");\r\n\t\tupdateViewPort(true);\r\n\t\tdispatchEventWith(Event.CONTEXT3D_CREATE, false, context);\r\n\t}\r\n\t\r\n\tprivate function onEnterFrame(event:Event):Void\r\n\t{\r\n\t\t// On mobile, the native display list is only updated on stage3D draw calls.\r\n\t\t// Thus, we render even when Starling is paused.\r\n\t\tif (!shareContext) \r\n\t\t{\r\n\t\t\tif (_started) nextFrame()\r\n\t\t\telse if (_rendering) render();\r\n\t\t}\r\n\t\t\r\n\t\tupdateNativeOverlay();\r\n\t}\r\n\t\r\n\tprivate function onKey(event:KeyboardEvent):Void\r\n\t{\r\n\t\tif (!_started) return;\r\n\t\t\r\n\t\tvar keyEvent:starling.events.KeyboardEvent = new starling.events.KeyboardEvent(\r\n\t\tevent.type, event.charCode, event.keyCode, event.keyLocation, \r\n\t\tevent.ctrlKey, event.altKey, event.shiftKey);\r\n\t\t\r\n\t\tmakeCurrent();\r\n\t\t_stage.dispatchEvent(keyEvent);\r\n\t\t\r\n\t\tif (keyEvent.isDefaultPrevented()) \r\n\t\t\tevent.preventDefault();\r\n\t}\r\n\t\r\n\tprivate function onResize(event:Event):Void\r\n\t{\r\n\t\ttempStageWidth = event.target.stageWidth;\r\n\t\ttempStageHeight = event.target.stageHeight;\r\n\t\t\r\n\t\tif (contextValid) \r\n\t\t\tdispatchResizeEvent()\r\n\t\telse \r\n\t\taddEventListener(Event.CONTEXT3D_CREATE, dispatchResizeEvent);\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function dispatchResizeEvent():Void\r\n\t{\r\n\t\t// on Android, the context is not valid while we're resizing. To avoid problems\r\n\t\t// with user code, we delay the event dispatching until it becomes valid again.\r\n\t\t\r\n\t\tmakeCurrent();\r\n\t\tremoveEventListener(Event.CONTEXT3D_CREATE, dispatchResizeEvent);\r\n\t\t_stage.dispatchEvent(new ResizeEvent(Event.RESIZE, tempStageWidth, tempStageHeight));\r\n\t}\r\n\t\r\n\tprivate function onMouseLeave(event:Event):Void\r\n\t{\r\n\t\t_touchProcessor.enqueueMouseLeftStage();\r\n\t}\r\n\t\r\n\tprivate function onTouch(event:Event):Void\r\n\t{\r\n\t\tif (!_started) return;\r\n\t\t\r\n\t\tvar globalX:Float;\r\n\t\tvar globalY:Float;\r\n\t\tvar touchID:Int;\r\n\t\tvar phase:String = null;\r\n\t\tvar pressure:Float = 1.0;\r\n\t\tvar width:Float = 1.0;\r\n\t\tvar height:Float = 1.0;\r\n\t\t\r\n\t\t// figure out general touch properties\r\n\t\tif (Std.is(event, MouseEvent)) \r\n\t\t{\r\n\t\t\tvar mouseEvent:MouseEvent = cast(event, MouseEvent);\r\n\t\t\tglobalX = mouseEvent.stageX;\r\n\t\t\tglobalY = mouseEvent.stageY;\r\n\t\t\ttouchID = 0;\r\n\t\t\t\r\n\t\t\t// MouseEvent.buttonDown returns true for both left and right button (AIR supports\r\n\t\t\t// the right mouse button). We only want to react on the left button for now,\r\n\t\t\t// so we have to save the state for the left button manually.\r\n\t\t\tif (event.type == MouseEvent.MOUSE_DOWN)\t_leftMouseDown = true\r\n\t\t\telse if (event.type == MouseEvent.MOUSE_UP)\t_leftMouseDown = false;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar touchEvent:TouchEvent = cast(event, TouchEvent);\r\n\t\t\t\r\n\t\t\t// On a system that supports both mouse and touch input, the primary touch point\r\n\t\t\t// is dispatched as mouse event as well. Since we don't want to listen to that\r\n\t\t\t// event twice, we ignore the primary touch in that case.\r\n\t\t\tvar supportsCursor:Bool = false;\r\n\t\t\t#if flash\r\n\t\t\tsupportsCursor = Mouse.supportsCursor;\r\n\t\t\t#end\r\n\t\t\tif (supportsCursor && touchEvent.isPrimaryTouchPoint) return;\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tglobalX = touchEvent.stageX;\r\n\t\t\t\tglobalY = touchEvent.stageY;\r\n\t\t\t\ttouchID = touchEvent.touchPointID;\r\n\t\t\t\tpressure = touchEvent.pressure;\r\n\t\t\t\twidth = touchEvent.sizeX;\r\n\t\t\t\theight = touchEvent.sizeY;\r\n\t\t\t}\r\n\t\t}  // figure out touch phase  \r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tvar _sw0_ = (event.type);\t\t\r\n\r\n\t\tswitch (_sw0_)\r\n\t\t{\r\n\t\t\tcase TouchEvent.TOUCH_BEGIN:phase = TouchPhase.BEGAN;\r\n\t\t\tcase TouchEvent.TOUCH_MOVE:phase = TouchPhase.MOVED;\r\n\t\t\tcase TouchEvent.TOUCH_END:phase = TouchPhase.ENDED;\r\n\t\t\tcase MouseEvent.MOUSE_DOWN:phase = TouchPhase.BEGAN;\r\n\t\t\tcase MouseEvent.MOUSE_UP:phase = TouchPhase.ENDED;\r\n\t\t\tcase MouseEvent.MOUSE_MOVE:\r\n\t\t\t\tphase = ((_leftMouseDown) ? TouchPhase.MOVED:TouchPhase.HOVER);\r\n\t\t}  // move position into viewport bounds  \r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tglobalX = _stage.stageWidth * (globalX - _viewPort.x) / _viewPort.width;\r\n\t\tglobalY = _stage.stageHeight * (globalY - _viewPort.y) / _viewPort.height;\r\n\t\t\r\n\t\t// enqueue touch in touch processor\r\n\t\t\r\n\t\t_touchProcessor.enqueue(touchID, phase, globalX, globalY, pressure, width, height);\r\n\t\t\r\n\t\t// allow objects that depend on mouse-over state to be updated immediately\r\n\t\tvar supportsCursor:Bool = false;\r\n\t\t#if flash\r\n\t\tsupportsCursor = Mouse.supportsCursor;\r\n\t\t#end\r\n\t\tif (event.type == MouseEvent.MOUSE_UP && supportsCursor) \r\n\t\t\t_touchProcessor.enqueue(touchID, TouchPhase.HOVER, globalX, globalY);\r\n\t}\r\n\t\r\n\tprivate function get_touchEventTypes():Array<Dynamic>\r\n\t{\r\n\t\tvar types:Array<Dynamic> = [];\r\n\t\t\r\n\t\tif (MultitouchEnabled) {\r\n\t\t\ttypes.push(TouchEvent.TOUCH_BEGIN);\r\n\t\t\ttypes.push(TouchEvent.TOUCH_MOVE);\r\n\t\t\ttypes.push(TouchEvent.TOUCH_END);\r\n\t\t}\r\n\t\t\r\n\t\tvar supportsCursor:Bool = false;\r\n\t\t#if flash\r\n\t\tsupportsCursor = Mouse.supportsCursor;\r\n\t\t#end\r\n\t\tif (!MultitouchEnabled || supportsCursor) {\r\n\t\t\ttypes.push(MouseEvent.MOUSE_DOWN);\r\n\t\t\ttypes.push(MouseEvent.MOUSE_MOVE);\r\n\t\t\ttypes.push(MouseEvent.MOUSE_UP);\r\n\t\t}\r\n\t\t\r\n\t\treturn types;\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** Indicates if this Starling instance is started. */\r\n\tprivate function get_isStarted():Bool {\r\n\t\treturn _started;\r\n\t}\r\n\t\r\n\t/** The default juggler of this instance. Will be advanced once per frame. */\r\n\tprivate function get_juggler():Juggler {\r\n\t\treturn _juggler;\r\n\t}\r\n\t\r\n\t/** The painter, which is used for all rendering. The same instance is passed to all\r\n\t *  <code>render</code>methods each frame.\r\n\t *\r\n\t *  <p>Note that the painter is shared among all Starling instances that use the same\r\n\t *  Stage3D object for rendering. That way, the instances can share context-related data,\r\n\t *  e.g. textures, programs or the current context settings.</p> */\r\n\tprivate function get_painter():Painter {\r\n\t\treturn _painter;\r\n\t}\r\n\t\r\n\t/** The render context of this instance. */\r\n\tprivate function get_context():Context3D {\r\n\t\treturn _painter.context;\r\n\t}\r\n\t\r\n\t/** Indicates if multitouch simulation with \"Shift\" and \"Ctrl\"/\"Cmd\"-keys is enabled.\r\n\t *  @default false */\r\n\tprivate function get_simulateMultitouch():Bool {\r\n\t\treturn _touchProcessor.simulateMultitouch;\r\n\t}\r\n\tprivate function set_simulateMultitouch(value:Bool):Bool\r\n\t{\r\n\t\t_touchProcessor.simulateMultitouch = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if Stage3D render methods will report errors. It's recommended to activate\r\n\t *  this when writing custom rendering code (shaders, etc.), since you'll get more detailed\r\n\t *  error messages. However, it has a very negative impact on performance, and it prevents\r\n\t *  ATF textures from being restored on a context loss. Never activate for release builds!\r\n\t *\r\n\t *  @default false */\r\n\tprivate function get_enableErrorChecking():Bool {\r\n\t\treturn _painter.enableErrorChecking;\r\n\t}\r\n\tprivate function set_enableErrorChecking(value:Bool):Bool\r\n\t{\r\n\t\t_painter.enableErrorChecking = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The anti-aliasing level. 0 - none, 16 - maximum. @default 0 */\r\n\tprivate function get_antiAliasing():Int {\r\n\t\treturn _antiAliasing;\r\n\t}\r\n\tprivate function set_antiAliasing(value:Int):Int\r\n\t{\r\n\t\tif (_antiAliasing != value) \r\n\t\t{\r\n\t\t\t_antiAliasing = value;\r\n\t\t\tif (contextValid)\t\t\t\t updateViewPort(true);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The viewport into which Starling contents will be rendered. */\r\n\tprivate function get_viewPort():Rectangle {\r\n\t\treturn _viewPort;\r\n\t}\r\n\tprivate function set_viewPort(value:Rectangle):Rectangle{_viewPort = value.clone();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The ratio between viewPort width and stage width. Useful for choosing a different\r\n\t *  set of textures depending on the display resolution. */\r\n\tprivate function get_contentScaleFactor():Float\r\n\t{\r\n\t\treturn (_viewPort.width * _painter.backBufferScaleFactor) / _stage.stageWidth;\r\n\t}\r\n\t\r\n\t/** A Flash Sprite placed directly on top of the Starling content. Use it to display native\r\n\t *  Flash components. */\r\n\tprivate function get_nativeOverlay():Sprite {\r\n\t\treturn _nativeOverlay;\r\n\t}\r\n\t\r\n\t/** Indicates if a small statistics box (with FPS, memory usage and draw count) is\r\n\t *  displayed.\r\n\t *\r\n\t *  <p>Beware that the memory usage should be taken with a grain of salt. The value is\r\n\t *  determined via <code>System.totalMemory</code> and does not take texture memory\r\n\t *  into account. It is recommended to use Adobe Scout for reliable and comprehensive\r\n\t *  memory analysis.</p>\r\n\t */\r\n\tprivate function get_showStats():Bool {\r\n\t\treturn _statsDisplay != null && _statsDisplay.parent != null;\r\n\t}\r\n\tprivate function set_showStats(value:Bool):Bool\r\n\t{\r\n\t\tif (value == showStats) return value;\r\n\t\t\r\n\t\tif (value) \r\n\t\t{\r\n\t\t\tif (_statsDisplay != null) _stage.addChild(_statsDisplay)\r\n\t\t\telse showStatsAt();\r\n\t\t}\r\n\t\telse _statsDisplay.removeFromParent();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Displays the statistics box at a certain position. */\r\n\tpublic function showStatsAt(horizontalAlign:String = \"left\", verticalAlign:String = \"top\", scale:Float = 1):Void\r\n\t{\r\n\t\ttempScale = scale;\r\n\t\ttempVerticalAlign = verticalAlign;\r\n\t\ttempHorizontalAlign = horizontalAlign;\r\n\t\tif (context == null) \r\n\t\t{\r\n\t\t\t// Starling is not yet ready - we postpone this until it's initialized.\r\n\t\t\taddEventListener(starling.events.Event.ROOT_CREATED, onRootCreated);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar stageWidth:Int = _stage.stageWidth;\r\n\t\t\tvar stageHeight:Int = _stage.stageHeight;\r\n\t\t\t\r\n\t\t\tif (_statsDisplay == null) \r\n\t\t\t{\r\n\t\t\t\t_statsDisplay = new StatsDisplay();\r\n\t\t\t\t_statsDisplay.touchable = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t_stage.addChild(_statsDisplay);\r\n\t\t\t_statsDisplay.scaleX = _statsDisplay.scaleY = scale;\r\n\t\t\t\r\n\t\t\tif (horizontalAlign == Align.LEFT)\t\t\t\t _statsDisplay.x = 0\r\n\t\t\telse if (horizontalAlign == Align.RIGHT)\t\t\t\t _statsDisplay.x = stageWidth - _statsDisplay.width\r\n\t\t\telse if (horizontalAlign == Align.CENTER)\t\t\t\t _statsDisplay.x = (stageWidth - _statsDisplay.width) / 2\r\n\t\t\telse throw new ArgumentError(\"Invalid horizontal alignment: \" + horizontalAlign);\r\n\t\t\t\r\n\t\t\tif (verticalAlign == Align.TOP)\t\t\t\t _statsDisplay.y = 0\r\n\t\t\telse if (verticalAlign == Align.BOTTOM)\t\t\t\t _statsDisplay.y = stageHeight - _statsDisplay.height\r\n\t\t\telse if (verticalAlign == Align.CENTER)\t\t\t\t _statsDisplay.y = (stageHeight - _statsDisplay.height) / 2\r\n\t\t\telse throw new ArgumentError(\"Invalid vertical alignment: \" + verticalAlign);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function onRootCreated():Void\r\n\t{\r\n\t\tshowStatsAt(tempHorizontalAlign, tempVerticalAlign, tempScale);\r\n\t\tremoveEventListener(starling.events.Event.ROOT_CREATED, onRootCreated);\r\n\t};\r\n\t\r\n\t/** The Starling stage object, which is the root of the display tree that is rendered. */\r\n\tprivate function get_stage():Stage {\r\n\t\treturn _stage;\r\n\t}\r\n\t\r\n\t/** The Flash Stage3D object Starling renders into. */\r\n\tprivate function get_stage3D():Stage3D {\r\n\t\treturn _painter.stage3D;\r\n\t}\r\n\t\r\n\t/** The Flash (2D) stage object Starling renders beneath. */\r\n\tprivate function get_nativeStage():openfl.display.Stage {\r\n\t\treturn _nativeStage;\r\n\t}\r\n\t\r\n\t/** The instance of the root class provided in the constructor. Available as soon as \r\n\t *  the event 'ROOT_CREATED' has been dispatched. */\r\n\tprivate function get_root():DisplayObject {\r\n\t\treturn _root;\r\n\t}\r\n\t\r\n\t/** The class that will be instantiated by Starling as the 'root' display object.\r\n\t *  Must be a subclass of 'starling.display.DisplayObject'.\r\n\t *\r\n\t *  <p>If you passed <code>null</code> as first parameter to the Starling constructor,\r\n\t *  you can use this property to set the root class at a later time. As soon as the class\r\n\t *  is instantiated, Starling will dispatch a <code>ROOT_CREATED</code> event.</p>\r\n\t *\r\n\t *  <p>Beware: you cannot change the root class once the root object has been\r\n\t *  instantiated.</p>\r\n\t */\r\n\tprivate function get_rootClass():Class<Dynamic> {\r\n\t\treturn _rootClass;\r\n\t}\r\n\tprivate function set_rootClass(value:Class<Dynamic>):Class<Dynamic>\r\n\t{\r\n\t\tif (_rootClass != null && _root != null) \r\n\t\t\tthrow new Error(\"Root class may not change after root has been instantiated\")\r\n\t\telse if (_rootClass == null) \r\n\t\t{\r\n\t\t\t_rootClass = value;\r\n\t\t\tif (context != null) initializeRoot();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if another Starling instance (or another Stage3D framework altogether)\r\n\t *  uses the same render context. If enabled, Starling will not execute any destructive\r\n\t *  context operations (e.g. not call 'configureBackBuffer', 'clear', 'present', etc.\r\n\t *  This has to be done manually, then. @default false */\r\n\tprivate function get_shareContext():Bool {\r\n\t\treturn _painter.shareContext;\r\n\t}\r\n\tprivate function set_shareContext(value:Bool):Bool {\r\n\t\t_painter.shareContext = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The Context3D profile of the current render context, or <code>null</code>\r\n\t *  if the context has not been created yet. */\r\n\tprivate function get_profile():Context3DProfile {\r\n\t\treturn _painter.profile;\r\n\t}\r\n\t\r\n\t/** Indicates that if the device supports HiDPI screens Starling will attempt to allocate\r\n\t *  a larger back buffer than indicated via the viewPort size. Note that this is used\r\n\t *  on Desktop only; mobile AIR apps still use the \"requestedDisplayResolution\" parameter\r\n\t *  the application descriptor XML. @default false */\r\n\tprivate function get_supportHighResolutions():Bool {\r\n\t\treturn _supportHighResolutions;\r\n\t}\r\n\tprivate function set_supportHighResolutions(value:Bool):Bool\r\n\t{\r\n\t\tif (_supportHighResolutions != value) \r\n\t\t{\r\n\t\t\t_supportHighResolutions = value;\r\n\t\t\tif (contextValid)\t\t\t\t updateViewPort(true);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The TouchProcessor is passed all mouse and touch input and is responsible for\r\n\t *  dispatching TouchEvents to the Starling display tree. If you want to handle these\r\n\t *  types of input manually, pass your own custom subclass to this property. */\r\n\tprivate function get_touchProcessor():TouchProcessor {\r\n\t\treturn _touchProcessor;\r\n\t}\r\n\tprivate function set_touchProcessor(value:TouchProcessor):TouchProcessor\r\n\t{\r\n\t\tif (value != _touchProcessor) \r\n\t\t{\r\n\t\t\t_touchProcessor.dispose();\r\n\t\t\t_touchProcessor = value;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The number of frames that have been rendered since this instance was created. */\r\n\tprivate function get_frameID():Int {\r\n\t\treturn _frameID;\r\n\t}\r\n\t\r\n\t/** Indicates if the Context3D object is currently valid (i.e. it hasn't been lost or\r\n\t *  disposed). */\r\n\tprivate function get_contextValid():Bool {\r\n\t\treturn context != null && context.driverInfo != \"Disposed\";\r\n\t}\r\n\t\r\n\t// static properties\r\n\t\r\n\t/** The currently active Starling instance. */\r\n\tprivate static inline function get_Current():Starling {\r\n\t\treturn sCurrent;\r\n\t}\r\n\t\r\n\t/** All Starling instances. <p>CAUTION: not a copy, but the actual object! Do not modify!</p> */\r\n\tprivate static inline function get_All():Array<Starling> {\r\n\t\treturn sAll;\r\n\t}\r\n\t\r\n\t/** The render context of the currently active Starling instance. */\r\n\tprivate static inline function get_Context():Context3D {\r\n\t\treturn (sCurrent != null) ? sCurrent.context:null;\r\n\t}\r\n\t\r\n\t/** The default juggler of the currently active Starling instance. */\r\n\tprivate static inline function get_Juggler():Juggler {\r\n\t\treturn (sCurrent != null) ? sCurrent._juggler:null;\r\n\t}\r\n\t\r\n\t/** The painter used for all rendering of the currently active Starling instance. */\r\n\tprivate static inline function get_Painter():Painter {\r\n\t\treturn (sCurrent != null) ? sCurrent._painter:null;\r\n\t}\r\n\t\r\n\t/** The contentScaleFactor of the currently active Starling instance. */\r\n\tprivate static inline function get_ContentScaleFactor():Float\r\n\t{\r\n\t\treturn (sCurrent != null) ? sCurrent.contentScaleFactor:1.0;\r\n\t}\r\n\t\r\n\t/** Indicates if multitouch input should be supported. */\r\n\tprivate static inline function get_MultitouchEnabled():Bool\r\n\t{\r\n\t\treturn Multitouch.inputMode == MultitouchInputMode.TOUCH_POINT;\r\n\t}\r\n\t\r\n\tprivate static inline function set_MultitouchEnabled(value:Bool):Bool\r\n\t{\r\n\t\tif (sCurrent != null)\t\t\t throw new IllegalOperationError(\r\n\t\t\"'multitouchEnabled' must be set before Starling instance is created\")\r\n\t\telse \r\n\t\tMultitouch.inputMode = (value) ? MultitouchInputMode.TOUCH_POINT:\r\n\t\t\t\tMultitouchInputMode.NONE;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The number of frames that have been rendered since the current instance was created. */\r\n\tprivate static inline function get_FrameID():Int\r\n\t{\r\n\t\treturn (sCurrent != null) ? sCurrent._frameID:0;\r\n\t}\r\n}","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.core;\r\n\r\n\r\nimport openfl.system.System;\r\nimport starling.utils.FloatUtil;\r\n\r\nimport starling.display.BlendMode;\r\nimport starling.display.Quad;\r\nimport starling.display.Sprite;\r\nimport starling.events.EnterFrameEvent;\r\nimport starling.events.Event;\r\nimport starling.rendering.Painter;\r\nimport starling.text.BitmapFont;\r\nimport starling.text.TextField;\r\nimport starling.text.TextFormat;\r\nimport starling.utils.Align;\r\n\r\n/** A small, lightweight box that displays the current framerate, memory consumption and\r\n *  the number of draw calls per frame. The display is updated automatically once per frame. */\r\nclass StatsDisplay extends Sprite\r\n{\r\n\tpublic var drawCount(get, set):Int;\r\n\tpublic var fps(get, set):Float;\r\n\tpublic var memory(get, set):Float;\r\n\r\n\tprivate var UPDATE_INTERVAL:Float = 0.5;\r\n\t\r\n\tprivate var _background:Quad;\r\n\tprivate var _textField:TextField;\r\n\t\r\n\tprivate var _frameCount:Int = 0;\r\n\tprivate var _totalTime:Float = 0;\r\n\t\r\n\tprivate var _fps:Float = 0;\r\n\tprivate var _memory:Float = 0;\r\n\tprivate var _drawCount:Int = 0;\r\n\t\r\n\t/** Creates a new Statistics Box. */\r\n\t@:allow(starling.core)\r\n\tprivate function new()\r\n\t{\r\n\t\tsuper();\r\n\t\tvar format:TextFormat = new TextFormat(BitmapFont.MINI, BitmapFont.NATIVE_SIZE, \r\n\t\t0xffffff, Align.LEFT, Align.TOP);\r\n\t\t\r\n\t\t_background = new Quad(50, 25, 0x0);\r\n\t\t_textField = new TextField(48, 25, \"\", format);\r\n\t\t_textField.x = 2;\r\n\t\t\r\n\t\taddChild(_background);\r\n\t\taddChild(_textField);\r\n\t\t\r\n\t\tblendMode = BlendMode.NONE;\r\n\t\t\r\n\t\taddEventListener(Event.ADDED_TO_STAGE, onAddedToStage);\r\n\t\taddEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);\r\n\t}\r\n\t\r\n\tprivate function onAddedToStage():Void\r\n\t{\r\n\t\taddEventListener(Event.ENTER_FRAME, onEnterFrame);\r\n\t\t_totalTime = _frameCount = 0;\r\n\t\tupdate();\r\n\t}\r\n\t\r\n\tprivate function onRemovedFromStage():Void\r\n\t{\r\n\t\tremoveEventListener(Event.ENTER_FRAME, onEnterFrame);\r\n\t}\r\n\t\r\n\tprivate function onEnterFrame(event:EnterFrameEvent):Void\r\n\t{\r\n\t\t_totalTime += event.passedTime;\r\n\t\t_frameCount++;\r\n\t\t\r\n\t\tif (_totalTime > UPDATE_INTERVAL) \r\n\t\t{\r\n\t\t\tupdate();\r\n\t\t\t_frameCount = untyped _totalTime = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Updates the displayed values. */\r\n\tpublic function update():Void\r\n\t{\r\n\t\t_fps = _totalTime > (0) ? _frameCount / _totalTime:0;\r\n\t\t_memory = System.totalMemory * 0.000000954;  // 1.0 / (1024*1024) to convert to MB  \r\n\t\t\r\n\t\t\r\n\t\t_textField.text = \"FPS: \" + FloatUtil.toFixed(_fps, _fps < (100) ? 1:0) +\r\n\t\t\t\t\"\\nMEM: \" + FloatUtil.toFixed(_memory, _memory < (100) ? 1:0) +\r\n\t\t\t\t\"\\nDRW: \" + (_totalTime > (0) ? _drawCount - 2:_drawCount);\r\n\t}\r\n\t\r\n\toverride public function render(painter:Painter):Void\r\n\t{\r\n\t\t// By calling \"finishQuadBatch\" here, we can make sure that the stats display is\r\n\t\t// always rendered with exactly two draw calls. That is taken into account when showing\r\n\t\t// the drawCount value (see 'ignore self' comment above)\r\n\t\t\r\n\t\tpainter.finishMeshBatch();\r\n\t\tsuper.render(painter);\r\n\t}\r\n\t\r\n\t/** The number of Stage3D draw calls per second. */\r\n\tprivate function get_drawCount():Int\r\n\t{\r\n\t\treturn _drawCount;\r\n\t}\r\n\t\r\n\tprivate function set_drawCount(value:Int):Int\r\n\t{\r\n\t\t_drawCount = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The current frames per second (updated twice per second). */\r\n\tprivate function get_fps():Float\r\n\t{\r\n\t\treturn _fps;\r\n\t}\r\n\t\r\n\tprivate function set_fps(value:Float):Float\r\n\t{\r\n\t\t_fps = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The currently required system memory in MB. */\r\n\tprivate function get_memory():Float\r\n\t{\r\n\t\treturn _memory;\r\n\t}\r\n\t\r\n\tprivate function set_memory(value:Float):Float\r\n\t{\r\n\t\t_memory = value;\r\n\t\treturn value;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\nimport openfl.errors.ArgumentError;\r\n\r\nimport openfl.display3D.Context3DBlendFactor;\r\n\r\nimport starling.core.Starling;\r\n\r\n/** A class that provides constant values for visual blend mode effects.\r\n *   \r\n *  <p>A blend mode is always defined by two 'Context3DBlendFactor' values. A blend factor \r\n *  represents a particular four-value vector that is multiplied with the source or destination\r\n *  color in the blending formula. The blending formula is:</p>\r\n * \r\n *  <pre>result = source × sourceFactor + destination × destinationFactor</pre>\r\n * \r\n *  <p>In the formula, the source color is the output color of the pixel shader program. The \r\n *  destination color is the color that currently exists in the color buffer, as set by \r\n *  previous clear and draw operations.</p>\r\n *  \r\n *  <p>You can add your own blend modes via <code>BlendMode.register</code>.\r\n *  To get the math right, remember that all colors in Starling use premultiplied alpha (PMA),\r\n *  which means that their RGB values were multiplied with the alpha value.</p>\r\n *\r\n *  @see openfl.display3D.Context3DBlendFactor\r\n */\r\nclass BlendMode\r\n{\r\n\tpublic var sourceFactor(get, never):Context3DBlendFactor;\r\n\tpublic var destinationFactor(get, never):Context3DBlendFactor;\r\n\tpublic var name(get, never):String;\r\n\r\n\tprivate var _name:String;\r\n\tprivate var _sourceFactor:Context3DBlendFactor;\r\n\tprivate var _destinationFactor:Context3DBlendFactor;\r\n\t\r\n\tprivate static var sBlendModes:Map<String, BlendMode>;\r\n\t\r\n\t/** Creates a new BlendMode instance. Don't call this method directly; instead,\r\n\t *  register a new blend mode using <code>BlendMode.register</code>. */\r\n\tpublic function new(name:String, sourceFactor:Context3DBlendFactor, destinationFactor:Context3DBlendFactor)\r\n\t{\r\n\t\t_name = name;\r\n\t\t_sourceFactor = sourceFactor;\r\n\t\t_destinationFactor = destinationFactor;\r\n\t}\r\n\t\r\n\t/** Inherits the blend mode from this display object's parent. */\r\n\tpublic static var AUTO:String = \"auto\";\r\n\t\r\n\t/** Deactivates blending, i.e. disabling any transparency. */\r\n\tpublic static var NONE:String = \"none\";\r\n\t\r\n\t/** The display object appears in front of the background. */\r\n\tpublic static var NORMAL:String = \"normal\";\r\n\t\r\n\t/** Adds the values of the colors of the display object to the colors of its background. */\r\n\tpublic static var ADD:String = \"add\";\r\n\t\r\n\t/** Multiplies the values of the display object colors with the the background color. */\r\n\tpublic static var MULTIPLY:String = \"multiply\";\r\n\t\r\n\t/** Multiplies the complement (inverse) of the display object color with the complement of \r\n\t  * the background color, resulting in a bleaching effect. */\r\n\tpublic static var SCREEN:String = \"screen\";\r\n\t\r\n\t/** Erases the background when drawn on a RenderTexture. */\r\n\tpublic static var ERASE:String = \"erase\";\r\n\t\r\n\t/** When used on a RenderTexture, the drawn object will act as a mask for the current\r\n\t *  content, i.e. the source alpha overwrites the destination alpha. */\r\n\tpublic static var MASK:String = \"mask\";\r\n\t\r\n\t/** Draws under/below existing objects; useful especially on RenderTextures. */\r\n\tpublic static var BELOW:String = \"below\";\r\n\t\r\n\t// static access methods\r\n\t\r\n\t/** Returns the blend mode with the given name.\r\n\t *  Throws an ArgumentError if the mode does not exist. */\r\n\tpublic static function get(modeName:String):BlendMode\r\n\t{\r\n\t\tif (sBlendModes == null) registerDefaults();\r\n\t\tif (sBlendModes.exists(modeName)) return sBlendModes.get(modeName)\r\n\t\telse throw new ArgumentError(\"Blend mode not found: \" + modeName);\r\n\t}\r\n\t\r\n\t/** Registers a blending mode under a certain name. */\r\n\tpublic static function register(name:String, srcFactor:Context3DBlendFactor, dstFactor:Context3DBlendFactor):BlendMode\r\n\t{\r\n\t\tif (sBlendModes == null) registerDefaults();\r\n\t\tvar blendMode:BlendMode = new BlendMode(name, srcFactor, dstFactor);\r\n\t\tsBlendModes.set(name, blendMode);\r\n\t\treturn blendMode;\r\n\t}\r\n\t\r\n\tprivate static function registerDefaults():Void\r\n\t{\r\n\t\tif (sBlendModes != null) return;\r\n\t\t\r\n\t\tsBlendModes = new Map<String, BlendMode>();\r\n\t\tregister(\"none\", Context3DBlendFactor.ONE, Context3DBlendFactor.ZERO);\r\n\t\tregister(\"normal\", Context3DBlendFactor.ONE, Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\r\n\t\tregister(\"add\", Context3DBlendFactor.ONE, Context3DBlendFactor.ONE);\r\n\t\tregister(\"multiply\", Context3DBlendFactor.DESTINATION_COLOR, Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\r\n\t\tregister(\"screen\", Context3DBlendFactor.ONE, Context3DBlendFactor.ONE_MINUS_SOURCE_COLOR);\r\n\t\tregister(\"erase\", Context3DBlendFactor.ZERO, Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA);\r\n\t\tregister(\"mask\", Context3DBlendFactor.ZERO, Context3DBlendFactor.SOURCE_ALPHA);\r\n\t\tregister(\"below\", Context3DBlendFactor.ONE_MINUS_DESTINATION_ALPHA, Context3DBlendFactor.DESTINATION_ALPHA);\r\n\t}\r\n\t\r\n\t// instance methods / properties\r\n\t\r\n\t/** Sets the appropriate blend factors for source and destination on the current context. */\r\n\tpublic function activate():Void\r\n\t{\r\n\t\tStarling.Context.setBlendFactors(_sourceFactor, _destinationFactor);\r\n\t}\r\n\t\r\n\t/** Returns the name of the blend mode. */\r\n\tpublic function toString():String {\r\n\t\treturn _name;\r\n\t}\r\n\t\r\n\t/** The source blend factor of this blend mode. */\r\n\tprivate function get_sourceFactor():Context3DBlendFactor {\r\n\t\treturn _sourceFactor;\r\n\t}\r\n\t\r\n\t/** The destination blend factor of this blend mode. */\r\n\tprivate function get_destinationFactor():Context3DBlendFactor {\r\n\t\treturn _destinationFactor;\r\n\t}\r\n\t\r\n\t/** Returns the name of the blend mode. */\r\n\tprivate function get_name():String {\r\n\t\treturn _name;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.ui.Mouse;\r\n\r\n#if flash\r\nimport flash.ui.MouseCursor;\r\n#end\r\n\r\nimport starling.display.DisplayObjectContainer;\r\nimport starling.display.Image;\r\nimport starling.display.Sprite;\r\nimport starling.events.Event;\r\nimport starling.events.Touch;\r\nimport starling.events.TouchEvent;\r\nimport starling.events.TouchPhase;\r\nimport starling.text.TextField;\r\nimport starling.text.TextFormat;\r\nimport starling.textures.Texture;\r\nimport starling.utils.RectangleUtil;\r\n\r\n/** Dispatched when the user triggers the button. Bubbles. */\r\n@:meta(Event(name=\"triggered\",type=\"starling.events.Event\"))\r\n\r\n\r\n/** A simple button composed of an image and, optionally, text.\r\n *  \r\n *  <p>You can use different textures for various states of the button. If you're providing\r\n *  only an up state, the button is simply scaled a little when it is touched.</p>\r\n *\r\n *  <p>In addition, you can overlay text on the button. To customize the text, you can use\r\n *  properties equivalent to those of the TextField class. Move the text to a certain position\r\n *  by updating the <code>textBounds</code> property.</p>\r\n *  \r\n *  <p>To react on touches on a button, there is special <code>Event.TRIGGERED</code> event.\r\n *  Use this event instead of normal touch events. That way, users can cancel button\r\n *  activation by moving the mouse/finger away from the button before releasing.</p>\r\n */\r\nclass Button extends DisplayObjectContainer\r\n{\r\n\tpublic var state(get, set):String;\r\n\tpublic var scaleWhenDown(get, set):Float;\r\n\tpublic var scaleWhenOver(get, set):Float;\r\n\tpublic var alphaWhenDown(get, set):Float;\r\n\tpublic var alphaWhenDisabled(get, set):Float;\r\n\tpublic var enabled(get, set):Bool;\r\n\tpublic var text(get, set):String;\r\n\tpublic var textFormat(get, set):TextFormat;\r\n\tpublic var upState(get, set):Texture;\r\n\tpublic var downState(get, set):Texture;\r\n\tpublic var overState(get, set):Texture;\r\n\tpublic var disabledState(get, set):Texture;\r\n\tpublic var textBounds(get, set):Rectangle;\r\n\tpublic var color(get, set):Int;\r\n\tpublic var textureSmoothing(get, set):String;\r\n\tpublic var overlay(get, never):Sprite;\r\n\tpublic var scale9Grid(get, set):Rectangle;\r\n\r\n\tprivate static var MAX_DRAG_DIST:Float = 50;\r\n\t\r\n\tprivate var _upState:Texture;\r\n\tprivate var _downState:Texture;\r\n\tprivate var _overState:Texture;\r\n\tprivate var _disabledState:Texture;\r\n\t\r\n\tprivate var _contents:Sprite;\r\n\tprivate var _body:Image;\r\n\tprivate var _textField:TextField;\r\n\tprivate var _textBounds:Rectangle;\r\n\tprivate var _overlay:Sprite;\r\n\t\r\n\tprivate var _scaleWhenDown:Float;\r\n\tprivate var _scaleWhenOver:Float;\r\n\tprivate var _alphaWhenDown:Float;\r\n\tprivate var _alphaWhenDisabled:Float;\r\n\tprivate var _enabled:Bool;\r\n\tprivate var _state:String;\r\n\tprivate var _triggerBounds:Rectangle;\r\n\t\r\n\t/** Creates a button with a set of state-textures and (optionally) some text.\r\n\t *  Any state that is left 'null' will display the up-state texture. Beware that all\r\n\t *  state textures should have the same dimensions. */\r\n\tpublic function new(upState:Texture, text:String = \"\", downState:Texture = null,\r\n\t\t\toverState:Texture = null, disabledState:Texture = null)\r\n\t{\r\n\t\tsuper();\r\n\t\tif (upState == null) throw new ArgumentError(\"Texture 'upState' cannot be null\");\r\n\t\t\r\n\t\t_upState = upState;\r\n\t\t_downState = downState;\r\n\t\t_overState = overState;\r\n\t\t_disabledState = disabledState;\r\n\t\t\r\n\t\t_state = ButtonState.UP;\r\n\t\t_body = new Image(upState);\r\n\t\t_scaleWhenDown = (downState != null) ? 1.0:0.9;\r\n\t\t_scaleWhenOver = _alphaWhenDown = 1.0;\r\n\t\t_alphaWhenDisabled = (disabledState != null) ? 1.0:0.5;\r\n\t\t_enabled = true;\r\n\t\t_useHandCursor = true;\r\n\t\t_textBounds = new Rectangle(0, 0, _body.width, _body.height);\r\n\t\t_triggerBounds = new Rectangle();\r\n\t\t\r\n\t\t_contents = new Sprite();\r\n\t\t_contents.addChild(_body);\r\n\t\taddChild(_contents);\r\n\t\taddEventListener(TouchEvent.TOUCH, onTouch);\r\n\t\t\r\n\t\tthis.touchGroup = true;\r\n\t\tthis.text = text;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\t// text field might be disconnected from parent, so we have to dispose it manually\r\n\t\tif (_textField != null) \r\n\t\t\t_textField.dispose();\r\n\t\t\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t/** Readjusts the dimensions of the button according to its current state texture.\r\n\t *  Call this method to synchronize button and texture size after assigning a texture\r\n\t *  with a different size. */\r\n\tpublic function readjustSize():Void\r\n\t{\r\n\t\tvar prevWidth:Float = _body.width;\r\n\t\tvar prevHeight:Float = _body.height;\r\n\t\t\r\n\t\t_body.readjustSize();\r\n\t\t\r\n\t\tvar scaleX:Float = _body.width / prevWidth;\r\n\t\tvar scaleY:Float = _body.height / prevHeight;\r\n\t\t\r\n\t\t_textBounds.x *= scaleX;\r\n\t\t_textBounds.y *= scaleY;\r\n\t\t_textBounds.width *= scaleX;\r\n\t\t_textBounds.height *= scaleY;\r\n\t\t\r\n\t\tif (_textField != null) createTextField();\r\n\t}\r\n\t\r\n\tprivate function createTextField():Void\r\n\t{\r\n\t\tif (_textField == null) \r\n\t\t{\r\n\t\t\t_textField = new TextField(untyped _textBounds.width, untyped _textBounds.height);\r\n\t\t\t_textField.touchable = false;\r\n\t\t\t_textField.autoScale = true;\r\n\t\t\t_textField.batchable = true;\r\n\t\t}\r\n\t\t\r\n\t\t_textField.width = _textBounds.width;\r\n\t\t_textField.height = _textBounds.height;\r\n\t\t_textField.x = _textBounds.x;\r\n\t\t_textField.y = _textBounds.y;\r\n\t}\r\n\t\r\n\toverride private function onTouch(event:TouchEvent):Void\r\n\t{\r\n\t\t#if flash\r\n\t\tMouse.cursor = ((_useHandCursor && _enabled && event.interactsWith(this))) ? MouseCursor.BUTTON:MouseCursor.AUTO;\r\n\t\t#end\r\n\t\t\r\n\t\tvar touch:Touch = event.getTouch(this);\r\n\t\tvar isWithinBounds:Bool;\r\n\t\t\r\n\t\tif (!_enabled) \r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (touch == null) \r\n\t\t{\r\n\t\t\tstate = ButtonState.UP;\r\n\t\t}\r\n\t\telse if (touch.phase == TouchPhase.HOVER) \r\n\t\t{\r\n\t\t\tstate = ButtonState.OVER;\r\n\t\t}\r\n\t\telse if (touch.phase == TouchPhase.BEGAN && _state != ButtonState.DOWN) \r\n\t\t{\r\n\t\t\t_triggerBounds = getBounds(stage, _triggerBounds);\r\n\t\t\t_triggerBounds.inflate(MAX_DRAG_DIST, MAX_DRAG_DIST);\r\n\t\t\t\r\n\t\t\tstate = ButtonState.DOWN;\r\n\t\t}\r\n\t\telse if (touch.phase == TouchPhase.MOVED) \r\n\t\t{\r\n\t\t\tisWithinBounds = _triggerBounds.contains(touch.globalX, touch.globalY);\r\n\t\t\t\r\n\t\t\tif (_state == ButtonState.DOWN && !isWithinBounds) \r\n\t\t\t{\r\n\t\t\t\t// reset button when finger is moved too far away ...\r\n\t\t\t\tstate = ButtonState.UP;\r\n\t\t\t}\r\n\t\t\telse if (_state == ButtonState.UP && isWithinBounds) \r\n\t\t\t{\r\n\t\t\t\t// ... and reactivate when the finger moves back into the bounds.\r\n\t\t\t\tstate = ButtonState.DOWN;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (touch.phase == TouchPhase.ENDED && _state == ButtonState.DOWN) \r\n\t\t{\r\n\t\t\tstate = ButtonState.UP;\r\n\t\t\tif (!touch.cancelled)\t\t\t\t dispatchEventWith(Event.TRIGGERED, true);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** The current state of the button. The corresponding strings are found\r\n\t *  in the ButtonState class. */\r\n\tprivate function get_state():String\r\n\t{\r\n\t\treturn _state;\r\n\t}\r\n\t\r\n\tprivate function set_state(value:String):String\r\n\t{\r\n\t\t_state = value;\r\n\t\t_contents.x = _contents.y = 0;\r\n\t\t_contents.scaleX = _contents.scaleY = _contents.alpha = 1.0;\r\n\t\t\r\n\t\tswitch (_state)\r\n\t\t{\r\n\t\t\tcase ButtonState.DOWN:\r\n\t\t\t\tsetStateTexture(_downState);\r\n\t\t\t\t_contents.alpha = _alphaWhenDown;\r\n\t\t\t\t_contents.scaleX = _contents.scaleY = _scaleWhenDown;\r\n\t\t\t\t_contents.x = (1.0 - _scaleWhenDown) / 2.0 * _body.width;\r\n\t\t\t\t_contents.y = (1.0 - _scaleWhenDown) / 2.0 * _body.height;\r\n\t\t\tcase ButtonState.UP:\r\n\t\t\t\tsetStateTexture(_upState);\r\n\t\t\tcase ButtonState.OVER:\r\n\t\t\t\tsetStateTexture(_overState);\r\n\t\t\t\t_contents.scaleX = _contents.scaleY = _scaleWhenOver;\r\n\t\t\t\t_contents.x = (1.0 - _scaleWhenOver) / 2.0 * _body.width;\r\n\t\t\t\t_contents.y = (1.0 - _scaleWhenOver) / 2.0 * _body.height;\r\n\t\t\tcase ButtonState.DISABLED:\r\n\t\t\t\tsetStateTexture(_disabledState);\r\n\t\t\t\t_contents.alpha = _alphaWhenDisabled;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new ArgumentError(\"Invalid button state: \" + _state);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function setStateTexture(texture:Texture):Void\r\n\t{\r\n\t\t_body.texture = (texture != null) ? texture:_upState;\r\n\t}\r\n\t\r\n\t/** The scale factor of the button on touch. Per default, a button without a down state\r\n\t *  texture will be made slightly smaller, while a button with a down state texture\r\n\t *  remains unscaled. */\r\n\tprivate function get_scaleWhenDown():Float\r\n\t{\r\n\t\treturn _scaleWhenDown;\r\n\t}\r\n\t\r\n\tprivate function set_scaleWhenDown(value:Float):Float\r\n\t{\r\n\t\t_scaleWhenDown = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The scale factor of the button while the mouse cursor hovers over it. @default 1.0 */\r\n\tprivate function get_scaleWhenOver():Float\r\n\t{\r\n\t\treturn _scaleWhenOver;\r\n\t}\r\n\t\r\n\tprivate function set_scaleWhenOver(value:Float):Float\r\n\t{\r\n\t\t_scaleWhenOver = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The alpha value of the button on touch. @default 1.0 */\r\n\tprivate function get_alphaWhenDown():Float\r\n\t{\r\n\t\treturn _alphaWhenDown;\r\n\t}\r\n\t\r\n\tprivate function set_alphaWhenDown(value:Float):Float\r\n\t{\r\n\t\t_alphaWhenDown = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The alpha value of the button when it is disabled. @default 0.5 */\r\n\tprivate function get_alphaWhenDisabled():Float\r\n\t{\r\n\t\treturn _alphaWhenDisabled;\r\n\t}\r\n\t\r\n\tprivate function set_alphaWhenDisabled(value:Float):Float\r\n\t{\r\n\t\t_alphaWhenDisabled = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if the button can be triggered. */\r\n\tprivate function get_enabled():Bool\r\n\t{\r\n\t\treturn _enabled;\r\n\t}\r\n\t\r\n\tprivate function set_enabled(value:Bool):Bool\r\n\t{\r\n\t\tif (_enabled != value) \r\n\t\t{\r\n\t\t\t_enabled = value;\r\n\t\t\tstate = (value) ? ButtonState.UP:ButtonState.DISABLED;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The text that is displayed on the button. */\r\n\tprivate function get_text():String\r\n\t{\r\n\t\treturn (_textField != null) ? _textField.text:\"\";\r\n\t}\r\n\t\r\n\tprivate function set_text(value:String):String\r\n\t{\r\n\t\tif (value.length == 0) \r\n\t\t{\r\n\t\t\tif (_textField != null) \r\n\t\t\t{\r\n\t\t\t\t_textField.text = value;\r\n\t\t\t\t_textField.removeFromParent();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tcreateTextField();\r\n\t\t\t_textField.text = value;\r\n\t\t\t\r\n\t\t\tif (_textField.parent == null) \r\n\t\t\t\t_contents.addChild(_textField);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The format of the button's TextField. */\r\n\tprivate function get_textFormat():TextFormat\r\n\t{\r\n\t\tif (_textField == null) createTextField();\r\n\t\treturn _textField.format;\r\n\t}\r\n\t\r\n\tprivate function set_textFormat(value:TextFormat):TextFormat\r\n\t{\r\n\t\tif (_textField == null)\tcreateTextField();\r\n\t\t_textField.format = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The texture that is displayed when the button is not being touched. */\r\n\tprivate function get_upState():Texture\r\n\t{\r\n\t\treturn _upState;\r\n\t}\r\n\t\r\n\tprivate function set_upState(value:Texture):Texture\r\n\t{\r\n\t\tif (value == null) \r\n\t\t\tthrow new ArgumentError(\"Texture 'upState' cannot be null\");\r\n\t\t\r\n\t\tif (_upState != value) \r\n\t\t{\r\n\t\t\t_upState = value;\r\n\t\t\tif (_state == ButtonState.UP ||\r\n\t\t\t\t(_state == ButtonState.DISABLED && _disabledState == null) ||\r\n\t\t\t\t(_state == ButtonState.DOWN && _downState == null) ||\r\n\t\t\t\t(_state == ButtonState.OVER && _overState == null)) \r\n\t\t\t{\r\n\t\t\t\tsetStateTexture(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The texture that is displayed while the button is touched. */\r\n\tprivate function get_downState():Texture\r\n\t{\r\n\t\treturn _downState;\r\n\t}\r\n\t\r\n\tprivate function set_downState(value:Texture):Texture\r\n\t{\r\n\t\tif (_downState != value) \r\n\t\t{\r\n\t\t\t_downState = value;\r\n\t\t\tif (_state == ButtonState.DOWN) setStateTexture(value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The texture that is displayed while mouse hovers over the button. */\r\n\tprivate function get_overState():Texture\r\n\t{\r\n\t\treturn _overState;\r\n\t}\r\n\t\r\n\tprivate function set_overState(value:Texture):Texture\r\n\t{\r\n\t\tif (_overState != value) \r\n\t\t{\r\n\t\t\t_overState = value;\r\n\t\t\tif (_state == ButtonState.OVER) setStateTexture(value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The texture that is displayed when the button is disabled. */\r\n\tprivate function get_disabledState():Texture\r\n\t{\r\n\t\treturn _disabledState;\r\n\t}\r\n\t\r\n\tprivate function set_disabledState(value:Texture):Texture\r\n\t{\r\n\t\tif (_disabledState != value) \r\n\t\t{\r\n\t\t\t_disabledState = value;\r\n\t\t\tif (_state == ButtonState.DISABLED) setStateTexture(value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The bounds of the button's TextField. Allows moving the text to a custom position.\r\n\t *  CAUTION: not a copy, but the actual object! Text will only update on re-assignment.\r\n\t */\r\n\tprivate function get_textBounds():Rectangle\r\n\t{\r\n\t\treturn _textBounds;\r\n\t}\r\n\t\r\n\tprivate function set_textBounds(value:Rectangle):Rectangle\r\n\t{\r\n\t\t_textBounds.copyFrom(value);\r\n\t\tcreateTextField();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The color of the button's state image. Just like every image object, each pixel's\r\n\t *  color is multiplied with this value. @default white */\r\n\tprivate function get_color():Int\r\n\t{\r\n\t\treturn _body.color;\r\n\t}\r\n\t\r\n\tprivate function set_color(value:Int):Int\r\n\t{\r\n\t\t_body.color = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The smoothing type used for the button's state image. */\r\n\tprivate function get_textureSmoothing():String\r\n\t{\r\n\t\treturn _body.textureSmoothing;\r\n\t}\r\n\t\r\n\tprivate function set_textureSmoothing(value:String):String\r\n\t{\r\n\t\t_body.textureSmoothing = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The overlay sprite is displayed on top of the button contents. It scales with the\r\n\t *  button when pressed. Use it to add additional objects to the button (e.g. an icon). */\r\n\tprivate function get_overlay():Sprite\r\n\t{\r\n\t\tif (_overlay == null) \r\n\t\t\t_overlay = new Sprite();\r\n\t\t\r\n\t\t_contents.addChild(_overlay);  // make sure it's always on top  \r\n\t\treturn _overlay;\r\n\t}\r\n\t\r\n\t/** Indicates if the mouse cursor should transform into a hand while it's over the button. \r\n\t *  @default true */\r\n\toverride private function get_useHandCursor():Bool\r\n\t{\r\n\t\treturn _useHandCursor;\r\n\t}\r\n\t\r\n\toverride private function set_useHandCursor(value:Bool):Bool\r\n\t{\r\n\t\t_useHandCursor = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_width(value:Float):Float\r\n\t{\r\n\t\tvar scaleX:Float = value / _body.width;\r\n\t\t\r\n\t\t_body.width = value;\r\n\t\t_textBounds.x *= scaleX;\r\n\t\t_textBounds.width *= scaleX;\r\n\t\t\r\n\t\tif (_textField != null) _textField.width = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\toverride private function set_height(value:Float):Float\r\n\t{\r\n\t\tvar scaleY:Float = value / _body.height;\r\n\t\t\r\n\t\t_body.height = value;\r\n\t\t_textBounds.y *= scaleY;\r\n\t\t_textBounds.height *= scaleY;\r\n\t\t\r\n\t\tif (_textField != null) _textField.height = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The current scaling grid used for the button's state image. Use this property to create\r\n\t *  buttons that resize in a smart way, i.e. with the four corners keeping the same size\r\n\t *  and only stretching the center area.\r\n\t *\r\n\t *  @see Image#scale9Grid\r\n\t *  @default null\r\n\t */\r\n\tprivate function get_scale9Grid():Rectangle\r\n\t{\r\n\t\treturn _body.scale9Grid;\r\n\t}\r\n\t\r\n\tprivate function set_scale9Grid(value:Rectangle):Rectangle{_body.scale9Grid = value;\r\n\t\treturn value;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** A class that provides constant values for the states of the Button class. */\r\nclass ButtonState\r\n{\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** The button's default state. */\r\n\tpublic static var UP:String = \"up\";\r\n\t\r\n\t/** The button is pressed. */\r\n\tpublic static var DOWN:String = \"down\";\r\n\t\r\n\t/** The mouse hovers over the button. */\r\n\tpublic static var OVER:String = \"over\";\r\n\t\r\n\t/** The button was disabled altogether. */\r\n\tpublic static var DISABLED:String = \"disabled\";\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\nimport starling.display.DisplayObject;\r\nimport starling.display.DisplayObjectContainer;\r\nimport starling.display.Mesh;\r\n\r\nimport openfl.geom.Point;\r\n\r\nimport starling.geom.Polygon;\r\nimport starling.rendering.IndexData;\r\nimport starling.rendering.VertexData;\r\n\r\n/** A display object supporting basic vector drawing functionality. In its current state,\r\n *  the main use of this class is to provide a range of forms that can be used as masks.\r\n */\r\nclass Canvas extends DisplayObjectContainer\r\n{\r\n\tprivate var _polygons:Array<Polygon>;\r\n\tprivate var _fillColor:Int;\r\n\tprivate var _fillAlpha:Float;\r\n\t\r\n\t/** Creates a new (empty) Canvas. Call one or more of the 'draw' methods to add content. */\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t_polygons = [];\r\n\t\t_fillColor = 0xffffff;\r\n\t\t_fillAlpha = 1.0;\r\n\t\ttouchGroup = true;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\t_polygons.splice(0, _polygons.length);\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function hitTest(localPoint:Point):DisplayObject\r\n\t{\r\n\t\tif (!visible || !touchable || !hitTestMask(localPoint)) return null;\r\n\t\t\r\n\t\t// we could also use the standard hit test implementation, but the polygon class can\r\n\t\t// do that much more efficiently (it contains custom implementations for circles, etc).\t\r\n\t\t\r\n\t\tvar len:Int = _polygons.length;\r\n\t\tfor (i in 0...len) { \r\n\t\t\tif (_polygons[i].containsPoint(localPoint)) return this;\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/** Draws a circle. */\r\n\tpublic function drawCircle(x:Float, y:Float, radius:Float):Void\r\n\t{\r\n\t\tappendPolygon(Polygon.createCircle(x, y, radius));\r\n\t}\r\n\t\r\n\t/** Draws an ellipse. */\r\n\tpublic function drawEllipse(x:Float, y:Float, width:Float, height:Float):Void\r\n\t{\r\n\t\tvar radiusX:Float = width / 2.0;\r\n\t\tvar radiusY:Float = height / 2.0;\r\n\t\t\r\n\t\tappendPolygon(Polygon.createEllipse(x + radiusX, y + radiusY, radiusX, radiusY));\r\n\t}\r\n\t\r\n\t/** Draws a rectangle. */\r\n\tpublic function drawRectangle(x:Float, y:Float, width:Float, height:Float):Void\r\n\t{\r\n\t\tappendPolygon(Polygon.createRectangle(x, y, width, height));\r\n\t}\r\n\t\r\n\t/** Draws an arbitrary polygon. */\r\n\tpublic function drawPolygon(polygon:Polygon):Void\r\n\t{\r\n\t\tappendPolygon(polygon);\r\n\t}\r\n\t\r\n\t/** Specifies a simple one-color fill that subsequent calls to drawing methods\r\n\t *  (such as <code>drawCircle()</code>) will use. */\r\n\tpublic function beginFill(color:Int = 0xffffff, alpha:Float = 1.0):Void\r\n\t{\r\n\t\t_fillColor = color;\r\n\t\t_fillAlpha = alpha;\r\n\t}\r\n\t\r\n\t/** Resets the color to 'white' and alpha to '1'. */\r\n\tpublic function endFill():Void\r\n\t{\r\n\t\t_fillColor = 0xffffff;\r\n\t\t_fillAlpha = 1.0;\r\n\t}\r\n\t\r\n\t/** Removes all existing vertices. */\r\n\tpublic function clear():Void\r\n\t{\r\n\t\tremoveChildren(0, -1, true);\r\n\t\t_polygons.splice(0, _polygons.length);\r\n\t}\r\n\t\r\n\tprivate function appendPolygon(polygon:Polygon):Void\r\n\t{\r\n\t\tvar numVertices:Int = polygon.numVertices;\r\n\t\tvar vertexFormat:String = \"position:float2, color:bytes4\";\r\n\t\tvar vertexData:VertexData = new VertexData(vertexFormat, numVertices);\r\n\t\tvar indexData:IndexData = new IndexData(polygon.numTriangles * 3);\r\n\t\t\r\n\t\tpolygon.triangulate(indexData);\r\n\t\tpolygon.copyToVertexData(vertexData);\r\n\t\t\r\n\t\tvertexData.colorize(\"color\", _fillColor, _fillAlpha);\r\n\t\t\r\n\t\taddChild(new Mesh(vertexData, indexData));\r\n\t\t_polygons[_polygons.length] = polygon;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.rendering;\r\n\r\nimport openfl.display3D.Context3DVertexBufferFormat;\r\nimport openfl.errors.ArgumentError;\r\nimport starling.rendering.VertexDataAttribute;\r\n\r\nimport openfl.display3D.VertexBuffer3D;\r\n\r\nimport starling.core.Starling;\r\nimport starling.utils.StringUtil;\r\n\r\n/** Describes the memory layout of VertexData instances, as used for every single vertex.\r\n *\r\n *  <p>The format is set up via a simple String. Here is an example:</p>\r\n *\r\n *  <listing>\r\n *  format = VertexDataFormat.fromString(\"position:float2, color:bytes4\");</listing>\r\n *\r\n *  <p>This String describes two attributes: \"position\" and \"color\". The keywords after\r\n *  the colons depict the format and size of the data that each attribute uses; in this\r\n *  case, we store two floats for the position (taking up the x- and y-coordinates) and four\r\n *  bytes for the color. (The available formats are the same as those defined in the\r\n *  <code>Context3DVertexBufferFormat</code> class:\r\n *  <code>float1, float2, float3, float4, bytes4</code>.)</p>\r\n *\r\n *  <p>You cannot create a VertexData instance with its constructor; instead, you must use the\r\n *  static <code>fromString</code>-method. The reason for this behavior: the class maintains\r\n *  a cache, and a call to <code>fromString</code> will return an existing instance if an\r\n *  equivalent format has already been created in the past. That saves processing time and\r\n *  memory.</p>\r\n *\r\n *  <p>VertexDataFormat instances are immutable, i.e. they are solely defined by their format\r\n *  string and cannot be changed later.</p>\r\n *\r\n *  @see VertexData\r\n */\r\nclass VertexDataFormat\r\n{\r\n\t@:allow(starling.rendering)\r\n\tprivate var attributes(get, never):Array<VertexDataAttribute>;\r\n\t\r\n\tpublic var formatString(get, never):String;\r\n\tpublic var vertexSizeInBytes(get, never):Int;\r\n\tpublic var vertexSizeIn32Bits(get, never):Int;\r\n\tpublic var numAttributes(get, never):Int;\r\n\r\n\tprivate var _format:String;\r\n\tprivate var _vertexSize:Int = 0;\r\n\tprivate var _attributes:Array<VertexDataAttribute>;\r\n\t\r\n\t// format cache\r\n\tprivate static var sFormats = new Map<String, VertexDataFormat>();\r\n\t\r\n\t/** Don't use the constructor, but call <code>VertexDataFormat.fromString</code> instead.\r\n\t *  This allows for efficient format caching. */\r\n\tpublic function new()\r\n\t{\r\n\t\t_attributes = new Array<VertexDataAttribute>();\r\n\t}\r\n\t\r\n\t/** Creates a new VertexDataFormat instance from the given String, or returns one from\r\n\t *  the cache (if an equivalent String has already been used before).\r\n\t *\r\n\t *  @param format\r\n\t *\r\n\t *  Describes the attributes of each vertex, consisting of a comma-separated\r\n\t *  list of attribute names and their format, e.g.:\r\n\t *\r\n\t *  <pre>\"position:float2, texCoords:float2, color:bytes4\"</pre>\r\n\t *\r\n\t *  <p>This set of attributes will be allocated for each vertex, and they will be\r\n\t *  stored in exactly the given order.</p>\r\n\t *\r\n\t *  <ul>\r\n\t *\t<li>Names are used to access the specific attributes of a vertex. They are\r\n\t *\t\tcompletely arbitrary.</li>\r\n\t *\t<li>The available formats can be found in the <code>Context3DVertexBufferFormat</code>\r\n\t *\t\tclass in the <code>openfl.display3D</code> package.</li>\r\n\t *\t<li>Both names and format strings are case-sensitive.</li>\r\n\t *\t<li>Always use <code>bytes4</code> for color data that you want to access with the\r\n\t *\t\trespective methods.</li>\r\n\t *\t<li>Furthermore, the attribute names of colors should include the string \"color\"\r\n\t *\t\t(or the uppercase variant). If that's the case, the \"alpha\" channel of the color\r\n\t *\t\twill automatically be initialized with \"1.0\" when the VertexData object is\r\n\t *\t\tcreated or resized.</li>\r\n\t *  </ul>\r\n\t */\r\n\tpublic static function fromString(format:String):VertexDataFormat\r\n\t{\r\n\t\tif (sFormats.exists(format)) return sFormats.get(format)\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar instance:VertexDataFormat = new VertexDataFormat();\r\n\t\t\tinstance.parseFormat(format);\r\n\t\t\t\r\n\t\t\tvar normalizedFormat:String = instance._format;\r\n\t\t\t\r\n\t\t\tif (sFormats.exists(normalizedFormat)) \r\n\t\t\t\tinstance = sFormats.get(normalizedFormat);\r\n\t\t\t\r\n\t\t\tsFormats.set(format, instance);\r\n\t\t\tsFormats.set(normalizedFormat, instance);\r\n\t\t\t\r\n\t\t\treturn instance;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// query methods\r\n\t\r\n\t/** Returns the size of a certain vertex attribute in bytes. */\r\n\tpublic function getSizeInBytes(attrName:String):Int\r\n\t{\r\n\t\treturn getAttribute(attrName).size;\r\n\t}\r\n\t\r\n\t/** Returns the size of a certain vertex attribute in 32 bit units. */\r\n\tpublic function getSizeIn32Bits(attrName:String):Int\r\n\t{\r\n\t\treturn untyped getAttribute(attrName).size / 4;\r\n\t}\r\n\t\r\n\t/** Returns the offset (in bytes) of an attribute within a vertex. */\r\n\tpublic function getOffsetInBytes(attrName:String):Int\r\n\t{\r\n\t\treturn getAttribute(attrName).offset;\r\n\t}\r\n\t\r\n\t/** Returns the offset (in 32 bit units) of an attribute within a vertex. */\r\n\tpublic function getOffsetIn32Bits(attrName:String):Int\r\n\t{\r\n\t\treturn untyped getAttribute(attrName).offset / 4;\r\n\t}\r\n\t\r\n\t/** Returns the format of a certain vertex attribute, identified by its name.\r\n\t *  Typical values: <code>float1, float2, float3, float4, bytes4</code>. */\r\n\tpublic function getFormat(attrName:String):Context3DVertexBufferFormat\r\n\t{\r\n\t\treturn getAttribute(attrName).format;\r\n\t}\r\n\t\r\n\t/** Returns the name of the attribute at the given position within the vertex format. */\r\n\tpublic function getName(attrIndex:Int):String\r\n\t{\r\n\t\treturn _attributes[attrIndex].name;\r\n\t}\r\n\t\r\n\t/** Indicates if the format contains an attribute with the given name. */\r\n\tpublic function hasAttribute(attrName:String):Bool\r\n\t{\r\n\t\tvar numAttributes:Int = _attributes.length;\r\n\t\t\r\n\t\tfor (i in 0...numAttributes){if (_attributes[i].name == attrName)\t\t\t\t return true;\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// context methods\r\n\t\r\n\t/** Specifies which vertex data attribute corresponds to a single vertex shader\r\n\t *  program input. This wraps the <code>Context3D</code>-method with the same name,\r\n\t *  automatically replacing <code>attrName</code> with the corresponding values for\r\n\t *  <code>bufferOffset</code> and <code>format</code>. */\r\n\tpublic function setVertexBufferAt(index:Int, buffer:VertexBuffer3D, attrName:String):Void\r\n\t{\r\n\t\tvar attribute:VertexDataAttribute = getAttribute(attrName);\r\n\t\tStarling.Context.setVertexBufferAt(index, buffer, untyped attribute.offset / 4, attribute.format);\r\n\t}\r\n\t\r\n\t// parsing\r\n\t\r\n\tprivate function parseFormat(format:String):Void\r\n\t{\r\n\t\tif (format != null && format != \"\") \r\n\t\t{\r\n\t\t\t_attributes.splice(0, _attributes.length);\r\n\t\t\t_format = \"\";\r\n\t\t\t\r\n\t\t\tvar parts:Array<Dynamic> = format.split(\",\");\r\n\t\t\tvar numParts:Int = parts.length;\r\n\t\t\tvar offset:Int = 0;\r\n\t\t\t\r\n\t\t\tfor (i in 0...numParts){\r\n\t\t\t\tvar attrDesc:String = parts[i];\r\n\t\t\t\tvar attrParts:Array<Dynamic> = attrDesc.split(\":\");\r\n\t\t\t\t\r\n\t\t\t\tif (attrParts.length != 2) \r\n\t\t\t\t\tthrow new ArgumentError(\"Missing colon: \" + attrDesc);\r\n\t\t\t\t\r\n\t\t\t\tvar attrName:String = StringTools.trim(attrParts[0]);\r\n\t\t\t\tvar attrStrFormat:String = StringTools.trim(attrParts[1]);\r\n\t\t\t\t\r\n\t\t\t\tif (attrName.length == 0 || attrStrFormat.length == 0) \r\n\t\t\t\t\tthrow new ArgumentError((\"Invalid format string: \" + attrDesc));\r\n\t\t\t\t\r\n\t\t\t\tvar attrFormat:Context3DVertexBufferFormat = null;\r\n\t\t\t\tif (attrStrFormat == \"bytes4\") attrFormat = Context3DVertexBufferFormat.BYTES_4;\r\n\t\t\t\telse if (attrStrFormat == \"float1\") attrFormat = Context3DVertexBufferFormat.FLOAT_1;\r\n\t\t\t\telse if (attrStrFormat == \"float2\") attrFormat = Context3DVertexBufferFormat.FLOAT_2;\r\n\t\t\t\telse if (attrStrFormat == \"float3\") attrFormat = Context3DVertexBufferFormat.FLOAT_3;\r\n\t\t\t\telse if (attrStrFormat == \"float4\") attrFormat = Context3DVertexBufferFormat.FLOAT_4;\r\n\t\t\t\tvar attribute:VertexDataAttribute = new VertexDataAttribute(attrName, attrFormat, offset);\r\n\t\t\t\toffset += attribute.size;\r\n\t\t\t\t_format += (i == (0) ? \"\":\", \") + attribute.name + \":\" + attribute.format;\r\n\t\t\t\t_attributes[_attributes.length] = attribute;\r\n\t\t\t}\r\n\t\t\t_vertexSize = offset;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\t_format = \"\";\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Returns the normalized format string. */\r\n\tpublic function toString():String\r\n\t{\r\n\t\treturn _format;\r\n\t}\r\n\t\r\n\t// internal methods\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.rendering)\r\n\tprivate function getAttribute(attrName:String):VertexDataAttribute\r\n\t{\r\n\t\tvar i:Int;\r\n\t\tvar attribute:VertexDataAttribute;\r\n\t\tvar numAttributes:Int = _attributes.length;\r\n\t\t\r\n\t\tfor (i in 0...numAttributes){\r\n\t\t\tattribute = _attributes[i];\r\n\t\t\tif (attribute.name == attrName)\t\t\t\t return attribute;\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.rendering)\r\n\tprivate function get_attributes():Array<VertexDataAttribute>\r\n\t{\r\n\t\treturn _attributes;\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** Returns the normalized format string. */\r\n\tprivate function get_formatString():String\r\n\t{\r\n\t\treturn _format;\r\n\t}\r\n\t\r\n\t/** The size (in bytes) of each vertex. */\r\n\tprivate function get_vertexSizeInBytes():Int\r\n\t{\r\n\t\treturn _vertexSize;\r\n\t}\r\n\t\r\n\t/** The size (in 32 bit units) of each vertex. */\r\n\tprivate function get_vertexSizeIn32Bits():Int\r\n\t{\r\n\t\treturn untyped _vertexSize / 4;\r\n\t}\r\n\t\r\n\t/** The number of attributes per vertex. */\r\n\tprivate function get_numAttributes():Int\r\n\t{\r\n\t\treturn _attributes.length;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.rendering;\r\n\r\nimport haxe.Constraints.Function;\r\nimport starling.rendering.IndexData;\r\nimport starling.rendering.Painter;\r\nimport starling.rendering.Program;\r\nimport starling.rendering.VertexData;\r\nimport starling.rendering.VertexDataFormat;\r\nimport starling.utils.Execute;\r\n\r\nimport openfl.display3D.Context3D;\r\nimport openfl.display3D.Context3DProgramType;\r\nimport openfl.display3D.IndexBuffer3D;\r\nimport openfl.display3D.VertexBuffer3D;\r\nimport openfl.events.Event;\r\nimport openfl.geom.Matrix3D;\r\n\r\n\r\nimport starling.core.Starling;\r\nimport starling.errors.MissingContextError;\r\nimport starling.utils.Execute;\r\n\r\n/** An effect encapsulates all steps of a Stage3D draw operation. It configures the\r\n *  render context and sets up shader programs as well as index- and vertex-buffers, thus\r\n *  providing the basic mechanisms of all low-level rendering.\r\n *\r\n *  <p><strong>Using the Effect class</strong></p>\r\n *\r\n *  <p>Effects are mostly used by the <code>MeshStyle</code> and <code>FragmentFilter</code>\r\n *  classes. When you extend those classes, you'll be required to provide a custom effect.\r\n *  Setting it up for rendering is done by the base class, though, so you rarely have to\r\n *  initiate the rendering yourself. Nevertheless, it's good to know how an effect is doing\r\n *  its work.</p>\r\n *\r\n *  <p>Using an effect always follows steps shown in the example below. You create the\r\n *  effect, configure it, upload vertex data and then: draw!</p>\r\n *\r\n *  <listing>\r\n *  // create effect\r\n *  var effect:MeshEffect = new MeshEffect();\r\n *  \r\n *  // configure effect\r\n *  effect.mvpMatrix3D = painter.state.mvpMatrix3D;\r\n *  effect.texture = getHeroTexture();\r\n *  effect.color = 0xf0f0f0;\r\n *  \r\n *  // upload vertex data\r\n *  effect.uploadIndexData(indexData);\r\n *  effect.uploadVertexData(vertexData);\r\n *  \r\n *  // draw!\r\n *  effect.render(0, numTriangles);</listing>\r\n *\r\n *  <p>Note that the <code>VertexData</code> being uploaded has to be created with the same\r\n *  format as the one returned by the effect's <code>vertexFormat</code> property.</p>\r\n *\r\n *  <p><strong>Extending the Effect class</strong></p>\r\n *\r\n *  <p>The base <code>Effect</code>-class can only render white triangles, which is not much\r\n *  use in itself. However, it is designed to be extended; subclasses can easily implement any\r\n *  kinds of shaders.</p>\r\n *\r\n *  <p>Normally, you won't extend this class directly, but either <code>FilterEffect</code>\r\n *  or <code>MeshEffect</code>, depending on your needs (i.e. if you want to create a new\r\n *  fragment filter or a new mesh style). Whichever base class you're extending, you should\r\n *  override the following methods:</p>\r\n *\r\n *  <ul>\r\n *\t<li><code>createProgram():Program</code> — must create the actual program containing \r\n *\t\tvertex- and fragment-shaders. A program will be created only once for each render\r\n *\t\tcontext; this is taken care of by the base class.</li>\r\n *\t<li><code>get programVariantName():uint</code> (optional) — override this if your\r\n *\t\teffect requires different programs, depending on its settings. The recommended\r\n *\t\tway to do this is via a bit-mask that uniquely encodes the current settings.</li>\r\n *\t<li><code>get vertexFormat():String</code> (optional) — must return the\r\n *\t\t<code>VertexData</code> format that this effect requires for its vertices. If\r\n *\t\tthe effect does not require any special attributes, you can leave this out.</li>\r\n *\t<li><code>beforeDraw(context:Context3D):void</code> — Set up your context by\r\n *\t\tconfiguring program constants and buffer attributes.</li>\r\n *\t<li><code>afterDraw(context:Context3D):void</code> — Will be called directly after\r\n *\t\t<code>context.drawTriangles()</code>. Clean up any context configuration here.</li>\r\n *  </ul>\r\n *\r\n *  <p>Furthermore, you need to add properties that manage the data you require on rendering,\r\n *  e.g. the texture(s) that should be used, program constants, etc. I recommend looking at\r\n *  the implementations of Starling's <code>FilterEffect</code> and <code>MeshEffect</code>\r\n *  classes to see how to approach sub-classing.</p>\r\n *\r\n *  @see FilterEffect\r\n *  @see MeshEffect\r\n *  @see starling.rendering.MeshStyle\r\n *  @see starling.filters.FragmentFilter\r\n *  @see starling.utils.RenderUtil\r\n */\r\nclass Effect\r\n{\r\n\tprivate var programVariantName(get, never):Int;\r\n\tprivate var programBaseName(get, set):String;\r\n\tprivate var programName(get, never):String;\r\n\tprivate var program(get, never):Program;\r\n\tpublic var onRestore(get, set):Function;\r\n\tpublic var vertexFormat(get, never):VertexDataFormat;\r\n\tpublic var mvpMatrix3D(get, set):Matrix3D;\r\n\tprivate var indexBuffer(get, never):IndexBuffer3D;\r\n\tprivate var indexBufferSize(get, never):Int;\r\n\tprivate var vertexBuffer(get, never):VertexBuffer3D;\r\n\tprivate var vertexBufferSize(get, never):Int;\r\n\r\n\t/** The vertex format expected by <code>uploadVertexData</code>:\r\n\t *  <code>\"position:float2\"</code> */\r\n\tpublic static var VERTEX_FORMAT:VertexDataFormat = \r\n\t\tVertexDataFormat.fromString(\"position:float2\");\r\n\t\r\n\tprivate var _indexBuffer:IndexBuffer3D;\r\n\tprivate var _indexBufferSize:Int = 0;  // in number of indices  \r\n\tprivate var _vertexBuffer:VertexBuffer3D;\r\n\tprivate var _vertexBufferSize:Int = 0;  // in blocks of 32 bits  \r\n\t\r\n\tprivate var _mvpMatrix3D:Matrix3D;\r\n\tprivate var _onRestore:Function;\r\n\tprivate var _programBaseName:String;\r\n\t\r\n\t// helper objects\r\n\tprivate static var sProgramNameCache = new Map<String, Map<Int, String>>();\r\n\t\r\n\t/** Creates a new effect. */\r\n\tpublic function new()\r\n\t{\r\n\t\t_mvpMatrix3D = new Matrix3D();\r\n\t\t_programBaseName = Type.getClassName(Type.getClass(this));\r\n\t\t\r\n\t\tvar nameCache:Map<Int, String> = sProgramNameCache.get(programBaseName);\r\n\t\t\r\n\t\tif (nameCache == null) \r\n\t\t{\r\n\t\t\tnameCache = new Map<Int, String>();\r\n\t\t\tsProgramNameCache.set(programBaseName, nameCache);\r\n\t\t}\r\n\t\t\r\n\t\t// Handle lost context (using conventional Flash event for weak listener support)\r\n\t\tStarling.Current.stage3D.addEventListener(Event.CONTEXT3D_CREATE,\r\n\t\t\t\tonContextCreated, false, 0, true);\r\n\t}\r\n\t\r\n\t/** Purges the index- and vertex-buffers. */\r\n\tpublic function dispose():Void\r\n\t{\r\n\t\tStarling.Current.stage3D.removeEventListener(Event.CONTEXT3D_CREATE, onContextCreated);\r\n\t\tpurgeBuffers();\r\n\t}\r\n\t\r\n\tprivate function onContextCreated(event:Event):Void\r\n\t{\r\n\t\tpurgeBuffers();\r\n\t\tExecute.call(_onRestore, [this]);\r\n\t}\r\n\t\r\n\t/** Purges one or both of the index- and vertex-buffers. */\r\n\tpublic function purgeBuffers(indexBuffer:Bool = true, vertexBuffer:Bool = true):Void\r\n\t{\r\n\t\tif (_indexBuffer != null && indexBuffer) \r\n\t\t{\r\n\t\t\t_indexBuffer.dispose();\r\n\t\t\t_indexBuffer = null;\r\n\t\t}\r\n\t\t\r\n\t\tif (_vertexBuffer != null && vertexBuffer) \r\n\t\t{\r\n\t\t\t_vertexBuffer.dispose();\r\n\t\t\t_vertexBuffer = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Uploads the given index data to the internal index buffer. If the buffer is too\r\n\t *  small, a new one is created automatically. */\r\n\tpublic function uploadIndexData(indexData:IndexData):Void\r\n\t{\r\n\t\tif (_indexBuffer != null) \r\n\t\t{\r\n\t\t\tif (indexData.numIndices <= _indexBufferSize) \r\n\t\t\t\tindexData.uploadToIndexBuffer(_indexBuffer)\r\n\t\t\telse \r\n\t\t\tpurgeBuffers(true, false);\r\n\t\t}\r\n\t\tif (_indexBuffer == null) \r\n\t\t{\r\n\t\t\t_indexBuffer = indexData.createIndexBuffer(true);\r\n\t\t\t_indexBufferSize = indexData.numIndices;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Uploads the given vertex data to the internal vertex buffer. If the buffer is too\r\n\t *  small, a new one is created automatically. */\r\n\tpublic function uploadVertexData(vertexData:VertexData):Void\r\n\t{\r\n\t\tif (_vertexBuffer != null) \r\n\t\t{\r\n\t\t\tif (vertexData.sizeIn32Bits <= _vertexBufferSize) \r\n\t\t\t\tvertexData.uploadToVertexBuffer(_vertexBuffer)\r\n\t\t\telse \r\n\t\t\tpurgeBuffers(false, true);\r\n\t\t}\r\n\t\tif (_vertexBuffer == null) \r\n\t\t{\r\n\t\t\t_vertexBuffer = vertexData.createVertexBuffer(true);\r\n\t\t\t_vertexBufferSize = vertexData.sizeIn32Bits;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// rendering\r\n\t\r\n\t/** Draws the triangles described by the index- and vertex-buffers, or a range of them.\r\n\t *  This calls <code>beforeDraw</code>, <code>context.drawTriangles</code>, and\r\n\t *  <code>afterDraw</code>, in this order. */\r\n\tpublic function render(firstIndex:Int = 0, numTriangles:Int = -1):Void\r\n\t{\r\n\t\tif (numTriangles < 0) numTriangles = Math.round(indexBufferSize / 3);\r\n\t\tif (numTriangles == 0) return;\r\n\t\t\r\n\t\tvar context:Context3D = Starling.Context;\r\n\t\tif (context == null) throw new MissingContextError();\r\n\t\t\r\n\t\tbeforeDraw(context);\r\n\t\tcontext.drawTriangles(indexBuffer, firstIndex, numTriangles);\r\n\t\tafterDraw(context);\r\n\t}\r\n\t\r\n\t/** This method is called by <code>render</code>, directly before\r\n\t *  <code>context.drawTriangles</code>. It activates the program and sets up\r\n\t *  the context with the following constants and attributes:\r\n\t *\r\n\t *  <ul>\r\n\t *\t<li><code>vc0-vc3</code> — MVP matrix</li>\r\n\t *\t<li><code>va0</code> — vertex position (xy)</li>\r\n\t *  </ul>\r\n\t */\r\n\tprivate function beforeDraw(context:Context3D):Void\r\n\t{\r\n\t\tprogram.activate(context);\r\n\t\tvertexFormat.setVertexBufferAt(0, vertexBuffer, \"position\");\r\n\t\tcontext.setProgramConstantsFromMatrix(Context3DProgramType.VERTEX, 0, mvpMatrix3D, true);\r\n\t}\r\n\t\r\n\t/** This method is called by <code>render</code>, directly after\r\n\t *  <code>context.drawTriangles</code>. Resets vertex buffer attributes.\r\n\t */\r\n\tprivate function afterDraw(context:Context3D):Void\r\n\t{\r\n\t\tcontext.setVertexBufferAt(0, null);\r\n\t}\r\n\t\r\n\t// program management\r\n\t\r\n\t/** Creates the program (a combination of vertex- and fragment-shader) used to render\r\n\t *  the effect with the current settings. Override this method in a subclass to create\r\n\t *  your shaders. This method will only be called once; the program is automatically stored\r\n\t *  in the <code>Painter</code> and re-used by all instances of this effect.\r\n\t *\r\n\t *  <p>The basic implementation always outputs pure white.</p>\r\n\t */\r\n\tprivate function createProgram():Program\r\n\t{\r\n\t\tvar vertexShader:String = [\r\n\t\t\t\"m44 op, va0, vc0\", // 4x4 matrix transform to output clipspace\r\n\t\t\t\"seq v0, va0, va0\"  // this is a hack that always produces \"1\"\r\n\t\t].join(\"\\n\");\r\n\r\n\t\tvar fragmentShader:String =\r\n\t\t\t\"mov oc, v0\";\t   // output color: white\r\n\r\n\t\treturn Program.fromSource(vertexShader, fragmentShader);\r\n\t}\r\n\t\r\n\t/** Override this method if the effect requires a different program depending on the\r\n\t *  current settings. Ideally, you do this by creating a bit mask encoding all the options.\r\n\t *  This method is called often, so do not allocate any temporary objects when overriding.\r\n\t *\r\n\t *  @default 0\r\n\t */\r\n\tprivate function get_programVariantName():Int\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\t/** Returns the base name for the program.\r\n\t *  @default the fully qualified class name\r\n\t */\r\n\tprivate function get_programBaseName():String\r\n\t{\r\n\t\treturn _programBaseName;\r\n\t}\r\n\tprivate function set_programBaseName(value:String):String\r\n\t{\r\n\t\t_programBaseName = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Returns the full name of the program, which is used to register it at the current\r\n\t *  <code>Painter</code>.\r\n\t *\r\n\t *  <p>The default implementation efficiently combines the program's base and variant\r\n\t *  names (e.g. <code>LightEffect#42</code>). It shouldn't be necessary to override\r\n\t *  this method.</p>\r\n\t */\r\n\tprivate function get_programName():String\r\n\t{\r\n\t\tvar nameCache:Map<Int, String> = sProgramNameCache.get(programBaseName);\r\n\t\tvar name:String = nameCache.get(programVariantName);\r\n\t\t\r\n\t\tif (name == null) \r\n\t\t{\r\n\t\t\tif (programVariantName != 0) {\r\n\t\t\t\tname = programBaseName + \"#\" + Std.string(programVariantName);\r\n\t\t\t}\r\n\t\t\telse name = programBaseName;\r\n\t\t\t\r\n\t\t\tnameCache.set(programVariantName, name);\r\n\t\t}\r\n\t\t\r\n\t\treturn name;\r\n\t}\r\n\t\r\n\t/** Returns the current program, either by creating a new one (via\r\n\t *  <code>createProgram</code>) or by getting it from the <code>Painter</code>.\r\n\t *  Do not override this method! Instead, implement <code>createProgram</code>. */\r\n\tprivate function get_program():Program\r\n\t{\r\n\t\tvar name:String = this.programName;\r\n\t\tvar painter:Painter = Starling.Painter;\r\n\t\tvar program:Program = painter.getProgram(name);\r\n\t\t\r\n\t\tif (program == null) \r\n\t\t{\r\n\t\t\tprogram = createProgram();\r\n\t\t\tpainter.registerProgram(name, program);\r\n\t\t}\r\n\t\t\r\n\t\treturn program;\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** The function that you provide here will be called after a context loss.\r\n\t *  Call both \"upload...\" methods from within the callback to restore any vertex or\r\n\t *  index buffers. The callback will be executed with the effect as its sole parameter. */\r\n\tprivate function get_onRestore():Function\r\n\t{\r\n\t\treturn _onRestore;\r\n\t}\r\n\t\r\n\tprivate function set_onRestore(value:Function):Function{_onRestore = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The data format that this effect requires from the VertexData that it renders:\r\n\t *  <code>\"position:float2\"</code> */\r\n\tprivate function get_vertexFormat():VertexDataFormat\r\n\t{\r\n\t\treturn VERTEX_FORMAT;\r\n\t}\r\n\t\r\n\t/** The MVP (modelview-projection) matrix transforms vertices into clipspace. */\r\n\tprivate function get_mvpMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn _mvpMatrix3D;\r\n\t}\r\n\t\r\n\tprivate function set_mvpMatrix3D(value:Matrix3D):Matrix3D{_mvpMatrix3D.copyFrom(value);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The internally used index buffer used on rendering. */\r\n\tprivate function get_indexBuffer():IndexBuffer3D\r\n\t{\r\n\t\treturn _indexBuffer;\r\n\t}\r\n\t\r\n\t/** The current size of the index buffer (in number of indices). */\r\n\tprivate function get_indexBufferSize():Int\r\n\t{\r\n\t\treturn _indexBufferSize;\r\n\t}\r\n\t\r\n\t/** The internally used vertex buffer used on rendering. */\r\n\tprivate function get_vertexBuffer():VertexBuffer3D\r\n\t{\r\n\t\treturn _vertexBuffer;\r\n\t}\r\n\t\r\n\t/** The current size of the vertex buffer (in blocks of 32 bits). */\r\n\tprivate function get_vertexBufferSize():Int\r\n\t{\r\n\t\treturn _vertexBufferSize;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.rendering;\r\n\r\nimport starling.rendering.Program;\r\nimport starling.rendering.VertexDataFormat;\r\n\r\nimport openfl.display3D.Context3D;\r\n\r\nimport starling.textures.Texture;\r\nimport starling.textures.TextureSmoothing;\r\nimport starling.utils.RenderUtil;\r\n\r\n/** An effect drawing a mesh of textured vertices.\r\n *  This is the standard effect that is the base for all fragment filters;\r\n *  if you want to create your own fragment filters, you will have to extend this class.\r\n *\r\n *  <p>For more information about the usage and creation of effects, please have a look at\r\n *  the documentation of the parent class, \"Effect\".</p>\r\n *\r\n *  @see Effect\r\n *  @see MeshEffect\r\n *  @see starling.filters.FragmentFilter\r\n */\r\nclass FilterEffect extends Effect\r\n{\r\n\tpublic var texture(get, set):Texture;\r\n\tpublic var textureSmoothing(get, set):String;\r\n\tpublic var textureRepeat(get, set):Bool;\r\n\r\n\t/** The vertex format expected by <code>uploadVertexData</code>:\r\n\t *  <code>\"position:float2, texCoords:float2\"</code> */\r\n\tpublic static var VERTEX_FORMAT:VertexDataFormat = \r\n\t\tVertexDataFormat.fromString(\"position:float2, texCoords:float2\");\r\n\t\r\n\t/** The AGAL code for the standard vertex shader that most filters will use.\r\n\t *  It simply transforms the vertex coordinates to clip-space and passes the texture\r\n\t *  coordinates to the fragment program (as 'v0'). */\r\n\tpublic static var STD_VERTEX_SHADER:String = \r\n\t\t\"m44 op, va0, vc0 \\n\" +  // 4x4 matrix transform to output clip-space  \r\n\t\t\"mov v0, va1\";  // pass texture coordinates to fragment program  \r\n\t\r\n\tprivate var _texture:Texture;\r\n\tprivate var _textureSmoothing:String;\r\n\tprivate var _textureRepeat:Bool;\r\n\t\r\n\t/** Creates a new FilterEffect instance. */\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t_textureSmoothing = TextureSmoothing.BILINEAR;\r\n\t}\r\n\t\r\n\t/** Override this method if the effect requires a different program depending on the\r\n\t *  current settings. Ideally, you do this by creating a bit mask encoding all the options.\r\n\t *  This method is called often, so do not allocate any temporary objects when overriding.\r\n\t *\r\n\t *  <p>Reserve 4 bits for the variant name of the base class.</p>\r\n\t */\r\n\toverride private function get_programVariantName():Int\r\n\t{\r\n\t\treturn RenderUtil.getTextureVariantBits(_texture);\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function createProgram():Program\r\n\t{\r\n\t\tif (_texture != null) \r\n\t\t{\r\n\t\t\tvar vertexShader:String = STD_VERTEX_SHADER;\r\n\t\t\tvar fragmentShader:String = \r\n\t\t\tRenderUtil.createAGALTexOperation(\"oc\", \"v0\", 0, _texture);\r\n\t\t\t\r\n\t\t\treturn Program.fromSource(vertexShader, fragmentShader);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\treturn super.createProgram();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** This method is called by <code>render</code>, directly before\r\n\t *  <code>context.drawTriangles</code>. It activates the program and sets up\r\n\t *  the context with the following constants and attributes:\r\n\t *\r\n\t *  <ul>\r\n\t *\t<li><code>vc0-vc3</code> — MVP matrix</li>\r\n\t *\t<li><code>va0</code> — vertex position (xy)</li>\r\n\t *\t<li><code>va1</code> — texture coordinates (uv)</li>\r\n\t *\t<li><code>fs0</code> — texture</li>\r\n\t *  </ul>\r\n\t */\r\n\toverride private function beforeDraw(context:Context3D):Void\r\n\t{\r\n\t\tsuper.beforeDraw(context);\r\n\t\t\r\n\t\tif (_texture != null) \r\n\t\t{\r\n\t\t\tRenderUtil.setSamplerStateAt(0, _texture.mipMapping, _textureSmoothing, _textureRepeat);\r\n\t\t\tcontext.setTextureAt(0, _texture.base);\r\n\t\t\tvertexFormat.setVertexBufferAt(1, vertexBuffer, \"texCoords\");\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** This method is called by <code>render</code>, directly after\r\n\t *  <code>context.drawTriangles</code>. Resets texture and vertex buffer attributes. */\r\n\toverride private function afterDraw(context:Context3D):Void\r\n\t{\r\n\t\tif (_texture != null) \r\n\t\t{\r\n\t\t\tcontext.setTextureAt(0, null);\r\n\t\t\tcontext.setVertexBufferAt(1, null);\r\n\t\t}\r\n\t\t\r\n\t\tsuper.afterDraw(context);\r\n\t}\r\n\t\r\n\t/** The data format that this effect requires from the VertexData that it renders:\r\n\t *  <code>\"position:float2, texCoords:float2\"</code> */\r\n\toverride private function get_vertexFormat():VertexDataFormat\r\n\t{\r\n\t\treturn VERTEX_FORMAT;\r\n\t}\r\n\t\r\n\t/** The texture to be mapped onto the vertices. */\r\n\tprivate function get_texture():Texture\r\n\t{\r\n\t\treturn _texture;\r\n\t}\r\n\t\r\n\tprivate function set_texture(value:Texture):Texture{_texture = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The smoothing filter that is used for the texture. @default bilinear */\r\n\tprivate function get_textureSmoothing():String\r\n\t{\r\n\t\treturn _textureSmoothing;\r\n\t}\r\n\t\r\n\tprivate function set_textureSmoothing(value:String):String{_textureSmoothing = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates how the pixels of the texture will be wrapped at the edge.\r\n\t *  If enabled, the texture will produce a repeating pattern; otherwise, the outermost\r\n\t *  pixels will repeat. Unfortunately, this only works for power-of-two textures.\r\n\t *  @default false */\r\n\tprivate function get_textureRepeat():Bool\r\n\t{\r\n\t\treturn _textureRepeat;\r\n\t}\r\n\t\r\n\tprivate function set_textureRepeat(value:Bool):Bool{_textureRepeat = value;\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.rendering;\r\n\r\nimport starling.rendering.Program;\r\nimport starling.rendering.VertexDataFormat;\r\n\r\nimport openfl.display3D.Context3D;\r\nimport openfl.display3D.Context3DProgramType;\r\n\r\nimport starling.utils.RenderUtil;\r\n\r\n/** An effect drawing a mesh of textured, colored vertices.\r\n *  This is the standard effect that is the base for all mesh styles;\r\n *  if you want to create your own mesh styles, you will have to extend this class.\r\n *\r\n *  <p>For more information about the usage and creation of effects, please have a look at\r\n *  the documentation of the root class, \"Effect\".</p>\r\n *\r\n *  @see Effect\r\n *  @see FilterEffect\r\n *  @see starling.rendering.MeshStyle\r\n */\r\nclass MeshEffect extends FilterEffect\r\n{\r\n\tpublic var alpha(get, set):Float;\r\n\r\n\t/** The vertex format expected by <code>uploadVertexData</code>:\r\n\t *  <code>\"position:float2, texCoords:float2, color:bytes4\"</code> */\r\n\tpublic static var VERTEX_FORMAT:VertexDataFormat = \r\n\t\tVertexDataFormat.fromString(\"position:float2, texCoords:float2, color:bytes4\");\r\n\t\r\n\tprivate var _alpha:Float;\r\n\t\r\n\t// helper objects\r\n\tprivate static var sRenderAlpha:Array<Float> = [0, 0, 0, 0];\r\n\t\r\n\t/** Creates a new MeshEffect instance. */\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\talpha = 1.0;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function createProgram():Program\r\n\t{\r\n\t\tvar vertexShader:String;\r\n\t\tvar fragmentShader:String;\r\n\t\t\r\n\t\tif (texture != null) \r\n\t\t{\r\n\t\t\tvertexShader =\r\n\t\t\t\t\t\"m44 op, va0, vc0 \\n\" +  // 4x4 matrix transform to output clip-space  \r\n\t\t\t\t\t\"mov v0, va1\t  \\n\" +  // pass texture coordinates to fragment program  \r\n\t\t\t\t\t\"mul v1, va2, vc4 \\n\";  // multiply alpha (vc4) with color (va2), pass to fp  \r\n\t\t\t\r\n\t\t\tfragmentShader =\r\n\t\t\t\t\tRenderUtil.createAGALTexOperation(\"ft0\", \"v0\", 0, texture) +\r\n\t\t\t\t\t\"mul oc, ft0, v1  \\n\";\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tvertexShader =\r\n\t\t\t\t\t\"m44 op, va0, vc0 \\n\" +  // 4x4 matrix transform to output clipspace  \r\n\t\t\t\t\t\"mul v0, va2, vc4 \\n\";  // multiply alpha (vc4) with color (va2)  \r\n\t\t\t\r\n\t\t\tfragmentShader =\r\n\t\t\t\t\t\"mov oc, v0\t   \\n\";\r\n\t\t}\r\n\t\t\r\n\t\treturn Program.fromSource(vertexShader, fragmentShader);\r\n\t}\r\n\t\r\n\t/** This method is called by <code>render</code>, directly before\r\n\t *  <code>context.drawTriangles</code>. It activates the program and sets up\r\n\t *  the context with the following constants and attributes:\r\n\t *\r\n\t *  <ul>\r\n\t *\t<li><code>vc0-vc3</code> — MVP matrix</li>\r\n\t *\t<li><code>vc4</code> — alpha value (same value for all components)</li>\r\n\t *\t<li><code>va0</code> — vertex position (xy)</li>\r\n\t *\t<li><code>va1</code> — texture coordinates (uv)</li>\r\n\t *\t<li><code>va2</code> — vertex color (rgba), using premultiplied alpha</li>\r\n\t *\t<li><code>fs0</code> — texture</li>\r\n\t *  </ul>\r\n\t */\r\n\toverride private function beforeDraw(context:Context3D):Void\r\n\t{\r\n\t\tsuper.beforeDraw(context);\r\n\t\t\r\n\t\tcontext.setProgramConstantsFromVector(Context3DProgramType.VERTEX, 4, sRenderAlpha);\r\n\t\tvertexFormat.setVertexBufferAt(2, vertexBuffer, \"color\");\r\n\t}\r\n\t\r\n\t/** This method is called by <code>render</code>, directly after\r\n\t *  <code>context.drawTriangles</code>. Resets texture and vertex buffer attributes. */\r\n\toverride private function afterDraw(context:Context3D):Void\r\n\t{\r\n\t\tcontext.setVertexBufferAt(2, null);\r\n\t\t\r\n\t\tsuper.afterDraw(context);\r\n\t}\r\n\t\r\n\t/** The data format that this effect requires from the VertexData that it renders:\r\n\t *  <code>\"position:float2, texCoords:float2, color:bytes4\"</code> */\r\n\toverride private function get_vertexFormat():VertexDataFormat\r\n\t{\r\n\t\treturn VERTEX_FORMAT;\r\n\t}\r\n\t\r\n\t/** The alpha value of the object rendered by the effect. Must be taken into account\r\n\t *  by all subclasses. */\r\n\tprivate function get_alpha():Float\r\n\t{\r\n\t\treturn _alpha;\r\n\t}\r\n\t\r\n\tprivate function set_alpha(value:Float):Float {\r\n\t\tif (_alpha == value) return value;\r\n\t\t_alpha = value;\r\n\t\tsRenderAlpha = [_alpha, _alpha, _alpha, _alpha];\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.rendering;\r\n\r\nimport haxe.Constraints.Function;\r\nimport starling.rendering.RenderState;\r\nimport starling.rendering.VertexData;\r\nimport starling.rendering.VertexDataFormat;\r\n\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\n\r\nimport starling.display.Mesh;\r\nimport starling.events.Event;\r\nimport starling.events.EventDispatcher;\r\nimport starling.textures.Texture;\r\nimport starling.textures.TextureSmoothing;\r\n\r\n/** Dispatched every frame on styles assigned to display objects connected to the stage. */\r\n@:meta(Event(name=\"enterFrame\",type=\"starling.events.EnterFrameEvent\"))\r\n\r\n\r\n/** MeshStyles provide a means to completely modify the way a mesh is rendered.\r\n *  The base class provides Starling's standard mesh rendering functionality: colored and\r\n *  (optionally) textured meshes. Subclasses may add support for additional features like\r\n *  color transformations, normal mapping, etc.\r\n *\r\n *  <p><strong>Using styles</strong></p>\r\n *\r\n *  <p>First, create an instance of the desired style. Configure the style by updating its\r\n *  properties, then assign it to the mesh. Here is an example that uses a fictitious\r\n *  <code>ColorStyle</code>:</p>\r\n *\r\n *  <listing>\r\n *  var image:Image = new Image(heroTexture);\r\n *  var colorStyle:ColorStyle = new ColorStyle();\r\n *  colorStyle.redOffset = 0.5;\r\n *  colorStyle.redMultiplier = 2.0;\r\n *  image.style = colorStyle;</listing>\r\n *\r\n *  <p>Beware:</p>\r\n *\r\n *  <ul>\r\n *\t<li>A style instance may only be used on one object at a time.</li>\r\n *\t<li>A style might require the use of a specific vertex format;\r\n *\t\twhen the style is assigned, the mesh is converted to that format.</li>\r\n *  </ul>\r\n *\r\n *  <p><strong>Creating your own styles</strong></p>\r\n *\r\n *  <p>To create custom rendering code in Starling, you need to extend two classes:\r\n *  <code>MeshStyle</code> and <code>MeshEffect</code>. While the effect class contains\r\n *  the actual AGAL rendering code, the style provides the API that other developers will\r\n *  interact with.</p>\r\n *\r\n *  <p>Subclasses of <code>MeshStyle</code> will add specific properties that configure the\r\n *  style's outcome, like the <code>redOffset</code> and <code>redMultiplier</code> properties\r\n *  in the sample above. Here's how to properly create such a class:</p>\r\n *\r\n *  <ul>\r\n *\t<li>Always provide a constructor that can be called without any arguments.</li>\r\n *\t<li>Override <code>copyFrom</code> — that's necessary for batching.</li>\r\n *\t<li>Override <code>createEffect</code> — this method must return the\r\n *\t\t<code>MeshEffect</code> that will do the actual Stage3D rendering.</li>\r\n *\t<li>Override <code>updateEffect</code> — this configures the effect created above\r\n *\t\tright before rendering.</li>\r\n *\t<li>Override <code>canBatchWith</code> if necessary — this method figures out if one\r\n *\t\tinstance of the style can be batched with another. If they all can, you can leave\r\n *\t\tthis out.</li>\r\n *  </ul>\r\n *\r\n *  <p>If the style requires a custom vertex format, you must also:</p>\r\n *\r\n *  <ul>\r\n *\t<li>add a static constant called <code>VERTEX_FORMAT</code> to the class and</li>\r\n *\t<li>override <code>get vertexFormat</code> and let it return exactly that format.</li>\r\n *  </ul>\r\n *\r\n *  <p>When that's done, you can turn to the implementation of your <code>MeshEffect</code>;\r\n *  the <code>createEffect</code>-override will return an instance of this class.\r\n *  Directly before rendering begins, Starling will then call <code>updateEffect</code>\r\n *  to set it up.</p>\r\n *\r\n *  @see MeshEffect\r\n *  @see VertexDataFormat\r\n *  @see starling.display.Mesh\r\n */\r\nclass MeshStyle extends EventDispatcher\r\n{\r\n\tprivate var vertexData(get, never):VertexData;\r\n\tprivate var indexData(get, never):IndexData;\r\n\tpublic var type(get, never):Class<Dynamic>;\r\n\tpublic var color(get, set):Int;\r\n\tpublic var vertexFormat(get, never):VertexDataFormat;\r\n\tpublic var texture(get, set):Texture;\r\n\tpublic var textureSmoothing(get, set):String;\r\n\tpublic var target(get, never):Mesh;\r\n\r\n\t/** The vertex format expected by this style (the same as found in the MeshEffect-class). */\r\n\tpublic static var VERTEX_FORMAT:VertexDataFormat = MeshEffect.VERTEX_FORMAT;\r\n\t\r\n\tprivate var _type:Class<Dynamic>;\r\n\tprivate var _target:Mesh;\r\n\tprivate var _texture:Texture;\r\n\tprivate var _textureSmoothing:String;\r\n\tprivate var _vertexData:VertexData;  // just a reference to the target's vertex data  \r\n\tprivate var _indexData:IndexData;  // just a reference to the target's index data  \r\n\t\r\n\t// helper objects\r\n\tprivate static var sPoint:Point = new Point();\r\n\t\r\n\t/** Creates a new MeshStyle instance.\r\n\t *  Subclasses must provide a constructor that can be called without any arguments. */\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t_textureSmoothing = TextureSmoothing.BILINEAR;\r\n\t\t_type = Type.getClass(this);\r\n\t}\r\n\t\r\n\t/** Copies all properties of the given style to the current instance (or a subset, if the\r\n\t *  classes don't match). Must be overridden by all subclasses!\r\n\t */\r\n\tpublic function copyFrom(meshStyle:MeshStyle):Void\r\n\t{\r\n\t\t_texture = meshStyle._texture;\r\n\t\t_textureSmoothing = meshStyle._textureSmoothing;\r\n\t}\r\n\t\r\n\t/** Creates a clone of this instance. The method will work for subclasses automatically,\r\n\t *  no need to override it. */\r\n\tpublic function clone():MeshStyle\r\n\t{\r\n\t\tvar clone:MeshStyle = Type.createInstance(_type, []);\r\n\t\tclone.copyFrom(this);\r\n\t\treturn clone;\r\n\t}\r\n\t\r\n\t/** Creates the effect that does the actual, low-level rendering.\r\n\t *  To be overridden by subclasses!\r\n\t */\r\n\tpublic function createEffect():MeshEffect\r\n\t{\r\n\t\treturn new MeshEffect();\r\n\t}\r\n\t\r\n\t/** Updates the settings of the given effect to match the current style.\r\n\t *  The given <code>effect</code> will always match the class returned by\r\n\t *  <code>createEffect</code>.\r\n\t *\r\n\t *  <p>To be overridden by subclasses!</p>\r\n\t */\r\n\tpublic function updateEffect(effect:MeshEffect, state:RenderState):Void\r\n\t{\r\n\t\teffect.texture = _texture;\r\n\t\teffect.textureSmoothing = _textureSmoothing;\r\n\t\teffect.mvpMatrix3D = state.mvpMatrix3D;\r\n\t\teffect.alpha = state.alpha;\r\n\t}\r\n\t\r\n\t/** Indicates if the current instance can be batched with the given style.\r\n\t *  To be overridden by subclasses if default behavior is not sufficient.\r\n\t *  The base implementation just checks if the styles are of the same type\r\n\t *  and if the textures are compatible.\r\n\t */\r\n\tpublic function canBatchWith(meshStyle:MeshStyle):Bool\r\n\t{\r\n\t\tif (_type == meshStyle._type) \r\n\t\t{\r\n\t\t\tvar newTexture:Texture = meshStyle._texture;\r\n\t\t\t\r\n\t\t\tif (_texture == null && newTexture == null)\t\t\t\t return true\r\n\t\t\telse if (_texture != null && newTexture != null) \r\n\t\t\t\treturn _texture.base == newTexture.base &&\r\n\t\t\t_textureSmoothing == meshStyle._textureSmoothing\r\n\t\t\telse return false;\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\t\r\n\t/** Copies the vertex data of the style's current target to the target of another style.\r\n\t *  If you pass a matrix, all vertices will be transformed during the process.\r\n\t *\r\n\t *  <p>This method is used when batching meshes together for rendering. The parameter\r\n\t *  <code>targetStyle</code> will point to the style of a <code>MeshBatch</code> (a\r\n\t *  subclass of <code>Mesh</code>). Subclasses may override this method if they need\r\n\t *  to modify the vertex data in that process.</p>\r\n\t */\r\n\tpublic function batchVertexData(targetStyle:MeshStyle, targetVertexID:Int = 0,\r\n\t\t\tmatrix:Matrix = null, vertexID:Int = 0, numVertices:Int = -1):Void\r\n\t{\r\n\t\t_vertexData.copyTo(targetStyle._vertexData, targetVertexID, matrix, vertexID, numVertices);\r\n\t}\r\n\t\r\n\t/** Copies the index data of the style's current target to the target of another style.\r\n\t *  The given offset value will be added to all indices during the process.\r\n\t *\r\n\t *  <p>This method is used when batching meshes together for rendering. The parameter\r\n\t *  <code>targetStyle</code> will point to the style of a <code>MeshBatch</code> (a\r\n\t *  subclass of <code>Mesh</code>). Subclasses may override this method if they need\r\n\t *  to modify the index data in that process.</p>\r\n\t */\r\n\tpublic function batchIndexData(targetStyle:MeshStyle, targetIndexID:Int = 0, offset:Int = 0,\r\n\t\t\tindexID:Int = 0, numIndices:Int = -1):Void\r\n\t{\r\n\t\t_indexData.copyTo(targetStyle._indexData, targetIndexID, offset, indexID, numIndices);\r\n\t}\r\n\t\r\n\t/** Call this method if the target needs to be redrawn.\r\n\t *  The call is simply forwarded to the mesh. */\r\n\tprivate function setRequiresRedraw():Void\r\n\t{\r\n\t\tif (_target != null)\t\t\t _target.setRequiresRedraw();\r\n\t}\r\n\t\r\n\t/** Called when assigning a target mesh. Override to plug in class-specific logic. */\r\n\tprivate function onTargetAssigned(target:Mesh):Void\r\n\t{\r\n\t}\r\n\t\r\n\t// enter frame event\r\n\t\r\n\toverride public function addEventListener(type:String, listener:Function):Void\r\n\t{\r\n\t\tif (type == Event.ENTER_FRAME && _target != null) \r\n\t\t\t_target.addEventListener(Event.ENTER_FRAME, onEnterFrame);\r\n\t\t\r\n\t\tsuper.addEventListener(type, listener);\r\n\t}\r\n\t\r\n\toverride public function removeEventListener(type:String, listener:Function):Void\r\n\t{\r\n\t\tif (type == Event.ENTER_FRAME && _target != null) \r\n\t\t\t_target.removeEventListener(type, onEnterFrame);\r\n\t\t\r\n\t\tsuper.removeEventListener(type, listener);\r\n\t}\r\n\t\r\n\tprivate function onEnterFrame(event:Event):Void\r\n\t{\r\n\t\tdispatchEvent(event);\r\n\t}\r\n\t\r\n\t// internal methods\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling)\r\n\tprivate function setTarget(target:Mesh=null, vertexData:VertexData=null, indexData:IndexData=null):Void\r\n\t{\r\n\t\tif (_target != target) \r\n\t\t{\r\n\t\t\tif (_target != null)\t\t\t\t _target.removeEventListener(Event.ENTER_FRAME, onEnterFrame);\r\n\t\t\tif (vertexData != null)\t\t\t\t vertexData.format = vertexFormat;\r\n\t\t\t\r\n\t\t\t_target = target;\r\n\t\t\t_vertexData = vertexData;\r\n\t\t\t_indexData = indexData;\r\n\t\t\t\r\n\t\t\tif (target != null) \r\n\t\t\t{\r\n\t\t\t\tif (hasEventListener(Event.ENTER_FRAME)) \r\n\t\t\t\t\ttarget.addEventListener(Event.ENTER_FRAME, onEnterFrame);\r\n\t\t\t\t\r\n\t\t\t\tonTargetAssigned(target);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// vertex manipulation\r\n\t\r\n\t/** Returns the alpha value of the vertex at the specified index. */\r\n\tpublic function getVertexAlpha(vertexID:Int):Float\r\n\t{\r\n\t\treturn _vertexData.getAlpha(vertexID);\r\n\t}\r\n\t\r\n\t/** Sets the alpha value of the vertex at the specified index to a certain value. */\r\n\tpublic function setVertexAlpha(vertexID:Int, alpha:Float):Void\r\n\t{\r\n\t\t_vertexData.setAlpha(vertexID, \"color\", alpha);\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\t/** Returns the RGB color of the vertex at the specified index. */\r\n\tpublic function getVertexColor(vertexID:Int):Int\r\n\t{\r\n\t\treturn _vertexData.getColor(vertexID);\r\n\t}\r\n\t\r\n\t/** Sets the RGB color of the vertex at the specified index to a certain value. */\r\n\tpublic function setVertexColor(vertexID:Int, color:Int):Void\r\n\t{\r\n\t\t_vertexData.setColor(vertexID, \"color\", color);\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\t/** Returns the texture coordinates of the vertex at the specified index. */\r\n\tpublic function getTexCoords(vertexID:Int, out:Point = null):Point\r\n\t{\r\n\t\tif (_texture != null)\t\t\t return _texture.getTexCoords(_vertexData, vertexID, \"texCoords\", out)\r\n\t\telse return _vertexData.getPoint(vertexID, \"texCoords\", out);\r\n\t}\r\n\t\r\n\t/** Sets the texture coordinates of the vertex at the specified index to the given values. */\r\n\tpublic function setTexCoords(vertexID:Int, u:Float, v:Float):Void\r\n\t{\r\n\t\tif (_texture != null)\t\t\t _texture.setTexCoords(_vertexData, vertexID, \"texCoords\", u, v)\r\n\t\telse _vertexData.setPoint(vertexID, \"texCoords\", u, v);\r\n\t\t\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** Returns a reference to the vertex data of the assigned target (or <code>null</code>\r\n\t *  if there is no target). Beware: the style itself does not own any vertices;\r\n\t *  it is limited to manipulating those of the target mesh. */\r\n\tprivate function get_vertexData():VertexData\r\n\t{\r\n\t\treturn _vertexData;\r\n\t}\r\n\t\r\n\t/** Returns a reference to the index data of the assigned target (or <code>null</code>\r\n\t *  if there is no target). Beware: the style itself does not own any indices;\r\n\t *  it is limited to manipulating those of the target mesh. */\r\n\tprivate function get_indexData():IndexData\r\n\t{\r\n\t\treturn _indexData;\r\n\t}\r\n\t\r\n\t/** The actual class of this style. */\r\n\tprivate function get_type():Class<Dynamic>\r\n\t{\r\n\t\treturn _type;\r\n\t}\r\n\t\r\n\t/** Changes the color of all vertices to the same value.\r\n\t *  The getter simply returns the color of the first vertex. */\r\n\tprivate function get_color():Int\r\n\t{\r\n\t\tif (_vertexData.numVertices > 0) return _vertexData.getColor(0)\r\n\t\telse return 0x0;\r\n\t}\r\n\t\r\n\tprivate function set_color(value:Int):Int\r\n\t{\r\n\t\tvar i:Int;\r\n\t\tvar numVertices:Int = _vertexData.numVertices;\r\n\t\t\r\n\t\tfor (i in 0...numVertices){_vertexData.setColor(i, \"color\", value);\r\n\t\t}\r\n\t\t\r\n\t\tsetRequiresRedraw();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The format used to store the vertices. */\r\n\tprivate function get_vertexFormat():VertexDataFormat\r\n\t{\r\n\t\treturn VERTEX_FORMAT;\r\n\t}\r\n\t\r\n\t/** The texture that is mapped to the mesh (or <code>null</code>, if there is none). */\r\n\tprivate function get_texture():Texture\r\n\t{\r\n\t\treturn _texture;\r\n\t}\r\n\t\r\n\tprivate function set_texture(value:Texture):Texture\r\n\t{\r\n\t\tif (value != _texture) \r\n\t\t{\r\n\t\t\tif (value != null) \r\n\t\t\t{\r\n\t\t\t\tvar i:Int;\r\n\t\t\t\tvar numVertices:Int = (_vertexData != null) ? _vertexData.numVertices:0;\r\n\t\t\t\t\r\n\t\t\t\tfor (i in 0...numVertices){\r\n\t\t\t\t\tgetTexCoords(i, sPoint);\r\n\t\t\t\t\tvalue.setTexCoords(_vertexData, i, \"texCoords\", sPoint.x, sPoint.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t_texture = value;\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The smoothing filter that is used for the texture. @default bilinear */\r\n\tprivate function get_textureSmoothing():String\r\n\t{\r\n\t\treturn _textureSmoothing;\r\n\t}\r\n\t\r\n\tprivate function set_textureSmoothing(value:String):String\r\n\t{\r\n\t\tif (value != _textureSmoothing) \r\n\t\t{\r\n\t\t\t_textureSmoothing = value;\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The target the style is currently assigned to. */\r\n\tprivate function get_target():Mesh\r\n\t{\r\n\t\treturn _target;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//  Starling Framework\r\n//  Copyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport openfl.errors.Error;\r\n\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\n\r\nimport starling.rendering.IndexData;\r\nimport starling.rendering.MeshStyle;\r\nimport starling.rendering.Painter;\r\nimport starling.rendering.VertexData;\r\nimport starling.rendering.VertexDataFormat;\r\nimport starling.textures.Texture;\r\nimport starling.utils.MeshUtil;\r\n\r\n\r\n\r\n/** The base class for all tangible (non-container) display objects, spawned up by a number\r\n *  of triangles.\r\n *\r\n *  <p>Since Starling uses Stage3D for rendering, all rendered objects must be constructed\r\n *  from triangles. A mesh stores the information of its triangles through VertexData and\r\n *  IndexData structures. The default format stores position, color and texture coordinates\r\n *  for each vertex.</p>\r\n *\r\n *  <p>How a mesh is rendered depends on its style. Per default, this is an instance\r\n *  of the <code>MeshStyle</code> base class; however, subclasses may extend its behavior\r\n *  to add support for color transformations, normal mapping, etc.</p>\r\n *\r\n *  @see MeshBatch\r\n *  @see starling.rendering.MeshStyle\r\n *  @see starling.rendering.VertexData\r\n *  @see starling.rendering.IndexData\r\n */\r\nclass Mesh extends DisplayObject\r\n{\r\n\tprivate var vertexData(get, never):VertexData;\r\n\tprivate var indexData(get, never):IndexData;\r\n\tpublic var style(get, set):MeshStyle;\r\n\tpublic var texture(get, set):Texture;\r\n\tpublic var color(get, set):Int;\r\n\tpublic var textureSmoothing(get, set):String;\r\n\tpublic var pixelSnapping(get, set):Bool;\r\n\tpublic var numVertices(get, set):Int;\r\n\tpublic var numIndices(get, set):Int;\r\n\tpublic var numTriangles(get, never):Int;\r\n\tpublic var vertexFormat(get, never):VertexDataFormat;\r\n\tpublic static var defaultStyle(get, set):Class<Dynamic>;\r\n\r\n\t/** @private */@:allow(starling.display)\r\n\tprivate var _style:MeshStyle;\r\n\t/** @private */@:allow(starling.display)\r\n\tprivate var _vertexData:VertexData;\r\n\t/** @private */@:allow(starling.display)\r\n\tprivate var _indexData:IndexData;\r\n\t\r\n\tprivate var _pixelSnapping:Bool;\r\n\tprivate static var sDefaultStyle:Class<Dynamic> = MeshStyle;\r\n\t\r\n\t/** Creates a new mesh with the given vertices and indices.\r\n\t *  If you don't pass a style, an instance of <code>MeshStyle</code> will be created\r\n\t *  for you. Note that the format of the vertex data will be matched to the\r\n\t *  given style right away. */\r\n\tpublic function new(vertexData:VertexData, indexData:IndexData, style:MeshStyle = null)\r\n\t{\r\n\t\tsuper();\r\n\t\tif (vertexData == null)\t\t\t throw new ArgumentError(\"VertexData must not be null\");\r\n\t\tif (indexData == null)\t\t\t throw new ArgumentError(\"IndexData must not be null\");\r\n\t\t\r\n\t\t_vertexData = vertexData;\r\n\t\t_indexData = indexData;\r\n\t\t_pixelSnapping = true;\r\n\t\t\r\n\t\tsetStyle(style, false);\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\t_vertexData.clear();\r\n\t\t_indexData.clear();\r\n\t\t\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function hitTest(localPoint:Point):DisplayObject\r\n\t{\r\n\t\tif (!visible || !touchable || !hitTestMask(localPoint))\t\t\t return null\r\n\t\telse return (MeshUtil.containsPoint(_vertexData, _indexData, localPoint)) ? this:null;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function getBounds(targetSpace:DisplayObject, out:Rectangle = null):Rectangle\r\n\t{\r\n\t\treturn MeshUtil.calculateBounds(_vertexData, this, targetSpace, out);\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function render(painter:Painter):Void\r\n\t{\r\n\t\tif (_pixelSnapping) \r\n\t\t\tsnapToPixels(painter.state.modelviewMatrix, painter.pixelSize);\r\n\t\t\r\n\t\tpainter.batchMesh(this);\r\n\t}\r\n\t\r\n\tprivate function snapToPixels(matrix:Matrix, pixelSize:Float):Void\r\n\t{\r\n\t\t// Snapping only makes sense if the object is unscaled and rotated only by\r\n\t\t// multiples of 90 degrees. If that's the case can be found out by looking\r\n\t\t// at the modelview matrix.\r\n\t\t\r\n\t\tvar E:Float = 0.0001;\r\n\t\t\r\n\t\tvar doSnap:Bool = false;\r\n\t\tvar aSq:Float;\r\n\t\tvar bSq:Float;\r\n\t\tvar cSq:Float;\r\n\t\tvar dSq:Float;\r\n\t\t\r\n\t\tif (matrix.b + E > 0 && matrix.b - E < 0 && matrix.c + E > 0 && matrix.c - E < 0) \r\n\t\t{\r\n\t\t\t// what we actually want is 'Math.abs(matrix.a)', but squaring\r\n\t\t\t// the value works just as well for our needs & is faster.\r\n\t\t\t\r\n\t\t\taSq = matrix.a * matrix.a;\r\n\t\t\tdSq = matrix.d * matrix.d;\r\n\t\t\tdoSnap = aSq + E > 1 && aSq - E < 1 && dSq + E > 1 && dSq - E < 1;\r\n\t\t}\r\n\t\telse if (matrix.a + E > 0 && matrix.a - E < 0 && matrix.d + E > 0 && matrix.d - E < 0) \r\n\t\t{\r\n\t\t\tbSq = matrix.b * matrix.b;\r\n\t\t\tcSq = matrix.c * matrix.c;\r\n\t\t\tdoSnap = bSq + E > 1 && bSq - E < 1 && cSq + E > 1 && cSq - E < 1;\r\n\t\t}\r\n\t\t\r\n\t\tif (doSnap) \r\n\t\t{\r\n\t\t\tmatrix.tx = Math.round(matrix.tx / pixelSize) * pixelSize;\r\n\t\t\tmatrix.ty = Math.round(matrix.ty / pixelSize) * pixelSize;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Sets the style that is used to render the mesh. Styles (which are always subclasses of\r\n\t *  <code>MeshStyle</code>) provide a means to completely modify the way a mesh is rendered.\r\n\t *  For example, they may add support for color transformations or normal mapping.\r\n\t *\r\n\t *  <p>When assigning a new style, the vertex format will be changed to fit it.\r\n\t *  Do not use the same style instance on multiple objects! Instead, make use of\r\n\t *  <code>style.clone()</code> to assign an identical style to multiple meshes.</p>\r\n\t *\r\n\t *  @param meshStyle\t\t\t the style to assign. If <code>null</code>, an instance of\r\n\t *\t\t\t\t\t\t\t   a standard <code>MeshStyle</code> will be created.\r\n\t *  @param mergeWithPredecessor  if enabled, all attributes of the previous style will be\r\n\t *\t\t\t\t\t\t\t   be copied to the new one, if possible.\r\n\t */\r\n\tpublic function setStyle(meshStyle:MeshStyle = null, mergeWithPredecessor:Bool = true):Void\r\n\t{\r\n\t\tif (meshStyle == null) meshStyle = cast(Type.createInstance(sDefaultStyle, []), MeshStyle);\r\n\t\telse if (meshStyle == _style) return;\r\n\t\telse if (meshStyle.target != null) meshStyle.target.setStyle();\r\n\t\t\r\n\t\tif (_style != null) \r\n\t\t{\r\n\t\t\tif (mergeWithPredecessor) meshStyle.copyFrom(_style);\r\n\t\t\t_style.setTarget(null);\r\n\t\t}\r\n\t\t\r\n\t\t_style = meshStyle;\r\n\t\t_style.setTarget(this, _vertexData, _indexData);\r\n\t}\r\n\t\r\n\t// vertex manipulation\r\n\t\r\n\t/** Returns the alpha value of the vertex at the specified index. */\r\n\tpublic function getVertexAlpha(vertexID:Int):Float\r\n\t{\r\n\t\treturn _style.getVertexAlpha(vertexID);\r\n\t}\r\n\t\r\n\t/** Sets the alpha value of the vertex at the specified index to a certain value. */\r\n\tpublic function setVertexAlpha(vertexID:Int, alpha:Float):Void\r\n\t{\r\n\t\t_style.setVertexAlpha(vertexID, alpha);\r\n\t}\r\n\t\r\n\t/** Returns the RGB color of the vertex at the specified index. */\r\n\tpublic function getVertexColor(vertexID:Int):Int\r\n\t{\r\n\t\treturn _style.getVertexColor(vertexID);\r\n\t}\r\n\t\r\n\t/** Sets the RGB color of the vertex at the specified index to a certain value. */\r\n\tpublic function setVertexColor(vertexID:Int, color:Int):Void\r\n\t{\r\n\t\t_style.setVertexColor(vertexID, color);\r\n\t}\r\n\t\r\n\t/** Returns the texture coordinates of the vertex at the specified index. */\r\n\tpublic function getTexCoords(vertexID:Int, out:Point = null):Point\r\n\t{\r\n\t\treturn _style.getTexCoords(vertexID, out);\r\n\t}\r\n\t\r\n\t/** Sets the texture coordinates of the vertex at the specified index to the given values. */\r\n\tpublic function setTexCoords(vertexID:Int, u:Float, v:Float):Void\r\n\t{\r\n\t\t_style.setTexCoords(vertexID, u, v);\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** The vertex data describing all vertices of the mesh.\r\n\t *  Any change requires a call to <code>setRequiresRedraw</code>. */\r\n\tprivate function get_vertexData():VertexData\r\n\t{\r\n\t\treturn _vertexData;\r\n\t}\r\n\t\r\n\t/** The index data describing how the vertices are interconnected.\r\n\t *  Any change requires a call to <code>setRequiresRedraw</code>. */\r\n\tprivate function get_indexData():IndexData\r\n\t{\r\n\t\treturn _indexData;\r\n\t}\r\n\t\r\n\t/** The style that is used to render the mesh. Styles (which are always subclasses of\r\n\t *  <code>MeshStyle</code>) provide a means to completely modify the way a mesh is rendered.\r\n\t *  For example, they may add support for color transformations or normal mapping.\r\n\t *\r\n\t *  <p>The setter will simply forward the assignee to <code>setStyle(value)</code>.</p>\r\n\t *\r\n\t *  @default MeshStyle\r\n\t */\r\n\tprivate function get_style():MeshStyle\r\n\t{\r\n\t\treturn _style;\r\n\t}\r\n\t\r\n\tprivate function set_style(value:MeshStyle):MeshStyle\r\n\t{\r\n\t\tsetStyle(value);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The texture that is mapped to the mesh (or <code>null</code>, if there is none). */\r\n\tprivate function get_texture():Texture\r\n\t{\r\n\t\treturn _style.texture;\r\n\t}\r\n\t\r\n\tprivate function set_texture(value:Texture):Texture\r\n\t{\r\n\t\t_style.texture = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Changes the color of all vertices to the same value.\r\n\t *  The getter simply returns the color of the first vertex. */\r\n\tprivate function get_color():Int\r\n\t{\r\n\t\treturn _style.color;\r\n\t}\r\n\t\r\n\tprivate function set_color(value:Int):Int\r\n\t{\r\n\t\t_style.color = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The smoothing filter that is used for the texture.\r\n\t *  @default bilinear */\r\n\tprivate function get_textureSmoothing():String\r\n\t{\r\n\t\treturn _style.textureSmoothing;\r\n\t}\r\n\t\r\n\tprivate function set_textureSmoothing(value:String):String\r\n\t{\r\n\t\t_style.textureSmoothing = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Controls whether or not the mesh object is snapped to the nearest pixel. This\r\n\t *  can prevent the object from looking blurry when it's not exactly aligned with the\r\n\t *  pixels of the screen. For this to work, the object must be unscaled and may only\r\n\t *  be rotated by multiples of 90 degrees. @default true */\r\n\tprivate function get_pixelSnapping():Bool\r\n\t{\r\n\t\treturn _pixelSnapping;\r\n\t}\r\n\t\r\n\tprivate function set_pixelSnapping(value:Bool):Bool\r\n\t{\r\n\t\t_pixelSnapping = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The total number of vertices in the mesh. */\r\n\tprivate function get_numVertices():Int {\r\n\t\treturn _vertexData.numVertices;\r\n\t}\r\n\t\r\n\t/** The total number of indices referencing vertices. */\r\n\tprivate function get_numIndices():Int {\r\n\t\treturn _indexData.numIndices;\r\n\t}\r\n\t\r\n\t/** The total number of vertices in the mesh. If you change this to a smaller value,\r\n\t *  the surplus will be deleted. Make sure that no indices reference those deleted\r\n\t *  vertices! */\r\n\tprivate function set_numVertices(value:Int):Int\r\n\t{\r\n\t\tthrow new Error(\"Only available in MeshBatch\");\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\t/** The total number of indices in the mesh. If you change this to a smaller value,\r\n\t *  the surplus will be deleted. Always make sure that the number of indices\r\n\t *  is a multiple of three! */\r\n\tprivate function set_numIndices(value:Int):Int\r\n\t{\r\n\t\t throw new Error(\"Only available in MeshBatch\");\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\t/** The total number of triangles in this mesh.\r\n\t *  (In other words: the number of indices divided by three.) */\r\n\tprivate function get_numTriangles():Int\r\n\t{\r\n\t\treturn _indexData.numTriangles;\r\n\t}\r\n\t\r\n\t/** The format used to store the vertices. */\r\n\tprivate function get_vertexFormat():VertexDataFormat\r\n\t{\r\n\t\treturn _style.vertexFormat;\r\n\t}\r\n\t\r\n\t// static properties\r\n\t\r\n\t/** The default style used for meshes if no specific style is provided. The default is\r\n\t *  <code>starling.rendering.MeshStyle</code>, and any assigned class must be a subclass\r\n\t *  of the same. */\r\n\tprivate static function get_defaultStyle():Class<Dynamic>\r\n\t{\r\n\t\treturn sDefaultStyle;\r\n\t}\r\n\t\r\n\tprivate static function set_defaultStyle(value:Class<Dynamic>):Class<Dynamic>\r\n\t{\r\n\t\tsDefaultStyle = value;\r\n\t\treturn value;\r\n\t}\r\n}","  // =================================================================================================  \r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\nimport openfl.errors.ArgumentError;\r\n\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Matrix3D;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.geom.Vector3D;\r\n\r\nimport starling.rendering.IndexData;\r\nimport starling.rendering.MeshStyle;\r\nimport starling.rendering.VertexData;\r\nimport starling.textures.Texture;\r\nimport starling.utils.RectangleUtil;\r\n\r\n/** A Quad represents a colored and/or textured rectangle.\r\n *\r\n *  <p>Quads may have a color and a texture. When assigning a texture, the colors of the\r\n *  vertices will \"tint\" the texture, i.e. the vertex color will be multiplied with the color\r\n *  of the texture at the same position. That's why the default color of a quad is pure white:\r\n *  tinting with white does not change the texture color (that's a multiplication with one).</p>\r\n *\r\n *  <p>A quad is, by definition, always rectangular. The basic quad class will always contain\r\n *  exactly four vertices, arranged like this:</p>\r\n *\r\n *  <pre>\r\n *  0 - 1\r\n *  | / |\r\n *  2 - 3\r\n *  </pre>\r\n *\r\n *  <p>You can set the color of each vertex individually; and since the colors will smoothly\r\n *  fade into each other over the area of the quad, you can use this to create simple linear\r\n *  color gradients (e.g. by assigning one color to vertices 0 and 1 and another to vertices\r\n *  2 and 3).</p>\r\n *\r\n *  <p>However, note that the number of vertices may be different in subclasses.\r\n *  Check the property <code>numVertices</code> if you are unsure.</p>\r\n *\r\n *  @see starling.textures.Texture\r\n *  @see Image\r\n */\r\nclass Quad extends Mesh\r\n{\r\n\tprivate var _bounds:Rectangle;\r\n\t\r\n\t// helper objects\r\n\tprivate static var sPoint3D:Vector3D = new Vector3D();\r\n\tprivate static var sMatrix:Matrix = new Matrix();\r\n\tprivate static var sMatrix3D:Matrix3D = new Matrix3D();\r\n\t\r\n\t/** Creates a quad with a certain size and color. */\r\n\tpublic function new(width:Float, height:Float, color:Int = 0xffffff)\r\n\t{\r\n\t\t_bounds = new Rectangle(0, 0, width, height);\r\n\t\t\r\n\t\tvar vertexData:VertexData = new VertexData(MeshStyle.VERTEX_FORMAT, 4);\r\n\t\tvar indexData:IndexData = new IndexData(6);\r\n\t\t\r\n\t\tsuper(vertexData, indexData);\r\n\t\t\r\n\t\tif (width == 0.0 || height == 0.0) \r\n\t\t\tthrow new ArgumentError(\"Invalid size: width and height must not be zero\");\r\n\t\t\r\n\t\tsetupVertices();\r\n\t\tthis.color = color;\r\n\t}\r\n\t\r\n\t/** Sets up vertex- and index-data according to the current settings. */\r\n\tprivate function setupVertices():Void\r\n\t{\r\n\t\tvar posAttr:String = \"position\";\r\n\t\tvar texAttr:String = \"texCoords\";\r\n\t\tvar texture:Texture = style.texture;\r\n\t\tvar vertexData:VertexData = this.vertexData;\r\n\t\tvar indexData:IndexData = this.indexData;\r\n\t\t\r\n\t\tindexData.numIndices = 0;\r\n\t\tindexData.addQuad(0, 1, 2, 3);\r\n\t\tvertexData.numVertices = 4;\r\n\t\t\r\n\t\tif (texture != null) \r\n\t\t{\r\n\t\t\ttexture.setupVertexPositions(vertexData, 0, \"position\", _bounds);\r\n\t\t\ttexture.setupTextureCoordinates(vertexData, 0, texAttr);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tvertexData.setPoint(0, posAttr, _bounds.left, _bounds.top);\r\n\t\t\tvertexData.setPoint(1, posAttr, _bounds.right, _bounds.top);\r\n\t\t\tvertexData.setPoint(2, posAttr, _bounds.left, _bounds.bottom);\r\n\t\t\tvertexData.setPoint(3, posAttr, _bounds.right, _bounds.bottom);\r\n\t\t\t\r\n\t\t\tvertexData.setPoint(0, texAttr, 0.0, 0.0);\r\n\t\t\tvertexData.setPoint(1, texAttr, 1.0, 0.0);\r\n\t\t\tvertexData.setPoint(2, texAttr, 0.0, 1.0);\r\n\t\t\tvertexData.setPoint(3, texAttr, 1.0, 1.0);\r\n\t\t}\r\n\t\t\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function getBounds(targetSpace:DisplayObject, out:Rectangle = null):Rectangle\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Rectangle();\r\n\t\t\r\n\t\tif (targetSpace == this)   // optimization  \r\n\t\t{\r\n\t\t\tout.copyFrom(_bounds);\r\n\t\t}\r\n\t\telse if (targetSpace == parent && rotation == 0.0)   // optimization  \r\n\t\t{\r\n\t\t\tvar scaleX:Float = this.scaleX;\r\n\t\t\tvar scaleY:Float = this.scaleY;\r\n\t\t\t\r\n\t\t\tout.setTo(x - pivotX * scaleX, y - pivotY * scaleY,\r\n\t\t\t\t\t_bounds.width * scaleX, _bounds.height * scaleY);\r\n\t\t\t\r\n\t\t\tif (scaleX < 0) {out.width *= -1;out.x -= out.width;\r\n\t\t\t}\r\n\t\t\tif (scaleY < 0) {out.height *= -1;out.y -= out.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (is3D && stage != null) \r\n\t\t{\r\n\t\t\tstage.getCameraPosition(targetSpace, sPoint3D);\r\n\t\t\tgetTransformationMatrix3D(targetSpace, sMatrix3D);\r\n\t\t\tRectangleUtil.getBoundsProjected(_bounds, sMatrix3D, sPoint3D, out);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tgetTransformationMatrix(targetSpace, sMatrix);\r\n\t\t\tRectangleUtil.getBounds(_bounds, sMatrix, out);\r\n\t\t}\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function hitTest(localPoint:Point):DisplayObject\r\n\t{\r\n\t\tif (!visible || !touchable || !hitTestMask(localPoint))\t\t\t return null\r\n\t\telse if (_bounds.containsPoint(localPoint))\t\t\t return this\r\n\t\telse return null;\r\n\t}\r\n\t\r\n\t/** Readjusts the dimensions of the quad. Use this method without any arguments to\r\n\t *  synchronize quad and texture size after assigning a texture with a different size.\r\n\t *  You can also force a certain width and height by passing positive, non-zero\r\n\t *  values for width and height. */\r\n\tpublic function readjustSize(width:Float = -1, height:Float = -1):Void\r\n\t{\r\n\t\tif (width <= 0)\t\t\t width = (texture != null) ? texture.frameWidth:_bounds.width;\r\n\t\tif (height <= 0)\t\t\t height = (texture != null) ? texture.frameHeight:_bounds.height;\r\n\t\t\r\n\t\tif (width != _bounds.width || height != _bounds.height) \r\n\t\t{\r\n\t\t\t_bounds.setTo(0, 0, width, height);\r\n\t\t\tsetupVertices();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Creates a quad from the given texture.\r\n\t *  The quad will have the same size as the texture. */\r\n\tpublic static function fromTexture(texture:Texture):Quad\r\n\t{\r\n\t\tvar quad:Quad = new Quad(100, 100);\r\n\t\tquad.texture = texture;\r\n\t\tquad.readjustSize();\r\n\t\treturn quad;\r\n\t}\r\n\t\r\n\t/** The texture that is mapped to the quad (or <code>null</code>, if there is none).\r\n\t *  Per default, it is mapped to the complete quad, i.e. to the complete area between the\r\n\t *  top left and bottom right vertices. This can be changed with the\r\n\t *  <code>setTexCoords</code>-method.\r\n\t *\r\n\t *  <p>Note that the size of the quad will not change when you assign a texture, which\r\n\t *  means that the texture might be distorted at first. Call <code>readjustSize</code> to\r\n\t *  synchronize quad and texture size.</p>\r\n\t *\r\n\t *  <p>You could also set the texture via the <code>style.texture</code> property.\r\n\t *  That way, however, the texture frame won't be taken into account. Since only rectangular\r\n\t *  objects can make use of a texture frame, only a property on the Quad class can do that.\r\n\t *  </p>\r\n\t */\r\n\toverride private function set_texture(value:Texture):Texture\r\n\t{\r\n\t\tif (value != texture) \r\n\t\t{\r\n\t\t\tsuper.texture = value;\r\n\t\t\tsetupVertices();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\nimport starling.display.Quad;\r\n\r\nimport openfl.geom.Rectangle;\r\n\r\nimport starling.rendering.IndexData;\r\nimport starling.rendering.VertexData;\r\nimport starling.textures.Texture;\r\n\r\n/** An Image is a quad with a texture mapped onto it.\r\n *\r\n *  <p>Typically, the Image class will act as an equivalent of Flash's Bitmap class. Instead\r\n *  of BitmapData, Starling uses textures to represent the pixels of an image. To display a\r\n *  texture, you have to map it onto a quad - and that's what the Image class is for.</p>\r\n *\r\n *  <p>While the base class <code>Quad</code> already supports textures, the <code>Image</code>\r\n *  class adds some additional functionality.</p>\r\n *\r\n *  <p>First of all, it provides a convenient constructor that will automatically synchronize\r\n *  the size of the image with the displayed texture.</p>\r\n *\r\n *  <p>Furthermore, it adds support for a \"Scale9\" grid. This splits up the image into\r\n *  nine regions, the corners of which will always maintain their original aspect ratio.\r\n *  The center region stretches in both directions to fill the remaining space; the side\r\n *  regions will stretch accordingly in either horizontal or vertical direction.</p>\r\n *\r\n *  <p>Finally, you can repeat a texture horizontally and vertically within the image's region,\r\n *  just like the tiles of a wallpaper. Use the <code>tileGrid</code> property to do that.</p>\r\n *\r\n *  @see starling.textures.Texture\r\n *  @see Quad\r\n */\r\nclass Image extends Quad\r\n{\r\n\tpublic var scale9Grid(get, set):Rectangle;\r\n\tpublic var tileGrid(get, set):Rectangle;\r\n\r\n\tprivate var _scale9Grid:Rectangle;\r\n\tprivate var _tileGrid:Rectangle;\r\n\t\r\n\t// helper objects\r\n\tprivate static var s9Grid:Rectangle = new Rectangle();\r\n\tprivate static var sBounds:Rectangle = new Rectangle();\r\n\tprivate static var sHorizSizes:Array<Float> = new Array<Float>();\r\n\tprivate static var sVertSizes:Array<Float> = new Array<Float>();\r\n\t\r\n\t/** Creates an image with a texture mapped onto it. */\r\n\tpublic function new(texture:Texture)\r\n\t{\r\n\t\tsuper(100, 100);\r\n\t\tthis.texture = texture;\r\n\t\treadjustSize();\r\n\t}\r\n\t\r\n\t/** The current scaling grid that is in effect. If set to null, the image is scaled just\r\n\t *  like any other display object; assigning a rectangle will divide the image into a grid\r\n\t *  of nine regions, based on the center rectangle. The four corners of this grid will\r\n\t *  always maintain their original aspect ratio; the other regions will stretch accordingly\r\n\t *  (horizontally, vertically, or both) to fill the complete area.\r\n\t *\r\n\t *  <p>Notes:</p>\r\n\t *\r\n\t *  <ul>\r\n\t *  <li>Assigning a Scale9 rectangle will change the number of vertices to sixteen,\r\n\t *  and all vertices will be colored like vertex 0 (the top left vertex).</li>\r\n\t *  <li>An image can have either a <code>scale9Grid</code> or a <code>tileGrid</code>, but\r\n\t *  not both. Assigning one will delete the other.</li>\r\n\t *  <li>Changes will only be applied on assignment. To force an update, simply call\r\n\t *  <code>image.scale9Grid = image.scale9Grid</code>.</li>\r\n\t *  <li>Furthermore, with a Scale9 rectangle assigned, any change of the texture will\r\n\t *  implicitly call <code>readjustSize</code>.</li>\r\n\t *  </ul>\r\n\t *\r\n\t *  @default null\r\n\t */\r\n\tprivate function get_scale9Grid():Rectangle\r\n\t{\r\n\t\treturn _scale9Grid;\r\n\t}\r\n\t\r\n\tprivate function set_scale9Grid(value:Rectangle):Rectangle\r\n\t{\r\n\t\tif (value != null) \r\n\t\t{\r\n\t\t\tif (_scale9Grid == null)\t\t\t\t _scale9Grid = value.clone()\r\n\t\t\telse _scale9Grid.copyFrom(value);\r\n\t\t\t\r\n\t\t\t_tileGrid = null;\r\n\t\t}\r\n\t\telse _scale9Grid = null;\r\n\t\t\r\n\t\tsetupVertices();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The current tiling grid that is in effect. If set to null, the image is scaled just\r\n\t *  like any other display object; assigning a rectangle will divide the image into a grid\r\n\t *  displaying the current texture in each and every cell. The assigned rectangle points\r\n\t *  to the bounds of one cell; all other elements will be calculated accordingly. A zero\r\n\t *  or negative value for the rectangle's width or height will be replaced with the actual\r\n\t *  texture size. Thus, you can make a 2x2 grid simply like this:\r\n\t *\r\n\t *  <listing>\r\n\t *  var image:Image = new Image(texture);\r\n\t *  image.tileGrid = new Rectangle();\r\n\t *  image.scale = 2;</listing>\r\n\t *\r\n\t *  <p>Notes:</p>\r\n\t *\r\n\t *  <ul>\r\n\t *  <li>Assigning a tile rectangle will change the number of vertices to whatever is\r\n\t *  required by the grid. New vertices will be colored just like vertex 0 (the top left\r\n\t *  vertex).</li>\r\n\t *  <li>An image can have either a <code>scale9Grid</code> or a <code>tileGrid</code>, but\r\n\t *  not both. Assigning one will delete the other.</li>\r\n\t *  <li>Changes will only be applied on assignment. To force an update, simply call\r\n\t *  <code>image.tileGrid = image.tileGrid</code>.</li>\r\n\t *  </ul>\r\n\t *\r\n\t *  @default null\r\n\t */\r\n\tprivate function get_tileGrid():Rectangle\r\n\t{\r\n\t\treturn _tileGrid;\r\n\t}\r\n\t\r\n\tprivate function set_tileGrid(value:Rectangle):Rectangle\r\n\t{\r\n\t\tif (value != null) \r\n\t\t{\r\n\t\t\tif (_tileGrid == null) _tileGrid = value.clone()\r\n\t\t\telse _tileGrid.copyFrom(value);\r\n\t\t\t\r\n\t\t\t_scale9Grid = null;\r\n\t\t}\r\n\t\telse _tileGrid = null;\r\n\t\t\r\n\t\tsetupVertices();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function setupVertices():Void\r\n\t{\r\n\t\tif (texture != null && _scale9Grid != null)\t\t\t setupScale9Grid()\r\n\t\telse if (texture != null && _tileGrid != null)\t\t\t setupTileGrid()\r\n\t\telse super.setupVertices();\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_scaleX(value:Float):Float\r\n\t{\r\n\t\tsuper.scaleX = value;\r\n\t\tif (texture != null && (_scale9Grid != null || _tileGrid != null))\t\t\t setupVertices();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_scaleY(value:Float):Float\r\n\t{\r\n\t\tsuper.scaleY = value;\r\n\t\tif (texture != null && (_scale9Grid != null || _tileGrid != null))\t\t\t setupVertices();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_texture(value:Texture):Texture\r\n\t{\r\n\t\tif (value != texture) \r\n\t\t{\r\n\t\t\tsuper.texture = value;\r\n\t\t\tif (_scale9Grid != null && value != null)\t\t\t\t readjustSize();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t// vertex setup\r\n\t\r\n\tprivate function setupScale9Grid():Void\r\n\t{\r\n\t\ts9Grid.copyFrom(_scale9Grid);\r\n\t\t\r\n\t\tvar texture:Texture = this.texture;\r\n\t\tvar frame:Rectangle = texture.frame;\r\n\t\tvar absScaleX:Float = scaleX > (0) ? scaleX:-scaleX;\r\n\t\tvar absScaleY:Float = scaleY > (0) ? scaleY:-scaleY;\r\n\t\tvar invScaleX:Float = 1.0 / absScaleX;\r\n\t\tvar invScaleY:Float = 1.0 / absScaleY;\r\n\t\tvar vertexData:VertexData = this.vertexData;\r\n\t\tvar indexData:IndexData = this.indexData;\r\n\t\tvar prevNumVertices:Int = vertexData.numVertices;\r\n\t\tvar startX:Float = 0.0;\r\n\t\tvar startY:Float = 0.0;\r\n\t\tvar col:Float;\r\n\t\tvar row:Float;\r\n\t\tvar correction:Float;\r\n\t\t\r\n\t\tindexData.numIndices = 0;\r\n\t\tvertexData.numVertices = 16;\r\n\t\t\r\n\t\t// calculate 3x3 grid according to texture and scale9 properties,\r\n\t\t// taking special care about the texture frame (headache included)\r\n\t\t\r\n\t\tif (frame != null) \r\n\t\t{\r\n\t\t\ts9Grid.x += frame.x;\r\n\t\t\ts9Grid.y += frame.y;\r\n\t\t\tstartX = invScaleX * -frame.x;\r\n\t\t\tstartY = invScaleY * -frame.y;\r\n\t\t}\r\n\t\t\r\n\t\tsHorizSizes[0] = s9Grid.x * invScaleX;\r\n\t\tsHorizSizes[1] = texture.frameWidth - (texture.frameWidth - s9Grid.width) * invScaleX;\r\n\t\tsHorizSizes[2] = (texture.width - s9Grid.right) * invScaleX;\r\n\t\t\r\n\t\tsVertSizes[0] = s9Grid.y * invScaleY;\r\n\t\tsVertSizes[1] = texture.frameHeight - (texture.frameHeight - s9Grid.height) * invScaleY;\r\n\t\tsVertSizes[2] = (texture.height - s9Grid.bottom) * invScaleY;\r\n\t\t\r\n\t\t// if the total width / height becomes smaller than the outer columns / rows,\r\n\t\t// we hide the center column / row and scale the rest normally.\r\n\t\t\r\n\t\tif (sHorizSizes[1] < 0) \r\n\t\t{\r\n\t\t\tcorrection = texture.frameWidth / (texture.frameWidth - s9Grid.width) * absScaleX;\r\n\t\t\tstartX *= correction;\r\n\t\t\tsHorizSizes[0] *= correction;\r\n\t\t\tsHorizSizes[1] = 0;\r\n\t\t\tsHorizSizes[2] *= correction;\r\n\t\t}\r\n\t\t\r\n\t\tif (sVertSizes[1] < 0) \r\n\t\t{\r\n\t\t\tcorrection = texture.frameHeight / (texture.frameHeight - s9Grid.height) * absScaleY;\r\n\t\t\tstartY *= correction;\r\n\t\t\tsVertSizes[0] *= correction;\r\n\t\t\tsVertSizes[1] = 0;\r\n\t\t\tsVertSizes[2] *= correction;\r\n\t\t}  // set the vertex positions according to the values calculated above  \r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tvar posX:Float;\r\n\t\tvar posY:Float = startY;\r\n\t\tvar vertexID:Int = 0;\r\n\t\t\r\n\t\tfor (row in 0...4){\r\n\t\t\tposX = startX;\r\n\t\t\t\r\n\t\t\tfor (col in 0...4){\r\n\t\t\t\tvertexData.setPoint(vertexID++, \"position\", posX, posY);\r\n\t\t\t\tif (col != 3)\t\t\t\t\t posX += sHorizSizes[col];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (row != 3)\t\t\t\t posY += sVertSizes[row];\r\n\t\t}  // now set the texture coordinates  \r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tvar paddingLeft:Float = (frame != null) ? -frame.x:0;\r\n\t\tvar paddingTop:Float = (frame != null) ? -frame.y:0;\r\n\t\t\r\n\t\tsHorizSizes[0] = (_scale9Grid.x - paddingLeft) / texture.width;\r\n\t\tsHorizSizes[1] = _scale9Grid.width / texture.width;\r\n\t\tsHorizSizes[2] = 1.0 - sHorizSizes[0] - sHorizSizes[1];\r\n\t\t\r\n\t\tsVertSizes[0] = (_scale9Grid.y - paddingTop) / texture.height;\r\n\t\tsVertSizes[1] = _scale9Grid.height / texture.height;\r\n\t\tsVertSizes[2] = 1.0 - sVertSizes[0] - sVertSizes[1];\r\n\t\t\r\n\t\tposX = posY = vertexID = 0;\r\n\t\t\r\n\t\tfor (row in 0...4){\r\n\t\t\tposX = 0.0;\r\n\t\t\t\r\n\t\t\tfor (col in 0...4){\r\n\t\t\t\ttexture.setTexCoords(vertexData, vertexID++, \"texCoords\", posX, posY);\r\n\t\t\t\tif (col != 3)\t\t\t\t\t posX += sHorizSizes[col];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (row != 3)\t\t\t\t posY += sVertSizes[row];\r\n\t\t}  // update indices  \r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tindexData.addQuad(0, 1, 4, 5);\r\n\t\tindexData.addQuad(1, 2, 5, 6);\r\n\t\tindexData.addQuad(2, 3, 6, 7);\r\n\t\tindexData.addQuad(4, 5, 8, 9);\r\n\t\tindexData.addQuad(5, 6, 9, 10);\r\n\t\tindexData.addQuad(6, 7, 10, 11);\r\n\t\tindexData.addQuad(8, 9, 12, 13);\r\n\t\tindexData.addQuad(9, 10, 13, 14);\r\n\t\tindexData.addQuad(10, 11, 14, 15);\r\n\t\t\r\n\t\t// if we just switched from a normal to a scale9 image, all vertices are colorized\r\n\t\t// just like the first one; we also trim the data instances to optimize memory usage.\r\n\t\t\r\n\t\tif (prevNumVertices != vertexData.numVertices) \r\n\t\t{\r\n\t\t\tvar color:Int = (prevNumVertices != 0) ? vertexData.getColor(0):0xffffff;\r\n\t\t\tvar alpha:Float = (prevNumVertices != 0) ? vertexData.getAlpha(0):1.0;\r\n\t\t\t\r\n\t\t\tvertexData.colorize(\"color\", color, alpha);\r\n\t\t\tvertexData.trim();\r\n\t\t\tindexData.trim();\r\n\t\t}\r\n\t\t\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\tprivate function setupTileGrid():Void\r\n\t{\r\n\t\t// calculate the grid of vertices simulating a repeating / tiled texture.\r\n\t\t// again, texture frames make this somewhat more complicated than one would think.\r\n\t\t\r\n\t\tvar texture:Texture = this.texture;\r\n\t\tvar frame:Rectangle = texture.frame;\r\n\t\tvar vertexData:VertexData = this.vertexData;\r\n\t\tvar indexData:IndexData = this.indexData;\r\n\t\tvar bounds:Rectangle = getBounds(this, sBounds);\r\n\t\tvar prevNumVertices:Int = vertexData.numVertices;\r\n\t\tvar color:Int = (prevNumVertices != 0) ? vertexData.getColor(0):0xffffff;\r\n\t\tvar alpha:Float = (prevNumVertices != 0) ? vertexData.getAlpha(0):1.0;\r\n\t\tvar invScaleX:Float = scaleX > (0) ? 1.0 / scaleX:-1.0 / scaleX;\r\n\t\tvar invScaleY:Float = scaleY > (0) ? 1.0 / scaleY:-1.0 / scaleY;\r\n\t\tvar frameWidth:Float = _tileGrid.width > (0) ? _tileGrid.width:texture.frameWidth;\r\n\t\tvar frameHeight:Float = _tileGrid.height > (0) ? _tileGrid.height:texture.frameHeight;\r\n\t\t\r\n\t\tframeWidth *= invScaleX;\r\n\t\tframeHeight *= invScaleY;\r\n\t\t\r\n\t\tvar tileX:Float = (frame != null) ? -frame.x * (frameWidth / frame.width):0;\r\n\t\tvar tileY:Float = (frame != null) ? -frame.y * (frameHeight / frame.height):0;\r\n\t\tvar tileWidth:Float = texture.width * (frameWidth / texture.frameWidth);\r\n\t\tvar tileHeight:Float = texture.height * (frameHeight / texture.frameHeight);\r\n\t\tvar modX:Float = (_tileGrid.x * invScaleX) % frameWidth;\r\n\t\tvar modY:Float = (_tileGrid.y * invScaleY) % frameHeight;\r\n\t\t\r\n\t\tif (modX < 0)\t\t\t modX += frameWidth;\r\n\t\tif (modY < 0)\t\t\t modY += frameHeight;\r\n\t\t\r\n\t\tvar startX:Float = modX + tileX;\r\n\t\tvar startY:Float = modY + tileY;\r\n\t\t\r\n\t\tif (startX > (frameWidth - tileWidth))\t\t\t startX -= frameWidth;\r\n\t\tif (startY > (frameHeight - tileHeight))\t\t\t startY -= frameHeight;\r\n\t\t\r\n\t\tvar posLeft:Float;\r\n\t\tvar posRight:Float;\r\n\t\tvar posTop:Float;\r\n\t\tvar posBottom:Float;\r\n\t\tvar texLeft:Float;\r\n\t\tvar texRight:Float;\r\n\t\tvar texTop:Float;\r\n\t\tvar texBottom:Float;\r\n\t\tvar posAttrName:String = \"position\";\r\n\t\tvar texAttrName:String = \"texCoords\";\r\n\t\tvar currentX:Float;\r\n\t\tvar currentY:Float = startY;\r\n\t\tvar vertexID:Int = 0;\r\n\t\t\r\n\t\tindexData.numIndices = 0;\r\n\t\t\r\n\t\twhile (currentY < bounds.height)\r\n\t\t{\r\n\t\t\tcurrentX = startX;\r\n\t\t\t\r\n\t\t\twhile (currentX < bounds.width)\r\n\t\t\t{\r\n\t\t\t\tindexData.addQuad(vertexID, vertexID + 1, vertexID + 2, vertexID + 3);\r\n\t\t\t\t\r\n\t\t\t\tposLeft = currentX < (0) ? 0:currentX;\r\n\t\t\t\tposTop = currentY < (0) ? 0:currentY;\r\n\t\t\t\tposRight = currentX + tileWidth > (bounds.width) ? bounds.width:currentX + tileWidth;\r\n\t\t\t\tposBottom = currentY + tileHeight > (bounds.height) ? bounds.height:currentY + tileHeight;\r\n\t\t\t\t\r\n\t\t\t\tvertexData.setPoint(vertexID, posAttrName, posLeft, posTop);\r\n\t\t\t\tvertexData.setPoint(vertexID + 1, posAttrName, posRight, posTop);\r\n\t\t\t\tvertexData.setPoint(vertexID + 2, posAttrName, posLeft, posBottom);\r\n\t\t\t\tvertexData.setPoint(vertexID + 3, posAttrName, posRight, posBottom);\r\n\t\t\t\t\r\n\t\t\t\ttexLeft = (posLeft - currentX) / tileWidth;\r\n\t\t\t\ttexTop = (posTop - currentY) / tileHeight;\r\n\t\t\t\ttexRight = (posRight - currentX) / tileWidth;\r\n\t\t\t\ttexBottom = (posBottom - currentY) / tileHeight;\r\n\t\t\t\t\r\n\t\t\t\ttexture.setTexCoords(vertexData, vertexID, texAttrName, texLeft, texTop);\r\n\t\t\t\ttexture.setTexCoords(vertexData, vertexID + 1, texAttrName, texRight, texTop);\r\n\t\t\t\ttexture.setTexCoords(vertexData, vertexID + 2, texAttrName, texLeft, texBottom);\r\n\t\t\t\ttexture.setTexCoords(vertexData, vertexID + 3, texAttrName, texRight, texBottom);\r\n\t\t\t\t\r\n\t\t\t\tcurrentX += frameWidth;\r\n\t\t\t\tvertexID += 4;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcurrentY += frameHeight;\r\n\t\t}  // trim to actual size  \r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tvertexData.numVertices = vertexID;\r\n\t\t\r\n\t\tfor (i in prevNumVertices...vertexID){\r\n\t\t\tvertexData.setColor(i, \"color\", color);\r\n\t\t\tvertexData.setAlpha(i, \"color\", alpha);\r\n\t\t}\r\n\t\t\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\n\r\n/** A class describing a range of vertices and indices, thus referencing a subset of a Mesh. */\r\nclass MeshSubset\r\n{\r\n\t/** The ID of the first vertex. */\r\n\tpublic var vertexID:Int = 0;\r\n\t\r\n\t/** The total number of vertices. */\r\n\tpublic var numVertices:Int = 0;\r\n\t\r\n\t/** The ID of the first index. */\r\n\tpublic var indexID:Int = 0;\r\n\t\r\n\t/** The total number of indices. */\r\n\tpublic var numIndices:Int = 0;\r\n\t\r\n\t/** Creates a new MeshSubset. */\r\n\tpublic function new(vertexID:Int = 0, numVertices:Int = -1, indexID:Int = 0, numIndices:Int = -1)\r\n\t{\r\n\t\tsetTo(vertexID, numVertices, indexID, numIndices);\r\n\t}\r\n\t\r\n\t/** Changes all properties at once.\r\n\t *  Call without any arguments to reference a complete mesh. */\r\n\tpublic function setTo(vertexID:Int = 0, numVertices:Int = -1, indexID:Int = 0, numIndices:Int = -1):Void\r\n\t{\r\n\t\tthis.vertexID = vertexID;\r\n\t\tthis.numVertices = numVertices;\r\n\t\tthis.indexID = indexID;\r\n\t\tthis.numIndices = numIndices;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\nimport openfl.geom.Matrix;\r\n\r\nimport starling.rendering.IndexData;\r\nimport starling.rendering.MeshEffect;\r\nimport starling.rendering.MeshStyle;\r\nimport starling.rendering.Painter;\r\nimport starling.rendering.VertexData;\r\nimport starling.utils.MeshSubset;\r\n\r\n/** Combines a number of meshes to one display object and renders them efficiently.\r\n *\r\n *  <p>The most basic tangible (non-container) display object in Starling is the Mesh.\r\n *  However, a mesh typically does not render itself; it just holds the data describing its\r\n *  geometry. Rendering is orchestrated by the \"MeshBatch\" class. As its name suggests, it\r\n *  acts as a batch for an arbitrary number of Mesh instances; add meshes to a batch and they\r\n *  are all rendered together, in one draw call.</p>\r\n *\r\n *  <p>You can only batch meshes that share similar properties, e.g. they need to have the\r\n *  same texture and the same blend mode. The first object you add to a batch will decide\r\n *  this state; call <code>canAddMesh</code> to find out if a new mesh shares that state.\r\n *  To reset the current state, you can call <code>clear</code>; this will also remove all\r\n *  geometry that has been added thus far.</p>\r\n *\r\n *  <p>Starling will use MeshBatch instances (or compatible objects) for all rendering.\r\n *  However, you can also instantiate MeshBatch instances yourself and add them to the display\r\n *  tree. That makes sense for an object containing a large number of meshes; that way, that\r\n *  object can be created once and then rendered very efficiently, without having to copy its\r\n *  vertices and indices between buffers and GPU memory.</p>\r\n *\r\n *  @see Mesh\r\n *  @see Sprite\r\n */\r\nclass MeshBatch extends Mesh\r\n{\r\n\tpublic var batchable(get, set):Bool;\r\n\r\n\t/** The maximum number of vertices that fit into one MeshBatch. */\r\n\tpublic static var MAX_NUM_VERTICES:Int = 65535;\r\n\t\r\n\tprivate var _effect:MeshEffect;\r\n\tprivate var _batchable:Bool;\r\n\tprivate var _vertexSyncRequired:Bool;\r\n\tprivate var _indexSyncRequired:Bool;\r\n\t\r\n\t// helper object\r\n\tprivate static var sFullMeshSubset:MeshSubset = new MeshSubset();\r\n\t\r\n\t/** Creates a new, empty MeshBatch instance. */\r\n\tpublic function new()\r\n\t{\r\n\t\tvar vertexData:VertexData = new VertexData();\r\n\t\tvar indexData:IndexData = new IndexData();\r\n\t\t\r\n\t\tsuper(vertexData, indexData);\r\n\t\t\r\n\t\t_batchable = true;\r\n\t}\r\n\t\r\n\t// display object overrides\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\tif (_effect != null) _effect.dispose();\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_supportsRenderCache():Bool\r\n\t{\r\n\t\treturn _batchable && super.supportsRenderCache;\r\n\t}\r\n\t\r\n\tprivate function setVertexAndIndexDataChanged():Void\r\n\t{\r\n\t\t_vertexSyncRequired = _indexSyncRequired = true;\r\n\t}\r\n\t\r\n\tprivate function syncVertexBuffer():Void\r\n\t{\r\n\t\t_effect.uploadVertexData(_vertexData);\r\n\t\t_vertexSyncRequired = false;\r\n\t}\r\n\t\r\n\tprivate function syncIndexBuffer():Void\r\n\t{\r\n\t\t_effect.uploadIndexData(_indexData);\r\n\t\t_indexSyncRequired = false;\r\n\t}\r\n\t\r\n\t/** Removes all geometry. */\r\n\tpublic function clear():Void\r\n\t{\r\n\t\t_vertexData.numVertices = 0;\r\n\t\t_indexData.numIndices = 0;\r\n\t\t_vertexSyncRequired = true;\r\n\t\t_indexSyncRequired = true;\r\n\t}\r\n\t\r\n\t/** Adds a mesh to the batch by appending its vertices and indices.\r\n\t *\r\n\t *  @param mesh\t  the mesh to add to the batch.\r\n\t *  @param matrix\ttransform all vertex positions with a certain matrix. If this\r\n\t *\t\t\t\t   parameter is omitted, <code>mesh.transformationMatrix</code>\r\n\t *\t\t\t\t   will be used instead (except if the last parameter is enabled).\r\n\t *  @param alpha\t will be multiplied with each vertex' alpha value.\r\n\t *  @param subset\tthe subset of the mesh you want to add, or <code>null</code> for\r\n\t *\t\t\t\t   the complete mesh.\r\n\t *  @param ignoreTransformations   when enabled, the mesh's vertices will be added\r\n\t *\t\t\t\t   without transforming them in any way (no matter the value of the\r\n\t *\t\t\t\t   <code>matrix</code> parameter).\r\n\t */\r\n\tpublic function addMesh(mesh:Mesh, matrix:Matrix = null, alpha:Float = 1.0,\r\n\t\t\tsubset:MeshSubset = null, ignoreTransformations:Bool = false):Void\r\n\t{\r\n\t\tif (ignoreTransformations)\t\t\t matrix = null\r\n\t\telse if (matrix == null)\t\t\t matrix = mesh.transformationMatrix;\r\n\t\tif (subset == null)\t\t\t subset = sFullMeshSubset;\r\n\t\t\r\n\t\tvar targetVertexID:Int = _vertexData.numVertices;\r\n\t\tvar targetIndexID:Int = _indexData.numIndices;\r\n\t\tvar meshStyle:MeshStyle = mesh._style;\r\n\t\t\r\n\t\tif (targetVertexID == 0) \r\n\t\t\tsetupFor(mesh);\r\n\t\t\r\n\t\tmeshStyle.batchVertexData(_style, targetVertexID, matrix, subset.vertexID, subset.numVertices);\r\n\t\tmeshStyle.batchIndexData(_style, targetIndexID, targetVertexID - subset.vertexID,\r\n\t\t\t\tsubset.indexID, subset.numIndices);\r\n\t\t\r\n\t\tif (alpha != 1.0) _vertexData.scaleAlphas(\"color\", alpha, targetVertexID, subset.numVertices);\r\n\t\tif (_batchable) setRequiresRedraw();\r\n\t\t\r\n\t\t_indexSyncRequired = _vertexSyncRequired = true;\r\n\t}\r\n\t\r\n\t/** Adds a mesh to the batch by copying its vertices and indices to the given positions.\r\n\t *  Beware that you need to check for yourself if those positions make sense; for example,\r\n\t *  you need to make sure that they are aligned within the 3-indices groups making up\r\n\t *  the mesh's triangles.\r\n\t *\r\n\t *  <p>It's easiest to only add objects with an identical setup, e.g. only quads.\r\n\t *  For the latter, indices are aligned in groups of 6 (one quad requires six indices),\r\n\t *  and the vertices in groups of 4 (one vertex for every corner).</p>\r\n\t */\r\n\tpublic function addMeshAt(mesh:Mesh, indexID:Int, vertexID:Int):Void\r\n\t{\r\n\t\tvar numIndices:Int = mesh.numIndices;\r\n\t\tvar numVertices:Int = mesh.numVertices;\r\n\t\tvar matrix:Matrix = mesh.transformationMatrix;\r\n\t\tvar meshStyle:MeshStyle = mesh._style;\r\n\t\t\r\n\t\tif (_vertexData.numVertices == 0) \r\n\t\t\tsetupFor(mesh);\r\n\t\t\r\n\t\tmeshStyle.batchVertexData(_style, vertexID, matrix, 0, numVertices);\r\n\t\tmeshStyle.batchIndexData(_style, indexID, vertexID, 0, numIndices);\r\n\t\t\r\n\t\tif (alpha != 1.0) _vertexData.scaleAlphas(\"color\", alpha, vertexID, numVertices);\r\n\t\tif (_batchable) setRequiresRedraw();\r\n\t\t\r\n\t\t_indexSyncRequired = _vertexSyncRequired = true;\r\n\t}\r\n\t\r\n\tprivate function setupFor(mesh:Mesh):Void\r\n\t{\r\n\t\tvar meshStyle:MeshStyle = mesh._style;\r\n\t\tvar meshStyleType:Class<Dynamic> = meshStyle.type;\r\n\t\t\r\n\t\tif (_style.type != meshStyleType) \r\n\t\t\tsetStyle(cast(Type.createInstance(meshStyleType, []), MeshStyle), false);\r\n\t\t\r\n\t\t_style.copyFrom(meshStyle);\r\n\t}\r\n\t\r\n\t/** Indicates if the given mesh instance fits to the current state of the batch.\r\n\t *  Will always return <code>true</code> for the first added mesh; later calls\r\n\t *  will check if the style matches and if the maximum number of vertices is not\r\n\t *  exceeded.\r\n\t *\r\n\t *  @param mesh\t\t the mesh to add to the batch.\r\n\t *  @param numVertices  if <code>-1</code>, <code>mesh.numVertices</code> will be used\r\n\t */\r\n\tpublic function canAddMesh(mesh:Mesh, numVertices:Int = -1):Bool\r\n\t{\r\n\t\tvar currentNumVertices:Int = _vertexData.numVertices;\r\n\t\t\r\n\t\tif (currentNumVertices == 0) return true;\r\n\t\tif (numVertices < 0) numVertices = mesh.numVertices;\r\n\t\tif (numVertices == 0) return true;\r\n\t\tif (numVertices + currentNumVertices > MAX_NUM_VERTICES)\t\t\t return false;\r\n\t\t\r\n\t\treturn _style.canBatchWith(mesh._style);\r\n\t}\r\n\t\r\n\t/** If the <code>batchable</code> property is enabled, this method will add the batch\r\n\t *  to the painter's current batch. Otherwise, this will actually do the drawing. */\r\n\toverride public function render(painter:Painter):Void\r\n\t{\r\n\t\tif (_vertexData.numVertices == 0) \r\n\t\t{\r\n\t\t\t// nothing to do =)\r\n\t\t\t\r\n\t\t}\r\n\t\telse if (_batchable) \r\n\t\t{\r\n\t\t\tpainter.batchMesh(this);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tpainter.finishMeshBatch();\r\n\t\t\tpainter.drawCount += 1;\r\n\t\t\tpainter.prepareToDraw();\r\n\t\t\t\r\n\t\t\tif (_vertexSyncRequired) syncVertexBuffer();\r\n\t\t\tif (_indexSyncRequired) syncIndexBuffer();\r\n\t\t\t\r\n\t\t\t_style.updateEffect(_effect, painter.state);\r\n\t\t\t_effect.render(0, _indexData.numTriangles);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function setStyle(meshStyle:MeshStyle = null,\r\n\t\t\tmergeWithPredecessor:Bool = true):Void\r\n\t{\r\n\t\tsuper.setStyle(meshStyle, mergeWithPredecessor);\r\n\t\t\r\n\t\tif (_effect != null) \r\n\t\t\t_effect.dispose();\r\n\t\t\r\n\t\t_effect = style.createEffect();\r\n\t\t_effect.onRestore = setVertexAndIndexDataChanged;\r\n\t}\r\n\t\r\n\t/** The total number of vertices in the mesh. If you change this to a smaller value,\r\n\t *  the surplus will be deleted. Make sure that no indices reference those deleted\r\n\t *  vertices! */\r\n\toverride private function set_numVertices(value:Int):Int\r\n\t{\r\n\t\t_vertexData.numVertices = value;\r\n\t\t_vertexSyncRequired = true;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The total number of indices in the mesh. If you change this to a smaller value,\r\n\t *  the surplus will be deleted. Always make sure that the number of indices\r\n\t *  is a multiple of three! */\r\n\toverride private function set_numIndices(value:Int):Int\r\n\t{\r\n\t\t_indexData.numIndices = value;\r\n\t\t_indexSyncRequired = true;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if this object will be added to the painter's batch on rendering,\r\n\t *  or if it will draw itself right away.\r\n\t *\r\n\t *  <p>Only batchable meshes can profit from the render cache; but batching large meshes\r\n\t *  may take up a lot of CPU time. Thus, for meshes that contain a large number of vertices\r\n\t *  or are constantly changing (i.e. can't use the render cache anyway), it makes\r\n\t *  sense to deactivate batching.</p>\r\n\t *\r\n\t *  @default true\r\n\t */\r\n\tprivate function get_batchable():Bool {\r\n\t\treturn _batchable;\r\n\t}\r\n\tprivate function set_batchable(value:Bool):Bool\r\n\t{\r\n\t\tif (value != _batchable)   // self-rendering must disrupt the render cache  \r\n\t\t{\r\n\t\t\t_batchable = value;\r\n\t\t\tupdateSupportsRenderCache();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport openfl.errors.Error;\r\nimport haxe.Constraints.Function;\r\n\r\nimport openfl.errors.IllegalOperationError;\r\nimport openfl.media.Sound;\r\nimport openfl.media.SoundTransform;\r\n\r\nimport starling.animation.IAnimatable;\r\nimport starling.events.Event;\r\nimport starling.textures.Texture;\r\nimport starling.display.MovieClip;\r\n\r\n/** Dispatched whenever the movie has displayed its last frame. */\r\n@:meta(Event(name=\"complete\",type=\"starling.events.Event\"))\r\n\r\n\r\n/** A MovieClip is a simple way to display an animation depicted by a list of textures.\r\n *  \r\n *  <p>Pass the frames of the movie in a vector of textures to the constructor. The movie clip \r\n *  will have the width and height of the first frame. If you group your frames with the help \r\n *  of a texture atlas (which is recommended), use the <code>getTextures</code>-method of the \r\n *  atlas to receive the textures in the correct (alphabetic) order.</p> \r\n *  \r\n *  <p>You can specify the desired framerate via the constructor. You can, however, manually \r\n *  give each frame a custom duration. You can also play a sound whenever a certain frame \r\n *  appears, or execute a callback (a \"frame action\").</p>\r\n *  \r\n *  <p>The methods <code>play</code> and <code>pause</code> control playback of the movie. You\r\n *  will receive an event of type <code>Event.COMPLETE</code> when the movie finished\r\n *  playback. If the movie is looping, the event is dispatched once per loop.</p>\r\n *  \r\n *  <p>As any animated object, a movie clip has to be added to a juggler (or have its \r\n *  <code>advanceTime</code> method called regularly) to run. The movie will dispatch \r\n *  an event of type \"Event.COMPLETE\" whenever it has displayed its last frame.</p>\r\n *  \r\n *  @see starling.textures.TextureAtlas\r\n */\r\n\r\nclass MovieClip extends Image implements IAnimatable\r\n{\r\n\tpublic var numFrames(get, never):Int;\r\n\tpublic var totalTime(get, never):Float;\r\n\tpublic var currentTime(get, set):Float;\r\n\tpublic var loop(get, set):Bool;\r\n\tpublic var muted(get, set):Bool;\r\n\tpublic var soundTransform(get, set):SoundTransform;\r\n\tpublic var currentFrame(get, set):Int;\r\n\tpublic var fps(get, set):Float;\r\n\tpublic var isPlaying(get, never):Bool;\r\n\tpublic var isComplete(get, never):Bool;\r\n\r\n\tprivate var _frames:Array<MovieClipFrame>;\r\n\tprivate var _defaultFrameDuration:Float;\r\n\tprivate var _currentTime:Float;\r\n\tprivate var _currentFrameID:Int;\r\n\tprivate var _loop:Bool;\r\n\tprivate var _playing:Bool;\r\n\tprivate var _muted:Bool;\r\n\tprivate var _wasStopped:Bool;\r\n\tprivate var _soundTransform:SoundTransform;\r\n\t\r\n\t/** Creates a movie clip from the provided textures and with the specified default framerate.\r\n\t *  The movie will have the size of the first frame. */\r\n\tpublic function new(textures:Array<Texture>, fps:Float = 12)\r\n\t{\r\n\t\tsuper(null);\r\n\t\tif (textures.length > 0) \r\n\t\t{\r\n\t\t\tsuper(textures[0]);\r\n\t\t\tinit(textures, fps);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tthrow new ArgumentError(\"Empty texture array\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function init(textures:Array<Texture>, fps:Float):Void\r\n\t{\r\n\t\tif (fps <= 0)\t\t\t throw new ArgumentError(\"Invalid fps: \" + fps);\r\n\t\tvar numFrames:Int = textures.length;\r\n\t\t\r\n\t\t_defaultFrameDuration = 1.0 / fps;\r\n\t\t_loop = true;\r\n\t\t_playing = true;\r\n\t\t_currentTime = 0.0;\r\n\t\t_currentFrameID = 0;\r\n\t\t_wasStopped = true;\r\n\t\t_frames = [];\r\n\t\t\r\n\t\tfor (i in 0...numFrames){_frames[i] = new MovieClipFrame(\r\n\t\t\t\t\ttextures[i], _defaultFrameDuration, _defaultFrameDuration * i);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// frame manipulation\r\n\t\r\n\t/** Adds an additional frame, optionally with a sound and a custom duration. If the \r\n\t *  duration is omitted, the default framerate is used (as specified in the constructor). */\r\n\tpublic function addFrame(texture:Texture, sound:Sound = null, duration:Float = -1):Void\r\n\t{\r\n\t\taddFrameAt(numFrames, texture, sound, duration);\r\n\t}\r\n\t\r\n\t/** Adds a frame at a certain index, optionally with a sound and a custom duration. */\r\n\tpublic function addFrameAt(frameID:Int, texture:Texture, sound:Sound = null,\r\n\t\t\tduration:Float = -1):Void\r\n\t{\r\n\t\tif (frameID < 0 || frameID > numFrames)\t\t\t throw new ArgumentError(\"Invalid frame id\");\r\n\t\tif (duration < 0)\t\t\t duration = _defaultFrameDuration;\r\n\t\t\r\n\t\tvar frame:MovieClipFrame = new MovieClipFrame(texture, duration);\r\n\t\tframe.sound = sound;\r\n\t\t_frames.insert(frameID, frame);\r\n\t\t\r\n\t\tif (frameID == numFrames) \r\n\t\t{\r\n\t\t\tvar prevStartTime:Float = frameID > (0) ? _frames[frameID - 1].startTime:0.0;\r\n\t\t\tvar prevDuration:Float = frameID > (0) ? _frames[frameID - 1].duration:0.0;\r\n\t\t\tframe.startTime = prevStartTime + prevDuration;\r\n\t\t}\r\n\t\telse \r\n\t\tupdateStartTimes();\r\n\t}\r\n\t\r\n\t/** Removes the frame at a certain ID. The successors will move down. */\r\n\tpublic function removeFrameAt(frameID:Int):Void\r\n\t{\r\n\t\tif (frameID < 0 || frameID >= numFrames)\t\t\t throw new ArgumentError(\"Invalid frame id\");\r\n\t\tif (numFrames == 1)\t\t\t throw new IllegalOperationError(\"Movie clip must not be empty\");\r\n\t\t\r\n\t\t_frames.splice(frameID, 0);\r\n\t\t\r\n\t\tif (frameID != numFrames) \r\n\t\t\tupdateStartTimes();\r\n\t}\r\n\t\r\n\t/** Returns the texture of a certain frame. */\r\n\tpublic function getFrameTexture(frameID:Int):Texture\r\n\t{\r\n\t\tif (frameID < 0 || frameID >= numFrames)\t\t\t throw new ArgumentError(\"Invalid frame id\");\r\n\t\treturn _frames[frameID].texture;\r\n\t}\r\n\t\r\n\t/** Sets the texture of a certain frame. */\r\n\tpublic function setFrameTexture(frameID:Int, texture:Texture):Void\r\n\t{\r\n\t\tif (frameID < 0 || frameID >= numFrames)\t\t\t throw new ArgumentError(\"Invalid frame id\");\r\n\t\t_frames[frameID].texture = texture;\r\n\t}\r\n\t\r\n\t/** Returns the sound of a certain frame. */\r\n\tpublic function getFrameSound(frameID:Int):Sound\r\n\t{\r\n\t\tif (frameID < 0 || frameID >= numFrames)\t\t\t throw new ArgumentError(\"Invalid frame id\");\r\n\t\treturn _frames[frameID].sound;\r\n\t}\r\n\t\r\n\t/** Sets the sound of a certain frame. The sound will be played whenever the frame \r\n\t *  is displayed. */\r\n\tpublic function setFrameSound(frameID:Int, sound:Sound):Void\r\n\t{\r\n\t\tif (frameID < 0 || frameID >= numFrames)\t\t\t throw new ArgumentError(\"Invalid frame id\");\r\n\t\t_frames[frameID].sound = sound;\r\n\t}\r\n\t\r\n\t/** Returns the method that is executed at a certain frame. */\r\n\tpublic function getFrameAction(frameID:Int):Function\r\n\t{\r\n\t\tif (frameID < 0 || frameID >= numFrames)\t\t\t throw new ArgumentError(\"Invalid frame id\");\r\n\t\treturn _frames[frameID].action;\r\n\t}\r\n\t\r\n\t/** Sets an action that will be executed whenever a certain frame is reached. */\r\n\tpublic function setFrameAction(frameID:Int, action:Function):Void\r\n\t{\r\n\t\tif (frameID < 0 || frameID >= numFrames)\t\t\t throw new ArgumentError(\"Invalid frame id\");\r\n\t\t_frames[frameID].action = action;\r\n\t}\r\n\t\r\n\t/** Returns the duration of a certain frame (in seconds). */\r\n\tpublic function getFrameDuration(frameID:Int):Float\r\n\t{\r\n\t\tif (frameID < 0 || frameID >= numFrames)\t\t\t throw new ArgumentError(\"Invalid frame id\");\r\n\t\treturn _frames[frameID].duration;\r\n\t}\r\n\t\r\n\t/** Sets the duration of a certain frame (in seconds). */\r\n\tpublic function setFrameDuration(frameID:Int, duration:Float):Void\r\n\t{\r\n\t\tif (frameID < 0 || frameID >= numFrames)\t\t\t throw new ArgumentError(\"Invalid frame id\");\r\n\t\t_frames[frameID].duration = duration;\r\n\t\tupdateStartTimes();\r\n\t}\r\n\t\r\n\t/** Reverses the order of all frames, making the clip run from end to start.\r\n\t *  Makes sure that the currently visible frame stays the same. */\r\n\tpublic function reverseFrames():Void\r\n\t{\r\n\t\t_frames.reverse();\r\n\t\t_currentTime = totalTime - _currentTime;\r\n\t\t_currentFrameID = numFrames - _currentFrameID - 1;\r\n\t\tupdateStartTimes();\r\n\t}\r\n\t\r\n\t// playback methods\r\n\t\r\n\t/** Starts playback. Beware that the clip has to be added to a juggler, too! */\r\n\tpublic function play():Void\r\n\t{\r\n\t\t_playing = true;\r\n\t}\r\n\t\r\n\t/** Pauses playback. */\r\n\tpublic function pause():Void\r\n\t{\r\n\t\t_playing = false;\r\n\t}\r\n\t\r\n\t/** Stops playback, resetting \"currentFrame\" to zero. */\r\n\tpublic function stop():Void\r\n\t{\r\n\t\t_playing = false;\r\n\t\t_wasStopped = true;\r\n\t\tcurrentFrame = 0;\r\n\t}\r\n\t\r\n\t// helpers\r\n\t\r\n\tprivate function updateStartTimes():Void\r\n\t{\r\n\t\tvar numFrames:Int = this.numFrames;\r\n\t\tvar prevFrame:MovieClipFrame = _frames[0];\r\n\t\tprevFrame.startTime = 0;\r\n\t\t\r\n\t\tfor (i in 1...numFrames){\r\n\t\t\t_frames[i].startTime = prevFrame.startTime + prevFrame.duration;\r\n\t\t\tprevFrame = _frames[i];\r\n\t\t}\r\n\t}\r\n\t\r\n\t// IAnimatable\r\n\t\r\n\t/** @inheritDoc */\r\n\tpublic function advanceTime(passedTime:Float):Void\r\n\t{\r\n\t\tif (!_playing) return;\r\n\t\t\r\n\t\t// The tricky part in this method is that whenever a callback is executed\r\n\t\t// (a frame action or a 'COMPLETE' event handler), that callback might modify the clip.\r\n\t\t// Thus, we have to start over with the remaining time whenever that happens.\r\n\t\t\r\n\t\tvar frame:MovieClipFrame = _frames[_currentFrameID];\r\n\t\ttrace(\"_currentFrameID = \" + _currentFrameID);\r\n\t\t\r\n\t\tif (_wasStopped) \r\n\t\t{\r\n\t\t\t// if the clip was stopped and started again,\r\n\t\t\t// sound and action of this frame need to be repeated.\r\n\t\t\t\r\n\t\t\t_wasStopped = false;\r\n\t\t\tframe.playSound(_soundTransform);\r\n\t\t\t\r\n\t\t\tif (frame.action != null) \r\n\t\t\t{\r\n\t\t\t\tframe.executeAction(this, _currentFrameID);\r\n\t\t\t\tadvanceTime(passedTime);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttrace(\"totalTime = \" + totalTime);\r\n\t\t\r\n\t\tif (_currentTime == totalTime) \r\n\t\t{\r\n\t\t\tif (_loop) \r\n\t\t\t{\r\n\t\t\t\t_currentTime = 0.0;\r\n\t\t\t\t_currentFrameID = 0;\r\n\t\t\t\tframe = _frames[0];\r\n\t\t\t\tframe.playSound(_soundTransform);\r\n\t\t\t\ttexture = frame.texture;\r\n\t\t\t\t\r\n\t\t\t\tif (frame.action != null) \r\n\t\t\t\t{\r\n\t\t\t\t\tframe.executeAction(this, _currentFrameID);\r\n\t\t\t\t\tadvanceTime(passedTime);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse return;\r\n\t\t}\r\n\t\t\r\n\t\tvar finalFrameID:Int = _frames.length - 1;\r\n\t\tvar restTimeInFrame:Float = frame.duration - _currentTime + frame.startTime;\r\n\t\tvar dispatchCompleteEvent:Bool = false;\r\n\t\tvar frameAction:Function = null;\r\n\t\tvar previousFrameID:Int = _currentFrameID;\r\n\t\tvar changedFrame:Bool;\r\n\t\t\r\n\t\twhile (passedTime >= restTimeInFrame)\r\n\t\t{\r\n\t\t\tchangedFrame = false;\r\n\t\t\tpassedTime -= restTimeInFrame;\r\n\t\t\t_currentTime = frame.startTime + frame.duration;\r\n\t\t\t\r\n\t\t\tif (_currentFrameID == finalFrameID) \r\n\t\t\t{\r\n\t\t\t\tif (hasEventListener(Event.COMPLETE)) \r\n\t\t\t\t{\r\n\t\t\t\t\tdispatchCompleteEvent = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (_loop) \r\n\t\t\t\t{\r\n\t\t\t\t\t_currentTime = 0;\r\n\t\t\t\t\t_currentFrameID = 0;\r\n\t\t\t\t\tchangedFrame = true;\r\n\t\t\t\t}\r\n\t\t\t\telse return;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t_currentFrameID += 1;\r\n\t\t\t\tchangedFrame = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tframe = _frames[_currentFrameID];\r\n\t\t\tframeAction = frame.action;\r\n\t\t\t\r\n\t\t\tif (changedFrame) \r\n\t\t\t\tframe.playSound(_soundTransform);\r\n\t\t\t\r\n\t\t\tif (dispatchCompleteEvent) \r\n\t\t\t{\r\n\t\t\t\ttexture = frame.texture;\r\n\t\t\t\tdispatchEventWith(Event.COMPLETE);\r\n\t\t\t\tadvanceTime(passedTime);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if (frameAction != null) \r\n\t\t\t{\r\n\t\t\t\ttexture = frame.texture;\r\n\t\t\t\tframe.executeAction(this, _currentFrameID);\r\n\t\t\t\tadvanceTime(passedTime);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\trestTimeInFrame = frame.duration;\r\n\t\t}\r\n\t\t\r\n\t\tif (previousFrameID != _currentFrameID) \r\n\t\t\ttexture = _frames[_currentFrameID].texture;\r\n\t\t\r\n\t\t_currentTime += passedTime;\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** The total number of frames. */\r\n\tprivate function get_numFrames():Int\r\n\t{\r\n\t\treturn _frames.length;\r\n\t}\r\n\t\r\n\t/** The total duration of the clip in seconds. */\r\n\tprivate function get_totalTime():Float\r\n\t{\r\n\t\tvar lastFrame:MovieClipFrame = _frames[_frames.length - 1];\r\n\t\treturn lastFrame.startTime + lastFrame.duration;\r\n\t}\r\n\t\r\n\t/** The time that has passed since the clip was started (each loop starts at zero). */\r\n\tprivate function get_currentTime():Float\r\n\t{\r\n\t\treturn _currentTime;\r\n\t}\r\n\t\r\n\tprivate function set_currentTime(value:Float):Float\r\n\t{\r\n\t\tif (value < 0 || value > totalTime)\t\t\t throw new ArgumentError(\"Invalid time: \" + value);\r\n\t\t\r\n\t\tvar lastFrameID:Int = _frames.length - 1;\r\n\t\t_currentTime = value;\r\n\t\t_currentFrameID = 0;\r\n\t\t\r\n\t\twhile (_currentFrameID < lastFrameID && _frames[_currentFrameID + 1].startTime <= value)\r\n\t\t++_currentFrameID;\r\n\t\t\r\n\t\tvar frame:MovieClipFrame = _frames[_currentFrameID];\r\n\t\ttexture = frame.texture;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if the clip should loop. @default true */\r\n\tprivate function get_loop():Bool\r\n\t{\r\n\t\treturn _loop;\r\n\t}\r\n\t\r\n\tprivate function set_loop(value:Bool):Bool\r\n\t{\r\n\t\t_loop = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** If enabled, no new sounds will be started during playback. Sounds that are already\r\n\t *  playing are not affected. */\r\n\tprivate function get_muted():Bool\r\n\t{\r\n\t\treturn _muted;\r\n\t}\r\n\t\r\n\tprivate function set_muted(value:Bool):Bool\r\n\t{\r\n\t\t_muted = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The SoundTransform object used for playback of all frame sounds. @default null */\r\n\tprivate function get_soundTransform():SoundTransform\r\n\t{\r\n\t\treturn _soundTransform;\r\n\t}\r\n\t\r\n\tprivate function set_soundTransform(value:SoundTransform):SoundTransform\r\n\t{\r\n\t\t_soundTransform = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The index of the frame that is currently displayed. */\r\n\tprivate function get_currentFrame():Int\r\n\t{\r\n\t\treturn _currentFrameID;\r\n\t}\r\n\t\r\n\tprivate function set_currentFrame(value:Int):Int\r\n\t{\r\n\t\tif (value < 0 || value >= numFrames) throw new ArgumentError(\"Invalid frame id\");\r\n\t\tcurrentTime = _frames[value].startTime;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The default number of frames per second. Individual frames can have different \r\n\t *  durations. If you change the fps, the durations of all frames will be scaled \r\n\t *  relatively to the previous value. */\r\n\tprivate function get_fps():Float\r\n\t{\r\n\t\treturn 1.0 / _defaultFrameDuration;\r\n\t}\r\n\t\r\n\tprivate function set_fps(value:Float):Float\r\n\t{\r\n\t\tif (value <= 0) throw new ArgumentError(\"Invalid fps: \" + value);\r\n\t\t\r\n\t\tvar newFrameDuration:Float = 1.0 / value;\r\n\t\tvar acceleration:Float = newFrameDuration / _defaultFrameDuration;\r\n\t\t_currentTime *= acceleration;\r\n\t\t_defaultFrameDuration = newFrameDuration;\r\n\t\t\r\n\t\tfor (i in 0...numFrames){_frames[i].duration *= acceleration;\r\n\t\t}\r\n\t\t\r\n\t\tupdateStartTimes();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if the clip is still playing. Returns <code>false</code> when the end \r\n\t *  is reached. */\r\n\tprivate function get_isPlaying():Bool\r\n\t{\r\n\t\tif (_playing) \r\n\t\t\treturn _loop || _currentTime < totalTime\r\n\t\telse \r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/** Indicates if a (non-looping) movie has come to its end. */\r\n\tprivate function get_isComplete():Bool\r\n\t{\r\n\t\treturn !_loop && _currentTime >= totalTime;\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nclass MovieClipFrame\r\n{\r\n\tpublic function new(texture:Texture, duration:Float = 0.1, startTime:Float = 0)\r\n\t{\r\n\t\tthis.texture = texture;\r\n\t\tthis.duration = duration;\r\n\t\tthis.startTime = startTime;\r\n\t}\r\n\t\r\n\tpublic var texture:Texture;\r\n\tpublic var sound:Sound;\r\n\tpublic var duration:Float;\r\n\tpublic var startTime:Float;\r\n\tpublic var action:Function;\r\n\t\r\n\tpublic function playSound(transform:SoundTransform):Void\r\n\t{\r\n\t\tif (sound != null)\t\t\t sound.play(0, 0, transform);\r\n\t}\r\n\t\r\n\tpublic function executeAction(movie:MovieClip, frameID:Int):Void\r\n\t{\r\n\t\tif (action != null) \r\n\t\t{\r\n\t\t\t#if flash\r\n\t\t\t\tvar numArgs:Int = untyped action['length'];\r\n\t\t\t#else\r\n\t\t\t\tvar numArgs:Int = 2;\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tif (numArgs == 0) action()\r\n\t\t\telse if (numArgs == 1) action(movie)\r\n\t\t\telse if (numArgs == 2) action(movie, frameID)\r\n\t\t\telse throw new Error(\"Frame actions support zero, one or two parameters: \" +\r\n\t\t\t\"movie:MovieClip, frameID:int\");\r\n\t\t}\r\n\t}\r\n}","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\nimport openfl.errors.Error;\r\nimport starling.utils.Rad2deg;\r\n\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Matrix3D;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Vector3D;\r\n\r\nimport starling.events.Event;\r\nimport starling.rendering.Painter;\r\nimport starling.utils.MathUtil;\r\nimport starling.utils.MatrixUtil;\r\n\r\n/** A container that allows you to position objects in three-dimensional space.\r\n *\r\n *  <p>Starling is, at its heart, a 2D engine. However, sometimes, simple 3D effects are\r\n *  useful for special effects, e.g. for screen transitions or to turn playing cards\r\n *  realistically. This class makes it possible to create such 3D effects.</p>\r\n *\r\n *  <p><strong>Positioning objects in 3D</strong></p>\r\n *\r\n *  <p>Just like a normal sprite, you can add and remove children to this container, which\r\n *  allows you to group several display objects together. In addition to that, Sprite3D\r\n *  adds some interesting properties:</p>\r\n *\r\n *  <ul>\r\n *\t<li>z - Moves the sprite closer to / further away from the camera.</li>\r\n *\t<li>rotationX — Rotates the sprite around the x-axis.</li>\r\n *\t<li>rotationY — Rotates the sprite around the y-axis.</li>\r\n *\t<li>scaleZ - Scales the sprite along the z-axis.</li>\r\n *\t<li>pivotZ - Moves the pivot point along the z-axis.</li>\r\n *  </ul>\r\n *\r\n *  <p>With the help of these properties, you can move a sprite and all its children in the\r\n *  3D space. By nesting several Sprite3D containers, it's even possible to construct simple\r\n *  volumetric objects (like a cube).</p>\r\n *\r\n *  <p>Note that Starling does not make any z-tests: visibility is solely established by the\r\n *  order of the children, just as with 2D objects.</p>\r\n *\r\n *  <p><strong>Setting up the camera</strong></p>\r\n *\r\n *  <p>The camera settings are found directly on the stage. Modify the 'focalLength' or\r\n *  'fieldOfView' properties to change the distance between stage and camera; use the\r\n *  'projectionOffset' to move it to a different position.</p>\r\n *\r\n *  <p><strong>Limitations</strong></p>\r\n *\r\n *  <p>On rendering, each Sprite3D requires its own draw call — except if the object does not\r\n *  contain any 3D transformations ('z', 'rotationX/Y' and 'pivotZ' are zero). Furthermore,\r\n *  it interrupts the render cache, i.e. the cache cannot contain objects within different\r\n *  3D coordinate systems. Flat contents within the Sprite3D will be cached, though.</p>\r\n *\r\n */\r\nclass Sprite3D extends DisplayObjectContainer\r\n{\r\n\tpublic var z(get, set):Float;\r\n\tpublic var pivotZ(get, set):Float;\r\n\tpublic var scaleZ(get, set):Float;\r\n\tpublic var rotationX(get, set):Float;\r\n\tpublic var rotationY(get, set):Float;\r\n\tpublic var rotationZ(get, set):Float;\r\n\r\n\tprivate static var E:Float = 0.00001;\r\n\t\r\n\tprivate var _rotationX:Float;\r\n\tprivate var _rotationY:Float;\r\n\tprivate var _scaleZ:Float;\r\n\tprivate var _pivotZ:Float;\r\n\tprivate var _z:Float;\r\n\t\r\n\tprivate var _transformationChanged:Bool;\r\n\tprivate var _is2D:Bool;\r\n\t\r\n\t/** Helper objects. */\r\n\tprivate static var sHelperPoint:Vector3D = new Vector3D();\r\n\tprivate static var sHelperPointAlt:Vector3D = new Vector3D();\r\n\tprivate static var sHelperMatrix:Matrix3D = new Matrix3D();\r\n\t\r\n\t/** Creates an empty Sprite3D. */\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t_scaleZ = 1.0;\r\n\t\t_rotationX = _rotationY = _pivotZ = _z = 0.0;\r\n\t\t_transformationMatrix = new Matrix();\r\n\t\t_transformationMatrix3D = new Matrix3D();\r\n\t\t_is2D = true;  // meaning: this 3D object contains only 2D content  \r\n\t\tsetIs3D(true);  // meaning: this display object supports 3D transformations  \r\n\t\t\r\n\t\taddEventListener(Event.ADDED, onAddedChild);\r\n\t\taddEventListener(Event.REMOVED, onRemovedChild);\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function render(painter:Painter):Void\r\n\t{\r\n\t\tif (_is2D) super.render(painter)\r\n\t\telse \r\n\t\t{\r\n\t\t\tpainter.finishMeshBatch();\r\n\t\t\tpainter.pushState();\r\n\t\t\tpainter.state.transformModelviewMatrix3D(transformationMatrix3D);\r\n\t\t\t\r\n\t\t\tsuper.render(painter);\r\n\t\t\t\r\n\t\t\tpainter.finishMeshBatch();\r\n\t\t\tpainter.popState();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function hitTest(localPoint:Point):DisplayObject\r\n\t{\r\n\t\tif (_is2D) return super.hitTest(localPoint)\r\n\t\telse \r\n\t\t{\r\n\t\t\tif (!visible || !touchable) return null;\r\n\t\t\t\r\n\t\t\t// We calculate the interception point between the 3D plane that is spawned up  ;\r\n\t\t\t// by this sprite3D and the straight line between the camera and the hit point.\t\r\n\t\t\t\r\n\t\t\tsHelperMatrix.copyFrom(transformationMatrix3D);\r\n\t\t\tsHelperMatrix.invert();\r\n\t\t\t\r\n\t\t\tstage.getCameraPosition(this, sHelperPoint);\r\n\t\t\tMatrixUtil.transformCoords3D(sHelperMatrix, localPoint.x, localPoint.y, 0, sHelperPointAlt);\r\n\t\t\tMathUtil.intersectLineWithXYPlane(sHelperPoint, sHelperPointAlt, localPoint);\r\n\t\t\t\r\n\t\t\treturn super.hitTest(localPoint);\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride public function setRequiresRedraw():Void\r\n\t{\r\n\t\tvar was2D:Bool = _is2D;\r\n\t\t\r\n\t\t_is2D = _z > -E && _z < E &&\r\n\t\t\t\t_rotationX > -E && _rotationX < E &&\r\n\t\t\t\t_rotationY > -E && _rotationY < E &&\r\n\t\t\t\t_pivotZ > -E && _pivotZ < E;\r\n\t\t\r\n\t\tif (_is2D != was2D)\tupdateSupportsRenderCache();\r\n\t\tsuper.setRequiresRedraw();\r\n\t}\r\n\t\r\n\toverride private function get_supportsRenderCache():Bool\r\n\t{\r\n\t\treturn _is2D && super.supportsRenderCache;\r\n\t}\r\n\t\r\n\t// helpers\r\n\t\r\n\tprivate function onAddedChild(event:Event):Void\r\n\t{\r\n\t\trecursivelySetIs3D(cast(event.target, DisplayObject), true);\r\n\t}\r\n\t\r\n\tprivate function onRemovedChild(event:Event):Void\r\n\t{\r\n\t\trecursivelySetIs3D(cast(event.target, DisplayObject), false);\r\n\t}\r\n\t\r\n\tprivate function recursivelySetIs3D(object:DisplayObject, value:Bool):Void\r\n\t{\r\n\t\tif (Std.is(object, Sprite3D)) \r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (Std.is(object, DisplayObjectContainer)) \r\n\t\t{\r\n\t\t\tvar container:DisplayObjectContainer = cast(object, DisplayObjectContainer);\r\n\t\t\tvar numChildren:Int = container.numChildren;\r\n\t\t\t\r\n\t\t\tfor (i in 0...numChildren){recursivelySetIs3D(container.getChildAt(i), value);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tobject.setIs3D(value);\r\n\t}\r\n\t\r\n\tprivate function updateMatrices():Void\r\n\t{\r\n\t\tvar x:Float = this.x;\r\n\t\tvar y:Float = this.y;\r\n\t\tvar scaleX:Float = this.scaleX;\r\n\t\tvar scaleY:Float = this.scaleY;\r\n\t\tvar pivotX:Float = this.pivotX;\r\n\t\tvar pivotY:Float = this.pivotY;\r\n\t\tvar rotationZ:Float = this.rotation;\r\n\t\t\r\n\t\t_transformationMatrix3D.identity();\r\n\t\t\r\n\t\tif (scaleX != 1.0 || scaleY != 1.0 || _scaleZ != 1.0) \r\n\t\t\t_transformationMatrix3D.appendScale(cast ((cast scaleX) || (cast E)) , cast ((cast scaleY) || (cast E)), cast ((cast scaleZ) || (cast E)));\r\n\t\tif (_rotationX != 0.0)\r\n\t\t\t_transformationMatrix3D.appendRotation(Rad2deg.call(_rotationX), Vector3D.X_AXIS);\r\n\t\tif (_rotationY != 0.0)\r\n\t\t\t_transformationMatrix3D.appendRotation(Rad2deg.call(_rotationY), Vector3D.Y_AXIS);\r\n\t\tif (rotationZ != 0.0)\r\n\t\t\t_transformationMatrix3D.appendRotation(Rad2deg.call(rotationZ), Vector3D.Z_AXIS);\r\n\t\tif (x != 0.0 || y != 0.0 || _z != 0.0)\r\n\t\t\t_transformationMatrix3D.appendTranslation(x, y, _z);\r\n\t\tif (pivotX != 0.0 || pivotY != 0.0 || _pivotZ != 0.0)\r\n\t\t\t_transformationMatrix3D.prependTranslation(-pivotX, -pivotY, -_pivotZ);\r\n\t\t\r\n\t\tif (_is2D) MatrixUtil.convertTo2D(_transformationMatrix3D, _transformationMatrix);\r\n\t\telse _transformationMatrix.identity();\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** The 2D transformation matrix of the object relative to its parent — if it can be\r\n\t *  represented in such a matrix (the values of 'z', 'rotationX/Y', and 'pivotZ' are\r\n\t *  zero). Otherwise, the identity matrix. CAUTION: not a copy, but the actual object! */\r\n\toverride private function get_transformationMatrix():Matrix\r\n\t{\r\n\t\tif (_transformationChanged) \r\n\t\t{\r\n\t\t\tupdateMatrices();\r\n\t\t\t_transformationChanged = false;\r\n\t\t}\r\n\t\t\r\n\t\treturn _transformationMatrix;\r\n\t}\r\n\t\r\n\toverride private function set_transformationMatrix(value:Matrix):Matrix\r\n\t{\r\n\t\tsuper.transformationMatrix = value;\r\n\t\t_rotationX = _rotationY = _pivotZ = _z = 0;\r\n\t\t_transformationChanged = true;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/**  The 3D transformation matrix of the object relative to its parent.\r\n\t *   CAUTION: not a copy, but the actual object! */\r\n\toverride private function get_transformationMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (_transformationChanged) \r\n\t\t{\r\n\t\t\tupdateMatrices();\r\n\t\t\t_transformationChanged = false;\r\n\t\t}\r\n\t\t\r\n\t\treturn _transformationMatrix3D;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function set_x(value:Float):Float\r\n\t{\r\n\t\tsuper.x = value;\r\n\t\t_transformationChanged = true;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function set_y(value:Float):Float\r\n\t{\r\n\t\tsuper.y = value;\r\n\t\t_transformationChanged = true;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The z coordinate of the object relative to the local coordinates of the parent.\r\n\t *  The z-axis points away from the camera, i.e. positive z-values will move the object further\r\n\t *  away from the viewer. */\r\n\tprivate function get_z():Float\r\n\t{\r\n\t\treturn _z;\r\n\t}\r\n\t\r\n\tprivate function set_z(value:Float):Float\r\n\t{\r\n\t\t_z = value;\r\n\t\t_transformationChanged = true;\r\n\t\tsetRequiresRedraw();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function set_pivotX(value:Float):Float\r\n\t{\r\n\t\tsuper.pivotX = value;\r\n\t\t_transformationChanged = true;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function set_pivotY(value:Float):Float\r\n\t{\r\n\t\tsuper.pivotY = value;\r\n\t\t_transformationChanged = true;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The z coordinate of the object's origin in its own coordinate space (default: 0). */\r\n\tprivate function get_pivotZ():Float\r\n\t{\r\n\t\treturn _pivotZ;\r\n\t}\r\n\t\r\n\tprivate function set_pivotZ(value:Float):Float\r\n\t{\r\n\t\t_pivotZ = value;\r\n\t\t_transformationChanged = true;\r\n\t\tsetRequiresRedraw();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function set_scaleX(value:Float):Float\r\n\t{\r\n\t\tsuper.scaleX = value;\r\n\t\t_transformationChanged = true;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function set_scaleY(value:Float):Float\r\n\t{\r\n\t\tsuper.scaleY = value;\r\n\t\t_transformationChanged = true;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The depth scale factor. '1' means no scale, negative values flip the object. */\r\n\tprivate function get_scaleZ():Float\r\n\t{\r\n\t\treturn _scaleZ;\r\n\t}\r\n\t\r\n\tprivate function set_scaleZ(value:Float):Float\r\n\t{\r\n\t\t_scaleZ = value;\r\n\t\t_transformationChanged = true;\r\n\t\tsetRequiresRedraw();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_skewX(value:Float):Float\r\n\t{\r\n\t\tthrow new Error(\"3D objects do not support skewing\");\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_skewY(value:Float):Float\r\n\t{\r\n\t\tthrow new Error(\"3D objects do not support skewing\");\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The rotation of the object about the z axis, in radians.\r\n\t *  (In Starling, all angles are measured in radians.) */\r\n\toverride private function set_rotation(value:Float):Float\r\n\t{\r\n\t\tsuper.rotation = value;\r\n\t\t_transformationChanged = true;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The rotation of the object about the x axis, in radians.\r\n\t *  (In Starling, all angles are measured in radians.) */\r\n\tprivate function get_rotationX():Float\r\n\t{\r\n\t\treturn _rotationX;\r\n\t}\r\n\t\r\n\tprivate function set_rotationX(value:Float):Float\r\n\t{\r\n\t\t_rotationX = MathUtil.normalizeAngle(value);\r\n\t\t_transformationChanged = true;\r\n\t\tsetRequiresRedraw();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The rotation of the object about the y axis, in radians.\r\n\t *  (In Starling, all angles are measured in radians.) */\r\n\tprivate function get_rotationY():Float\r\n\t{\r\n\t\treturn _rotationY;\r\n\t}\r\n\t\r\n\tprivate function set_rotationY(value:Float):Float\r\n\t{\r\n\t\t_rotationY = MathUtil.normalizeAngle(value);\r\n\t\t_transformationChanged = true;\r\n\t\tsetRequiresRedraw();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The rotation of the object about the z axis, in radians.\r\n\t *  (In Starling, all angles are measured in radians.) */\r\n\tprivate function get_rotationZ():Float\r\n\t{\r\n\t\treturn rotation;\r\n\t}\r\n\t\r\n\tprivate function set_rotationZ(value:Float):Float{rotation = value;\r\n\t\treturn value;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.display;\r\n\r\n\r\nimport openfl.display.BitmapData;\r\nimport openfl.display3D.Context3D;\r\nimport openfl.errors.IllegalOperationError;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Matrix3D;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.geom.Vector3D;\r\n\r\nimport starling.core.Starling;\r\nimport starling.events.EnterFrameEvent;\r\nimport starling.events.Event;\r\nimport starling.filters.FragmentFilter;\r\nimport starling.rendering.Painter;\r\nimport starling.rendering.RenderState;\r\nimport starling.utils.MatrixUtil;\r\nimport starling.utils.RectangleUtil;\r\n\r\n\r\n\r\n/** Dispatched when the Flash container is resized. */\r\n@:meta(Event(name=\"resize\",type=\"starling.events.ResizeEvent\"))\r\n\r\n\r\n/** A Stage represents the root of the display tree.  \r\n *  Only objects that are direct or indirect children of the stage will be rendered.\r\n * \r\n *  <p>This class represents the Starling version of the stage. Don't confuse it with its \r\n *  Flash equivalent: while the latter contains objects of the type \r\n *  <code>openfl.display.DisplayObject</code>, the Starling stage contains only objects of the\r\n *  type <code>starling.display.DisplayObject</code>. Those classes are not compatible, and \r\n *  you cannot exchange one type with the other.</p>\r\n * \r\n *  <p>A stage object is created automatically by the <code>Starling</code> class. Don't\r\n *  create a Stage instance manually.</p>\r\n * \r\n *  <strong>Keyboard Events</strong>\r\n * \r\n *  <p>In Starling, keyboard events are only dispatched at the stage. Add an event listener\r\n *  directly to the stage to be notified of keyboard events.</p>\r\n * \r\n *  <strong>Resize Events</strong>\r\n * \r\n *  <p>When the Flash player is resized, the stage dispatches a <code>ResizeEvent</code>. The \r\n *  event contains properties containing the updated width and height of the Flash player.</p>\r\n *\r\n *  @see starling.events.KeyboardEvent\r\n *  @see starling.events.ResizeEvent  \r\n * \r\n */\r\nclass Stage extends DisplayObjectContainer\r\n{\r\n\tpublic var color(get, set):Int;\r\n\tpublic var stageWidth(get, set):Int;\r\n\tpublic var stageHeight(get, set):Int;\r\n\tpublic var focalLength(get, set):Float;\r\n\tpublic var fieldOfView(get, set):Float;\r\n\tpublic var projectionOffset(get, set):Point;\r\n\tpublic var cameraPosition(get, never):Vector3D;\r\n\r\n\tprivate var _width:Int;\r\n\tprivate var _height:Int;\r\n\tprivate var _color:Int;\r\n\tprivate var _fieldOfView:Float;\r\n\tprivate var _projectionOffset:Point;\r\n\tprivate var _cameraPosition:Vector3D;\r\n\tprivate var _enterFrameEvent:EnterFrameEvent;\r\n\tprivate var _enterFrameListeners:Array<DisplayObject>;\r\n\t\r\n\t// helper objects\r\n\tprivate static var sMatrix:Matrix = new Matrix();\r\n\tprivate static var sMatrix3D:Matrix3D = new Matrix3D();\r\n\t\r\n\t/** @private */\r\n\tpublic function new(width:Int, height:Int, color:Int = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\t\t_color = color;\r\n\t\t_fieldOfView = 1.0;\r\n\t\t_projectionOffset = new Point();\r\n\t\t_cameraPosition = new Vector3D();\r\n\t\t_enterFrameEvent = new EnterFrameEvent(Event.ENTER_FRAME, 0.0);\r\n\t\t_enterFrameListeners = [];\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\tpublic function advanceTime(passedTime:Float):Void\r\n\t{\r\n\t\t_enterFrameEvent.reset(Event.ENTER_FRAME, false, passedTime);\r\n\t\tbroadcastEvent(_enterFrameEvent);\r\n\t}\r\n\t\r\n\t/** Returns the object that is found topmost beneath a point in stage coordinates, or  \r\n\t *  the stage itself if nothing else is found. */\r\n\toverride public function hitTest(localPoint:Point):DisplayObject\r\n\t{\r\n\t\tif (!visible || !touchable) return null;\r\n\t\t\r\n\t\t// locations outside of the stage area shouldn't be accepted  ;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif (localPoint.x < 0 || localPoint.x > _width ||\r\n\t\t\tlocalPoint.y < 0 || localPoint.y > _height) \r\n\t\t\treturn null;\r\n\t\t\r\n\t\t// if nothing else is hit, the stage returns itself as target  ;\r\n\t\tvar target:DisplayObject = super.hitTest(localPoint);\r\n\t\treturn (target != null) ? target:this;\r\n\t}\r\n\t\r\n\t/** Draws the complete stage into a BitmapData object.\r\n\t *\r\n\t *  <p>If you encounter problems with transparency, start Starling in BASELINE profile\r\n\t *  (or higher). BASELINE_CONSTRAINED might not support transparency on all platforms.\r\n\t *  </p>\r\n\t *\r\n\t *  @param destination  If you pass null, the object will be created for you.\r\n\t *\t\t\t\t\t  If you pass a BitmapData object, it should have the size of the\r\n\t *\t\t\t\t\t  back buffer (which is accessible via the respective properties\r\n\t *\t\t\t\t\t  on the Starling instance).\r\n\t *  @param transparent  If enabled, empty areas will appear transparent; otherwise, they\r\n\t *\t\t\t\t\t  will be filled with the stage color.\r\n\t */\r\n\tpublic function drawToBitmapData(destination:BitmapData = null,transparent:Bool = true):BitmapData\r\n\t{\r\n\t\tvar painter:Painter = Starling.Painter;\r\n\t\tvar state:RenderState = painter.state;\r\n\t\tvar context:Context3D = painter.context;\r\n\t\t\r\n\t\tif (destination == null) \r\n\t\t{\r\n\t\t\tvar width:Int = painter.backBufferWidth;\r\n\t\t\tvar height:Int = painter.backBufferHeight;\r\n\t\t\tdestination = new BitmapData(width, height, transparent);\r\n\t\t}\r\n\t\t\r\n\t\tpainter.pushState();\r\n\t\tstate.renderTarget = null;\r\n\t\tstate.setProjectionMatrix(0, 0, _width, _height, _width, _height, cameraPosition);\r\n\t\t\r\n\t\tif (transparent)\t\t\t painter.clear()\r\n\t\telse painter.clear(_color, 1);\r\n\t\t\r\n\t\trender(painter);\r\n\t\tpainter.finishMeshBatch();\r\n\t\t\r\n\t\tcontext.drawToBitmapData(destination);\r\n\t\tcontext.present();  // required on some platforms to avoid flickering  \r\n\t\t\r\n\t\tpainter.popState();\r\n\t\treturn destination;\r\n\t}\r\n\t\r\n\t/** Returns the stage bounds (i.e. not the bounds of its contents, but the rectangle\r\n\t *  spawned up by 'stageWidth' and 'stageHeight') in another coordinate system. */\r\n\tpublic function getStageBounds(targetSpace:DisplayObject, out:Rectangle = null):Rectangle\r\n\t{\r\n\t\tif (out == null) out = new Rectangle();\r\n\t\t\r\n\t\tout.setTo(0, 0, _width, _height);\r\n\t\tgetTransformationMatrix(targetSpace, sMatrix);\r\n\t\t\r\n\t\treturn RectangleUtil.getBounds(out, sMatrix, out);\r\n\t}\r\n\t\r\n\t// camera positioning\r\n\t\r\n\t/** Returns the position of the camera within the local coordinate system of a certain\r\n\t *  display object. If you do not pass a space, the method returns the global position.\r\n\t *  To change the position of the camera, you can modify the properties 'fieldOfView',\r\n\t *  'focalDistance' and 'projectionOffset'.\r\n\t */\r\n\tpublic function getCameraPosition(space:DisplayObject = null, out:Vector3D = null):Vector3D\r\n\t{\r\n\t\tgetTransformationMatrix3D(space, sMatrix3D);\r\n\t\t\r\n\t\treturn MatrixUtil.transformCoords3D(sMatrix3D,\r\n\t\t\t\t_width / 2 + _projectionOffset.x, _height / 2 + _projectionOffset.y,\r\n\t\t\t\t-focalLength, out);\r\n\t}\r\n\t\r\n\t// enter frame event optimization\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.display)\r\n\tprivate function addEnterFrameListener(listener:DisplayObject):Void\r\n\t{\r\n\t\t_enterFrameListeners.push(listener);\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.display)\r\n\tprivate function removeEnterFrameListener(listener:DisplayObject):Void\r\n\t{\r\n\t\tvar index:Int = Lambda.indexOf(_enterFrameListeners, listener);\r\n\t\tif (index >= 0)\t\t\t _enterFrameListeners.splice(index, 1);\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.display)\r\n\toverride private function getChildEventListeners(object:DisplayObject, eventType:String,\r\n\t\t\tlisteners:Array<DisplayObject>):Void\r\n\t{\r\n\t\tif (eventType == Event.ENTER_FRAME && object == this) \r\n\t\t{\r\n\t\t\tfor (i in 0..._enterFrameListeners.length){listeners[listeners.length] = _enterFrameListeners[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse \r\n\t\tsuper.getChildEventListeners(object, eventType, listeners);\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** @private */\r\n\toverride private function set_width(value:Float):Float\r\n\t{\r\n\t\tthrow new IllegalOperationError(\"Cannot set width of stage\");\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_height(value:Float):Float\r\n\t{\r\n\t\tthrow new IllegalOperationError(\"Cannot set height of stage\");\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_x(value:Float):Float\r\n\t{\r\n\t\tthrow new IllegalOperationError(\"Cannot set x-coordinate of stage\");\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_y(value:Float):Float\r\n\t{\r\n\t\tthrow new IllegalOperationError(\"Cannot set y-coordinate of stage\");\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_scaleX(value:Float):Float\r\n\t{\r\n\t\tthrow new IllegalOperationError(\"Cannot scale stage\");\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_scaleY(value:Float):Float\r\n\t{\r\n\t\tthrow new IllegalOperationError(\"Cannot scale stage\");\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_rotation(value:Float):Float\r\n\t{\r\n\t\tthrow new IllegalOperationError(\"Cannot rotate stage\");\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_skewX(value:Float):Float\r\n\t{\r\n\t\tthrow new IllegalOperationError(\"Cannot skew stage\");\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_skewY(value:Float):Float\r\n\t{\r\n\t\tthrow new IllegalOperationError(\"Cannot skew stage\");\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function set_filter(value:FragmentFilter):FragmentFilter\r\n\t{\r\n\t\tthrow new IllegalOperationError(\"Cannot add filter to stage. Add it to 'root' instead!\");\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The background color of the stage. */\r\n\tprivate function get_color():Int\r\n\t{\r\n\t\treturn _color;\r\n\t}\r\n\t\r\n\tprivate function set_color(value:Int):Int\r\n\t{\r\n\t\t_color = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The width of the stage coordinate system. Change it to scale its contents relative\r\n\t *  to the <code>viewPort</code> property of the Starling object. */\r\n\tprivate function get_stageWidth():Int\r\n\t{\r\n\t\treturn _width;\r\n\t}\r\n\t\r\n\tprivate function set_stageWidth(value:Int):Int\r\n\t{\r\n\t\t_width = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The height of the stage coordinate system. Change it to scale its contents relative\r\n\t *  to the <code>viewPort</code> property of the Starling object. */\r\n\tprivate function get_stageHeight():Int\r\n\t{\r\n\t\treturn _height;\r\n\t}\r\n\t\r\n\tprivate function set_stageHeight(value:Int):Int\r\n\t{\r\n\t\t_height = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The distance between the stage and the camera. Changing this value will update the\r\n\t *  field of view accordingly. */\r\n\tprivate function get_focalLength():Float\r\n\t{\r\n\t\treturn _width / (2 * Math.tan(_fieldOfView / 2));\r\n\t}\r\n\t\r\n\tprivate function set_focalLength(value:Float):Float\r\n\t{\r\n\t\t_fieldOfView = 2 * Math.atan(stageWidth / (2 * value));\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Specifies an angle (radian, between zero and PI) for the field of view. This value\r\n\t *  determines how strong the perspective transformation and distortion apply to a Sprite3D\r\n\t *  object.\r\n\t *\r\n\t *  <p>A value close to zero will look similar to an orthographic projection; a value\r\n\t *  close to PI results in a fisheye lens effect. If the field of view is set to 0 or PI,\r\n\t *  nothing is seen on the screen.</p>\r\n\t *\r\n\t *  @default 1.0\r\n\t */\r\n\tprivate function get_fieldOfView():Float\r\n\t{\r\n\t\treturn _fieldOfView;\r\n\t}\r\n\t\r\n\tprivate function set_fieldOfView(value:Float):Float\r\n\t{\r\n\t\t_fieldOfView = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** A vector that moves the camera away from its default position in the center of the\r\n\t *  stage. Use this property to change the center of projection, i.e. the vanishing\r\n\t *  point for 3D display objects. <p>CAUTION: not a copy, but the actual object!</p>\r\n\t */\r\n\tprivate function get_projectionOffset():Point\r\n\t{\r\n\t\treturn _projectionOffset;\r\n\t}\r\n\t\r\n\tprivate function set_projectionOffset(value:Point):Point\r\n\t{\r\n\t\t_projectionOffset.setTo(value.x, value.y);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The global position of the camera. This property can only be used to find out the\r\n\t *  current position, but not to modify it. For that, use the 'projectionOffset',\r\n\t *  'fieldOfView' and 'focalLength' properties. If you need the camera position in\r\n\t *  a certain coordinate space, use 'getCameraPosition' instead.\r\n\t *\r\n\t *  <p>CAUTION: not a copy, but the actual object!</p>\r\n\t */\r\n\tprivate function get_cameraPosition():Vector3D\r\n\t{\r\n\t\treturn getCameraPosition(null, _cameraPosition);\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.errors;\r\n\r\nimport openfl.errors.Error;\r\n\r\n/** An AbstractClassError is thrown when you attempt to create an instance of an abstract \r\n *  class. */\r\nclass AbstractClassError extends Error\r\n{\r\n\t/** Creates a new AbstractClassError object. */\r\n\tpublic function new(message:Dynamic = \"Cannot instantiate abstract class\", id:Dynamic = 0)\r\n\t{\r\n\t\tsuper(message, id);\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.errors;\r\n\r\nimport openfl.errors.Error;\r\n\r\n/** An AbstractMethodError is thrown when you attempt to call an abstract method. */\r\nclass AbstractMethodError extends Error\r\n{\r\n\t/** Creates a new AbstractMethodError object. */\r\n\tpublic function new(message:Dynamic = \"Method needs to be implemented in subclass\", id:Dynamic = 0)\r\n\t{\r\n\t\tsuper(message, id);\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.errors;\r\n\r\nimport openfl.errors.Error;\r\n\r\n/** A MissingContextError is thrown when a Context3D object is required but not (yet) \r\n *  available. */\r\nclass MissingContextError extends Error\r\n{\r\n\t/** Creates a new MissingContextError object. */\r\n\tpublic function new(message:Dynamic = \"Starling context is missing\", id:Dynamic = 0)\r\n\t{\r\n\t\tsuper(message, id);\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.errors;\r\n\r\nimport openfl.errors.Error;\r\n\r\n/** A NotSupportedError is thrown when you attempt to use a feature that is not supported\r\n *  on the current platform. */\r\nclass NotSupportedError extends Error\r\n{\r\n\t/** Creates a new NotSupportedError object. */\r\n\tpublic function new(message:Dynamic = \"\", id:Dynamic = 0)\r\n\t{\r\n\t\tsuper(message, id);\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.events;\r\n\r\nimport starling.events.EventDispatcher;\r\n\r\n\r\n\r\nimport starling.utils.StringUtil;\r\n\r\n\r\n\r\n/** Event objects are passed as parameters to event listeners when an event occurs.  \r\n *  This is Starling's version of the Flash Event class. \r\n *\r\n *  <p>EventDispatchers create instances of this class and send them to registered listeners. \r\n *  An event object contains information that characterizes an event, most importantly the \r\n *  event type and if the event bubbles. The target of an event is the object that \r\n *  dispatched it.</p>\r\n * \r\n *  <p>For some event types, this information is sufficient; other events may need additional \r\n *  information to be carried to the listener. In that case, you can subclass \"Event\" and add \r\n *  properties with all the information you require. The \"EnterFrameEvent\" is an example for \r\n *  this practice; it adds a property about the time that has passed since the last frame.</p>\r\n * \r\n *  <p>Furthermore, the event class contains methods that can stop the event from being \r\n *  processed by other listeners - either completely or at the next bubble stage.</p>\r\n * \r\n *  @see EventDispatcher\r\n */\r\nclass Event\r\n{\r\n\tpublic var bubbles(get, never):Bool;\r\n\tpublic var target(get, never):EventDispatcher;\r\n\tpublic var currentTarget(get, never):EventDispatcher;\r\n\tpublic var type(get, never):String;\r\n\tpublic var data(get, never):Dynamic;\r\n\t\r\n\t@:allow(starling.events)\r\n\tprivate var stopsPropagation(get, never):Bool;\r\n\t@:allow(starling.events)\r\n\tprivate var stopsImmediatePropagation(get, never):Bool;\r\n\r\n\t/** Event type for a display object that is added to a parent. */\r\n\tpublic static var ADDED:String = \"added\";\r\n\t/** Event type for a display object that is added to the stage */\r\n\tpublic static var ADDED_TO_STAGE:String = \"addedToStage\";\r\n\t/** Event type for a display object that is entering a new frame. */\r\n\tpublic static var ENTER_FRAME:String = \"enterFrame\";\r\n\t/** Event type for a display object that is removed from its parent. */\r\n\tpublic static var REMOVED:String = \"removed\";\r\n\t/** Event type for a display object that is removed from the stage. */\r\n\tpublic static var REMOVED_FROM_STAGE:String = \"removedFromStage\";\r\n\t/** Event type for a triggered button. */\r\n\tpublic static var TRIGGERED:String = \"triggered\";\r\n\t/** Event type for a resized Flash Player. */\r\n\tpublic static var RESIZE:String = \"resize\";\r\n\t/** Event type that may be used whenever something finishes. */\r\n\tpublic static var COMPLETE:String = \"complete\";\r\n\t/** Event type for a (re)created stage3D rendering context. */\r\n\tpublic static var CONTEXT3D_CREATE:String = \"context3DCreate\";\r\n\t/** Event type that is dispatched by the Starling instance directly before rendering. */\r\n\tpublic static var RENDER:String = \"render\";\r\n\t/** Event type that indicates that the root DisplayObject has been created. */\r\n\tpublic static var ROOT_CREATED:String = \"rootCreated\";\r\n\t/** Event type for an animated object that requests to be removed from the juggler. */\r\n\tpublic static var REMOVE_FROM_JUGGLER:String = \"removeFromJuggler\";\r\n\t/** Event type that is dispatched by the AssetManager after a context loss. */\r\n\tpublic static var TEXTURES_RESTORED:String = \"texturesRestored\";\r\n\t/** Event type that is dispatched by the AssetManager when a file/url cannot be loaded. */\r\n\tpublic static var IO_ERROR:String = \"ioError\";\r\n\t/** Event type that is dispatched by the AssetManager when a file/url cannot be loaded. */\r\n\tpublic static var SECURITY_ERROR:String = \"securityError\";\r\n\t/** Event type that is dispatched by the AssetManager when an xml or json file couldn't\r\n\t *  be parsed. */\r\n\tpublic static var PARSE_ERROR:String = \"parseError\";\r\n\t/** Event type that is dispatched by the Starling instance when it encounters a problem\r\n\t *  from which it cannot recover, e.g. a lost device context. */\r\n\tpublic static var FATAL_ERROR:String = \"fatalError\";\r\n\t\r\n\t/** An event type to be utilized in custom events. Not used by Starling right now. */\r\n\tpublic static var CHANGE:String = \"change\";\r\n\t/** An event type to be utilized in custom events. Not used by Starling right now. */\r\n\tpublic static var CANCEL:String = \"cancel\";\r\n\t/** An event type to be utilized in custom events. Not used by Starling right now. */\r\n\tpublic static var SCROLL:String = \"scroll\";\r\n\t/** An event type to be utilized in custom events. Not used by Starling right now. */\r\n\tpublic static var OPEN:String = \"open\";\r\n\t/** An event type to be utilized in custom events. Not used by Starling right now. */\r\n\tpublic static var CLOSE:String = \"close\";\r\n\t/** An event type to be utilized in custom events. Not used by Starling right now. */\r\n\tpublic static var SELECT:String = \"select\";\r\n\t/** An event type to be utilized in custom events. Not used by Starling right now. */\r\n\tpublic static var READY:String = \"ready\";\r\n\t/** An event type to be utilized in custom events. Not used by Starling right now. */\r\n\tpublic static var UPDATE:String = \"update\";\r\n\t\r\n\tprivate static var sEventPool:Array<Event> = [];\r\n\t\r\n\tprivate var _target:EventDispatcher;\r\n\tprivate var _currentTarget:EventDispatcher;\r\n\tprivate var _type:String;\r\n\tprivate var _bubbles:Bool;\r\n\tprivate var _stopsPropagation:Bool;\r\n\tprivate var _stopsImmediatePropagation:Bool;\r\n\tprivate var _data:Dynamic;\r\n\t\r\n\t/** Creates an event object that can be passed to listeners. */\r\n\tpublic function new(type:String, bubbles:Bool = false, data:Dynamic = null)\r\n\t{\r\n\t\t_type = type;\r\n\t\t_bubbles = bubbles;\r\n\t\t_data = data;\r\n\t}\r\n\t\r\n\t/** Prevents listeners at the next bubble stage from receiving the event. */\r\n\tpublic function stopPropagation():Void\r\n\t{\r\n\t\t_stopsPropagation = true;\r\n\t}\r\n\t\r\n\t/** Prevents any other listeners from receiving the event. */\r\n\tpublic function stopImmediatePropagation():Void\r\n\t{\r\n\t\t_stopsPropagation = _stopsImmediatePropagation = true;\r\n\t}\r\n\t\r\n\t/** Returns a description of the event, containing type and bubble information. */\r\n\tpublic function toString():String\r\n\t{\r\n\t\treturn StringUtil.format(\r\n\t\t\t\"[{0} type=\\\"{1}\\\" bubbles={2}]\",\r\n\t\t\t[Type.getClassName(Type.getClass(this)).split(\"::\").pop(), _type, _bubbles]\r\n\t\t);\r\n\t}\r\n\t\r\n\t/** Indicates if event will bubble. */\r\n\tprivate function get_bubbles():Bool {\r\n\t\treturn _bubbles;\r\n\t}\r\n\t\r\n\t/** The object that dispatched the event. */\r\n\tprivate function get_target():EventDispatcher {\r\n\t\treturn _target;\r\n\t}\r\n\t\r\n\t/** The object the event is currently bubbling at. */\r\n\tprivate function get_currentTarget():EventDispatcher {\r\n\t\treturn _currentTarget;\r\n\t}\r\n\t\r\n\t/** A string that identifies the event. */\r\n\tprivate function get_type():String {\r\n\t\treturn _type;\r\n\t}\r\n\t\r\n\t/** Arbitrary data that is attached to the event. */\r\n\tprivate function get_data():Dynamic {\r\n\t\treturn _data;\r\n\t}\r\n\t\r\n\t// properties for internal use\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.events)\r\n\tprivate function setTarget(value:EventDispatcher):Void {\r\n\t\t_target = value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.events)\r\n\tprivate function setCurrentTarget(value:EventDispatcher):Void {\r\n\t\t_currentTarget = value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.events)\r\n\tprivate function setData(value:Dynamic):Void {\r\n\t\t_data = value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.events)\r\n\tprivate function get_stopsPropagation():Bool {\r\n\t\treturn _stopsPropagation;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.events)\r\n\tprivate function get_stopsImmediatePropagation():Bool {\r\n\t\treturn _stopsImmediatePropagation;\r\n\t}\r\n\t\r\n\t// event pooling\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.events)\r\n\tprivate static function fromPool(type:String, bubbles:Bool = false, data:Dynamic = null):Event\r\n\t{\r\n\t\tif (sEventPool.length > 0) return sEventPool.pop().reset(type, bubbles, data);\r\n\t\telse return new Event(type, bubbles, data);\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.events)\r\n\tprivate static function toPool(event:Event):Void\r\n\t{\r\n\t\tevent._data = event._target = event._currentTarget = null;\r\n\t\tsEventPool[sEventPool.length] = event;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.events)\r\n\tprivate function reset(type:String, bubbles:Bool = false, data:Dynamic = null):Event\r\n\t{\r\n\t\t_type = type;\r\n\t\t_bubbles = bubbles;\r\n\t\t_data = data;\r\n\t\t_target = _currentTarget = null;\r\n\t\t_stopsPropagation = _stopsImmediatePropagation = false;\r\n\t\treturn this;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.events;\r\n\r\nimport starling.events.Event;\r\n\r\n/** An EnterFrameEvent is triggered once per frame and is dispatched to all objects in the\r\n *  display tree.\r\n *\r\n *  It contains information about the time that has passed since the last frame. That way, you \r\n *  can easily make animations that are independent of the frame rate, taking the passed time\r\n *  into account.\r\n */\r\nclass EnterFrameEvent extends Event\r\n{\r\n\tpublic var passedTime(get, never):Float;\r\n\r\n\t/** Event type for a display object that is entering a new frame. */\r\n\tpublic static var ENTER_FRAME:String = \"enterFrame\";\r\n\t\r\n\t/** Creates an enter frame event with the passed time. */\r\n\tpublic function new(type:String, passedTime:Float, bubbles:Bool = false)\r\n\t{\r\n\t\tsuper(type, bubbles, passedTime);\r\n\t}\r\n\t\r\n\t/** The time that has passed since the last frame (in seconds). */\r\n\tprivate function get_passedTime():Float\r\n\t{\r\n\t\treturn cast(data, Float);\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.events;\r\n\r\n\r\n/** A KeyboardEvent is dispatched in response to user input through a keyboard.\r\n * \r\n *  <p>This is Starling's version of the Flash KeyboardEvent class. It contains the same \r\n *  properties as the Flash equivalent.</p> \r\n * \r\n *  <p>To be notified of keyboard events, add an event listener to any display object that\r\n *  is part of your display tree. Starling has no concept of a \"Focus\" like native openfl.</p>\r\n *  \r\n *  @see starling.display.Stage\r\n */\r\nclass KeyboardEvent extends Event\r\n{\r\n\tpublic var charCode(get, never):Int;\r\n\tpublic var keyCode(get, never):Int;\r\n\tpublic var keyLocation(get, never):Int;\r\n\tpublic var altKey(get, never):Bool;\r\n\tpublic var ctrlKey(get, never):Bool;\r\n\tpublic var shiftKey(get, never):Bool;\r\n\r\n\t/** Event type for a key that was released. */\r\n\tpublic static var KEY_UP:String = \"keyUp\";\r\n\t\r\n\t/** Event type for a key that was pressed. */\r\n\tpublic static var KEY_DOWN:String = \"keyDown\";\r\n\t\r\n\tprivate var _charCode:Int;\r\n\tprivate var _keyCode:Int;\r\n\tprivate var _keyLocation:Int;\r\n\tprivate var _altKey:Bool;\r\n\tprivate var _ctrlKey:Bool;\r\n\tprivate var _shiftKey:Bool;\r\n\tprivate var _isDefaultPrevented:Bool;\r\n\t\r\n\t/** Creates a new KeyboardEvent. */\r\n\tpublic function new(type:String, charCode:Int = 0, keyCode:Int = 0,\r\n\t\t\tkeyLocation:Int = 0, ctrlKey:Bool = false,\r\n\t\t\taltKey:Bool = false, shiftKey:Bool = false)\r\n\t{\r\n\t\tsuper(type, false, keyCode);\r\n\t\t_charCode = charCode;\r\n\t\t_keyCode = keyCode;\r\n\t\t_keyLocation = keyLocation;\r\n\t\t_ctrlKey = ctrlKey;\r\n\t\t_altKey = altKey;\r\n\t\t_shiftKey = shiftKey;\r\n\t}\r\n\t\r\n\t// prevent default\r\n\t\r\n\t/** Cancels the keyboard event's default behavior. This will be forwarded to the native\r\n\t *  flash KeyboardEvent. */\r\n\tpublic function preventDefault():Void\r\n\t{\r\n\t\t_isDefaultPrevented = true;\r\n\t}\r\n\t\r\n\t/** Checks whether the preventDefault() method has been called on the event. */\r\n\tpublic function isDefaultPrevented():Bool\r\n\t{\r\n\t\treturn _isDefaultPrevented;\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** Contains the character code of the key. */\r\n\tprivate function get_charCode():Int\r\n\t{\r\n\t\treturn _charCode;\r\n\t}\r\n\t\r\n\t/** The key code of the key. */\r\n\tprivate function get_keyCode():Int\r\n\t{\r\n\t\treturn _keyCode;\r\n\t}\r\n\t\r\n\t/** Indicates the location of the key on the keyboard. This is useful for differentiating \r\n\t *  keys that appear more than once on a keyboard. @see Keylocation */\r\n\tprivate function get_keyLocation():Int\r\n\t{\r\n\t\treturn _keyLocation;\r\n\t}\r\n\t\r\n\t/** Indicates whether the Alt key is active on Windows or Linux; \r\n\t *  indicates whether the Option key is active on Mac OS. */\r\n\tprivate function get_altKey():Bool\r\n\t{\r\n\t\treturn _altKey;\r\n\t}\r\n\t\r\n\t/** Indicates whether the Ctrl key is active on Windows or Linux; \r\n\t *  indicates whether either the Ctrl or the Command key is active on Mac OS. */\r\n\tprivate function get_ctrlKey():Bool\r\n\t{\r\n\t\treturn _ctrlKey;\r\n\t}\r\n\t\r\n\t/** Indicates whether the Shift key modifier is active (true) or inactive (false). */\r\n\tprivate function get_shiftKey():Bool\r\n\t{\r\n\t\treturn _shiftKey;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.events;\r\n\r\n\r\nimport openfl.geom.Point;\r\n\r\n/** A ResizeEvent is dispatched by the stage when the size of the Flash container changes.\r\n *  Use it to update the Starling viewport and the stage size.\r\n *  \r\n *  <p>The event contains properties containing the updated width and height of the Flash \r\n *  player. If you want to scale the contents of your stage to fill the screen, update the \r\n *  <code>Starling.Current.viewPort</code> rectangle accordingly. If you want to make use of\r\n *  the additional screen estate, update the values of <code>stage.stageWidth</code> and \r\n *  <code>stage.stageHeight</code> as well.</p>\r\n *  \r\n *  @see starling.display.Stage\r\n *  @see starling.core.Starling\r\n */\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic var width(get, never):Int;\r\n\tpublic var height(get, never):Int;\r\n\r\n\t/** Event type for a resized Flash player. */\r\n\tpublic static var RESIZE:String = \"resize\";\r\n\t\r\n\t/** Creates a new ResizeEvent. */\r\n\tpublic function new(type:String, width:Int, height:Int, bubbles:Bool = false)\r\n\t{\r\n\t\tsuper(type, bubbles, new Point(width, height));\r\n\t}\r\n\t\r\n\t/** The updated width of the player. */\r\n\tprivate function get_width():Int\r\n\t{\r\n\t\treturn untyped cast(data, Point).x;\r\n\t}\r\n\t\r\n\t/** The updated height of the player. */\r\n\tprivate function get_height():Int\r\n\t{\r\n\t\treturn untyped cast(data, Point).y;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.events;\r\n\r\nimport starling.events.TouchEvent;\r\n\r\nimport openfl.geom.Point;\r\n\r\nimport starling.display.DisplayObject;\r\nimport starling.utils.StringUtil;\r\n\r\n/** A Touch object contains information about the presence or movement of a finger\r\n *  or the mouse on the screen.\r\n *  \r\n *  <p>You receive objects of this type from a TouchEvent. When such an event is triggered,\r\n *  you can query it for all touches that are currently present on the screen. One touch\r\n *  object contains information about a single touch; it always transitions through a series\r\n *  of TouchPhases. Have a look at the TouchPhase class for more information.</p>\r\n *  \r\n *  <strong>The position of a touch</strong>\r\n *  \r\n *  <p>You can get the current and previous position in stage coordinates with the corresponding \r\n *  properties. However, you'll want to have the position in a different coordinate system \r\n *  most of the time. For this reason, there are methods that convert the current and previous \r\n *  touches into the local coordinate system of any object.</p>\r\n * \r\n *  @see TouchEvent\r\n *  @see TouchPhase\r\n */\r\nclass Touch\r\n{\r\n\tpublic var id(get, never):Int;\r\n\tpublic var previousGlobalX(get, never):Float;\r\n\tpublic var previousGlobalY(get, never):Float;\r\n\tpublic var globalX(get, set):Float;\r\n\tpublic var globalY(get, set):Float;\r\n\tpublic var tapCount(get, set):Int;\r\n\tpublic var phase(get, set):String;\r\n\tpublic var target(get, set):DisplayObject;\r\n\tpublic var timestamp(get, set):Float;\r\n\tpublic var pressure(get, set):Float;\r\n\tpublic var width(get, set):Float;\r\n\tpublic var height(get, set):Float;\r\n\tpublic var cancelled(get, set):Bool;\r\n\t\r\n\t@:allow(starling.events)\r\n\tprivate var bubbleChain(get, never):Array<EventDispatcher>;\r\n\r\n\tprivate var _id:Int;\r\n\tprivate var _globalX:Float;\r\n\tprivate var _globalY:Float;\r\n\tprivate var _previousGlobalX:Float;\r\n\tprivate var _previousGlobalY:Float;\r\n\tprivate var _tapCount:Int;\r\n\tprivate var _phase:String;\r\n\tprivate var _target:DisplayObject;\r\n\tprivate var _timestamp:Float;\r\n\tprivate var _pressure:Float;\r\n\tprivate var _width:Float;\r\n\tprivate var _height:Float;\r\n\tprivate var _cancelled:Bool;\r\n\tprivate var _bubbleChain:Array<EventDispatcher>;\r\n\t\r\n\t/** Helper object. */\r\n\tprivate static var sHelperPoint:Point = new Point();\r\n\t\r\n\t/** Creates a new Touch object. */\r\n\tpublic function new(id:Int)\r\n\t{\r\n\t\t_id = id;\r\n\t\t_tapCount = 0;\r\n\t\t_phase = TouchPhase.HOVER;\r\n\t\t_pressure = _width = _height = 1.0;\r\n\t\t_bubbleChain = [];\r\n\t}\r\n\t\r\n\t/** Converts the current location of a touch to the local coordinate system of a display \r\n\t *  object. If you pass an <code>out</code>-point, the result will be stored in this point\r\n\t *  instead of creating a new object.*/\r\n\tpublic function getLocation(space:DisplayObject, out:Point = null):Point\r\n\t{\r\n\t\tsHelperPoint.setTo(_globalX, _globalY);\r\n\t\treturn space.globalToLocal(sHelperPoint, out);\r\n\t}\r\n\t\r\n\t/** Converts the previous location of a touch to the local coordinate system of a display \r\n\t *  object. If you pass an <code>out</code>-point, the result will be stored in this point\r\n\t *  instead of creating a new object.*/\r\n\tpublic function getPreviousLocation(space:DisplayObject, out:Point = null):Point\r\n\t{\r\n\t\tsHelperPoint.setTo(_previousGlobalX, _previousGlobalY);\r\n\t\treturn space.globalToLocal(sHelperPoint, out);\r\n\t}\r\n\t\r\n\t/** Returns the movement of the touch between the current and previous location. \r\n\t *  If you pass an <code>out</code>-point, the result will be stored in this point instead\r\n\t *  of creating a new object. */\r\n\tpublic function getMovement(space:DisplayObject, out:Point = null):Point\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Point();\r\n\t\tgetLocation(space, out);\r\n\t\tvar x:Float = out.x;\r\n\t\tvar y:Float = out.y;\r\n\t\tgetPreviousLocation(space, out);\r\n\t\tout.setTo(x - out.x, y - out.y);\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Indicates if the target or one of its children is touched. */\r\n\tpublic function isTouching(target:DisplayObject):Bool\r\n\t{\r\n\t\treturn Lambda.indexOf(_bubbleChain, target) != -1;\r\n\t}\r\n\t\r\n\t/** Returns a description of the object. */\r\n\tpublic function toString():String\r\n\t{\r\n\t\treturn StringUtil.format(\"[Touch {0}: globalX={1}, globalY={2}, phase={3}]\", [_id, _globalX, _globalY, _phase]);\r\n\t}\r\n\t\r\n\t/** Creates a clone of the Touch object. */\r\n\tpublic function clone():Touch\r\n\t{\r\n\t\tvar clone:Touch = new Touch(_id);\r\n\t\tclone._globalX = _globalX;\r\n\t\tclone._globalY = _globalY;\r\n\t\tclone._previousGlobalX = _previousGlobalX;\r\n\t\tclone._previousGlobalY = _previousGlobalY;\r\n\t\tclone._phase = _phase;\r\n\t\tclone._tapCount = _tapCount;\r\n\t\tclone._timestamp = _timestamp;\r\n\t\tclone._pressure = _pressure;\r\n\t\tclone._width = _width;\r\n\t\tclone._height = _height;\r\n\t\tclone._cancelled = _cancelled;\r\n\t\tclone.target = _target;\r\n\t\treturn clone;\r\n\t}\r\n\t\r\n\t// helper methods\r\n\t\r\n\tprivate function updateBubbleChain():Void\r\n\t{\r\n\t\tif (_target != null) \r\n\t\t{\r\n\t\t\tvar length:Int = 1;\r\n\t\t\tvar element:DisplayObject = _target;\r\n\t\t\t\r\n\t\t\t_bubbleChain.splice(1, _bubbleChain.length - 1);\r\n\t\t\t_bubbleChain[0] = element;\r\n\t\t\t\r\n\t\t\twhile ((element = element.parent) != null)\r\n\t\t\t_bubbleChain[cast(length++, Int)] = element;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t   _bubbleChain.splice(0, _bubbleChain.length);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** The identifier of a touch. '0' for mouse events, an increasing number for touches. */\r\n\tprivate function get_id():Int {\r\n\t\treturn _id;\r\n\t}\r\n\t\r\n\t/** The previous x-position of the touch in stage coordinates. */\r\n\tprivate function get_previousGlobalX():Float\r\n\t{\r\n\t\treturn _previousGlobalX;\r\n\t}\r\n\t\r\n\t/** The previous y-position of the touch in stage coordinates. */\r\n\tprivate function get_previousGlobalY():Float\r\n\t{\r\n\t\treturn _previousGlobalY;\r\n\t}\r\n\t\r\n\t/** The x-position of the touch in stage coordinates. If you change this value,\r\n\t *  the previous one will be moved to \"previousGlobalX\". */\r\n\tprivate function get_globalX():Float\r\n\t{\r\n\t\treturn _globalX;\r\n\t}\r\n\t\r\n\tprivate function set_globalX(value:Float):Float\r\n\t{\r\n\t\t_previousGlobalX = _globalX != _globalX ? value : _globalX; // isNaN check\r\n\t\t_globalX = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The y-position of the touch in stage coordinates. If you change this value,\r\n\t *  the previous one will be moved to \"previousGlobalY\". */\r\n\tprivate function get_globalY():Float\r\n\t{\r\n\t\treturn _globalY;\r\n\t}\r\n\t\r\n\tprivate function set_globalY(value:Float):Float\r\n\t{\r\n\t\t_previousGlobalY = _globalY != _globalY ? value : _globalY; // isNaN check\r\n\t\t_globalY = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The number of taps the finger made in a short amount of time. Use this to detect \r\n\t *  double-taps / double-clicks, etc. */\r\n\tprivate function get_tapCount():Int\r\n\t{\r\n\t\treturn _tapCount;\r\n\t}\r\n\t\r\n\tprivate function set_tapCount(value:Int):Int\r\n\t{\r\n\t\t_tapCount = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The current phase the touch is in. @see TouchPhase */\r\n\tprivate function get_phase():String\r\n\t{\r\n\t\treturn _phase;\r\n\t}\r\n\t\r\n\tprivate function set_phase(value:String):String\r\n\t{\r\n\t\t_phase = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The display object at which the touch occurred. */\r\n\tprivate function get_target():DisplayObject\r\n\t{\r\n\t\treturn _target;\r\n\t}\r\n\t\r\n\tprivate function set_target(value:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (_target != value) \r\n\t\t{\r\n\t\t\t_target = value;\r\n\t\t\tupdateBubbleChain();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The moment the touch occurred (in seconds since application start). */\r\n\tprivate function get_timestamp():Float\r\n\t{\r\n\t\treturn _timestamp;\r\n\t}\r\n\tprivate function set_timestamp(value:Float):Float\r\n\t{\r\n\t\t_timestamp = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** A value between 0.0 and 1.0 indicating force of the contact with the device. \r\n\t *  If the device does not support detecting the pressure, the value is 1.0. */\r\n\tprivate function get_pressure():Float\r\n\t{\r\n\t\treturn _pressure;\r\n\t}\r\n\t\r\n\tprivate function set_pressure(value:Float):Float\r\n\t{\r\n\t\t_pressure = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Width of the contact area. \r\n\t *  If the device does not support detecting the pressure, the value is 1.0. */\r\n\tprivate function get_width():Float\r\n\t{\r\n\t\treturn _width;\r\n\t}\r\n\t\r\n\tprivate function set_width(value:Float):Float\r\n\t{\r\n\t\t_width = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Height of the contact area. \r\n\t *  If the device does not support detecting the pressure, the value is 1.0. */\r\n\tprivate function get_height():Float\r\n\t{\r\n\t\treturn _height;\r\n\t}\r\n\t\r\n\tprivate function set_height(value:Float):Float\r\n\t{\r\n\t\t_height = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if the touch has been cancelled, which may happen when the app moves into\r\n\t *  the background ('Event.DEACTIVATE'). @default false */\r\n\tprivate function get_cancelled():Bool\r\n\t{\r\n\t\treturn _cancelled;\r\n\t}\r\n\t\r\n\tprivate function set_cancelled(value:Bool):Bool\r\n\t{\r\n\t\t_cancelled = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t// internal methods\r\n\t\r\n\t/** @private \r\n\t *  Dispatches a touch event along the current bubble chain (which is updated each time\r\n\t *  a target is set). */\r\n\t@:allow(starling.events)\r\n\tprivate function dispatchEvent(event:TouchEvent):Void\r\n\t{\r\n\t\tif (_target != null) event.dispatch(_bubbleChain);\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.events)\r\n\tprivate function get_bubbleChain():Array<EventDispatcher>\r\n\t{\r\n\t\treturn _bubbleChain.concat([]);\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.events;\r\n\r\n\r\nimport starling.display.DisplayObject;\r\n\r\n\r\n\r\n/** A TouchEvent is triggered either by touch or mouse input.  \r\n *  \r\n *  <p>In Starling, both touch events and mouse events are handled through the same class: \r\n *  TouchEvent. To process user input from a touch screen or the mouse, you have to register\r\n *  an event listener for events of the type <code>TouchEvent.TOUCH</code>. This is the only\r\n *  event type you need to handle; the long list of mouse event types as they are used in\r\n *  conventional Flash are mapped to so-called \"TouchPhases\" instead.</p> \r\n * \r\n *  <p>The difference between mouse input and touch input is that</p>\r\n *  \r\n *  <ul>\r\n *\t<li>only one mouse cursor can be present at a given moment and</li>\r\n *\t<li>only the mouse can \"hover\" over an object without a pressed button.</li>\r\n *  </ul> \r\n *  \r\n *  <strong>Which objects receive touch events?</strong>\r\n * \r\n *  <p>In Starling, any display object receives touch events, as long as the  \r\n *  <code>touchable</code> property of the object and its parents is enabled. There \r\n *  is no \"InteractiveObject\" class in Starling.</p>\r\n *  \r\n *  <strong>How to work with individual touches</strong>\r\n *  \r\n *  <p>The event contains a list of all touches that are currently present. Each individual\r\n *  touch is stored in an object of type \"Touch\". Since you are normally only interested in \r\n *  the touches that occurred on top of certain objects, you can query the event for touches\r\n *  with a specific target:</p>\r\n * \r\n *  <code>var touches:Vector.&lt;Touch&gt; = touchEvent.getTouches(this);</code>\r\n *  \r\n *  <p>This will return all touches of \"this\" or one of its children. When you are not using \r\n *  multitouch, you can also access the touch object directly, like this:</p>\r\n * \r\n *  <code>var touch:Touch = touchEvent.getTouch(this);</code>\r\n *  \r\n *  @see Touch\r\n *  @see TouchPhase\r\n */\r\nclass TouchEvent extends Event\r\n{\r\n\tpublic var timestamp(get, never):Float;\r\n\tpublic var touches(get, never):Array<Touch>;\r\n\tpublic var shiftKey(get, never):Bool;\r\n\tpublic var ctrlKey(get, never):Bool;\r\n\r\n\t/** Event type for touch or mouse input. */\r\n\tpublic static var TOUCH:String = \"touch\";\r\n\t\r\n\tprivate var _shiftKey:Bool;\r\n\tprivate var _ctrlKey:Bool;\r\n\tprivate var _timestamp:Float;\r\n\tprivate var _visitedObjects:Array<EventDispatcher>;\r\n\t\r\n\t/** Helper object. */\r\n\tprivate static var sTouches:Array<Touch> = [];\r\n\t\r\n\t/** Creates a new TouchEvent instance. */\r\n\tpublic function new(type:String, touches:Array<Touch>, shiftKey:Bool = false,\r\n\t\t\tctrlKey:Bool = false, bubbles:Bool = true)\r\n\t{\r\n\t\tsuper(type, bubbles, touches);\r\n\t\t\r\n\t\t_shiftKey = shiftKey;\r\n\t\t_ctrlKey = ctrlKey;\r\n\t\t_timestamp = -1.0;\r\n\t\t_visitedObjects = [];\r\n\t\t\r\n\t\tvar numTouches:Int = touches.length;\r\n\t\tfor (i in 0...numTouches){if (touches[i].timestamp > _timestamp) \r\n\t\t\t\t_timestamp = touches[i].timestamp;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Returns a list of touches that originated over a certain target. If you pass an\r\n\t *  <code>out</code>-vector, the touches will be added to this vector instead of creating\r\n\t *  a new object. */\r\n\tpublic function getTouches(target:DisplayObject, phase:String = null,\r\n\t\t\tout:Array<Touch> = null):Array<Touch>\r\n\t{\r\n\t\tif (out == null)\t\t\t out = [];\r\n\t\t// var allTouches:Array<Touch> = cast(data, Array<Touch>);\r\n\t\tvar dataArray:Array<Dynamic> = cast(data, Array<Dynamic>);\r\n\t\tvar allTouches = new Array<Touch>();\r\n\t\tfor (j in 0...dataArray.length) allTouches.push(dataArray[j]);\r\n\t   \r\n\t\tvar numTouches:Int = allTouches.length;\r\n\t\t\r\n\t\tfor (i in 0...numTouches){\r\n\t\t\tvar touch:Touch = allTouches[i];\r\n\t\t\tvar correctTarget:Bool = touch.isTouching(target);\r\n\t\t\tvar correctPhase:Bool = (phase == null || phase == touch.phase);\r\n\t\t\t\r\n\t\t\tif (correctTarget && correctPhase) \r\n\t\t\t\tout[out.length] = touch;\r\n\t\t\t// avoiding 'push'\r\n\t\t}\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Returns a touch that originated over a certain target. \r\n\t * \r\n\t *  @param target   The object that was touched; may also be a parent of the actual\r\n\t *\t\t\t\t  touch-target.\r\n\t *  @param phase\tThe phase the touch must be in, or null if you don't care.\r\n\t *  @param id\t   The ID of the requested touch, or -1 if you don't care.\r\n\t */\r\n\tpublic function getTouch(target:DisplayObject, phase:String = null, id:Int = -1):Touch\r\n\t{\r\n\t\tgetTouches(target, phase, sTouches);\r\n\t\tvar numTouches:Int = sTouches.length;\r\n\t\t\r\n\t\tif (numTouches > 0) \r\n\t\t{\r\n\t\t\tvar touch:Touch = null;\r\n\t\t\t\r\n\t\t\tif (id < 0)\t\t\t\t touch = sTouches[0]\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tfor (i in 0...numTouches){if (sTouches[i].id == id) {touch = sTouches[i];break;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsTouches.splice(0, sTouches.length);\r\n\t\t\treturn touch;\r\n\t\t}\r\n\t\telse return null;\r\n\t}\r\n\t\r\n\t/** Indicates if a target is currently being touched or hovered over. */\r\n\tpublic function interactsWith(target:DisplayObject):Bool\r\n\t{\r\n\t\tvar result:Bool = false;\r\n\t\tgetTouches(target, null, sTouches);\r\n\t\t\r\n\t\tvar i:Int = sTouches.length - 1;\r\n\t\twhile (i >= 0){\r\n\t\t\tif (sTouches[i].phase != TouchPhase.ENDED) \r\n\t\t\t{\r\n\t\t\t\tresult = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t--i;\r\n\t\t}\r\n\t\t\r\n\t\tsTouches.splice(0, sTouches.length);\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t// custom dispatching\r\n\t\r\n\t/** @private\r\n\t *  Dispatches the event along a custom bubble chain. During the lifetime of the event,\r\n\t *  each object is visited only once. */\r\n\t@:allow(starling.events)\r\n\tprivate function dispatch(chain:Array<EventDispatcher>):Void\r\n\t{\r\n\t\tif (chain != null && chain.length > 0) \r\n\t\t{\r\n\t\t\tvar chainLength:Int = (bubbles) ? chain.length:1;\r\n\t\t\tvar previousTarget:EventDispatcher = target;\r\n\t\t\tsetTarget(cast(chain[0], EventDispatcher));\r\n\t\t\t\r\n\t\t\tfor (i in 0...chainLength){\r\n\t\t\t\tvar chainElement:EventDispatcher = cast(chain[i], EventDispatcher);\r\n\t\t\t\tif (Lambda.indexOf(_visitedObjects, chainElement) == -1) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar stopPropagation:Bool = chainElement.invokeEvent(this);\r\n\t\t\t\t\t_visitedObjects[_visitedObjects.length] = chainElement;\r\n\t\t\t\t\tif (stopPropagation)\t\t\t\t\t\t break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsetTarget(previousTarget);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** The time the event occurred (in seconds since application launch). */\r\n\tprivate function get_timestamp():Float\r\n\t{\r\n\t\treturn _timestamp;\r\n\t}\r\n\t\r\n\t/** All touches that are currently available. */\r\n\tprivate function get_touches():Array<Touch>\r\n\t{\r\n\t\tvar dataArray:Array<Dynamic> = cast(data, Array<Dynamic>);\r\n\t\tvar _touches = new Array<Touch>();\r\n\t\tfor (j in 0...dataArray.length) _touches.push(dataArray[j]);\r\n\t\treturn _touches;\r\n\t}\r\n\t\r\n\t/** Indicates if the shift key was pressed when the event occurred. */\r\n\tprivate function get_shiftKey():Bool\r\n\t{\r\n\t\treturn _shiftKey;\r\n\t}\r\n\t\r\n\t/** Indicates if the ctrl key was pressed when the event occurred. (Mac OS: Cmd or Ctrl) */\r\n\tprivate function get_ctrlKey():Bool\r\n\t{\r\n\t\treturn _ctrlKey;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.events;\r\n\r\n\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.Shape;\r\nimport openfl.geom.Point;\r\n\r\nimport starling.core.Starling;\r\nimport starling.display.Image;\r\nimport starling.display.Sprite;\r\nimport starling.textures.Texture;\r\n\r\n/** The TouchMarker is used internally to mark touches created through \"simulateMultitouch\". */\r\nclass TouchMarker extends Sprite\r\n{\r\n\tprivate var realMarker(get, never):Image;\r\n\tprivate var mockMarker(get, never):Image;\r\n\tpublic var realX(get, never):Float;\r\n\tpublic var realY(get, never):Float;\r\n\tpublic var mockX(get, never):Float;\r\n\tpublic var mockY(get, never):Float;\r\n\r\n\tprivate var _center:Point;\r\n\tprivate var _texture:Texture;\r\n\t\r\n\t@:allow(starling.events)\r\n\tprivate function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t_center = new Point();\r\n\t\t_texture = createTexture();\r\n\t\t\r\n\t\tfor (i in 0...2){\r\n\t\t\tvar marker:Image = new Image(_texture);\r\n\t\t\tmarker.pivotX = _texture.width / 2;\r\n\t\t\tmarker.pivotY = _texture.height / 2;\r\n\t\t\tmarker.touchable = false;\r\n\t\t\taddChild(marker);\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\t_texture.dispose();\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\tpublic function moveMarker(x:Float, y:Float, withCenter:Bool = false):Void\r\n\t{\r\n\t\tif (withCenter) \r\n\t\t{\r\n\t\t\t_center.x += x - realMarker.x;\r\n\t\t\t_center.y += y - realMarker.y;\r\n\t\t}\r\n\t\t\r\n\t\trealMarker.x = x;\r\n\t\trealMarker.y = y;\r\n\t\tmockMarker.x = 2 * _center.x - x;\r\n\t\tmockMarker.y = 2 * _center.y - y;\r\n\t}\r\n\t\r\n\tpublic function moveCenter(x:Float, y:Float):Void\r\n\t{\r\n\t\t_center.x = x;\r\n\t\t_center.y = y;\r\n\t\tmoveMarker(realX, realY);\r\n\t}\r\n\t\r\n\tprivate function createTexture():Texture\r\n\t{\r\n\t\tvar scale:Float = Starling.ContentScaleFactor;\r\n\t\tvar radius:Float = 12 * scale;\r\n\t\tvar width:Int = untyped 32 * scale;\r\n\t\tvar height:Int = untyped 32 * scale;\r\n\t\tvar thickness:Float = 1.5 * scale;\r\n\t\tvar shape:Shape = new Shape();\r\n\t\t\r\n\t\t// draw dark outline\r\n\t\tshape.graphics.lineStyle(thickness, 0x0, 0.3);\r\n\t\tshape.graphics.drawCircle(width / 2, height / 2, radius + thickness);\r\n\t\t\r\n\t\t// draw white inner circle\r\n\t\tshape.graphics.beginFill(0xffffff, 0.4);\r\n\t\tshape.graphics.lineStyle(thickness, 0xffffff);\r\n\t\tshape.graphics.drawCircle(width / 2, height / 2, radius);\r\n\t\tshape.graphics.endFill();\r\n\t\t\r\n\t\tvar bmpData:BitmapData = new BitmapData(width, height, true, 0x0);\r\n\t\tbmpData.draw(shape);\r\n\t\t\r\n\t\treturn Texture.fromBitmapData(bmpData, false, false, scale);\r\n\t}\r\n\t\r\n\tprivate function get_realMarker():Image\r\n\t{\r\n\t\treturn cast(getChildAt(0), Image);\r\n\t}\r\n\t\r\n\tprivate function get_mockMarker():Image\r\n\t{\r\n\t\treturn cast(getChildAt(1), Image);\r\n\t}\r\n\t\r\n\tprivate function get_realX():Float\r\n\t{\r\n\t\treturn realMarker.x;\r\n\t}\r\n\t\r\n\tprivate function get_realY():Float\r\n\t{\r\n\t\treturn realMarker.y;\r\n\t}\r\n\t\r\n\tprivate function get_mockX():Float\r\n\t{\r\n\t\treturn mockMarker.x;\r\n\t}\r\n\t\r\n\tprivate function get_mockY():Float\r\n\t{\r\n\t\treturn mockMarker.y;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.events;\r\n\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** A class that provides constant values for the phases of a touch object. \r\n *  \r\n *  <p>A touch moves through at least the following phases in its life:</p>\r\n *  \r\n *  <code>BEGAN -> MOVED -> ENDED</code>\r\n *  \r\n *  <p>Furthermore, a touch can enter a <code>STATIONARY</code> phase. That phase does not\r\n *  trigger a touch event itself, and it can only occur in multitouch environments. Picture a \r\n *  situation where one finger is moving and the other is stationary. A touch event will\r\n *  be dispatched only to the object under the <em>moving</em> finger. In the list of touches\r\n *  of that event, you will find the second touch in the stationary phase.</p>\r\n *  \r\n *  <p>Finally, there's the <code>HOVER</code> phase, which is exclusive to mouse input. It is\r\n *  the equivalent of a <code>MouseOver</code> event in Flash when the mouse button is\r\n *  <em>not</em> pressed.</p> \r\n */\r\n@:final class TouchPhase\r\n{\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** Only available for mouse input: the cursor hovers over an object <em>without</em> a \r\n\t *  pressed button. */\r\n\tpublic static var HOVER:String = \"hover\";\r\n\t\r\n\t/** The finger touched the screen just now, or the mouse button was pressed. */\r\n\tpublic static var BEGAN:String = \"began\";\r\n\t\r\n\t/** The finger moves around on the screen, or the mouse is moved while the button is \r\n\t *  pressed. */\r\n\tpublic static var MOVED:String = \"moved\";\r\n\t\r\n\t/** The finger or mouse (with pressed button) has not moved since the last frame. */\r\n\tpublic static var STATIONARY:String = \"stationary\";\r\n\t\r\n\t/** The finger was lifted from the screen or from the mouse button. */\r\n\tpublic static var ENDED:String = \"ended\";\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.events;\r\n\r\nimport openfl.geom.Point;\r\n\r\nimport starling.core.Starling;\r\nimport starling.display.DisplayObject;\r\nimport starling.display.Stage;\r\n\r\n/** The TouchProcessor is used to convert mouse and touch events of the conventional\r\n *  Flash stage to Starling's TouchEvents.\r\n *  \r\n *  <p>The Starling instance listens to mouse and touch events on the native stage. The\r\n *  attributes of those events are enqueued (right as they are happening) in the\r\n *  TouchProcessor.</p>\r\n *  \r\n *  <p>Once per frame, the \"advanceTime\" method is called. It analyzes the touch queue and\r\n *  figures out which touches are active at that moment; the properties of all touch objects\r\n *  are updated accordingly.</p>\r\n *  \r\n *  <p>Once the list of touches has been finalized, the \"processTouches\" method is called\r\n *  (that might happen several times in one \"advanceTime\" execution; no information is\r\n *  discarded). It's responsible for dispatching the actual touch events to the Starling\r\n *  display tree.</p>\r\n *  \r\n *  <strong>Subclassing TouchProcessor</strong>\r\n *  \r\n *  <p>You can extend the TouchProcessor if you need to have more control over touch and\r\n *  mouse input. For example, you could filter the touches by overriding the \"processTouches\"\r\n *  method, throwing away any touches you're not interested in and passing the rest to the\r\n *  super implementation.</p>\r\n *  \r\n *  <p>To use your custom TouchProcessor, assign it to the \"Starling.touchProcessor\"\r\n *  property.</p>\r\n *  \r\n *  <p>Note that you should not dispatch TouchEvents yourself, since they are\r\n *  much more complex to handle than conventional events (e.g. it must be made sure that an\r\n *  object receives a TouchEvent only once, even if it's manipulated with several fingers).\r\n *  Always use the base implementation of \"processTouches\" to let them be dispatched. That\r\n *  said: you can always dispatch your own custom events, of course.</p>\r\n */\r\nclass TouchProcessor\r\n{\r\n\tpublic var simulateMultitouch(get, set):Bool;\r\n\tpublic var multitapTime(get, set):Float;\r\n\tpublic var multitapDistance(get, set):Float;\r\n\tpublic var root(get, set):DisplayObject;\r\n\tpublic var stage(get, null):Stage;\r\n\tpublic var numCurrentTouches(get, null):Int;\r\n\t\r\n\tprivate var _stage:Stage;\r\n\tprivate var _root:DisplayObject;\r\n\tprivate var _elapsedTime:Float;\r\n\tprivate var _lastTaps:Array<Touch>;\r\n\tprivate var _shiftDown:Bool = false;\r\n\tprivate var _ctrlDown:Bool  = false;\r\n\tprivate var _multitapTime:Float = 0.3;\r\n\tprivate var _multitapDistance:Float = 25;\r\n\r\n\tprivate var _touchMarker:TouchMarker;\r\n\tprivate var _simulateMultitouch:Bool;\r\n\t\r\n\t/** A vector of arrays with the arguments that were passed to the \"enqueue\"\r\n\t *  method (the oldest being at the end of the vector). */\r\n\tprivate var _queue:Array<Array<Dynamic>>;\r\n\t\r\n\t/** The list of all currently active touches. */\r\n\tprivate var _currentTouches:Array<Touch>;\r\n\t\r\n\t/** Helper objects. */\r\n\tprivate static var sUpdatedTouches:Array<Touch> = new Array<Touch>();\r\n\tprivate static var sHoveringTouchData:Array<Dynamic> = new Array<Dynamic>();\r\n\tprivate static var sHelperPoint:Point = new Point();\r\n\tvar target:Starling;\r\n\t\r\n\t/** Creates a new TouchProcessor that will dispatch events to the given stage. */\r\n\tpublic function new(stage:Stage)\r\n\t{\r\n\t\t_root = _stage = stage;\r\n\t\t_elapsedTime = 0.0;\r\n\t\t_currentTouches = new Array<Touch>();\r\n\t\t_queue = new Array<Array<Dynamic>>();\r\n\t\t_lastTaps = [];\r\n\r\n\t\t_stage.addEventListener(KeyboardEvent.KEY_DOWN, onKey);\r\n\t\t_stage.addEventListener(KeyboardEvent.KEY_UP,   onKey);\r\n\t\tmonitorInterruptions(true);\r\n\t}\r\n\r\n\t/** Removes all event handlers on the stage and releases any acquired resources. */\r\n\tpublic function dispose():Void\r\n\t{\r\n\t\tmonitorInterruptions(false);\r\n\t\t_stage.removeEventListener(KeyboardEvent.KEY_DOWN, onKey);\r\n\t\t_stage.removeEventListener(KeyboardEvent.KEY_UP,   onKey);\r\n\t\tif (_touchMarker != null) _touchMarker.dispose();\r\n\t}\r\n\t\r\n\t/** Analyzes the current touch queue and processes the list of current touches, emptying\r\n\t *  the queue while doing so. This method is called by Starling once per frame. */\r\n\tpublic function advanceTime(passedTime:Float):Void\r\n\t{\r\n\t\tvar i:Int;\r\n\t\tvar touch:Touch;\r\n\t\t\r\n\t\t_elapsedTime += passedTime;\r\n\t\tsUpdatedTouches.splice(0, sUpdatedTouches.length);\r\n\t\t\r\n\t\t// remove old taps\r\n\t\tif (_lastTaps.length > 0)\r\n\t\t{\r\n\t\t\tfor (j in 0..._lastTaps.length) {\r\n\t\t\t\tvar i:Int = _lastTaps.length - j - 1;\r\n\t\t\t\tif (_elapsedTime - _lastTaps[i].timestamp > _multitapTime){\r\n\t\t\t\t\t_lastTaps.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\twhile (_queue.length > 0)\r\n\t\t{\r\n\t\t\t// Set touches that were new or moving to phase 'stationary'.\r\n\t\t\tfor (touch in _currentTouches)\r\n\t\t\t\tif (touch.phase == TouchPhase.BEGAN || touch.phase == TouchPhase.MOVED)\r\n\t\t\t\t\ttouch.phase = TouchPhase.STATIONARY;\r\n\r\n\t\t\t// analyze new touches, but each ID only once\r\n\t\t\twhile (_queue.length > 0 &&\r\n\t\t\t\t  !containsTouchWithID(sUpdatedTouches, _queue[_queue.length-1][0]))\r\n\t\t\t{\r\n\t\t\t\tvar touchArgs:Array<Dynamic> = _queue.pop();\r\n\t\t\t\ttouch = createOrUpdateTouch(\r\n\t\t\t\t\t\t\ttouchArgs[0], touchArgs[1], touchArgs[2], touchArgs[3],\r\n\t\t\t\t\t\t\ttouchArgs[4], touchArgs[5], touchArgs[6]);\r\n\t\t\t\t\r\n\t\t\t\tsUpdatedTouches[sUpdatedTouches.length] = touch; // avoiding 'push'\r\n\t\t\t}\r\n\r\n\t\t\t// process the current set of touches (i.e. dispatch touch events)\r\n\t\t\tprocessTouches(sUpdatedTouches, _shiftDown, _ctrlDown);\r\n\r\n\t\t\t// remove ended touches\r\n\t\t\tfor (j in 0..._currentTouches.length) {\r\n\t\t\t\tvar i:Int = _currentTouches.length - 1 - j;\r\n\t\t\t\tif (_currentTouches[i].phase == TouchPhase.ENDED){\r\n\t\t\t\t\t_currentTouches.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsUpdatedTouches.splice(0, sUpdatedTouches.length);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Dispatches TouchEvents to the display objects that are affected by the list of\r\n\t *  given touches. Called internally by \"advanceTime\". To calculate updated targets,\r\n\t *  the method will call \"hitTest\" on the \"root\" object.\r\n\t *  \r\n\t *  @param touches\ta list of all touches that have changed just now.\r\n\t *  @param shiftDown  indicates if the shift key was down when the touches occurred.\r\n\t *  @param ctrlDown   indicates if the ctrl or cmd key was down when the touches occurred.\r\n\t */\r\n\tprivate function processTouches(touches:Array<Touch>,\r\n\t\t\t\t\t\t\t\t\t  shiftDown:Bool, ctrlDown:Bool):Void\r\n\t{\r\n\t\tsHoveringTouchData.splice(0, sHoveringTouchData.length);\r\n\t\t\r\n\t\t// the same touch event will be dispatched to all targets;\r\n\t\t// the 'dispatch' method will make sure each bubble target is visited only once.\r\n\t\tvar touchEvent:TouchEvent = new TouchEvent(TouchEvent.TOUCH, _currentTouches, shiftDown, ctrlDown);\r\n\t\tvar touch:Touch;\r\n\t\t\r\n\t\t// hit test our updated touches\r\n\t\tfor (touch in touches)\r\n\t\t{\r\n\t\t\t// hovering touches need special handling (see below)\r\n\t\t\tif (touch.phase == TouchPhase.HOVER && touch.target != null)\r\n\t\t\t\tsHoveringTouchData[sHoveringTouchData.length] = {\r\n\t\t\t\t\ttouch: touch,\r\n\t\t\t\t\ttarget: touch.target,\r\n\t\t\t\t\tbubbleChain: touch.bubbleChain\r\n\t\t\t\t}; // avoiding 'push'\r\n\t\t\t\r\n\t\t\tif (touch.phase == TouchPhase.HOVER || touch.phase == TouchPhase.BEGAN)\r\n\t\t\t{\r\n\t\t\t\tsHelperPoint.setTo(touch.globalX, touch.globalY);\r\n\t\t\t\ttouch.target = _root.hitTest(sHelperPoint);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// if the target of a hovering touch changed, we dispatch the event to the previous\r\n\t\t// target to notify it that it's no longer being hovered over.\r\n\t\tfor (touchData in sHoveringTouchData) {\r\n\t\t\tvar touch:Touch = touchData.touch;\r\n\t\t\tif (touch.target != touchData.target)\r\n\t\t\t\ttouchEvent.dispatch(touchData.bubbleChain);\r\n\t\t}\r\n\t\t\r\n\t\t// dispatch events for the rest of our updated touches\r\n\t\tfor (touch in touches)\r\n\t\t\ttouch.dispatchEvent(touchEvent);\r\n\t}\r\n\t\r\n\t/** Enqueues a new touch our mouse event with the given properties. */\r\n\tpublic function enqueue(touchID:Int, phase:String, globalX:Float, globalY:Float,\r\n\t\t\t\t\t\t\tpressure:Float=1.0, width:Float=1.0, height:Float=1.0):Void\r\n\t{\r\n\t\t_queue.unshift([touchID, phase, globalX, globalY, pressure, width, height]);\r\n\t\t\r\n\t\t// multitouch simulation (only with mouse)\r\n\t\tif (_ctrlDown && _touchMarker != null && touchID == 0)\r\n\t\t{\r\n\t\t\t_touchMarker.moveMarker(globalX, globalY, _shiftDown);\r\n\t\t\t_queue.unshift([1, phase, _touchMarker.mockX, _touchMarker.mockY]);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Enqueues an artificial touch that represents the mouse leaving the stage.\r\n\t *  \r\n\t *  <p>On OS X, we get mouse events from outside the stage; on Windows, we do not.\r\n\t *  This method enqueues an artificial hover point that is just outside the stage.\r\n\t *  That way, objects listening for HOVERs over them will get notified everywhere.</p>\r\n\t */\r\n\tpublic function enqueueMouseLeftStage():Void\r\n\t{\r\n\t\tvar mouse:Touch = getCurrentTouch(0);\r\n\t\tif (mouse == null || mouse.phase != TouchPhase.HOVER) return;\r\n\t\t\r\n\t\tvar offset:Int = 1;\r\n\t\tvar exitX:Float = mouse.globalX;\r\n\t\tvar exitY:Float = mouse.globalY;\r\n\t\tvar distLeft:Float = mouse.globalX;\r\n\t\tvar distRight:Float = _stage.stageWidth - distLeft;\r\n\t\tvar distTop:Float = mouse.globalY;\r\n\t\tvar distBottom:Float = _stage.stageHeight - distTop;\r\n\t\tvar minDist:Float = Math.min(distLeft, distRight);\r\n\t\tminDist = Math.min(minDist, distTop);\r\n\t\tminDist = Math.min(minDist, distBottom);\r\n\t\t\r\n\t\t// the new hover point should be just outside the stage, near the point where\r\n\t\t// the mouse point was last to be seen.\r\n\t\t\r\n\t\tif (minDist == distLeft)\t   exitX = -offset;\r\n\t\telse if (minDist == distRight) exitX = _stage.stageWidth + offset;\r\n\t\telse if (minDist == distTop)   exitY = -offset;\r\n\t\telse\t\t\t\t\t\t   exitY = _stage.stageHeight + offset;\r\n\t\t\r\n\t\tenqueue(0, TouchPhase.HOVER, exitX, exitY);\r\n\t}\r\n\r\n\t/** Force-end all current touches. Changes the phase of all touches to 'ENDED' and\r\n\t *  immediately dispatches a new TouchEvent (if touches are present). Called automatically\r\n\t *  when the app receives a 'DEACTIVATE' event. */\r\n\tpublic function cancelTouches():Void\r\n\t{\r\n\t\tif (_currentTouches.length > 0)\r\n\t\t{\r\n\t\t\t// abort touches\r\n\t\t\tfor (touch in _currentTouches)\r\n\t\t\t{\r\n\t\t\t\tif (touch.phase == TouchPhase.BEGAN || touch.phase == TouchPhase.MOVED ||\r\n\t\t\t\t\ttouch.phase == TouchPhase.STATIONARY)\r\n\t\t\t\t{\r\n\t\t\t\t\ttouch.phase = TouchPhase.ENDED;\r\n\t\t\t\t\ttouch.cancelled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// dispatch events\r\n\t\t\tprocessTouches(_currentTouches, _shiftDown, _ctrlDown);\r\n\t\t}\r\n\r\n\t\t// purge touches\r\n\t\t_currentTouches.splice(0, _currentTouches.length);\r\n\t\t_queue.splice(0, _queue.length);\r\n\t}\r\n\t\r\n\tprivate function createOrUpdateTouch(touchID:Int, phase:String,\r\n\t\t\t\t\t\t\t\t\t\t globalX:Float, globalY:Float,\r\n\t\t\t\t\t\t\t\t\t\t pressure:Float=1.0,\r\n\t\t\t\t\t\t\t\t\t\t width:Float=1.0, height:Float=1.0):Touch\r\n\t{\r\n\t\tvar touch:Touch = getCurrentTouch(touchID);\r\n\t\t\r\n\t\tif (touch == null)\r\n\t\t{\r\n\t\t\ttouch = new Touch(touchID);\r\n\t\t\taddCurrentTouch(touch);\r\n\t\t}\r\n\t\t\r\n\t\ttouch.globalX = globalX;\r\n\t\ttouch.globalY = globalY;\r\n\t\ttouch.phase = phase;\r\n\t\ttouch.timestamp = _elapsedTime;\r\n\t\ttouch.pressure = pressure;\r\n\t\ttouch.width  = width;\r\n\t\ttouch.height = height;\r\n\r\n\t\tif (phase == TouchPhase.BEGAN)\r\n\t\t\tupdateTapCount(touch);\r\n\r\n\t\treturn touch;\r\n\t}\r\n\t\r\n\tprivate function updateTapCount(touch:Touch):Void\r\n\t{\r\n\t\tvar nearbyTap:Touch = null;\r\n\t\tvar minSqDist:Float = _multitapDistance * _multitapDistance;\r\n\t\t\r\n\t\tfor (tap in _lastTaps)\r\n\t\t{\r\n\t\t\tvar sqDist:Float = Math.pow(tap.globalX - touch.globalX, 2) +\r\n\t\t\t\t\t\t\t\tMath.pow(tap.globalY - touch.globalY, 2);\r\n\t\t\tif (sqDist <= minSqDist)\r\n\t\t\t{\r\n\t\t\t\tnearbyTap = tap;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (nearbyTap != null)\r\n\t\t{\r\n\t\t\ttouch.tapCount = nearbyTap.tapCount + 1;\r\n\t\t\t_lastTaps.splice(_lastTaps.indexOf(nearbyTap), 1);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ttouch.tapCount = 1;\r\n\t\t}\r\n\t\t\r\n\t\t_lastTaps[_lastTaps.length] = touch.clone(); // avoiding 'push'\r\n\t}\r\n\t\r\n\tprivate function addCurrentTouch(touch:Touch):Void\r\n\t{\r\n\t\tfor (j in 0..._currentTouches.length) \r\n\t\t{\r\n\t\t\tvar i = _currentTouches.length - 1 - j;\r\n\t\t\tif (_currentTouches[i].id == touch.id)\r\n\t\t\t\t_currentTouches.splice(i, 1);\r\n\t\t}\r\n\r\n\t\t_currentTouches[_currentTouches.length] = touch; // avoiding 'push'\r\n\t}\r\n\t\r\n\tprivate function getCurrentTouch(touchID:Int):Touch\r\n\t{\r\n\t\tfor (touch in _currentTouches)\r\n\t\t\tif (touch.id == touchID) return touch;\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tprivate function containsTouchWithID(touches:Array<Touch>, touchID:Int):Bool\r\n\t{\r\n\t\tfor (touch in touches)\r\n\t\t\tif (touch.id == touchID) return true;\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/** Indicates if multitouch simulation should be activated. When the user presses\r\n\t *  ctrl/cmd (and optionally shift), he'll see a second touch cursor that mimics the first.\r\n\t *  That's an easy way to develop and test multitouch when there's only a mouse available.\r\n\t */\r\n\tpublic function get_simulateMultitouch():Bool { return _simulateMultitouch; }\r\n\tpublic function set_simulateMultitouch(value:Bool):Bool\r\n\t{\r\n\t\tif (simulateMultitouch == value) return value; // no change\r\n\r\n\t\t_simulateMultitouch = value;\r\n\t\ttarget = Starling.Current;\r\n\r\n\t\tif (value && _touchMarker == null)\r\n\t\t{\r\n\t\t\tif (Starling.Current.contextValid)\r\n\t\t\t\tcreateTouchMarker();\r\n\t\t\telse\r\n\t\t\t\ttarget.addEventListener(Event.CONTEXT3D_CREATE, createTouchMarker);\r\n\t\t}\r\n\t\telse if (!value && _touchMarker != null)\r\n\t\t{\t\t\t\t\r\n\t\t\t_touchMarker.removeFromParent(true);\r\n\t\t\t_touchMarker = null;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function createTouchMarker():Void\r\n\t{\r\n\t\ttarget.removeEventListener(Event.CONTEXT3D_CREATE, createTouchMarker);\r\n\t\t\r\n\t\tif (_touchMarker == null)\r\n\t\t{\r\n\t\t\t_touchMarker = new TouchMarker();\r\n\t\t\t_touchMarker.visible = false;\r\n\t\t\t_stage.addChild(_touchMarker);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** The time period (in seconds) in which two touches must occur to be recognized as\r\n\t *  a multitap gesture. */\r\n\tpublic function get_multitapTime():Float { \r\n\t\treturn _multitapTime;\r\n\t}\r\n\t\r\n\tpublic function set_multitapTime(value:Float):Float { \r\n\t\treturn _multitapTime = value;\r\n\t}\r\n\t\r\n\t/** The distance (in points) describing how close two touches must be to each other to\r\n\t *  be recognized as a multitap gesture. */\r\n\tpublic function get_multitapDistance():Float { return \r\n\t\t_multitapDistance;\r\n\t}\r\n\t\r\n\tpublic function set_multitapDistance(value:Float):Float { \r\n\t\treturn _multitapDistance = value;\r\n\t}\r\n\r\n\t/** The base object that will be used for hit testing. Per default, this reference points\r\n\t *  to the stage; however, you can limit touch processing to certain parts of your game\r\n\t *  by assigning a different object. */\r\n\tpublic function get_root():DisplayObject { \r\n\t\treturn _root;\r\n\t}\r\n\t\r\n\tpublic function set_root(value:DisplayObject):DisplayObject { \r\n\t\treturn _root = value;\r\n\t}\r\n\t\r\n\t/** The stage object to which the touch events are (per default) dispatched. */\r\n\tpublic function get_stage():Stage { \r\n\t\treturn _stage;\r\n\t}\r\n\t\r\n\t/** Returns the number of fingers / touch points that are currently on the stage. */\r\n\tpublic function get_numCurrentTouches():Int { \r\n\t\treturn _currentTouches.length;\r\n\t}\r\n\r\n\t// keyboard handling\r\n\t\r\n\tprivate function onKey(event:KeyboardEvent):Void\r\n\t{\r\n\t\tif (event.keyCode == 17 || event.keyCode == 15) // ctrl or cmd key\r\n\t\t{\r\n\t\t\tvar wasCtrlDown:Bool = _ctrlDown;\r\n\t\t\t_ctrlDown = event.type == KeyboardEvent.KEY_DOWN;\r\n\t\t\t\r\n\t\t\tif (_touchMarker != null && wasCtrlDown != _ctrlDown)\r\n\t\t\t{\r\n\t\t\t\t_touchMarker.visible = _ctrlDown;\r\n\t\t\t\t_touchMarker.moveCenter(_stage.stageWidth/2, _stage.stageHeight/2);\r\n\t\t\t\t\r\n\t\t\t\tvar mouseTouch:Touch = getCurrentTouch(0);\r\n\t\t\t\tvar mockedTouch:Touch = getCurrentTouch(1);\r\n\t\t\t\t\r\n\t\t\t\tif (mouseTouch != null)\r\n\t\t\t\t\t_touchMarker.moveMarker(mouseTouch.globalX, mouseTouch.globalY);\r\n\t\t\t\t\r\n\t\t\t\tif (wasCtrlDown && mockedTouch != null && mockedTouch.phase != TouchPhase.ENDED)\r\n\t\t\t\t{\r\n\t\t\t\t\t// end active touch ...\r\n\t\t\t\t\t_queue.unshift([1, TouchPhase.ENDED, mockedTouch.globalX, mockedTouch.globalY]);\r\n\t\t\t\t}\r\n\t\t\t\telse if (_ctrlDown && mouseTouch != null)\r\n\t\t\t\t{\r\n\t\t\t\t\t// ... or start new one\r\n\t\t\t\t\tif (mouseTouch.phase == TouchPhase.HOVER || mouseTouch.phase == TouchPhase.ENDED)\r\n\t\t\t\t\t\t_queue.unshift([1, TouchPhase.HOVER, _touchMarker.mockX, _touchMarker.mockY]);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t_queue.unshift([1, TouchPhase.BEGAN, _touchMarker.mockX, _touchMarker.mockY]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (event.keyCode == 16) // shift key\r\n\t\t{\r\n\t\t\t_shiftDown = event.type == KeyboardEvent.KEY_DOWN;\r\n\t\t}\r\n\t}\r\n\r\n\t// interruption handling\r\n\t\r\n\tprivate function monitorInterruptions(enable:Bool):Void\r\n\t{\r\n\t\t// if the application moves into the background or is interrupted (e.g. through\r\n\t\t// an incoming phone call), we need to abort all touches.\r\n\t\ttrace(\"fix uncomment\");\r\n\t\t/*try\r\n\t\t{\r\n\t\t\tvar nativeAppClass:Dynamic = getDefinitionByName(\"openfl.desktop::NativeApplication\");\r\n\t\t\tvar nativeApp:Dynamic = nativeAppClass[\"nativeApplication\"];\r\n\t\t\t\r\n\t\t\tif (enable)\r\n\t\t\t\tnativeApp.addEventListener(\"deactivate\", onInterruption, false, 0, true);\r\n\t\t\telse\r\n\t\t\t\tnativeApp.removeEventListener(\"deactivate\", onInterruption);\r\n\t\t}\r\n\t\tcatch (e:Error) {} // we're not running in AIR*/\r\n\t}\r\n\t\r\n\tprivate function onInterruption(event:Dynamic):Void\r\n\t{\r\n\t\tcancelTouches();\r\n\t}\r\n}","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.filters;\r\n\r\nimport haxe.Constraints.Function;\r\nimport starling.filters.ITexturePool;\r\nimport starling.filters.TexturePool;\r\n\r\nimport openfl.errors.IllegalOperationError;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Rectangle;\r\n\r\nimport starling.core.Starling;\r\nimport starling.display.DisplayObject;\r\nimport starling.display.Quad;\r\nimport starling.display.Stage;\r\nimport starling.events.Event;\r\nimport starling.events.EventDispatcher;\r\nimport starling.rendering.BatchToken;\r\nimport starling.rendering.FilterEffect;\r\nimport starling.rendering.IndexData;\r\nimport starling.rendering.Painter;\r\nimport starling.rendering.VertexData;\r\nimport starling.textures.Texture;\r\nimport starling.utils.Padding;\r\nimport starling.utils.Pool;\r\nimport starling.utils.RectangleUtil;\r\n\r\n/** Dispatched when the settings change in a way that requires a redraw. */\r\n@:meta(Event(name=\"change\",type=\"starling.events.Event\"))\r\n\r\n\r\n/** Dispatched every frame on filters assigned to display objects connected to the stage. */\r\n@:meta(Event(name=\"enterFrame\",type=\"starling.events.EnterFrameEvent\"))\r\n\r\n\r\n/** The FragmentFilter class is the base class for all filter effects in Starling.\r\n *  All filters must extend this class. You can attach them to any display object through the\r\n *  <code>filter</code> property.\r\n *\r\n *  <p>A fragment filter works in the following way:</p>\r\n *  <ol>\r\n *\t<li>The object to be filtered is rendered into a texture.</li>\r\n *\t<li>That texture is passed to the <code>process</code> method.</li>\r\n *\t<li>This method processes the texture using a <code>FilterEffect</code> subclass\r\n *\t\tthat processes the input via fragment and vertex shaders to achieve a certain\r\n *\t\teffect.</li>\r\n *\t<li>If the filter requires several passes, the process method may execute the\r\n *\t\teffect several times, or even make use of other filters in the process.</li>\r\n *\t<li>In the end, a quad with the output texture is added to the batch renderer.\r\n *\t\tIn the next frame, if the object hasn't changed, the filter is drawn directly\r\n *\t\tfrom the cache.</li>\r\n *  </ol>\r\n *\r\n *  <p>All of this is set up by the basic FragmentFilter class. Concrete subclasses\r\n *  just need to override the protected method <code>createEffect</code> and (optionally)\r\n *  <code>process</code>. Typically, any properties on the filter are just forwarded to\r\n *  the effect instance, which is then used automatically by <code>process</code> to\r\n *  render the filter pass. For a simple example on how to write a single-pass filter,\r\n *  look at the implementation of the <code>ColorMatrixFilter</code>; for a composite\r\n *  filter (i.e. a filter that combines several others), look at the <code>GlowFilter</code>.\r\n *  </p>\r\n *\r\n *  <p>Beware that a filter instance may only be used on one object at a time!</p>\r\n *\r\n *  <p><strong>Animated filters</strong></p>\r\n *\r\n *  <p>The <code>process</code> method of a filter is only called when it's necessary, i.e.\r\n *  when the filter properties or the target display object changes. This means that you cannot\r\n *  rely on the method to be called on a regular basis, as needed when creating an animated\r\n *  filter class. Instead, you can do so by listening for an <code>ENTER_FRAME</code>-event.\r\n *  It is dispatched on the filter once every frame, as long as the filter is assigned to\r\n *  a display object that is connected to the stage.</p>\r\n *\r\n *  @see starling.rendering.FilterEffect\r\n */\r\nclass FragmentFilter extends EventDispatcher\r\n{\r\n\tprivate var target(get, never):DisplayObject;\r\n\tprivate var effect(get, never):FilterEffect;\r\n\tprivate var vertexData(get, never):VertexData;\r\n\tprivate var indexData(get, never):IndexData;\r\n\tpublic var padding(get, set):Padding;\r\n\r\n\tprivate var _quad:Quad;\r\n\tprivate var _target:DisplayObject;\r\n\tprivate var _effect:FilterEffect;\r\n\tprivate var _vertexData:VertexData;\r\n\tprivate var _indexData:IndexData;\r\n\tprivate var _token:BatchToken;\r\n\tprivate var _padding:Padding;\r\n\tprivate var _pool:TexturePool;\r\n\t\r\n\t// helper objects\r\n\tprivate static var sMatrix:Matrix = new Matrix();\r\n\t\r\n\t/** Creates a new instance. The base class' implementation just draws the unmodified\r\n\t *  input texture. */\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t// Handle lost context (using conventional Flash event for weak listener support)\r\n\t\tStarling.Current.stage3D.addEventListener(Event.CONTEXT3D_CREATE,\r\n\t\t\t\tonContextCreated, false, 0, true);\r\n\t}\r\n\t\r\n\t/** Disposes all resources that have been created by the filter. */\r\n\tpublic function dispose():Void\r\n\t{\r\n\t\tStarling.Current.stage3D.removeEventListener(Event.CONTEXT3D_CREATE, onContextCreated);\r\n\t\t\r\n\t\tif (_pool != null)\t\t\t _pool.dispose();\r\n\t\tif (_effect != null)\t\t\t _effect.dispose();\r\n\t\tif (_quad != null && _quad.texture != null) _quad.texture.dispose();\r\n\t\tif (_quad != null)\t\t\t _quad.dispose();\r\n\t\t\r\n\t\t_effect = null;\r\n\t\t_quad = null;\r\n\t}\r\n\t\r\n\tprivate function onContextCreated(event:Dynamic):Void\r\n\t{\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\t/** Renders the filtered target object. Most users will never have to call this manually;\r\n\t *  it's executed automatically in the rendering process of the filtered display object.\r\n\t */\r\n\tpublic function render(painter:Painter):Void\r\n\t{\r\n\t\tif (_target == null) \r\n\t\t\tthrow new IllegalOperationError(\"Cannot render filter without target\");\r\n\t\t\r\n\t\tif (_token == null)\t\t\t _token = new BatchToken();\r\n\t\tif (_pool == null)\t\t\t _pool = new TexturePool();\r\n\t\tif (_quad == null) {_quad = new Quad(32, 32);_quad.pixelSnapping = false;\r\n\t\t}\r\n\t\telse {_pool.putTexture(_quad.texture);_quad.texture = null;\r\n\t\t}\r\n\t\t\r\n\t\tvar bounds:Rectangle = Pool.getRectangle();\r\n\t\tvar root:DisplayObject = _target.root;\r\n\t\tvar stage:Stage = root.stage;\r\n\t\tvar stageBounds:Rectangle;\r\n\t\t\r\n\t\tif (_target == root)\t\t\t stage.getStageBounds(_target, bounds)\r\n\t\telse \r\n\t\t{\r\n\t\t\t_target.getBounds(stage, bounds);\r\n\t\t\t\r\n\t\t\t// intersect with stage (no need to render anything outside the stage)\r\n\t\t\tstageBounds = stage.getStageBounds(null, Pool.getRectangle());\r\n\t\t\tRectangleUtil.intersect(bounds, stageBounds, bounds);\r\n\t\t\tPool.putRectangle(stageBounds);\r\n\t\t}\r\n\t\t\r\n\t\tif (bounds.isEmpty()) \r\n\t\t{\r\n\t\t\tPool.putRectangle(bounds);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (_padding != null)\t\t\t RectangleUtil.extend(bounds,\r\n\t\t\t\t_padding.left, _padding.right, _padding.top, _padding.bottom);\r\n\t\t\r\n\t\t_pool.setSize(bounds.width, bounds.height);\r\n\t\t\r\n\t\tvar input:Texture = _pool.getTexture();\r\n\t\tvar frameID:Int = painter.frameID;\r\n\t\t\r\n\t\t// By temporarily setting the frameID to zero, the render cache is effectively\r\n\t\t// disabled while we draw the target object. That is necessary because we rewind the\r\n\t\t// cache later; if we didn't deactivate the cache, redrawing one of the target objects\r\n\t\t// later might reference data that does not exist any longer.\r\n\t\t\r\n\t\tpainter.frameID = 0;\r\n\t\tpainter.pushState(_token);\r\n\t\tpainter.state.renderTarget = input;\r\n\t\tpainter.state.setProjectionMatrix(bounds.x, bounds.y, input.root.width,\r\n\t\t\t\tinput.root.height, stage.stageWidth, stage.stageHeight, stage.cameraPosition);\r\n\t\t\r\n\t\t_target.render(painter);  // -> draw target object into 'input'  \r\n\t\t\r\n\t\tpainter.finishMeshBatch();\r\n\t\tpainter.state.setProjectionMatrix(0, 0, input.root.width, input.root.height);\r\n\t\tpainter.state.setModelviewMatricesToIdentity();\r\n\t\tpainter.state.clipRect = null;\r\n\t\t\r\n\t\t_quad.texture = process(painter, _pool, input);  // -> feed 'input' to actual filter code  \r\n\t\t_pool.putTexture(input);\r\n\t\t\r\n\t\tpainter.popState();\r\n\t\tpainter.frameID = frameID;\r\n\t\tpainter.rewindCacheTo(_token);  // -> render cache forgets all that happened above :)  \r\n\t\t\r\n\t\tpainter.pushState();\r\n\t\tpainter.state.setModelviewMatricesToIdentity();\r\n\t\t\r\n\t\tsMatrix.identity();\r\n\t\tsMatrix.translate(bounds.x, bounds.y);\r\n\t\tPool.putRectangle(bounds);\r\n\t\t\r\n\t\tpainter.state.transformModelviewMatrix(sMatrix);\r\n\t\t\r\n\t\t_quad.readjustSize();\r\n\t\t_quad.render(painter);\r\n\t\t\r\n\t\tpainter.finishMeshBatch();\r\n\t\tpainter.popState();\r\n\t}\r\n\t\r\n\t/** Does the actual filter processing. This method will be called with up to four input\r\n\t *  textures and must return a new texture (acquired from the <code>pool</code>) that\r\n\t *  contains the filtered output. To to do this, it configures the FilterEffect\r\n\t *  (provided via <code>createEffect</code>) and calls its <code>render</code> method.\r\n\t *\r\n\t *  <p>In a standard filter, only <code>input0</code> will contain a texture; that's the\r\n\t *  object the filter was applied to, rendered into an appropriately sized texture.\r\n\t *  However, filters may also accept multiple textures; that's useful when you need to\r\n\t *  combine the output of several filters into one. For example, the DropShadowFilter\r\n\t *  uses a BlurFilter to create the shadow and then feeds both input and shadow texture\r\n\t *  into a CompositeFilter.</p>\r\n\t *\r\n\t *  <p>Never create or dispose any textures manually within this method; instead, get\r\n\t *  new textures from the provided pool object, and pass them to the pool when you do\r\n\t *  not need them any longer. Ownership of both input textures and returned texture\r\n\t *  lies at the caller; only temporary textures should be put into the pool.</p>\r\n\t */\r\n\tpublic function process(painter:Painter, pool:ITexturePool,\r\n\t\t\tinput0:Texture = null, input1:Texture = null,\r\n\t\t\tinput2:Texture = null, input3:Texture = null):Texture\r\n\t{\r\n\t\tvar output:Texture = pool.getTexture();\r\n\t\tvar effect:FilterEffect = this.effect;\r\n\t\t\r\n\t\tpainter.state.renderTarget = output;\r\n\t\tpainter.prepareToDraw();\r\n\t\tpainter.drawCount += 1;\r\n\t\t\r\n\t\tinput0.setupVertexPositions(vertexData);\r\n\t\tinput0.setupTextureCoordinates(vertexData);\r\n\t\t\r\n\t\teffect.texture = input0;\r\n\t\teffect.mvpMatrix3D = painter.state.mvpMatrix3D;\r\n\t\teffect.uploadVertexData(vertexData);\r\n\t\teffect.uploadIndexData(indexData);\r\n\t\teffect.render(0, indexData.numTriangles);\r\n\t\t\r\n\t\treturn output;\r\n\t}\r\n\t\r\n\t/** Creates the effect that does the actual, low-level rendering.\r\n\t *  Must be overridden by all subclasses that do any rendering on their own (instead\r\n\t *  of just forwarding processing to other filters).\r\n\t */\r\n\tprivate function createEffect():FilterEffect\r\n\t{\r\n\t\treturn new FilterEffect();\r\n\t}\r\n\t\r\n\t// enter frame event\r\n\t\r\n\toverride public function addEventListener(type:String, listener:Function):Void\r\n\t{\r\n\t\tif (type == Event.ENTER_FRAME && _target != null) \r\n\t\t\t_target.addEventListener(Event.ENTER_FRAME, onEnterFrame);\r\n\t\t\r\n\t\tsuper.addEventListener(type, listener);\r\n\t}\r\n\t\r\n\toverride public function removeEventListener(type:String, listener:Function):Void\r\n\t{\r\n\t\tif (type == Event.ENTER_FRAME && _target != null) \r\n\t\t\t_target.removeEventListener(type, onEnterFrame);\r\n\t\t\r\n\t\tsuper.removeEventListener(type, listener);\r\n\t}\r\n\t\r\n\tprivate function onEnterFrame(event:Event):Void\r\n\t{\r\n\t\tdispatchEvent(event);\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** The target display object the filter is assigned to. */\r\n\tprivate function get_target():DisplayObject\r\n\t{\r\n\t\treturn _target;\r\n\t}\r\n\t\r\n\t/** The effect instance returning the FilterEffect created via <code>createEffect</code>. */\r\n\tprivate function get_effect():FilterEffect\r\n\t{\r\n\t\tif (_effect == null)\t\t\t _effect = createEffect();\r\n\t\treturn _effect;\r\n\t}\r\n\t\r\n\t/** The VertexData used to render the effect. Per default, uses the format provided\r\n\t *  by the effect, and contains four vertices enclosing the target object. */\r\n\tprivate function get_vertexData():VertexData\r\n\t{\r\n\t\tif (_vertexData == null)\t\t\t _vertexData = new VertexData(effect.vertexFormat, 4);\r\n\t\treturn _vertexData;\r\n\t}\r\n\t\r\n\t/** The IndexData used to render the effect. Per default, references a quad (two triangles)\r\n\t *  of four vertices. */\r\n\tprivate function get_indexData():IndexData\r\n\t{\r\n\t\tif (_indexData == null) \r\n\t\t{\r\n\t\t\t_indexData = new IndexData(6);\r\n\t\t\t_indexData.addQuad(0, 1, 2, 3);\r\n\t\t}\r\n\t\t\r\n\t\treturn _indexData;\r\n\t}\r\n\t\r\n\t/** Call this method when any of the filter's properties changes.\r\n\t *  This will make sure the filter is redrawn in the next frame. */\r\n\tprivate function setRequiresRedraw():Void\r\n\t{\r\n\t\tdispatchEventWith(Event.CHANGE);\r\n\t\tif (_target != null)\t\t\t _target.setRequiresRedraw();\r\n\t}\r\n\t\r\n\t/** Called when assigning a target display object.\r\n\t *  Override to plug in class-specific logic. */\r\n\tprivate function onTargetAssigned(target:DisplayObject):Void\r\n\t{\r\n\t}\r\n\t\r\n\t/** Padding can extend the size of the filter texture in all directions.\r\n\t *  That's useful when the filter \"grows\" the bounds of the object in any direction. */\r\n\tprivate function get_padding():Padding\r\n\t{\r\n\t\tif (_padding == null) \r\n\t\t{\r\n\t\t\t_padding = new Padding();\r\n\t\t\t_padding.addEventListener(Event.CHANGE, setRequiresRedraw);\r\n\t\t}\r\n\t\t\r\n\t\treturn _padding;\r\n\t}\r\n\t\r\n\tprivate function set_padding(value:Padding):Padding\r\n\t{\r\n\t\tpadding.copyFrom(value);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t// internal methods\r\n\t\r\n\t/** @private */\r\n\t @:allow(starling.display)\r\n\tprivate function setTarget(target:DisplayObject):Void\r\n\t{\r\n\t\tif (target != _target) \r\n\t\t{\r\n\t\t\tvar prevTarget:DisplayObject = _target;\r\n\t\t\t_target = target;\r\n\t\t\t\r\n\t\t\tif (target == null) \r\n\t\t\t{\r\n\t\t\t\tif (_pool != null)\t\t\t\t\t _pool.purge();\r\n\t\t\t\tif (_effect != null)\t\t\t\t\t _effect.purgeBuffers();\r\n\t\t\t\tif (_quad != null) {_quad.texture.dispose();_quad.texture = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (prevTarget != null) \r\n\t\t\t{\r\n\t\t\t\tprevTarget.filter = null;\r\n\t\t\t\tprevTarget.removeEventListener(Event.ENTER_FRAME, onEnterFrame);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (target != null) \r\n\t\t\t{\r\n\t\t\t\tif (hasEventListener(Event.ENTER_FRAME)) \r\n\t\t\t\t\ttarget.addEventListener(Event.ENTER_FRAME, onEnterFrame);\r\n\t\t\t\t\r\n\t\t\t\tonTargetAssigned(target);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.filters;\r\n\r\nimport starling.filters.FragmentFilter;\r\nimport starling.filters.ITexturePool;\r\n\r\nimport starling.rendering.FilterEffect;\r\nimport starling.rendering.Painter;\r\nimport starling.textures.Texture;\r\n\r\n/** The BlurFilter applies a Gaussian blur to an object. The strength of the blur can be\r\n *  set for x- and y-axis separately. */\r\n\r\nimport openfl.display3D.Context3D;\r\nimport openfl.display3D.Context3DProgramType;\r\n\r\nimport starling.rendering.Program;\r\n\r\nimport starling.utils.MathUtil;\r\nimport starling.utils.RenderUtil;\r\n\r\nclass BlurFilter extends FragmentFilter\r\n{\r\n\tpublic var blurX(get, set):Float;\r\n\tpublic var blurY(get, set):Float;\r\n\r\n\tprivate var _blurX:Float;\r\n\tprivate var _blurY:Float;\r\n\t\r\n\t/** Create a new BlurFilter. For each blur direction, the number of required passes is\r\n\t *  <code>Math.ceil(blur)</code>.\r\n\t *\r\n\t *  <ul><li>blur = 0.5: 1 pass</li>\r\n\t *\t  <li>blur = 1.0: 1 pass</li>\r\n\t *\t  <li>blur = 1.5: 2 passes</li>\r\n\t *\t  <li>blur = 2.0: 2 passes</li>\r\n\t *\t  <li>etc.</li>\r\n\t *  </ul>\r\n\t */\r\n\tpublic function new(blurX:Float = 1.0, blurY:Float = 1.0)\r\n\t{\r\n\t\tsuper();\r\n\t\t_blurX = blurX;\r\n\t\t_blurY = blurY;\r\n\t\t\r\n\t\tupdatePadding();\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride public function process(painter:Painter, pool:ITexturePool,\r\n\t\t\tinput0:Texture = null, input1:Texture = null,\r\n\t\t\tinput2:Texture = null, input3:Texture = null):Texture\r\n\t{\r\n\t\tvar effect:BlurEffect = cast(this.effect, BlurEffect);\r\n\t\t\r\n\t\tif (_blurX == 0 && _blurY == 0) \r\n\t\t{\r\n\t\t\teffect.strength = 0;\r\n\t\t\treturn super.process(painter, pool, input0);\r\n\t\t}\r\n\t\t\r\n\t\tvar blurX:Float = Math.abs(_blurX);\r\n\t\tvar blurY:Float = Math.abs(_blurY);\r\n\t\tvar outTexture:Texture = input0;\r\n\t\tvar inTexture:Texture;\r\n\t\t\r\n\t\teffect.direction = BlurEffect.HORIZONTAL;\r\n\t\t\r\n\t\twhile (blurX > 0)\r\n\t\t{\r\n\t\t\teffect.strength = Math.min(1.0, blurX);\r\n\t\t\t\r\n\t\t\tblurX -= effect.strength;\r\n\t\t\tinTexture = outTexture;\r\n\t\t\toutTexture = super.process(painter, pool, inTexture);\r\n\t\t\t\r\n\t\t\tif (inTexture != input0)\t\t\t\t pool.putTexture(inTexture);\r\n\t\t}\r\n\t\t\r\n\t\teffect.direction = BlurEffect.VERTICAL;\r\n\t\t\r\n\t\twhile (blurY > 0)\r\n\t\t{\r\n\t\t\teffect.strength = Math.min(1.0, blurY);\r\n\t\t\t\r\n\t\t\tblurY -= effect.strength;\r\n\t\t\tinTexture = outTexture;\r\n\t\t\toutTexture = super.process(painter, pool, inTexture);\r\n\t\t\t\r\n\t\t\tif (inTexture != input0)\t\t\t\t pool.putTexture(inTexture);\r\n\t\t}\r\n\t\t\r\n\t\treturn outTexture;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function createEffect():FilterEffect\r\n\t{\r\n\t\treturn new BlurEffect();\r\n\t}\r\n\t\r\n\tprivate function updatePadding():Void\r\n\t{\r\n\t\tvar paddingX:Float = (_blurX != 0) ? Math.ceil(Math.abs(_blurX)) + 3:1;\r\n\t\tvar paddingY:Float = (_blurY != 0) ? Math.ceil(Math.abs(_blurY)) + 3:1;\r\n\t\t\r\n\t\tpadding.setTo(paddingX, paddingX, paddingY, paddingY);\r\n\t}\r\n\t\r\n\t/** The blur factor in x-direction.\r\n\t *  The number of required passes will be <code>Math.ceil(value)</code>. */\r\n\tprivate function get_blurX():Float\r\n\t{\r\n\t\treturn _blurX;\r\n\t}\r\n\t\r\n\tprivate function set_blurX(value:Float):Float\r\n\t{\r\n\t\t_blurX = value;\r\n\t\tupdatePadding();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The blur factor in y-direction.\r\n\t *  The number of required passes will be <code>Math.ceil(value)</code>. */\r\n\tprivate function get_blurY():Float\r\n\t{\r\n\t\treturn _blurY;\r\n\t}\r\n\t\r\n\tprivate function set_blurY(value:Float):Float\r\n\t{\r\n\t\t_blurY = value;\r\n\t\tupdatePadding();\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nclass BlurEffect extends FilterEffect\r\n{\r\n\tpublic var direction(get, set):String;\r\n\tpublic var strength(get, set):Float;\r\n\r\n\tpublic static var HORIZONTAL:String = \"horizontal\";\r\n\tpublic static var VERTICAL:String = \"vertical\";\r\n\t\r\n\tprivate static var MAX_SIGMA:Float = 2.0;\r\n\t\r\n\tprivate var _strength:Float;\r\n\tprivate var _direction:String;\r\n\t\r\n\tprivate var _offsets:Array<Float> = [0, 0, 0, 0];\r\n\tprivate var _weights:Array<Float> = [0, 0, 0, 0];\r\n\t\r\n\t// helpers\r\n\tprivate var sTmpWeights:Array<Float> = [0, 0, 0, 0, 0];\r\n\t\r\n\t/** Creates a new BlurEffect.\r\n\t *\r\n\t *  @param direction\t horizontal or vertical\r\n\t *  @param strength\t  range 0-1\r\n\t */\r\n\tpublic function new(direction:String = \"horizontal\", strength:Float = 1)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.strength = strength;\r\n\t\tthis.direction = direction;\r\n\t}\r\n\t\r\n\toverride private function createProgram():Program\r\n\t{\r\n\t\tif (_strength == 0) return super.createProgram();\r\n\t\t\r\n\t\tvar vertexShader:String = [\r\n\t\t\t\t\"m44 op, va0, vc0\t \",   // 4x4 matrix transform to output space  \r\n\t\t\t\t\"mov v0, va1\t\t  \",   // pos:  0 |  \r\n\t\t\t\t\"sub v1, va1, vc4.zwxx\",   // pos: -2 |  \r\n\t\t\t\t\"sub v2, va1, vc4.xyxx\",   // pos: -1 | --> kernel positions  \r\n\t\t\t\t\"add v3, va1, vc4.xyxx\",   // pos: +1 |\t (only 1st two values are relevant)  \r\n\t\t\t\t\"add v4, va1, vc4.zwxx\"  // pos: +2 |\r\n\t\t\t].join(\"\\n\");\r\n\t\t\r\n\t\t// v0-v4 - kernel position\r\n\t\t// fs0   - input texture\r\n\t\t// fc0   - weight data\r\n\t\t// ft0-4 - pixel color from texture\r\n\t\t// ft5   - output color\r\n\t\t\r\n\t\tvar fragmentShader:String = [\r\n\t\t\t\ttex(\"ft0\", \"v0\", 0, texture),   // read center pixel  \r\n\t\t\t\t\"mul ft5, ft0, fc0.xxxx\t   \",   // multiply with center weight  \r\n\t\t\t\t\r\n\t\t\t\ttex(\"ft1\", \"v1\", 0, texture),   // read pixel -2  \r\n\t\t\t\t\"mul ft1, ft1, fc0.zzzz\t   \",   // multiply with weight  \r\n\t\t\t\t\"add ft5, ft5, ft1\t\t\t\",   // add to output color  \r\n\t\t\t\t\r\n\t\t\t\ttex(\"ft2\", \"v2\", 0, texture),   // read pixel -1  \r\n\t\t\t\t\"mul ft2, ft2, fc0.yyyy\t   \",   // multiply with weight  \r\n\t\t\t\t\"add ft5, ft5, ft2\t\t\t\",   // add to output color  \r\n\t\t\t\t\r\n\t\t\t\ttex(\"ft3\", \"v3\", 0, texture),   // read pixel +1  \r\n\t\t\t\t\"mul ft3, ft3, fc0.yyyy\t   \",   // multiply with weight  \r\n\t\t\t\t\"add ft5, ft5, ft3\t\t\t\",   // add to output color  \r\n\t\t\t\t\r\n\t\t\t\ttex(\"ft4\", \"v4\", 0, texture),   // read pixel +2  \r\n\t\t\t\t\"mul ft4, ft4, fc0.zzzz\t   \",   // multiply with weight  \r\n\t\t\t\t\"add  oc, ft5, ft4\t\t\t\"  // add to output color\r\n\t\t\t].join(\"\\n\");\r\n\t\t\r\n\t\treturn Program.fromSource(vertexShader, fragmentShader);\r\n\t}\r\n\t\r\n\toverride private function beforeDraw(context:Context3D):Void\r\n\t{\r\n\t\tsuper.beforeDraw(context);\r\n\t\t\r\n\t\tif (_strength != 0) \r\n\t\t{\r\n\t\t\tupdateParameters();\r\n\t\t\t\r\n\t\t\tcontext.setProgramConstantsFromVector(Context3DProgramType.VERTEX, 4, _offsets);\r\n\t\t\tcontext.setProgramConstantsFromVector(Context3DProgramType.FRAGMENT, 0, _weights);\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride private function get_programVariantName():Int\r\n\t{\r\n\t\treturn super.programVariantName | ((_strength != 0) ? 1 << 4:0);\r\n\t}\r\n\t\r\n\tprivate function updateParameters():Void\r\n\t{\r\n\t\t// algorithm described here:\r\n\t\t// http://rastergrid.com/blog/2010/09/efficient-gaussian-blur-with-linear-sampling/\r\n\t\t//\r\n\t\t// To run in constrained mode, we can only make 5 texture look-ups in the fragment\r\n\t\t// shader. By making use of linear texture sampling, we can produce similar output\r\n\t\t// to what would be 9 look-ups.\r\n\t\t\r\n\t\tvar sigma:Float;\r\n\t\tvar pixelSize:Float;\r\n\t\t\r\n\t\tif (_direction == HORIZONTAL) \r\n\t\t{\r\n\t\t\tsigma = _strength * MAX_SIGMA;\r\n\t\t\tpixelSize = 1.0 / texture.root.width;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tsigma = _strength * MAX_SIGMA;\r\n\t\t\tpixelSize = 1.0 / texture.root.height;\r\n\t\t}\r\n\t\t\r\n\t\tvar twoSigmaSq:Float = 2 * sigma * sigma;\r\n\t\tvar multiplier:Float = 1.0 / Math.sqrt(twoSigmaSq * Math.PI);\r\n\t\t\r\n\t\t// get weights on the exact pixels (sTmpWeights) and calculate sums (_weights)\r\n\t\t\r\n\t\tfor (i in 0...5){sTmpWeights[i] = multiplier * Math.exp(-i * i / twoSigmaSq);\r\n\t\t}\r\n\t\t\r\n\t\t_weights[0] = sTmpWeights[0];\r\n\t\t_weights[1] = sTmpWeights[1] + sTmpWeights[2];\r\n\t\t_weights[2] = sTmpWeights[3] + sTmpWeights[4];\r\n\t\t\r\n\t\t// normalize weights so that sum equals \"1.0\"\r\n\t\t\r\n\t\tvar weightSum:Float = _weights[0] + 2 * _weights[1] + 2 * _weights[2];\r\n\t\tvar invWeightSum:Float = 1.0 / weightSum;\r\n\t\t\r\n\t\t_weights[0] *= invWeightSum;\r\n\t\t_weights[1] *= invWeightSum;\r\n\t\t_weights[2] *= invWeightSum;\r\n\t\t\r\n\t\t// calculate intermediate offsets\r\n\t\t\r\n\t\tvar offset1:Float = (pixelSize * sTmpWeights[1] + 2 * pixelSize * sTmpWeights[2]) / _weights[1];\r\n\t\tvar offset2:Float = (3 * pixelSize * sTmpWeights[3] + 4 * pixelSize * sTmpWeights[4]) / _weights[2];\r\n\t\t\r\n\t\t// depending on pass, we move in x- or y-direction\r\n\t\t\r\n\t\tif (_direction == HORIZONTAL) \r\n\t\t{\r\n\t\t\t_offsets[0] = offset1;\r\n\t\t\t_offsets[1] = 0;\r\n\t\t\t_offsets[2] = offset2;\r\n\t\t\t_offsets[3] = 0;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\t_offsets[0] = 0;\r\n\t\t\t_offsets[1] = offset1;\r\n\t\t\t_offsets[2] = 0;\r\n\t\t\t_offsets[3] = offset2;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate static function tex(resultReg:String, uvReg:String, sampler:Int, texture:Texture):String\r\n\t{\r\n\t\treturn RenderUtil.createAGALTexOperation(resultReg, uvReg, sampler, texture);\r\n\t}\r\n\t\r\n\tprivate function get_direction():String\r\n\t{\r\n\t\treturn _direction;\r\n\t}\r\n\t\r\n\tprivate function set_direction(value:String):String{_direction = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function get_strength():Float\r\n\t{\r\n\t\treturn _strength;\r\n\t}\r\n\t\r\n\tprivate function set_strength(value:Float):Float\r\n\t{\r\n\t\t_strength = MathUtil.clamp(value, 0, 1);\r\n\t\treturn value;\r\n\t}\r\n}","  // =================================================================================================  \r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.filters;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport starling.filters.FragmentFilter;\r\n\r\nimport starling.rendering.FilterEffect;\r\nimport starling.utils.Color;\r\n\r\n/** The ColorMatrixFilter class lets you apply a 4x5 matrix transformation to the color\r\n *  and alpha values of every pixel in the input image to produce a result with a new set\r\n *  of color and alpha values. This allows saturation changes, hue rotation,\r\n *  luminance to alpha, and various other effects.\r\n *\r\n *  <p>The class contains several convenience methods for frequently used color\r\n *  adjustments. All those methods change the current matrix, which means you can easily\r\n *  combine them in one filter:</p>\r\n *\r\n *  <listing>\r\n *  // create an inverted filter with 50% saturation and 180° hue rotation\r\n *  var filter:ColorMatrixFilter = new ColorMatrixFilter();\r\n *  filter.invert();\r\n *  filter.adjustSaturation(-0.5);\r\n *  filter.adjustHue(1.0);</listing>\r\n *\r\n *  <p>If you want to gradually animate one of the predefined color adjustments, either reset\r\n *  the matrix after each step, or use an identical adjustment value for each step; the\r\n *  changes will add up.</p>\r\n */\r\n\r\nimport openfl.display3D.Context3D;\r\nimport openfl.display3D.Context3DProgramType;\r\n\r\nimport starling.rendering.Program;\r\nimport starling.utils.RenderUtil;\r\n\r\nclass ColorMatrixFilter extends FragmentFilter\r\n{\r\n\tpublic var matrix(get, set):Array<Float>;\r\n\tprivate var colorEffect(get, never):ColorMatrixEffect;\r\n\r\n\t// Most of the color transformation math was taken from the excellent ColorMatrix class by\r\n\t// Mario Klingemann: http://www.quasimondo.com/archives/000565.php -- THANKS!!!\r\n\t\r\n\tprivate static var LUMA_R:Float = 0.299;\r\n\tprivate static var LUMA_G:Float = 0.587;\r\n\tprivate static var LUMA_B:Float = 0.114;\r\n\t\r\n\t// helpers\r\n\tprivate static var sMatrix:Array<Float> = [];\r\n\t\r\n\t/** Creates a new ColorMatrixFilter instance with the specified matrix.\r\n\t *  @param matrix a vector of 20 items arranged as a 4x5 matrix.\r\n\t */\r\n\tpublic function new(matrix:Array<Float> = null)\r\n\t{\r\n\t\tsuper();\r\n\t\tif (matrix != null)\t\t\t colorEffect.matrix = matrix;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function createEffect():FilterEffect\r\n\t{\r\n\t\treturn new ColorMatrixEffect();\r\n\t}\r\n\t\r\n\t// color manipulation\r\n\t\r\n\t/** Inverts the colors of the filtered object. */\r\n\tpublic function invert():Void\r\n\t{\r\n\t\tconcatValues(-1, 0, 0, 0, 255,\r\n\t\t\t\t0, -1, 0, 0, 255,\r\n\t\t\t\t0, 0, -1, 0, 255,\r\n\t\t\t\t0, 0, 0, 1, 0);\r\n\t}\r\n\t\r\n\t/** Changes the saturation. Typical values are in the range (-1, 1).\r\n\t *  Values above zero will raise, values below zero will reduce the saturation.\r\n\t *  '-1' will produce a grayscale image. */\r\n\tpublic function adjustSaturation(sat:Float):Void\r\n\t{\r\n\t\tsat += 1;\r\n\t\t\r\n\t\tvar invSat:Float = 1 - sat;\r\n\t\tvar invLumR:Float = invSat * LUMA_R;\r\n\t\tvar invLumG:Float = invSat * LUMA_G;\r\n\t\tvar invLumB:Float = invSat * LUMA_B;\r\n\t\t\r\n\t\tconcatValues((invLumR + sat), invLumG, invLumB, 0, 0,\r\n\t\t\t\tinvLumR, (invLumG + sat), invLumB, 0, 0,\r\n\t\t\t\tinvLumR, invLumG, (invLumB + sat), 0, 0,\r\n\t\t\t\t0, 0, 0, 1, 0);\r\n\t}\r\n\t\r\n\t/** Changes the contrast. Typical values are in the range (-1, 1).\r\n\t *  Values above zero will raise, values below zero will reduce the contrast. */\r\n\tpublic function adjustContrast(value:Float):Void\r\n\t{\r\n\t\tvar s:Float = value + 1;\r\n\t\tvar o:Float = 128 * (1 - s);\r\n\t\t\r\n\t\tconcatValues(s, 0, 0, 0, o,\r\n\t\t\t\t0, s, 0, 0, o,\r\n\t\t\t\t0, 0, s, 0, o,\r\n\t\t\t\t0, 0, 0, 1, 0);\r\n\t}\r\n\t\r\n\t/** Changes the brightness. Typical values are in the range (-1, 1).\r\n\t *  Values above zero will make the image brighter, values below zero will make it darker.*/\r\n\tpublic function adjustBrightness(value:Float):Void\r\n\t{\r\n\t\tvalue *= 255;\r\n\t\t\r\n\t\tconcatValues(1, 0, 0, 0, value,\r\n\t\t\t\t0, 1, 0, 0, value,\r\n\t\t\t\t0, 0, 1, 0, value,\r\n\t\t\t\t0, 0, 0, 1, 0);\r\n\t}\r\n\t\r\n\t/** Changes the hue of the image. Typical values are in the range (-1, 1). */\r\n\tpublic function adjustHue(value:Float):Void\r\n\t{\r\n\t\tvalue *= Math.PI;\r\n\t\t\r\n\t\tvar cos:Float = Math.cos(value);\r\n\t\tvar sin:Float = Math.sin(value);\r\n\t\t\r\n\t\tconcatValues(\r\n\t\t\t\t((LUMA_R + (cos * (1 - LUMA_R))) + (sin * -(LUMA_R))), ((LUMA_G + (cos * -(LUMA_G))) + (sin * -(LUMA_G))), ((LUMA_B + (cos * -(LUMA_B))) + (sin * (1 - LUMA_B))), 0, 0,\r\n\t\t\t\t((LUMA_R + (cos * -(LUMA_R))) + (sin * 0.143)), ((LUMA_G + (cos * (1 - LUMA_G))) + (sin * 0.14)), ((LUMA_B + (cos * -(LUMA_B))) + (sin * -0.283)), 0, 0,\r\n\t\t\t\t((LUMA_R + (cos * -(LUMA_R))) + (sin * -((1 - LUMA_R)))), ((LUMA_G + (cos * -(LUMA_G))) + (sin * LUMA_G)), ((LUMA_B + (cos * (1 - LUMA_B))) + (sin * LUMA_B)), 0, 0,\r\n\t\t\t\t0, 0, 0, 1, 0);\r\n\t}\r\n\t\r\n\t/** Tints the image in a certain color, analog to what can be done in Adobe Animate.\r\n\t *\r\n\t *  @param color   the RGB color with which the image should be tinted.\r\n\t *  @param amount  the intensity with which tinting should be applied. Range (0, 1).\r\n\t */\r\n\tpublic function tint(color:Int, amount:Float = 1.0):Void\r\n\t{\r\n\t\tvar r:Float = Color.getRed(color) / 255.0;\r\n\t\tvar g:Float = Color.getGreen(color) / 255.0;\r\n\t\tvar b:Float = Color.getBlue(color) / 255.0;\r\n\t\tvar q:Float = 1 - amount;\r\n\t\t\r\n\t\tvar rA:Float = amount * r;\r\n\t\tvar gA:Float = amount * g;\r\n\t\tvar bA:Float = amount * b;\r\n\t\t\r\n\t\tconcatValues(\r\n\t\t\t\tq + rA * LUMA_R, rA * LUMA_G, rA * LUMA_B, 0, 0,\r\n\t\t\t\tgA * LUMA_R, q + gA * LUMA_G, gA * LUMA_B, 0, 0,\r\n\t\t\t\tbA * LUMA_R, bA * LUMA_G, q + bA * LUMA_B, 0, 0,\r\n\t\t\t\t0, 0, 0, 1, 0);\r\n\t}\r\n\t\r\n\t// matrix manipulation\r\n\t\r\n\t/** Changes the filter matrix back to the identity matrix. */\r\n\tpublic function reset():Void\r\n\t{\r\n\t\tmatrix = null;\r\n\t}\r\n\t\r\n\t/** Concatenates the current matrix with another one. */\r\n\tpublic function concat(matrix:Array<Float>):Void\r\n\t{\r\n\t\tcolorEffect.concat(matrix);\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\t/** Concatenates the current matrix with another one, passing its contents directly. */\r\n\tpublic function concatValues(m0:Float, m1:Float, m2:Float, m3:Float, m4:Float,\r\n\t\t\tm5:Float, m6:Float, m7:Float, m8:Float, m9:Float,\r\n\t\t\tm10:Float, m11:Float, m12:Float, m13:Float, m14:Float,\r\n\t\t\tm15:Float, m16:Float, m17:Float, m18:Float, m19:Float):Void\r\n\t{\r\n\t\tsMatrix.splice(0, sMatrix.length);\r\n\t\tsMatrix.push(m0); \r\n\t\tsMatrix.push(m1); \r\n\t\tsMatrix.push(m2); \r\n\t\tsMatrix.push(m3); \r\n\t\tsMatrix.push(m4); \r\n\t\tsMatrix.push(m5); \r\n\t\tsMatrix.push(m6); \r\n\t\tsMatrix.push(m7); \r\n\t\tsMatrix.push(m8); \r\n\t\tsMatrix.push(m9);\r\n\t\tsMatrix.push(m10); \r\n\t\tsMatrix.push(m11); \r\n\t\tsMatrix.push(m12); \r\n\t\tsMatrix.push(m13); \r\n\t\tsMatrix.push(m14); \r\n\t\tsMatrix.push(m15); \r\n\t\tsMatrix.push(m16); \r\n\t\tsMatrix.push(m17); \r\n\t\tsMatrix.push(m18); \r\n\t\tsMatrix.push(m19);\r\n\t\t\r\n\t\tconcat(sMatrix);\r\n\t}\r\n\t\r\n\t/** A vector of 20 items arranged as a 4x5 matrix. */\r\n\tprivate function get_matrix():Array<Float>\r\n\t{\r\n\t\treturn colorEffect.matrix;\r\n\t}\r\n\t\r\n\tprivate function set_matrix(value:Array<Float>):Array<Float>\r\n\t{\r\n\t\tcolorEffect.matrix = value;\r\n\t\tsetRequiresRedraw();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function get_colorEffect():ColorMatrixEffect\r\n\t{\r\n\t\treturn cast(this.effect, ColorMatrixEffect);\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nclass ColorMatrixEffect extends FilterEffect\r\n{\r\n\tpublic var matrix(get, set):Array<Float>;\r\n\r\n\tprivate var _userMatrix:Array<Float>;  // offset in range 0-255  \r\n\tprivate var _shaderMatrix:Array<Float>;  // offset in range 0-1, changed order  \r\n\t\r\n\tprivate static var MIN_COLOR:Array<Float> = [0, 0, 0, 0.0001];\r\n\tprivate static var IDENTITY:Array<Dynamic> = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\r\n\t\r\n\t// helpers\r\n\tprivate static var sMatrix:Array<Float> = [\r\n\t\t0, 0, 0, 0,\r\n\t\t0, 0, 0, 0,\r\n\t\t0, 0, 0, 0,\r\n\t\t0, 0, 0, 0,\r\n\t\t0, 0, 0, 0\r\n\t];\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t_userMatrix = [];\r\n\t\t_shaderMatrix = [];\r\n\t\t\r\n\t\tthis.matrix = null;\r\n\t}\r\n\t\r\n\toverride private function createProgram():Program\r\n\t{\r\n\t\tvar vertexShader:String = FilterEffect.STD_VERTEX_SHADER;\r\n\t\tvar fragmentShader:String = [\r\n\t\t\t\tRenderUtil.createAGALTexOperation(\"ft0\", \"v0\", 0, texture),   // read texture color  \r\n\t\t\t\t\"max ft0, ft0, fc5\t\t\t  \",   // avoid division through zero in next step  \r\n\t\t\t\t\"div ft0.xyz, ft0.xyz, ft0.www  \",   // restore original (non-PMA) RGB values  \r\n\t\t\t\t\"m44 ft0, ft0, fc0\t\t\t  \",   // multiply color with 4x4 matrix  \r\n\t\t\t\t\"add ft0, ft0, fc4\t\t\t  \",   // add offset  \r\n\t\t\t\t\"mul ft0.xyz, ft0.xyz, ft0.www  \",   // multiply with alpha again (PMA)  \r\n\t\t\t\t\"mov oc, ft0\t\t\t\t\t\"  // copy to output  \r\n\t\t\t].join(\"\\n\");\r\n\t\t\r\n\t\treturn Program.fromSource(vertexShader, fragmentShader);\r\n\t}\r\n\t\r\n\toverride private function beforeDraw(context:Context3D):Void\r\n\t{\r\n\t\tsuper.beforeDraw(context);\r\n\t\t\r\n\t\tcontext.setProgramConstantsFromVector(Context3DProgramType.FRAGMENT, 0, _shaderMatrix);\r\n\t\tcontext.setProgramConstantsFromVector(Context3DProgramType.FRAGMENT, 5, MIN_COLOR);\r\n\t}\r\n\t\r\n\t// matrix manipulation\r\n\t\r\n\tpublic function reset():Void\r\n\t{\r\n\t\tmatrix = null;\r\n\t}\r\n\t\r\n\t/** Concatenates the current matrix with another one. */\r\n\tpublic function concat(matrix:Array<Float>):Void\r\n\t{\r\n\t\tvar i:Int = 0;\r\n\t\t\r\n\t\tfor (y in 0...4){\r\n\t\t\tfor (x in 0...5){\r\n\t\t\t\tsMatrix[i + x] = matrix[i] * _userMatrix[x] +\r\n\t\t\t\t\t\tmatrix[i + 1] * _userMatrix[x + 5] +\r\n\t\t\t\t\t\tmatrix[i + 2] * _userMatrix[x + 10] +\r\n\t\t\t\t\t\tmatrix[i + 3] * _userMatrix[x + 15] +\r\n\t\t\t\t\t\t(x == (4) ? matrix[i + 4]:0);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ti += 5;\r\n\t\t}\r\n\t\t\r\n\t\tcopyMatrix(sMatrix, _userMatrix);\r\n\t\tupdateShaderMatrix();\r\n\t}\r\n\t\r\n\tprivate function copyMatrix(from:Array<Float>, to:Array<Float>):Void\r\n\t{\r\n\t\tfor (i in 0...20){to[i] = from[i];\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function updateShaderMatrix():Void\r\n\t{\r\n\t\t// the shader needs the matrix components in a different order,\r\n\t\t// and it needs the offsets in the range 0-1.\r\n\t\t\r\n\t\t_shaderMatrix.splice(0, _shaderMatrix.length);\r\n\t\t_shaderMatrix.push(_userMatrix[0]);\r\n\t\t_shaderMatrix.push(_userMatrix[1]);\r\n\t\t_shaderMatrix.push(_userMatrix[2]); \r\n\t\t_shaderMatrix.push(_userMatrix[3]);\r\n\t\t_shaderMatrix.push(_userMatrix[5]); \r\n\t\t_shaderMatrix.push(_userMatrix[6]); \r\n\t\t_shaderMatrix.push(_userMatrix[7]); \r\n\t\t_shaderMatrix.push(_userMatrix[8]);\r\n\t\t_shaderMatrix.push(_userMatrix[10]); \r\n\t\t_shaderMatrix.push(_userMatrix[11]); \r\n\t\t_shaderMatrix.push(_userMatrix[12]); \r\n\t\t_shaderMatrix.push(_userMatrix[13]);\r\n\t\t_shaderMatrix.push(_userMatrix[15]); \r\n\t\t_shaderMatrix.push(_userMatrix[16]); \r\n\t\t_shaderMatrix.push(_userMatrix[17]); \r\n\t\t_shaderMatrix.push(_userMatrix[18]);\r\n\t\t_shaderMatrix.push(_userMatrix[4] / 255.0); \r\n\t\t_shaderMatrix.push(_userMatrix[9] / 255.0); \r\n\t\t_shaderMatrix.push(_userMatrix[14] / 255.0);\r\n\t\t_shaderMatrix.push(_userMatrix[19] / 255.0);\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\tprivate function get_matrix():Array<Float>\r\n\t{\r\n\t\treturn _userMatrix;\r\n\t}\r\n\t\r\n\tprivate function set_matrix(value:Array<Float>):Array<Float>\r\n\t{\r\n\t\tif (value != null && value.length != 20) \r\n            throw new ArgumentError(\"Invalid matrix length: must be 20\");\r\n        \r\n        if (value == null)\r\n        {\r\n\t\t\t_userMatrix.splice(0, _userMatrix.length);\r\n\t\t\tfor (i in 0...IDENTITY.length) _userMatrix.push(IDENTITY[i]);\r\n        }\r\n        else\r\n        {\r\n            copyMatrix(value, _userMatrix);\r\n        }\r\n        \r\n        updateShaderMatrix();\r\n        return _userMatrix;\r\n\t}\r\n}","  // =================================================================================================  \r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.filters;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport starling.filters.FragmentFilter;\r\nimport starling.filters.ITexturePool;\r\n\r\nimport openfl.geom.Point;\r\n\r\nimport starling.rendering.FilterEffect;\r\nimport starling.rendering.Painter;\r\nimport starling.textures.Texture;\r\n\r\n/** The CompositeFilter class allows to combine several layers of textures into one texture.\r\n *  It's mainly used as a building block for more complex filters; e.g. the DropShadowFilter\r\n *  uses this class to draw the shadow (the result of a BlurFilter) behind an object.\r\n */\r\n\r\nimport openfl.display3D.Context3D;\r\nimport openfl.display3D.Context3DProgramType;\r\n\r\nimport starling.rendering.Program;\r\n\r\nimport starling.utils.Color;\r\nimport starling.utils.RenderUtil;\r\nimport starling.utils.StringUtil;\r\n\r\nclass CompositeFilter extends FragmentFilter\r\n{\r\n\tprivate var compositeEffect(get, never):CompositeEffect;\r\n\r\n\t/** Creates a new instance. */\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t/** Combines up to four input textures into one new texture,\r\n\t *  adhering to the properties of each layer. */\r\n\toverride public function process(painter:Painter, pool:ITexturePool,\r\n\t\t\tinput0:Texture = null, input1:Texture = null,\r\n\t\t\tinput2:Texture = null, input3:Texture = null):Texture\r\n\t{\r\n\t\tcompositeEffect.texture = input0;\r\n\t\tcompositeEffect.getLayerAt(1).texture = input1;\r\n\t\tcompositeEffect.getLayerAt(2).texture = input2;\r\n\t\tcompositeEffect.getLayerAt(3).texture = input3;\r\n\t\t\r\n\t\treturn super.process(painter, pool, input0, input1, input2, input3);\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function createEffect():FilterEffect\r\n\t{\r\n\t\treturn new CompositeEffect();\r\n\t}\r\n\t\r\n\t/** Returns the position (in points) at which a certain layer will be drawn. */\r\n\tpublic function getOffsetAt(layerID:Int, out:Point = null):Point\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Point();\r\n\t\t\r\n\t\tout.x = compositeEffect.getLayerAt(layerID).x;\r\n\t\tout.y = compositeEffect.getLayerAt(layerID).y;\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Indicates the position (in points) at which a certain layer will be drawn. */\r\n\tpublic function setOffsetAt(layerID:Int, x:Float, y:Float):Void\r\n\t{\r\n\t\tcompositeEffect.getLayerAt(layerID).x = x;\r\n\t\tcompositeEffect.getLayerAt(layerID).y = y;\r\n\t}\r\n\t\r\n\t/** Returns the RGB color with which a layer is tinted when it is being drawn.\r\n\t *  @default 0xffffff */\r\n\tpublic function getColorAt(layerID:Int):Int\r\n\t{\r\n\t\treturn compositeEffect.getLayerAt(layerID).color;\r\n\t}\r\n\t\r\n\t/** Adjusts the RGB color with which a layer is tinted when it is being drawn.\r\n\t *  If <code>replace</code> is enabled, the pixels are not tinted, but instead\r\n\t *  the RGB channels will replace the texture's color entirely.\r\n\t */\r\n\tpublic function setColorAt(layerID:Int, color:Int, replace:Bool = false):Void\r\n\t{\r\n\t\tcompositeEffect.getLayerAt(layerID).color = color;\r\n\t\tcompositeEffect.getLayerAt(layerID).replaceColor = replace;\r\n\t}\r\n\t\r\n\t/** Indicates the alpha value with which the layer is drawn.\r\n\t *  @default 1.0 */\r\n\tpublic function getAlphaAt(layerID:Int):Float\r\n\t{\r\n\t\treturn compositeEffect.getLayerAt(layerID).alpha;\r\n\t}\r\n\t\r\n\t/** Adjusts the alpha value with which the layer is drawn. */\r\n\tpublic function setAlphaAt(layerID:Int, alpha:Float):Void\r\n\t{\r\n\t\tcompositeEffect.getLayerAt(layerID).alpha = alpha;\r\n\t}\r\n\t\r\n\tprivate function get_compositeEffect():CompositeEffect\r\n\t{\r\n\t\treturn cast(this.effect, CompositeEffect);\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nclass CompositeEffect extends FilterEffect\r\n{\r\n\tpublic var numLayers(get, never):Int;\r\n\r\n\tprivate var _layers:Array<CompositeLayer>;\r\n\t\r\n\tprivate static var sLayers:Array<Dynamic> = [];\r\n\tprivate static var sOffset:Array<Float> = [0, 0, 0, 0];\r\n\tprivate static var sColor:Array<Float> = [0, 0, 0, 0];\r\n\t\r\n\tpublic function new(numLayers:Int = 4)\r\n\t{\r\n\t\tsuper();\r\n\t\tif (numLayers < 1 || numLayers > 4) \r\n\t\t\tthrow new ArgumentError(\"number of layers must be between 1 and 4\");\r\n\t\t\r\n\t\t_layers = new Array<CompositeLayer>();\r\n\t\t\r\n\t\tfor (i in 0...numLayers) {\r\n\t\t\t_layers[i] = new CompositeLayer();\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function getLayerAt(layerID:Int):CompositeLayer\r\n\t{\r\n\t\treturn _layers[layerID];\r\n\t}\r\n\t\r\n\tprivate function getUsedLayers(out:Array<Dynamic> = null):Array<Dynamic>\r\n\t{\r\n\t\tif (out == null) out = []\r\n\t\telse out.splice(0, out.length);\r\n\t\t\r\n\t\tfor (layer in _layers)\r\n\t\tif (layer.texture != null) out[out.length] = layer;\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\toverride private function createProgram():Program\r\n\t{\r\n\t\tvar layers:Array<Dynamic> = getUsedLayers(sLayers);\r\n\t\tvar numLayers:Int = layers.length;\r\n\t\tvar i:Int;\r\n\t\t\r\n\t\tif (numLayers != 0) \r\n\t\t{\r\n\t\t\tvar vertexShader:Array<Dynamic> = [\"m44 op, va0, vc0\"];  // transform position to clip-space  \r\n\t\t\tvar layer:CompositeLayer = _layers[0];\r\n\t\t\t\r\n\t\t\tfor (i in 0...numLayers) {\r\n\t\t\t\tvertexShader.push(\r\n\t\t\t\t\tStringUtil.format(\"sub v{0}, va1, vc{1} \\n\", [i, i + 4])  // v0-4 -> texture coords  \r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar fragmentShader:Array<Dynamic> = [\r\n\t\t\t\t\"seq ft5, v0, v0\"  // ft5 -> 1, 1, 1, 1\r\n\t\t\t];\r\n\t\t\t\r\n\t\t\tfor (i in 0...numLayers){\r\n\t\t\t\tvar fti:String = \"ft\" + i;\r\n\t\t\t\tvar fci:String = \"fc\" + i;\r\n\t\t\t\tvar vi:String = \"v\" + i;\r\n\t\t\t\t\r\n\t\t\t\tlayer = _layers[i];\r\n\t\t\t\t\r\n\t\t\t\tfragmentShader.push(\r\n\t\t\t\t\t\ttex(fti, vi, i, layers[i].texture)  // fti => texture i color  \r\n\t\t\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\tif (layer.replaceColor) {\r\n\t\t\t\t\tfragmentShader.push(\"mul \" + fti + \".w,   \" + fti + \".w,   \" + fci + \".w\");\r\n\t\t\t\t\tfragmentShader.push(\"mul \" + fti + \".xyz, \" + fci + \".xyz, \" + fti + \".www\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfragmentShader.push(\"mul \" + fti + \", \" + fti + \", \" +fci);  // fti *= color  \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (i != 0) \r\n\t\t\t\t{\r\n\t\t\t\t\t// \"normal\" blending: src × ONE + dst × ONE_MINUS_SOURCE_ALPHA\r\n\t\t\t\t\tfragmentShader.push(\"sub ft4, ft5, \" + fti + \".wwww\"); // ft4 => 1 - src.alpha  \r\n\t\t\t\t\tfragmentShader.push(\"mul ft0, ft0, ft4\"); // ft0 => dst * (1 - src.alpha)\r\n\t\t\t\t\tfragmentShader.push(\"add ft0, ft0, \" +fti); // ft0 => src + (dst * 1 - src.alpha)  \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfragmentShader.push(\"mov oc ft0\");  // done! :)  \r\n\t\t\t\r\n\t\t\treturn Program.fromSource(vertexShader.join(\"\\n\"), fragmentShader.join(\"\\n\"));\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\treturn super.createProgram();\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride private function get_programVariantName():Int\r\n\t{\r\n\t\tvar bits:Int;\r\n\t\tvar totalBits:Int = 0;\r\n\t\tvar layer:CompositeLayer;\r\n\t\tvar layers:Array<Dynamic> = getUsedLayers(sLayers);\r\n\t\tvar numLayers:Int = layers.length;\r\n\t\t\r\n\t\tfor (i in 0...numLayers){\r\n\t\t\tlayer = layers[i];\r\n\t\t\tvar replaceColorBoolInt:Int = 0;\r\n\t\t\tif (layer.replaceColor) replaceColorBoolInt = 1;\r\n\t\t\tbits = RenderUtil.getTextureVariantBits(layer.texture) | (replaceColorBoolInt << 3);\r\n\t\t\ttotalBits |= bits << (i * 4);\r\n\t\t}\r\n\t\t\r\n\t\treturn totalBits;\r\n\t}\r\n\t\r\n\t/** vc0-vc3 — MVP matrix\r\n\t *  vc4-vc7 - layer offsets\r\n\t *  fs0-fs3 — input textures\r\n\t *  fc0-fc3 - input colors (RGBA+pma)\r\n\t *  va0 — vertex position (xy)\r\n\t *  va1 — texture coordinates\r\n\t *  v0-v4 - texture coordinates with offset\r\n\t */\r\n\toverride private function beforeDraw(context:Context3D):Void\r\n\t{\r\n\t\tvar layers:Array<Dynamic> = getUsedLayers(sLayers);\r\n\t\tvar numLayers:Int = layers.length;\r\n\t\t\r\n\t\tif (numLayers != 0) \r\n\t\t{\r\n\t\t\tfor (i in 0...numLayers){\r\n\t\t\t\tvar layer:CompositeLayer = layers[i];\r\n\t\t\t\tvar texture:Texture = layer.texture;\r\n\t\t\t\tvar alphaFactor:Float = (layer.replaceColor) ? 1.0:layer.alpha;\r\n\t\t\t\t\r\n\t\t\t\tsOffset[0] = layer.x / texture.root.width;\r\n\t\t\t\tsOffset[1] = layer.y / texture.root.height;\r\n\t\t\t\tsColor[0] = Color.getRed(layer.color) * alphaFactor / 255.0;\r\n\t\t\t\tsColor[1] = Color.getGreen(layer.color) * alphaFactor / 255.0;\r\n\t\t\t\tsColor[2] = Color.getBlue(layer.color) * alphaFactor / 255.0;\r\n\t\t\t\tsColor[3] = layer.alpha;\r\n\t\t\t\t\r\n\t\t\t\tcontext.setProgramConstantsFromVector(Context3DProgramType.VERTEX, i + 4, sOffset);\r\n\t\t\t\tcontext.setProgramConstantsFromVector(Context3DProgramType.FRAGMENT, i, sColor);\r\n\t\t\t\tcontext.setTextureAt(i, texture.base);\r\n\t\t\t\tRenderUtil.setSamplerStateAt(i, texture.mipMapping, textureSmoothing);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tsuper.beforeDraw(context);\r\n\t}\r\n\t\r\n\toverride private function afterDraw(context:Context3D):Void\r\n\t{\r\n\t\tvar len:Int = _layers.length;\r\n\t\tfor (i in 0...len) {\r\n\t\t\tcontext.setTextureAt(i, null);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate static function tex(resultReg:String, uvReg:String, sampler:Int, texture:Texture):String\r\n\t{\r\n\t\treturn RenderUtil.createAGALTexOperation(resultReg, uvReg, sampler, texture);\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\tprivate function get_numLayers():Int\r\n\t{\r\n\t\treturn _layers.length;\r\n\t}\r\n\t\r\n\toverride private function set_texture(value:Texture):Texture\r\n\t{\r\n\t\t_layers[0].texture = value;\r\n\t\tsuper.texture = value;\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\nclass CompositeLayer\r\n{\r\n\tpublic var texture:Texture;\r\n\tpublic var x:Float;\r\n\tpublic var y:Float;\r\n\tpublic var color:Int;\r\n\tpublic var alpha:Float;\r\n\tpublic var replaceColor:Bool;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tx = y = 0;\r\n\t\talpha = 1.0;\r\n\t\tcolor = 0xffffff;\r\n\t}\r\n}","  // =================================================================================================  \r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.filters;\r\n\r\nimport starling.filters.FragmentFilter;\r\nimport starling.filters.ITexturePool;\r\n\r\nimport openfl.geom.Point;\r\n\r\nimport starling.core.Starling;\r\nimport starling.rendering.FilterEffect;\r\nimport starling.rendering.Painter;\r\nimport starling.textures.Texture;\r\n\r\n/** The DisplacementMapFilter class uses the pixel values from the specified texture (called\r\n *  the map texture) to perform a displacement of an object. You can use this filter\r\n *  to apply a warped or mottled effect to any object that inherits from the DisplayObject\r\n *  class.\r\n *\r\n *  <p>The filter uses the following formula:</p>\r\n *  <listing>dstPixel[x, y] = srcPixel[x + ((componentX(x, y) - 128) &#42; scaleX) / 256,\r\n *\t\t\t\t\t  y + ((componentY(x, y) - 128) &#42; scaleY) / 256]\r\n *  </listing>\r\n *\r\n *  <p>Where <code>componentX(x, y)</code> gets the componentX property color value from the\r\n *  map texture at <code>(x - mapPoint.x, y - mapPoint.y)</code>.</p>\r\n */\r\n\r\nimport openfl.display.BitmapDataChannel;\r\nimport openfl.display3D.Context3D;\r\nimport openfl.display3D.Context3DProgramType;\r\nimport openfl.geom.Matrix3D;\r\n\r\n\r\n\r\nimport starling.rendering.Program;\r\nimport starling.rendering.VertexDataFormat;\r\n\r\nimport starling.utils.RenderUtil;\r\n\r\nclass DisplacementMapFilter extends FragmentFilter\r\n{\r\n\tpublic var componentX(get, set):Int;\r\n\tpublic var componentY(get, set):Int;\r\n\tpublic var scaleX(get, set):Float;\r\n\tpublic var scaleY(get, set):Float;\r\n\tpublic var mapTexture(get, set):Texture;\r\n\tpublic var mapPoint(get, set):Point;\r\n\tpublic var mapRepeat(get, set):Bool;\r\n\tprivate var dispEffect(get, never):DisplacementMapEffect;\r\n\r\n\t/** Creates a new displacement map filter that uses the provided map texture. */\r\n\tpublic function new(mapTexture:Texture, mapPoint:Point = null,\r\n\t\t\tcomponentX:Int = 0, componentY:Int = 0,\r\n\t\t\tscaleX:Float = 0.0, scaleY:Float = 0.0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.mapTexture = mapTexture;\r\n\t\tthis.mapPoint = mapPoint;\r\n\t\tthis.componentX = componentX;\r\n\t\tthis.componentY = componentY;\r\n\t\tthis.scaleX = scaleX;\r\n\t\tthis.scaleY = scaleY;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride public function process(painter:Painter, pool:ITexturePool,\r\n\t\t\tinput0:Texture = null, input1:Texture = null,\r\n\t\t\tinput2:Texture = null, input3:Texture = null):Texture\r\n\t{\r\n\t\tupdateVertexData(input0, mapTexture);\r\n\t\treturn super.process(painter, pool, input0);\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function createEffect():FilterEffect\r\n\t{\r\n\t\treturn new DisplacementMapEffect();\r\n\t}\r\n\t\r\n\tprivate function updateVertexData(inputTexture:Texture, mapTexture:Texture):Void\r\n\t{\r\n\t\t// The size of input texture and map texture may be different. We need to calculate\r\n\t\t// the right values for the texture coordinates at the filter vertices.\r\n\t\t\r\n\t\tvar scale:Float = Starling.ContentScaleFactor;\r\n\t\tvar mapX:Float = (dispEffect.mapPoint.x + padding.left) / mapTexture.width;\r\n\t\tvar mapY:Float = (dispEffect.mapPoint.y + padding.top) / mapTexture.height;\r\n\t\tvar maxU:Float = inputTexture.root.nativeWidth / (mapTexture.width * scale);\r\n\t\tvar maxV:Float = inputTexture.root.nativeHeight / (mapTexture.height * scale);\r\n\t\t\r\n\t\tmapTexture.setTexCoords(vertexData, 0, \"mapTexCoords\", -mapX, -mapY);\r\n\t\tmapTexture.setTexCoords(vertexData, 1, \"mapTexCoords\", -mapX + maxU, -mapY);\r\n\t\tmapTexture.setTexCoords(vertexData, 2, \"mapTexCoords\", -mapX, -mapY + maxV);\r\n\t\tmapTexture.setTexCoords(vertexData, 3, \"mapTexCoords\", -mapX + maxU, -mapY + maxV);\r\n\t}\r\n\t\r\n\tprivate function updatePadding():Void\r\n\t{\r\n\t\tvar paddingX:Float = Math.ceil(Math.abs(dispEffect.scaleX) / 2);\r\n\t\tvar paddingY:Float = Math.ceil(Math.abs(dispEffect.scaleY) / 2);\r\n\t\t\r\n\t\tpadding.setTo(paddingX, paddingX, paddingY, paddingY);\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** Describes which color channel to use in the map image to displace the x result.\r\n\t *  Possible values are constants from the BitmapDataChannel class. */\r\n\tprivate function get_componentX():Int\r\n\t{\r\n\t\treturn dispEffect.componentX;\r\n\t}\r\n\t\r\n\tprivate function set_componentX(value:Int):Int\r\n\t{\r\n\t\tif (dispEffect.componentX != value) \r\n\t\t{\r\n\t\t\tdispEffect.componentX = value;\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Describes which color channel to use in the map image to displace the y result.\r\n\t *  Possible values are constants from the BitmapDataChannel class. */\r\n\tprivate function get_componentY():Int\r\n\t{\r\n\t\treturn dispEffect.componentY;\r\n\t}\r\n\t\r\n\tprivate function set_componentY(value:Int):Int\r\n\t{\r\n\t\tif (dispEffect.componentY != value) \r\n\t\t{\r\n\t\t\tdispEffect.componentY = value;\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The multiplier used to scale the x displacement result from the map calculation. */\r\n\tprivate function get_scaleX():Float\r\n\t{\r\n\t\treturn dispEffect.scaleX;\r\n\t}\r\n\t\r\n\tprivate function set_scaleX(value:Float):Float\r\n\t{\r\n\t\tif (dispEffect.scaleX != value) \r\n\t\t{\r\n\t\t\tdispEffect.scaleX = value;\r\n\t\t\tupdatePadding();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The multiplier used to scale the y displacement result from the map calculation. */\r\n\tprivate function get_scaleY():Float\r\n\t{\r\n\t\treturn dispEffect.scaleY;\r\n\t}\r\n\t\r\n\tprivate function set_scaleY(value:Float):Float\r\n\t{\r\n\t\tif (dispEffect.scaleY != value) \r\n\t\t{\r\n\t\t\tdispEffect.scaleY = value;\r\n\t\t\tupdatePadding();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The texture that will be used to calculate displacement. */\r\n\tprivate function get_mapTexture():Texture\r\n\t{\r\n\t\treturn dispEffect.mapTexture;\r\n\t}\r\n\t\r\n\tprivate function set_mapTexture(value:Texture):Texture\r\n\t{\r\n\t\tif (dispEffect.mapTexture != value) \r\n\t\t{\r\n\t\t\tdispEffect.mapTexture = value;\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** A value that contains the offset of the upper-left corner of the target display\r\n\t *  object from the upper-left corner of the map image. */\r\n\tprivate function get_mapPoint():Point\r\n\t{\r\n\t\treturn dispEffect.mapPoint;\r\n\t}\r\n\t\r\n\tprivate function set_mapPoint(value:Point):Point\r\n\t{\r\n\t\tdispEffect.mapPoint = value;\r\n\t\tsetRequiresRedraw();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates how the pixels of the map texture will be wrapped at the edge. */\r\n\tprivate function get_mapRepeat():Bool\r\n\t{\r\n\t\treturn dispEffect.mapRepeat;\r\n\t}\r\n\t\r\n\tprivate function set_mapRepeat(value:Bool):Bool\r\n\t{\r\n\t\tif (dispEffect.mapRepeat != value) \r\n\t\t{\r\n\t\t\tdispEffect.mapRepeat = value;\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function get_dispEffect():DisplacementMapEffect\r\n\t{\r\n\t\treturn cast(this.effect, DisplacementMapEffect);\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nclass DisplacementMapEffect extends FilterEffect\r\n{\r\n\tpublic var componentX(get, set):Int;\r\n\tpublic var componentY(get, set):Int;\r\n\tpublic var scaleX(get, set):Float;\r\n\tpublic var scaleY(get, set):Float;\r\n\tpublic var mapTexture(get, set):Texture;\r\n\tpublic var mapPoint(get, set):Point;\r\n\tpublic var mapRepeat(get, set):Bool;\r\n\r\n\tpublic static var VERTEX_FORMAT:VertexDataFormat = \r\n\t\tVertexDataFormat.fromString(\"position:float2, texCoords:float2, mapTexCoords:float2\");\r\n\t\r\n\tprivate var _mapTexture:Texture;\r\n\tprivate var _mapPoint:Point;\r\n\tprivate var _mapRepeat:Bool;\r\n\tprivate var _componentX:Int;\r\n\tprivate var _componentY:Int;\r\n\tprivate var _scaleX:Float;\r\n\tprivate var _scaleY:Float;\r\n\t\r\n\t// helper objects\r\n\tprivate static var sOneHalf:Array<Float> = [0.5, 0.5, 0.5, 0.5];\r\n\tprivate static var sMatrix:Matrix3D = new Matrix3D();\r\n\tprivate static var sMatrixData:Array<Float> = \r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\t_mapPoint = new Point();\r\n\t\t_componentX = _componentY = 0;\r\n\t\t_scaleX = _scaleY = 0;\r\n\t}\r\n\t\r\n\toverride private function createProgram():Program\r\n\t{\r\n\t\tif (_mapTexture != null) \r\n\t\t{\r\n\t\t\t// vc0-3: mvpMatrix\r\n\t\t\t// va0:   vertex position\r\n\t\t\t// va1:   input texture coords\r\n\t\t\t// va2:   map texture coords\r\n\t\t\t\r\n\t\t\tvar vertexShader:String = [\r\n\t\t\t\t\t\"m44  op, va0, vc0\",   // 4x4 matrix transform to output space  \r\n\t\t\t\t\t\"mov  v0, va1\",   // pass input texture coordinates to fragment program  \r\n\t\t\t\t\t\"mov  v1, va2\"  // pass map texture coordinates to fragment program  \r\n\t\t\t].join(\"\\n\");\r\n\t\t\t\r\n\t\t\t// v0:\tinput texCoords\r\n\t\t\t// v1:\tmap texCoords\r\n\t\t\t// fc0:   OneHalf\r\n\t\t\t// fc1-4: matrix\r\n\t\t\t\r\n\t\t\tvar fragmentShader:String = [\r\n\t\t\t\t\ttex(\"ft0\", \"v1\", 1, _mapTexture, false),   // read map texture  \r\n\t\t\t\t\t\"sub ft1, ft0, fc0\",   // subtract 0.5 -> range [-0.5, 0.5]  \r\n\t\t\t\t\t\"m44 ft2, ft1, fc1\",   // multiply matrix with displacement values  \r\n\t\t\t\t\t\"add ft3,  v0, ft2\",   // add displacement values to texture coords  \r\n\t\t\t\t\ttex(\"oc\", \"ft3\", 0, texture)  // read input texture at displaced coords  \r\n\t\t\t\t].join(\"\\n\");\r\n\t\t\t\r\n\t\t\treturn Program.fromSource(vertexShader, fragmentShader);\r\n\t\t}\r\n\t\telse return super.createProgram();\r\n\t}\r\n\t\r\n\toverride private function beforeDraw(context:Context3D):Void\r\n\t{\r\n\t\tsuper.beforeDraw(context);\r\n\t\t\r\n\t\tif (_mapTexture != null) \r\n\t\t{\r\n\t\t\t// already set by super class:\r\n\t\t\t//\r\n\t\t\t// vertex constants 0-3: mvpMatrix (3D)\r\n\t\t\t// vertex attribute 0:   vertex position (FLOAT_2)\r\n\t\t\t// vertex attribute 1:   texture coordinates (FLOAT_2)\r\n\t\t\t// texture 0:\t\t\tinput texture\r\n\t\t\t\r\n\t\t\tgetMapMatrix(sMatrix);\r\n\t\t\t\r\n\t\t\tvertexFormat.setVertexBufferAt(2, vertexBuffer, \"mapTexCoords\");\r\n\t\t\tcontext.setProgramConstantsFromVector(Context3DProgramType.FRAGMENT, 0, sOneHalf);\r\n\t\t\tcontext.setProgramConstantsFromMatrix(Context3DProgramType.FRAGMENT, 1, sMatrix, true);\r\n\t\t\tRenderUtil.setSamplerStateAt(1, _mapTexture.mipMapping, textureSmoothing, _mapRepeat);\r\n\t\t\tcontext.setTextureAt(1, _mapTexture.base);\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride private function afterDraw(context:Context3D):Void\r\n\t{\r\n\t\tif (_mapTexture != null) \r\n\t\t{\r\n\t\t\tcontext.setVertexBufferAt(2, null);\r\n\t\t\tcontext.setTextureAt(1, null);\r\n\t\t}\r\n\t\t\r\n\t\tsuper.afterDraw(context);\r\n\t}\r\n\t\r\n\toverride private function get_vertexFormat():VertexDataFormat\r\n\t{\r\n\t\treturn VERTEX_FORMAT;\r\n\t}\r\n\t\r\n\t/** This matrix maps RGBA values of the map texture to UV-offsets in the input texture. */\r\n\tprivate function getMapMatrix(out:Matrix3D):Matrix3D\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Matrix3D();\r\n\t\t\r\n\t\tvar columnX:Int;\r\n\t\tvar columnY:Int;\r\n\t\tvar scale:Float = Starling.ContentScaleFactor;\r\n\t\tvar textureWidth:Float = texture.root.nativeWidth;\r\n\t\tvar textureHeight:Float = texture.root.nativeHeight;\r\n\t\t\r\n\t\tfor (i in 0...16){sMatrixData[i] = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (_componentX == BitmapDataChannel.RED) columnX = 0\r\n\t\telse if (_componentX == BitmapDataChannel.GREEN) columnX = 1\r\n\t\telse if (_componentX == BitmapDataChannel.BLUE) columnX = 2\r\n\t\telse columnX = 3;\r\n\t\t\r\n\t\tif (_componentY == BitmapDataChannel.RED) columnY = 0\r\n\t\telse if (_componentY == BitmapDataChannel.GREEN) columnY = 1\r\n\t\telse if (_componentY == BitmapDataChannel.BLUE)\tcolumnY = 2\r\n\t\telse columnY = 3;\r\n\t\t\r\n\t\tsMatrixData[columnX * 4] = _scaleX * scale / textureWidth;\r\n\t\tsMatrixData[columnY * 4 + 1] = _scaleY * scale / textureHeight;\r\n\t\t\r\n\t\tout.copyRawDataFrom(sMatrixData);\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\tprivate static function tex(resultReg:String, uvReg:String, sampler:Int, texture:Texture,\r\n\t\t\tconvertToPmaIfRequired:Bool = true):String\r\n\t{\r\n\t\treturn RenderUtil.createAGALTexOperation(resultReg, uvReg, sampler, texture,\r\n\t\t\t\tconvertToPmaIfRequired);\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\tprivate function get_componentX():Int\r\n\t{\r\n\t\treturn _componentX;\r\n\t}\r\n\t\r\n\tprivate function set_componentX(value:Int):Int\r\n\t{\r\n\t\t_componentX = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function get_componentY():Int\r\n\t{\r\n\t\treturn _componentY;\r\n\t}\r\n\t\r\n\tprivate function set_componentY(value:Int):Int\r\n\t{\r\n\t\t_componentY = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function get_scaleX():Float\r\n\t{\r\n\t\treturn _scaleX;\r\n\t}\r\n\t\r\n\tprivate function set_scaleX(value:Float):Float\r\n\t{\r\n\t\t_scaleX = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function get_scaleY():Float\r\n\t{\r\n\t\treturn _scaleY;\r\n\t}\r\n\t\r\n\tprivate function set_scaleY(value:Float):Float\r\n\t{\r\n\t\t_scaleY = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function get_mapTexture():Texture\r\n\t{\r\n\t\treturn _mapTexture;\r\n\t}\r\n\t\r\n\tprivate function set_mapTexture(value:Texture):Texture\r\n\t{\r\n\t\t_mapTexture = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function get_mapPoint():Point\r\n\t{\r\n\t\treturn _mapPoint;\r\n\t}\r\n\t\r\n\tprivate function set_mapPoint(value:Point):Point\r\n\t{\r\n\t\tif (value != null)\t\t\t _mapPoint.setTo(value.x, value.y)\r\n\t\telse _mapPoint.setTo(0, 0);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function get_mapRepeat():Bool\r\n\t{\r\n\t\treturn _mapRepeat;\r\n\t}\r\n\t\r\n\tprivate function set_mapRepeat(value:Bool):Bool\r\n\t{\r\n\t\t_mapRepeat = value;\r\n\t\treturn value;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.filters;\r\n\r\nimport starling.filters.FragmentFilter;\r\nimport starling.filters.ITexturePool;\r\n\r\nimport starling.rendering.Painter;\r\nimport starling.textures.Texture;\r\nimport starling.utils.Padding;\r\n\r\n/** The DropShadowFilter class lets you add a drop shadow to display objects.\r\n *  To create the shadow, the class internally uses the BlurFilter.\r\n */\r\nclass DropShadowFilter extends FragmentFilter\r\n{\r\n\tpublic var color(get, set):Int;\r\n\tpublic var alpha(get, set):Float;\r\n\tpublic var distance(get, set):Float;\r\n\tpublic var angle(get, set):Float;\r\n\tpublic var blur(get, set):Float;\r\n\r\n\tprivate var _blurFilter:BlurFilter;\r\n\tprivate var _compositeFilter:CompositeFilter;\r\n\tprivate var _distance:Float;\r\n\tprivate var _angle:Float;\r\n\t\r\n\t/** Creates a new DropShadowFilter instance with the specified parameters. */\r\n\tpublic function new(distance:Float = 4.0, angle:Float = 0.785,\r\n\t\t\tcolor:Int = 0x0, alpha:Float = 0.5, blur:Float = 1.0)\r\n\t{\r\n\t\tsuper();\r\n\t\t_compositeFilter = new CompositeFilter();\r\n\t\t_blurFilter = new BlurFilter(blur, blur);\r\n\t\t_distance = distance;\r\n\t\t_angle = angle;\r\n\t\t\r\n\t\tthis.color = color;\r\n\t\tthis.alpha = alpha;\r\n\t\t\r\n\t\tupdatePadding();\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\t_blurFilter.dispose();\r\n\t\t_compositeFilter.dispose();\r\n\t\t\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride public function process(painter:Painter, pool:ITexturePool,\r\n\t\t\tinput0:Texture = null, input1:Texture = null,\r\n\t\t\tinput2:Texture = null, input3:Texture = null):Texture\r\n\t{\r\n\t\tvar shadow:Texture = _blurFilter.process(painter, pool, input0);\r\n\t\tvar result:Texture = _compositeFilter.process(painter, pool, shadow, input0);\r\n\t\tpool.putTexture(shadow);\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tprivate function updatePadding():Void\r\n\t{\r\n\t\tvar offsetX:Float = Math.cos(_angle) * _distance;\r\n\t\tvar offsetY:Float = Math.sin(_angle) * _distance;\r\n\t\t\r\n\t\t_compositeFilter.setOffsetAt(0, offsetX, offsetY);\r\n\t\t\r\n\t\tvar blurPadding:Padding = _blurFilter.padding;\r\n\t\tvar left:Float = blurPadding.left;\r\n\t\tvar right:Float = blurPadding.right;\r\n\t\tvar top:Float = blurPadding.top;\r\n\t\tvar bottom:Float = blurPadding.bottom;\r\n\t\t\r\n\t\tif (offsetX > 0)\t\t\t right += offsetX\r\n\t\telse left -= offsetX;\r\n\t\tif (offsetY > 0)\t\t\t bottom += offsetY\r\n\t\telse top -= offsetY;\r\n\t\t\r\n\t\tpadding.setTo(left, right, top, bottom);\r\n\t}\r\n\t\r\n\t/** The color of the shadow. @default 0x0 */\r\n\tprivate function get_color():Int\r\n\t{\r\n\t\treturn _compositeFilter.getColorAt(0);\r\n\t}\r\n\t\r\n\tprivate function set_color(value:Int):Int\r\n\t{\r\n\t\tif (color != value) \r\n\t\t{\r\n\t\t\t_compositeFilter.setColorAt(0, value, true);\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The alpha value of the shadow. @default 0.5 */\r\n\tprivate function get_alpha():Float\r\n\t{\r\n\t\treturn _compositeFilter.getAlphaAt(0);\r\n\t}\r\n\t\r\n\tprivate function set_alpha(value:Float):Float\r\n\t{\r\n\t\tif (alpha != value) \r\n\t\t{\r\n\t\t\t_compositeFilter.setAlphaAt(0, value);\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The offset distance for the shadow, in points. @default 4.0 */\r\n\tprivate function get_distance():Float\r\n\t{\r\n\t\treturn _distance;\r\n\t}\r\n\t\r\n\tprivate function set_distance(value:Float):Float\r\n\t{\r\n\t\tif (_distance != value) \r\n\t\t{\r\n\t\t\t_distance = value;\r\n\t\t\tupdatePadding();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The angle with which the shadow is offset, in radians. @default Math.PI / 4 */\r\n\tprivate function get_angle():Float\r\n\t{\r\n\t\treturn _angle;\r\n\t}\r\n\t\r\n\tprivate function set_angle(value:Float):Float\r\n\t{\r\n\t\tif (_angle != value) \r\n\t\t{\r\n\t\t\t_angle = value;\r\n\t\t\tupdatePadding();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The amount of blur with which the shadow is created.\r\n\t *  The number of required passes will be <code>Math.ceil(value) × 2</code>.\r\n\t *  @default 1.0 */\r\n\tprivate function get_blur():Float\r\n\t{\r\n\t\treturn _blurFilter.blurX;\r\n\t}\r\n\t\r\n\tprivate function set_blur(value:Float):Float\r\n\t{\r\n\t\tif (blur != value) \r\n\t\t{\r\n\t\t\t_blurFilter.blurX = _blurFilter.blurY = value;\r\n\t\t\tupdatePadding();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\n\r\nimport starling.events.Event;\r\nimport starling.events.EventDispatcher;\r\n\r\n/** Dispatched when any property of the instance changes. */\r\n@:meta(Event(name=\"change\",type=\"starling.events.Event\"))\r\n\r\n\r\n/** The padding class stores one number for each of four directions,\r\n *  thus describing the padding around a 2D object. */\r\nclass Padding extends EventDispatcher\r\n{\r\n\tpublic var left(get, set):Float;\r\n\tpublic var right(get, set):Float;\r\n\tpublic var top(get, set):Float;\r\n\tpublic var bottom(get, set):Float;\r\n\r\n\tprivate var _left:Float;\r\n\tprivate var _right:Float;\r\n\tprivate var _top:Float;\r\n\tprivate var _bottom:Float;\r\n\t\r\n\t/** Creates a new instance with the given properties. */\r\n\tpublic function new(left:Float = 0, right:Float = 0, top:Float = 0, bottom:Float = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tsetTo(left, right, top, bottom);\r\n\t}\r\n\t\r\n\t/** Sets all four values at once. */\r\n\tpublic function setTo(left:Float = 0, right:Float = 0, top:Float = 0, bottom:Float = 0):Void\r\n\t{\r\n\t\tvar changed:Bool = _left != left || _right != right || _top != top || _bottom != bottom;\r\n\t\t\r\n\t\t_left = left;\r\n\t\t_right = right;\r\n\t\t_top = top;\r\n\t\t_bottom = bottom;\r\n\t\t\r\n\t\tif (changed)\t\t\t dispatchEventWith(Event.CHANGE);\r\n\t}\r\n\t\r\n\t/** Copies all properties from another Padding instance.\r\n\t *  Pass <code>null</code> to reset all values to zero. */\r\n\tpublic function copyFrom(padding:Padding):Void\r\n\t{\r\n\t\tif (padding == null)\t\t\t setTo(0, 0, 0, 0)\r\n\t\telse setTo(padding._left, padding._right, padding._top, padding._bottom);\r\n\t}\r\n\t\r\n\t/** Creates a new instance with the exact same values. */\r\n\tpublic function clone():Padding\r\n\t{\r\n\t\treturn new Padding(_left, _right, _top, _bottom);\r\n\t}\r\n\t\r\n\t/** The padding on the left side. */\r\n\tprivate function get_left():Float\r\n\t{\r\n\t\treturn _left;\r\n\t}\r\n\t\r\n\tprivate function set_left(value:Float):Float\r\n\t{\r\n\t\tif (_left != value) \r\n\t\t{\r\n\t\t\t_left = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The padding on the right side. */\r\n\tprivate function get_right():Float\r\n\t{\r\n\t\treturn _right;\r\n\t}\r\n\t\r\n\tprivate function set_right(value:Float):Float\r\n\t{\r\n\t\tif (_right != value) \r\n\t\t{\r\n\t\t\t_right = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The padding towards the top. */\r\n\tprivate function get_top():Float\r\n\t{\r\n\t\treturn _top;\r\n\t}\r\n\t\r\n\tprivate function set_top(value:Float):Float\r\n\t{\r\n\t\tif (_top != value) \r\n\t\t{\r\n\t\t\t_top = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The padding towards the bottom. */\r\n\tprivate function get_bottom():Float\r\n\t{\r\n\t\treturn _bottom;\r\n\t}\r\n\t\r\n\tprivate function set_bottom(value:Float):Float\r\n\t{\r\n\t\tif (_bottom != value) \r\n\t\t{\r\n\t\t\t_bottom = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.filters;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport starling.filters.FragmentFilter;\r\nimport starling.filters.ITexturePool;\r\n\r\nimport starling.events.Event;\r\nimport starling.rendering.Painter;\r\nimport starling.textures.Texture;\r\nimport starling.utils.Padding;\r\n\r\n/** The FilterChain allows you to combine several filters into one. The filters will be\r\n *  processed in the given order, the number of draw calls per filter adding up.\r\n *  Just like conventional filters, a chain may be attached to any display object.\r\n */\r\nclass FilterChain extends FragmentFilter\r\n{\r\n\tpublic var numFilters(get, never):Int;\r\n\r\n\tprivate var _filters:Array<FragmentFilter>;\r\n\t\r\n\t// helpers\r\n\tprivate static var sPadding:Padding = new Padding();\r\n\t\r\n\t/** Creates a new chain with the given filters. */\r\n\tpublic function new(args:Array<FragmentFilter>)\r\n\t{\r\n\t\tsuper();\r\n\t\t_filters = [];\r\n\t\t\r\n\t\tfor (i in 0...args.length){\r\n\t\t\tvar filter:FragmentFilter = cast(args[i], FragmentFilter);\r\n\t\t\tif (filter != null)\t\t\t\t addFilterAt(filter, i)\r\n\t\t\telse throw new ArgumentError(\"pass only fragment filters to the constructor\");\r\n\t\t}\r\n\t\t\r\n\t\tupdatePadding();\r\n\t}\r\n\t\r\n\t/** Disposes the filter chain itself as well as all contained filters. */\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\tfor (filter in _filters)\r\n\t\tfilter.dispose();\r\n\t\t\r\n\t\t_filters.splice(0, _filters.length);\r\n\t\t\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride private function setRequiresRedraw():Void\r\n\t{\r\n\t\tupdatePadding();\r\n\t\tsuper.setRequiresRedraw();\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride public function process(painter:Painter, pool:ITexturePool,\r\n\t\t\tinput0:Texture = null, input1:Texture = null,\r\n\t\t\tinput2:Texture = null, input3:Texture = null):Texture\r\n\t{\r\n\t\tvar numFilters:Int = _filters.length;\r\n\t\tvar outTexture:Texture = input0;\r\n\t\tvar inTexture:Texture;\r\n\t\t\r\n\t\tfor (i in 0...numFilters){\r\n\t\t\tinTexture = outTexture;\r\n\t\t\toutTexture = _filters[i].process(painter, pool, inTexture);\r\n\t\t\t\r\n\t\t\ttrace(\"check if (i > 0) == if (i)\");\r\n\t\t\t//if (i) pool.putTexture(inTexture);\r\n\t\t\tif (i > 0) pool.putTexture(inTexture);\r\n\t\t}\r\n\t\t\r\n\t\treturn outTexture;\r\n\t}\r\n\t\r\n\t/** Returns the filter at a certain index. If you pass a negative index,\r\n\t *  '-1' will return the last filter, '-2' the second to last filter, etc. */\r\n\tpublic function getFilterAt(index:Int):FragmentFilter\r\n\t{\r\n\t\tif (index < 0)\t\t\t index += numFilters;\r\n\t\treturn _filters[index];\r\n\t}\r\n\t\r\n\t/** Adds a filter to the chain. It will be appended at the very end. */\r\n\tpublic function addFilter(filter:FragmentFilter):Void\r\n\t{\r\n\t\taddFilterAt(filter, _filters.length);\r\n\t}\r\n\t\r\n\t/** Adds a filter to the chain at the given index. */\r\n\tpublic function addFilterAt(filter:FragmentFilter, index:Int):Void\r\n\t{\r\n\t\t_filters.insert(index, filter);\r\n\t\tfilter.addEventListener(Event.CHANGE, setRequiresRedraw);\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\t/** Removes a filter from the chain. If the filter is not part of the chain,\r\n\t *  nothing happens. If requested, the filter will be disposed right away. */\r\n\tpublic function removeFilter(filter:FragmentFilter, dispose:Bool = false):FragmentFilter\r\n\t{\r\n\t\tvar filterIndex:Int = getFilterIndex(filter);\r\n\t\tif (filterIndex != -1)\t\t\t removeFilterAt(filterIndex, dispose);\r\n\t\treturn filter;\r\n\t}\r\n\t\r\n\t/** Removes the filter at a certain index. The indices of any subsequent filters\r\n\t *  are decremented. If requested, the filter will be disposed right away. */\r\n\tpublic function removeFilterAt(index:Int, dispose:Bool = false):FragmentFilter\r\n\t{\r\n\t\tvar filter:FragmentFilter = cast(_filters.splice(index, 1), FragmentFilter);\r\n\t\tfilter.removeEventListener(Event.CHANGE, setRequiresRedraw);\r\n\t\tif (dispose) filter.dispose();\r\n\t\tsetRequiresRedraw();\r\n\t\treturn filter;\r\n\t}\r\n\t\r\n\t/** Returns the index of a filter within the chain, or \"-1\" if it is not found. */\r\n\tpublic function getFilterIndex(filter:FragmentFilter):Int\r\n\t{\r\n\t\treturn Lambda.indexOf(_filters, filter);\r\n\t}\r\n\t\r\n\tprivate function updatePadding():Void\r\n\t{\r\n\t\tsPadding.setTo();\r\n\t\t\r\n\t\tfor (filter in _filters)\r\n\t\t{\r\n\t\t\tvar padding:Padding = filter.padding;\r\n\t\t\tif (padding.left > sPadding.left)\t\t\t\t sPadding.left = padding.left;\r\n\t\t\tif (padding.right > sPadding.right)\t\t\t\t sPadding.right = padding.right;\r\n\t\t\tif (padding.top > sPadding.top)\t\t\t\t sPadding.top = padding.top;\r\n\t\t\tif (padding.bottom > sPadding.bottom)\t\t\t\t sPadding.bottom = padding.bottom;\r\n\t\t}\r\n\t\t\r\n\t\tthis.padding.copyFrom(sPadding);\r\n\t}\r\n\t\r\n\t/** Indicates the current chain length. */\r\n\tprivate function get_numFilters():Int\r\n\t{\r\n\t\treturn _filters.length;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.filters;\r\n\r\nimport starling.filters.ITexturePool;\r\n\r\nimport starling.rendering.Painter;\r\nimport starling.textures.Texture;\r\n\r\n/** The GlowFilter class lets you apply a glow effect to display objects.\r\n *  It is similar to the drop shadow filter with the distance and angle properties set to 0.\r\n */\r\nclass GlowFilter extends FragmentFilter\r\n{\r\n\tpublic var color(get, set):Int;\r\n\tpublic var alpha(get, set):Float;\r\n\tpublic var blur(get, set):Float;\r\n\r\n\tprivate var _blurFilter:BlurFilter;\r\n\tprivate var _compositeFilter:CompositeFilter;\r\n\t\r\n\t/** Initializes a new GlowFilter instance with the specified parameters. */\r\n\tpublic function new(color:Int = 0xffff00, alpha:Float = 1.0, blur:Float = 1.0)\r\n\t{\r\n\t\tsuper();\r\n\t\t_compositeFilter = new CompositeFilter();\r\n\t\t_blurFilter = new BlurFilter(blur, blur);\r\n\t\t\r\n\t\tthis.color = color;\r\n\t\tthis.alpha = alpha;\r\n\t\t\r\n\t\tupdatePadding();\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\t_blurFilter.dispose();\r\n\t\t_compositeFilter.dispose();\r\n\t\t\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t/** @private */\r\n\toverride public function process(painter:Painter, pool:ITexturePool,\r\n\t\t\tinput0:Texture = null, input1:Texture = null,\r\n\t\t\tinput2:Texture = null, input3:Texture = null):Texture\r\n\t{\r\n\t\tvar glow:Texture = _blurFilter.process(painter, pool, input0);\r\n\t\tvar result:Texture = _compositeFilter.process(painter, pool, glow, input0);\r\n\t\tpool.putTexture(glow);\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tprivate function updatePadding():Void\r\n\t{\r\n\t\tpadding.copyFrom(_blurFilter.padding);\r\n\t}\r\n\t\r\n\t/** The color of the glow. @default 0xffff00 */\r\n\tprivate function get_color():Int\r\n\t{\r\n\t\treturn _compositeFilter.getColorAt(0);\r\n\t}\r\n\t\r\n\tprivate function set_color(value:Int):Int\r\n\t{\r\n\t\tif (color != value) \r\n\t\t{\r\n\t\t\t_compositeFilter.setColorAt(0, value, true);\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The alpha transparency value for the color. @default 1.0 */\r\n\tprivate function get_alpha():Float\r\n\t{\r\n\t\treturn _compositeFilter.getAlphaAt(0);\r\n\t}\r\n\t\r\n\tprivate function set_alpha(value:Float):Float\r\n\t{\r\n\t\tif (alpha != value) \r\n\t\t{\r\n\t\t\t_compositeFilter.setAlphaAt(0, value);\r\n\t\t\tsetRequiresRedraw();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The amount of blur with which the glow is created.\r\n\t *  The number of required passes will be <code>Math.ceil(value) × 2</code>.\r\n\t *  @default 1.0 */\r\n\tprivate function get_blur():Float\r\n\t{\r\n\t\treturn _blurFilter.blurX;\r\n\t}\r\n\t\r\n\tprivate function set_blur(value:Float):Float\r\n\t{\r\n\t\tif (blur != value) \r\n\t\t{\r\n\t\t\t_blurFilter.blurX = _blurFilter.blurY = value;\r\n\t\t\tupdatePadding();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.filters;\r\n\r\n\r\nimport openfl.display3D.Context3DProfile;\r\nimport openfl.geom.Rectangle;\r\n\r\nimport starling.core.Starling;\r\nimport starling.textures.SubTexture;\r\nimport starling.textures.Texture;\r\nimport starling.utils.MathUtil;\r\n\r\n/** @private\r\n *\r\n *  This class manages texture creation, pooling and disposal of all textures\r\n *  during filter processing.\r\n */\r\nclass TexturePool implements ITexturePool\r\n{\r\n\tpublic var textureWidth(get, never):Float;\r\n\tpublic var textureHeight(get, never):Float;\r\n\tpublic var textureScale(get, never):Float;\r\n\r\n\tprivate var _scale:Float;\r\n\tprivate var _width:Float;\r\n\tprivate var _height:Float;\r\n\tprivate var _nativeWidth:Int;\r\n\tprivate var _nativeHeight:Int;\r\n\tprivate var _pool:Array<Texture>;\r\n\tprivate var _usePotTextures:Bool;\r\n\tprivate var _sizeStep:Int;\r\n\t\r\n\t// helpers\r\n\tprivate var sRegion:Rectangle = new Rectangle();\r\n\t\r\n\t/** Creates a new, empty instance. */\r\n\t@:allow(starling.filters)\r\n\tprivate function new()\r\n\t{\r\n\t\t_usePotTextures = Starling.Current.profile == Context3DProfile.BASELINE_CONSTRAINED;\r\n\t\t_sizeStep = 64;  // must be POT!  \r\n\t\t_pool = [];\r\n\t\t\r\n\t\tsetSize(_sizeStep, _sizeStep, 1);\r\n\t}\r\n\t\r\n\t/** Purges the pool. */\r\n\tpublic function dispose():Void\r\n\t{\r\n\t\tpurge();\r\n\t}\r\n\t\r\n\t/** Updates the size of the returned textures. Small size changes may allow the\r\n\t *  existing textures to be reused; big size changes will automatically dispose\r\n\t *  them. */\r\n\tpublic function setSize(width:Float, height:Float, scale:Float = -1):Void\r\n\t{\r\n\t\tif (scale <= 0)\t\t\t scale = Starling.ContentScaleFactor;\r\n\t\t\r\n\t\tvar factor:Float;\r\n\t\tvar maxNativeSize:Int = Texture.maxSize;\r\n\t\tvar newNativeWidth:Int = getNativeSize(width, scale);\r\n\t\tvar newNativeHeight:Int = getNativeSize(height, scale);\r\n\t\t\r\n\t\tif (newNativeWidth > maxNativeSize || newNativeHeight > maxNativeSize) \r\n\t\t{\r\n\t\t\tfactor = maxNativeSize / Math.max(newNativeWidth, newNativeHeight);\r\n\t\t\tnewNativeWidth *= untyped factor;\r\n\t\t\tnewNativeHeight *= untyped factor;\r\n\t\t\tscale *= factor;\r\n\t\t}\r\n\t\t\r\n\t\tif (_nativeWidth != newNativeWidth || _nativeHeight != newNativeHeight) \r\n\t\t{\r\n\t\t\tpurge();\r\n\t\t\t\r\n\t\t\t_nativeWidth = newNativeWidth;\r\n\t\t\t_nativeHeight = newNativeHeight;\r\n\t\t}\r\n\t\t\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\t\t_scale = scale;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\tpublic function getTexture():Texture\r\n\t{\r\n\t\tvar texture:Texture;\r\n\t\t\r\n\t\tif (_pool.length > 0) \r\n\t\t\ttexture = _pool.pop()\r\n\t\telse \r\n\t\ttexture = Texture.empty(_nativeWidth / _scale, _nativeHeight / _scale,\r\n\t\t\t\t\t\ttrue, false, true, _scale);\r\n\t\t\r\n\t\tif (texture.width != _width || texture.height != _height) \r\n\t\t{\r\n\t\t\tsRegion.setTo(0, 0, _width, _height);\r\n\t\t\ttexture = new SubTexture(texture.root, sRegion, true);\r\n\t\t}\r\n\t\t\r\n\t\ttexture.root.clear();\r\n\t\treturn texture;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\tpublic function putTexture(texture:Texture):Void\r\n\t{\r\n\t\tif (texture != null) \r\n\t\t{\r\n\t\t\tif (texture.root.nativeWidth == _nativeWidth && texture.root.nativeHeight == _nativeHeight) \r\n\t\t\t\t_pool.insert(_pool.length, texture)\r\n\t\t\telse \r\n\t\t\ttexture.dispose();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Purges the pool and disposes all textures. */\r\n\tpublic function purge():Void\r\n\t{\r\n\t\tfor (i in 0..._pool.length)\r\n\t\t\t\t_pool[i].dispose();\r\n\t\t\r\n\t\t_pool.splice(0, _pool.length);\r\n\t}\r\n\t\r\n\tprivate function getNativeSize(size:Float, textureScale:Float):Int\r\n\t{\r\n\t\tvar nativeSize:Float = size * textureScale;\r\n\t\t\r\n\t\tif (_usePotTextures)\r\n\t\t\treturn nativeSize > _sizeStep ? MathUtil.getNextPowerOfTwo(cast nativeSize) : _sizeStep;\r\n\t\telse\r\n\t\t\treturn Math.ceil(nativeSize / _sizeStep) * _sizeStep;\r\n\t}\r\n\t\r\n\t/** The width of the returned textures (in points). */\r\n\tprivate function get_textureWidth():Float {\r\n\t\treturn _width;\r\n\t}\r\n\t\r\n\t/** The height of the returned textures (in points). */\r\n\tprivate function get_textureHeight():Float {\r\n\t\treturn _height;\r\n\t}\r\n\t\r\n\t/** The scale factor of the returned textures. */\r\n\tprivate function get_textureScale():Float {\r\n\t\treturn _scale;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.geom;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport openfl.errors.Error;\r\nimport openfl.errors.RangeError;\r\nimport starling.utils.FloatUtil;\r\n\r\nimport openfl.geom.Point;\r\n\r\n\r\nimport starling.rendering.IndexData;\r\nimport starling.rendering.VertexData;\r\nimport starling.utils.MathUtil;\r\nimport starling.utils.Pool;\r\n\r\n/** A polygon describes a closed two-dimensional shape bounded by a number of straight\r\n *  line segments.\r\n *\r\n *  <p>The vertices of a polygon form a closed path (i.e. the last vertex will be connected\r\n *  to the first). It is recommended to provide the vertices in clockwise order.\r\n *  Self-intersecting paths are not supported and will give wrong results on triangulation,\r\n *  area calculation, etc.</p>\r\n */\r\n\r\nimport openfl.errors.IllegalOperationError;\r\nimport starling.geom.Polygon;\r\n\r\n\r\nclass Polygon\r\n{\r\n\tpublic var isSimple(get, never):Bool;\r\n\tpublic var isConvex(get, never):Bool;\r\n\tpublic var area(get, never):Float;\r\n\tpublic var numVertices(get, set):Int;\r\n\tpublic var numTriangles(get, never):Int;\r\n\r\n\tprivate var _coords:Array<Float>;\r\n\t\r\n\t// Helper object\r\n\tprivate static var sRestIndices:Array<Int> = [];\r\n\t\r\n\t/** Creates a Polygon with the given coordinates.\r\n\t *  @param vertices an array that contains either 'Point' instances or\r\n\t *\t\t\t\t  alternating 'x' and 'y' coordinates.\r\n\t */\r\n\tpublic function new(vertices:Array<Dynamic> = null)\r\n\t{\r\n\t\t_coords = [];\r\n\t\taddVertices(vertices);\r\n\t}\r\n\t\r\n\t/** Creates a clone of this polygon. */\r\n\tpublic function clone():Polygon\r\n\t{\r\n\t\tvar clone:Polygon = new Polygon();\r\n\t\tvar numCoords:Int = _coords.length;\r\n\t\t\r\n\t\tfor (i in 0...numCoords){clone._coords[i] = _coords[i];\r\n\t\t}\r\n\t\t\r\n\t\treturn clone;\r\n\t}\r\n\t\r\n\t/** Reverses the order of the vertices. Note that some methods of the Polygon class\r\n\t *  require the vertices in clockwise order. */\r\n\tpublic function reverse():Void\r\n\t{\r\n\t\tvar numCoords:Int = _coords.length;\r\n\t\tvar numVertices:Int = untyped numCoords / 2;\r\n\t\tvar tmp:Float;\r\n\t\t\r\n\t\tvar i:Int = 0;\r\n\t\twhile (i < numVertices){\r\n\t\t\ttmp = _coords[i];\r\n\t\t\t_coords[i] = _coords[numCoords - i - 2];\r\n\t\t\t_coords[numCoords - i - 2] = tmp;\r\n\t\t\t\r\n\t\t\ttmp = _coords[i + 1];\r\n\t\t\t_coords[i + 1] = _coords[numCoords - i - 1];\r\n\t\t\t_coords[numCoords - i - 1] = tmp;\r\n\t\t\ti += 2;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Adds vertices to the polygon. Pass either a list of 'Point' instances or alternating\r\n\t *  'x' and 'y' coordinates. */\r\n\tpublic function addVertices(args:Array<Dynamic>):Void\r\n\t{\r\n\t\tvar i:Int;\r\n\t\tvar numArgs:Int = args.length;\r\n\t\tvar numCoords:Int = _coords.length;\r\n\t\t\r\n\t\tif (numArgs > 0) \r\n\t\t{\r\n\t\t\tif (Std.is(args[0], Point)) \r\n\t\t\t{\r\n\t\t\t\tfor (i in 0...numArgs){\r\n\t\t\t\t\t_coords[numCoords + i * 2] = cast(args[i], Point).x;\r\n\t\t\t\t\t_coords[numCoords + i * 2 + 1] = cast(args[i], Point).y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (Std.is(args[0], Float)) \r\n\t\t\t{\r\n\t\t\t\tfor (i in 0...numArgs){_coords[numCoords + i] = args[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse throw new ArgumentError(\"Invalid type: \" + Type.getClassName(args[0]));\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Moves a given vertex to a certain position or adds a new vertex at the end. */\r\n\tpublic function setVertex(index:Int, x:Float, y:Float):Void\r\n\t{\r\n\t\tif (index >= 0 && index <= numVertices) \r\n\t\t{\r\n\t\t\t_coords[index * 2] = x;\r\n\t\t\t_coords[index * 2 + 1] = y;\r\n\t\t}\r\n\t\telse throw new RangeError(\"Invalid index: \" + index);\r\n\t}\r\n\t\r\n\t/** Returns the coordinates of a certain vertex. */\r\n\tpublic function getVertex(index:Int, out:Point = null):Point\r\n\t{\r\n\t\tif (index >= 0 && index < numVertices)\r\n\t\t{\r\n\t\t\tif (out == null) out = new Point();\r\n\t\t\tout.setTo(_coords[index * 2], _coords[index * 2 + 1]);\r\n\t\t\treturn out;\r\n\t\t}\r\n\t\telse throw new RangeError(\"Invalid index: \" + index);\r\n\t}\r\n\t\r\n\t/** Figures out if the given coordinates lie within the polygon. */\r\n\tpublic function contains(x:Float, y:Float):Bool\r\n\t{\r\n\t\t// Algorithm & implementation thankfully taken from:\r\n\t\t// -> http://alienryderflex.com/polygon/\r\n\t\t\r\n\t\tvar i:Int;\r\n\t\tvar j:Int = numVertices - 1;\r\n\t\tvar oddNodes:Int = 0;\r\n\t\t\r\n\t\tfor (i in 0...numVertices){\r\n\t\t\tvar ix:Float = _coords[i * 2];\r\n\t\t\tvar iy:Float = _coords[i * 2 + 1];\r\n\t\t\tvar jx:Float = _coords[j * 2];\r\n\t\t\tvar jy:Float = _coords[j * 2 + 1];\r\n\t\t\t\r\n\t\t\tif ((iy < y && jy >= y || jy < y && iy >= y) && (ix <= x || jx <= x)) \r\n\t\t\t\toddNodes ^= cast(ix + (y - iy) / (jy - iy) * (jx - ix) < x, Int);\r\n\t\t\t\r\n\t\t\tj = i;\r\n\t\t}\r\n\t\t\r\n\t\treturn oddNodes != 0;\r\n\t}\r\n\t\r\n\t/** Figures out if the given point lies within the polygon. */\r\n\tpublic function containsPoint(point:Point):Bool\r\n\t{\r\n\t\treturn contains(point.x, point.y);\r\n\t}\r\n\t\r\n\t/** Calculates a possible representation of the polygon via triangles. The resulting\r\n\t *  IndexData instance will reference the polygon vertices as they are saved in this\r\n\t *  Polygon instance, optionally incremented by the given offset.\r\n\t *\r\n\t *  <p>If you pass an indexData object, the new indices will be appended to it.\r\n\t *  Otherwise, a new instance will be created.</p> */\r\n\tpublic function triangulate(indexData:IndexData = null, offset:Int = 0):IndexData\r\n\t{\r\n\t\t// Algorithm \"Ear clipping method\" described here:\r\n\t\t// -> https://en.wikipedia.org/wiki/Polygon_triangulation\r\n\t\t//\r\n\t\t// Implementation inspired by:\r\n\t\t// -> http://polyk.ivank.net\r\n\t\t\r\n\t\tvar numVertices:Int = this.numVertices;\r\n\t\tvar numTriangles:Int = this.numTriangles;\r\n\t\tvar i:Int;\r\n\t\tvar restIndexPos:Int;\r\n\t\tvar numRestIndices:Int;\r\n\t\t\r\n\t\tif (indexData == null)\t\t\t indexData = new IndexData(numTriangles * 3);\r\n\t\tif (numTriangles == 0)\t\t\t return indexData;\r\n\t\t\r\n\t\tsRestIndices.splice(numVertices, sRestIndices.length - numVertices);\r\n\t\tfor (i in 0...numVertices){sRestIndices[i] = i;\r\n\t\t}\r\n\t\t\r\n\t\trestIndexPos = 0;\r\n\t\tnumRestIndices = numVertices;\r\n\t\t\r\n\t\tvar a:Point = Pool.getPoint();\r\n\t\tvar b:Point = Pool.getPoint();\r\n\t\tvar c:Point = Pool.getPoint();\r\n\t\tvar p:Point = Pool.getPoint();\r\n\t\t\r\n\t\twhile (numRestIndices > 3)\r\n\t\t{\r\n\t\t\t// In each step, we look at 3 subsequent vertices. If those vertices spawn up\r\n\t\t\t// a triangle that is convex and does not contain any other vertices, it is an 'ear'.\r\n\t\t\t// We remove those ears until only one remains -> each ear is one of our wanted\r\n\t\t\t// triangles.\r\n\t\t\t\r\n\t\t\tvar otherIndex:Int;\r\n\t\t\tvar earFound:Bool = false;\r\n\t\t\tvar i0:Int = sRestIndices[restIndexPos % numRestIndices];\r\n\t\t\tvar i1:Int = sRestIndices[(restIndexPos + 1) % numRestIndices];\r\n\t\t\tvar i2:Int = sRestIndices[(restIndexPos + 2) % numRestIndices];\r\n\t\t\t\r\n\t\t\ta.setTo(_coords[2 * i0], _coords[2 * i0 + 1]);\r\n\t\t\tb.setTo(_coords[2 * i1], _coords[2 * i1 + 1]);\r\n\t\t\tc.setTo(_coords[2 * i2], _coords[2 * i2 + 1]);\r\n\t\t\t\r\n\t\t\tif (isConvexTriangle(a.x, a.y, b.x, b.y, c.x, c.y)) \r\n\t\t\t{\r\n\t\t\t\tearFound = true;\r\n\t\t\t\tfor (i in 3...numRestIndices){\r\n\t\t\t\t\totherIndex = sRestIndices[(restIndexPos + i) % numRestIndices];\r\n\t\t\t\t\tp.setTo(_coords[2 * otherIndex], _coords[2 * otherIndex + 1]);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (MathUtil.isPointInTriangle(p, a, b, c)) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tearFound = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (earFound) \r\n\t\t\t{\r\n\t\t\t\tindexData.addTriangle(i0 + offset, i1 + offset, i2 + offset);\r\n\t\t\t\tsRestIndices.splice((restIndexPos + 1) % numRestIndices, 1);\r\n\t\t\t\t\r\n\t\t\t\tnumRestIndices--;\r\n\t\t\t\trestIndexPos = 0;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\trestIndexPos++;\r\n\t\t\t\tif (restIndexPos == numRestIndices) break;  // no more ears  ;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tPool.putPoint(a);\r\n\t\tPool.putPoint(b);\r\n\t\tPool.putPoint(c);\r\n\t\tPool.putPoint(p);\r\n\t\t\r\n\t\tindexData.addTriangle(sRestIndices[0] + offset,\r\n\t\t\t\tsRestIndices[1] + offset,\r\n\t\t\t\tsRestIndices[2] + offset);\r\n\t\treturn indexData;\r\n\t}\r\n\t\r\n\t/** Copies all vertices to a 'VertexData' instance, beginning at a certain target index. */\r\n\tpublic function copyToVertexData(target:VertexData = null, targetVertexID:Int = 0,\r\n\t\t\tattrName:String = \"position\"):Void\r\n\t{\r\n\t\tvar numVertices:Int = this.numVertices;\r\n\t\tvar requiredTargetLength:Int = targetVertexID + numVertices;\r\n\t\t\r\n\t\tif (target.numVertices < requiredTargetLength) \r\n\t\t\ttarget.numVertices = requiredTargetLength;\r\n\t\t\r\n\t\tfor (i in 0...numVertices){target.setPoint(targetVertexID + i, attrName, _coords[i * 2], _coords[i * 2 + 1]);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Creates a string that contains the values of all included points. */\r\n\tpublic function toString():String\r\n\t{\r\n\t\tvar result:String = \"[Polygon\";\r\n\t\tvar numPoints:Int = this.numVertices;\r\n\t\t\r\n\t\tif (numPoints > 0)\t\t\t result += \"\\n\";\r\n\t\t\r\n\t\tfor (i in 0...numPoints){\r\n\t\t\tresult += \"  [Vertex \" + i + \": \" +\r\n\t\t\t\"x=\" + FloatUtil.toFixed(_coords[i * 2], 1) + \", \" +\r\n\t\t\t\"y=\" + FloatUtil.toFixed(_coords[i * 2 + 1], 1) + \"]\" +\r\n\t\t\t(i == numPoints - (1) ? \"\\n\":\",\\n\");\r\n\t\t}\r\n\t\t\r\n\t\treturn result + \"]\";\r\n\t}\r\n\t\r\n\t// factory methods\r\n\t\r\n\t/** Creates an ellipse with optimized implementations of triangulation, hitTest, etc. */\r\n\tpublic static function createEllipse(x:Float, y:Float, radiusX:Float, radiusY:Float):Polygon\r\n\t{\r\n\t\treturn new Ellipse(x, y, radiusX, radiusY);\r\n\t}\r\n\t\r\n\t/** Creates a circle with optimized implementations of triangulation, hitTest, etc. */\r\n\tpublic static function createCircle(x:Float, y:Float, radius:Float):Polygon\r\n\t{\r\n\t\treturn new Ellipse(x, y, radius, radius);\r\n\t}\r\n\t\r\n\t/** Creates a rectangle with optimized implementations of triangulation, hitTest, etc. */\r\n\tpublic static function createRectangle(x:Float, y:Float,\r\n\t\t\twidth:Float, height:Float):Polygon\r\n\t{\r\n\t\treturn new Rectangle(x, y, width, height);\r\n\t}\r\n\t\r\n\t// helpers\r\n\t\r\n\t/** Calculates if the area of the triangle a->b->c is to on the right-hand side of a->b. */\r\n\t@:meta(Inline())\r\n\r\n\tprivate static function isConvexTriangle(ax:Float, ay:Float,\r\n\t\t\tbx:Float, by:Float,\r\n\t\t\tcx:Float, cy:Float):Bool\r\n\t{\r\n\t\t// dot product of [the normal of (a->b)] and (b->c) must be positive\r\n\t\treturn (ay - by) * (cx - bx) + (bx - ax) * (cy - by) >= 0;\r\n\t}\r\n\t\r\n\t/** Finds out if the vector a->b intersects c->d. */\r\n\tprivate static function areVectorsIntersecting(ax:Float, ay:Float, bx:Float, by:Float,\r\n\t\t\tcx:Float, cy:Float, dx:Float, dy:Float):Bool\r\n\t{\r\n\t\tif ((ax == bx && ay == by) || (cx == dx && cy == dy)) return false;  // length = 0  ;\r\n\t\t\r\n\t\tvar abx:Float = bx - ax;\r\n\t\tvar aby:Float = by - ay;\r\n\t\tvar cdx:Float = dx - cx;\r\n\t\tvar cdy:Float = dy - cy;\r\n\t\tvar tDen:Float = cdy * abx - cdx * aby;\r\n\t\t\r\n\t\tif (tDen == 0.0) return false;  // parallel or identical  ;\r\n\t\t\r\n\t\tvar t:Float = (aby * (cx - ax) - abx * (cy - ay)) / tDen;\r\n\t\t\r\n\t\tif (t < 0 || t > 1) return false;  // outside c->d  ;\r\n\t\t\r\n\t\tvar s:Float = (aby != 0) ? (cy - ay + t * cdy) / aby:\r\n\t\t(cx - ax + t * cdx) / abx;\r\n\t\t\r\n\t\treturn s >= 0.0 && s <= 1.0;\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** Indicates if the polygon's line segments are not self-intersecting.\r\n\t *  Beware: this is a brute-force implementation with <code>O(n^2)</code>. */\r\n\tprivate function get_isSimple():Bool\r\n\t{\r\n\t\tvar numCoords:Int = _coords.length;\r\n\t\tif (numCoords <= 6)\t\t\t return true;\r\n\t\t\r\n\t\tvar i:Int = 0;\r\n\t\twhile (i < numCoords){\r\n\t\t\tvar ax:Float = _coords[i];\r\n\t\t\tvar ay:Float = _coords[i + 1];\r\n\t\t\tvar bx:Float = _coords[(i + 2) % numCoords];\r\n\t\t\tvar by:Float = _coords[(i + 3) % numCoords];\r\n\t\t\tvar endJ:Float = i + numCoords - 2;\r\n\t\t\t\r\n\t\t\tvar j:Int = i + 4;\r\n\t\t\twhile (j < endJ){\r\n\t\t\t\tvar cx:Float = _coords[j % numCoords];\r\n\t\t\t\tvar cy:Float = _coords[(j + 1) % numCoords];\r\n\t\t\t\tvar dx:Float = _coords[(j + 2) % numCoords];\r\n\t\t\t\tvar dy:Float = _coords[(j + 3) % numCoords];\r\n\t\t\t\t\r\n\t\t\t\tif (areVectorsIntersecting(ax, ay, bx, by, cx, cy, dx, dy)) \r\n\t\t\t\t\treturn false;\r\n\t\t\t\tj += 2;\r\n\t\t\t}\r\n\t\t\ti += 2;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t/** Indicates if the polygon is convex. In a convex polygon, the vector between any two\r\n\t *  points inside the polygon lies inside it, as well. */\r\n\tprivate function get_isConvex():Bool\r\n\t{\r\n\t\tvar numCoords:Int = _coords.length;\r\n\t\t\r\n\t\tif (numCoords < 6)\t\t\t return true\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar i:Int = 0;\r\n\t\t\twhile (i < numCoords){\r\n\t\t\t\tif (!isConvexTriangle(_coords[i], _coords[i + 1],\r\n\t\t\t\t\t\t\t_coords[(i + 2) % numCoords], _coords[(i + 3) % numCoords],\r\n\t\t\t\t\t\t\t_coords[(i + 4) % numCoords], _coords[(i + 5) % numCoords])) \r\n\t\t\t\t{\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\ti += 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t/** Calculates the total area of the polygon. */\r\n\tprivate function get_area():Float\r\n\t{\r\n\t\tvar area:Float = 0;\r\n\t\tvar numCoords:Int = _coords.length;\r\n\t\t\r\n\t\tif (numCoords >= 6) \r\n\t\t{\r\n\t\t\tvar i:Int = 0;\r\n\t\t\twhile (i < numCoords){\r\n\t\t\t\tarea += _coords[i] * _coords[(i + 3) % numCoords];\r\n\t\t\t\tarea -= _coords[i + 1] * _coords[(i + 2) % numCoords];\r\n\t\t\t\ti += 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn area / 2.0;\r\n\t}\r\n\t\r\n\t/** Returns the total number of vertices spawning up the polygon. Assigning a value\r\n\t *  that's smaller than the current number of vertices will crop the path; a bigger\r\n\t *  value will fill up the path with zeros. */\r\n\tprivate function get_numVertices():Int\r\n\t{\r\n\t\treturn untyped _coords.length / 2;\r\n\t}\r\n\t\r\n\tprivate function set_numVertices(value:Int):Int\r\n\t{\r\n\t\tvar oldLength:Int = numVertices;\r\n\t\t_coords.splice(value * 2, _coords.length - (value * 2));\r\n\t\t\r\n\t\tif (oldLength < value) \r\n\t\t{\r\n\t\t\tfor (i in oldLength...value){_coords[i * 2] = _coords[i * 2 + 1] = 0.0;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Returns the number of triangles that will be required when triangulating the polygon. */\r\n\tprivate function get_numTriangles():Int\r\n\t{\r\n\t\tvar numVertices:Int = this.numVertices;\r\n\t\treturn numVertices >= (3) ? numVertices - 2:0;\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass ImmutablePolygon extends Polygon\r\n{\r\n\tprivate var _frozen:Bool;\r\n\t\r\n\tpublic function new(vertices:Array<Dynamic>)\r\n\t{\r\n\t\tsuper(vertices);\r\n\t\t_frozen = true;\r\n\t}\r\n\t\r\n\toverride public function addVertices(args:Array<Dynamic>):Void\r\n\t{\r\n\t\tif (_frozen) throw getImmutableError()\r\n\t\telse super.addVertices(args);\r\n\t}\r\n\t\r\n\toverride public function setVertex(index:Int, x:Float, y:Float):Void\r\n\t{\r\n\t\tif (_frozen) throw getImmutableError()\r\n\t\telse super.setVertex(index, x, y);\r\n\t}\r\n\t\r\n\toverride public function reverse():Void\r\n\t{\r\n\t\tif (_frozen) throw getImmutableError()\r\n\t\telse super.reverse();\r\n\t}\r\n\t\r\n\toverride private function set_numVertices(value:Int):Int\r\n\t{\r\n\t\tif (_frozen) throw getImmutableError()\r\n\t\telse super.reverse();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate function getImmutableError():Error\r\n\t{\r\n\t\tvar className:String = Type.getClassName(Type.getClass(this)).split(\"::\").pop();\r\n\t\tvar msg:String = className + \" cannot be modified. Call 'clone' to create a mutable copy.\";\r\n\t\treturn new IllegalOperationError(msg);\r\n\t}\r\n}\r\n\r\nclass Ellipse extends ImmutablePolygon\r\n{\r\n\tprivate var _x:Float;\r\n\tprivate var _y:Float;\r\n\tprivate var _radiusX:Float;\r\n\tprivate var _radiusY:Float;\r\n\t\r\n\tpublic function new(x:Float, y:Float, radiusX:Float, radiusY:Float, numSides:Int = -1)\r\n\t{\r\n\t\t_x = x;\r\n\t\t_y = y;\r\n\t\t_radiusX = radiusX;\r\n\t\t_radiusY = radiusY;\r\n\t\t\r\n\t\tsuper(getVertices(numSides));\r\n\t}\r\n\t\r\n\tprivate function getVertices(numSides:Int):Array<Dynamic>\r\n\t{\r\n\t\tif (numSides < 0) numSides = cast Math.PI * (_radiusX + _radiusY) / 4.0;\r\n\t\tif (numSides < 6) numSides = 6;\r\n\t\t\r\n\t\tvar vertices:Array<Dynamic> = [];\r\n\t\tvar angleDelta:Float = 2 * Math.PI / numSides;\r\n\t\tvar angle:Float = 0;\r\n\t\t\r\n\t\tfor (i in 0...numSides){\r\n\t\t\tvertices[i * 2] = Math.cos(angle) * _radiusX + _x;\r\n\t\t\tvertices[i * 2 + 1] = Math.sin(angle) * _radiusY + _y;\r\n\t\t\tangle += angleDelta;\r\n\t\t}\r\n\t\t\r\n\t\treturn vertices;\r\n\t}\r\n\t\r\n\toverride public function triangulate(indexData:IndexData = null, offset:Int = 0):IndexData\r\n\t{\r\n\t\tif (indexData == null)\t\t\t indexData = new IndexData((numVertices - 2) * 3);\r\n\t\t\r\n\t\tvar from:Int = 1;\r\n\t\tvar to:Int = numVertices - 1;\r\n\t\t\r\n\t\tfor (i in from...to){indexData.addTriangle(offset, offset + i, offset + i + 1);\r\n\t\t}\r\n\t\t\r\n\t\treturn indexData;\r\n\t}\r\n\t\r\n\toverride public function contains(x:Float, y:Float):Bool\r\n\t{\r\n\t\tvar vx:Float = x - _x;\r\n\t\tvar vy:Float = y - _y;\r\n\t\t\r\n\t\tvar a:Float = vx / _radiusX;\r\n\t\tvar b:Float = vy / _radiusY;\r\n\t\t\r\n\t\treturn a * a + b * b <= 1;\r\n\t}\r\n\t\r\n\toverride private function get_area():Float\r\n\t{\r\n\t\treturn Math.PI * _radiusX * _radiusY;\r\n\t}\r\n\t\r\n\toverride private function get_isSimple():Bool\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\toverride private function get_isConvex():Bool\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nclass Rectangle extends ImmutablePolygon\r\n{\r\n\tprivate var _x:Float;\r\n\tprivate var _y:Float;\r\n\tprivate var _width:Float;\r\n\tprivate var _height:Float;\r\n\t\r\n\tpublic function new(x:Float, y:Float, width:Float, height:Float)\r\n\t{\r\n\t\t_x = x;\r\n\t\t_y = y;\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\t\t\r\n\t\tsuper([x, y, x + width, y, x + width, y + height, x, y + height]);\r\n\t}\r\n\t\r\n\toverride public function triangulate(indexData:IndexData = null, offset:Int = 0):IndexData\r\n\t{\r\n\t\tif (indexData == null)\t\t\t indexData = new IndexData(6);\r\n\t\t\r\n\t\tindexData.addTriangle(offset, offset + 1, offset + 3);\r\n\t\tindexData.addTriangle(offset + 1, offset + 2, offset + 3);\r\n\t\t\r\n\t\treturn indexData;\r\n\t}\r\n\t\r\n\toverride public function contains(x:Float, y:Float):Bool\r\n\t{\r\n\t\treturn x >= _x && x <= _x + _width &&\r\n\t\ty >= _y && y <= _y + _height;\r\n\t}\r\n\t\r\n\toverride private function get_area():Float\r\n\t{\r\n\t\treturn _width * _height;\r\n\t}\r\n\t\r\n\toverride private function get_isSimple():Bool\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\toverride private function get_isConvex():Bool\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n}\r\n","package starling.openfl;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\nclass OpenFLOverrides\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n//typedef Context3D = starling.openfl.Context3D;\r\n//typedef AGLSLParser = starling.openfl.AGLSLParser;\r\n//typedef Mapping = starling.openfl.Mapping;\r\n//typedef Context3DTextureFormat = starling.openfl.Context3DTextureFormat;\r\n//typedef Context3DVertexBufferFormat = starling.openfl.Context3DVertexBufferFormat;\r\n\r\n\r\n//#if cpp\r\n//typedef Texture = starling.openfl.Texture;\r\n//#end","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.rendering;\r\n\r\nimport haxe.ds.ObjectMap;\r\nimport openfl.errors.RangeError;\r\nimport haxe.Constraints.Function;\r\nimport starling.rendering.BatchToken;\r\nimport starling.rendering.RenderState;\r\n\r\nimport openfl.geom.Matrix;\r\n\r\nimport starling.display.Mesh;\r\nimport starling.display.MeshBatch;\r\nimport starling.utils.MathUtil;\r\nimport starling.utils.MeshSubset;\r\n\r\n/** This class manages a list of mesh batches of different types;\r\n *  it acts as a \"meta\" MeshBatch that initiates all rendering.\r\n */\r\n\r\n\r\nclass BatchProcessor\r\n{\r\n\tpublic var numBatches(get, never):Int;\r\n\tpublic var onBatchComplete(get, set):Function;\r\n\r\n\tprivate var _batches:Array<MeshBatch>;\r\n\tprivate var _batchPool:BatchPool;\r\n\tprivate var _currentBatch:MeshBatch;\r\n\tprivate var _currentStyleType:Class<Dynamic>;\r\n\tprivate var _onBatchComplete:Function;\r\n\tprivate var _cacheToken:BatchToken;\r\n\t\r\n\t// helper objects\r\n\tprivate static var sMeshSubset:MeshSubset = new MeshSubset();\r\n\t\r\n\t/** Creates a new batch processor. */\r\n\t@:allow(starling.rendering)\r\n\tprivate function new()\r\n\t{\r\n\t\t_batches = [];\r\n\t\t_batchPool = new BatchPool();\r\n\t\t_cacheToken = new BatchToken();\r\n\t}\r\n\t\r\n\t/** Disposes all batches (including those in the reusable pool). */\r\n\tpublic function dispose():Void\r\n\t{\r\n\t\tfor (batch in _batches)\r\n\t\t\tbatch.dispose();\r\n\t\t\r\n\t\t_batches.splice(0, _batches.length);\r\n\t\t_batchPool.purge();\r\n\t\t_currentBatch = null;\r\n\t}\r\n\t\r\n\t/** Adds a mesh to the current batch, or to a new one if the current one does not support\r\n\t *  it. Whenever the batch changes, <code>onBatchComplete</code> is called for the previous\r\n\t *  one.\r\n\t *\r\n\t *  @param mesh\t   the mesh to add to the current (or new) batch.\r\n\t *  @param state\t  the render state from which to take the current settings for alpha,\r\n\t *\t\t\t\t\tmodelview matrix, and blend mode.\r\n\t *  @param subset\t the subset of the mesh you want to add, or <code>null</code> for\r\n\t *\t\t\t\t\tthe complete mesh.\r\n\t *  @param ignoreTransformations   when enabled, the mesh's vertices will be added\r\n\t *\t\t\t\t\twithout transforming them in any way (no matter the value of the\r\n\t *\t\t\t\t\tstate's <code>modelviewMatrix</code>).\r\n\t */\r\n\tpublic function addMesh(mesh:Mesh, state:RenderState, subset:MeshSubset = null, ignoreTransformations:Bool = false):Void\r\n\t{\r\n\t\tif (subset == null) \r\n\t\t{\r\n\t\t\tsubset = sMeshSubset;\r\n\t\t\tsubset.vertexID = subset.indexID = 0;\r\n\t\t\tsubset.numVertices = mesh.numVertices;\r\n\t\t\tsubset.numIndices = mesh.numIndices;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tif (subset.numVertices < 0) subset.numVertices = mesh.numVertices - subset.vertexID;\r\n\t\t\tif (subset.numIndices < 0) subset.numIndices = mesh.numIndices - subset.indexID;\r\n\t\t}\r\n\t\t\r\n\t\tif (subset.numVertices > 0) \r\n\t\t{\r\n\t\t\tvar _canAddMesh:Bool = false;\r\n\t\t\tif (_currentBatch != null) _canAddMesh = _currentBatch.canAddMesh(mesh, subset.numVertices);\r\n\t\t\tif (_currentBatch == null || !_canAddMesh) \r\n\t\t\t{\r\n\t\t\t\tfinishBatch();\r\n\t\t\t\t\r\n\t\t\t\t_currentStyleType = mesh.style.type;\r\n\t\t\t\t\r\n\t\t\t\t_currentBatch = _batchPool.get(_currentStyleType);\r\n\t\t\t\t_currentBatch.blendMode = (state != null) ? state.blendMode:mesh.blendMode;\r\n\t\t\t\t_cacheToken.setTo(_batches.length);\r\n\t\t\t\t_batches[_batches.length] = _currentBatch;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar matrix:Matrix = (state != null) ? state.modelviewMatrix:null;\r\n\t\t\tvar alpha:Float = (state != null) ? state.alpha:1.0;\r\n\t\t\t\r\n\t\t\t_currentBatch.addMesh(mesh, matrix, alpha, subset, ignoreTransformations);\r\n\t\t\t_cacheToken.vertexID += subset.numVertices;\r\n\t\t\t_cacheToken.indexID += subset.numIndices;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Finishes the current batch, i.e. call the 'onComplete' callback on the batch and\r\n\t *  prepares initialization of a new one. */\r\n\tpublic function finishBatch():Void\r\n\t{\r\n\t\tvar meshBatch:MeshBatch = _currentBatch;\r\n\t\t\r\n\t\tif (meshBatch != null) \r\n\t\t{\r\n\t\t\t_currentBatch = null;\r\n\t\t\t_currentStyleType = null;\r\n\t\t\t\r\n\t\t\tif (_onBatchComplete != null) \r\n\t\t\t\t_onBatchComplete(meshBatch);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Clears all batches and adds them to a pool so they can be reused later. */\r\n\tpublic function clear():Void\r\n\t{\r\n\t\tvar numBatches:Int = _batches.length;\r\n\t\t\r\n\t\tfor (i in 0...numBatches) {\r\n\t\t\t_batchPool.put(_batches[i]);\r\n\t\t}\r\n\t\t\r\n\t\t_batches.splice(0, _batches.length);\r\n\t\t_currentBatch = null;\r\n\t\t_currentStyleType = null;\r\n\t\t_cacheToken.reset();\r\n\t}\r\n\t\r\n\t/** Returns the batch at a certain index. */\r\n\tpublic function getBatchAt(batchID:Int):MeshBatch\r\n\t{\r\n\t\treturn _batches[batchID];\r\n\t}\r\n\t\r\n\t/** Disposes all batches that are currently unused. */\r\n\tpublic function trim():Void\r\n\t{\r\n\t\t_batchPool.purge();\r\n\t}\r\n\t\r\n\tpublic function rewindTo(token:BatchToken):Void\r\n\t{\r\n\t\tif (token.batchID > _cacheToken.batchID) \r\n\t\t\tthrow new RangeError(\"Token outside available range\");\r\n\t\t\r\n\t\tvar i:Int = _cacheToken.batchID;\r\n\t\twhile (i > token.batchID) {\r\n\t\t\t_batchPool.put(_batches.pop());\r\n\t\t\t--i;\r\n\t\t}\r\n\t\t\r\n\t\tif (_batches.length > token.batchID) \r\n\t\t{\r\n\t\t\tvar batch:MeshBatch = _batches[token.batchID];\r\n\t\t\tbatch.numIndices = untyped Math.min(batch.numIndices, token.indexID);\r\n\t\t\tbatch.numVertices = untyped Math.min(batch.numVertices, token.vertexID);\r\n\t\t}\r\n\t\t\r\n\t\t_currentBatch = null;\r\n\t\t_cacheToken.copyFrom(token);\r\n\t}\r\n\t\r\n\t/** Sets all properties of the given token so that it describes the current position\r\n\t *  within this instance. */\r\n\tpublic function fillToken(token:BatchToken):BatchToken\r\n\t{\r\n\t\ttoken.batchID = _cacheToken.batchID;\r\n\t\ttoken.vertexID = _cacheToken.vertexID;\r\n\t\ttoken.indexID = _cacheToken.indexID;\r\n\t\treturn token;\r\n\t}\r\n\t\r\n\t/** The number of batches currently stored in the BatchProcessor. */\r\n\tprivate function get_numBatches():Int\r\n\t{\r\n\t\treturn _batches.length;\r\n\t}\r\n\t\r\n\t/** This callback is executed whenever a batch is finished and replaced by a new one.\r\n\t *  The finished MeshBatch is passed to the callback. Typically, this callback is used\r\n\t *  to actually render it. */\r\n\tprivate function get_onBatchComplete():Function\r\n\t{\r\n\t\treturn _onBatchComplete;\r\n\t}\r\n\tprivate function set_onBatchComplete(value:Function):Function{_onBatchComplete = value;\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nclass BatchPool\r\n{\r\n\tprivate var _batchLists:ObjectMap<Dynamic, Array<MeshBatch>>;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\t_batchLists = new ObjectMap<Dynamic, Array<MeshBatch>>();\r\n\t}\r\n\t\r\n\tpublic function purge():Void\r\n\t{\r\n\t\tfor (batchList in _batchLists)\r\n\t\t{\r\n\t\t\tfor (i in 0...batchList.length)\r\n\t\t\t{\r\n\t\t\t\tbatchList[i].dispose();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbatchList.splice(0, batchList.length);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function get(styleType:Class<Dynamic>):MeshBatch\r\n\t{\r\n\t\t\r\n\t\t\r\n\t\tvar batchList:Array<MeshBatch> = _batchLists.get(styleType);\r\n\t\tif (batchList == null) \r\n\t\t{\r\n\t\t\tbatchList = [];\r\n\t\t\t_batchLists.set(styleType, batchList);\r\n\t\t}\r\n\t\t\r\n\t\tif (batchList.length > 0) return batchList.pop()\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar batch:MeshBatch = new MeshBatch();\r\n\t\t\tbatch.batchable = false;\r\n\t\t\treturn batch;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function put(meshBatch:MeshBatch):Void\r\n\t{\r\n\t\tvar styleType:Class<Dynamic> = meshBatch.style.type;\r\n\t\tvar batchList:Array<MeshBatch> = _batchLists.get(styleType);\r\n\t\tif (batchList == null) \r\n\t\t{\r\n\t\t\tbatchList = [];\r\n\t\t\t_batchLists.set(styleType, batchList);\r\n\t\t}\r\n\t\t\r\n\t\tmeshBatch.clear();\r\n\t\tbatchList[batchList.length] = meshBatch;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//  Starling Framework\r\n//  Copyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.rendering;\r\n\r\n\r\nimport openfl.display3D.Context3D;\r\nimport openfl.display3D.Context3DBufferUsage;\r\nimport openfl.display3D.IndexBuffer3D;\r\nimport openfl.errors.EOFError;\r\nimport openfl.utils.ByteArray;\r\nimport openfl.utils.Endian;\r\n\r\nimport starling.core.Starling;\r\nimport starling.errors.MissingContextError;\r\nimport starling.utils.StringUtil;\r\n\r\n/** The IndexData class manages a raw list of vertex indices, allowing direct upload\r\n *  to Stage3D index buffers. <em>You only have to work with this class if you're writing\r\n *  your own rendering code (e.g. if you create custom display objects).</em>\r\n *\r\n *  <p>To render objects with Stage3D, you have to organize vertices and indices in so-called\r\n *  vertex- and index-buffers. Vertex buffers store the coordinates of the vertices that make\r\n *  up an object; index buffers reference those vertices to determine which vertices spawn\r\n *  up triangles. Those buffers reside in graphics memory and can be accessed very\r\n *  efficiently by the GPU.</p>\r\n *\r\n *  <p>Before you can move data into the buffers, you have to set it up in conventional\r\n *  memory — that is, in a Vector or a ByteArray. Since it's quite cumbersome to manually\r\n *  create and manipulate those data structures, the IndexData and VertexData classes provide\r\n *  a simple way to do just that. The data is stored in a ByteArray (one index or vertex after\r\n *  the other) that can easily be uploaded to a buffer.</p>\r\n *\r\n *  <strong>Basic Quad Layout</strong>\r\n *\r\n *  <p>In many cases, the indices we are working with will reference just quads, i.e.\r\n *  triangles composing rectangles. That means that many IndexData instances will contain\r\n *  similar or identical data — a great opportunity for optimization!</p>\r\n *\r\n *  <p>If an IndexData instance follows a specific layout, it will be recognized\r\n *  automatically and many operations can be executed much faster. In Starling, that\r\n *  layout is called \"basic quad layout\". In order to recognize this specific sequence,\r\n *  the indices of each quad have to use the following order:</p>\r\n *\r\n *  <pre>n, n+1, n+2, n+1, n+3, n+2</pre>\r\n *\r\n *  <p>The subsequent quad has to use <code>n+4</code> as starting value, the next one\r\n *  <code>n+8</code>, etc. Here is an example with 3 quads / 6 triangles:</p>\r\n *\r\n *  <pre>0, 1, 2, 1, 3, 2,   4, 5, 6, 5, 7, 6,   8, 9, 10, 9, 11, 10</pre>\r\n *\r\n *  <p>If you are describing quad-like meshes, make sure to always use this layout.</p>\r\n *\r\n *  @see VertexData\r\n */\r\nclass IndexData\r\n{\r\n\tpublic var numIndices(get, set):Int;\r\n\tpublic var numTriangles(get, set):Int;\r\n\tpublic var numQuads(get, set):Int;\r\n\tpublic var indexSizeInBytes(get, never):Int;\r\n\tpublic var useQuadLayout(get, set):Bool;\r\n\tpublic var rawData(get, never):ByteArray;\r\n\r\n\t/** The number of bytes per index element. */\r\n\tprivate static var INDEX_SIZE:Int = 2;\r\n\t\r\n\tprivate var _rawData:ByteArray;\r\n\tprivate var _numIndices:Int = 0;\r\n\tprivate var _initialCapacity:Int = 0;\r\n\tprivate var _useQuadLayout:Bool = false;\r\n\t\r\n\t// helper objects\r\n\tprivate static var sVector:Array<UInt> = [];\r\n\tprivate static var sTrimData:ByteArray = new ByteArray();\r\n\tprivate static var sQuadData:ByteArray = new ByteArray();\r\n\t\r\n\t/** Creates an empty IndexData instance with the given capacity (in indices).\r\n\t *\r\n\t *  @param initialCapacity\r\n\t *\r\n\t *  The initial capacity affects just the way the internal ByteArray is allocated, not the\r\n\t *  <code>numIndices</code> value, which will always be zero when the constructor returns.\r\n\t *  The reason for this behavior is the peculiar way in which ByteArrays organize their\r\n\t *  memory:\r\n\t *\r\n\t *  <p>The first time you set the length of a ByteArray, it will adhere to that:\r\n\t *  a ByteArray with length 20 will take up 20 bytes (plus some overhead). When you change\r\n\t *  it to a smaller length, it will stick to the original value, e.g. with a length of 10\r\n\t *  it will still take up 20 bytes. However, now comes the weird part: change it to\r\n\t *  anything above the original length, and it will allocate 4096 bytes!</p>\r\n\t *\r\n\t *  <p>Thus, be sure to always make a generous educated guess, depending on the planned\r\n\t *  usage of your IndexData instances.</p>\r\n\t */\r\n\tpublic function new(initialCapacity:Int = 48)\r\n\t{\r\n\t\t_numIndices = 0;\r\n\t\t_initialCapacity = initialCapacity;\r\n\t\t_useQuadLayout = true;\r\n\t}\r\n\t\r\n\t/** Explicitly frees up the memory used by the ByteArray, thus removing all indices.\r\n\t *  Quad layout will be restored (until adding data violating that layout). */\r\n\tpublic function clear():Void\r\n\t{\r\n\t\tif (_rawData != null) \r\n\t\t\t_rawData.clear();\r\n\t\t\r\n\t\t_numIndices = 0;\r\n\t\t_useQuadLayout = true;\r\n\t}\r\n\t\r\n\t/** Creates a duplicate of the IndexData object. */\r\n\tpublic function clone():IndexData\r\n\t{\r\n\t\tvar clone:IndexData = new IndexData(_numIndices);\r\n\t\t\r\n\t\tif (!_useQuadLayout) \r\n\t\t{\r\n\t\t\tclone.switchToGenericData();\r\n\t\t\tclone._rawData.writeBytes(_rawData);\r\n\t\t}\r\n\t\t\r\n\t\tclone._numIndices = _numIndices;\r\n\t\treturn clone;\r\n\t}\r\n\t\r\n\t/** Copies the index data (or a range of it, defined by 'indexID' and 'numIndices')\r\n\t *  of this instance to another IndexData object, starting at a certain target index.\r\n\t *  If the target is not big enough, it will grow to fit all the new indices.\r\n\t *\r\n\t *  <p>By passing a non-zero <code>offset</code>, you can raise all copied indices\r\n\t *  by that value in the target object.</p>\r\n\t */\r\n\tpublic function copyTo(target:IndexData, targetIndexID:Int = 0, offset:Int = 0,\r\n\t\t\tindexID:Int = 0, numIndices:Int = -1):Void\r\n\t{\r\n\t\tif (numIndices < 0 || indexID + numIndices > _numIndices) \r\n\t\t\tnumIndices = _numIndices - indexID;\r\n\t\t\r\n\t\tvar sourceData:ByteArray;\r\n\t\tvar targetData:ByteArray;\r\n\t\tvar newNumIndices:Int = targetIndexID + numIndices;\r\n\t\t\r\n\t\tif (target._numIndices < newNumIndices) \r\n\t\t{\r\n\t\t\ttarget._numIndices = newNumIndices;\r\n\t\t\tensureQuadDataCapacity(newNumIndices);\r\n\t\t}\r\n\t\t\r\n\t\tif (_useQuadLayout) \r\n\t\t{\r\n\t\t\tif (target._useQuadLayout) \r\n\t\t\t{\r\n\t\t\t\tvar keepsQuadLayout:Bool = true;\r\n\t\t\t\tvar distance:Int = targetIndexID - indexID;\r\n\t\t\t\tvar distanceInQuads:Int = Math.floor(distance / 6);\r\n\t\t\t\tvar offsetInQuads:Int = Math.floor(offset / 4);\r\n\t\t\t\t\r\n\t\t\t\t// This code is executed very often. If it turns out that both IndexData\r\n\t\t\t\t// instances use a quad layout, we don't need to do anything here.\r\n\t\t\t\t//\r\n\t\t\t\t// When \"distance / 6 == offset / 4 && distance % 6 == 0 && offset % 4 == 0\",\r\n\t\t\t\t// the copy operation preserves the quad layout. In that case, we can exit\r\n\t\t\t\t// right away. The code below is a little more complex, though, to avoid the\r\n\t\t\t\t// (surprisingly costly) mod-operations.\r\n\t\t\t\t\r\n\t\t\t\tif (distanceInQuads == offsetInQuads && (offset & 3) == 0 &&\r\n\t\t\t\t\tdistanceInQuads * 6 == distance) \r\n\t\t\t\t{\r\n\t\t\t\t\tkeepsQuadLayout = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (numIndices > 2) \r\n\t\t\t\t{\r\n\t\t\t\t\tkeepsQuadLayout = false;\r\n\t\t\t\t}\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\t\t\t\t\ttrace(\"check &&= on line 186\");\r\n\t\t\t\t\tfor (i in 0...numIndices) {\r\n\t\t\t\t\t\t//keepsQuadLayout &&= getBasicQuadIndexAt(indexID + i) + offset == getBasicQuadIndexAt(targetIndexID + i);\r\n\t\t\t\t\t\tkeepsQuadLayout = keepsQuadLayout && (getBasicQuadIndexAt(indexID + i) + offset == getBasicQuadIndexAt(targetIndexID + i));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//x &&= y; \r\n\t\t\t\t\t\t//x = x && y; \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (keepsQuadLayout) return;\r\n\t\t\t\telse target.switchToGenericData();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsourceData = sQuadData;\r\n\t\t\ttargetData = target._rawData;\r\n\t\t\t\r\n\t\t\tif ((offset & 3) == 0)   // => offset % 4 == 0  \r\n\t\t\t{\r\n\t\t\t\tindexID += Math.floor(6 * offset / 4);\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tensureQuadDataCapacity(indexID + numIndices);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tif (target._useQuadLayout) \r\n\t\t\t\ttarget.switchToGenericData();\r\n\t\t\t\r\n\t\t\tsourceData = _rawData;\r\n\t\t\ttargetData = target._rawData;\r\n\t\t}\r\n\t\t\r\n\t\ttargetData.position = targetIndexID * INDEX_SIZE;\r\n\t\t\r\n\t\tif (offset == 0) \r\n\t\t\ttargetData.writeBytes(sourceData, indexID * INDEX_SIZE, numIndices * INDEX_SIZE)\r\n\t\telse \r\n\t\t{\r\n\t\t\tsourceData.position = indexID * INDEX_SIZE;\r\n\t\t\t\r\n\t\t\t// by reading junks of 32 instead of 16 bits, we can spare half the time\r\n\t\t\twhile (numIndices > 1)\r\n\t\t\t{\r\n\t\t\t\tvar indexAB:Int = sourceData.readUnsignedInt();\r\n\t\t\t\tvar indexA:Int = ((indexAB & 0xffff0000) >> 16) + offset;\r\n\t\t\t\tvar indexB:Int = ((indexAB & 0x0000ffff)) + offset;\r\n\t\t\t\ttargetData.writeUnsignedInt(indexA << 16 | indexB);\r\n\t\t\t\tnumIndices -= 2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (numIndices != 0) \r\n\t\t\t\ttargetData.writeShort(sourceData.readUnsignedShort() + offset);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Sets an index at the specified position. */\r\n\tpublic function setIndex(indexID:Int, index:Int):Void\r\n\t{\r\n\t\tif (_numIndices < indexID + 1) \r\n\t\t\tnumIndices = indexID + 1;\r\n\t\t\r\n\t\tif (_useQuadLayout) \r\n\t\t{\r\n\t\t\tif (getBasicQuadIndexAt(indexID) == index)\t\t\t\t return\r\n\t\t\telse switchToGenericData();\r\n\t\t}\r\n\t\t\r\n\t\t_rawData.position = indexID * INDEX_SIZE;\r\n\t\t_rawData.writeShort(index);\r\n\t}\r\n\t\r\n\t/** Reads the index from the specified position. */\r\n\tpublic function getIndex(indexID:Int):Int\r\n\t{\r\n\t\tif (_useQuadLayout) \r\n\t\t{\r\n\t\t\tif (indexID < _numIndices) \r\n\t\t\t\treturn getBasicQuadIndexAt(indexID)\r\n\t\t\telse \r\n\t\t\tthrow new EOFError();\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\t_rawData.position = indexID * INDEX_SIZE;\r\n\t\t\treturn _rawData.readUnsignedShort();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Adds an offset to all indices in the specified range. */\r\n\tpublic function offsetIndices(offset:Int, indexID:Int = 0, numIndices:Int = -1):Void\r\n\t{\r\n\t\tif (numIndices < 0 || indexID + numIndices > _numIndices) \r\n\t\t\tnumIndices = _numIndices - indexID;\r\n\t\t\r\n\t\tvar endIndex:Int = indexID + numIndices;\r\n\t\t\r\n\t\tfor (i in indexID...endIndex){setIndex(i, getIndex(i) + offset);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Appends three indices representing a triangle. Reference the vertices clockwise,\r\n\t *  as this defines the front side of the triangle. */\r\n\tpublic function addTriangle(a:Int, b:Int, c:Int):Void\r\n\t{\r\n\t\tif (_useQuadLayout) \r\n\t\t{\r\n\t\t\tif (a == getBasicQuadIndexAt(_numIndices)) \r\n\t\t\t{\r\n\t\t\t\tvar oddTriangleID:Bool = (_numIndices & 1) != 0;\r\n\t\t\t\tvar evenTriangleID:Bool = !oddTriangleID;\r\n\t\t\t\t\r\n\t\t\t\tif ((evenTriangleID && b == a + 1 && c == b + 1) ||\r\n\t\t\t\t\t(oddTriangleID && c == a + 1 && b == c + 1)) \r\n\t\t\t\t{\r\n\t\t\t\t\t_numIndices += 3;\r\n\t\t\t\t\tensureQuadDataCapacity(_numIndices);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tswitchToGenericData();\r\n\t\t}\r\n\t\t\r\n\t\t_rawData.position = _numIndices * INDEX_SIZE;\r\n\t\t_rawData.writeShort(a);\r\n\t\t_rawData.writeShort(b);\r\n\t\t_rawData.writeShort(c);\r\n\t\t_numIndices += 3;\r\n\t}\r\n\t\r\n\t/** Appends two triangles spawning up the quad with the given indices.\r\n\t *  The indices of the vertices are arranged like this:\r\n\t *\r\n\t *  <pre>\r\n\t *  a - b\r\n\t *  | / |\r\n\t *  c - d\r\n\t *  </pre>\r\n\t *\r\n\t *  <p>To make sure the indices will follow the basic quad layout, make sure each\r\n\t *  parameter increments the one before it (e.g. <code>0, 1, 2, 3</code>).</p>\r\n\t */\r\n\tpublic function addQuad(a:Int, b:Int, c:Int, d:Int):Void\r\n\t{\r\n\t\tif (_useQuadLayout) \r\n\t\t{\r\n\t\t\tif (a == getBasicQuadIndexAt(_numIndices) &&\r\n\t\t\t\tb == a + 1 && c == b + 1 && d == c + 1) \r\n\t\t\t{\r\n\t\t\t\t_numIndices += 6;\r\n\t\t\t\tensureQuadDataCapacity(_numIndices);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse switchToGenericData();\r\n\t\t}\r\n\t\t\r\n\t\t_rawData.position = _numIndices * INDEX_SIZE;\r\n\t\t_rawData.writeShort(a);\r\n\t\t_rawData.writeShort(b);\r\n\t\t_rawData.writeShort(c);\r\n\t\t_rawData.writeShort(b);\r\n\t\t_rawData.writeShort(d);\r\n\t\t_rawData.writeShort(c);\r\n\t\t_numIndices += 6;\r\n\t}\r\n\t\r\n\t/** Creates a vector containing all indices. If you pass an existing vector to the method,\r\n\t *  its contents will be overwritten. */\r\n\tpublic function toVector(out:Array<UInt> = null):Array<UInt>\r\n\t{\r\n\t\tif (out == null) {\r\n\t\t\tout = new Array<UInt>();\r\n\t\t\tfor (j in 0..._numIndices) out.push(0);\r\n\t\t}\r\n\t\telse out.splice(_numIndices, out.length - _numIndices);\r\n\t\t\r\n\t\tvar rawData:ByteArray = (_useQuadLayout) ? sQuadData:_rawData;\r\n\t\trawData.position = 0;\r\n\t\t\r\n\t\tfor (i in 0..._numIndices) {\r\n\t\t\tout[i] = rawData.readUnsignedShort();\r\n\t\t}\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Returns a string representation of the IndexData object,\r\n\t *  including a comma-separated list of all indices. */\r\n\tpublic function toString():String\r\n\t{\r\n\t\tvar string:String = StringUtil.format(\r\n\t\t\t\"[IndexData numIndices={0} indices=\\\"{1}\\\"]\",\r\n\t\t\t[_numIndices, toVector(sVector).join(\",\")]\r\n\t\t);\r\n\t\t\r\n\t\tsVector.splice(0, sVector.length);\r\n\t\treturn string;\r\n\t}\r\n\t\r\n\t// private helpers\r\n\t\r\n\tprivate function switchToGenericData():Void\r\n\t{\r\n\t\tif (_useQuadLayout) \r\n\t\t{\r\n\t\t\t_useQuadLayout = false;\r\n\t\t\t\r\n\t\t\tif (_rawData == null) \r\n\t\t\t{\r\n\t\t\t\t_rawData = new ByteArray();\r\n\t\t\t\t_rawData.endian = Endian.LITTLE_ENDIAN;\r\n\t\t\t\t_rawData.length = _initialCapacity * INDEX_SIZE;  // -> allocated memory  \r\n\t\t\t\t_rawData.length = _numIndices * INDEX_SIZE;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (_numIndices != 0) \r\n\t\t\t\t_rawData.writeBytes(sQuadData, 0, _numIndices * INDEX_SIZE);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Makes sure that the ByteArray containing the normalized, basic quad data contains at\r\n\t *  least <code>numIndices</code> indices. The array might grow, but it will never be\r\n\t *  made smaller. */\r\n\tprivate function ensureQuadDataCapacity(numIndices:Int):Void\r\n\t{\r\n\t\tif (sQuadData.length >= cast numIndices * INDEX_SIZE) return;\r\n\t\t\r\n\t\tvar i:Int;\r\n\t\tvar oldNumQuads:Int = Math.floor(sQuadData.length / 12);\r\n\t\tvar newNumQuads:Int = Math.ceil(numIndices / 6);\r\n\t\t\r\n\t\tsQuadData.endian = Endian.LITTLE_ENDIAN;\r\n\t\tsQuadData.position = sQuadData.length;\r\n\t\t\r\n\t\tfor (i in oldNumQuads...newNumQuads){\r\n\t\t\tsQuadData.writeShort(4 * i);\r\n\t\t\tsQuadData.writeShort(4 * i + 1);\r\n\t\t\tsQuadData.writeShort(4 * i + 2);\r\n\t\t\tsQuadData.writeShort(4 * i + 1);\r\n\t\t\tsQuadData.writeShort(4 * i + 3);\r\n\t\t\tsQuadData.writeShort(4 * i + 2);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Returns the index that's expected at this position if following basic quad layout. */\r\n\tprivate static function getBasicQuadIndexAt(indexID:Int):Int\r\n\t{\r\n\t\tvar quadID:Int = Math.floor(indexID / 6);\r\n\t\tvar posInQuad:Int = indexID - quadID * 6;  // => indexID % 6  \r\n\t\tvar offset:Int;\r\n\t\t\r\n\t\tif (posInQuad == 0)\t\t\t offset = 0\r\n\t\telse if (posInQuad == 1 || posInQuad == 3)\t\t\t offset = 1\r\n\t\telse if (posInQuad == 2 || posInQuad == 5)\t\t\t offset = 2\r\n\t\telse offset = 3;\r\n\t\t\r\n\t\treturn quadID * 4 + offset;\r\n\t}\r\n\t\r\n\t// IndexBuffer helpers\r\n\t\r\n\t/** Creates an index buffer object with the right size to fit the complete data.\r\n\t *  Optionally, the current data is uploaded right away. */\r\n\tpublic function createIndexBuffer(upload:Bool = false,\r\n\t\t\tbufferUsage:Context3DBufferUsage = null):IndexBuffer3D\r\n\t{\r\n\t\tif (bufferUsage == null) bufferUsage = Context3DBufferUsage.STATIC_DRAW;\r\n\t\tvar context:Context3D = Starling.Context;\r\n\t\tif (context == null)\t\t\t throw new MissingContextError();\r\n\t\tif (_numIndices == 0)\t\t\t return null;\r\n\t\t\r\n\t\tvar buffer:IndexBuffer3D = context.createIndexBuffer(_numIndices, bufferUsage);\r\n\t\t\r\n\t\tif (upload)\t\t\t uploadToIndexBuffer(buffer);\r\n\t\treturn buffer;\r\n\t}\r\n\t\r\n\t/** Uploads the complete data (or a section of it) to the given index buffer. */\r\n\tpublic function uploadToIndexBuffer(buffer:IndexBuffer3D, indexID:Int = 0, numIndices:Int = -1):Void\r\n\t{\r\n\t\tif (numIndices < 0 || indexID + numIndices > _numIndices) \r\n\t\t\tnumIndices = _numIndices - indexID;\r\n\t\t\r\n\t\tif (numIndices > 0) \r\n\t\t\tbuffer.uploadFromByteArray(rawData, 0, indexID, numIndices);\r\n\t}\r\n\t\r\n\t/** Optimizes the ByteArray so that it has exactly the required capacity, without\r\n\t *  wasting any memory. If your IndexData object grows larger than the initial capacity\r\n\t *  you passed to the constructor, call this method to avoid the 4k memory problem. */\r\n\tpublic function trim():Void\r\n\t{\r\n\t\tif (_useQuadLayout) return;\r\n\t\t\r\n\t\tsTrimData.length = _rawData.length;\r\n\t\tsTrimData.position = 0;\r\n\t\tsTrimData.writeBytes(_rawData);\r\n\t\t\r\n\t\t_rawData.clear();\r\n\t\t_rawData.length = sTrimData.length;\r\n\t\t_rawData.writeBytes(sTrimData);\r\n\t\t\r\n\t\tsTrimData.clear();\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** The total number of indices.\r\n\t *\r\n\t *  <p>If this instance contains only standardized, basic quad indices, resizing\r\n\t *  will automatically fill up with appropriate quad indices. Otherwise, it will fill\r\n\t *  up with zeroes.</p>\r\n\t *\r\n\t *  <p>If you set the number of indices to zero, quad layout will be restored.</p> */\r\n\tprivate function get_numIndices():Int {\r\n\t\treturn _numIndices;\r\n\t}\r\n\tprivate function set_numIndices(value:Int):Int\r\n\t{\r\n\t\tif (value != _numIndices) \r\n\t\t{\r\n\t\t\tif (_useQuadLayout)\t\t\t\t ensureQuadDataCapacity(value)\r\n\t\t\telse _rawData.length = value * INDEX_SIZE;\r\n\t\t\tif (value == 0)\t\t\t\t _useQuadLayout = true;\r\n\t\t\t\r\n\t\t\t_numIndices = value;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The number of triangles that can be spawned up with the contained indices.\r\n\t *  (In other words: the number of indices divided by three.) */\r\n\tprivate function get_numTriangles():Int {\r\n\t\treturn Math.floor(_numIndices / 3);\r\n\t}\r\n\tprivate function set_numTriangles(value:Int):Int {\r\n\t\tnumIndices = value * 3;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The number of quads that can be spawned up with the contained indices.\r\n\t *  (In other words: the number of triangles divided by two.) */\r\n\tprivate function get_numQuads():Int {\r\n\t\treturn Math.floor(_numIndices / 6);\r\n\t}\r\n\tprivate function set_numQuads(value:Int):Int {\r\n\t\tnumIndices = value * 6;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The number of bytes required for each index value. */\r\n\tprivate function get_indexSizeInBytes():Int {\r\n\t\treturn INDEX_SIZE;\r\n\t}\r\n\t\r\n\t/** Indicates if all indices are following the basic quad layout.\r\n\t *\r\n\t *  <p>This property is automatically updated if an index is set to a value that violates\r\n\t *  basic quad layout. Once the layout was violated, the instance will always stay that\r\n\t *  way, even if you fix that violating value later. Only calling <code>clear</code> or\r\n\t *  manually enabling the property will restore quad layout.</p>\r\n\t *\r\n\t *  <p>If you enable this property on an instance, all indices will immediately be\r\n\t *  replaced with indices following standard quad layout.</p>\r\n\t *\r\n\t *  <p>Please look at the class documentation for more information about that kind\r\n\t *  of layout, and why it is important.</p>\r\n\t *\r\n\t *  @default true\r\n\t */\r\n\tprivate function get_useQuadLayout():Bool {\r\n\t\treturn _useQuadLayout;\r\n\t}\r\n\tprivate function set_useQuadLayout(value:Bool):Bool\r\n\t{\r\n\t\tif (value != _useQuadLayout) \r\n\t\t{\r\n\t\t\tif (value) \r\n\t\t\t{\r\n\t\t\t\tensureQuadDataCapacity(_numIndices);\r\n\t\t\t\t_rawData.length = 0;\r\n\t\t\t\t_useQuadLayout = true;\r\n\t\t\t}\r\n\t\t\telse switchToGenericData();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The raw index data; not a copy! Beware: the referenced ByteArray may change any time.\r\n\t *  Never store a reference to it, and never modify its contents manually. */\r\n\tprivate function get_rawData():ByteArray\r\n\t{\r\n\t\tif (_useQuadLayout)\t\t\t return sQuadData\r\n\t\telse return _rawData;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.rendering;\r\n\r\nimport haxe.ds.ObjectMap;\r\nimport openfl.display3D.Context3DProfile;\r\nimport openfl.display3D.Context3DRenderMode;\r\nimport openfl.errors.Error;\r\nimport starling.rendering.Program;\r\nimport starling.rendering.RenderState;\r\n\r\nimport openfl.display.Stage3D;\r\nimport openfl.display3D.Context3D;\r\nimport openfl.display3D.Context3DCompareMode;\r\nimport openfl.display3D.Context3DStencilAction;\r\nimport openfl.display3D.Context3DTriangleFace;\r\nimport openfl.display3D.textures.TextureBase;\r\nimport openfl.errors.IllegalOperationError;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Matrix3D;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.geom.Vector3D;\r\n\r\nimport starling.display.BlendMode;\r\nimport starling.display.DisplayObject;\r\nimport starling.display.Mesh;\r\nimport starling.display.MeshBatch;\r\nimport starling.display.Quad;\r\nimport starling.events.Event;\r\nimport starling.textures.Texture;\r\nimport starling.utils.MathUtil;\r\nimport starling.utils.MatrixUtil;\r\nimport starling.utils.MeshSubset;\r\nimport starling.utils.Pool;\r\nimport starling.utils.RectangleUtil;\r\nimport starling.utils.RenderUtil;\r\nimport starling.utils.SystemUtil;\r\n\r\n/** A class that orchestrates rendering of all Starling display objects.\r\n *\r\n *  <p>A Starling instance contains exactly one 'Painter' instance that should be used for all\r\n *  rendering purposes. Each frame, it is passed to the render methods of all rendered display\r\n *  objects. To access it outside a render method, call <code>Starling.Painter</code>.</p>\r\n *\r\n *  <p>The painter is responsible for drawing all display objects to the screen. At its\r\n *  core, it is a wrapper for many Context3D methods, but that's not all: it also provides\r\n *  a convenient state mechanism, supports masking and acts as middleman between display\r\n *  objects and renderers.</p>\r\n *\r\n *  <strong>The State Stack</strong>\r\n *\r\n *  <p>The most important concept of the Painter class is the state stack. A RenderState\r\n *  stores a combination of settings that are currently used for rendering, e.g. the current\r\n *  projection- and modelview-matrices and context-related settings. It can be accessed\r\n *  and manipulated via the <code>state</code> property. Use the methods\r\n *  <code>pushState</code> and <code>popState</code> to store a specific state and restore\r\n *  it later. That makes it easy to write rendering code that doesn't have any side effects.</p>\r\n *\r\n *  <listing>\r\n *  painter.pushState(); // save a copy of the current state on the stack\r\n *  painter.state.renderTarget = renderTexture;\r\n *  painter.state.transformModelviewMatrix(object.transformationMatrix);\r\n *  painter.state.alpha = 0.5;\r\n *  painter.prepareToDraw(); // apply all state settings at the render context\r\n *  drawSomething(); // insert Stage3D rendering code here\r\n *  painter.popState(); // restores previous state</listing>\r\n *\r\n *  @see RenderState\r\n */\r\nclass Painter\r\n{\r\n\tpublic var drawCount(get, set):Int;\r\n\tpublic var stencilReferenceValue(get, set):Int;\r\n\tpublic var state(get, never):RenderState;\r\n\tpublic var stage3D(get, never):Stage3D;\r\n\tpublic var context(get, never):Context3D;\r\n\tpublic var frameID(get, set):Int;\r\n\tpublic var pixelSize(get, set):Float;\r\n\tpublic var shareContext(get, set):Bool;\r\n\tpublic var enableErrorChecking(get, set):Bool;\r\n\tpublic var backBufferWidth(get, never):Int;\r\n\tpublic var backBufferHeight(get, never):Int;\r\n\tpublic var backBufferScaleFactor(get, never):Float;\r\n\tpublic var contextValid(get, never):Bool;\r\n\tpublic var profile(get, never):Context3DProfile;\r\n\tpublic var sharedData(get, never):Map<String, Dynamic>;\r\n\r\n\t// members\r\n\t\r\n\tprivate var _stage3D:Stage3D;\r\n\tprivate var _context:Context3D;\r\n\tprivate var _shareContext:Bool = false;\r\n\tprivate var _programs:Map<String,Program>;\r\n\tprivate var _data:Map<String, Dynamic>;\r\n\tprivate var _drawCount:Int = 0;\r\n\tprivate var _frameID:Int = 0;\r\n\tprivate var _pixelSize:Float = 0;\r\n\tprivate var _enableErrorChecking:Bool = false;\r\n\tprivate var _stencilReferenceValues:ObjectMap<Dynamic, Int>;\r\n\tprivate var _clipRectStack:Array<Rectangle>;\r\n\tprivate var _batchProcessor:BatchProcessor;\r\n\tprivate var _batchCache:BatchProcessor;\r\n\t\r\n\tprivate var _actualRenderTarget:TextureBase;\r\n\tprivate var _actualCulling:Context3DTriangleFace;\r\n\tprivate var _actualBlendMode:String;\r\n\t\r\n\tprivate var _backBufferWidth:Float = 0;\r\n\tprivate var _backBufferHeight:Float = 0;\r\n\tprivate var _backBufferScaleFactor:Float = 0;\r\n\t\r\n\tprivate var _state:RenderState;\r\n\tprivate var _stateStack:Array<RenderState>;\r\n\tprivate var _stateStackPos:Int = 0;\r\n\t\r\n\t// helper objects\r\n\tprivate static var sMatrix:Matrix = new Matrix();\r\n\tprivate static var sPoint3D:Vector3D = new Vector3D();\r\n\tprivate static var sClipRect:Rectangle = new Rectangle();\r\n\tprivate static var sBufferRect:Rectangle = new Rectangle();\r\n\tprivate static var sScissorRect:Rectangle = new Rectangle();\r\n\tprivate static var sMeshSubset:MeshSubset = new MeshSubset();\r\n\t\r\n\t// construction\r\n\t\r\n\t/** Creates a new Painter object. Normally, it's not necessary to create any custom\r\n\t *  painters; instead, use the global painter found on the Starling instance. */\r\n\tpublic function new(stage3D:Stage3D)\r\n\t{\r\n\t\t_stage3D = stage3D;\r\n\t\t_stage3D.addEventListener(Event.CONTEXT3D_CREATE, onContextCreated, false, 10, true);\r\n\t\t_context = _stage3D.context3D;\r\n\t\t_shareContext = (_context != null) && _context.driverInfo != \"Disposed\";\r\n\t\t_backBufferWidth = (_context != null) ? this.backBufferWidth:0;\r\n\t\t_backBufferHeight = (_context != null) ? this.backBufferHeight:0;\r\n\t\t_backBufferScaleFactor = _pixelSize = 1.0;\r\n\t\t_stencilReferenceValues = new ObjectMap<Dynamic, Int>();\r\n\t\t_clipRectStack = [];\r\n\t\t_programs = new Map<String,Program>();\r\n\t\t_data = new Map<String, Dynamic>();\r\n\t\t\r\n\t\t_batchProcessor = new BatchProcessor();\r\n\t\t_batchProcessor.onBatchComplete = drawBatch;\r\n\t\t\r\n\t\t_batchCache = new BatchProcessor();\r\n\t\t_batchCache.onBatchComplete = drawBatch;\r\n\t\t\r\n\t\t_state = new RenderState();\r\n\t\t_state.onDrawRequired = finishMeshBatch;\r\n\t\t_stateStack = [];\r\n\t\t_stateStackPos = -1;\r\n\t}\r\n\t\r\n\t/** Disposes all quad batches, programs, and - if it is not being shared -\r\n\t *  the render context. */\r\n\tpublic function dispose():Void\r\n\t{\r\n\t\t_batchProcessor.dispose();\r\n\t\t_batchCache.dispose();\r\n\t\t\r\n\t\tif (!_shareContext) \r\n\t\t\t_context.dispose(#if flash false #end);\r\n\t\t\r\n\t\tfor (program in _programs)\r\n\t\t\tprogram.dispose();\r\n\t}\r\n\t\r\n\t// context handling\r\n\t\r\n\t/** Requests a context3D object from the stage3D object.\r\n\t *  This is called by Starling internally during the initialization process.\r\n\t *  You normally don't need to call this method yourself. (For a detailed description\r\n\t *  of the parameters, look at the documentation of the method with the same name in the\r\n\t *  \"RenderUtil\" class.)\r\n\t *\r\n\t *  @see starling.utils.RenderUtil\r\n\t */\r\n\tpublic function requestContext3D(renderMode:Context3DRenderMode, profile:Array<Context3DProfile>=null):Void\r\n\t{\r\n\t\tRenderUtil.requestContext3D(_stage3D, renderMode, profile);\r\n\t}\r\n\t\r\n\tprivate function onContextCreated(event:Dynamic):Void\r\n\t{\r\n\t\t_context = _stage3D.context3D;\r\n\t\t_context.enableErrorChecking = _enableErrorChecking;\r\n\t\t_actualBlendMode = null;\r\n\t\t_actualCulling = null;\r\n\t}\r\n\t\r\n\t/** Sets the viewport dimensions and other attributes of the rendering buffer.\r\n\t *  Starling will call this method internally, so most apps won't need to mess with this.\r\n\t *\r\n\t * @param viewPort\t\t\t\tthe position and size of the area that should be rendered\r\n\t *\t\t\t\t\t\t\t\tinto, in pixels.\r\n\t * @param contentScaleFactor\t  only relevant for Desktop (!) HiDPI screens. If you want\r\n\t *\t\t\t\t\t\t\t\tto support high resolutions, pass the 'contentScaleFactor'\r\n\t *\t\t\t\t\t\t\t\tof the Flash stage; otherwise, '1.0'.\r\n\t * @param antiAlias\t\t\t   from 0 (none) to 16 (very high quality).\r\n\t * @param enableDepthAndStencil   indicates whether the depth and stencil buffers should\r\n\t *\t\t\t\t\t\t\t\tbe enabled. Note that on AIR, you also have to enable\r\n\t *\t\t\t\t\t\t\t\tthis setting in the app-xml (application descriptor);\r\n\t *\t\t\t\t\t\t\t\totherwise, this setting will be silently ignored.\r\n\t */\r\n\tpublic function configureBackBuffer(viewPort:Rectangle, contentScaleFactor:Float, antiAlias:Int, enableDepthAndStencil:Bool):Void\r\n\t{\r\n\t\tif (SystemUtil.supportsDepthAndStencil && enableDepthAndStencil) enableDepthAndStencil = true;\r\n\t\telse enableDepthAndStencil = false;\r\n\t\t\r\n\t\t// Changing the stage3D position might move the back buffer to invalid bounds\r\n\t\t// temporarily. To avoid problems, we set it to the smallest possible size first.\r\n\t\t\r\n\t\t\r\n\t\tif (this.profile == Context3DProfile.BASELINE_CONSTRAINED) \r\n\t\t\t_context.configureBackBuffer(32, 32, antiAlias, enableDepthAndStencil);\r\n\t\t\r\n\t\t_stage3D.x = viewPort.x;\r\n\t\t_stage3D.y = viewPort.y;\r\n\t\t\r\n\t\t_context.configureBackBuffer(untyped viewPort.width, untyped viewPort.height, antiAlias, enableDepthAndStencil #if flash, contentScaleFactor != 1.0 #end);\r\n\t\t\r\n\t\t_backBufferWidth = viewPort.width;\r\n\t\t_backBufferHeight = viewPort.height;\r\n\t\t_backBufferScaleFactor = contentScaleFactor;\r\n\t}\r\n\t\r\n\t// program management\r\n\t\r\n\t/** Registers a program under a certain name.\r\n\t *  If the name was already used, the previous program is overwritten. */\r\n\tpublic function registerProgram(name:String, program:Program):Void\r\n\t{\r\n\t\tdeleteProgram(name);\r\n\t\t_programs.set(name, program);\r\n\t}\r\n\t\r\n\t/** Deletes the program of a certain name. */\r\n\tpublic function deleteProgram(name:String):Void\r\n\t{\r\n\t\tvar program:Program = getProgram(name);\r\n\t\tif (program != null) \r\n\t\t{\r\n\t\t\tprogram.dispose();\r\n\t\t\t_programs.remove(name);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Returns the program registered under a certain name, or null if no program with\r\n\t *  this name has been registered. */\r\n\tpublic function getProgram(name:String):Program\r\n\t{\r\n\t\tif (_programs.exists(name)) return _programs.get(name);\r\n\t\telse return null;\r\n\t}\r\n\t\r\n\t/** Indicates if a program is registered under a certain name. */\r\n\tpublic function hasProgram(name:String):Bool\r\n\t{\r\n\t\treturn _programs.exists(name);\r\n\t}\r\n\t\r\n\t// state stack\r\n\t\r\n\t/** Pushes the current render state to a stack from which it can be restored later.\r\n\t *\r\n\t *  <p>If you pass a BatchToken, it will be updated to point to the current location within\r\n\t *  the render cache. That way, you can later reference this location to render a subset of\r\n\t *  the cache.</p>\r\n\t */\r\n\tpublic function pushState(token:BatchToken = null):Void\r\n\t{\r\n\t\t_stateStackPos++;\r\n\t\tif (_stateStack.length < _stateStackPos + 1) _stateStack[_stateStackPos] = new RenderState();\r\n\t\tif (token != null) _batchProcessor.fillToken(token);\r\n\t\t\r\n\t\t_stateStack[_stateStackPos].copyFrom(_state);\r\n\t}\r\n\t\r\n\t/** Modifies the current state with a transformation matrix, alpha factor, and blend mode.\r\n\t *\r\n\t *  @param transformationMatrix Used to transform the current <code>modelviewMatrix</code>.\r\n\t *  @param alphaFactor\t\t  Multiplied with the current alpha value.\r\n\t *  @param blendMode\t\t\tReplaces the current blend mode; except for \"auto\", which\r\n\t *\t\t\t\t\t\t\t  means the current value remains unchanged.\r\n\t */\r\n\tpublic function setStateTo(transformationMatrix:Matrix, alphaFactor:Float = 1.0, blendMode:String = \"auto\"):Void\r\n\t{\r\n\t\tif (transformationMatrix != null)_state.transformModelviewMatrix(transformationMatrix);\r\n\t\tif (alphaFactor != 1.0)\t\t\t _state.alpha *= alphaFactor;\r\n\t\tif (blendMode != BlendMode.AUTO) _state.blendMode = blendMode;\r\n\t}\r\n\t\r\n\t/** Restores the render state that was last pushed to the stack. If this changes\r\n\t *  blend mode, clipping rectangle, render target or culling, the current batch\r\n\t *  will be drawn right away.\r\n\t *\r\n\t *  <p>If you pass a BatchToken, it will be updated to point to the current location within\r\n\t *  the render cache. That way, you can later reference this location to render a subset of\r\n\t *  the cache.</p>\r\n\t */\r\n\tpublic function popState(token:BatchToken = null):Void\r\n\t{\r\n\t\tif (_stateStackPos < 0) \r\n\t\t\tthrow new IllegalOperationError(\"Cannot pop empty state stack\");\r\n\t\t\r\n\t\t_state.copyFrom(_stateStack[_stateStackPos]);  // -> might cause 'finishMeshBatch'  \r\n\t\t_stateStackPos--;\r\n\t\t\r\n\t\tif (token != null) _batchProcessor.fillToken(token);\r\n\t}\r\n\t\r\n\t// masks\r\n\t\r\n\t/** Draws a display object into the stencil buffer, incrementing the buffer on each\r\n\t *  used pixel. The stencil reference value is incremented as well; thus, any subsequent\r\n\t *  stencil tests outside of this area will fail.\r\n\t *\r\n\t *  <p>If 'mask' is part of the display list, it will be drawn at its conventional stage\r\n\t *  coordinates. Otherwise, it will be drawn with the current modelview matrix.</p>\r\n\t *\r\n\t *  <p>As an optimization, this method might update the clipping rectangle of the render\r\n\t *  state instead of utilizing the stencil buffer. This is possible when the mask object\r\n\t *  is of type <code>starling.display.Quad</code> and is aligned parallel to the stage\r\n\t *  axes.</p>\r\n\t */\r\n\tpublic function drawMask(mask:DisplayObject):Void\r\n\t{\r\n\t\tif (_context == null) return;\r\n\t\t\r\n\t\tfinishMeshBatch();\r\n\t\t\r\n\t\tif (isRectangularMask(mask, sMatrix)) \r\n\t\t{\r\n\t\t\tmask.getBounds(mask, sClipRect);\r\n\t\t\tRectangleUtil.getBounds(sClipRect, sMatrix, sClipRect);\r\n\t\t\tpushClipRect(sClipRect);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\t_context.setStencilActions(\r\n\t\t\t\tContext3DTriangleFace.FRONT_AND_BACK,\r\n\t\t\t\tContext3DCompareMode.EQUAL, \r\n\t\t\t\tContext3DStencilAction.INCREMENT_SATURATE\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\trenderMask(mask);\r\n\t\t\tstencilReferenceValue++;\r\n\t\t\t\r\n\t\t\t_context.setStencilActions(\r\n\t\t\t\tContext3DTriangleFace.FRONT_AND_BACK,\r\n\t\t\t\tContext3DCompareMode.EQUAL,\r\n\t\t\t\tContext3DStencilAction.KEEP\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Draws a display object into the stencil buffer, decrementing the\r\n\t *  buffer on each used pixel. This effectively erases the object from the stencil buffer,\r\n\t *  restoring the previous state. The stencil reference value will be decremented.\r\n\t *\r\n\t *  <p>Note: if the mask object meets the requirements of using the clipping rectangle,\r\n\t *  it will be assumed that this erase operation undoes the clipping rectangle change\r\n\t *  caused by the corresponding <code>drawMask()</code> call.</p>\r\n\t */\r\n\tpublic function eraseMask(mask:DisplayObject):Void\r\n\t{\r\n\t\tif (_context == null)\t\t\t return;\r\n\t\t\r\n\t\tfinishMeshBatch();\r\n\t\t\r\n\t\tif (isRectangularMask(mask, sMatrix)) \r\n\t\t{\r\n\t\t\tpopClipRect();\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\t_context.setStencilActions(\r\n\t\t\t\tContext3DTriangleFace.FRONT_AND_BACK,\r\n\t\t\t\tContext3DCompareMode.EQUAL,\r\n\t\t\t\tContext3DStencilAction.DECREMENT_SATURATE\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\trenderMask(mask);\r\n\t\t\tstencilReferenceValue--;\r\n\t\t\t\r\n\t\t\t_context.setStencilActions(\r\n\t\t\t\tContext3DTriangleFace.FRONT_AND_BACK,\r\n\t\t\t\tContext3DCompareMode.EQUAL,\r\n\t\t\t\tContext3DStencilAction.KEEP\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function renderMask(mask:DisplayObject):Void\r\n\t{\r\n\t\tpushState();\r\n\t\t_state.alpha = 0.0;\r\n\t\t\r\n\t\tif (mask.stage != null) \r\n\t\t\tmask.getTransformationMatrix(null, _state.modelviewMatrix)\r\n\t\telse \r\n\t\t_state.transformModelviewMatrix(mask.transformationMatrix);\r\n\t\t\r\n\t\tmask.render(this);\r\n\t\tfinishMeshBatch();\r\n\t\t\r\n\t\tpopState();\r\n\t}\r\n\t\r\n\tprivate function pushClipRect(clipRect:Rectangle):Void\r\n\t{\r\n\t\tvar stack:Array<Rectangle> = _clipRectStack;\r\n\t\tvar stackLength:Int = stack.length;\r\n\t\tvar intersection:Rectangle = Pool.getRectangle();\r\n\t\t\r\n\t\tif (stackLength != 0) \r\n\t\t\tRectangleUtil.intersect(stack[stackLength - 1], clipRect, intersection)\r\n\t\telse \r\n\t\tintersection.copyFrom(clipRect);\r\n\t\t\r\n\t\tstack[stackLength] = intersection;\r\n\t\t_state.clipRect = intersection;\r\n\t}\r\n\t\r\n\tprivate function popClipRect():Void\r\n\t{\r\n\t\tvar stack:Array<Rectangle> = _clipRectStack;\r\n\t\tvar stackLength:Int = stack.length;\r\n\t\t\r\n\t\tif (stackLength == 0) \r\n\t\t\tthrow new Error(\"Trying to pop from empty clip rectangle stack\");\r\n\t\t\r\n\t\tstackLength--;\r\n\t\tPool.putRectangle(stack.pop());\r\n\t\t_state.clipRect = (stackLength != 0) ? stack[stackLength - 1]:null;\r\n\t}\r\n\t\r\n\t/** Figures out if the mask can be represented by a scissor rectangle; this is possible\r\n\t *  if it's just a simple quad that is parallel to the stage axes. The 'out' parameter\r\n\t *  will be filled with the transformation matrix required to move the mask into stage\r\n\t *  coordinates. */\r\n\tprivate function isRectangularMask(mask:DisplayObject, out:Matrix):Bool\r\n\t{\r\n\t\tvar quad:Quad = null;\r\n\t\ttry {\r\n\t\t\tquad = cast(mask, Quad);\r\n\t\t}\r\n\t\tcatch (e:Error) { };\r\n\t\t\r\n\t\tif (quad != null && !quad.is3D && quad.style.type == MeshStyle) \r\n\t\t{\r\n\t\t\tif (mask.stage != null) mask.getTransformationMatrix(null, out)\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tout.copyFrom(mask.transformationMatrix);\r\n\t\t\t\tout.concat(_state.modelviewMatrix);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn (MathUtil.isEquivalent(out.a, 0) && MathUtil.isEquivalent(out.d, 0)) ||\r\n\t\t\t(MathUtil.isEquivalent(out.b, 0) && MathUtil.isEquivalent(out.c, 0));\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// mesh rendering\r\n\t\r\n\t/** Adds a mesh to the current batch of unrendered meshes. If the current batch is not\r\n\t *  compatible with the mesh, all previous meshes are rendered at once and the batch\r\n\t *  is cleared.\r\n\t *\r\n\t *  @param mesh\tThe mesh to batch.\r\n\t *  @param subset  The range of vertices to be batched. If <code>null</code>, the complete\r\n\t *\t\t\t\t mesh will be used.\r\n\t */\r\n\tpublic function batchMesh(mesh:Mesh, subset:MeshSubset = null):Void\r\n\t{\r\n\t\t_batchProcessor.addMesh(mesh, _state, subset);\r\n\t}\r\n\t\r\n\t/** Finishes the current mesh batch and prepares the next one. */\r\n\tpublic function finishMeshBatch():Void\r\n\t{\r\n\t\t_batchProcessor.finishBatch();\r\n\t}\r\n\t\r\n\t/** Completes all unfinished batches, cleanup procedures. */\r\n\tpublic function finishFrame():Void\r\n\t{\r\n\t\tif (_frameID % 99 == 0)\t\t\t   // odd number -> alternating processors  \r\n\t\t_batchProcessor.trim();\r\n\t\t\r\n\t\t_batchProcessor.finishBatch();\r\n\t\tswapBatchProcessors();\r\n\t\t_batchProcessor.clear();\r\n\t}\r\n\t\r\n\tprivate function swapBatchProcessors():Void\r\n\t{\r\n\t\tvar tmp:BatchProcessor = _batchProcessor;\r\n\t\t_batchProcessor = _batchCache;\r\n\t\t_batchCache = tmp;\r\n\t}\r\n\t\r\n\t/** Resets the current state, state stack, batch processor, stencil reference value,\r\n\t *  clipping rectangle, and draw count. Furthermore, depth testing is disabled. */\r\n\tpublic function nextFrame():Void\r\n\t{\r\n\t\tstencilReferenceValue = 0;\r\n\t\t_clipRectStack.splice(0, _clipRectStack.length);\r\n\t\t_drawCount = 0;\r\n\t\t_stateStackPos = -1;\r\n\t\t_batchProcessor.clear();\r\n\t\t_context.setDepthTest(false, Context3DCompareMode.ALWAYS);\r\n\t\t_state.reset();\r\n\t}\r\n\t\r\n\t/** Draws all meshes from the render cache between <code>startToken</code> and\r\n\t *  (but not including) <code>endToken</code>. The render cache contains all meshes\r\n\t *  rendered in the previous frame. */\r\n\tpublic function drawFromCache(startToken:BatchToken, endToken:BatchToken):Void\r\n\t{\r\n\t\tvar meshBatch:MeshBatch;\r\n\t\tvar subset:MeshSubset = sMeshSubset;\r\n\t\t\r\n\t\tif (!startToken.equals(endToken)) \r\n\t\t{\r\n\t\t\t\r\n\t\t\tpushState();\r\n\t\t\t\r\n\t\t\tvar start:Int = startToken.batchID;\r\n\t\t\tvar end:Int = endToken.batchID + 1;\r\n\t\t\t\r\n\t\t\tfor (i in start...end) {\r\n\t\t\t\tmeshBatch = _batchCache.getBatchAt(i);\r\n\t\t\t\tsubset.setTo();  // resets subset  \r\n\t\t\t\t\r\n\t\t\t\tif (i == startToken.batchID) \r\n\t\t\t\t{\r\n\t\t\t\t\tsubset.vertexID = startToken.vertexID;\r\n\t\t\t\t\tsubset.indexID = startToken.indexID;\r\n\t\t\t\t\tsubset.numVertices = meshBatch.numVertices - subset.vertexID;\r\n\t\t\t\t\tsubset.numIndices = meshBatch.numIndices - subset.indexID;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (i == endToken.batchID) \r\n\t\t\t\t{\r\n\t\t\t\t\tsubset.numVertices = endToken.vertexID - subset.vertexID;\r\n\t\t\t\t\tsubset.numIndices = endToken.indexID - subset.indexID;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (subset.numVertices != 0) \r\n\t\t\t\t{\r\n\t\t\t\t\tsetStateTo(null, 1.0, meshBatch.blendMode);\r\n\t\t\t\t\t_batchProcessor.addMesh(meshBatch, _state, subset, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tpopState();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Removes all parts of the render cache past the given token. Beware that some display\r\n\t *  objects might still reference those parts of the cache! Only call it if you know\r\n\t *  exactly what you're doing. */\r\n\tpublic function rewindCacheTo(token:BatchToken):Void\r\n\t{\r\n\t\t_batchProcessor.rewindTo(token);\r\n\t}\r\n\t\r\n\tprivate function drawBatch(meshBatch:MeshBatch):Void\r\n\t{\r\n\t\tpushState();\r\n\t\t\r\n\t\tstate.blendMode = meshBatch.blendMode;\r\n\t\tstate.modelviewMatrix.identity();\r\n\t\tstate.alpha = 1.0;\r\n\t\t\r\n\t\tmeshBatch.render(this);\r\n\t\t\r\n\t\tpopState();\r\n\t}\r\n\t\r\n\t// helper methods\r\n\t\r\n\t/** Applies all relevant state settings to at the render context. This includes\r\n\t *  blend mode, render target and clipping rectangle. Always call this method before\r\n\t *  <code>context.drawTriangles()</code>.\r\n\t */\r\n\tpublic function prepareToDraw():Void\r\n\t{\r\n\t\tapplyBlendMode();\r\n\t\tapplyRenderTarget();\r\n\t\tapplyClipRect();\r\n\t\tapplyCulling();\r\n\t}\r\n\t\r\n\t/** Clears the render context with a certain color and alpha value. Since this also\r\n\t *  clears the stencil buffer, the stencil reference value is also reset to '0'. */\r\n\tpublic function clear(rgb:Int = 0, alpha:Float = 0.0):Void\r\n\t{\r\n\t\tapplyRenderTarget();\r\n\t\tstencilReferenceValue = 0;\r\n\t\tRenderUtil.clear(rgb, alpha);\r\n\t}\r\n\t\r\n\t/** Resets the render target to the back buffer and displays its contents. */\r\n\tpublic function present():Void\r\n\t{\r\n\t\t_state.renderTarget = null;\r\n\t\t_actualRenderTarget = null;\r\n\t\t_context.present();\r\n\t}\r\n\t\r\n\tprivate function applyBlendMode():Void\r\n\t{\r\n\t\tvar blendMode:String = _state.blendMode;\r\n\t\t\r\n\t\tif (blendMode != _actualBlendMode) \r\n\t\t{\r\n\t\t\tBlendMode.get(_state.blendMode).activate();\r\n\t\t\t_actualBlendMode = blendMode;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function applyCulling():Void\r\n\t{\r\n\t\tvar culling:Context3DTriangleFace = _state.culling;\r\n\t\t\r\n\t\tif (culling != _actualCulling) \r\n\t\t{\r\n\t\t\t_context.setCulling(culling);\r\n\t\t\t_actualCulling = culling;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function applyRenderTarget():Void\r\n\t{\r\n\t\tvar target:TextureBase = _state.renderTargetBase;\r\n\t\t\r\n\t\tif (target != _actualRenderTarget) \r\n\t\t{\r\n\t\t\tif (target != null) \r\n\t\t\t{\r\n\t\t\t\tvar antiAlias:Int = _state.renderTargetAntiAlias;\r\n\t\t\t\tvar depthAndStencil:Bool = _state.renderTargetSupportsDepthAndStencil;\r\n\t\t\t\t_context.setRenderToTexture(target, depthAndStencil, antiAlias);\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t_context.setRenderToBackBuffer();\r\n\t\t\t\r\n\t\t\t_context.setStencilReferenceValue(stencilReferenceValue);\r\n\t\t\t_actualRenderTarget = target;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function applyClipRect():Void\r\n\t{\r\n\t\tvar clipRect:Rectangle = _state.clipRect;\r\n\t\t\r\n\t\tif (clipRect != null) \r\n\t\t{\r\n\t\t\tvar width:Int;\r\n\t\t\tvar height:Int;\r\n\t\t\tvar projMatrix:Matrix3D = _state.projectionMatrix3D;\r\n\t\t\tvar renderTarget:Texture = _state.renderTarget;\r\n\t\t\t\r\n\t\t\tif (renderTarget != null) \r\n\t\t\t{\r\n\t\t\t\twidth = Math.floor(renderTarget.root.nativeWidth);\r\n\t\t\t\theight = Math.floor(renderTarget.root.nativeHeight);\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\twidth = Math.floor(_backBufferWidth);\r\n\t\t\t\theight = Math.floor(_backBufferHeight);\r\n\t\t\t}  // convert to pixel coordinates (matrix transformation ends up in range [-1, 1])  \r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tMatrixUtil.transformCoords3D(projMatrix, clipRect.x, clipRect.y, 0.0, sPoint3D);\r\n\t\t\tsPoint3D.project();  // eliminate w-coordinate  \r\n\t\t\tsClipRect.x = (sPoint3D.x * 0.5 + 0.5) * width;\r\n\t\t\tsClipRect.y = (0.5 - sPoint3D.y * 0.5) * height;\r\n\t\t\t\r\n\t\t\tMatrixUtil.transformCoords3D(projMatrix, clipRect.right, clipRect.bottom, 0.0, sPoint3D);\r\n\t\t\tsPoint3D.project();  // eliminate w-coordinate  \r\n\t\t\tsClipRect.right = (sPoint3D.x * 0.5 + 0.5) * width;\r\n\t\t\tsClipRect.bottom = (0.5 - sPoint3D.y * 0.5) * height;\r\n\t\t\t\r\n\t\t\tsBufferRect.setTo(0, 0, width, height);\r\n\t\t\tRectangleUtil.intersect(sClipRect, sBufferRect, sScissorRect);\r\n\t\t\t\r\n\t\t\t// an empty rectangle is not allowed, so we set it to the smallest possible size\r\n\t\t\tif (sScissorRect.width < 1 || sScissorRect.height < 1) \r\n\t\t\t\tsScissorRect.setTo(0, 0, 1, 1);\r\n\t\t\t\r\n\t\t\t_context.setScissorRectangle(sScissorRect);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\t_context.setScissorRectangle(null);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** Indicates the number of stage3D draw calls. */\r\n\tprivate function get_drawCount():Int {\r\n\t\treturn _drawCount;\r\n\t}\r\n\tprivate function set_drawCount(value:Int):Int {\r\n\t\t_drawCount = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The current stencil reference value of the active render target. This value\r\n\t *  is typically incremented when drawing a mask and decrementing when erasing it.\r\n\t *  The painter keeps track of one stencil reference value per render target.\r\n\t *  Only change this value if you know what you're doing!\r\n\t */\r\n\tprivate function get_stencilReferenceValue():Int\r\n\t{\r\n\t\tvar key:Dynamic = (_state.renderTarget != null) ? _state.renderTargetBase:this;\r\n\t\tif (_stencilReferenceValues.exists(key)) return _stencilReferenceValues.get(key);\r\n\t\telse return 0;\r\n\t}\r\n\t\r\n\tprivate function set_stencilReferenceValue(value:Int):Int\r\n\t{\r\n\t\tvar key:Dynamic = (_state.renderTarget != null) ? _state.renderTargetBase:this;\r\n\t\t_stencilReferenceValues.set(key, value);\r\n\t\t\r\n\t\tif (contextValid) \r\n\t\t\t_context.setStencilReferenceValue(value);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The current render state, containing some of the context settings, projection- and\r\n\t *  modelview-matrix, etc. Always returns the same instance, even after calls to \"pushState\"\r\n\t *  and \"popState\".\r\n\t *\r\n\t *  <p>When you change the current RenderState, and this change is not compatible with\r\n\t *  the current render batch, the batch will be concluded right away. Thus, watch out\r\n\t *  for changes of blend mode, clipping rectangle, render target or culling.</p>\r\n\t */\r\n\tprivate function get_state():RenderState {\r\n\t\treturn _state;\r\n\t}\r\n\t\r\n\t/** The Stage3D instance this painter renders into. */\r\n\tprivate function get_stage3D():Stage3D {\r\n\t\treturn _stage3D;\r\n\t}\r\n\t\r\n\t/** The Context3D instance this painter renders into. */\r\n\tprivate function get_context():Context3D {\r\n\t\treturn _context;\r\n\t}\r\n\t\r\n\t/** The number of frames that have been rendered with the current Starling instance. */\r\n\tprivate function get_frameID():Int {\r\n\t\treturn _frameID;\r\n\t}\r\n\tprivate function set_frameID(value:Int):Int{_frameID = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The size (in points) that represents one pixel in the back buffer. */\r\n\tprivate function get_pixelSize():Float {\r\n\t\treturn _pixelSize;\r\n\t}\r\n\tprivate function set_pixelSize(value:Float):Float{_pixelSize = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if another Starling instance (or another Stage3D framework altogether)\r\n\t *  uses the same render context. @default false */\r\n\tprivate function get_shareContext():Bool {\r\n\t\treturn _shareContext;\r\n\t}\r\n\tprivate function set_shareContext(value:Bool):Bool{_shareContext = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if Stage3D render methods will report errors. Activate only when needed,\r\n\t *  as this has a negative impact on performance. @default false */\r\n\tprivate function get_enableErrorChecking():Bool {\r\n\t\treturn _enableErrorChecking;\r\n\t}\r\n\tprivate function set_enableErrorChecking(value:Bool):Bool\r\n\t{\r\n\t\t_enableErrorChecking = value;\r\n\t\tif (_context != null)\t\t\t _context.enableErrorChecking = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Returns the current width of the back buffer. In most cases, this value is in pixels;\r\n\t *  however, if the app is running on an HiDPI display with an activated\r\n\t *  'supportHighResolutions' setting, you have to multiply with 'backBufferPixelsPerPoint'\r\n\t *  for the actual pixel count. Alternatively, use the Context3D-property with the\r\n\t *  same name: it will return the exact pixel values. */\r\n\tprivate function get_backBufferWidth():Int {\r\n\t\treturn untyped _backBufferWidth;\r\n\t}\r\n\t\r\n\t/** Returns the current height of the back buffer. In most cases, this value is in pixels;\r\n\t *  however, if the app is running on an HiDPI display with an activated\r\n\t *  'supportHighResolutions' setting, you have to multiply with 'backBufferPixelsPerPoint'\r\n\t *  for the actual pixel count. Alternatively, use the Context3D-property with the\r\n\t *  same name: it will return the exact pixel values. */\r\n\tprivate function get_backBufferHeight():Int {\r\n\t\treturn untyped _backBufferHeight;\r\n\t}\r\n\t\r\n\t/** The number of pixels per point returned by the 'backBufferWidth/Height' properties.\r\n\t *  Except for desktop HiDPI displays with an activated 'supportHighResolutions' setting,\r\n\t *  this will always return '1'. */\r\n\tprivate function get_backBufferScaleFactor():Float {\r\n\t\treturn _backBufferScaleFactor;\r\n\t}\r\n\t\r\n\t/** Indicates if the Context3D object is currently valid (i.e. it hasn't been lost or\r\n\t *  disposed). */\r\n\tprivate function get_contextValid():Bool\r\n\t{\r\n\t\tif (_context != null) \r\n\t\t{\r\n\t\t\tvar driverInfo:String = _context.driverInfo;\r\n\t\t\treturn driverInfo != null && driverInfo != \"\" && driverInfo != \"Disposed\";\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\t\r\n\t/** The Context3D profile of the current render context, or <code>null</code>\r\n\t *  if the context has not been created yet. */\r\n\tprivate function get_profile():Context3DProfile\r\n\t{\r\n\t\t#if !flash\r\n\t\t\ttrace(\"WARNING: _context.profile not supported for this target\");\r\n\t\t\treturn Context3DProfile.BASELINE_CONSTRAINED;\r\n\t\t#else\r\n\t\t\tif (_context != null) return cast _context.profile;\r\n\t\t\telse return null;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t/** A dictionary that can be used to save custom data related to the render context.\r\n\t *  If you need to share data that is bound to the render context (e.g. textures),\r\n\t *  use this dictionary instead of creating a static class variable.\r\n\t *  That way, the data will be available for all Starling instances that use this\r\n\t *  painter / stage3D / context. */\r\n\tprivate function get_sharedData():Map<String, Dynamic> {\r\n\t\treturn _data;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.rendering;\r\n\r\n\r\nimport openfl.display3D._shaders.Shader;\r\n\r\nimport openfl.display3D.Context3D;\r\nimport openfl.display3D.Context3DProgramType;\r\nimport openfl.display3D.Program3D;\r\nimport openfl.display3D._shaders.AGLSLShaderUtils;\r\nimport openfl.events.Event;\r\nimport openfl.utils.ByteArray;\r\n\r\nimport starling.core.Starling;\r\nimport starling.errors.MissingContextError;\r\n\r\n/** A Program represents a pair of a fragment- and vertex-shader.\r\n *\r\n *  <p>This class is a convenient replacement for Stage3Ds \"Program3D\" class. Its main\r\n *  advantage is that it survives a context loss; furthermore, it makes it simple to\r\n *  create a program from AGAL source without having to deal with the assembler.</p>\r\n *\r\n *  <p>It is recommended to store programs in Starling's \"Painter\" instance via the methods\r\n *  <code>registerProgram</code> and <code>getProgram</code>. That way, your programs may\r\n *  be shared among different display objects or even Starling instances.</p>\r\n *\r\n *  @see Painter\r\n */\r\nclass Program\r\n{\r\n\t#if flash\r\n\tprivate var _vertexShader:ByteArray;\r\n\tprivate var _fragmentShader:ByteArray;\r\n\t#else\r\n\tprivate var _vertexShader:Shader;\r\n\tprivate var _fragmentShader:Shader;\r\n\t#end\r\n\t\r\n\tprivate var _program3D:Program3D;\r\n\t\r\n\t/** Creates a program from the given AGAL (Adobe Graphics Assembly Language) bytecode. */\r\n\t#if flash\r\n\tpublic function new(vertexShader:ByteArray, fragmentShader:ByteArray)\r\n\t#else\r\n\tpublic function new(vertexShader:Shader, fragmentShader:Shader)\r\n\t#end\r\n\t{\r\n\t\t_vertexShader = vertexShader;\r\n\t\t_fragmentShader = fragmentShader;\r\n\t\t\r\n\t\t// Handle lost context (using conventional Flash event for weak listener support)\r\n\t\tStarling.Current.stage3D.addEventListener(Event.CONTEXT3D_CREATE,\r\n\t\t\t\tonContextCreated, false, 0, true);\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/** Disposes the internal Program3D instance. */\r\n\tpublic function dispose():Void\r\n\t{\r\n\t\tStarling.Current.stage3D.removeEventListener(Event.CONTEXT3D_CREATE, onContextCreated);\r\n\t\tdisposeProgram();\r\n\t}\r\n\t\r\n\t/** Creates a new Program instance from AGAL assembly language. */\r\n\tpublic static function fromSource(vertexShaderStr:String, fragmentShaderStr:String, agalVersion:Int = 1):Program\r\n\t{\r\n\t\t#if flash\r\n\t\tvar program = new Program(\r\n\t\t\tAGLSLShaderUtils.compile(cast Context3DProgramType.VERTEX, vertexShaderStr),\r\n\t\t\tAGLSLShaderUtils.compile(cast Context3DProgramType.FRAGMENT, fragmentShaderStr)\r\n\t\t);\r\n\t\t#else\r\n\t\tvar program = new Program(\r\n\t\t\tAGLSLShaderUtils.createShader(cast Context3DProgramType.VERTEX, vertexShaderStr),\r\n\t\t\tAGLSLShaderUtils.createShader(cast Context3DProgramType.FRAGMENT, fragmentShaderStr)\r\n\t\t);\r\n\t\t#end\r\n\t\treturn program;\r\n\t}\r\n\t\r\n\t/** Activates the program on the given context. If you don't pass a context, the current\r\n\t *  Starling context will be used. */\r\n\tpublic function activate(context:Context3D = null):Void\r\n\t{\r\n\t\tif (context == null) \r\n\t\t{\r\n\t\t\tcontext = Starling.Context;\r\n\t\t\tif (context == null) throw new MissingContextError();\r\n\t\t}\r\n\t\t\r\n\t\tif (_program3D == null) \r\n\t\t{\r\n\t\t\t_program3D = context.createProgram();\r\n\t\t\t_program3D.upload(_vertexShader, _fragmentShader);\r\n\t\t}\r\n\t\t\r\n\t\tcontext.setProgram(_program3D);\r\n\t}\r\n\t\r\n\tprivate function onContextCreated(event:Event):Void\r\n\t{\r\n\t\tdisposeProgram();\r\n\t}\r\n\t\r\n\tprivate function disposeProgram():Void\r\n\t{\r\n\t\tif (_program3D != null) \r\n\t\t{\r\n\t\t\t_program3D.dispose();\r\n\t\t\t_program3D = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.rendering;\r\n\r\n\r\nimport openfl.display3D.Context3DTriangleFace;\r\nimport openfl.display3D.textures.TextureBase;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Matrix3D;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.geom.Vector3D;\r\nimport haxe.Constraints.Function;\r\n\r\nimport starling.display.BlendMode;\r\nimport starling.textures.Texture;\r\nimport starling.utils.MatrixUtil;\r\nimport starling.utils.Pool;\r\nimport starling.utils.RectangleUtil;\r\n\r\n/** The RenderState stores a combination of settings that are currently used for rendering.\r\n *  This includes modelview and transformation matrices as well as context3D related settings.\r\n *\r\n *  <p>Starling's Painter instance stores a reference to the current RenderState.\r\n *  Via a stack mechanism, you can always save a specific state and restore it later.\r\n *  That makes it easy to write rendering code that doesn't have any side effects.</p>\r\n *\r\n *  <p>Beware that any context-related settings are not applied on the context\r\n *  right away, but only after calling <code>painter.prepareToDraw()</code>.\r\n *  However, the Painter recognizes changes to those settings and will finish the current\r\n *  batch right away if necessary.</p>\r\n *\r\n *  <strong>Matrix Magic</strong>\r\n *\r\n *  <p>On rendering, Starling traverses the display tree, constantly moving from one\r\n *  coordinate system to the next. Each display object stores its vertex coordinates\r\n *  in its local coordinate system; on rendering, they must be moved to a global,\r\n *  2D coordinate space (the so-called \"clip-space\"). To handle these calculations,\r\n *  the RenderState contains a set of matrices.</p>\r\n *\r\n *  <p>By multiplying vertex coordinates with the <code>modelviewMatrix</code>, you'll get the\r\n *  coordinates in \"screen-space\", or in other words: in stage coordinates. (Optionally,\r\n *  there's also a 3D version of this matrix. It comes into play when you're working with\r\n *  <code>Sprite3D</code> containers.)</p>\r\n *\r\n *  <p>By feeding the result of the previous transformation into the\r\n *  <code>projectionMatrix</code>, you'll end up with so-called \"clipping coordinates\",\r\n *  which are in the range <code>[-1, 1]</code> (just as needed by the graphics pipeline).\r\n *  If you've got vertices in the 3D space, this matrix will also execute a perspective\r\n *  projection.</p>\r\n *\r\n *  <p>Finally, there's the <code>mvpMatrix</code>, which is short for\r\n *  \"modelviewProjectionMatrix\". This is simply a combination of <code>modelview-</code> and\r\n *  <code>projectionMatrix</code>, combining the effects of both. Pass this matrix\r\n *  to the vertex shader and all your vertices will automatically end up at the right\r\n *  position.</p>\r\n *\r\n *  @see Painter\r\n *  @see starling.display.Sprite3D\r\n */\r\nclass RenderState\r\n{\r\n\tpublic var modelviewMatrix(get, set):Matrix;\r\n\tpublic var modelviewMatrix3D(get, set):Matrix3D;\r\n\tpublic var projectionMatrix3D(get, set):Matrix3D;\r\n\tpublic var mvpMatrix3D(get, never):Matrix3D;\r\n\tpublic var alpha(get, set):Float;\r\n\tpublic var blendMode(get, set):String;\r\n\tpublic var renderTarget(get, set):Texture;\r\n\tpublic var culling(get, set):Context3DTriangleFace;\r\n\tpublic var clipRect(get, set):Rectangle;\r\n\tpublic var renderTargetAntiAlias(get, never):Int;\r\n\tpublic var renderTargetSupportsDepthAndStencil(get, never):Bool;\r\n\tpublic var is3D(get, never):Bool;\r\n\t\r\n\t@:allow(starling.rendering)\r\n\tprivate var renderTargetBase(get, never):TextureBase;\r\n\t@:allow(starling.rendering)\r\n\tprivate var onDrawRequired(get, set):Void -> Void;\r\n\r\n\tprivate var _alpha:Float;\r\n\tprivate var _blendMode:String;\r\n\tprivate var _renderTarget:Texture;\r\n\tprivate var _renderTargetOptions:Int;\r\n\tprivate var _culling:Context3DTriangleFace;\r\n\tprivate var _clipRect:Rectangle;\r\n\tprivate var _onDrawRequired:Void -> Void;\r\n\t\r\n\tprivate var _modelviewMatrix:Matrix;\r\n\tprivate var _modelviewMatrix3D:Matrix3D;\r\n\tprivate var _projectionMatrix3D:Matrix3D;\r\n\tprivate var _mvpMatrix3D:Matrix3D;\r\n\t\r\n\t// helper objects\r\n\tprivate static var sMatrix3D:Matrix3D = new Matrix3D();\r\n\t\r\n\t/** Creates a new render state with the default settings. */\r\n\tpublic function new()\r\n\t{\r\n\t\treset();\r\n\t}\r\n\t\r\n\t/** Duplicates all properties of another instance on the current instance. */\r\n\tpublic function copyFrom(renderState:RenderState):Void\r\n\t{\r\n\t\tif (_onDrawRequired != null) \r\n\t\t{\r\n\t\t\tvar currentTarget:TextureBase = (_renderTarget != null) ? _renderTarget.base:null;\r\n\t\t\tvar nextTarget:TextureBase = (renderState._renderTarget != null) ? renderState._renderTarget.base:null;\r\n\t\t\tvar clipRectChanges:Bool = _clipRect != null || (renderState._clipRect != null) ? \r\n\t\t\t!RectangleUtil.compare(_clipRect, renderState._clipRect):false;\r\n\t\t\t\r\n\t\t\tif (_blendMode != renderState._blendMode || _culling != renderState._culling ||\r\n\t\t\t\tcurrentTarget != nextTarget || clipRectChanges) \r\n\t\t\t{\r\n\t\t\t\t_onDrawRequired();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t_alpha = renderState._alpha;\r\n\t\t_blendMode = renderState._blendMode;\r\n\t\t_renderTarget = renderState._renderTarget;\r\n\t\t_renderTargetOptions = renderState._renderTargetOptions;\r\n\t\t_culling = renderState._culling;\r\n\t\t_modelviewMatrix.copyFrom(renderState._modelviewMatrix);\r\n\t\t_projectionMatrix3D.copyFrom(renderState._projectionMatrix3D);\r\n\t\t\r\n\t\tif (_modelviewMatrix3D != null || renderState._modelviewMatrix3D != null) \r\n\t\t\tthis.modelviewMatrix3D = renderState._modelviewMatrix3D;\r\n\t\t\r\n\t\tif (_clipRect != null || renderState._clipRect != null) \r\n\t\t\tthis.clipRect = renderState._clipRect;\r\n\t}\r\n\t\r\n\t/** Resets the RenderState to the default settings.\r\n\t *  (Check each property documentation for its default value.) */\r\n\tpublic function reset():Void\r\n\t{\r\n\t\tthis.alpha = 1.0;\r\n\t\tthis.blendMode = BlendMode.NORMAL;\r\n\t\tthis.culling = Context3DTriangleFace.NONE;\r\n\t\tthis.modelviewMatrix3D = null;\r\n\t\tthis.renderTarget = null;\r\n\t\tthis.clipRect = null;\r\n\t\t\r\n\t\tif (_modelviewMatrix != null)\t\t\t _modelviewMatrix.identity()\r\n\t\telse _modelviewMatrix = new Matrix();\r\n\t\t\r\n\t\tif (_projectionMatrix3D != null)\t\t\t _projectionMatrix3D.identity()\r\n\t\telse _projectionMatrix3D = new Matrix3D();\r\n\t\t\r\n\t\tif (_mvpMatrix3D == null)\t\t\t _mvpMatrix3D = new Matrix3D();\r\n\t}\r\n\t\r\n\t// matrix methods / properties\r\n\t\r\n\t/** Prepends the given matrix to the 2D modelview matrix. */\r\n\tpublic function transformModelviewMatrix(matrix:Matrix):Void\r\n\t{\r\n\t\tMatrixUtil.prependMatrix(_modelviewMatrix, matrix);\r\n\t}\r\n\t\r\n\t/** Prepends the given matrix to the 3D modelview matrix.\r\n\t *  The current contents of the 2D modelview matrix is stored in the 3D modelview matrix\r\n\t *  before doing so; the 2D modelview matrix is then reset to the identity matrix.\r\n\t */\r\n\tpublic function transformModelviewMatrix3D(matrix:Matrix3D):Void\r\n\t{\r\n\t\tif (_modelviewMatrix3D == null) \r\n\t\t\t_modelviewMatrix3D = Pool.getMatrix3D();\r\n\t\t\r\n\t\t_modelviewMatrix3D.prepend(MatrixUtil.convertTo3D(_modelviewMatrix, sMatrix3D));\r\n\t\t_modelviewMatrix3D.prepend(matrix);\r\n\t\t_modelviewMatrix.identity();\r\n\t}\r\n\t\r\n\t/** Creates a perspective projection matrix suitable for 2D and 3D rendering.\r\n\t *\r\n\t *  <p>The first 4 parameters define which area of the stage you want to view (the camera\r\n\t *  will 'zoom' to exactly this region). The final 3 parameters determine the perspective\r\n\t *  in which you're looking at the stage.</p>\r\n\t *\r\n\t *  <p>The stage is always on the rectangle that is spawned up between x- and y-axis (with\r\n\t *  the given size). All objects that are exactly on that rectangle (z equals zero) will be\r\n\t *  rendered in their true size, without any distortion.</p>\r\n\t *\r\n\t *  <p>If you pass only the first 4 parameters, the camera will be set up above the center\r\n\t *  of the stage, with a field of view of 1.0 rad.</p>\r\n\t */\r\n\tpublic function setProjectionMatrix(x:Float, y:Float, width:Float, height:Float,\r\n\t\t\tstageWidth:Float = 0, stageHeight:Float = 0,\r\n\t\t\tcameraPos:Vector3D = null):Void\r\n\t{\r\n\t\tMatrixUtil.createPerspectiveProjectionMatrix(\r\n\t\t\t\tx, y, width, height, stageWidth, stageHeight, cameraPos, _projectionMatrix3D);\r\n\t}\r\n\t\r\n\t/** Changes the modelview matrices (2D and, if available, 3D) to identity matrices.\r\n\t *  An object transformed an identity matrix performs no transformation.\r\n\t */\r\n\tpublic function setModelviewMatricesToIdentity():Void\r\n\t{\r\n\t\t_modelviewMatrix.identity();\r\n\t\tif (_modelviewMatrix3D != null)\t\t\t _modelviewMatrix3D.identity();\r\n\t}\r\n\t\r\n\t/** Returns the current 2D modelview matrix.\r\n\t *  CAUTION: Use with care! Each call returns the same instance.\r\n\t *  @default identity matrix */\r\n\tprivate function get_modelviewMatrix():Matrix\r\n\t{\r\n\t\treturn _modelviewMatrix;\r\n\t}\r\n\t\r\n\tprivate function set_modelviewMatrix(value:Matrix):Matrix{_modelviewMatrix.copyFrom(value);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Returns the current 3D modelview matrix, if there have been 3D transformations.\r\n\t *  CAUTION: Use with care! Each call returns the same instance.\r\n\t *  @default null */\r\n\tprivate function get_modelviewMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn _modelviewMatrix3D;\r\n\t}\r\n\t\r\n\tprivate function set_modelviewMatrix3D(value:Matrix3D):Matrix3D\r\n\t{\r\n\t\tif (value != null) \r\n\t\t{\r\n\t\t\tif (_modelviewMatrix3D == null)\t\t\t\t _modelviewMatrix3D = Pool.getMatrix3D(false);\r\n\t\t\t_modelviewMatrix3D.copyFrom(value);\r\n\t\t}\r\n\t\telse if (_modelviewMatrix3D != null) \r\n\t\t{\r\n\t\t\tPool.putMatrix3D(_modelviewMatrix3D);\r\n\t\t\t_modelviewMatrix3D = null;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Returns the current projection matrix. You can use the method 'setProjectionMatrix3D'\r\n\t *  to set it up in an intuitive way.\r\n\t *  CAUTION: Use with care! Each call returns the same instance.\r\n\t *  @default identity matrix */\r\n\tprivate function get_projectionMatrix3D():Matrix3D\r\n\t{\r\n\t\treturn _projectionMatrix3D;\r\n\t}\r\n\t\r\n\tprivate function set_projectionMatrix3D(value:Matrix3D):Matrix3D{_projectionMatrix3D.copyFrom(value);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Calculates the product of modelview and projection matrix and stores it in a 3D matrix.\r\n\t *  CAUTION: Use with care! Each call returns the same instance. */\r\n\tprivate function get_mvpMatrix3D():Matrix3D\r\n\t{\r\n\t\t_mvpMatrix3D.copyFrom(_projectionMatrix3D);\r\n\t\tif (_modelviewMatrix3D != null)\t\t\t _mvpMatrix3D.prepend(_modelviewMatrix3D);\r\n\t\t_mvpMatrix3D.prepend(MatrixUtil.convertTo3D(_modelviewMatrix, sMatrix3D));\r\n\t\treturn _mvpMatrix3D;\r\n\t}\r\n\t\r\n\t// other methods\r\n\t\r\n\t/** Changes the the current render target.\r\n\t *\r\n\t *  @param target\t Either a texture or <code>null</code> to render into the back buffer.\r\n\t *  @param enableDepthAndStencil  Indicates if depth and stencil testing will be available.\r\n\t *\t\t\t\t\tThis parameter affects only texture targets.\r\n\t *  @param antiAlias  The anti-aliasing quality (<code>0</code> meaning: no anti-aliasing).\r\n\t *\t\t\t\t\tThis parameter affects only texture targets. Note that at the time\r\n\t *\t\t\t\t\tof this writing, AIR supports anti-aliasing only on Desktop.\r\n\t */\r\n\tpublic function setRenderTarget(target:Texture, enableDepthAndStencil:Bool = true,\r\n\t\t\tantiAlias:Int = 0):Void\r\n\t{\r\n\t\tvar currentTarget:TextureBase = (_renderTarget != null) ? _renderTarget.base:null;\r\n\t\tvar newTarget:TextureBase = (target != null) ? target.base:null;\r\n\t\tvar enableDepthAndStencilBoolInt:Int = 0;\r\n\t\tif (enableDepthAndStencil) enableDepthAndStencilBoolInt = 1;\r\n\t\tvar newOptions:Int = enableDepthAndStencilBoolInt | antiAlias << 4;\r\n\t\t\r\n\t\tif (currentTarget != newTarget || _renderTargetOptions != newOptions) \r\n\t\t{\r\n\t\t\tif (_onDrawRequired != null)\t\t\t\t _onDrawRequired();\r\n\t\t\t\r\n\t\t\t_renderTarget = target;\r\n\t\t\t_renderTargetOptions = newOptions;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// other properties\r\n\t\r\n\t/** The current, cumulated alpha value. Beware that, in a standard 'render' method,\r\n\t *  this already includes the current object! The value is the product of current object's\r\n\t *  alpha value and all its parents. @default 1.0\r\n\t */\r\n\tprivate function get_alpha():Float {\r\n\t\treturn _alpha;\r\n\t}\r\n\tprivate function set_alpha(value:Float):Float{_alpha = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The blend mode to be used on rendering. A value of \"auto\" is ignored, since it\r\n\t *  means that the mode should remain unchanged.\r\n\t *\r\n\t *  @default BlendMode.NORMAL\r\n\t *  @see starling.display.BlendMode\r\n\t */\r\n\tprivate function get_blendMode():String {\r\n\t\treturn _blendMode;\r\n\t}\r\n\tprivate function set_blendMode(value:String):String\r\n\t{\r\n\t\tif (value != BlendMode.AUTO && _blendMode != value) \r\n\t\t{\r\n\t\t\tif (_onDrawRequired != null)\t\t\t\t _onDrawRequired();\r\n\t\t\t_blendMode = value;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The texture that is currently being rendered into, or <code>null</code>\r\n\t *  to render into the back buffer. On assignment, calls <code>setRenderTarget</code>\r\n\t *  with its default parameters. */\r\n\tprivate function get_renderTarget():Texture {\r\n\t\treturn _renderTarget;\r\n\t}\r\n\tprivate function set_renderTarget(value:Texture):Texture {\r\n\t\tsetRenderTarget(value);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.rendering)\r\n\tprivate function get_renderTargetBase():TextureBase\r\n\t{\r\n\t\treturn (_renderTarget != null) ? _renderTarget.base:null;\r\n\t}\r\n\t\r\n\t/** Sets the triangle culling mode. Allows to exclude triangles from rendering based on\r\n\t *  their orientation relative to the view plane.\r\n\t *  @default Context3DTriangleFace.NONE\r\n\t */\r\n\tprivate function get_culling():Context3DTriangleFace {\r\n\t\treturn _culling;\r\n\t}\r\n\tprivate function set_culling(value:Context3DTriangleFace):Context3DTriangleFace\r\n\t{\r\n\t\tif (_culling != value) \r\n\t\t{\r\n\t\t\tif (_onDrawRequired != null)\t\t\t\t _onDrawRequired();\r\n\t\t\t_culling = value;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The clipping rectangle can be used to limit rendering in the current render target to\r\n\t *  a certain area. This method expects the rectangle in stage coordinates. To prevent\r\n\t *  any clipping, assign <code>null</code>.\r\n\t *\r\n\t *  @default null\r\n\t */\r\n\tprivate function get_clipRect():Rectangle {\r\n\t\treturn _clipRect;\r\n\t}\r\n\tprivate function set_clipRect(value:Rectangle):Rectangle\r\n\t{\r\n\t\tif (!RectangleUtil.compare(_clipRect, value)) \r\n\t\t{\r\n\t\t\tif (_onDrawRequired != null)\t\t\t\t _onDrawRequired();\r\n\t\t\tif (value != null) \r\n\t\t\t{\r\n\t\t\t\tif (_clipRect == null)\t\t\t\t\t _clipRect = Pool.getRectangle();\r\n\t\t\t\t_clipRect.copyFrom(value);\r\n\t\t\t}\r\n\t\t\telse if (_clipRect != null) \r\n\t\t\t{\r\n\t\t\t\tPool.putRectangle(_clipRect);\r\n\t\t\t\t_clipRect = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The anti-alias setting used when setting the current render target\r\n\t *  via <code>setRenderTarget</code>. */\r\n\tprivate function get_renderTargetAntiAlias():Int\r\n\t{\r\n\t\treturn _renderTargetOptions >> 4;\r\n\t}\r\n\t\r\n\t/** Indicates if the render target (set via <code>setRenderTarget</code>)\r\n\t *  has its depth and stencil buffers enabled. */\r\n\tprivate function get_renderTargetSupportsDepthAndStencil():Bool\r\n\t{\r\n\t\treturn (_renderTargetOptions & 0xf) != 0;\r\n\t}\r\n\t\r\n\t/** Indicates if there have been any 3D transformations.\r\n\t *  Returns <code>true</code> if the 3D modelview matrix contains a value. */\r\n\tprivate function get_is3D():Bool {\r\n\t\treturn _modelviewMatrix3D != null;\r\n\t}\r\n\t\r\n\t/** @private\r\n\t *\r\n\t *  This callback is executed whenever a state change requires a draw operation.\r\n\t *  This is the case if blend mode, render target, culling or clipping rectangle\r\n\t *  are changing. */\r\n\t@:allow(starling.rendering)\r\n\tprivate function get_onDrawRequired():Void -> Void {\r\n\t\treturn _onDrawRequired;\r\n\t}\r\n\t@:allow(starling.rendering)\r\n\tprivate function set_onDrawRequired(value:Void -> Void):Void -> Void {\r\n\t\t_onDrawRequired = value;\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//  Starling Framework\r\n//  Copyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.rendering;\r\n\r\nimport openfl.display3D.Context3DBufferUsage;\r\nimport openfl.display3D.Context3DVertexBufferFormat;\r\nimport openfl.errors.ArgumentError;\r\nimport starling.rendering.VertexDataAttribute;\r\nimport starling.rendering.VertexDataFormat;\r\n\r\nimport openfl.display3D.Context3D;\r\nimport openfl.display3D.VertexBuffer3D;\r\nimport openfl.errors.IllegalOperationError;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Matrix3D;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.geom.Vector3D;\r\nimport openfl.utils.ByteArray;\r\nimport openfl.utils.Endian;\r\n\r\nimport starling.core.Starling;\r\nimport starling.errors.MissingContextError;\r\nimport starling.utils.MathUtil;\r\nimport starling.utils.MatrixUtil;\r\nimport starling.utils.StringUtil;\r\n\r\n/** The VertexData class manages a raw list of vertex information, allowing direct upload\r\n *  to Stage3D vertex buffers. <em>You only have to work with this class if you're writing\r\n *  your own rendering code (e.g. if you create custom display objects).</em>\r\n *\r\n *  <p>To render objects with Stage3D, you have to organize vertices and indices in so-called\r\n *  vertex- and index-buffers. Vertex buffers store the coordinates of the vertices that make\r\n *  up an object; index buffers reference those vertices to determine which vertices spawn\r\n *  up triangles. Those buffers reside in graphics memory and can be accessed very\r\n *  efficiently by the GPU.</p>\r\n *\r\n *  <p>Before you can move data into the buffers, you have to set it up in conventional\r\n *  memory — that is, in a Vector or a ByteArray. Since it's quite cumbersome to manually\r\n *  create and manipulate those data structures, the IndexData and VertexData classes provide\r\n *  a simple way to do just that. The data is stored in a ByteArray (one index or vertex after\r\n *  the other) that can easily be uploaded to a buffer.</p>\r\n *\r\n *  <strong>Vertex Format</strong>\r\n *\r\n *  <p>The VertexData class requires a custom format string on initialization, or an instance\r\n *  of the VertexDataFormat class. Here is an example:</p>\r\n *\r\n *  <listing>\r\n *  vertexData = new VertexData(\"position:float2, color:bytes4\");\r\n *  vertexData.setPoint(0, \"position\", 320, 480);\r\n *  vertexData.setColor(0, \"color\", 0xff00ff);</listing>\r\n *\r\n *  <p>This instance is set up with two attributes: \"position\" and \"color\". The keywords\r\n *  after the colons depict the format and size of the data that each property uses; in this\r\n *  case, we store two floats for the position (for the x- and y-coordinates) and four\r\n *  bytes for the color. Please refer to the VertexDataFormat documentation for details.</p>\r\n *\r\n *  <p>The attribute names are then used to read and write data to the respective positions\r\n *  inside a vertex. Furthermore, they come in handy when copying data from one VertexData\r\n *  instance to another: attributes with equal name and data format may be transferred between\r\n *  different VertexData objects, even when they contain different sets of attributes or have\r\n *  a different layout.</p>\r\n *\r\n *  <strong>Colors</strong>\r\n *\r\n *  <p>Always use the format <code>bytes4</code> for color data. The color access methods\r\n *  expect that format, since it's the most efficient way to store color data. Furthermore,\r\n *  you should always include the string \"color\" (or \"Color\") in the name of color data;\r\n *  that way, it will be recognized as such and will always have its alpha value pre-filled\r\n *  with the value \"1.0\".</p>\r\n *\r\n *  <strong>Premultiplied Alpha</strong>\r\n *\r\n *  <p>Per default, color values are stored with premultiplied alpha values, which\r\n *  means that the <code>rgb</code> values were multiplied with the <code>alpha</code> values\r\n *  before saving them. You can change this behavior with the <code>premultipliedAlpha</code>\r\n *  property.</p>\r\n *\r\n *  <p>Beware: with premultiplied alpha, the alpha value always effects the resolution of\r\n *  the RGB channels. A small alpha value results in a lower accuracy of the other channels,\r\n *  and if the alpha value reaches zero, the color information is lost altogether.</p>\r\n *\r\n *  @see VertexDataFormat\r\n *  @see IndexData\r\n */\r\nclass VertexData\r\n{\r\n\tpublic var premultipliedAlpha(get, set):Bool;\r\n\tpublic var numVertices(get, set):Int;\r\n\tpublic var rawData(get, never):ByteArray;\r\n\tpublic var format(get, set):VertexDataFormat;\r\n\tpublic var formatString(get, never):String;\r\n\tpublic var vertexSizeInBytes(get, never):Int;\r\n\tpublic var vertexSizeIn32Bits(get, never):Int;\r\n\tpublic var sizeInBytes(get, never):Int;\r\n\tpublic var sizeIn32Bits(get, never):Int;\r\n\r\n\tprivate var _rawData:ByteArray;\r\n\tprivate var _numVertices:Int = 0;\r\n\tprivate var _format:VertexDataFormat;\r\n\tprivate var _attributes:Array<VertexDataAttribute>;\r\n\tprivate var _numAttributes:Int = 0;\r\n\tprivate var _premultipliedAlpha:Bool = false;\r\n\t\r\n\tprivate var _posOffset:Int = 0;  // in bytes  \r\n\tprivate var _colOffset:Int = 0;  // in bytes  \r\n\tprivate var _vertexSize:Int = 0;  // in bytes  \r\n\t\r\n\t// helper objects\r\n\tprivate static var sHelperPoint:Point = new Point();\r\n\tprivate static var sHelperPoint3D:Vector3D = new Vector3D();\r\n\tprivate static var sBytes:ByteArray = new ByteArray();\r\n\t\r\n\t/** Creates an empty VertexData object with the given format and initial capacity.\r\n\t *\r\n\t *  @param format\r\n\t *\r\n\t *  Either a VertexDataFormat instance or a String that describes the data format.\r\n\t *  Refer to the VertexDataFormat class for more information. If you don't pass a format,\r\n\t *  the default <code>MeshStyle.VERTEX_FORMAT</code> will be used.\r\n\t *\r\n\t *  @param initialCapacity\r\n\t *\r\n\t *  The initial capacity affects just the way the internal ByteArray is allocated, not the\r\n\t *  <code>numIndices</code> value, which will always be zero when the constructor returns.\r\n\t *  The reason for this behavior is the peculiar way in which ByteArrays organize their\r\n\t *  memory:\r\n\t *\r\n\t *  <p>The first time you set the length of a ByteArray, it will adhere to that:\r\n\t *  a ByteArray with length 20 will take up 20 bytes (plus some overhead). When you change\r\n\t *  it to a smaller length, it will stick to the original value, e.g. with a length of 10\r\n\t *  it will still take up 20 bytes. However, now comes the weird part: change it to\r\n\t *  anything above the original length, and it will allocate 4096 bytes!</p>\r\n\t *\r\n\t *  <p>Thus, be sure to always make a generous educated guess, depending on the planned\r\n\t *  usage of your VertexData instances.</p>\r\n\t */\r\n\tpublic function new(format:Dynamic = null, initialCapacity:Int = 32)\r\n\t{\r\n\t\tif (format == null)\t_format = MeshStyle.VERTEX_FORMAT\r\n\t\telse if (Std.is(format, VertexDataFormat)) _format = format\r\n\t\telse if (Std.is(format, String)) _format = VertexDataFormat.fromString(cast(format, String));\r\n\t\telse throw new ArgumentError(\"'format' must be String or VertexDataFormat\");\r\n\t\t\r\n\t\t_attributes = _format.attributes;\r\n\t\t_numAttributes = _attributes.length;\r\n\t\t_posOffset = (_format.hasAttribute(\"position\")) ? _format.getOffsetInBytes(\"position\"):0;\r\n\t\t_colOffset = (_format.hasAttribute(\"color\")) ? _format.getOffsetInBytes(\"color\"):0;\r\n\t\t\r\n\t\t_vertexSize = _format.vertexSizeInBytes;\r\n\t\t_numVertices = 0;\r\n\t\t_premultipliedAlpha = true;\r\n\t\t_rawData = new ByteArray();\r\n\t\t_rawData.endian = sBytes.endian = Endian.LITTLE_ENDIAN;\r\n\t\t_rawData.length = initialCapacity * _vertexSize;  // just for the initial allocation  \r\n\t\t_rawData.length = 0;\r\n\t}\r\n\t\r\n\t/** Explicitly frees up the memory used by the ByteArray. */\r\n\tpublic function clear():Void\r\n\t{\r\n\t\t_rawData.clear();\r\n\t\t_numVertices = 0;\r\n\t}\r\n\t\r\n\t/** Creates a duplicate of the vertex data object. */\r\n\tpublic function clone():VertexData\r\n\t{\r\n\t\tvar clone:VertexData = new VertexData(_format, _numVertices);\r\n\t\tclone._rawData.writeBytes(_rawData);\r\n\t\tclone._numVertices = _numVertices;\r\n\t\tclone._premultipliedAlpha = _premultipliedAlpha;\r\n\t\treturn clone;\r\n\t}\r\n\t\r\n\t/** Copies the vertex data (or a range of it, defined by 'vertexID' and 'numVertices')\r\n\t *  of this instance to another vertex data object, starting at a certain target index.\r\n\t *  If the target is not big enough, it will be resized to fit all the new vertices.\r\n\t *\r\n\t *  <p>If you pass a non-null matrix, the 2D position of each vertex will be transformed\r\n\t *  by that matrix before storing it in the target object. (The position being either an\r\n\t *  attribute with the name \"position\" or, if such an attribute is not found, the first\r\n\t *  attribute of each vertex. It must consist of two float values containing the x- and\r\n\t *  y-coordinates of the vertex.)</p>\r\n\t *\r\n\t *  <p>Source and target do not need to have the exact same format. Only properties that\r\n\t *  exist in the target will be copied; others will be ignored. If a property with the\r\n\t *  same name but a different format exists in the target, an exception will be raised.\r\n\t *  Beware, though, that the copy-operation becomes much more expensive when the formats\r\n\t *  differ.</p>\r\n\t */\r\n\t\r\n\tpublic function copyTo(target:VertexData, targetVertexID:Int = 0, matrix:Matrix = null, vertexID:Int = 0, numVertices:Int = -1):Void\r\n\t{\r\n\t\tif (numVertices < 0 || vertexID + numVertices > _numVertices) \r\n\t\t\tnumVertices = _numVertices - vertexID;\r\n\t\t\r\n\t\tif (_format == target._format) \r\n\t\t{\r\n\t\t\tif (target._numVertices < targetVertexID + numVertices) {\r\n\t\t\t\ttarget._numVertices = targetVertexID + numVertices;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// In this case, it's fastest to copy the complete range in one call\r\n\t\t\t// and then overwrite only the transformed positions.\t\r\n\t\t\tvar targetRawData:ByteArray = target._rawData;\r\n\t\t\ttargetRawData.position = targetVertexID * _vertexSize;\r\n\t\t\ttargetRawData.writeBytes(_rawData, vertexID * _vertexSize, numVertices * _vertexSize);\r\n\t\t\t\r\n\t\t\tif (matrix != null) \r\n\t\t\t{\r\n\t\t\t\tvar x:Float;\r\n\t\t\t\tvar y:Float;\r\n\t\t\t\tvar position:Int = targetVertexID * _vertexSize + _posOffset;\r\n\t\t\t\tvar endPosition:Int = position + (numVertices * _vertexSize);\r\n\t\t\t\t\r\n\t\t\t\twhile (position < endPosition)\r\n\t\t\t\t{\r\n\t\t\t\t\ttargetRawData.position = position;\r\n\t\t\t\t\tx = targetRawData.readFloat();\r\n\t\t\t\t\ty = targetRawData.readFloat();\r\n\t\t\t\t\t\r\n\t\t\t\t\ttargetRawData.position = position;\r\n\t\t\t\t\ttargetRawData.writeFloat(matrix.a * x + matrix.c * y + matrix.tx);\r\n\t\t\t\t\ttargetRawData.writeFloat(matrix.d * y + matrix.b * x + matrix.ty);\r\n\t\t\t\t\t\r\n\t\t\t\t\tposition += _vertexSize;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tif (target._numVertices < targetVertexID + numVertices) {\r\n\t\t\t\ttarget.numVertices = targetVertexID + numVertices;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// ensure correct alphas!\r\n\t\t\tfor (i in 0..._numAttributes){\r\n\t\t\t\tvar srcAttr:VertexDataAttribute = _attributes[i];\r\n\t\t\t\tvar tgtAttr:VertexDataAttribute = target.getAttribute(srcAttr.name);\r\n\t\t\t\t\r\n\t\t\t\tif (tgtAttr != null)   // only copy attributes that exist in the target, as well  \r\n\t\t\t\t{\r\n\t\t\t\t\tif (srcAttr.offset == _posOffset) {\r\n\t\t\t\t\t\tcopyAttributeTo_internal(target, targetVertexID, matrix, srcAttr, tgtAttr, vertexID, numVertices);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcopyAttributeTo_internal(target, targetVertexID, null, srcAttr, tgtAttr, vertexID, numVertices);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Copies a specific attribute of all contained vertices (or a range of them, defined by\r\n\t *  'vertexID' and 'numVertices') to another VertexData instance. Beware that both name\r\n\t *  and format of the attribute must be identical in source and target.\r\n\t *  If the target is not big enough, it will be resized to fit all the new vertices.\r\n\t *\r\n\t *  <p>If you pass a non-null matrix, the specified attribute will be transformed by\r\n\t *  that matrix before storing it in the target object. It must consist of two float\r\n\t *  values.</p>\r\n\t */\r\n\tpublic function copyAttributeTo(target:VertexData, targetVertexID:Int, attrName:String, matrix:Matrix = null, vertexID:Int = 0, numVertices:Int = -1):Void\r\n\t{\r\n\t\tvar sourceAttribute:VertexDataAttribute = getAttribute(attrName);\r\n\t\tvar targetAttribute:VertexDataAttribute = target.getAttribute(attrName);\r\n\t\t\r\n\t\tif (sourceAttribute == null) \r\n\t\t\tthrow new ArgumentError(\"Attribute '\" + attrName + \"' not found in source data\");\r\n\t\t\r\n\t\tif (targetAttribute == null) \r\n\t\t\tthrow new ArgumentError(\"Attribute '\" + attrName + \"' not found in target data\");\r\n\t\t\r\n\t\tcopyAttributeTo_internal(target, targetVertexID, matrix, sourceAttribute, targetAttribute, vertexID, numVertices);\r\n\t}\r\n\t\r\n\tprivate function copyAttributeTo_internal( target:VertexData, targetVertexID:Int, matrix:Matrix, sourceAttribute:VertexDataAttribute, targetAttribute:VertexDataAttribute, vertexID:Int, numVertices:Int):Void\r\n\t{\r\n\t\tif (sourceAttribute.format != targetAttribute.format) \r\n\t\t\tthrow new IllegalOperationError(\"Attribute formats differ between source and target\");\r\n\t\t\r\n\t\tif (numVertices < 0 || vertexID + numVertices > _numVertices) \r\n\t\t\tnumVertices = _numVertices - vertexID;\r\n\t\t\r\n\t\tif (target._numVertices < targetVertexID + numVertices) \r\n\t\t\ttarget._numVertices = targetVertexID + numVertices;\r\n\t\t\r\n\t\tvar i:Int;\r\n\t\tvar j:Int;\r\n\t\tvar x:Float;\r\n\t\tvar y:Float;\r\n\t\tvar sourceData:ByteArray = _rawData;\r\n\t\tvar targetData:ByteArray = target._rawData;\r\n\t\tvar sourceDelta:Int = _vertexSize - sourceAttribute.size;\r\n\t\tvar targetDelta:Int = target._vertexSize - targetAttribute.size;\r\n\t\tvar attributeSizeIn32Bits:Int = untyped sourceAttribute.size / 4;\r\n\t\t\r\n\t\tsourceData.position = vertexID * _vertexSize + sourceAttribute.offset;\r\n\t\ttargetData.position = targetVertexID * target._vertexSize + targetAttribute.offset;\r\n\t\t\r\n\t\tif (matrix != null) \r\n\t\t{\r\n\t\t\tfor (i in 0...numVertices){\r\n\t\t\t\tx = sourceData.readFloat();\r\n\t\t\t\ty = sourceData.readFloat();\r\n\t\t\t\t\r\n\t\t\t\ttargetData.writeFloat(matrix.a * x + matrix.c * y + matrix.tx);\r\n\t\t\t\ttargetData.writeFloat(matrix.d * y + matrix.b * x + matrix.ty);\r\n\t\t\t\t\r\n\t\t\t\tsourceData.position += sourceDelta;\r\n\t\t\t\ttargetData.position += targetDelta;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tfor (i in 0...numVertices){\r\n\t\t\t\tfor (j in 0...attributeSizeIn32Bits) {\r\n\t\t\t\t\ttargetData.writeUnsignedInt(sourceData.readUnsignedInt());\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tsourceData.position += sourceDelta;\r\n\t\t\t\ttargetData.position += targetDelta;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Optimizes the ByteArray so that it has exactly the required capacity, without\r\n\t *  wasting any memory. If your VertexData object grows larger than the initial capacity\r\n\t *  you passed to the constructor, call this method to avoid the 4k memory problem. */\r\n\tpublic function trim():Void\r\n\t{\r\n\t\tsBytes.length = _rawData.length;\r\n\t\tsBytes.position = 0;\r\n\t\tsBytes.writeBytes(_rawData);\r\n\t\t\r\n\t\t_rawData.clear();\r\n\t\t_rawData.length = sBytes.length;\r\n\t\t_rawData.writeBytes(sBytes);\r\n\t\t\r\n\t\tsBytes.clear();\r\n\t}\r\n\t\r\n\t/** Returns a string representation of the VertexData object,\r\n\t *  describing both its format and size. */\r\n\tpublic function toString():String\r\n\t{\r\n\t\treturn StringUtil.format(\r\n\t\t\t\"[VertexData format=\\\"{0}\\\" numVertices={1}]\",\r\n\t\t\t[_format.formatString, _numVertices]\r\n\t\t);\r\n\t}\r\n\t\r\n\t// read / write attributes\r\n\t\r\n\t/** Reads a float value from the specified vertex and attribute. */\r\n\tpublic function getFloat(vertexID:Int, attrName:String):Float\r\n\t{\r\n\t\t_rawData.position = vertexID * _vertexSize + getAttribute(attrName).offset;\r\n\t\treturn _rawData.readFloat();\r\n\t}\r\n\t\r\n\t/** Writes a float value to the specified vertex and attribute. */\r\n\tpublic function setFloat(vertexID:Int, attrName:String, value:Float):Void\r\n\t{\r\n\t\tif (_numVertices < vertexID + 1) \r\n\t\t\tnumVertices = vertexID + 1;\r\n\t\t\r\n\t\t_rawData.position = vertexID * _vertexSize + getAttribute(attrName).offset;\r\n\t\t_rawData.writeFloat(value);\r\n\t}\r\n\t\r\n\t/** Reads a Point from the specified vertex and attribute. */\r\n\tpublic function getPoint(vertexID:Int, attrName:String, out:Point = null):Point\r\n\t{\r\n\t\tif (out == null) out = new Point();\r\n\t\t\r\n\t\tvar offset:Int = attrName == (\"position\") ? _posOffset:getAttribute(attrName).offset;\r\n\t\t_rawData.position = vertexID * _vertexSize + offset;\r\n\t\tout.x = _rawData.readFloat();\r\n\t\tout.y = _rawData.readFloat();\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Writes the given coordinates to the specified vertex and attribute. */\r\n\tpublic function setPoint(vertexID:Int, attrName:String, x:Float, y:Float):Void\r\n\t{\r\n\t\tif (_numVertices < vertexID + 1) \r\n\t\t\tnumVertices = vertexID + 1;\r\n\t\t\r\n\t\tvar offset:Int = attrName == (\"position\") ? _posOffset:getAttribute(attrName).offset;\r\n\t\t_rawData.position = vertexID * _vertexSize + offset;\r\n\t\t_rawData.writeFloat(x);\r\n\t\t_rawData.writeFloat(y);\r\n\t}\r\n\t\r\n\t/** Reads a Vector3D from the specified vertex and attribute.\r\n\t *  The 'w' property of the Vector3D is ignored. */\r\n\tpublic function getPoint3D(vertexID:Int, attrName:String, out:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Vector3D();\r\n\t\t\r\n\t\t_rawData.position = vertexID * _vertexSize + getAttribute(attrName).offset;\r\n\t\tout.x = _rawData.readFloat();\r\n\t\tout.y = _rawData.readFloat();\r\n\t\tout.z = _rawData.readFloat();\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Writes the given coordinates to the specified vertex and attribute. */\r\n\tpublic function setPoint3D(vertexID:Int, attrName:String, x:Float, y:Float, z:Float):Void\r\n\t{\r\n\t\tif (_numVertices < vertexID + 1) \r\n\t\t\tnumVertices = vertexID + 1;\r\n\t\t\r\n\t\t_rawData.position = vertexID * _vertexSize + getAttribute(attrName).offset;\r\n\t\t_rawData.writeFloat(x);\r\n\t\t_rawData.writeFloat(y);\r\n\t\t_rawData.writeFloat(z);\r\n\t}\r\n\t\r\n\t/** Reads a Vector3D from the specified vertex and attribute, including the fourth\r\n\t *  coordinate ('w'). */\r\n\tpublic function getPoint4D(vertexID:Int, attrName:String, out:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Vector3D();\r\n\t\t\r\n\t\t_rawData.position = vertexID * _vertexSize + getAttribute(attrName).offset;\r\n\t\tout.x = _rawData.readFloat();\r\n\t\tout.y = _rawData.readFloat();\r\n\t\tout.z = _rawData.readFloat();\r\n\t\tout.w = _rawData.readFloat();\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Writes the given coordinates to the specified vertex and attribute. */\r\n\tpublic function setPoint4D(vertexID:Int, attrName:String,\r\n\t\t\tx:Float, y:Float, z:Float, w:Float = 1.0):Void\r\n\t{\r\n\t\tif (_numVertices < vertexID + 1) \r\n\t\t\tnumVertices = vertexID + 1;\r\n\t\t\r\n\t\t_rawData.position = vertexID * _vertexSize + getAttribute(attrName).offset;\r\n\t\t_rawData.writeFloat(x);\r\n\t\t_rawData.writeFloat(y);\r\n\t\t_rawData.writeFloat(z);\r\n\t\t_rawData.writeFloat(w);\r\n\t}\r\n\t\r\n\t/** Reads an RGB color from the specified vertex and attribute (no alpha). */\r\n\tpublic function getColor(vertexID:Int, attrName:String = \"color\"):Int\r\n\t{\r\n\t\tvar offset:Int = attrName == (\"color\") ? _colOffset:getAttribute(attrName).offset;\r\n\t\t_rawData.position = vertexID * _vertexSize + offset;\r\n\t\tvar rgba:Int = switchEndian(_rawData.readUnsignedInt());\r\n\t\tif (_premultipliedAlpha)\t\t\t rgba = unmultiplyAlpha(rgba);\r\n\t\treturn (rgba >> 8) & 0xffffff;\r\n\t}\r\n\t\r\n\t/** Writes the RGB color to the specified vertex and attribute (alpha is not changed). */\r\n\tpublic function setColor(vertexID:Int, attrName:String, color:Int):Void\r\n\t{\r\n\t\tif (_numVertices < vertexID + 1) \r\n\t\t\tnumVertices = vertexID + 1;\r\n\t\t\r\n\t\tvar alpha:Float = getAlpha(vertexID, attrName);\r\n\t\tcolorize(attrName, color, alpha, vertexID, 1);\r\n\t}\r\n\t\r\n\t/** Reads the alpha value from the specified vertex and attribute. */\r\n\tpublic function getAlpha(vertexID:Int, attrName:String = \"color\"):Float\r\n\t{\r\n\t\tvar offset:Int = attrName == (\"color\") ? _colOffset:getAttribute(attrName).offset;\r\n\t\t_rawData.position = vertexID * _vertexSize + offset;\r\n\t\tvar rgba:Int = switchEndian(_rawData.readUnsignedInt());\r\n\t\treturn (rgba & 0xff) / 255.0;\r\n\t}\r\n\t\r\n\t/** Writes the given alpha value to the specified vertex and attribute (range 0-1). */\r\n\tpublic function setAlpha(vertexID:Int, attrName:String, alpha:Float):Void\r\n\t{\r\n\t\tif (_numVertices < vertexID + 1) \r\n\t\t\tnumVertices = vertexID + 1;\r\n\t\t\r\n\t\tvar color:Int = getColor(vertexID, attrName);\r\n\t\tcolorize(attrName, color, alpha, vertexID, 1);\r\n\t}\r\n\t\r\n\t// bounds helpers\r\n\t\r\n\t/** Calculates the bounds of the 2D vertex positions identified by the given name.\r\n\t *  The positions may optionally be transformed by a matrix before calculating the bounds.\r\n\t *  If you pass an 'out' Rectangle, the result will be stored in this rectangle\r\n\t *  instead of creating a new object. To use all vertices for the calculation, set\r\n\t *  'numVertices' to '-1'. */\r\n\tpublic function getBounds(attrName:String = \"position\", matrix:Matrix = null,\r\n\t\t\tvertexID:Int = 0, numVertices:Int = -1, out:Rectangle = null):Rectangle\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Rectangle();\r\n\t\tif (numVertices < 0 || vertexID + numVertices > _numVertices) \r\n\t\t\tnumVertices = _numVertices - vertexID;\r\n\t\t\r\n\t\tif (numVertices == 0) \r\n\t\t{\r\n\t\t\tif (matrix == null) \r\n\t\t\t\tout.setEmpty()\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tMatrixUtil.transformCoords(matrix, 0, 0, sHelperPoint);\r\n\t\t\t\tout.setTo(sHelperPoint.x, sHelperPoint.y, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar minX:Float = Math.POSITIVE_INFINITY;\r\n\t\t\tvar maxX:Float = Math.NEGATIVE_INFINITY;\r\n\t\t\tvar minY:Float = Math.POSITIVE_INFINITY;\r\n\t\t\tvar maxY:Float = Math.NEGATIVE_INFINITY;\r\n\t\t\tvar offset:Int = attrName == (\"position\") ? _posOffset:getAttribute(attrName).offset;\r\n\t\t\tvar position:Int = vertexID * _vertexSize + offset;\r\n\t\t\tvar x:Float;\r\n\t\t\tvar y:Float;\r\n\t\t\tvar i:Int;\r\n\t\t\t\r\n\t\t\tif (matrix == null) \r\n\t\t\t{\r\n\t\t\t\tfor (i in 0...numVertices){\r\n\t\t\t\t\t_rawData.position = position;\r\n\t\t\t\t\tx = _rawData.readFloat();\r\n\t\t\t\t\ty = _rawData.readFloat();\r\n\t\t\t\t\tposition += _vertexSize;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (minX > x)\t\t\t\t\t\t minX = x;\r\n\t\t\t\t\tif (maxX < x)\t\t\t\t\t\t maxX = x;\r\n\t\t\t\t\tif (minY > y)\t\t\t\t\t\t minY = y;\r\n\t\t\t\t\tif (maxY < y)\t\t\t\t\t\t maxY = y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tfor (i in 0...numVertices){\r\n\t\t\t\t\t_rawData.position = position;\r\n\t\t\t\t\tx = _rawData.readFloat();\r\n\t\t\t\t\ty = _rawData.readFloat();\r\n\t\t\t\t\tposition += _vertexSize;\r\n\t\t\t\t\t\r\n\t\t\t\t\tMatrixUtil.transformCoords(matrix, x, y, sHelperPoint);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (minX > sHelperPoint.x)\t\t\t\t\t\t minX = sHelperPoint.x;\r\n\t\t\t\t\tif (maxX < sHelperPoint.x)\t\t\t\t\t\t maxX = sHelperPoint.x;\r\n\t\t\t\t\tif (minY > sHelperPoint.y)\t\t\t\t\t\t minY = sHelperPoint.y;\r\n\t\t\t\t\tif (maxY < sHelperPoint.y)\t\t\t\t\t\t maxY = sHelperPoint.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tout.setTo(minX, minY, maxX - minX, maxY - minY);\r\n\t\t}\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Calculates the bounds of the 2D vertex positions identified by the given name,\r\n\t *  projected into the XY-plane of a certain 3D space as they appear from the given\r\n\t *  camera position. Note that 'camPos' is expected in the target coordinate system\r\n\t *  (the same that the XY-plane lies in).\r\n\t *\r\n\t *  <p>If you pass an 'out' Rectangle, the result will be stored in this rectangle\r\n\t *  instead of creating a new object. To use all vertices for the calculation, set\r\n\t *  'numVertices' to '-1'.</p> */\r\n\tpublic function getBoundsProjected(attrName:String, matrix:Matrix3D,\r\n\t\t\tcamPos:Vector3D, vertexID:Int = 0, numVertices:Int = -1,\r\n\t\t\tout:Rectangle = null):Rectangle\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Rectangle();\r\n\t\tif (camPos == null)\t\t\t throw new ArgumentError(\"camPos must not be null\");\r\n\t\tif (numVertices < 0 || vertexID + numVertices > _numVertices) \r\n\t\t\tnumVertices = _numVertices - vertexID;\r\n\t\t\r\n\t\tif (numVertices == 0) \r\n\t\t{\r\n\t\t\tif (matrix != null) \r\n\t\t\t\tMatrixUtil.transformCoords3D(matrix, 0, 0, 0, sHelperPoint3D)\r\n\t\t\telse \r\n\t\t\tsHelperPoint3D.setTo(0, 0, 0);\r\n\t\t\t\r\n\t\t\tMathUtil.intersectLineWithXYPlane(camPos, sHelperPoint3D, sHelperPoint);\r\n\t\t\tout.setTo(sHelperPoint.x, sHelperPoint.y, 0, 0);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar minX:Float = Math.POSITIVE_INFINITY;\r\n\t\t\tvar maxX:Float = Math.NEGATIVE_INFINITY;\r\n\t\t\tvar minY:Float = Math.POSITIVE_INFINITY;\r\n\t\t\tvar maxY:Float = Math.NEGATIVE_INFINITY;\r\n\t\t\tvar offset:Int = attrName == (\"position\") ? _posOffset:getAttribute(attrName).offset;\r\n\t\t\tvar position:Int = vertexID * _vertexSize + offset;\r\n\t\t\tvar x:Float;\r\n\t\t\tvar y:Float;\r\n\t\t\tvar i:Int;\r\n\t\t\t\r\n\t\t\tfor (i in 0...numVertices){\r\n\t\t\t\t_rawData.position = position;\r\n\t\t\t\tx = _rawData.readFloat();\r\n\t\t\t\ty = _rawData.readFloat();\r\n\t\t\t\tposition += _vertexSize;\r\n\t\t\t\t\r\n\t\t\t\tif (matrix != null) \r\n\t\t\t\t\tMatrixUtil.transformCoords3D(matrix, x, y, 0, sHelperPoint3D)\r\n\t\t\t\telse \r\n\t\t\t\tsHelperPoint3D.setTo(x, y, 0);\r\n\t\t\t\t\r\n\t\t\t\tMathUtil.intersectLineWithXYPlane(camPos, sHelperPoint3D, sHelperPoint);\r\n\t\t\t\t\r\n\t\t\t\tif (minX > sHelperPoint.x)\t\t\t\t\t minX = sHelperPoint.x;\r\n\t\t\t\tif (maxX < sHelperPoint.x)\t\t\t\t\t maxX = sHelperPoint.x;\r\n\t\t\t\tif (minY > sHelperPoint.y)\t\t\t\t\t minY = sHelperPoint.y;\r\n\t\t\t\tif (maxY < sHelperPoint.y)\t\t\t\t\t maxY = sHelperPoint.y;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tout.setTo(minX, minY, maxX - minX, maxY - minY);\r\n\t\t}\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Indicates if color attributes should be stored premultiplied with the alpha value.\r\n\t *  Changing this value does <strong>not</strong> modify any existing color data.\r\n\t *  If you want that, use the <code>setPremultipliedAlpha</code> method instead.\r\n\t *  @default true */\r\n\tprivate function get_premultipliedAlpha():Bool\r\n\t{\r\n\t\treturn _premultipliedAlpha;\r\n\t}\r\n\t\r\n\tprivate function set_premultipliedAlpha(value:Bool):Bool\r\n\t{\r\n\t\tsetPremultipliedAlpha(value, false);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Changes the way alpha and color values are stored. Optionally updates all existing\r\n\t *  vertices. */\r\n\tpublic function setPremultipliedAlpha(value:Bool, updateData:Bool):Void\r\n\t{\r\n\t\tif (updateData && value != _premultipliedAlpha) \r\n\t\t{\r\n\t\t\tfor (i in 0..._numAttributes){\r\n\t\t\t\tvar attribute:VertexDataAttribute = _attributes[i];\r\n\t\t\t\tif (attribute.isColor) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar offset:Int = attribute.offset;\r\n\t\t\t\t\tvar oldColor:Int;\r\n\t\t\t\t\tvar newColor:Int;\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (j in 0..._numVertices){\r\n\t\t\t\t\t\t_rawData.position = offset;\r\n\t\t\t\t\t\toldColor = switchEndian(_rawData.readUnsignedInt());\r\n\t\t\t\t\t\tnewColor = (value) ? premultiplyAlpha(oldColor):unmultiplyAlpha(oldColor);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_rawData.position = offset;\r\n\t\t\t\t\t\t_rawData.writeUnsignedInt(switchEndian(newColor));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\toffset += _vertexSize;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t_premultipliedAlpha = value;\r\n\t}\r\n\t\r\n\t/** Indicates if any vertices have a non-white color or are not fully opaque. */\r\n\tpublic function isTinted(attrName:String = \"color\"):Bool\r\n\t{\r\n\t\tvar offset:Int = attrName == (\"color\") ? _colOffset:getAttribute(attrName).offset;\r\n\t\t\r\n\t\tfor (i in 0..._numVertices){\r\n\t\t\t_rawData.position = offset;\r\n\t\t\t\r\n\t\t\tif (_rawData.readUnsignedInt() != cast 0xffffffff) \r\n\t\t\t\treturn true;\r\n\t\t\t\r\n\t\t\toffset += _vertexSize;\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// modify multiple attributes\r\n\t\r\n\t/** Transforms the 2D positions of subsequent vertices by multiplication with a\r\n\t *  transformation matrix. */\r\n\tpublic function transformPoints(attrName:String, matrix:Matrix,\r\n\t\t\tvertexID:Int = 0, numVertices:Int = -1):Void\r\n\t{\r\n\t\tif (numVertices < 0 || vertexID + numVertices > _numVertices) \r\n\t\t\tnumVertices = _numVertices - vertexID;\r\n\t\t\r\n\t\tvar x:Float;\r\n\t\tvar y:Float;\r\n\t\tvar offset:Int = attrName == (\"position\") ? _posOffset:getAttribute(attrName).offset;\r\n\t\tvar position:Int = vertexID * _vertexSize + offset;\r\n\t\tvar endPosition:Int = position + (numVertices * _vertexSize);\r\n\t\t\r\n\t\twhile (position < endPosition)\r\n\t\t{\r\n\t\t\t_rawData.position = position;\r\n\t\t\tx = _rawData.readFloat();\r\n\t\t\ty = _rawData.readFloat();\r\n\t\t\t\r\n\t\t\t_rawData.position = position;\r\n\t\t\t_rawData.writeFloat(matrix.a * x + matrix.c * y + matrix.tx);\r\n\t\t\t_rawData.writeFloat(matrix.d * y + matrix.b * x + matrix.ty);\r\n\t\t\t\r\n\t\t\tposition += _vertexSize;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Translates the 2D positions of subsequent vertices by a certain offset. */\r\n\tpublic function translatePoints(attrName:String, deltaX:Float, deltaY:Float,\r\n\t\t\tvertexID:Int = 0, numVertices:Int = -1):Void\r\n\t{\r\n\t\tif (numVertices < 0 || vertexID + numVertices > _numVertices) \r\n\t\t\tnumVertices = _numVertices - vertexID;\r\n\t\t\r\n\t\tvar x:Float;\r\n\t\tvar y:Float;\r\n\t\tvar offset:Int = attrName == (\"position\") ? _posOffset:getAttribute(attrName).offset;\r\n\t\tvar position:Int = vertexID * _vertexSize + offset;\r\n\t\tvar endPosition:Int = position + (numVertices * _vertexSize);\r\n\t\t\r\n\t\twhile (position < endPosition)\r\n\t\t{\r\n\t\t\t_rawData.position = position;\r\n\t\t\tx = _rawData.readFloat();\r\n\t\t\ty = _rawData.readFloat();\r\n\t\t\t\r\n\t\t\t_rawData.position = position;\r\n\t\t\t_rawData.writeFloat(x + deltaX);\r\n\t\t\t_rawData.writeFloat(y + deltaY);\r\n\t\t\t\r\n\t\t\tposition += _vertexSize;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Multiplies the alpha values of subsequent vertices by a certain factor. */\r\n\tpublic function scaleAlphas(attrName:String, factor:Float,\r\n\t\t\tvertexID:Int = 0, numVertices:Int = -1):Void\r\n\t{\r\n\t\tif (factor == 1.0)\t\t\t return;\r\n\t\tif (numVertices < 0 || vertexID + numVertices > _numVertices) \r\n\t\t\tnumVertices = _numVertices - vertexID;\r\n\t\t\r\n\t\tvar i:Int;\r\n\t\tvar offset:Int = attrName == (\"color\") ? _colOffset:getAttribute(attrName).offset;\r\n\t\tvar colorPos:Int = vertexID * _vertexSize + offset;\r\n\t\tvar alphaPos:Int;\r\n\t\tvar alpha:Float;\r\n\t\tvar rgba:Int;\r\n\t\t\r\n\t\tfor (i in 0...numVertices){\r\n\t\t\talphaPos = colorPos + 3;\r\n\t\t\talpha = _rawData[alphaPos] / 255.0 * factor;\r\n\t\t\t\r\n\t\t\tif (alpha > 1.0)\t\t\t\t alpha = 1.0\r\n\t\t\telse if (alpha < 0.0)\t\t\t\t alpha = 0.0;\r\n\t\t\t\r\n\t\t\tif (alpha == 1.0 || !_premultipliedAlpha) \r\n\t\t\t{\r\n\t\t\t\t_rawData[alphaPos] = cast(alpha * 255.0, Int);\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t_rawData.position = colorPos;\r\n\t\t\t\trgba = unmultiplyAlpha(switchEndian(_rawData.readUnsignedInt()));\r\n\t\t\t\trgba = (rgba & 0xffffff00) | (cast (alpha * 255.0, Int) & 0xff);\r\n\t\t\t\trgba = premultiplyAlpha(rgba);\r\n\t\t\t\t\r\n\t\t\t\t_rawData.position = colorPos;\r\n\t\t\t\t_rawData.writeUnsignedInt(switchEndian(rgba));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcolorPos += _vertexSize;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Writes the given RGB and alpha values to the specified vertices. */\r\n\tpublic function colorize(attrName:String, color:Int, alpha:Float = 1.0,\r\n\t\t\tvertexID:Int = 0, numVertices:Int = -1):Void\r\n\t{\r\n\t\tif (numVertices < 0 || vertexID + numVertices > _numVertices) \r\n\t\t\tnumVertices = _numVertices - vertexID;\r\n\t\t\r\n\t\tvar offset:Int = attrName == (\"color\") ? _colOffset:getAttribute(attrName).offset;\r\n\t\tvar position:Int = vertexID * _vertexSize + offset;\r\n\t\tvar endPosition:Int = position + (numVertices * _vertexSize);\r\n\t\t\r\n\t\tif (alpha > 1.0)\t\t\t alpha = 1.0\r\n\t\telse if (alpha < 0.0)\t\t\t alpha = 0.0;\r\n\t\t\r\n\t\tvar rgba:Int = ((color << 8) & 0xffffff00) | (cast(alpha * 255.0, Int) & 0xff);\r\n\t\tif (_premultipliedAlpha && alpha != 1.0)\t\t\t rgba = premultiplyAlpha(rgba);\r\n\t\t\r\n\t\t_rawData.position = vertexID * _vertexSize + offset;\r\n\t\t_rawData.writeUnsignedInt(switchEndian(rgba));\r\n\t\t\r\n\t\twhile (position < endPosition)\r\n\t\t{\r\n\t\t\t_rawData.position = position;\r\n\t\t\t_rawData.writeUnsignedInt(switchEndian(rgba));\r\n\t\t\tposition += _vertexSize;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// format helpers\r\n\t\r\n\t/** Returns the format of a certain vertex attribute, identified by its name.\r\n\t  * Typical values: <code>float1, float2, float3, float4, bytes4</code>. */\r\n\tpublic function getFormat(attrName:String):Context3DVertexBufferFormat\r\n\t{\r\n\t\treturn getAttribute(attrName).format;\r\n\t}\r\n\t\r\n\t/** Returns the size of a certain vertex attribute in bytes. */\r\n\tpublic function getSizeInBytes(attrName:String):Int\r\n\t{\r\n\t\treturn getAttribute(attrName).size;\r\n\t}\r\n\t\r\n\t/** Returns the size of a certain vertex attribute in 32 bit units. */\r\n\tpublic function getSizeIn32Bits(attrName:String):Int\r\n\t{\r\n\t\treturn untyped getAttribute(attrName).size / 4;\r\n\t}\r\n\t\r\n\t/** Returns the offset (in bytes) of an attribute within a vertex. */\r\n\tpublic function getOffsetInBytes(attrName:String):Int\r\n\t{\r\n\t\treturn getAttribute(attrName).offset;\r\n\t}\r\n\t\r\n\t/** Returns the offset (in 32 bit units) of an attribute within a vertex. */\r\n\tpublic function getOffsetIn32Bits(attrName:String):Int\r\n\t{\r\n\t\treturn untyped getAttribute(attrName).offset / 4;\r\n\t}\r\n\t\r\n\t/** Indicates if the VertexData instances contains an attribute with the specified name. */\r\n\tpublic function hasAttribute(attrName:String):Bool\r\n\t{\r\n\t\treturn getAttribute(attrName) != null;\r\n\t}\r\n\t\r\n\t// VertexBuffer helpers\r\n\t\r\n\t/** Creates a vertex buffer object with the right size to fit the complete data.\r\n\t *  Optionally, the current data is uploaded right away. */\r\n\tpublic function createVertexBuffer(upload:Bool = false,\r\n\t\t\tbufferUsage:Context3DBufferUsage = null):VertexBuffer3D\r\n\t{\r\n\t\tif (bufferUsage == null) bufferUsage = Context3DBufferUsage.STATIC_DRAW;\r\n\t\tvar context:Context3D = Starling.Context;\r\n\t\tif (context == null)\t\t\t throw new MissingContextError();\r\n\t\tif (_numVertices == 0)\t\t\t return null;\r\n\t\t\r\n\t\tvar buffer:VertexBuffer3D = context.createVertexBuffer(\r\n\t\t\t\t_numVertices, untyped _vertexSize / 4, bufferUsage);\r\n\t\t\r\n\t\tif (upload) uploadToVertexBuffer(buffer);\r\n\t\treturn buffer;\r\n\t}\r\n\t\r\n\t/** Uploads the complete data (or a section of it) to the given vertex buffer. */\r\n\tpublic function uploadToVertexBuffer(buffer:VertexBuffer3D, vertexID:Int = 0, numVertices:Int = -1):Void\r\n\t{\r\n\t\tif (numVertices < 0 || vertexID + numVertices > _numVertices) \r\n\t\t\tnumVertices = _numVertices - vertexID;\r\n\t\t\r\n\t\tif (numVertices > 0) \r\n\t\t\tbuffer.uploadFromByteArray(_rawData, 0, vertexID, numVertices);\r\n\t}\r\n\t\r\n\t@:meta(Inline())\r\n\r\n\t@:final private function getAttribute(attrName:String):VertexDataAttribute\r\n\t{\r\n\t\tvar i:Int;\r\n\t\tvar attribute:VertexDataAttribute;\r\n\t\t\r\n\t\tfor (i in 0..._numAttributes){\r\n\t\t\tattribute = _attributes[i];\r\n\t\t\tif (attribute.name == attrName) return attribute;\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t@:meta(Inline())\r\n\r\n\tprivate static function switchEndian(value:Int):Int\r\n\t{\r\n\t\treturn (value & 0xff) << 24 |\r\n\t\t((value >> 8) & 0xff) << 16 |\r\n\t\t((value >> 16) & 0xff) << 8 |\r\n\t\t((value >> 24) & 0xff);\r\n\t}\r\n\t\r\n\tprivate static function premultiplyAlpha(rgba:Int):Int\r\n\t{\r\n\t\tvar alpha:Int = rgba & 0xff;\r\n\t\t\r\n\t\tif (alpha == 0xff)\t\t\t return rgba\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar factor:Float = alpha / 255.0;\r\n\t\t\tvar r:Int = untyped ((rgba >> 24) & 0xff) * factor;\r\n\t\t\tvar g:Int = untyped ((rgba >> 16) & 0xff) * factor;\r\n\t\t\tvar b:Int = untyped ((rgba >> 8) & 0xff) * factor;\r\n\t\t\t\r\n\t\t\treturn (r & 0xff) << 24 |\r\n\t\t\t(g & 0xff) << 16 |\r\n\t\t\t(b & 0xff) << 8 | alpha;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate static function unmultiplyAlpha(rgba:Int):Int\r\n\t{\r\n\t\tvar alpha:Int = rgba & 0xff;\r\n\t\t\r\n\t\tif (alpha == 0xff || alpha == 0x0)\t\t\t return rgba\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar factor:Float = alpha / 255.0;\r\n\t\t\tvar r:Int = untyped ((rgba >> 24) & 0xff) / factor;\r\n\t\t\tvar g:Int = untyped ((rgba >> 16) & 0xff) / factor;\r\n\t\t\tvar b:Int = untyped ((rgba >> 8) & 0xff) / factor;\r\n\t\t\t\r\n\t\t\treturn (r & 0xff) << 24 |\r\n\t\t\t(g & 0xff) << 16 |\r\n\t\t\t(b & 0xff) << 8 | alpha;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** The total number of vertices. If you make the object bigger, it will be filled up with\r\n\t *  <code>1.0</code> for all alpha values and zero for everything else. */\r\n\tprivate function get_numVertices():Int\r\n\t{\r\n\t\treturn _numVertices;\r\n\t}\r\n\t\r\n\tprivate function set_numVertices(value:Int):Int\r\n\t{\r\n\t\tif (_numVertices == value) return value;\r\n\t\t\r\n\t\t_rawData.length = value * _vertexSize;\r\n\t\t\r\n\t\tfor (i in 0..._numAttributes){\r\n\t\t\tvar attribute:VertexDataAttribute = _attributes[i];\r\n\t\t\tif (attribute.isColor) \r\n\t\t\t{\r\n\t\t\t\t// alpha values of all color-properties must be initialized with \"1.0\"\r\n\t\t\t\tvar offset:Int = attribute.offset + 3;\r\n\t\t\t\tfor (j in _numVertices...value){_rawData[j * _vertexSize + offset] = 0xff;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t_numVertices = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The raw vertex data; not a copy! */\r\n\tprivate function get_rawData():ByteArray\r\n\t{\r\n\t\treturn _rawData;\r\n\t}\r\n\t\r\n\t/** The format that describes the attributes of each vertex.\r\n\t *  When you assign a different format, the raw data will be converted accordingly,\r\n\t *  i.e. attributes with the same name will still point to the same data.\r\n\t *  New properties will be filled up with zeros (except for colors, which will be\r\n\t *  initialized with an alpha value of 1.0). As a side-effect, the instance will also\r\n\t *  be trimmed. */\r\n\tprivate function get_format():VertexDataFormat\r\n\t{\r\n\t\treturn _format;\r\n\t}\r\n\t\r\n\tprivate function set_format(value:VertexDataFormat):VertexDataFormat\r\n\t{\r\n\t\tif (_format == value) return value;\r\n\t\t\r\n\t\tvar a:Int;\r\n\t\tvar i:Int;\r\n\t\tvar srcVertexSize:Int = _format.vertexSizeInBytes;\r\n\t\tvar tgtVertexSize:Int = value.vertexSizeInBytes;\r\n\t\tvar numAttributes:Int = value.numAttributes;\r\n\t\t\r\n\t\tsBytes.length = value.vertexSizeInBytes * _numVertices;\r\n\t\t\r\n\t\tfor (a in 0...numAttributes){\r\n\t\t\tvar tgtAttr:VertexDataAttribute = value.attributes[a];\r\n\t\t\tvar srcAttr:VertexDataAttribute = getAttribute(tgtAttr.name);\r\n\t\t\t\r\n\t\t\tif (srcAttr != null)   // copy attributes that exist in both targets  \r\n\t\t\t{\r\n\t\t\t\tfor (i in 0..._numVertices){\r\n\t\t\t\t\tsBytes.position = tgtVertexSize * i + tgtAttr.offset;\r\n\t\t\t\t\tsBytes.writeBytes(_rawData, srcVertexSize * i + srcAttr.offset, srcAttr.size);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (tgtAttr.isColor)   // initialize color values with an alpha of \"1.0\"  \r\n\t\t\t{\r\n\t\t\t\tvar offset:Int = tgtAttr.offset + 3;\r\n\t\t\t\tfor (i in 0..._numVertices){sBytes[tgtVertexSize * i + offset] = 0xff;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t_rawData.clear();\r\n\t\t_rawData.length = sBytes.length;\r\n\t\t_rawData.writeBytes(sBytes);\r\n\t\tsBytes.clear();\r\n\t\t\r\n\t\t_format = value;\r\n\t\t_attributes = _format.attributes;\r\n\t\t_numAttributes = _attributes.length;\r\n\t\t_vertexSize = _format.vertexSizeInBytes;\r\n\t\t_posOffset = (_format.hasAttribute(\"position\")) ? _format.getOffsetInBytes(\"position\"):0;\r\n\t\t_colOffset = (_format.hasAttribute(\"color\")) ? _format.getOffsetInBytes(\"color\"):0;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The format string that describes the attributes of each vertex. */\r\n\tprivate function get_formatString():String\r\n\t{\r\n\t\treturn _format.formatString;\r\n\t}\r\n\t\r\n\t/** The size (in bytes) of each vertex. */\r\n\tprivate function get_vertexSizeInBytes():Int\r\n\t{\r\n\t\treturn _vertexSize;\r\n\t}\r\n\t\r\n\t/** The size (in 32 bit units) of each vertex. */\r\n\tprivate function get_vertexSizeIn32Bits():Int\r\n\t{\r\n\t\treturn untyped _vertexSize / 4;\r\n\t}\r\n\t\r\n\t/** The size (in bytes) of the raw vertex data. */\r\n\tprivate function get_sizeInBytes():Int\r\n\t{\r\n\t\treturn _numVertices * _vertexSize;\r\n\t}\r\n\t\r\n\t/** The size (in 32 bit units) of the raw vertex data. */\r\n\tprivate function get_sizeIn32Bits():Int\r\n\t{\r\n\t\treturn untyped _numVertices * _vertexSize / 4;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.rendering;\r\n\r\nimport openfl.display3D.Context3DVertexBufferFormat;\r\nimport openfl.errors.ArgumentError;\r\nimport openfl.errors.Error;\r\n\r\n/** Holds the properties of a single attribute in a VertexDataFormat instance.\r\n *  The member variables must never be changed; they are only <code>public</code>\r\n *  for performance reasons. */\r\nclass VertexDataAttribute\r\n{\r\n\t/*private static var FORMAT_SIZES = {\r\n\t\t\"bytes4\": 4,\r\n\t\t\"float1\": 4,\r\n\t\t\"float2\": 8,\r\n\t\t\"float3\": 12,\r\n\t\t\"float4\": 16\r\n\t};*/\r\n\tprivate static var _FORMAT_SIZES:FormatSizes;\r\n\tprivate static var FORMAT_SIZES(get, null):FormatSizes;\r\n\t\r\n\t//private static var _FORMAT_SIZES:Map<Context3DVertexBufferFormat, Int>;\r\n\t//private static var FORMAT_SIZES(get, null):Map<Context3DVertexBufferFormat, Int>;\r\n\r\n\tpublic var name:String;\r\n\tpublic var format:Context3DVertexBufferFormat;\r\n\tpublic var isColor:Bool = false;\r\n\tpublic var offset:Int = 0; // in bytes\r\n\tpublic var size:Int = 0;   // in bytes\r\n\r\n\t/** Creates a new instance with the given properties. */\r\n\tpublic function new(name:String, format:Context3DVertexBufferFormat, offset:Int)\r\n\t{\r\n\t\ttrace(\"set format = \" + format);\r\n\t\ttry {\r\n\t\t\tvar i:Int = untyped VertexDataAttribute.FORMAT_SIZES[format];\r\n\t\t}\r\n\t\tcatch (e:Error) {\r\n\t\t\ttrace(\"Error: \" + e);\r\n\t\t\tthrow new ArgumentError(\r\n\t\t\t\t\"Invalid attribute format: \" + format + \". \" +\r\n\t\t\t\t\"Use one of the following: 'float1'-'float4', 'bytes4'\");\r\n\t\t}\r\n\t\t\r\n\t\tthis.name = name;\r\n\t\tthis.format = format;\r\n\t\tthis.offset = offset;\r\n\t\t\r\n\t\t//trace(\"FORMAT_SIZES = \" + FORMAT_SIZES);\r\n\t\t//trace(\"format = \" + format);\r\n\t\t//trace(untyped FORMAT_SIZES[format]);\r\n\t\t\r\n\t\tif (format == Context3DVertexBufferFormat.BYTES_4) this.size = 4;\r\n\t\telse if (format == Context3DVertexBufferFormat.FLOAT_1) this.size = 4;\r\n\t\telse if (format == Context3DVertexBufferFormat.FLOAT_2) this.size = 8;\r\n\t\telse if (format == Context3DVertexBufferFormat.FLOAT_3) this.size = 12;\r\n\t\telse if (format == Context3DVertexBufferFormat.FLOAT_4) this.size = 16;\r\n\t\t\r\n\t\t//this.size = untyped FORMAT_SIZES[format];\r\n\t\tthis.isColor = name.indexOf(\"color\") != -1 || name.indexOf(\"Color\") != -1;\r\n\t}\r\n\t\r\n\tstatic function get_FORMAT_SIZES():FormatSizes\r\n\t{\r\n\t\tif (_FORMAT_SIZES == null) {\r\n\t\t\t_FORMAT_SIZES = new FormatSizes();\r\n\t\t}\r\n\t\treturn _FORMAT_SIZES;\r\n\t}\r\n}\r\n\r\nclass FormatSizes\r\n{\r\n\t\r\n\tpublic var bytes4:Int = 4;\r\n\tpublic var float1:Int = 4;\r\n\tpublic var float2:Int = 8;\r\n\tpublic var float3:Int = 12;\r\n\tpublic var float4:Int = 16;\r\n\t\r\n\t@:allow(starling.rendering.VertexDataAttribute)\r\n\tprivate function new ():Void\r\n\t{\r\n\t\t\r\n\t}\r\n}","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.text;\r\n\r\nimport starling.display.Image;\r\nimport starling.textures.Texture;\r\n\r\n/** A BitmapChar contains the information about one char of a bitmap font.\r\n *  <em>You don't have to use this class directly in most cases. \r\n *  The TextField class contains methods that handle bitmap fonts for you.</em>\t\r\n */\r\nclass BitmapChar\r\n{\r\n\tpublic var charID(get, never):Int;\r\n\tpublic var xOffset(get, never):Float;\r\n\tpublic var yOffset(get, never):Float;\r\n\tpublic var xAdvance(get, never):Float;\r\n\tpublic var texture(get, never):Texture;\r\n\tpublic var width(get, never):Float;\r\n\tpublic var height(get, never):Float;\r\n\r\n\tprivate var _texture:Texture;\r\n\tprivate var _charID:Int;\r\n\tprivate var _xOffset:Float;\r\n\tprivate var _yOffset:Float;\r\n\tprivate var _xAdvance:Float;\r\n\tprivate var _kernings:Map<Int, Float>;\r\n\t\r\n\t/** Creates a char with a texture and its properties. */\r\n\tpublic function new(id:Int, texture:Texture,\r\n\t\t\txOffset:Float, yOffset:Float, xAdvance:Float)\r\n\t{\r\n\t\t_charID = id;\r\n\t\t_texture = texture;\r\n\t\t_xOffset = xOffset;\r\n\t\t_yOffset = yOffset;\r\n\t\t_xAdvance = xAdvance;\r\n\t\t_kernings = null;\r\n\t}\r\n\t\r\n\t/** Adds kerning information relative to a specific other character ID. */\r\n\tpublic function addKerning(charID:Int, amount:Float):Void\r\n\t{\r\n\t\tif (_kernings == null) \r\n\t\t\t_kernings = new Map<Int, Float>();\r\n\t\t\r\n\t\t_kernings.set(charID, amount);\r\n\t}\r\n\t\r\n\t/** Retrieve kerning information relative to the given character ID. */\r\n\tpublic function getKerning(charID:Int):Float\r\n\t{\r\n\t\tif (_kernings == null || _kernings.exists(charID) == false)\t\t\t return 0.0\r\n\t\telse return _kernings[charID];\r\n\t}\r\n\t\r\n\t/** Creates an image of the char. */\r\n\tpublic function createImage():Image\r\n\t{\r\n\t\treturn new Image(_texture);\r\n\t}\r\n\t\r\n\t/** The unicode ID of the char. */\r\n\tprivate function get_charID():Int\r\n\t{\r\n\t\treturn _charID;\r\n\t}\r\n\t\r\n\t/** The number of points to move the char in x direction on character arrangement. */\r\n\tprivate function get_xOffset():Float\r\n\t{\r\n\t\treturn _xOffset;\r\n\t}\r\n\t\r\n\t/** The number of points to move the char in y direction on character arrangement. */\r\n\tprivate function get_yOffset():Float\r\n\t{\r\n\t\treturn _yOffset;\r\n\t}\r\n\t\r\n\t/** The number of points the cursor has to be moved to the right for the next char. */\r\n\tprivate function get_xAdvance():Float\r\n\t{\r\n\t\treturn _xAdvance;\r\n\t}\r\n\t\r\n\t/** The texture of the character. */\r\n\tprivate function get_texture():Texture\r\n\t{\r\n\t\treturn _texture;\r\n\t}\r\n\t\r\n\t/** The width of the character in points. */\r\n\tprivate function get_width():Float\r\n\t{\r\n\t\treturn _texture.width;\r\n\t}\r\n\t\r\n\t/** The height of the character in points. */\r\n\tprivate function get_height():Float\r\n\t{\r\n\t\treturn _texture.height;\r\n\t}\r\n}\r\n","/**\r\n * Created by redge on 16.12.15.\r\n */\r\npackage starling.text;\r\n\r\n\r\nimport openfl.display3D.Context3DTextureFormat;\r\n\r\nimport starling.core.Starling;\r\n\r\n/** The TextOptions class contains data that describes how the letters of a text should\r\n *  be assembled on text composition.\r\n *\r\n *  <p>Note that not all properties are supported by all text compositors.</p>\r\n */\r\nclass TextOptions\r\n{\r\n\tpublic var wordWrap(get, set):Bool;\r\n\tpublic var autoScale(get, set):Bool;\r\n\tpublic var isHtmlText(get, set):Bool;\r\n\tpublic var textureScale(get, set):Float;\r\n\tpublic var textureFormat(get, set):Context3DTextureFormat;\r\n\r\n\tprivate var _wordWrap:Bool;\r\n\tprivate var _autoScale:Bool;\r\n\tprivate var _isHtmlText:Bool;\r\n\tprivate var _textureScale:Float;\r\n\tprivate var _textureFormat:Context3DTextureFormat;\r\n\t\r\n\t/** Creates a new TextOptions instance with the given properties. */\r\n\tpublic function new(wordWrap:Bool = true, autoScale:Bool = false)\r\n\t{\r\n\t\t_wordWrap = wordWrap;\r\n\t\t_autoScale = autoScale;\r\n\t\t_textureScale = Starling.ContentScaleFactor;\r\n\t\t\r\n\t\t// TODO: Check\r\n\t\t//_textureFormat = Context3DTextureFormat.BGR_PACKED;\r\n\t\t_textureFormat = Context3DTextureFormat.BGRA;\r\n\t\t\r\n\t\t_isHtmlText = false;\r\n\t}\r\n\t\r\n\t/** Copies all properties from another TextOptions instance. */\r\n\tpublic function copyFrom(options:TextOptions):Void\r\n\t{\r\n\t\t_wordWrap = options._wordWrap;\r\n\t\t_autoScale = options._autoScale;\r\n\t\t_isHtmlText = options._isHtmlText;\r\n\t\t_textureScale = options._textureScale;\r\n\t\t_textureFormat = options._textureFormat;\r\n\t}\r\n\t\r\n\t/** Creates a clone of this instance. */\r\n\tpublic function clone():TextOptions\r\n\t{\r\n\t\tvar clone:TextOptions = new TextOptions();\r\n\t\tclone.copyFrom(this);\r\n\t\treturn clone;\r\n\t}\r\n\t\r\n\t/** Indicates if the text should be wrapped at word boundaries if it does not fit into\r\n\t *  the TextField otherwise. @default true */\r\n\tprivate function get_wordWrap():Bool {\r\n\t\treturn _wordWrap;\r\n\t}\r\n\tprivate function set_wordWrap(value:Bool):Bool {\r\n\t\t_wordWrap = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates whether the font size is automatically reduced if the complete text does\r\n\t *  not fit into the TextField. @default false */\r\n\tprivate function get_autoScale():Bool {\r\n\t\treturn _autoScale;\r\n\t}\r\n\tprivate function set_autoScale(value:Bool):Bool {\r\n\t\t_autoScale = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if text should be interpreted as HTML code. For a description\r\n\t *  of the supported HTML subset, refer to the classic Flash 'TextField' documentation.\r\n\t *  Beware: Only supported for TrueType fonts. @default false */\r\n\tprivate function get_isHtmlText():Bool {\r\n\t\treturn _isHtmlText;\r\n\t}\r\n\tprivate function set_isHtmlText(value:Bool):Bool {\r\n\t\t_isHtmlText = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The scale factor of any textures that are created during text composition.\r\n\t *  @default Starling.ContentScaleFactor */\r\n\tprivate function get_textureScale():Float {\r\n\t\treturn _textureScale;\r\n\t}\r\n\tprivate function set_textureScale(value:Float):Float {\r\n\t\t_textureScale = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The Context3DTextureFormat of any textures that are created during text composition.\r\n\t *  @default Context3DTextureFormat.BGRA_PACKED */\r\n\tprivate function get_textureFormat():Context3DTextureFormat {\r\n\t\treturn _textureFormat;\r\n\t}\r\n\tprivate function set_textureFormat(value:Context3DTextureFormat):Context3DTextureFormat {\r\n\t\t_textureFormat = value;\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.text;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport starling.text.ITextCompositor;\r\nimport starling.text.TextFormat;\r\nimport starling.text.TextOptions;\r\n\r\nimport openfl.geom.Rectangle;\r\n\r\nimport starling.display.Image;\r\nimport starling.display.MeshBatch;\r\nimport starling.display.Sprite;\r\nimport starling.textures.Texture;\r\nimport starling.textures.TextureSmoothing;\r\nimport starling.utils.Align;\r\nimport starling.utils.StringUtil;\r\n\r\n/** The BitmapFont class parses bitmap font files and arranges the glyphs\r\n *  in the form of a text.\r\n *\r\n *  The class parses the XML format as it is used in the \r\n *  <a href=\"http://www.angelcode.com/products/bmfont/\">AngelCode Bitmap Font Generator</a> or\r\n *  the <a href=\"http://glyphdesigner.71squared.com/\">Glyph Designer</a>. \r\n *  This is what the file format looks like:\r\n *\r\n *  <pre> \r\n *  &lt;font&gt;\r\n *\t&lt;info face=\"BranchingMouse\" size=\"40\" /&gt;\r\n *\t&lt;common lineHeight=\"40\" /&gt;\r\n *\t&lt;pages&gt;  &lt;!-- currently, only one page is supported --&gt;\r\n *\t  &lt;page id=\"0\" file=\"texture.png\" /&gt;\r\n *\t&lt;/pages&gt;\r\n *\t&lt;chars&gt;\r\n *\t  &lt;char id=\"32\" x=\"60\" y=\"29\" width=\"1\" height=\"1\" xoffset=\"0\" yoffset=\"27\" xadvance=\"8\" /&gt;\r\n *\t  &lt;char id=\"33\" x=\"155\" y=\"144\" width=\"9\" height=\"21\" xoffset=\"0\" yoffset=\"6\" xadvance=\"9\" /&gt;\r\n *\t&lt;/chars&gt;\r\n *\t&lt;kernings&gt; &lt;!-- Kerning is optional --&gt;\r\n *\t  &lt;kerning first=\"83\" second=\"83\" amount=\"-4\"/&gt;\r\n *\t&lt;/kernings&gt;\r\n *  &lt;/font&gt;\r\n *  </pre>\r\n *  \r\n *  Pass an instance of this class to the method <code>registerBitmapFont</code> of the\r\n *  TextField class. Then, set the <code>fontName</code> property of the text field to the \r\n *  <code>name</code> value of the bitmap font. This will make the text field use the bitmap\r\n *  font.  \r\n */\r\n\r\nimport starling.text.BitmapChar;\r\n\r\nclass BitmapFont implements ITextCompositor\r\n{\r\n\tpublic var name(get, never):String;\r\n\tpublic var size(get, never):Float;\r\n\tpublic var lineHeight(get, set):Float;\r\n\tpublic var smoothing(get, set):String;\r\n\tpublic var baseline(get, set):Float;\r\n\tpublic var offsetX(get, set):Float;\r\n\tpublic var offsetY(get, set):Float;\r\n\tpublic var texture(get, never):Texture;\r\n\r\n\t/** Use this constant for the <code>fontSize</code> property of the TextField class to \r\n\t *  render the bitmap font in exactly the size it was created. */\r\n\tpublic static var NATIVE_SIZE:Int = -1;\r\n\t\r\n\t/** The font name of the embedded minimal bitmap font. Use this e.g. for debug output. */\r\n\tpublic static var MINI:String = \"mini\";\r\n\t\r\n\tprivate static var CHAR_SPACE:Int = 32;\r\n\tprivate static var CHAR_TAB:Int = 9;\r\n\tprivate static var CHAR_NEWLINE:Int = 10;\r\n\tprivate static var CHAR_CARRIAGE_RETURN:Int = 13;\r\n\t\r\n\tprivate var _texture:Texture;\r\n\tprivate var _chars:Map<Int, BitmapChar>;\r\n\tprivate var _name:String;\r\n\tprivate var _size:Float;\r\n\tprivate var _lineHeight:Float;\r\n\tprivate var _baseline:Float;\r\n\tprivate var _offsetX:Float;\r\n\tprivate var _offsetY:Float;\r\n\tprivate var _helperImage:Image;\r\n\t\r\n\t// helper objects\r\n\tprivate static var sLines:Array<Dynamic> = [];\r\n\tprivate static var sDefaultOptions:TextOptions = new TextOptions();\r\n\t\r\n\t/** Creates a bitmap font by parsing an XML file and uses the specified texture. \r\n\t *  If you don't pass any data, the \"mini\" font will be created. */\r\n\tpublic function new(texture:Texture = null, fontXml:Xml=null)\r\n\t{\r\n\t\t// if no texture is passed in, we create the minimal, embedded font\r\n\t\tif (texture == null && fontXml == null) \r\n\t\t{\r\n\t\t\ttexture = MiniBitmapFont.texture;\r\n\t\t\tfontXml = MiniBitmapFont.xml;\r\n\t\t}\r\n\t\telse if (texture != null && fontXml == null) \r\n\t\t{\r\n\t\t\tthrow new ArgumentError(\"fontXml cannot be null!\");\r\n\t\t}\r\n\t\t\r\n\t\t_name = \"unknown\";\r\n\t\t_lineHeight = _size = _baseline = 14;\r\n\t\t_offsetX = _offsetY = 0.0;\r\n\t\t_texture = texture;\r\n\t\t_chars = new Map<Int, BitmapChar>();\r\n\t\t_helperImage = new Image(texture);\r\n\t\t\r\n\t\tparseFontXml(fontXml);\r\n\t}\r\n\t\r\n\t/** Disposes the texture of the bitmap font! */\r\n\tpublic function dispose():Void\r\n\t{\r\n\t\tif (_texture != null) \r\n\t\t\t_texture.dispose();\r\n\t}\r\n\t\r\n\tprivate function parseFontXml(fontXml:Xml):Void\r\n\t{\r\n\t\tvar scale:Float = texture.scale;\r\n\t\tvar frame:Rectangle = texture.frame;\r\n\t\tvar frameX:Float = frame != null ? frame.x : 0;\r\n\t\tvar frameY:Float = frame != null ? frame.y : 0;\r\n\t\t\r\n\t\tfor (font in fontXml.elementsNamed(\"font\")) {\r\n\t\t\tif (font.nodeType == Xml.Element ) {\r\n\t\t\t\tfor (info in font.elementsNamed(\"info\")) {\r\n\t\t\t\t\tif (info.nodeType == Xml.Element ) {\r\n\t\t\t\t\t\t_name = info.get(\"face\");\r\n\t\t\t\t\t\t_size = Std.parseFloat(info.get(\"size\")) / scale;\r\n\t\t\t\t\t\t//mSize = Std.parseFloat(info.get(\"bold\")) / scale;\r\n\t\t\t\t\t\t//mSize = Std.parseFloat(info.get(\"italic\")) / scale;\r\n\t\t\t\t\t\tif (info.get(\"smooth\") == \"0\") smoothing = TextureSmoothing.NONE;\r\n\t\t\t\t\t\tif (_size <= 0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttrace(\"[Starling] Warning: invalid font size in '\" + _name + \"' font.\");\r\n\t\t\t\t\t\t\t_size = (_size == 0.0 ? 16.0 : _size * -1.0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (common in font.elementsNamed(\"common\")) {\r\n\t\t\t\t\tif (common.nodeType == Xml.Element ) {\r\n\t\t\t\t\t\t_lineHeight = Std.parseFloat(common.get(\"lineHeight\")) / scale;\r\n\t\t\t\t\t\t_baseline = Std.parseFloat(common.get(\"base\")) / scale;\r\n\t\t\t\t\t\t//mBaseline = Std.parseFloat(common.get(\"scaleW\")) / scale;\r\n\t\t\t\t\t\t//mBaseline = Std.parseFloat(common.get(\"scaleH\")) / scale;\r\n\t\t\t\t\t\t//mBaseline = Std.parseFloat(common.get(\"pages\")) / scale;\r\n\t\t\t\t\t\t//mBaseline = Std.parseFloat(common.get(\"packed\")) / scale;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (chars in font.elementsNamed(\"chars\")) {\r\n\t\t\t\t\tif (chars.nodeType == Xml.Element ) {\r\n\t\t\t\t\t\tfor (char in chars.elementsNamed(\"char\")) {\r\n\t\t\t\t\t\t\tif (char.nodeType == Xml.Element ) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar id:Int = Std.parseInt(char.get(\"id\"));\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar xOffset:Float  = Std.parseFloat(char.get(\"xoffset\"))  / scale;\r\n\t\t\t\t\t\t\t\tvar yOffset:Float  = Std.parseFloat(char.get(\"yoffset\"))  / scale;\r\n\t\t\t\t\t\t\t\tvar xAdvance:Float = Std.parseFloat(char.get(\"xadvance\")) / scale;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar region:Rectangle = new Rectangle();\r\n\t\t\t\t\t\t\t\tregion.x = Std.parseFloat(char.get(\"x\")) / scale + frameX;\r\n\t\t\t\t\t\t\t\tregion.y = Std.parseFloat(char.get(\"y\")) / scale + frameY;\r\n\t\t\t\t\t\t\t\tregion.width  = Std.parseFloat(char.get(\"width\"))  / scale;\r\n\t\t\t\t\t\t\t\tregion.height = Std.parseFloat(char.get(\"height\")) / scale;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar texture:Texture = Texture.fromTexture(_texture, region);\r\n\t\t\t\t\t\t\t\tvar bitmapChar:BitmapChar = new BitmapChar(id, texture, xOffset, yOffset, xAdvance); \r\n\t\t\t\t\t\t\t\taddChar(id, bitmapChar);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (kernings in font.elementsNamed(\"kernings\")) {\r\n\t\t\t\t\tif (kernings.nodeType == Xml.Element ) {\r\n\t\t\t\t\t\tfor (kerning in kernings.elementsNamed(\"kerning\")) {\r\n\t\t\t\t\t\t\tif (kerning.nodeType == Xml.Element ) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar first:Int  = Std.parseInt(kerning.get(\"first\"));\r\n\t\t\t\t\t\t\t\tvar second:Int = Std.parseInt(kerning.get(\"second\"));\r\n\t\t\t\t\t\t\t\tvar amount:Float = Std.parseFloat(kerning.get(\"amount\")) / scale;\r\n\t\t\t\t\t\t\t\tif (_chars.exists(second)) {\r\n\t\t\t\t\t\t\t\t\tgetChar(second).addKerning(first, amount);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Returns a single bitmap char with a certain character ID. */\r\n\tpublic function getChar(charID:Int):BitmapChar\r\n\t{\r\n\t\treturn _chars.get(charID);\r\n\t}\r\n\t\r\n\t/** Adds a bitmap char with a certain character ID. */\r\n\tpublic function addChar(charID:Int, bitmapChar:BitmapChar):Void\r\n\t{\r\n\t\t_chars.set(charID, bitmapChar);\r\n\t}\r\n\t\r\n\t/** Returns a vector containing all the character IDs that are contained in this font. */\r\n\tpublic function getCharIDs(result:Array<Int> = null):Array<Int>\r\n\t{\r\n\t\tif (result == null) result = new Array<Int>();\r\n\t\t\r\n\t\tvar keys = _chars.keys();\r\n\t\tfor (k in keys) {\r\n\t\t\tvar key:Int = k;\r\n\t\t\tresult[result.length] = key;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/** Checks whether a provided string can be displayed with the font. */\r\n\tpublic function hasChars(text:String):Bool\r\n\t{\r\n\t\tif (text == null) return true;\r\n\t\t\r\n\t\tvar charID:Int;\r\n\t\tvar numChars:Int = text.length;\r\n\t\t\r\n\t\tfor (i in 0...numChars){\r\n\t\t\tcharID = text.charCodeAt(i);\r\n\t\t\t\r\n\t\t\tif (charID != CHAR_SPACE && charID != CHAR_TAB && charID != CHAR_NEWLINE &&\r\n\t\t\t\tcharID != CHAR_CARRIAGE_RETURN && getChar(charID) == null) \r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t/** Creates a sprite that contains a certain text, made up by one image per char. */\r\n\tpublic function createSprite(width:Float, height:Float, text:String,\r\n\t\t\tformat:TextFormat, options:TextOptions = null):Sprite\r\n\t{\r\n\t\tvar charLocations:Array<CharLocation> = arrangeChars(width, height, text, format, options);\r\n\t\tvar numChars:Int = charLocations.length;\r\n\t\tvar sprite:Sprite = new Sprite();\r\n\t\t\r\n\t\tfor (i in 0...numChars){\r\n\t\t\tvar charLocation:CharLocation = charLocations[i];\r\n\t\t\tvar char:Image = charLocation.char.createImage();\r\n\t\t\tchar.x = charLocation.x;\r\n\t\t\tchar.y = charLocation.y;\r\n\t\t\tchar.scale = charLocation.scale;\r\n\t\t\tchar.color = format.color;\r\n\t\t\tsprite.addChild(char);\r\n\t\t}\r\n\t\t\r\n\t\tCharLocation.rechargePool();\r\n\t\treturn sprite;\r\n\t}\r\n\t\r\n\t/** Draws text into a QuadBatch. */\r\n\tpublic function fillMeshBatch(meshBatch:MeshBatch, width:Float, height:Float, text:String,\r\n\t\t\tformat:TextFormat, options:TextOptions = null):Void\r\n\t{\r\n\t\tvar charLocations:Array<CharLocation> = arrangeChars(\r\n\t\t\t\twidth, height, text, format, options);\r\n\t\tvar numChars:Int = charLocations.length;\r\n\t\t_helperImage.color = format.color;\r\n\t\t\r\n\t\tfor (i in 0...numChars){\r\n\t\t\tvar charLocation:CharLocation = charLocations[i];\r\n\t\t\t_helperImage.texture = charLocation.char.texture;\r\n\t\t\t_helperImage.readjustSize();\r\n\t\t\t_helperImage.x = charLocation.x;\r\n\t\t\t_helperImage.y = charLocation.y;\r\n\t\t\t_helperImage.scale = charLocation.scale;\r\n\t\t\tmeshBatch.addMesh(_helperImage);\r\n\t\t}\r\n\t\t\r\n\t\tCharLocation.rechargePool();\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\tpublic function clearMeshBatch(meshBatch:MeshBatch):Void\r\n\t{\r\n\t\tmeshBatch.clear();\r\n\t}\r\n\t\r\n\t/** Arranges the characters of a text inside a rectangle, adhering to the given settings. \r\n\t *  Returns a Vector of CharLocations. */\r\n\tprivate function arrangeChars(width:Float, height:Float, text:String,\r\n\t\t\tformat:TextFormat, options:TextOptions):Array<CharLocation>\r\n\t{\r\n\t\tif (text == null || text.length == 0)\t\t\t return CharLocation.vectorFromPool();\r\n\t\tif (options == null)\t\t\t options = sDefaultOptions;\r\n\t\t\r\n\t\tvar kerning:Bool = format.kerning;\r\n\t\tvar leading:Float = format.leading;\r\n\t\tvar hAlign:String = format.horizontalAlign;\r\n\t\tvar vAlign:String = format.verticalAlign;\r\n\t\tvar fontSize:Float = format.size;\r\n\t\tvar autoScale:Bool = options.autoScale;\r\n\t\tvar wordWrap:Bool = options.wordWrap;\r\n\t\t\r\n\t\tvar finished:Bool = false;\r\n\t\tvar charLocation:CharLocation;\r\n\t\tvar numChars:Int;\r\n\t\tvar containerWidth:Float = 0;\r\n\t\tvar containerHeight:Float = 0;\r\n\t\tvar scale:Float = 1;\r\n\t\tvar i:Int;\r\n\t\tvar j:Int;\r\n\t\tvar currentX:Float = 0;\r\n\t\tvar currentY:Float = 0;\r\n\t\t\t\t\r\n\t\tif (fontSize < 0)\t\t\t fontSize *= -_size;\r\n\t\t\r\n\t\twhile (!finished)\r\n\t\t{\r\n\t\t\tsLines.splice(0, sLines.length);\r\n\t\t\tscale = fontSize / _size;\r\n\t\t\tcontainerWidth = width / scale;\r\n\t\t\tcontainerHeight = height / scale;\r\n\t\t\t\r\n\t\t\tif (_lineHeight <= containerHeight) \r\n\t\t\t{\r\n\t\t\t\tvar lastWhiteSpace:Int = -1;\r\n\t\t\t\tvar lastCharID:Int = -1;\r\n\t\t\t\tvar currentX:Float = 0;\r\n\t\t\t\tvar currentY:Float = 0;\r\n\t\t\t\tvar currentLine:Array<CharLocation> = CharLocation.vectorFromPool();\r\n\t\t\t\t\r\n\t\t\t\tnumChars = text.length;\r\n\t\t\t\ttrace(\"Check for loop to while\");\r\n\t\t\t\tvar i:Int = 0;\r\n\t\t\t\twhile (i < numChars) {\r\n\t\t\t\t//for (i in 0...numChars){\r\n\t\t\t\t\tvar lineFull:Bool = false;\r\n\t\t\t\t\tvar charID:Int = text.charCodeAt(i);\r\n\t\t\t\t\tvar char:BitmapChar = getChar(charID);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (charID == CHAR_NEWLINE || charID == CHAR_CARRIAGE_RETURN) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlineFull = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (char == null) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttrace(\"[Starling] Missing character: \" + charID);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (charID == CHAR_SPACE || charID == CHAR_TAB) \r\n\t\t\t\t\t\t\tlastWhiteSpace = i;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (kerning) \r\n\t\t\t\t\t\t\tcurrentX += char.getKerning(lastCharID);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcharLocation = CharLocation.instanceFromPool(char);\r\n\t\t\t\t\t\tcharLocation.x = currentX + char.xOffset;\r\n\t\t\t\t\t\tcharLocation.y = currentY + char.yOffset;\r\n\t\t\t\t\t\tcurrentLine[currentLine.length] = charLocation;  // push  \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcurrentX += char.xAdvance;\r\n\t\t\t\t\t\tlastCharID = charID;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (charLocation.x + char.width > containerWidth) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (wordWrap) \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// when autoscaling, we must not split a word in half -> restart\r\n\t\t\t\t\t\t\t\tif (autoScale && lastWhiteSpace == -1) \r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// remove characters and add them again to next line  ;\r\n\t\t\t\t\t\t\t\tvar numCharsToRemove:Int = lastWhiteSpace == -(1) ? 1:i - lastWhiteSpace;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tfor (j in 0...numCharsToRemove){  // faster than 'splice'  \r\n\t\t\t\t\t\t\t\t\tcurrentLine.pop();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (currentLine.length == 0) \r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\ti -= numCharsToRemove;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (autoScale) break;\r\n\t\t\t\t\t\t\t\tcurrentLine.pop();\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// continue with next line, if there is one\r\n\t\t\t\t\t\t\t\twhile (i < numChars - 1 && text.charCodeAt(i) != CHAR_NEWLINE)\r\n\t\t\t\t\t\t\t\t++i;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlineFull = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (i == numChars - 1) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsLines[sLines.length] = currentLine;  // push  \r\n\t\t\t\t\t\tfinished = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (lineFull) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsLines[sLines.length] = currentLine;  // push  \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (lastWhiteSpace == i) \r\n\t\t\t\t\t\t\tcurrentLine.pop();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (currentY + leading + 2 * _lineHeight <= containerHeight) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcurrentLine = CharLocation.vectorFromPool();\r\n\t\t\t\t\t\t\tcurrentX = 0;\r\n\t\t\t\t\t\t\tcurrentY += _lineHeight + leading;\r\n\t\t\t\t\t\t\tlastWhiteSpace = -1;\r\n\t\t\t\t\t\t\tlastCharID = -1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}  // for each char  \r\n\t\t\t}  // if (_lineHeight <= containerHeight)  \r\n\t\t\t\r\n\t\t\tif (autoScale && !finished && fontSize > 3) \r\n\t\t\t\tfontSize -= 1\r\n\t\t\telse \r\n\t\t\tfinished = true;\r\n\t\t}  // while (!finished)  \r\n\t\t\r\n\t\tvar finalLocations:Array<CharLocation> = CharLocation.vectorFromPool();\r\n\t\tvar numLines:Int = sLines.length;\r\n\t\tvar bottom:Float = untyped (currentY + _lineHeight);\r\n\t\tvar yOffset:Int = 0;\r\n\t\t\r\n\t\tif (vAlign == Align.BOTTOM) yOffset = untyped containerHeight - bottom;\r\n\t\telse if (vAlign == Align.CENTER) yOffset = untyped (containerHeight - bottom) / 2;\r\n\t\t\r\n\t\tfor (lineID in 0...numLines){\r\n\t\t\tvar line:Array<CharLocation> = sLines[lineID];\r\n\t\t\tnumChars = line.length;\r\n\t\t\t\r\n\t\t\tif (numChars == 0) {\r\n\t\t\t\ttrace(\"check comment out doesn't break something\");\r\n\t\t\t\t//++lineID;\r\n\t\t\t\tcontinue;\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar xOffset:Int = 0;\r\n\t\t\tvar lastLocation:CharLocation = line[line.length - 1];\r\n\t\t\tvar right:Float = lastLocation.x - lastLocation.char.xOffset + lastLocation.char.xAdvance;\r\n\t\t\t\r\n\t\t\tif (hAlign == Align.RIGHT) xOffset = untyped containerWidth - right\r\n\t\t\telse if (hAlign == Align.CENTER) xOffset = untyped (containerWidth - right) / 2;\r\n\t\t\t\r\n\t\t\tfor (c in 0...numChars){\r\n\t\t\t\tcharLocation = line[c];\r\n\t\t\t\tcharLocation.x = scale * (charLocation.x + xOffset + _offsetX);\r\n\t\t\t\tcharLocation.y = scale * (charLocation.y + yOffset + _offsetY);\r\n\t\t\t\tcharLocation.scale = scale;\r\n\t\t\t\t\r\n\t\t\t\tif (charLocation.char.width > 0 && charLocation.char.height > 0) \r\n\t\t\t\t\tfinalLocations[finalLocations.length] = charLocation;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn finalLocations;\r\n\t}\r\n\t\r\n\t/** The name of the font as it was parsed from the font file. */\r\n\tprivate function get_name():String\r\n\t{\r\n\t\treturn _name;\r\n\t}\r\n\t\r\n\t/** The native size of the font. */\r\n\tprivate function get_size():Float\r\n\t{\r\n\t\treturn _size;\r\n\t}\r\n\t\r\n\t/** The height of one line in points. */\r\n\tprivate function get_lineHeight():Float\r\n\t{\r\n\t\treturn _lineHeight;\r\n\t}\r\n\t\r\n\tprivate function set_lineHeight(value:Float):Float\r\n\t{\r\n\t\t_lineHeight = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The smoothing filter that is used for the texture. */\r\n\tprivate function get_smoothing():String\r\n\t{\r\n\t\treturn _helperImage.textureSmoothing;\r\n\t}\r\n\t\r\n\tprivate function set_smoothing(value:String):String\r\n\t{\r\n\t\t_helperImage.textureSmoothing = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The baseline of the font. This property does not affect text rendering;\r\n\t *  it's just an information that may be useful for exact text placement. */\r\n\tprivate function get_baseline():Float\r\n\t{\r\n\t\treturn _baseline;\r\n\t}\r\n\t\r\n\tprivate function set_baseline(value:Float):Float\r\n\t{\r\n\t\t_baseline = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** An offset that moves any generated text along the x-axis (in points).\r\n\t *  Useful to make up for incorrect font data. @default 0. */\r\n\tprivate function get_offsetX():Float\r\n\t{\r\n\t\treturn _offsetX;\r\n\t}\r\n\t\r\n\tprivate function set_offsetX(value:Float):Float\r\n\t{\r\n\t\t_offsetX = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** An offset that moves any generated text along the y-axis (in points).\r\n\t *  Useful to make up for incorrect font data. @default 0. */\r\n\tprivate function get_offsetY():Float\r\n\t{\r\n\t\treturn _offsetY;\r\n\t}\r\n\t\r\n\tprivate function set_offsetY(value:Float):Float\r\n\t{\r\n\t\t_offsetY = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The underlying texture that contains all the chars. */\r\n\tprivate function get_texture():Texture\r\n\t{\r\n\t\treturn _texture;\r\n\t}\r\n}\r\n\r\n\r\n\r\nclass CharLocation\r\n{\r\n\tpublic var char:BitmapChar;\r\n\tpublic var scale:Float;\r\n\tpublic var x:Float;\r\n\tpublic var y:Float;\r\n\t\r\n\tpublic function new(char:BitmapChar)\r\n\t{\r\n\t\treset(char);\r\n\t}\r\n\t\r\n\tprivate function reset(char:BitmapChar):CharLocation\r\n\t{\r\n\t\tthis.char = char;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t// pooling\r\n\t\r\n\tprivate static var sInstancePool:Array<CharLocation> = [];\r\n\tprivate static var sVectorPool:Array<Dynamic> = [];\r\n\t\r\n\tprivate static var sInstanceLoan:Array<CharLocation> = [];\r\n\tprivate static var sVectorLoan:Array<Dynamic> = [];\r\n\t\r\n\tpublic static function instanceFromPool(char:BitmapChar):CharLocation\r\n\t{\r\n\t\tvar instance:CharLocation = sInstancePool.length > (0) ? \r\n\t\tsInstancePool.pop():new CharLocation(char);\r\n\t\t\r\n\t\tinstance.reset(char);\r\n\t\tsInstanceLoan[sInstanceLoan.length] = instance;\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tpublic static function vectorFromPool():Array<CharLocation>\r\n\t{\r\n\t\tvar vector:Array<CharLocation> = sVectorPool.length > (0) ? \r\n\t\tsVectorPool.pop():[];\r\n\t\t\r\n\t\tvector.splice(0, vector.length);\r\n\t\tsVectorLoan[sVectorLoan.length] = vector;\r\n\t\t\r\n\t\treturn vector;\r\n\t}\r\n\t\r\n\tpublic static function rechargePool():Void\r\n\t{\r\n\t\tvar instance:CharLocation;\r\n\t\tvar vector:Array<CharLocation>;\r\n\t\t\r\n\t\twhile (sInstanceLoan.length > 0)\r\n\t\t{\r\n\t\t\tinstance = sInstanceLoan.pop();\r\n\t\t\tinstance.char = null;\r\n\t\t\tsInstancePool[sInstancePool.length] = instance;\r\n\t\t}\r\n\t\t\r\n\t\twhile (sVectorLoan.length > 0)\r\n\t\t{\r\n\t\t\tvector = sVectorLoan.pop();\r\n\t\t\tvector.splice(0, vector.length);\r\n\t\t\tsVectorPool[sVectorPool.length] = vector;\r\n\t\t}\r\n\t}\r\n}","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright 2011-2014 Gamua. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.text;\r\n\r\nimport openfl.display.BitmapData;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.utils.ByteArray;\r\n\r\nimport starling.textures.Texture;\r\n\r\n/** @private\r\n *  This class contains constants for the 'MINI' bitmap font. It's done that way to avoid\r\n *  a dependency on the 'mx.core' library (which is required for the 'Embed' statement).\r\n * \r\n *  <p>The font is based on \"uni05_53.ttf\" from Craig Kroeger (http://www.miniml.com) and was\r\n *  converted to a Bitmap Font with \"GlyphDesigner\" from 71squared (http://www.71squared.com).\r\n *  </p> */\r\n/*internal*/\r\nclass MiniBitmapFont\r\n{\r\n\tprivate static var BITMAP_WIDTH:Int = 128;\r\n\tprivate static var BITMAP_HEIGHT:Int = 64;\r\n\tprivate static var BITMAP_DATA:Array<Int> = [\r\n\t\t0x78daed5d, 0xcb6edb40, 0xc0c8aa2, 0x871e8a1e, 0xfabffe34, 0xff842ffd, 0x1f0d03, 0xbee56027, \r\n\t\t0x150a0182, 0xb04bce0c, 0xb9969290, 0x80a18492, 0x578ab924, 0x872fe7e5, 0xa5a8e83f, 0x7d3b1c0e, \r\n\t\t0xcba3ca7f, 0xfb47eb6b, 0xd6b4bc06, 0x3ddf7b0f, 0x732dfb9e, 0xbdadd33b, 0xb7fcdd3a, 0x67c9fefe, \r\n\t\t0x783ce6a3, 0xca5fdfcb, 0x3aa7c8b3, 0xb5c69fdb, 0xed96b55f, 0x3ee23aad, 0x6badf7b7, 0x6896d352, \r\n\t\t0x5e0a7f0b, 0x42ffc6a2, 0xe7c9c1da, 0x93f3cf33, 0xadd788f2, 0xdf1aa4f0, 0x339f07b5, 0x650a9f79, \r\n\t\t0x8f253bf4, 0xb991eb3d, 0x9bf4f37c, 0x3ecfaf11, 0x7cc64e58, 0xfc11cf93, 0x2167cf97, 0x32f2b79e, \r\n\t\t0x9b951f2a, 0xff0cfd44, 0xf93dbb80, 0xf047eaad, 0x22ff0826, 0x40747ffd, 0x395a47c6, 0x2eb4d67d, \r\n\t\t0xd6e7f799, 0xf47f94fc, 0x113ce9fd, 0x9d110c9f, 0xcddf93ff, 0xcfe46f25, 0x7f16bf79, 0xbca2a2a2, \r\n\t\t0xfdc66f88, 0x2de8e9fa, 0x89f67d9, 0x2a261fc2, 0xaee7e52f, 0x33ee91bd, 0x1e9337f4, 0x30309b7b, \r\n\t\t0x1cb91f99, 0xb888f191, 0xd67aadfc, 0x65f63d46, 0xad17c5bf, 0x685ec08b, 0x2394fc42, 0x514c6f2c, \r\n\t\t0x1bc3c839, 0x12cf2ccf, 0xffbe5eaf, 0xf38bc197, 0xab654f2, 0x846cfc3a, 0xeaf9945c, 0x5a8f87e4, \r\n\t\t0xc43cdfc6, 0xea73561e, 0xc58aad55, 0xdeb24e14, 0xe53de399, 0x23f267f4, 0x9f951b6b, 0xbf27fe8f, \r\n\t\t0xd3e934bf, 0xb6927fcb, 0xb6a9bcbd, 0xcb5fa993, 0x295823e2, 0xff23759d, 0x2d795e4d, 0x6b6b9fa5, \r\n\t\t0xe0ffa28a, 0xfb99b802, 0x39dfaa23, 0x2136818d, 0x7d99b818, 0xd133a606, 0xcada0134, 0xfe433f73, \r\n\t\t0x358f82c8, 0x3b12a37b, 0x7cab86a0, 0xc6c3bdd8, 0x25c3f77a, 0xfb7579cd, 0x84157b78, 0x31c31ea3, \r\n\t\t0x7e3e438e, 0x5139a3b9, 0xe155b3c, 0x4bfe1e76, 0x56f27196, 0x2f8fea65, 0xc40fcc78, 0x7d642ddc, \r\n\t\t0xeb396073, 0x9f887f89, 0x60cdde9e, 0x44f6536f, 0xbde91a24, 0x8660ecff, 0x47d17f34, 0x4e55634e, \r\n\t\t0xc51e2238, 0xa85707f7, 0xe4dfb34f, 0x7b957f14, 0x6fa8bd19, 0x688f0eea, 0x5b19fbe9, 0x6138b40e, \r\n\t\t0x86e6cc11, 0xfb8fac97, 0xd1fb17c5, 0xd90afe2f, 0x2a2ada5f, 0xcdc8eb93, 0x52e3b1ac, 0x9c328211, \r\n\t\t0x3d3bcaac, 0xcbd43a94, 0xda48a427, 0x2da3af62, 0xe2fdba5c, 0x2edf8fc7, 0xe3f4427d, 0x2a8319d0, \r\n\t\t0xfe06c48f, 0xcef1756b, 0xee07dd8f, 0x564e1f8d, 0x535a6b21, 0x7218d5ab, 0x8ef86455, 0xf7bd3dc0, \r\n\t\t0xe608d7c7, 0xbff7fb9d, 0xc90fb0fa, 0xbde6f762, 0x4e6f4d04, 0xa77af241, 0xeeedadaf, 0xf4b6aab1, \r\n\t\t0x5f566d84, 0xd1713637, 0x3452ff23, 0xfa3c5aff, 0xd9789bcd, 0xa928fbdb, 0xc20c6cce, 0x92f5bdd9, \r\n\t\t0xfe1fed31, 0x1fe1ff51, 0xac36a21e, 0x50f4b5b0, 0x3fbb7732, 0xe6abacbd, 0x9cb1c747, 0xcd8da03e, \r\n\t\t0x1a5d9f8d, 0x3d143e62, 0xef51db1d, 0xc1c44c4f, 0x5a34079d, 0x918f547c, 0x73e65c5a, 0x2bd6b1f8, \r\n\t\t0x197359ea, 0xfc5f54ff, 0x47c83f2b, 0xc68af441, 0x8ef87c18, 0xfb98153b, 0x66cc5d47, 0xe2906c3d, \r\n\t\t0xcffaee96, 0xe83e63f5, 0xdc5ac7eb, 0xa918edff, 0xd9f59539, 0xc7a8bd60, 0xe31e569f, 0xd9dad668, \r\n\t\t0xff5f98bf, 0x88c9ffab, 0xfacc600c, 0x264f9185, 0x93a3bd87, 0x8a3f89fa, 0x22269fc7, 0xe47a959c, \r\n\t\t0x398395d0, 0x7c12b35f, 0xd4ef63b0, 0x7a8fd8d9, 0x744f8668, 0x7f29dbe7, 0xa5ec53f4, 0x1e91b911, \r\n\t\t0x366f88e0, 0x64063778, 0xcfef7daf, 0xc91a6fa1, 0x98c43ad7, 0xda839ead, 0x633134da, 0x73d8dbff, \r\n\t\t0x2cbe6567, 0x933f49f, 0x99475cea, 0x32d27b68, 0xf5692176, 0x7584fc55, 0xf928b9ec, 0x48de68b4, \r\n\t\t0xff57f03f, 0xabb36adc, 0xa1f866a4, 0x4616ed79, 0x44fb552b, 0x1e286271, 0x9cda1f88, 0xda39e688, \r\n\t\t0xd61691d9, 0x9c68ff65, 0x74263c7b, 0xd657994f, 0x4463bf56, 0xf4e0f47, 0x45f34b6c, 0x8cc89c5f, \r\n\t\t0xfafcdeac, 0xb797d38c, 0xce84abba, 0xe3c9d0f3, 0x5756bc13, 0xa9f1a331, 0xbb5a6f60, 0xe21756fe, \r\n\t\t0xc8cc504f, 0xfeca4c78, 0xcf0e45e4, 0xcfe015b4, 0x2e14ed1b, 0x607a6b94, 0x9931c6be, 0x7bb1c833, \r\n\t\t0x67c2959e, 0x11346657, 0x6d8782d9, 0x23f98c68, 0xbdb1a8a8, 0x281ffb5b, 0xb81ab13d, 0xacad8ac4, \r\n\t\t0xbe4bfe34, 0xabfabafa, 0x3f0419d8, 0x42a9ff79, 0xf9462f7f, 0xb965ed07, 0xc57b4abe, 0x8cb9ce8a, \r\n\t\t0x2bd6ebcd, 0xb25fee81, 0x8cb8ea2b, 0xf99d489f, 0x10a3ff68, 0x5e8ed923, 0x45f9f267, 0xf22c4545, \r\n\t\t0x45454545, 0x45454545, 0x45454545, 0x45454545, 0x45fba577, 0x2eecdb70\r\n \t];\r\n\t\r\n\tprivate static var XML_DATA:Xml = Xml.parse('<font>\r\n\t  <info face=\"mini\" size=\"8\" bold=\"0\" italic=\"0\" smooth=\"0\"/>\r\n\t  <common lineHeight=\"8\" base=\"7\" scaleW=\"128\" scaleH=\"64\" pages=\"1\" packed=\"0\"/>\r\n\t  <chars count=\"191\">\r\n\t\t<char id=\"195\" x=\"1\" y=\"1\" width=\"5\" height=\"9\" xoffset=\"0\" yoffset=\"-2\" xadvance=\"6\"/>\r\n\t\t<char id=\"209\" x=\"7\" y=\"1\" width=\"5\" height=\"9\" xoffset=\"0\" yoffset=\"-2\" xadvance=\"6\"/>\r\n\t\t<char id=\"213\" x=\"13\" y=\"1\" width=\"5\" height=\"9\" xoffset=\"0\" yoffset=\"-2\" xadvance=\"6\"/>\r\n\t\t<char id=\"253\" x=\"19\" y=\"1\" width=\"4\" height=\"9\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"255\" x=\"24\" y=\"1\" width=\"4\" height=\"9\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"192\" x=\"29\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"193\" x=\"35\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"194\" x=\"41\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"197\" x=\"47\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"200\" x=\"53\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"201\" x=\"59\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"202\" x=\"65\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"210\" x=\"71\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"211\" x=\"77\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"212\" x=\"83\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"217\" x=\"89\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"218\" x=\"95\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"219\" x=\"101\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"221\" x=\"107\" y=\"1\" width=\"5\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"6\"/>\r\n\t\t<char id=\"206\" x=\"113\" y=\"1\" width=\"3\" height=\"8\" xoffset=\"-1\" yoffset=\"-1\" xadvance=\"2\"/>\r\n\t\t<char id=\"204\" x=\"117\" y=\"1\" width=\"2\" height=\"8\" xoffset=\"-1\" yoffset=\"-1\" xadvance=\"2\"/>\r\n\t\t<char id=\"205\" x=\"120\" y=\"1\" width=\"2\" height=\"8\" xoffset=\"0\" yoffset=\"-1\" xadvance=\"2\"/>\r\n\t\t<char id=\"36\"  x=\"1\" y=\"11\" width=\"5\" height=\"7\" xoffset=\"0\" yoffset=\"1\" xadvance=\"6\"/>\r\n\t\t<char id=\"196\" x=\"7\" y=\"11\" width=\"5\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"6\"/>\r\n\t\t<char id=\"199\" x=\"13\" y=\"11\" width=\"5\" height=\"7\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"203\" x=\"19\" y=\"11\" width=\"5\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"6\"/>\r\n\t\t<char id=\"214\" x=\"25\" y=\"11\" width=\"5\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"6\"/>\r\n\t\t<char id=\"220\" x=\"31\" y=\"11\" width=\"5\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"6\"/>\r\n\t\t<char id=\"224\" x=\"37\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"225\" x=\"42\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"226\" x=\"47\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"227\" x=\"52\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"232\" x=\"57\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"233\" x=\"62\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"234\" x=\"67\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"235\" x=\"72\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"241\" x=\"77\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"242\" x=\"82\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"243\" x=\"87\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"244\" x=\"92\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"245\" x=\"97\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"249\" x=\"102\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"250\" x=\"107\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"251\" x=\"112\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"0\" xadvance=\"5\"/>\r\n\t\t<char id=\"254\" x=\"117\" y=\"11\" width=\"4\" height=\"7\" xoffset=\"0\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"123\" x=\"122\" y=\"11\" width=\"3\" height=\"7\" xoffset=\"0\" yoffset=\"1\" xadvance=\"4\"/>\r\n\t\t<char id=\"125\" x=\"1\" y=\"19\" width=\"3\" height=\"7\" xoffset=\"0\" yoffset=\"1\" xadvance=\"4\"/>\r\n\t\t<char id=\"167\" x=\"5\" y=\"19\" width=\"3\" height=\"7\" xoffset=\"0\" yoffset=\"1\" xadvance=\"4\"/>\r\n\t\t<char id=\"207\" x=\"9\" y=\"19\" width=\"3\" height=\"7\" xoffset=\"-1\" yoffset=\"0\" xadvance=\"2\"/>\r\n\t\t<char id=\"106\" x=\"13\" y=\"19\" width=\"2\" height=\"7\" xoffset=\"0\" yoffset=\"2\" xadvance=\"3\"/>\r\n\t\t<char id=\"40\" x=\"16\" y=\"19\" width=\"2\" height=\"7\" xoffset=\"0\" yoffset=\"1\" xadvance=\"3\"/>\r\n\t\t<char id=\"41\" x=\"19\" y=\"19\" width=\"2\" height=\"7\" xoffset=\"0\" yoffset=\"1\" xadvance=\"3\"/>\r\n\t\t<char id=\"91\" x=\"22\" y=\"19\" width=\"2\" height=\"7\" xoffset=\"0\" yoffset=\"1\" xadvance=\"3\"/>\r\n\t\t<char id=\"93\" x=\"25\" y=\"19\" width=\"2\" height=\"7\" xoffset=\"0\" yoffset=\"1\" xadvance=\"3\"/>\r\n\t\t<char id=\"124\" x=\"28\" y=\"19\" width=\"1\" height=\"7\" xoffset=\"1\" yoffset=\"1\" xadvance=\"4\"/>\r\n\t\t<char id=\"81\" x=\"30\" y=\"19\" width=\"5\" height=\"6\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"163\" x=\"36\" y=\"19\" width=\"5\" height=\"6\" xoffset=\"0\" yoffset=\"1\" xadvance=\"6\"/>\r\n\t\t<char id=\"177\" x=\"42\" y=\"19\" width=\"5\" height=\"6\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"181\" x=\"48\" y=\"19\" width=\"5\" height=\"6\" xoffset=\"0\" yoffset=\"3\" xadvance=\"6\"/>\r\n\t\t<char id=\"103\" x=\"54\" y=\"19\" width=\"4\" height=\"6\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"112\" x=\"59\" y=\"19\" width=\"4\" height=\"6\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"113\" x=\"64\" y=\"19\" width=\"4\" height=\"6\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"121\" x=\"69\" y=\"19\" width=\"4\" height=\"6\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"162\" x=\"74\" y=\"19\" width=\"4\" height=\"6\" xoffset=\"0\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"228\" x=\"79\" y=\"19\" width=\"4\" height=\"6\" xoffset=\"0\" yoffset=\"1\" xadvance=\"5\"/>\r\n\t\t<char id=\"229\" x=\"84\" y=\"19\" width=\"4\" height=\"6\" xoffset=\"0\" yoffset=\"1\" xadvance=\"5\"/>\r\n\t\t<char id=\"231\" x=\"89\" y=\"19\" width=\"4\" height=\"6\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"240\" x=\"94\" y=\"19\" width=\"4\" height=\"6\" xoffset=\"0\" yoffset=\"1\" xadvance=\"5\"/>\r\n\t\t<char id=\"246\" x=\"99\" y=\"19\" width=\"4\" height=\"6\" xoffset=\"0\" yoffset=\"1\" xadvance=\"5\"/>\r\n\t\t<char id=\"252\" x=\"104\" y=\"19\" width=\"4\" height=\"6\" xoffset=\"0\" yoffset=\"1\" xadvance=\"5\"/>\r\n\t\t<char id=\"238\" x=\"109\" y=\"19\" width=\"3\" height=\"6\" xoffset=\"-1\" yoffset=\"1\" xadvance=\"2\"/>\r\n\t\t<char id=\"59\" x=\"113\" y=\"19\" width=\"2\" height=\"6\" xoffset=\"0\" yoffset=\"3\" xadvance=\"4\"/>\r\n\t\t<char id=\"236\" x=\"116\" y=\"19\" width=\"2\" height=\"6\" xoffset=\"-1\" yoffset=\"1\" xadvance=\"2\"/>\r\n\t\t<char id=\"237\" x=\"119\" y=\"19\" width=\"2\" height=\"6\" xoffset=\"0\" yoffset=\"1\" xadvance=\"2\"/>\r\n\t\t<char id=\"198\" x=\"1\" y=\"27\" width=\"9\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"10\"/>\r\n\t\t<char id=\"190\" x=\"11\" y=\"27\" width=\"8\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"9\"/>\r\n\t\t<char id=\"87\" x=\"20\" y=\"27\" width=\"7\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"8\"/>\r\n\t\t<char id=\"188\" x=\"28\" y=\"27\" width=\"7\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"8\"/>\r\n\t\t<char id=\"189\" x=\"36\" y=\"27\" width=\"7\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"8\"/>\r\n\t\t<char id=\"38\" x=\"44\" y=\"27\" width=\"6\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"7\"/>\r\n\t\t<char id=\"164\" x=\"51\" y=\"27\" width=\"6\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"7\"/>\r\n\t\t<char id=\"208\" x=\"58\" y=\"27\" width=\"6\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"7\"/>\r\n\t\t<char id=\"8364\" x=\"65\" y=\"27\" width=\"6\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"7\"/>\r\n\t\t<char id=\"65\" x=\"72\" y=\"27\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"66\" x=\"78\" y=\"27\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"67\" x=\"84\" y=\"27\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"68\" x=\"90\" y=\"27\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"69\" x=\"96\" y=\"27\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"70\" x=\"102\" y=\"27\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"71\" x=\"108\" y=\"27\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"72\" x=\"114\" y=\"27\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"75\" x=\"120\" y=\"27\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"77\" x=\"1\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"78\" x=\"7\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"79\" x=\"13\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"80\" x=\"19\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"82\" x=\"25\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"83\" x=\"31\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"84\" x=\"37\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"85\" x=\"43\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"86\" x=\"49\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"88\" x=\"55\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"89\" x=\"61\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"90\" x=\"67\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"50\" x=\"73\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"51\" x=\"79\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"52\" x=\"85\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"53\" x=\"91\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"54\" x=\"97\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"56\" x=\"103\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"57\" x=\"109\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"48\" x=\"115\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"47\" x=\"121\" y=\"33\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"64\" x=\"1\" y=\"39\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"92\" x=\"7\" y=\"39\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"37\" x=\"13\" y=\"39\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"43\" x=\"19\" y=\"39\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"35\" x=\"25\" y=\"39\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"42\" x=\"31\" y=\"39\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"165\" x=\"37\" y=\"39\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"169\" x=\"43\" y=\"39\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"174\" x=\"49\" y=\"39\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"182\" x=\"55\" y=\"39\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"216\" x=\"61\" y=\"39\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"247\" x=\"67\" y=\"39\" width=\"5\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"6\"/>\r\n\t\t<char id=\"74\" x=\"73\" y=\"39\" width=\"4\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"76\" x=\"78\" y=\"39\" width=\"4\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"98\" x=\"83\" y=\"39\" width=\"4\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"100\" x=\"88\" y=\"39\" width=\"4\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"104\" x=\"93\" y=\"39\" width=\"4\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"107\" x=\"98\" y=\"39\" width=\"4\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"55\" x=\"103\" y=\"39\" width=\"4\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"63\" x=\"108\" y=\"39\" width=\"4\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"191\" x=\"113\" y=\"39\" width=\"4\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"222\" x=\"118\" y=\"39\" width=\"4\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"223\" x=\"123\" y=\"39\" width=\"4\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"116\" x=\"1\" y=\"45\" width=\"3\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"4\"/>\r\n\t\t<char id=\"60\" x=\"5\" y=\"45\" width=\"3\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"4\"/>\r\n\t\t<char id=\"62\" x=\"9\" y=\"45\" width=\"3\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"4\"/>\r\n\t\t<char id=\"170\" x=\"13\" y=\"45\" width=\"3\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"4\"/>\r\n\t\t<char id=\"186\" x=\"17\" y=\"45\" width=\"3\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"4\"/>\r\n\t\t<char id=\"239\" x=\"21\" y=\"45\" width=\"3\" height=\"5\" xoffset=\"-1\" yoffset=\"2\" xadvance=\"2\"/>\r\n\t\t<char id=\"102\" x=\"25\" y=\"45\" width=\"2\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"3\"/>\r\n\t\t<char id=\"49\" x=\"28\" y=\"45\" width=\"2\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"3\"/>\r\n\t\t<char id=\"73\" x=\"31\" y=\"45\" width=\"1\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"2\"/>\r\n\t\t<char id=\"105\" x=\"33\" y=\"45\" width=\"1\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"2\"/>\r\n\t\t<char id=\"108\" x=\"35\" y=\"45\" width=\"1\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"2\"/>\r\n\t\t<char id=\"33\" x=\"37\" y=\"45\" width=\"1\" height=\"5\" xoffset=\"1\" yoffset=\"2\" xadvance=\"3\"/>\r\n\t\t<char id=\"161\" x=\"39\" y=\"45\" width=\"1\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"3\"/>\r\n\t\t<char id=\"166\" x=\"41\" y=\"45\" width=\"1\" height=\"5\" xoffset=\"0\" yoffset=\"2\" xadvance=\"2\"/>\r\n\t\t<char id=\"109\" x=\"43\" y=\"45\" width=\"7\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"8\"/>\r\n\t\t<char id=\"119\" x=\"51\" y=\"45\" width=\"7\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"8\"/>\r\n\t\t<char id=\"230\" x=\"59\" y=\"45\" width=\"7\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"8\"/>\r\n\t\t<char id=\"97\" x=\"67\" y=\"45\" width=\"4\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"99\" x=\"72\" y=\"45\" width=\"4\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"101\" x=\"77\" y=\"45\" width=\"4\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"110\" x=\"82\" y=\"45\" width=\"4\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"111\" x=\"87\" y=\"45\" width=\"4\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"115\" x=\"92\" y=\"45\" width=\"4\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"117\" x=\"97\" y=\"45\" width=\"4\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"118\" x=\"102\" y=\"45\" width=\"4\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"120\" x=\"107\" y=\"45\" width=\"4\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"122\" x=\"112\" y=\"45\" width=\"4\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"215\" x=\"117\" y=\"45\" width=\"4\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"248\" x=\"122\" y=\"45\" width=\"4\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"114\" x=\"1\" y=\"51\" width=\"3\" height=\"4\" xoffset=\"0\" yoffset=\"3\" xadvance=\"4\"/>\r\n\t\t<char id=\"178\" x=\"5\" y=\"51\" width=\"3\" height=\"4\" xoffset=\"0\" yoffset=\"2\" xadvance=\"4\"/>\r\n\t\t<char id=\"179\" x=\"9\" y=\"51\" width=\"3\" height=\"4\" xoffset=\"0\" yoffset=\"2\" xadvance=\"4\"/>\r\n\t\t<char id=\"185\" x=\"13\" y=\"51\" width=\"1\" height=\"4\" xoffset=\"0\" yoffset=\"2\" xadvance=\"2\"/>\r\n\t\t<char id=\"61\" x=\"15\" y=\"51\" width=\"5\" height=\"3\" xoffset=\"0\" yoffset=\"3\" xadvance=\"6\"/>\r\n\t\t<char id=\"171\" x=\"21\" y=\"51\" width=\"5\" height=\"3\" xoffset=\"0\" yoffset=\"3\" xadvance=\"6\"/>\r\n\t\t<char id=\"172\" x=\"27\" y=\"51\" width=\"5\" height=\"3\" xoffset=\"0\" yoffset=\"4\" xadvance=\"6\"/>\r\n\t\t<char id=\"187\" x=\"33\" y=\"51\" width=\"5\" height=\"3\" xoffset=\"0\" yoffset=\"3\" xadvance=\"6\"/>\r\n\t\t<char id=\"176\" x=\"39\" y=\"51\" width=\"3\" height=\"3\" xoffset=\"0\" yoffset=\"2\" xadvance=\"4\"/>\r\n\t\t<char id=\"44\" x=\"43\" y=\"51\" width=\"2\" height=\"3\" xoffset=\"0\" yoffset=\"6\" xadvance=\"3\"/>\r\n\t\t<char id=\"58\" x=\"46\" y=\"51\" width=\"1\" height=\"3\" xoffset=\"1\" yoffset=\"3\" xadvance=\"4\"/>\r\n\t\t<char id=\"94\" x=\"48\" y=\"51\" width=\"4\" height=\"2\" xoffset=\"-1\" yoffset=\"2\" xadvance=\"4\"/>\r\n\t\t<char id=\"126\" x=\"53\" y=\"51\" width=\"4\" height=\"2\" xoffset=\"0\" yoffset=\"3\" xadvance=\"5\"/>\r\n\t\t<char id=\"34\" x=\"58\" y=\"51\" width=\"3\" height=\"2\" xoffset=\"0\" yoffset=\"2\" xadvance=\"4\"/>\r\n\t\t<char id=\"96\" x=\"62\" y=\"51\" width=\"2\" height=\"2\" xoffset=\"0\" yoffset=\"2\" xadvance=\"3\"/>\r\n\t\t<char id=\"180\" x=\"65\" y=\"51\" width=\"2\" height=\"2\" xoffset=\"0\" yoffset=\"2\" xadvance=\"3\"/>\r\n\t\t<char id=\"184\" x=\"68\" y=\"51\" width=\"2\" height=\"2\" xoffset=\"0\" yoffset=\"7\" xadvance=\"3\"/>\r\n\t\t<char id=\"39\" x=\"71\" y=\"51\" width=\"1\" height=\"2\" xoffset=\"0\" yoffset=\"2\" xadvance=\"2\"/>\r\n\t\t<char id=\"95\" x=\"73\" y=\"51\" width=\"5\" height=\"1\" xoffset=\"0\" yoffset=\"7\" xadvance=\"6\"/>\r\n\t\t<char id=\"45\" x=\"79\" y=\"51\" width=\"4\" height=\"1\" xoffset=\"0\" yoffset=\"4\" xadvance=\"5\"/>\r\n\t\t<char id=\"173\" x=\"84\" y=\"51\" width=\"4\" height=\"1\" xoffset=\"0\" yoffset=\"4\" xadvance=\"5\"/>\r\n\t\t<char id=\"168\" x=\"89\" y=\"51\" width=\"3\" height=\"1\" xoffset=\"1\" yoffset=\"2\" xadvance=\"5\"/>\r\n\t\t<char id=\"175\" x=\"93\" y=\"51\" width=\"3\" height=\"1\" xoffset=\"0\" yoffset=\"2\" xadvance=\"4\"/>\r\n\t\t<char id=\"46\" x=\"97\" y=\"51\" width=\"1\" height=\"1\" xoffset=\"0\" yoffset=\"6\" xadvance=\"2\"/>\r\n\t\t<char id=\"183\" x=\"99\" y=\"51\" width=\"1\" height=\"1\" xoffset=\"0\" yoffset=\"4\" xadvance=\"2\"/>\r\n\t\t<char id=\"32\" x=\"6\" y=\"56\" width=\"0\" height=\"0\" xoffset=\"0\" yoffset=\"127\" xadvance=\"3\"/>\r\n\t  </chars>\r\n\t</font>');\r\n\t\r\n\tpublic static var texture(get, null):Texture;\r\n\tpublic static var xml(get, null):Xml;\r\n\t\r\n\tprivate static function get_texture():Texture\r\n\t{\r\n\t\tvar bitmapData:BitmapData = getBitmapData();\r\n\t\tvar texture:Texture = Texture.fromBitmapData(bitmapData, false);\r\n\t\tbitmapData.dispose();\r\n\t\tbitmapData = null;\r\n\r\n\t\ttexture.root.onRestore = function():Void\r\n\t\t{\r\n\t\t\tbitmapData = getBitmapData();\r\n\t\t\ttexture.root.uploadBitmapData(bitmapData);\r\n\t\t\tbitmapData.dispose();\r\n\t\t\tbitmapData = null;\r\n\t\t};\r\n\r\n\t\treturn texture;\r\n\t}\r\n\r\n\tpublic static function getBitmapData():BitmapData\r\n\t{\r\n\t\tvar bmpData:BitmapData = new BitmapData(BITMAP_WIDTH, BITMAP_HEIGHT, true, 0x00000000);\r\n\t\tvar bmpBytes:ByteArray = new ByteArray();\r\n\t\tvar numBytes:Int = MiniBitmapFont.BITMAP_DATA.length;\r\n\t\tfor (i in 0...numBytes)\r\n\t\t\tbmpBytes.writeUnsignedInt(MiniBitmapFont.BITMAP_DATA[i]);\r\n\t\t\r\n\t\tbmpBytes.uncompress();\r\n\t\tbmpData.setPixels(new Rectangle(0, 0, BITMAP_WIDTH, BITMAP_HEIGHT), bmpBytes);\r\n\t\tbmpBytes.clear();\r\n\t\treturn bmpData;\r\n\t}\r\n\t\r\n\tprivate static function get_xml():Xml { return MiniBitmapFont.XML_DATA; }\r\n}","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.text;\r\n\r\n\r\nimport openfl.display3D.Context3DTextureFormat;\r\nimport openfl.geom.Matrix;\r\nimport openfl.text.AntiAliasType;\r\nimport openfl.text.TextField;\r\n\r\nimport starling.display.MeshBatch;\r\nimport starling.display.Quad;\r\nimport starling.textures.Texture;\r\nimport starling.utils.Align;\r\n\r\n/** @private\r\n *\r\n *  <p>This text compositor uses a Flash TextField to render system- or embedded fonts into\r\n *  a texture.</p>\r\n */\r\n\r\nimport openfl.display.BitmapData;\r\n\r\nclass TrueTypeCompositor implements ITextCompositor\r\n{\r\n\t// helpers\r\n\tprivate static var sHelperMatrix:Matrix = new Matrix();\r\n\tprivate static var sHelperQuad:Quad = new Quad(100, 100);\r\n\tprivate static var sNativeTextField:openfl.text.TextField = new openfl.text.TextField();\r\n\tprivate static var sNativeFormat:openfl.text.TextFormat = new openfl.text.TextFormat();\r\n\t\r\n\t/** Creates a new TrueTypeCompositor instance. */\r\n\t@:allow(starling.text)\r\n\tprivate function new()\r\n\t{\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\tpublic function fillMeshBatch(meshBatch:MeshBatch, width:Float, height:Float, text:String,\r\n\t\t\tformat:TextFormat, options:TextOptions = null):Void\r\n\t{\r\n\t\tif (text == null || text == \"\")\t\t\t return;\r\n\t\t\r\n\t\tvar texture:Texture;\r\n\t\tvar textureFormat:Context3DTextureFormat = options.textureFormat;\r\n\t\tvar bitmapData:BitmapDataEx = renderText(width, height, text, format, options);\r\n\t\t\r\n\t\ttexture = Texture.fromBitmapData(bitmapData, false, false, bitmapData.scale, textureFormat);\r\n\t\ttexture.root.onRestore = function():Void\r\n\t\t\t\t{\r\n\t\t\t\t\tbitmapData = renderText(width, height, text, format, options);\r\n\t\t\t\t\ttexture.root.uploadBitmapData(bitmapData);\r\n\t\t\t\t\tbitmapData.dispose();\r\n\t\t\t\t\tbitmapData = null;\r\n\t\t\t\t};\r\n\t\t\r\n\t\tbitmapData.dispose();\r\n\t\tbitmapData = null;\r\n\t\t\r\n\t\tsHelperQuad.texture = texture;\r\n\t\tsHelperQuad.readjustSize();\r\n\t\t\r\n\t\tif (format.horizontalAlign == Align.LEFT) sHelperQuad.x = 0\r\n\t\telse if (format.horizontalAlign == Align.CENTER) sHelperQuad.x = untyped ((width - texture.width) / 2)\r\n\t\telse sHelperQuad.x = width - texture.width;\r\n\t\t\r\n\t\tif (format.verticalAlign == Align.TOP) sHelperQuad.y = 0\r\n\t\telse if (format.verticalAlign == Align.CENTER) sHelperQuad.y = untyped ((height - texture.height) / 2)\r\n\t\telse sHelperQuad.y = height - texture.height;\r\n\t\t\r\n\t\tmeshBatch.addMesh(sHelperQuad);\r\n\t\t\r\n\t\tsHelperQuad.texture = null;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\tpublic function clearMeshBatch(meshBatch:MeshBatch):Void\r\n\t{\r\n\t\tmeshBatch.clear();\r\n\t\tif (meshBatch.texture != null) meshBatch.texture.dispose();\r\n\t}\r\n\t\r\n\tprivate function renderText(width:Float, height:Float, text:String,\r\n\t\t\tformat:TextFormat, options:TextOptions):BitmapDataEx\r\n\t{\r\n\t\tvar scaledWidth:Float = width * options.textureScale;\r\n\t\tvar scaledHeight:Float = height * options.textureScale;\r\n\t\tvar hAlign:String = format.horizontalAlign;\r\n\t\t\r\n\t\tformat.toNativeFormat(sNativeFormat);\r\n\t\t\r\n\t\tsNativeFormat.size = untyped sNativeFormat.size * options.textureScale;\r\n\t\tsNativeTextField.defaultTextFormat = sNativeFormat;\r\n\t\tsNativeTextField.width = scaledWidth;\r\n\t\tsNativeTextField.height = scaledHeight;\r\n\t\tsNativeTextField.antiAliasType = AntiAliasType.ADVANCED;\r\n\t\tsNativeTextField.selectable = false;\r\n\t\tsNativeTextField.multiline = true;\r\n\t\tsNativeTextField.wordWrap = options.wordWrap;\r\n\t\t\r\n\t\tif (options.isHtmlText)\t\t\t sNativeTextField.htmlText = text\r\n\t\telse sNativeTextField.text = text;\r\n\t\t\r\n\t\tsNativeTextField.embedFonts = true;\r\n\t\t\r\n\t\t// we try embedded fonts first, non-embedded fonts are just a fallback\r\n\t\tif (sNativeTextField.textWidth == 0.0 || sNativeTextField.textHeight == 0.0) \r\n\t\t\tsNativeTextField.embedFonts = false;\r\n\t\t\r\n\t\tif (options.autoScale) \r\n\t\t\tautoScaleNativeTextField(sNativeTextField, sNativeFormat,\r\n\t\t\t\tuntyped scaledWidth, untyped scaledHeight, text, options.isHtmlText);\r\n\t\t\r\n\t\tvar textWidth:Float = sNativeTextField.textWidth;\r\n\t\tvar textHeight:Float = sNativeTextField.textHeight;\r\n\t\tvar bitmapWidth:Int = Math.ceil(textWidth) + 4;\r\n\t\tvar bitmapHeight:Int = Math.ceil(textHeight) + 4;\r\n\t\tvar maxTextureSize:Int = Texture.maxSize;\r\n\t\tvar minTextureSize:Int = 1;\r\n\t\t\r\n\t\t// check for invalid texture sizes\r\n\t\tif (bitmapWidth < minTextureSize)\t\t\t bitmapWidth = 1;\r\n\t\tif (bitmapHeight < minTextureSize)\t\t\t bitmapHeight = 1;\r\n\t\tif (bitmapHeight > maxTextureSize || bitmapWidth > maxTextureSize) \r\n\t\t{\r\n\t\t\toptions.textureScale *= maxTextureSize / Math.max(bitmapWidth, bitmapHeight);\r\n\t\t\treturn renderText(width, height, text, format, options);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar offsetX:Float = 0.0;\r\n\t\t\t\r\n\t\t\tif (hAlign == Align.RIGHT)\t\t\t\t offsetX = scaledWidth - textWidth - 4\r\n\t\t\t// finally: draw TextField to bitmap data\r\n\t\t\telse if (hAlign == Align.CENTER)\t\t\t\t offsetX = (scaledWidth - textWidth - 4) / 2.0;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tvar bitmapData:BitmapDataEx = new BitmapDataEx(bitmapWidth, bitmapHeight);\r\n\t\t\tsHelperMatrix.setTo(1, 0, 0, 1, -offsetX, 0);\r\n\t\t\tbitmapData.draw(sNativeTextField, sHelperMatrix);\r\n\t\t\tbitmapData.scale = options.textureScale;\r\n\t\t\tsNativeTextField.text = \"\";\r\n\t\t\treturn bitmapData;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function autoScaleNativeTextField(textField:openfl.text.TextField,\r\n\t\t\ttextFormat:openfl.text.TextFormat,\r\n\t\t\tmaxTextWidth:Int, maxTextHeight:Int,\r\n\t\t\ttext:String, isHtmlText:Bool):Void\r\n\t{\r\n\t\tvar size:Float = untyped textFormat.size;\r\n\t\t\r\n\t\twhile (textField.textWidth > maxTextWidth || textField.textHeight > maxTextHeight)\r\n\t\t{\r\n\t\t\tif (size <= 4)\t\t\t\t break;\r\n\t\t\t\r\n\t\t\ttextFormat.size = untyped size--;\r\n\t\t\ttextField.defaultTextFormat = textFormat;\r\n\t\t\t\r\n\t\t\tif (isHtmlText)\t\t\t\t textField.htmlText = text\r\n\t\t\telse textField.text = text;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\nclass BitmapDataEx extends BitmapData\r\n{\r\n\tpublic var scale(get, set):Float;\r\n\r\n\tprivate var _scale:Float = 1.0;\r\n\t\r\n\t@:allow(starling.text.TrueTypeCompositor)\r\n\tprivate function new(width:Int, height:Int, transparent:Bool = true, fillColor:Int = 0x0)\r\n\t{\r\n\t\tsuper(width, height, transparent, fillColor);\r\n\t}\r\n\t\r\n\tprivate function get_scale():Float\r\n\t{\r\n\t\treturn _scale;\r\n\t}\r\n\tprivate function set_scale(value:Float):Float{_scale = value;\r\n\t\treturn value;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.text;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport starling.text.TextFormat;\r\nimport starling.text.TextOptions;\r\nimport starling.text.TrueTypeCompositor;\r\n\r\nimport openfl.display3D.Context3DTextureFormat;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\n\r\nimport starling.core.Starling;\r\nimport starling.display.DisplayObject;\r\nimport starling.display.DisplayObjectContainer;\r\nimport starling.display.MeshBatch;\r\nimport starling.display.Quad;\r\nimport starling.display.Sprite;\r\nimport starling.events.Event;\r\nimport starling.rendering.Painter;\r\nimport starling.utils.RectangleUtil;\r\n\r\n/** A TextField displays text, either using standard true type fonts or custom bitmap fonts.\r\n *  \r\n *  <p>You can set all properties you are used to, like the font name and size, a color, the \r\n *  horizontal and vertical alignment, etc. The border property is helpful during development, \r\n *  because it lets you see the bounds of the TextField.</p>\r\n *  \r\n *  <p>There are two types of fonts that can be displayed:</p>\r\n *  \r\n *  <ul>\r\n *\t<li>Standard TrueType fonts. This renders the text just like a conventional Flash\r\n *\t\tTextField. It is recommended to embed the font, since you cannot be sure which fonts\r\n *\t\tare available on the client system, and since this enhances rendering quality. \r\n *\t\tSimply pass the font name to the corresponding property.</li>\r\n *\t<li>Bitmap fonts. If you need speed or fancy font effects, use a bitmap font instead. \r\n *\t\tThat is a font that has its glyphs rendered to a texture atlas. To use it, first \r\n *\t\tregister the font with the method <code>registerBitmapFont</code>, and then pass \r\n *\t\tthe font name to the corresponding property of the text field.</li>\r\n *  </ul> \r\n *\t\r\n *  For bitmap fonts, we recommend one of the following tools:\r\n * \r\n *  <ul>\r\n *\t<li>Windows: <a href=\"http://www.angelcode.com/products/bmfont\">Bitmap Font Generator</a>\r\n *\t\tfrom Angel Code (free). Export the font data as an XML file and the texture as a png\r\n *\t\twith white characters on a transparent background (32 bit).</li>\r\n *\t<li>Mac OS: <a href=\"http://glyphdesigner.71squared.com\">Glyph Designer</a> from \r\n *\t\t71squared or <a href=\"http://http://www.bmglyph.com\">bmGlyph</a> (both commercial). \r\n *\t\tThey support Starling natively.</li>\r\n *  </ul>\r\n *\r\n *  <p>When using a bitmap font, the 'color' property is used to tint the font texture. This\r\n *  works by multiplying the RGB values of that property with those of the texture's pixel.\r\n *  If your font contains just a single color, export it in plain white and change the 'color'\r\n *  property to any value you like (it defaults to zero, which means black). If your font\r\n *  contains multiple colors, change the 'color' property to <code>Color.WHITE</code> to get\r\n *  the intended result.</p>\r\n *\r\n *  <strong>Batching of TextFields</strong>\r\n *  \r\n *  <p>Normally, TextFields will require exactly one draw call. For TrueType fonts, you cannot\r\n *  avoid that; bitmap fonts, however, may be batched as long as the <code>batchable</code>\r\n *  property is enabled. Since only batchable meshes can make use of Starling's render cache,\r\n *  it makes sense to keep that property enabled in most circumstances. Only TextFields that\r\n *  are constantly changing (their position relative to the stage, their color, text, etc.)\r\n *  and contain are large number of bitmap glyphs should disable batching.</p>\r\n */\r\nclass TextField extends DisplayObjectContainer\r\n{\r\n\tprivate var isHorizontalAutoSize(get, never):Bool;\r\n\tprivate var isVerticalAutoSize(get, never):Bool;\r\n\tpublic var textBounds(get, never):Rectangle;\r\n\tpublic var text(get, set):String;\r\n\tpublic var format(get, set):TextFormat;\r\n\tpublic var border(get, set):Bool;\r\n\tpublic var autoScale(get, set):Bool;\r\n\tpublic var autoSize(get, set):String;\r\n\tpublic var wordWrap(get, set):Bool;\r\n\tpublic var batchable(get, set):Bool;\r\n\tpublic var isHtmlText(get, set):Bool;\r\n\tpublic static var defaultTextureFormat(get, set):Context3DTextureFormat;\r\n\tprivate static var bitmapFonts(get, never):Map<String, Dynamic>;\r\n\r\n\t// the name container with the registered bitmap fonts\r\n\tprivate static var BITMAP_FONT_DATA_NAME:String = \"starling.display.TextField.BitmapFonts\";\r\n\t\r\n\tprivate var _text:String;\r\n\tprivate var _options:TextOptions;\r\n\tprivate var _format:TextFormat;\r\n\tprivate var _autoSize:String;\r\n\tprivate var _textBounds:Rectangle;\r\n\tprivate var _hitArea:Rectangle;\r\n\tprivate var _compositor:ITextCompositor;\r\n\tprivate var _requiresRecomposition:Bool;\r\n\tprivate var _border:DisplayObjectContainer;\r\n\tprivate var _meshBatch:MeshBatch;\r\n\t\r\n\t// helper objects\r\n\tprivate static var sMatrix:Matrix = new Matrix();\r\n\tprivate static var sTrueTypeCompositor:TrueTypeCompositor = new TrueTypeCompositor();\r\n\t// TODO: Check\r\n\t//private static var sDefaultTextureFormat:Context3DTextureFormat = Context3DTextureFormat.BGRA_PACKED;\r\n\tprivate static var sDefaultTextureFormat:Context3DTextureFormat = Context3DTextureFormat.BGRA;\r\n\tprivate var _helperFormat:TextFormat = new TextFormat();\r\n\t\r\n\t/** Create a new text field with the given properties. */\r\n\tpublic function new(width:Int, height:Int, text:String = \"\", format:TextFormat = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t_text = (text != null) ? text:\"\";\r\n\t\t_autoSize = TextFieldAutoSize.NONE;\r\n\t\t_hitArea = new Rectangle(0, 0, width, height);\r\n\t\t_requiresRecomposition = true;\r\n\t\t_compositor = sTrueTypeCompositor;\r\n\t\t_options = new TextOptions();\r\n\t\t\r\n\t\t_format = (format != null) ? format.clone():new TextFormat();\r\n\t\t_format.addEventListener(Event.CHANGE, setRequiresRecomposition);\r\n\t\t\r\n\t\t_meshBatch = new MeshBatch();\r\n\t\t_meshBatch.touchable = false;\r\n\t\taddChild(_meshBatch);\r\n\t}\r\n\t\r\n\t/** Disposes the underlying texture data. */\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\t_format.removeEventListener(Event.CHANGE, setRequiresRecomposition);\r\n\t\t_compositor.clearMeshBatch(_meshBatch);\r\n\t\t\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function render(painter:Painter):Void\r\n\t{\r\n\t\tif (_requiresRecomposition)\t\t\t recompose();\r\n\t\tsuper.render(painter);\r\n\t}\r\n\t\r\n\t/** Forces the text contents to be composed right away.\r\n\t *  Normally, it will only do so lazily, i.e. before being rendered. */\r\n\tprivate function recompose():Void\r\n\t{\r\n\t\tif (_requiresRecomposition) \r\n\t\t{\r\n\t\t\t_compositor.clearMeshBatch(_meshBatch);\r\n\t\t\t\r\n\t\t\tvar font:String = _format.font;\r\n\t\t\tvar bitmapFont:BitmapFont = getBitmapFont(font);\r\n\t\t\t\r\n\t\t\tif (bitmapFont == null && font == BitmapFont.MINI) \r\n\t\t\t{\r\n\t\t\t\tbitmapFont = new BitmapFont();\r\n\t\t\t\tregisterBitmapFont(bitmapFont);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t_compositor = (bitmapFont != null) ? bitmapFont:sTrueTypeCompositor;\r\n\t\t\t\r\n\t\t\tupdateText();\r\n\t\t\tupdateBorder();\r\n\t\t\t\r\n\t\t\t_requiresRecomposition = false;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// font and border rendering\r\n\t\r\n\tprivate function updateText():Void\r\n\t{\r\n\t\tvar width:Float = _hitArea.width;\r\n\t\tvar height:Float = _hitArea.height;\r\n\t\tvar format:TextFormat = _helperFormat;\r\n\t\t\r\n\t\t// By working on a copy of the TextFormat, we make sure that modifications done\r\n\t\t// within the 'fillMeshBatch' method do not cause any side effects.\r\n\t\t//\r\n\t\t// (We cannot use a static variable, because that might lead to problems when\r\n\t\t//  recreating textures after a context loss.)\r\n\t\t\r\n\t\tformat.copyFrom(_format);\r\n\t\t\r\n\t\tif (isHorizontalAutoSize)\t\t\t width = 100000;\r\n\t\tif (isVerticalAutoSize)\t\t\t height = 100000;\r\n\t\t\r\n\t\t_options.textureScale = Starling.ContentScaleFactor;\r\n\t\t_options.textureFormat = sDefaultTextureFormat;\r\n\t\t_compositor.fillMeshBatch(_meshBatch, width, height, _text, format, _options);\r\n\t\t\r\n\t\tif (_autoSize != TextFieldAutoSize.NONE) \r\n\t\t{\r\n\t\t\t_textBounds = _meshBatch.getBounds(_meshBatch, _textBounds);\r\n\t\t\t\r\n\t\t\tif (isHorizontalAutoSize) \r\n\t\t\t{\r\n\t\t\t\t_meshBatch.x = _textBounds.x = -_textBounds.x;\r\n\t\t\t\t_hitArea.width = _textBounds.width;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (isVerticalAutoSize) \r\n\t\t\t{\r\n\t\t\t\t_meshBatch.y = _textBounds.y = -_textBounds.y;\r\n\t\t\t\t_hitArea.height = _textBounds.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\t// hit area doesn't change, and text bounds can be created on demand\r\n\t\t\t_textBounds = null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function updateBorder():Void\r\n\t{\r\n\t\tif (_border == null)\t\t\t return;\r\n\t\t\r\n\t\tvar width:Float = _hitArea.width;\r\n\t\tvar height:Float = _hitArea.height;\r\n\t\t\r\n\t\tvar topLine:Quad = cast(_border.getChildAt(0), Quad);\r\n\t\tvar rightLine:Quad = cast(_border.getChildAt(1), Quad);\r\n\t\tvar bottomLine:Quad = cast(_border.getChildAt(2), Quad);\r\n\t\tvar leftLine:Quad = cast(_border.getChildAt(3), Quad);\r\n\t\t\r\n\t\ttopLine.width = width;topLine.height = 1;\r\n\t\tbottomLine.width = width;bottomLine.height = 1;\r\n\t\tleftLine.width = 1;leftLine.height = height;\r\n\t\trightLine.width = 1;rightLine.height = height;\r\n\t\trightLine.x = width - 1;\r\n\t\tbottomLine.y = height - 1;\r\n\t\ttopLine.color = rightLine.color = bottomLine.color = leftLine.color = _format.color;\r\n\t}\r\n\t\r\n\tprivate function setRequiresRecomposition():Void\r\n\t{\r\n\t\t_requiresRecomposition = true;\r\n\t\tsetRequiresRedraw();\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\tprivate function get_isHorizontalAutoSize():Bool\r\n\t{\r\n\t\treturn _autoSize == TextFieldAutoSize.HORIZONTAL ||\r\n\t\t_autoSize == TextFieldAutoSize.BOTH_DIRECTIONS;\r\n\t}\r\n\t\r\n\tprivate function get_isVerticalAutoSize():Bool\r\n\t{\r\n\t\treturn _autoSize == TextFieldAutoSize.VERTICAL ||\r\n\t\t_autoSize == TextFieldAutoSize.BOTH_DIRECTIONS;\r\n\t}\r\n\t\r\n\t/** Returns the bounds of the text within the text field. */\r\n\tprivate function get_textBounds():Rectangle\r\n\t{\r\n\t\tif (_requiresRecomposition)\t\t\t recompose();\r\n\t\tif (_textBounds == null)\t\t\t _textBounds = _meshBatch.getBounds(_meshBatch);\r\n\t\treturn _textBounds.clone();\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function getBounds(targetSpace:DisplayObject, out:Rectangle = null):Rectangle\r\n\t{\r\n\t\tif (_requiresRecomposition)\t\t\t recompose();\r\n\t\tgetTransformationMatrix(targetSpace, sMatrix);\r\n\t\treturn RectangleUtil.getBounds(_hitArea, sMatrix, out);\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function hitTest(localPoint:Point):DisplayObject\r\n\t{\r\n\t\tif (!visible || !touchable || !hitTestMask(localPoint))\t\t\t return null\r\n\t\telse if (_hitArea.containsPoint(localPoint))\t\t\t return this\r\n\t\telse return null;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function set_width(value:Float):Float\r\n\t{\r\n\t\t// different to ordinary display objects, changing the size of the text field should\r\n\t\t// not change the scaling, but make the texture bigger/smaller, while the size\r\n\t\t// of the text/font stays the same (this applies to the height, as well).\r\n\t\t\r\n\t\t_hitArea.width = value;\r\n\t\tsetRequiresRecomposition();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function set_height(value:Float):Float\r\n\t{\r\n\t\t_hitArea.height = value;\r\n\t\tsetRequiresRecomposition();\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The displayed text. */\r\n\tprivate function get_text():String\r\n\t{\r\n\t\treturn _text;\r\n\t}\r\n\t\r\n\tprivate function set_text(value:String):String\r\n\t{\r\n\t\tif (value == null)\t\t\t value = \"\";\r\n\t\tif (_text != value) \r\n\t\t{\r\n\t\t\t_text = value;\r\n\t\t\tsetRequiresRecomposition();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The format describes how the text will be rendered, describing the font name and size,\r\n\t *  color, alignment, etc.\r\n\t *\r\n\t *  <p>Note that you can edit the font properties directly; there's no need to reassign\r\n\t *  the format for the changes to show up.</p>\r\n\t *\r\n\t *  <listing>\r\n\t *  var textField:TextField = new TextField(100, 30, \"Hello Starling\");\r\n\t *  textField.format.font = \"Arial\";\r\n\t *  textField.format.color = Color.RED;</listing>\r\n\t *\r\n\t *  @default Verdana, 12 pt, black, centered\r\n\t */\r\n\tprivate function get_format():TextFormat\r\n\t{\r\n\t\treturn _format;\r\n\t}\r\n\t\r\n\tprivate function set_format(value:TextFormat):TextFormat\r\n\t{\r\n\t\tif (value == null)\t\t\t throw new ArgumentError(\"format cannot be null\");\r\n\t\t_format.copyFrom(value);\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Draws a border around the edges of the text field. Useful for visual debugging.\r\n\t *  @default false */\r\n\tprivate function get_border():Bool\r\n\t{\r\n\t\treturn _border != null;\r\n\t}\r\n\t\r\n\tprivate function set_border(value:Bool):Bool\r\n\t{\r\n\t\tif (value && _border == null) \r\n\t\t{\r\n\t\t\t_border = new Sprite();\r\n\t\t\taddChild(_border);\r\n\t\t\t\r\n\t\t\tfor (i in 0...4){_border.addChild(new Quad(1.0, 1.0));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tupdateBorder();\r\n\t\t}\r\n\t\telse if (!value && _border != null) \r\n\t\t{\r\n\t\t\t_border.removeFromParent(true);\r\n\t\t\t_border = null;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates whether the font size is automatically reduced if the complete text does\r\n\t *  not fit into the TextField. @default false */\r\n\tprivate function get_autoScale():Bool\r\n\t{\r\n\t\treturn _options.autoScale;\r\n\t}\r\n\t\r\n\tprivate function set_autoScale(value:Bool):Bool\r\n\t{\r\n\t\tif (_options.autoScale != value) \r\n\t\t{\r\n\t\t\t_options.autoScale = value;\r\n\t\t\tsetRequiresRecomposition();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Specifies the type of auto-sizing the TextField will do.\r\n\t *  Note that any auto-sizing will implicitly deactivate all auto-scaling.\r\n\t *  @default none */\r\n\tprivate function get_autoSize():String\r\n\t{\r\n\t\treturn _autoSize;\r\n\t}\r\n\t\r\n\tprivate function set_autoSize(value:String):String\r\n\t{\r\n\t\tif (_autoSize != value) \r\n\t\t{\r\n\t\t\t_autoSize = value;\r\n\t\t\tsetRequiresRecomposition();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if the text should be wrapped at word boundaries if it does not fit into\r\n\t *  the TextField otherwise. @default true */\r\n\tprivate function get_wordWrap():Bool\r\n\t{\r\n\t\treturn _options.wordWrap;\r\n\t}\r\n\t\r\n\tprivate function set_wordWrap(value:Bool):Bool\r\n\t{\r\n\t\tif (value != _options.wordWrap) \r\n\t\t{\r\n\t\t\t_options.wordWrap = value;\r\n\t\t\tsetRequiresRecomposition();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if TextField should be batched on rendering.\r\n\t *\r\n\t *  <p>Only batchable meshes can profit from the render cache; but batching large meshes\r\n\t *  may take up a lot of CPU time. Thus, for large bitmap font text fields (i.e. many\r\n\t *  glyphs) that are constantly changing (i.e. can't use the render cache anyway), it\r\n\t *  makes sense to deactivate batching.</p>\r\n\t *\r\n\t *  @default true\r\n\t */\r\n\tprivate function get_batchable():Bool\r\n\t{\r\n\t\treturn _meshBatch.batchable;\r\n\t}\r\n\t\r\n\tprivate function set_batchable(value:Bool):Bool\r\n\t{\r\n\t\t_meshBatch.batchable = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if text should be interpreted as HTML code. For a description\r\n\t *  of the supported HTML subset, refer to the classic Flash 'TextField' documentation.\r\n\t *  Clickable hyperlinks and external images are not supported. Only works for\r\n\t *  TrueType fonts! @default false */\r\n\tprivate function get_isHtmlText():Bool\r\n\t{\r\n\t\treturn _options.isHtmlText;\r\n\t}\r\n\t\r\n\tprivate function set_isHtmlText(value:Bool):Bool\r\n\t{\r\n\t\tif (_options.isHtmlText != value) \r\n\t\t{\r\n\t\t\t_options.isHtmlText = value;\r\n\t\t\tsetRequiresRecomposition();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The Context3D texture format that is used for rendering of all TrueType texts.\r\n\t *  The default (<pre>Context3DTextureFormat.BGRA_PACKED</pre>) provides a good\r\n\t *  compromise between quality and memory consumption; use <pre>BGRA</pre> for\r\n\t *  the highest quality. */\r\n\tprivate static function get_defaultTextureFormat():Context3DTextureFormat {\r\n\t\treturn sDefaultTextureFormat;\r\n\t}\r\n\tprivate static function set_defaultTextureFormat(value:Context3DTextureFormat):Context3DTextureFormat\r\n\t{\r\n\t\tsDefaultTextureFormat = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Makes a bitmap font available at any TextField in the current stage3D context.\r\n\t *  The font is identified by its <code>name</code> (not case sensitive).\r\n\t *  Per default, the <code>name</code> property of the bitmap font will be used, but you\r\n\t *  can pass a custom name, as well. @return the name of the font. */\r\n\tpublic static function registerBitmapFont(bitmapFont:BitmapFont, name:String = null):String\r\n\t{\r\n\t\tif (name == null)\t\t\t name = bitmapFont.name;\r\n\t\tbitmapFonts.set(convertToLowerCase(name), bitmapFont);\r\n\t\treturn name;\r\n\t}\r\n\t\r\n\t/** Unregisters the bitmap font and, optionally, disposes it. */\r\n\tpublic static function unregisterBitmapFont(name:String, dispose:Bool = true):Void\r\n\t{\r\n\t\tname = convertToLowerCase(name);\r\n\t\t\r\n\t\tif (dispose && bitmapFonts.exists(name))\r\n\t\t\tcast(bitmapFonts.get(name), BitmapFont).dispose();\r\n\t\t\r\n\t\tbitmapFonts.remove(name);\r\n\t}\r\n\t\r\n\t/** Returns a registered bitmap font (or null, if the font has not been registered).\r\n\t *  The name is not case sensitive. */\r\n\tpublic static function getBitmapFont(name:String):BitmapFont\r\n\t{\r\n\t\treturn bitmapFonts.get(convertToLowerCase(name));\r\n\t}\r\n\t\r\n\t/** Stores the currently available bitmap fonts. Since a bitmap font will only work\r\n\t *  in one Stage3D context, they are saved in Starling's 'contextData' property. */\r\n\tprivate static function get_bitmapFonts():Map<String, Dynamic>\r\n\t{\r\n\t\tif (!Starling.Painter.sharedData.exists(BITMAP_FONT_DATA_NAME)) \r\n\t\t{\r\n\t\t\tStarling.Painter.sharedData.set(BITMAP_FONT_DATA_NAME, new Map<String, Dynamic>());\r\n\t\t}\r\n\t\t\r\n\t\treturn Starling.Painter.sharedData.get(BITMAP_FONT_DATA_NAME);\r\n\t}\r\n\t\r\n\t// optimization for 'toLowerCase' calls\r\n\t\r\n\tprivate static var sStringCache = new Map<String, String>();\r\n\t\r\n\tprivate static function convertToLowerCase(string:String):String\r\n\t{\r\n\t\tif (!sStringCache.exists(string))\r\n\t\t{\r\n\t\t\tsStringCache.set(string, string.toLowerCase());\r\n\t\t}\r\n\t\treturn sStringCache.get(string);\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.text;\r\n\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** This class is an enumeration of constant values used in setting the \r\n *  autoSize property of the TextField class. */\r\nclass TextFieldAutoSize\r\n{\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** No auto-sizing will happen. */\r\n\tpublic static var NONE:String = \"none\";\r\n\t\r\n\t/** The text field will grow to the right; no line-breaks will be added.\r\n\t *  The height of the text field remains unchanged. */\r\n\tpublic static var HORIZONTAL:String = \"horizontal\";\r\n\t\r\n\t/** The text field will grow to the bottom, adding line-breaks when necessary.\r\n\t  * The width of the text field remains unchanged. */\r\n\tpublic static var VERTICAL:String = \"vertical\";\r\n\t\r\n\t/** The text field will grow to the right and bottom; no line-breaks will be added. */\r\n\tpublic static var BOTH_DIRECTIONS:String = \"bothDirections\";\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.text;\r\n\r\nimport openfl.errors.ArgumentError;\r\n\r\nimport openfl.text.TextFormat;\r\n\r\nimport starling.events.Event;\r\nimport starling.events.EventDispatcher;\r\nimport starling.utils.Align;\r\n\r\n/** Dispatched when any property of the instance changes. */\r\n@:meta(Event(name=\"change\",type=\"starling.events.Event\"))\r\n\r\n\r\n/** The TextFormat class represents character formatting information. It is used by the\r\n *  TextField and BitmapFont classes to characterize the way the glyphs will be rendered.\r\n *\r\n *  <p>Note that not all properties are used by all font renderers: bitmap fonts ignore\r\n *  the \"bold\", \"italic\", and \"underline\" values.</p>\r\n */\r\nclass TextFormat extends EventDispatcher\r\n{\r\n\tpublic var font(get, set):String;\r\n\tpublic var size(get, set):Float;\r\n\tpublic var color(get, set):Int;\r\n\tpublic var bold(get, set):Bool;\r\n\tpublic var italic(get, set):Bool;\r\n\tpublic var underline(get, set):Bool;\r\n\tpublic var horizontalAlign(get, set):String;\r\n\tpublic var verticalAlign(get, set):String;\r\n\tpublic var kerning(get, set):Bool;\r\n\tpublic var leading(get, set):Float;\r\n\r\n\tprivate var _font:String;\r\n\tprivate var _size:Float;\r\n\tprivate var _color:Int;\r\n\tprivate var _bold:Bool;\r\n\tprivate var _italic:Bool;\r\n\tprivate var _underline:Bool;\r\n\tprivate var _horizontalAlign:String;\r\n\tprivate var _verticalAlign:String;\r\n\tprivate var _kerning:Bool;\r\n\tprivate var _leading:Float;\r\n\t\r\n\t/** Creates a new TextFormat instance with the given properties. */\r\n\tpublic function new(font:String = \"Verdana\", size:Float = 12, color:Int = 0x0,\r\n\t\t\thorizontalAlign:String = \"center\", verticalAlign:String = \"center\")\r\n\t{\r\n\t\tsuper();\r\n\t\t_font = font;\r\n\t\t_size = size;\r\n\t\t_color = color;\r\n\t\t_horizontalAlign = horizontalAlign;\r\n\t\t_verticalAlign = verticalAlign;\r\n\t\t_kerning = true;\r\n\t\t_leading = 0.0;\r\n\t}\r\n\t\r\n\t/** Copies all properties from another TextFormat instance. */\r\n\tpublic function copyFrom(format:starling.text.TextFormat):Void\r\n\t{\r\n\t\t_font = format._font;\r\n\t\t_size = format._size;\r\n\t\t_color = format._color;\r\n\t\t_bold = format._bold;\r\n\t\t_italic = format._italic;\r\n\t\t_underline = format._underline;\r\n\t\t_horizontalAlign = format._horizontalAlign;\r\n\t\t_verticalAlign = format._verticalAlign;\r\n\t\t_kerning = format._kerning;\r\n\t\t_leading = format._leading;\r\n\t\t\r\n\t\tdispatchEventWith(Event.CHANGE);\r\n\t}\r\n\t\r\n\t/** Creates a clone of this instance. */\r\n\tpublic function clone():starling.text.TextFormat\r\n\t{\r\n\t\tvar clone:starling.text.TextFormat = new starling.text.TextFormat();\r\n\t\tclone.copyFrom(this);\r\n\t\treturn clone;\r\n\t}\r\n\t\r\n\t/** Sets the most common properties at once. */\r\n\tpublic function setTo(font:String = \"Verdana\", size:Float = 12, color:Int = 0x0,\r\n\t\t\thorizontalAlign:String = \"center\", verticalAlign:String = \"center\"):Void\r\n\t{\r\n\t\t_font = font;\r\n\t\t_size = size;\r\n\t\t_color = color;\r\n\t\t_horizontalAlign = horizontalAlign;\r\n\t\t_verticalAlign = verticalAlign;\r\n\t\t\r\n\t\tdispatchEventWith(Event.CHANGE);\r\n\t}\r\n\t\r\n\t/** Converts the Starling TextFormat instance to a Flash TextFormat. */\r\n\tpublic function toNativeFormat(out:openfl.text.TextFormat = null):openfl.text.TextFormat\r\n\t{\r\n\t\tif (out == null) out = new openfl.text.TextFormat();\r\n\t\t\r\n\t\tout.font = _font;\r\n\t\tout.size = untyped _size;\r\n\t\tout.color = _color;\r\n\t\tout.bold = _bold;\r\n\t\tout.italic = _italic;\r\n\t\tout.underline = _underline;\r\n\t\tout.align = _horizontalAlign;\r\n\t\tout.kerning = _kerning;\r\n\t\tout.leading = untyped _leading;\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** The name of the font. TrueType fonts will be looked up from embedded fonts and\r\n\t *  system fonts; bitmap fonts must be registered at the TextField class first. */\r\n\tprivate function get_font():String\r\n\t{\r\n\t\treturn _font;\r\n\t}\r\n\t\r\n\tprivate function set_font(value:String):String\r\n\t{\r\n\t\tif (value != _font) \r\n\t\t{\r\n\t\t\t_font = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The size of the font. For bitmap fonts, use <code>BitmapFont.NATIVE_SIZE</code> for\r\n\t *  the original size. */\r\n\tprivate function get_size():Float\r\n\t{\r\n\t\treturn _size;\r\n\t}\r\n\t\r\n\tprivate function set_size(value:Float):Float\r\n\t{\r\n\t\tif (value != _size) \r\n\t\t{\r\n\t\t\t_size = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The color of the text. Note that bitmap fonts should be exported in plain white so\r\n\t *  that tinting works correctly. If your bitmap font contains colors, set this property\r\n\t *  to <code>Color.WHITE</code> to get the desired result. @default black */\r\n\tprivate function get_color():Int\r\n\t{\r\n\t\treturn _color;\r\n\t}\r\n\t\r\n\tprivate function set_color(value:Int):Int\r\n\t{\r\n\t\tif (value != _color) \r\n\t\t{\r\n\t\t\t_color = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates whether the text is bold. @default false */\r\n\tprivate function get_bold():Bool\r\n\t{\r\n\t\treturn _bold;\r\n\t}\r\n\t\r\n\tprivate function set_bold(value:Bool):Bool\r\n\t{\r\n\t\tif (value != _bold) \r\n\t\t{\r\n\t\t\t_bold = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates whether the text is italicized. @default false */\r\n\tprivate function get_italic():Bool\r\n\t{\r\n\t\treturn _italic;\r\n\t}\r\n\t\r\n\tprivate function set_italic(value:Bool):Bool\r\n\t{\r\n\t\tif (value != _italic) \r\n\t\t{\r\n\t\t\t_italic = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates whether the text is underlined. @default false */\r\n\tprivate function get_underline():Bool\r\n\t{\r\n\t\treturn _underline;\r\n\t}\r\n\t\r\n\tprivate function set_underline(value:Bool):Bool\r\n\t{\r\n\t\tif (value != _underline) \r\n\t\t{\r\n\t\t\t_underline = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The horizontal alignment of the text. @default center\r\n\t *  @see starling.utils.Align */\r\n\tprivate function get_horizontalAlign():String\r\n\t{\r\n\t\treturn _horizontalAlign;\r\n\t}\r\n\t\r\n\tprivate function set_horizontalAlign(value:String):String\r\n\t{\r\n\t\tif (!Align.isValidHorizontal(value)) \r\n\t\t\tthrow new ArgumentError(\"Invalid horizontal alignment\");\r\n\t\t\r\n\t\tif (value != _horizontalAlign) \r\n\t\t{\r\n\t\t\t_horizontalAlign = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The vertical alignment of the text. @default center\r\n\t *  @see starling.utils.Align */\r\n\tprivate function get_verticalAlign():String\r\n\t{\r\n\t\treturn _verticalAlign;\r\n\t}\r\n\t\r\n\tprivate function set_verticalAlign(value:String):String\r\n\t{\r\n\t\tif (!Align.isValidVertical(value)) \r\n\t\t\tthrow new ArgumentError(\"Invalid vertical alignment\");\r\n\t\t\r\n\t\tif (value != _verticalAlign) \r\n\t\t{\r\n\t\t\t_verticalAlign = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates whether kerning is enabled. Kerning adjusts the pixels between certain\r\n\t *  character pairs to improve readability. @default true */\r\n\tprivate function get_kerning():Bool\r\n\t{\r\n\t\treturn _kerning;\r\n\t}\r\n\t\r\n\tprivate function set_kerning(value:Bool):Bool\r\n\t{\r\n\t\tif (value != _kerning) \r\n\t\t{\r\n\t\t\t_kerning = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The amount of vertical space (called 'leading') between lines. @default 0 */\r\n\tprivate function get_leading():Float\r\n\t{\r\n\t\treturn _leading;\r\n\t}\r\n\t\r\n\tprivate function set_leading(value:Float):Float\r\n\t{\r\n\t\tif (value != _leading) \r\n\t\t{\r\n\t\t\t_leading = value;\r\n\t\t\tdispatchEventWith(Event.CHANGE);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.textures;\r\n\r\nimport openfl.errors.ArgumentError;\r\nimport openfl.errors.Error;\r\n\r\nimport openfl.display3D.Context3DTextureFormat;\r\nimport openfl.utils.ByteArray;\r\n\r\n/** A parser for the ATF data format. */\r\nclass AtfData\r\n{\r\n\tpublic var format(get, never):Context3DTextureFormat;\r\n\tpublic var width(get, never):Int;\r\n\tpublic var height(get, never):Int;\r\n\tpublic var numTextures(get, never):Int;\r\n\tpublic var isCubeMap(get, never):Bool;\r\n\tpublic var data(get, never):ByteArray;\r\n\r\n\tprivate var _format:Context3DTextureFormat;\r\n\tprivate var _width:Int;\r\n\tprivate var _height:Int;\r\n\tprivate var _numTextures:Int;\r\n\tprivate var _isCubeMap:Bool;\r\n\tprivate var _data:ByteArray;\r\n\t\r\n\t/** Create a new instance by parsing the given byte array. */\r\n\tpublic function new(data:ByteArray)\r\n\t{\r\n\t\tif (!isAtfData(data)) throw new ArgumentError(\"Invalid ATF data\");\r\n\t\t\r\n\t\tif (data[6] == 255)\tdata.position = 12\r\n\t\t// new file version\r\n\t\telse data.position = 6;  // old file version  \r\n\t\t\r\n\t\tvar format:Int = data.readUnsignedByte();\r\n\t\tvar _sw0_ = (format & 0x7f);\t\t\r\n\r\n\t\tswitch (_sw0_)\r\n\t\t{\r\n\t\t\tcase 0, 1:_format = Context3DTextureFormat.BGRA;\r\n\t\t\tcase 12, 2, 3:_format = Context3DTextureFormat.COMPRESSED;\r\n\t\t\tcase 13, 4, 5:_format = Context3DTextureFormat.COMPRESSED_ALPHA;  // explicit string for compatibility  \r\n\t\t\tdefault:throw new Error(\"Invalid ATF format\");\r\n\t\t}\r\n\t\t\r\n\t\t_width = untyped Math.pow(2, data.readUnsignedByte());\r\n\t\t_height = untyped Math.pow(2, data.readUnsignedByte());\r\n\t\t_numTextures = data.readUnsignedByte();\r\n\t\t_isCubeMap = (format & 0x80) != 0;\r\n\t\t_data = data;\r\n\t\t\r\n\t\t// version 2 of the new file format contains information about\r\n\t\t// the \"-e\" and \"-n\" parameters of png2atf\r\n\t\t\r\n\t\tif (data[5] != 0 && data[6] == 255) \r\n\t\t{\r\n\t\t\tvar emptyMipmaps:Bool = (data[5] & 0x01) == 1;\r\n\t\t\tvar numTextures:Int = data[5] >> 1 & 0x7f;\r\n\t\t\t_numTextures = (emptyMipmaps) ? 1:numTextures;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Checks the first 3 bytes of the data for the 'ATF' signature. */\r\n\tpublic static function isAtfData(data:ByteArray):Bool\r\n\t{\r\n\t\tif (data.length < 3) return false\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar signature:String = String.fromCharCode(data[0]);\r\n\t\t\tsignature += String.fromCharCode(data[1]);\r\n\t\t\tsignature += String.fromCharCode(data[2]);\r\n\t\t\treturn signature == \"ATF\";\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** The texture format. @see openfl.display3D.textures.Context3DTextureFormat */\r\n\tprivate function get_format():Context3DTextureFormat\r\n\t{\r\n\t\treturn _format;\r\n\t}\r\n\t\r\n\t/** The width of the texture in pixels. */\r\n\tprivate function get_width():Int\r\n\t{\r\n\t\treturn _width;\r\n\t}\r\n\t\r\n\t/** The height of the texture in pixels. */\r\n\tprivate function get_height():Int\r\n\t{\r\n\t\treturn _height;\r\n\t}\r\n\t\r\n\t/** The number of encoded textures. '1' means that there are no mip maps. */\r\n\tprivate function get_numTextures():Int\r\n\t{\r\n\t\treturn _numTextures;\r\n\t}\r\n\t\r\n\t/** Indicates if the ATF data encodes a cube map. Not supported by Starling! */\r\n\tprivate function get_isCubeMap():Bool\r\n\t{\r\n\t\treturn _isCubeMap;\r\n\t}\r\n\t\r\n\t/** The actual byte data, including header. */\r\n\tprivate function get_data():ByteArray\r\n\t{\r\n\t\treturn _data;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.textures;\r\n\r\n\r\nimport openfl.display3D.Context3DTextureFormat;\r\nimport haxe.Constraints.Function;\r\nimport starling.core.Starling;\r\n\r\n/** The TextureOptions class specifies options for loading textures with the\r\n *  <code>Texture.fromData</code> and <code>Texture.fromTextureBase</code> methods. */\r\nclass TextureOptions\r\n{\r\n\tpublic var scale(get, set):Float;\r\n\tpublic var format(get, set):Context3DTextureFormat;\r\n\tpublic var mipMapping(get, set):Bool;\r\n\tpublic var optimizeForRenderToTexture(get, set):Bool;\r\n\tpublic var onReady(get, set):Function;\r\n\tpublic var premultipliedAlpha(get, set):Bool;\r\n\r\n\tprivate var _scale:Float;\r\n\tprivate var _format:Context3DTextureFormat;\r\n\tprivate var _mipMapping:Bool;\r\n\tprivate var _optimizeForRenderToTexture:Bool = false;\r\n\tprivate var _premultipliedAlpha:Bool;\r\n\tprivate var _onReady:Function = null;\r\n\t\r\n\t/** Creates a new instance with the given options. */\r\n\tpublic function new(scale:Float = 1.0, mipMapping:Bool = false,\r\n\t\t\tformat:Context3DTextureFormat = null, premultipliedAlpha:Bool = true)\r\n\t{\r\n\t\tif (format == null) format = Context3DTextureFormat.BGRA;\r\n\t\t_scale = scale;\r\n\t\t_format = format;\r\n\t\t_mipMapping = mipMapping;\r\n\t\t_premultipliedAlpha = premultipliedAlpha;\r\n\t}\r\n\t\r\n\t/** Creates a clone of the TextureOptions object with the exact same properties. */\r\n\tpublic function clone():TextureOptions\r\n\t{\r\n\t\tvar clone:TextureOptions = new TextureOptions(_scale, _mipMapping, _format);\r\n\t\tclone._optimizeForRenderToTexture = _optimizeForRenderToTexture;\r\n\t\tclone._onReady = _onReady;\r\n\t\treturn clone;\r\n\t}\r\n\t\r\n\t/** The scale factor, which influences width and height properties. If you pass '-1',\r\n\t *  the current global content scale factor will be used. @default 1.0 */\r\n\tprivate function get_scale():Float\r\n\t{\r\n\t\treturn _scale;\r\n\t}\r\n\t\r\n\tprivate function set_scale(value:Float):Float\r\n\t{\r\n\t\t_scale = value > (0) ? value:Starling.ContentScaleFactor;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** The <code>Context3DTextureFormat</code> of the underlying texture data. Only used\r\n\t *  for textures that are created from Bitmaps; the format of ATF files is set when they\r\n\t *  are created. @default BGRA */\r\n\tprivate function get_format():Context3DTextureFormat\r\n\t{\r\n\t\treturn _format;\r\n\t}\r\n\t\r\n\tprivate function set_format(value:Context3DTextureFormat):Context3DTextureFormat\r\n\t{\r\n\t\t_format = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if the texture contains mip maps. @default false */\r\n\tprivate function get_mipMapping():Bool\r\n\t{\r\n\t\treturn _mipMapping;\r\n\t}\r\n\t\r\n\tprivate function set_mipMapping(value:Bool):Bool\r\n\t{\r\n\t\t_mipMapping = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if the texture will be used as render target. */\r\n\tprivate function get_optimizeForRenderToTexture():Bool\r\n\t{\r\n\t\treturn _optimizeForRenderToTexture;\r\n\t}\r\n\t\r\n\tprivate function set_optimizeForRenderToTexture(value:Bool):Bool\r\n\t{\r\n\t\t_optimizeForRenderToTexture = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** A callback that is used only for ATF textures; if it is set, the ATF data will be\r\n\t *  decoded asynchronously. The texture can only be used when the callback has been\r\n\t *  executed. This property is ignored for all other texture types (they are ready\r\n\t *  immediately when the 'Texture.from...' method returns, anyway), and it's only used\r\n\t *  by the <code>Texture.fromData</code> factory method.\r\n\t *  \r\n\t *  <p>This is the expected function definition: \r\n\t *  <code>function(texture:Texture):void;</code></p>\r\n\t *\r\n\t *  @default null\r\n\t */\r\n\tprivate function get_onReady():Function\r\n\t{\r\n\t\treturn _onReady;\r\n\t}\r\n\t\r\n\tprivate function set_onReady(value:Function):Function\r\n\t{\r\n\t\t_onReady = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if the alpha values are premultiplied into the RGB values. This is typically\r\n\t *  true for textures created from BitmapData and false for textures created from ATF data.\r\n\t *  This property will only be read by the <code>Texture.fromTextureBase</code> factory\r\n\t *  method. @default true */\r\n\tprivate function get_premultipliedAlpha():Bool\r\n\t{\r\n\t\treturn _premultipliedAlpha;\r\n\t}\r\n\t\r\n\tprivate function set_premultipliedAlpha(value:Bool):Bool\r\n\t{\r\n\t\t_premultipliedAlpha = value;\r\n\t\treturn value;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.textures;\r\n\r\nimport openfl.display3D.Context3DProfile;\r\nimport openfl.errors.ArgumentError;\r\nimport haxe.Constraints.Function;\r\nimport starling.textures.TextureOptions;\r\n\r\nimport openfl.display.Bitmap;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display3D.Context3D;\r\nimport openfl.display3D.Context3DTextureFormat;\r\nimport openfl.display3D.textures.RectangleTexture;\r\nimport openfl.display3D.textures.TextureBase;\r\n//import openfl.display3D.textures.VideoTexture;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\n//import openfl.media.Camera;\r\nimport openfl.net.NetStream;\r\nimport openfl.system.Capabilities;\r\nimport openfl.utils.ByteArray;\r\n\r\n\r\nimport starling.core.Starling;\r\nimport starling.errors.AbstractClassError;\r\nimport starling.errors.MissingContextError;\r\nimport starling.errors.NotSupportedError;\r\nimport starling.rendering.VertexData;\r\nimport starling.utils.MathUtil;\r\nimport starling.utils.MatrixUtil;\r\nimport starling.utils.SystemUtil;\r\n\r\n/** <p>A texture stores the information that represents an image. It cannot be added to the\r\n *  display list directly; instead it has to be mapped onto a display object. In Starling,\r\n *  the most probably candidate for this job is the <code>Image</code> class.</p>\r\n *\r\n *  <strong>Creating a texture</strong>\r\n *\r\n *  <p>The <code>Texture</code> class is abstract, i.e. you cannot create instance of this\r\n *  class through its constructor. Instead, it offers a variety of factory methods, like\r\n *  <code>fromBitmapData</code> or <code>fromEmbeddedAsset</code>.</p>\r\n *\r\n *  <strong>Texture Formats</strong>\r\n *\r\n *  <p>Since textures can be created from a \"BitmapData\" object, Starling supports any bitmap\r\n *  format that is supported by openfl. And since you can render any Flash display object into\r\n *  a BitmapData object, you can use this to display non-Starling content in Starling - e.g.\r\n *  Shape objects.</p>\r\n *\r\n *  <p>Starling also supports ATF textures (Adobe Texture Format), which is a container for\r\n *  compressed texture formats that can be rendered very efficiently by the GPU. Refer to\r\n *  the Flash documentation for more information about this format.</p>\r\n *\r\n *  <p>Beginning with AIR 17, you can use Starling textures to show video content (if the\r\n *  current platform supports it; see \"SystemUtil.supportsVideoTexture\").\r\n *  The two factory methods \"fromCamera\" and \"fromNetStream\" allow you to make use of\r\n *  this feature.</p>\r\n *\r\n *  <strong>Mip Mapping</strong>\r\n *\r\n *  <p>MipMaps are scaled down versions of a texture. When an image is displayed smaller than\r\n *  its natural size, the GPU may display the mip maps instead of the original texture. This\r\n *  reduces aliasing and accelerates rendering. It does, however, also need additional memory;\r\n *  for that reason, mipmapping is disabled by default.</p>\r\n *\r\n *  <strong>Texture Frame</strong>\r\n *\r\n *  <p>The frame property of a texture allows you to let a texture appear inside the bounds of\r\n *  an image, leaving a transparent border around the texture. The frame rectangle is specified\r\n *  in the coordinate system of the texture (not the image):</p>\r\n *\r\n *  <listing>\r\n *  var frame:Rectangle = new Rectangle(-10, -10, 30, 30);\r\n *  var texture:Texture = Texture.fromTexture(anotherTexture, null, frame);\r\n *  var image:Image = new Image(texture);</listing>\r\n *\r\n *  <p>This code would create an image with a size of 30x30, with the texture placed at\r\n *  <code>x=10, y=10</code> within that image (assuming that 'anotherTexture' has a width and\r\n *  height of 10 pixels, it would appear in the middle of the image).</p>\r\n *\r\n *  <p>The texture atlas makes use of this feature, as it allows to crop transparent edges\r\n *  of a texture and making up for the changed size by specifying the original texture frame.\r\n *  Tools like <a href=\"http://www.texturepacker.com/\">TexturePacker</a> use this to\r\n *  optimize the atlas.</p>\r\n *\r\n *  <strong>Texture Coordinates</strong>\r\n *\r\n *  <p>If, on the other hand, you want to show only a part of the texture in an image\r\n *  (i.e. to crop the the texture), you can either create a subtexture (with the method\r\n *  'Texture.fromTexture()' and specifying a rectangle for the region), or you can manipulate\r\n *  the texture coordinates of the image object. The method <code>image.setTexCoords</code>\r\n *  allows you to do that.</p>\r\n *\r\n *  <strong>Context Loss</strong>\r\n *\r\n *  <p>When the current rendering context is lost (which can happen on all platforms, but is\r\n *  especially common on Android and Windows), all texture data is destroyed. However,\r\n *  Starling will try to restore the textures. To do that, it will keep the bitmap\r\n *  and ATF data in memory - at the price of increased RAM consumption. You can optimize\r\n *  this behavior, though, by restoring the texture directly from its source, like in this\r\n *  example:</p>\r\n *\r\n *  <listing>\r\n *  var texture:Texture = Texture.fromBitmap(new EmbeddedBitmap());\r\n *  texture.root.onRestore = function():void\r\n *  {\r\n *\t  texture.root.uploadFromBitmap(new EmbeddedBitmap());\r\n *  };</listing>\r\n *\r\n *  <p>The <code>onRestore</code>-method will be called when the context was lost and the\r\n *  texture has been recreated (but is still empty). If you use the \"AssetManager\" class to\r\n *  manage your textures, this will be done automatically.</p>\r\n *\r\n *  @see starling.display.Image\r\n *  @see starling.utils.AssetManager\r\n *  @see starling.utils.SystemUtil\r\n *  @see TextureAtlas\r\n */\r\nclass Texture\r\n{\r\n\tstatic private var TEXTURE_READY:String = \"textureReady\"; // for backwards compatibility\r\n\t\r\n\tpublic var frame(get, never):Rectangle;\r\n\tpublic var frameWidth(get, never):Float;\r\n\tpublic var frameHeight(get, never):Float;\r\n\tpublic var width(get, never):Float;\r\n\tpublic var height(get, never):Float;\r\n\tpublic var nativeWidth(get, never):Float;\r\n\tpublic var nativeHeight(get, never):Float;\r\n\tpublic var scale(get, never):Float;\r\n\tpublic var base(get, never):TextureBase;\r\n\tpublic var root(get, never):ConcreteTexture;\r\n\tpublic var format(get, never):Context3DTextureFormat;\r\n\tpublic var mipMapping(get, never):Bool;\r\n\tpublic var premultipliedAlpha(get, never):Bool;\r\n\tpublic var transformationMatrix(get, never):Matrix;\r\n\tpublic var transformationMatrixToRoot(get, never):Matrix;\r\n\tpublic static var maxSize(get, never):Int;\r\n\r\n\t// helper objects\r\n\tprivate static var sDefaultOptions:TextureOptions = new TextureOptions();\r\n\tprivate static var sRectangle:Rectangle = new Rectangle();\r\n\tprivate static var sMatrix:Matrix = new Matrix();\r\n\tprivate static var sPoint:Point = new Point();\r\n\t\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{\r\n\t\tif (Capabilities.isDebugger &&\r\n\t\t\tType.getClassName(Type.getClass(this)) == \"starling.textures::Texture\") \r\n\t\t{\r\n\t\t\tthrow new AbstractClassError();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Disposes the underlying texture data. Note that not all textures need to be disposed:\r\n\t *  SubTextures (created with 'Texture.fromTexture') just reference other textures and\r\n\t *  and do not take up resources themselves; this is also true for textures from an\r\n\t *  atlas. */\r\n\tpublic function dispose():Void\r\n\t{\r\n\t\t// override in subclasses\r\n\t\t\r\n\t}\r\n\t\r\n\t/** Creates a texture from any of the supported data types, using the specified options.\r\n\t *\r\n\t *  @param data\t Either an embedded asset class, a Bitmap, BitmapData, or a ByteArray\r\n\t *\t\t\t\t  with ATF data.\r\n\t *  @param options  Specifies options about the texture settings, e.g. the scale factor.\r\n\t *\t\t\t\t  If left empty, the default options will be used.\r\n\t */\r\n\tpublic static function fromData(data:Dynamic, options:TextureOptions = null):Texture\r\n\t{\r\n\t\tif (Std.is(data, Bitmap)) data = cast(data, Bitmap).bitmapData;\r\n\t\tif (options == null) options = sDefaultOptions;\r\n\t\t\r\n\t\tif (Std.is(data, Class)) \r\n\t\t{\r\n\t\t\treturn fromEmbeddedAsset(Type.getClass(data),\r\n\t\t\t\t\toptions.mipMapping, options.optimizeForRenderToTexture,\r\n\t\t\t\t\toptions.scale, options.format);\r\n\t\t}\r\n\t\telse if (Std.is(data, BitmapData)) \r\n\t\t{\r\n\t\t\treturn fromBitmapData(cast(data, BitmapData),\r\n\t\t\t\t\toptions.mipMapping, options.optimizeForRenderToTexture,\r\n\t\t\t\t\toptions.scale, options.format);\r\n\t\t}\r\n\t\telse if (Std.is(data, ByteArrayData)) \r\n\t\t{\r\n\t\t\treturn fromAtfData(cast(data, ByteArrayData),\r\n\t\t\t\t\toptions.scale, options.mipMapping, options.onReady);\r\n\t\t}\r\n\t\telse \r\n\t\tthrow new ArgumentError(\"Unsupported 'data' type: \" + Type.getClassName(data));\r\n\t}\r\n\t\r\n\t/** Creates a texture from a <code>TextureBase</code> object.\r\n\t *\r\n\t *  @param base\t a Stage3D texture object created through the current context.\r\n\t *  @param width\tthe width of the texture in pixels (not points!).\r\n\t *  @param height   the height of the texture in pixels (not points!).\r\n\t *  @param options  specifies options about the texture settings, e.g. the scale factor.\r\n\t *\t\t\t\t  If left empty, the default options will be used. Note that not all\r\n\t *\t\t\t\t  options are supported by all texture types.\r\n\t */\r\n\tpublic static function fromTextureBase(base:TextureBase, width:Int, height:Int,\r\n\t\t\toptions:TextureOptions = null):ConcreteTexture\r\n\t{\r\n\t\tif (options == null)\t\t\t options = sDefaultOptions;\r\n\t\t\r\n\t\tif (Std.is(base, openfl.display3D.textures.Texture)) \r\n\t\t{\r\n\t\t\treturn new ConcretePotTexture(cast(base, openfl.display3D.textures.Texture), \r\n\t\t\toptions.format, width, height, options.mipMapping, \r\n\t\t\toptions.premultipliedAlpha, options.optimizeForRenderToTexture, \r\n\t\t\toptions.scale);\r\n\t\t}\r\n\t\telse if (Std.is(base, RectangleTexture)) \r\n\t\t{\r\n\t\t\treturn new ConcreteRectangleTexture(cast(base, RectangleTexture), \r\n\t\t\toptions.format, width, height, options.premultipliedAlpha, \r\n\t\t\toptions.optimizeForRenderToTexture, options.scale);\r\n\t\t}\r\n\t\t/*else if (Std.is(base, VideoTexture)) \r\n\t\t{\r\n\t\t\treturn new ConcreteVideoTexture(cast(base, VideoTexture), options.scale);\r\n\t\t}*/\r\n\t\telse \r\n\t\tthrow new ArgumentError(\"Unsupported 'base' type: \" + Type.getClassName(Type.getClass(base)));\r\n\t}\r\n\t\r\n\t/** Creates a texture object from an embedded asset class. Textures created with this\r\n\t *  method will be restored directly from the asset class in case of a context loss,\r\n\t *  which guarantees a very economic memory usage.\r\n\t *\r\n\t *  @param assetClass  must contain either a Bitmap or a ByteArray with ATF data.\r\n\t *  @param mipMapping  for Bitmaps, indicates if mipMaps will be created;\r\n\t *\t\t\t\t\t for ATF data, indicates if the contained mipMaps will be used.\r\n\t *  @param optimizeForRenderToTexture  indicates if this texture will be used as\r\n\t *\t\t\t\t\t render target\r\n\t *  @param scale\tthe scale factor of the created texture.\r\n\t *  @param format   the context3D texture format to use. Ignored for ATF data.\r\n\t */\r\n\tpublic static function fromEmbeddedAsset(assetClass:Class<Dynamic>, mipMapping:Bool = false,\r\n\t\t\toptimizeForRenderToTexture:Bool = false,\r\n\t\t\tscale:Float = 1, format:Context3DTextureFormat = null):Texture\r\n\t{\r\n\t\tif (format == null) format = Context3DTextureFormat.BGRA;\r\n\t\tvar texture:Texture;\r\n\t\tvar asset:Dynamic = Type.createInstance(assetClass, []);\r\n\t\t\r\n\t\tif (Std.is(asset, Bitmap)) \r\n\t\t{\r\n\t\t\ttexture = Texture.fromBitmap(cast(asset, Bitmap), mipMapping,\r\n\t\t\t\t\t\t\toptimizeForRenderToTexture, scale, format);\r\n\t\t\ttexture.root.onRestore = function():Void\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttexture.root.uploadBitmap(Type.createInstance(assetClass, []));\r\n\t\t\t\t\t};\r\n\t\t}\r\n\t\telse if (Std.is(asset, ByteArrayData)) \r\n\t\t{\r\n\t\t\ttexture = Texture.fromAtfData(cast(asset, ByteArrayData), scale, mipMapping, null);\r\n\t\t\ttexture.root.onRestore = function():Void\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttexture.root.uploadAtfData(Type.createInstance(assetClass, []));\r\n\t\t\t\t\t};\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tthrow new ArgumentError(\"Invalid asset type: \" + Type.getClassName(asset));\r\n\t\t}\r\n\t\t\r\n\t\tasset = null;  // avoid that object stays in memory (through 'onRestore' functions)  \r\n\t\treturn texture;\r\n\t}\r\n\t\r\n\t/** Creates a texture object from a bitmap.\r\n\t *  Beware: you must not dispose the bitmap's data if Starling should handle a lost device\r\n\t *  context alternatively, you can handle restoration yourself via \"texture.root.onRestore\".\r\n\t *\r\n\t *  @param bitmap   the texture will be created with the bitmap data of this object.\r\n\t *  @param generateMipMaps  indicates if mipMaps will be created.\r\n\t *  @param optimizeForRenderToTexture  indicates if this texture will be used as\r\n\t *\t\t\t\t  render target\r\n\t *  @param scale\tthe scale factor of the created texture. This affects the reported\r\n\t *\t\t\t\t  width and height of the texture object.\r\n\t *  @param format   the context3D texture format to use. Pass one of the packed or\r\n\t *\t\t\t\t  compressed formats to save memory (at the price of reduced image\r\n\t *\t\t\t\t  quality).\r\n\t */\r\n\tpublic static function fromBitmap(bitmap:Bitmap, generateMipMaps:Bool = false,\r\n\t\t\toptimizeForRenderToTexture:Bool = false,\r\n\t\t\tscale:Float = 1, format:Context3DTextureFormat = null):Texture\r\n\t{\r\n\t\tif (format == null) format = Context3DTextureFormat.BGRA;\r\n\t\treturn fromBitmapData(bitmap.bitmapData, generateMipMaps, optimizeForRenderToTexture,\r\n\t\t\t\tscale, format);\r\n\t}\r\n\t\r\n\t/** Creates a texture object from bitmap data.\r\n\t *  Beware: you must not dispose 'data' if Starling should handle a lost device context;\r\n\t *  alternatively, you can handle restoration yourself via \"texture.root.onRestore\".\r\n\t *\r\n\t *  @param data   the texture will be created with the bitmap data of this object.\r\n\t *  @param generateMipMaps  indicates if mipMaps will be created.\r\n\t *  @param optimizeForRenderToTexture  indicates if this texture will be used as\r\n\t *\t\t\t\t  render target\r\n\t *  @param scale\tthe scale factor of the created texture. This affects the reported\r\n\t *\t\t\t\t  width and height of the texture object.\r\n\t *  @param format   the context3D texture format to use. Pass one of the packed or\r\n\t *\t\t\t\t  compressed formats to save memory (at the price of reduced image\r\n\t *\t\t\t\t  quality).\r\n\t */\r\n\tpublic static function fromBitmapData(data:BitmapData, generateMipMaps:Bool = false,\r\n\t\t\toptimizeForRenderToTexture:Bool = false,\r\n\t\t\tscale:Float = 1, format:Context3DTextureFormat = null):Texture\r\n\t{\r\n\t\tif (format == null) format = Context3DTextureFormat.BGRA;\r\n\t\tvar texture:Texture = Texture.empty(data.width / scale, data.height / scale, true,\r\n\t\t\t\tgenerateMipMaps, optimizeForRenderToTexture, scale,\r\n\t\t\t\tformat);\r\n\t\t\r\n\t\ttexture.root.uploadBitmapData(data);\r\n\t\ttexture.root.onRestore = function():Void\r\n\t\t\t\t{\r\n\t\t\t\t\ttexture.root.uploadBitmapData(data);\r\n\t\t\t\t};\r\n\t\t\r\n\t\treturn texture;\r\n\t}\r\n\t\r\n\t/** Creates a texture from ATF data (Adobe Texture Compression).\r\n\t *  Beware: you must not dispose 'data' if Starling should handle a lost device context;\r\n\t *  alternatively, you can handle restoration yourself via \"texture.root.onRestore\".\r\n\t *\r\n\t *  @param data\t   the raw data from an ATF file.\r\n\t *  @param scale\t  the scale factor of the created texture. This affects the reported\r\n\t *\t\t\t\t\twidth and height of the texture object.\r\n\t *  @param useMipMaps If the ATF data contains mipmaps, this parameter controls if they\r\n\t *\t\t\t\t\tare used; if it does not, this parameter has no effect.\r\n\t *  @param async\t  If you pass a callback function, the texture will be decoded\r\n\t *\t\t\t\t\tasynchronously, which allows a smooth framerate even during the\r\n\t *\t\t\t\t\tloading process. However, don't use the texture before the callback\r\n\t *\t\t\t\t\thas been executed. This is the expected function definition:\r\n\t *\t\t\t\t\t<code>function(texture:Texture):void;</code>\r\n\t */\r\n\tpublic static function fromAtfData(data:ByteArray, scale:Float = 1, useMipMaps:Bool = true,\r\n\t\t\tasync:Function = null):Texture\r\n\t{\r\n\t\tvar context:Context3D = Starling.Context;\r\n\t\tif (context == null)\t\t\t throw new MissingContextError();\r\n\t\t\r\n\t\tvar atfData:AtfData = new AtfData(data);\r\n\t\tvar nativeTexture:openfl.display3D.textures.Texture = context.createTexture(\r\n\t\t\t\tatfData.width, atfData.height, atfData.format, false);\r\n\t\tvar concreteTexture:ConcreteTexture = new ConcretePotTexture(nativeTexture, \r\n\t\tatfData.format, atfData.width, atfData.height, useMipMaps && atfData.numTextures > 1, \r\n\t\tfalse, false, scale);\r\n\t\t\r\n\t\tconcreteTexture.uploadAtfData(data, 0, async);\r\n\t\tconcreteTexture.onRestore = function():Void\r\n\t\t\t\t{\r\n\t\t\t\t\tconcreteTexture.uploadAtfData(data, 0);\r\n\t\t\t\t};\r\n\t\t\r\n\t\treturn concreteTexture;\r\n\t}\r\n\t\r\n\t/** Creates a video texture from a NetStream.\r\n\t *\r\n\t *  <p>Below, you'll find  a minimal sample showing how to stream a video from a file.\r\n\t *  Note that <code>ns.play()</code> is called only after creating the texture, and\r\n\t *  outside the <code>onComplete</code>-callback. It's recommended to always make the\r\n\t *  calls in this order; otherwise, playback won't start on some platforms.</p>\r\n\t *\r\n\t *  <listing>\r\n\t *  var nc:NetConnection = new NetConnection();\r\n\t *  nc.connect(null);\r\n\t *  \r\n\t *  var ns:NetStream = new NetStream(nc);\r\n\t *  var texture:Texture = Texture.fromNetStream(ns, 1, function():void\r\n\t *  {\r\n\t *\t  addChild(new Image(texture));\r\n\t *  });\r\n\t *  \r\n\t *  var file:File = File.applicationDirectory.resolvePath(\"bugs-bunny.m4v\");\r\n\t *  ns.play(file.url);</listing>\r\n\t *\r\n\t *  @param stream  the NetStream from which the video data is streamed. Beware that 'play'\r\n\t *\t\t\t\t should be called only after the method returns, and outside the\r\n\t *\t\t\t\t <code>onComplete</code> callback.\r\n\t *  @param scale   the scale factor of the created texture. This affects the reported\r\n\t *\t\t\t\t width and height of the texture object.\r\n\t *  @param onComplete will be executed when the texture is ready. Contains a parameter\r\n\t *\t\t\t\t of type 'Texture'.\r\n\t */\r\n\t//public static function fromNetStream(stream:NetStream, scale:Float = 1,\r\n\t\t\t//onComplete:Function = null):Texture\r\n\t//{\r\n\t\t//// workaround for bug in NetStream class:\r\n\t\t//if (stream.client == stream && Reflect.getProperty(stream, \"onMetaData\") == null) \r\n\t\t////if (stream.client == stream && !(Lambda.has(stream, \"onMetaData\"))) \r\n\t\t\t//stream.client = {\r\n\t\t\t\t\t//onMetaData:function(md:Dynamic):Void{\r\n\t\t\t\t\t//}\r\n//\r\n\t\t\t\t//};\r\n\t\t//\r\n\t\t//return fromVideoAttachment(\"NetStream\", stream, scale, onComplete);\r\n\t//}\r\n\t\r\n\t/** Creates a video texture from a camera. Beware that the texture must not be used\r\n\t *  before the 'onComplete' callback has been executed; until then, it will have a size\r\n\t *  of zero pixels.\r\n\t *\r\n\t *  <p>Here is a minimal sample showing how to display a camera video:</p>\r\n\t *\r\n\t *  <listing>\r\n\t *  var camera:Camera = Camera.getCamera();\r\n\t *  var texture:Texture = Texture.fromCamera(camera, 1, function():void\r\n\t *  {\r\n\t *\t  addChild(new Image(texture));\r\n\t *  });</listing>\r\n\t *\r\n\t *  @param camera  the camera from which the video data is streamed.\r\n\t *  @param scale   the scale factor of the created texture. This affects the reported\r\n\t *\t\t\t\t width and height of the texture object.\r\n\t *  @param onComplete will be executed when the texture is ready. May contain a parameter\r\n\t *\t\t\t\t of type 'Texture'.\r\n\t */\r\n\t//public static function fromCamera(camera:Camera, scale:Float = 1,\r\n\t\t\t//onComplete:Function = null):Texture\r\n\t//{\r\n\t\t//return fromVideoAttachment(\"Camera\", camera, scale, onComplete);\r\n\t//}\r\n\t\r\n\t//private static function fromVideoAttachment(type:String, attachment:Dynamic,\r\n\t\t\t//scale:Float, onComplete:Function):Texture\r\n\t//{\r\n\t\t//if (!SystemUtil.supportsVideoTexture) \r\n\t\t\t//throw new NotSupportedError(\"Video Textures are not supported on this platform\");\r\n\t\t//\r\n\t\t//var context:Context3D = Starling.Context;\r\n\t\t//if (context == null)\t\t\t throw new MissingContextError();\r\n\t\t//\r\n\t\t//var base:VideoTexture = context.createVideoTexture();\r\n\t\t//var texture:ConcreteTexture = new ConcreteVideoTexture(base, scale);\r\n\t\t//texture.attachVideo(type, attachment, onComplete);\r\n\t\t//texture.onRestore = function():Void\r\n\t\t\t\t//{\r\n\t\t\t\t\t//texture.root.attachVideo(type, attachment);\r\n\t\t\t\t//};\r\n\t\t//\r\n\t\t//return texture;\r\n\t//}\r\n\t\r\n\t/** Creates a texture with a certain size and color.\r\n\t *\r\n\t *  @param width   in points; number of pixels depends on scale parameter\r\n\t *  @param height  in points; number of pixels depends on scale parameter\r\n\t *  @param color   the RGB color the texture will be filled up\r\n\t *  @param alpha   the alpha value that will be used for every pixel\r\n\t *  @param optimizeForRenderToTexture  indicates if this texture will be used as render target\r\n\t *  @param scale   if you omit this parameter, 'Starling.ContentScaleFactor' will be used.\r\n\t *  @param format  the context3D texture format to use. Pass one of the packed or\r\n\t *\t\t\t\t compressed formats to save memory.\r\n\t */\r\n\tpublic static function fromColor(width:Float, height:Float,\r\n\t\t\tcolor:Int = 0xffffff, alpha:Float = 1.0,\r\n\t\t\toptimizeForRenderToTexture:Bool = false,\r\n\t\t\tscale:Float = -1, format:Context3DTextureFormat = null):Texture\r\n\t{\r\n\t\tif (format == null) format = Context3DTextureFormat.BGRA;\r\n\t\tvar texture:Texture = Texture.empty(width, height, true, false,\r\n\t\t\t\toptimizeForRenderToTexture, scale, format);\r\n\t\ttexture.root.clear(color, alpha);\r\n\t\ttexture.root.onRestore = function():Void\r\n\t\t\t\t{\r\n\t\t\t\t\ttexture.root.clear(color, alpha);\r\n\t\t\t\t};\r\n\t\t\r\n\t\treturn texture;\r\n\t}\r\n\t\r\n\t/** Creates an empty texture of a certain size.\r\n\t *  Beware that the texture can only be used after you either upload some color data\r\n\t *  (\"texture.root.upload...\") or clear the texture (\"texture.root.clear()\").\r\n\t *\r\n\t *  @param width   in points; number of pixels depends on scale parameter\r\n\t *  @param height  in points; number of pixels depends on scale parameter\r\n\t *  @param premultipliedAlpha  the PMA format you will use the texture with. If you will\r\n\t *\t\t\t\t use the texture for bitmap data, use \"true\"; for ATF data, use \"false\".\r\n\t *  @param mipMapping  indicates if mipmaps should be used for this texture. When you upload\r\n\t *\t\t\t\t bitmap data, this decides if mipmaps will be created; when you upload ATF\r\n\t *\t\t\t\t data, this decides if mipmaps inside the ATF file will be displayed.\r\n\t *  @param optimizeForRenderToTexture  indicates if this texture will be used as render target\r\n\t *  @param scale   if you omit this parameter, 'Starling.ContentScaleFactor' will be used.\r\n\t *  @param format  the context3D texture format to use. Pass one of the packed or\r\n\t *\t\t\t\t compressed formats to save memory (at the price of reduced image quality).\r\n\t */\r\n\tpublic static function empty(width:Float, height:Float, premultipliedAlpha:Bool = true, mipMapping:Bool = false, optimizeForRenderToTexture:Bool = false, scale:Float = -1, format:Context3DTextureFormat=null):Texture\r\n\t{\r\n\t\tif (scale <= 0) scale = Starling.ContentScaleFactor;\r\n\t\tif (format == null) format = Context3DTextureFormat.BGRA;\r\n\t\t\r\n\t\tvar actualWidth:Int;\r\n\t\tvar actualHeight:Int;\r\n\t\tvar nativeTexture:TextureBase;\r\n\t\tvar concreteTexture:ConcreteTexture;\r\n\t\tvar context:Context3D = Starling.Context;\r\n\t\t\r\n\t\tif (context == null)\t\t\t throw new MissingContextError();\r\n\t\t\r\n\t\tvar origWidth:Float = width * scale;\r\n\t\tvar origHeight:Float = height * scale;\r\n\t\t\r\n\t\tvar formatStr:String = cast format;\r\n\t\tvar useRectTexture:Bool = !mipMapping && \r\n\t\t\tStarling.Current.profile != Context3DProfile.BASELINE_CONSTRAINED && \r\n\t\t\tformatStr.indexOf(\"compressed\") == -1;\r\n\t\t\r\n\t\tif (useRectTexture) \r\n\t\t{\r\n\t\t\tactualWidth = Math.ceil(origWidth - 0.000000001);  // avoid floating point errors  \r\n\t\t\tactualHeight = Math.ceil(origHeight - 0.000000001);\r\n\t\t\t\r\n\t\t\tnativeTexture = context.createRectangleTexture(\r\n\t\t\t\t\t\t\tactualWidth, actualHeight, format, optimizeForRenderToTexture);\r\n\t\t\t\r\n\t\t\tconcreteTexture = new ConcreteRectangleTexture(\r\n\t\t\t\t\tcast(nativeTexture, RectangleTexture), format, actualWidth, actualHeight, \r\n\t\t\t\t\tpremultipliedAlpha, optimizeForRenderToTexture, scale);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tactualWidth = MathUtil.getNextPowerOfTwo(cast origWidth);\r\n\t\t\tactualHeight = MathUtil.getNextPowerOfTwo(cast origHeight);\r\n\t\t\t\r\n\t\t\tnativeTexture = context.createTexture(\r\n\t\t\t\t\t\t\tactualWidth, actualHeight, format, optimizeForRenderToTexture);\r\n\t\t\t\r\n\t\t\tconcreteTexture = new ConcretePotTexture(\r\n\t\t\t\t\tcast(nativeTexture, openfl.display3D.textures.Texture), format, \r\n\t\t\t\t\tactualWidth, actualHeight, mipMapping, premultipliedAlpha, \r\n\t\t\t\t\toptimizeForRenderToTexture, scale);\r\n\t\t}\r\n\t\t\r\n\t\tconcreteTexture.onRestore = concreteTexture.clear;\r\n\t\t\r\n\t\tif (actualWidth - origWidth < 0.001 && actualHeight - origHeight < 0.001) \r\n\t\t\treturn concreteTexture\r\n\t\telse \r\n\t\treturn new SubTexture(concreteTexture, new Rectangle(0, 0, width, height), true);\r\n\t}\r\n\t\r\n\t/** Creates a texture that contains a region (in pixels) of another texture. The new\r\n\t *  texture will reference the base texture; no data is duplicated.\r\n\t *\r\n\t *  @param texture  The texture you want to create a SubTexture from.\r\n\t *  @param region   The region of the parent texture that the SubTexture will show\r\n\t *\t\t\t\t  (in points).\r\n\t *  @param frame\tIf the texture was trimmed, the frame rectangle can be used to restore\r\n\t *\t\t\t\t  the trimmed area.\r\n\t *  @param rotated  If true, the SubTexture will show the parent region rotated by\r\n\t *\t\t\t\t  90 degrees (CCW).\r\n\t */\r\n\tpublic static function fromTexture(texture:Texture, region:Rectangle = null,\r\n\t\t\tframe:Rectangle = null, rotated:Bool = false):Texture\r\n\t{\r\n\t\treturn new SubTexture(texture, region, false, frame, rotated);\r\n\t}\r\n\t\r\n\t/** Sets up a VertexData instance with the correct positions for 4 vertices so that\r\n\t *  the texture can be mapped onto it unscaled. If the texture has a <code>frame</code>,\r\n\t *  the vertices will be offset accordingly.\r\n\t *\r\n\t *  @param vertexData  the VertexData instance to which the positions will be written.\r\n\t *  @param vertexID\tthe start position within the VertexData instance.\r\n\t *  @param attrName\tthe attribute name referencing the vertex positions.\r\n\t *  @param bounds\t  useful only for textures with a frame. This will position the\r\n\t *\t\t\t\t\t vertices at the correct position within the given bounds,\r\n\t *\t\t\t\t\t distorted appropriately.\r\n\t */\r\n\tpublic function setupVertexPositions(vertexData:VertexData, vertexID:Int = 0,\r\n\t\t\tattrName:String = \"position\",\r\n\t\t\tbounds:Rectangle = null):Void\r\n\t{\r\n\t\tvar frame:Rectangle = this.frame;\r\n\t\tvar width:Float = this.width;\r\n\t\tvar height:Float = this.height;\r\n\t\t\r\n\t\tif (frame != null) \r\n\t\t\tsRectangle.setTo(-frame.x, -frame.y, width, height)\r\n\t\telse \r\n\t\tsRectangle.setTo(0, 0, width, height);\r\n\t\t\r\n\t\tvertexData.setPoint(vertexID, attrName, sRectangle.left, sRectangle.top);\r\n\t\tvertexData.setPoint(vertexID + 1, attrName, sRectangle.right, sRectangle.top);\r\n\t\tvertexData.setPoint(vertexID + 2, attrName, sRectangle.left, sRectangle.bottom);\r\n\t\tvertexData.setPoint(vertexID + 3, attrName, sRectangle.right, sRectangle.bottom);\r\n\t\t\r\n\t\tif (bounds != null) \r\n\t\t{\r\n\t\t\tvar scaleX:Float = bounds.width / frameWidth;\r\n\t\t\tvar scaleY:Float = bounds.height / frameHeight;\r\n\t\t\t\r\n\t\t\tif (scaleX != 1.0 || scaleY != 1.0) \r\n\t\t\t{\r\n\t\t\t\tsMatrix.identity();\r\n\t\t\t\tsMatrix.scale(scaleX, scaleY);\r\n\t\t\t\tsMatrix.translate(bounds.x, bounds.y);\r\n\t\t\t\tvertexData.transformPoints(attrName, sMatrix, vertexID, 4);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Sets up a VertexData instance with the correct texture coordinates for\r\n\t *  4 vertices so that the texture is mapped to the complete quad.\r\n\t *\r\n\t *  @param vertexData  the vertex data to which the texture coordinates will be written.\r\n\t *  @param vertexID\tthe start position within the VertexData instance.\r\n\t *  @param attrName\tthe attribute name referencing the vertex positions.\r\n\t */\r\n\tpublic function setupTextureCoordinates(vertexData:VertexData, vertexID:Int = 0,\r\n\t\t\tattrName:String = \"texCoords\"):Void\r\n\t{\r\n\t\tsetTexCoords(vertexData, vertexID, attrName, 0.0, 0.0);\r\n\t\tsetTexCoords(vertexData, vertexID + 1, attrName, 1.0, 0.0);\r\n\t\tsetTexCoords(vertexData, vertexID + 2, attrName, 0.0, 1.0);\r\n\t\tsetTexCoords(vertexData, vertexID + 3, attrName, 1.0, 1.0);\r\n\t}\r\n\t\r\n\t/** Transforms the given texture coordinates from the local coordinate system\r\n\t *  into the root texture's coordinate system. */\r\n\tpublic function localToGlobal(u:Float, v:Float, out:Point = null):Point\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Point();\r\n\t\tif (this == root)\t\t\t out.setTo(u, v)\r\n\t\telse MatrixUtil.transformCoords(transformationMatrixToRoot, u, v, out);\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Transforms the given texture coordinates from the root texture's coordinate system\r\n\t *  to the local coordinate system. */\r\n\tpublic function globalToLocal(u:Float, v:Float, out:Point = null):Point\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Point();\r\n\t\tif (this == root)\t\t\t out.setTo(u, v)\r\n\t\telse \r\n\t\t{\r\n\t\t\tsMatrix.identity();\r\n\t\t\tsMatrix.copyFrom(transformationMatrixToRoot);\r\n\t\t\tsMatrix.invert();\r\n\t\t\tMatrixUtil.transformCoords(sMatrix, u, v, out);\r\n\t\t}\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Writes the given texture coordinates to a VertexData instance after transforming\r\n\t *  them into the root texture's coordinate system. That way, the texture coordinates\r\n\t *  can be used directly to sample the texture in the fragment shader. */\r\n\tpublic function setTexCoords(vertexData:VertexData, vertexID:Int, attrName:String,\r\n\t\t\tu:Float, v:Float):Void\r\n\t{\r\n\t\tlocalToGlobal(u, v, sPoint);\r\n\t\tvertexData.setPoint(vertexID, attrName, sPoint.x, sPoint.y);\r\n\t}\r\n\t\r\n\t/** Reads a pair of texture coordinates from the given VertexData instance and transforms\r\n\t *  them into the current texture's coordinate system. (Remember, the VertexData instance\r\n\t *  will always contain the coordinates in the root texture's coordinate system!) */\r\n\tpublic function getTexCoords(vertexData:VertexData, vertexID:Int,\r\n\t\t\tattrName:String = \"texCoords\", out:Point = null):Point\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Point();\r\n\t\tvertexData.getPoint(vertexID, attrName, out);\r\n\t\treturn globalToLocal(out.x, out.y, out);\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** The texture frame if it has one (see class description), otherwise <code>null</code>.\r\n\t *  <p>CAUTION: not a copy, but the actual object! Do not modify!</p> */\r\n\tprivate function get_frame():Rectangle {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/** The height of the texture in points, taking into account the frame rectangle\r\n\t *  (if there is one). */\r\n\tprivate function get_frameWidth():Float {\r\n\t\treturn (frame != null) ? frame.width:width;\r\n\t}\r\n\t\r\n\t/** The width of the texture in points, taking into account the frame rectangle\r\n\t *  (if there is one). */\r\n\tprivate function get_frameHeight():Float {\r\n\t\treturn (frame != null) ? frame.height:height;\r\n\t}\r\n\t\r\n\t/** The width of the texture in points. */\r\n\tprivate function get_width():Float {\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\t/** The height of the texture in points. */\r\n\tprivate function get_height():Float {\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\t/** The width of the texture in pixels (without scale adjustment). */\r\n\tprivate function get_nativeWidth():Float {\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\t/** The height of the texture in pixels (without scale adjustment). */\r\n\tprivate function get_nativeHeight():Float {\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\t/** The scale factor, which influences width and height properties. */\r\n\tprivate function get_scale():Float {\r\n\t\treturn 1.0;\r\n\t}\r\n\t\r\n\t/** The Stage3D texture object the texture is based on. */\r\n\tprivate function get_base():TextureBase {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/** The concrete texture the texture is based on. */\r\n\tprivate function get_root():ConcreteTexture {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/** The <code>Context3DTextureFormat</code> of the underlying texture data. */\r\n\tprivate function get_format():Context3DTextureFormat {\r\n\t\treturn Context3DTextureFormat.BGRA;\r\n\t}\r\n\t\r\n\t/** Indicates if the texture contains mip maps. */\r\n\tprivate function get_mipMapping():Bool {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/** Indicates if the alpha values are premultiplied into the RGB values. */\r\n\tprivate function get_premultipliedAlpha():Bool {\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/** The matrix that is used to transform the texture coordinates into the coordinate\r\n\t *  space of the parent texture, if there is one. @default null\r\n\t *\r\n\t *  <p>CAUTION: not a copy, but the actual object! Never modify this matrix!</p> */\r\n\tprivate function get_transformationMatrix():Matrix {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/** The matrix that is used to transform the texture coordinates into the coordinate\r\n\t *  space of the root texture, if this instance is not the root. @default null\r\n\t *\r\n\t *  <p>CAUTION: not a copy, but the actual object! Never modify this matrix!</p> */\r\n\tprivate function get_transformationMatrixToRoot():Matrix {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/** Returns the maximum size constraint (for both width and height) for textures in the\r\n\t *  current Context3D profile. */\r\n\tprivate static function get_maxSize():Int\r\n\t{\r\n\t\tvar target:Starling = Starling.Current;\r\n\t\tvar profile:Context3DProfile = (target != null) ? target.profile:Context3DProfile.BASELINE;\r\n\t\t\r\n\t\tif (profile == Context3DProfile.BASELINE || profile == Context3DProfile.BASELINE_CONSTRAINED) \r\n\t\t\treturn 2048\r\n\t\telse \r\n\t\treturn 4096;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.textures;\r\n\r\nimport openfl.display3D.Context3DTextureFormat;\r\nimport openfl.errors.Error;\r\nimport haxe.Constraints.Function;\r\nimport starling.textures.Texture;\r\n\r\nimport openfl.display.Bitmap;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display3D.textures.TextureBase;\r\n//import openfl.media.Camera;\r\nimport openfl.net.NetStream;\r\nimport openfl.system.Capabilities;\r\nimport openfl.utils.ByteArray;\r\n\r\n\r\nimport starling.core.Starling;\r\nimport starling.errors.AbstractClassError;\r\nimport starling.errors.AbstractMethodError;\r\nimport starling.errors.NotSupportedError;\r\nimport starling.events.Event;\r\nimport starling.rendering.Painter;\r\nimport starling.utils.Color;\r\nimport starling.utils.Execute;\r\n\r\n/** A ConcreteTexture wraps a Stage3D texture object, storing the properties of the texture\r\n *  and providing utility methods for data upload, etc.\r\n *\r\n *  <p>This class cannot be instantiated directly; create instances using\r\n *  <code>Texture.fromTextureBase</code> instead. However, that's only necessary when\r\n *  you need to wrap a <code>TextureBase</code> object in a Starling texture;\r\n *  the preferred way of creating textures is to use one of the other\r\n *  <code>Texture.from...</code> factory methods in the <code>Texture</code> class.</p>\r\n *\r\n *  @see Texture\r\n */\r\nclass ConcreteTexture extends Texture\r\n{\r\n\tpublic var optimizedForRenderTexture(get, never):Bool;\r\n\tpublic var onRestore(get, set):Function;\r\n\r\n\tprivate var _base:TextureBase;\r\n\tprivate var _format:Context3DTextureFormat;\r\n\tprivate var _width:Int;\r\n\tprivate var _height:Int;\r\n\tprivate var _mipMapping:Bool;\r\n\tprivate var _premultipliedAlpha:Bool;\r\n\tprivate var _optimizedForRenderTexture:Bool;\r\n\tprivate var _scale:Float;\r\n\tprivate var _onRestore:Function;\r\n\tprivate var _dataUploaded:Bool;\r\n\t\r\n\t/** @private\r\n\t *\r\n\t *  Creates a ConcreteTexture object from a TextureBase, storing information about size,\r\n\t *  mip-mapping, and if the channels contain premultiplied alpha values. May only be\r\n\t *  called from subclasses.\r\n\t *\r\n\t *  <p>Note that <code>width</code> and <code>height</code> are expected in pixels,\r\n\t *  i.e. they do not take the scale factor into account.</p>\r\n\t */\r\n\tpublic function new(base:TextureBase, format:Context3DTextureFormat, width:Int, height:Int,\r\n\t\t\tmipMapping:Bool, premultipliedAlpha:Bool,\r\n\t\t\toptimizedForRenderTexture:Bool = false, scale:Float = 1)\r\n\t{\r\n\t\tsuper();\r\n\t\tif (Capabilities.isDebugger &&\r\n\t\t\tType.getClassName(Type.getClass(this)) == \"starling.textures::ConcreteTexture\") \r\n\t\t{\r\n\t\t\tthrow new AbstractClassError();\r\n\t\t}\r\n\t\t\r\n\t\t_scale = scale <= (0) ? 1.0:scale;\r\n\t\t_base = base;\r\n\t\t_format = format;\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\t\t_mipMapping = mipMapping;\r\n\t\t_premultipliedAlpha = premultipliedAlpha;\r\n\t\t_optimizedForRenderTexture = optimizedForRenderTexture;\r\n\t\t_onRestore = null;\r\n\t\t_dataUploaded = false;\r\n\t}\r\n\t\r\n\t/** Disposes the TextureBase object. */\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\tif (_base != null)\t\t\t _base.dispose();\r\n\t\t\r\n\t\tthis.onRestore = null;  // removes event listener  \r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t// texture data upload\r\n\t\r\n\t/** Uploads a bitmap to the texture. The existing contents will be replaced.\r\n\t *  If the size of the bitmap does not match the size of the texture, the bitmap will be\r\n\t *  cropped or filled up with transparent pixels */\r\n\tpublic function uploadBitmap(bitmap:Bitmap):Void\r\n\t{\r\n\t\tuploadBitmapData(bitmap.bitmapData);\r\n\t}\r\n\t\r\n\t/** Uploads bitmap data to the texture. The existing contents will be replaced.\r\n\t *  If the size of the bitmap does not match the size of the texture, the bitmap will be\r\n\t *  cropped or filled up with transparent pixels */\r\n\tpublic function uploadBitmapData(data:BitmapData):Void\r\n\t{\r\n\t\tthrow new NotSupportedError();\r\n\t}\r\n\t\r\n\t/** Uploads ATF data from a ByteArray to the texture. Note that the size of the\r\n\t *  ATF-encoded data must be exactly the same as the original texture size.\r\n\t *  \r\n\t *  <p>The 'async' parameter may be either a boolean value or a callback function.\r\n\t *  If it's <code>false</code> or <code>null</code>, the texture will be decoded\r\n\t *  synchronously and will be visible right away. If it's <code>true</code> or a function,\r\n\t *  the data will be decoded asynchronously. The texture will remain unchanged until the\r\n\t *  upload is complete, at which time the callback function will be executed. This is the\r\n\t *  expected function definition: <code>function(texture:Texture):void;</code></p>\r\n\t */\r\n\tpublic function uploadAtfData(data:ByteArray, offset:Int = 0, async:Dynamic = null):Void\r\n\t{\r\n\t\tthrow new NotSupportedError();\r\n\t}\r\n\t\r\n\t/** Specifies a video stream to be rendered within the texture. */\r\n\tpublic function attachNetStream(netStream:NetStream, onComplete:Function = null):Void\r\n\t{\r\n\t\tattachVideo(\"NetStream\", netStream, onComplete);\r\n\t}\r\n\t\r\n\t/** Specifies a video stream from a camera to be rendered within the texture. */\r\n\t//public function attachCamera(camera:Camera, onComplete:Function = null):Void\r\n\t//{\r\n\t\t//attachVideo(\"Camera\", camera, onComplete);\r\n\t//}\r\n\t\r\n\t/** @private */\r\n\t@:allow(starling.textures)\r\n\tprivate function attachVideo(type:String, attachment:Dynamic, onComplete:Function = null):Void\r\n\t{\r\n\t\tthrow new NotSupportedError();\r\n\t}\r\n\t\r\n\t// texture backup (context loss)\r\n\t\r\n\tprivate function onContextCreated():Void\r\n\t{\r\n\t\t_dataUploaded = false;\r\n\t\t_base = createBase();  // recreate the underlying texture  \r\n\t\tExecute.call(_onRestore, [this]);  // restore contents  \r\n\t\t\r\n\t\t// if no texture has been uploaded above, we init the texture with transparent pixels.\r\n\t\tif (!_dataUploaded)\t\t\t clear();\r\n\t}\r\n\t\r\n\t/** Recreates the underlying Stage3D texture object with the same dimensions and attributes\r\n\t *  as the one that was passed to the constructor. You have to upload new data before the\r\n\t *  texture becomes usable again. Beware: this method does <strong>not</strong> dispose\r\n\t *  the current base. */\r\n\tprivate function createBase():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\t\r\n\t/** Clears the texture with a certain color and alpha value. The previous contents of the\r\n\t *  texture is wiped out. */\r\n\tpublic function clear(color:Int = 0x0, alpha:Float = 0.0):Void\r\n\t{\r\n\t\tif (_premultipliedAlpha && alpha < 1.0) \r\n\t\t\tcolor = Color.rgb(\r\n\t\t\t\tuntyped Color.getRed(color) * alpha,\r\n\t\t\t\tuntyped Color.getGreen(color) * alpha,\r\n\t\t\t\tuntyped Color.getBlue(color) * alpha\r\n\t\t\t);\r\n\t\t\r\n\t\tvar painter:Painter = Starling.Painter;\r\n\t\tpainter.pushState();\r\n\t\tpainter.state.renderTarget = this;\r\n\t\t\r\n\t\t// we wrap the clear call in a try/catch block as a workaround for a problem of\r\n\t\t// FP 11.8 plugin/projector: calling clear on a compressed texture doesn't work there\r\n\t\t// (while it *does* work on iOS + Android).\r\n\t\t\r\n\t\ttry{painter.clear(color, alpha);\r\n\t\t}\t\tcatch (e:Error){ };\r\n\t\t\r\n\t\tpainter.popState();\r\n\t\tsetDataUploaded();\r\n\t}\r\n\t\r\n\t/** Notifies the instance that the base texture may now be used for rendering. */\r\n\tprivate function setDataUploaded():Void\r\n\t{\r\n\t\t_dataUploaded = true;\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** Indicates if the base texture was optimized for being used in a render texture. */\r\n\tprivate function get_optimizedForRenderTexture():Bool\r\n\t{\r\n\t\treturn _optimizedForRenderTexture;\r\n\t}\r\n\t\r\n\t/** The function that you provide here will be called after a context loss.\r\n\t *  On execution, a new base texture will already have been created; however,\r\n\t *  it will be empty. Call one of the \"upload...\" methods from within the callback\r\n\t *  to restore the actual texture data.\r\n\t *\r\n\t *  <listing>\r\n\t *  var texture:Texture = Texture.fromBitmap(new EmbeddedBitmap());\r\n\t *  texture.root.onRestore = function():void\r\n\t *  {\r\n\t *\t  texture.root.uploadFromBitmap(new EmbeddedBitmap());\r\n\t *  };</listing>\r\n\t */\r\n\tprivate function get_onRestore():Function\r\n\t{\r\n\t\treturn _onRestore;\r\n\t}\r\n\t\r\n\tprivate function set_onRestore(value:Function):Function\r\n\t{\r\n\t\tStarling.Current.removeEventListener(Event.CONTEXT3D_CREATE, onContextCreated);\r\n\t\t\r\n\t\tif (value != null) \r\n\t\t{\r\n\t\t\t_onRestore = value;\r\n\t\t\tStarling.Current.addEventListener(Event.CONTEXT3D_CREATE, onContextCreated);\r\n\t\t}\r\n\t\telse _onRestore = null;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_base():TextureBase\r\n\t{\r\n\t\treturn _base;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_root():ConcreteTexture\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_format():Context3DTextureFormat\r\n\t{\r\n\t\treturn _format;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_width():Float\r\n\t{\r\n\t\treturn _width / _scale;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_height():Float\r\n\t{\r\n\t\treturn _height / _scale;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_nativeWidth():Float\r\n\t{\r\n\t\treturn _width;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_nativeHeight():Float\r\n\t{\r\n\t\treturn _height;\r\n\t}\r\n\t\r\n\t/** The scale factor, which influences width and height properties. */\r\n\toverride private function get_scale():Float\r\n\t{\r\n\t\treturn _scale;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_mipMapping():Bool\r\n\t{\r\n\t\treturn _mipMapping;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_premultipliedAlpha():Bool\r\n\t{\r\n\t\treturn _premultipliedAlpha;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.textures;\r\n\r\nimport openfl.display3D.Context3DTextureFormat;\r\nimport openfl.errors.ArgumentError;\r\nimport haxe.Constraints.Function;\r\nimport starling.textures.ConcreteTexture;\r\n\r\nimport openfl.display.BitmapData;\r\nimport openfl.display3D.textures.TextureBase;\r\nimport openfl.events.Event;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.utils.ByteArray;\r\n\r\nimport starling.core.Starling;\r\nimport starling.utils.MathUtil;\r\nimport starling.utils.Execute;\r\n\r\n/** @private\r\n *\r\n *  A concrete texture that wraps a <code>Texture</code> base.\r\n *  For internal use only. */\r\nclass ConcretePotTexture extends ConcreteTexture\r\n{\r\n\tprivate var potBase(get, never):openfl.display3D.textures.Texture;\r\n\r\n\tprivate var _textureReadyCallback:Function;\r\n\t\r\n\tprivate static var sMatrix:Matrix = new Matrix();\r\n\tprivate static var sRectangle:Rectangle = new Rectangle();\r\n\tprivate static var sOrigin:Point = new Point();\r\n\t\r\n\t/** Creates a new instance with the given parameters. */\r\n\t@:allow(starling.textures)\r\n\tprivate function new(base:openfl.display3D.textures.Texture, format:Context3DTextureFormat,\r\n\t\t\twidth:Int, height:Int, mipMapping:Bool,\r\n\t\t\tpremultipliedAlpha:Bool,\r\n\t\t\toptimizedForRenderTexture:Bool = false, scale:Float = 1)\r\n\t{\r\n\t\tsuper(base, format, width, height, mipMapping, premultipliedAlpha,\r\n\t\t\t\toptimizedForRenderTexture, scale);\r\n\t\t\r\n\t\tif (width != MathUtil.getNextPowerOfTwo(width)) \r\n\t\t\tthrow new ArgumentError(\"width must be a power of two\");\r\n\t\t\r\n\t\tif (height != MathUtil.getNextPowerOfTwo(height)) \r\n\t\t\tthrow new ArgumentError(\"height must be a power of two\");\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\tbase.removeEventListener(Texture.TEXTURE_READY, onTextureReady);\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function createBase():TextureBase\r\n\t{\r\n\t\treturn Starling.Context.createTexture(\r\n\t\t\t\tuntyped nativeWidth, untyped nativeHeight, format, optimizedForRenderTexture);\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function uploadBitmapData(data:BitmapData):Void\r\n\t{\r\n\t\tpotBase.uploadFromBitmapData(data);\r\n\t\t\r\n\t\tvar buffer:BitmapData = null;\r\n\t\t\r\n\t\tif (data.width != nativeWidth || data.height != nativeHeight) \r\n\t\t{\r\n\t\t\tbuffer = new BitmapData(untyped nativeWidth, untyped nativeHeight, true, 0);\r\n\t\t\tbuffer.copyPixels(data, data.rect, sOrigin);\r\n\t\t\tdata = buffer;\r\n\t\t}\r\n\t\t\r\n\t\tif (mipMapping && data.width > 1 && data.height > 1) \r\n\t\t{\r\n\t\t\tvar currentWidth:Int = data.width >> 1;\r\n\t\t\tvar currentHeight:Int = data.height >> 1;\r\n\t\t\tvar level:Int = 1;\r\n\t\t\tvar canvas:BitmapData = new BitmapData(currentWidth, currentHeight, true, 0);\r\n\t\t\tvar bounds:Rectangle = sRectangle;\r\n\t\t\tvar matrix:Matrix = sMatrix;\r\n\t\t\tmatrix.setTo(0.5, 0.0, 0.0, 0.5, 0.0, 0.0);\r\n\t\t\t\r\n\t\t\twhile (currentWidth >= 1 || currentHeight >= 1)\r\n\t\t\t{\r\n\t\t\t\tbounds.setTo(0, 0, currentWidth, currentHeight);\r\n\t\t\t\tcanvas.fillRect(bounds, 0);\r\n\t\t\t\tcanvas.draw(data, matrix, null, null, null, true);\r\n\t\t\t\tpotBase.uploadFromBitmapData(canvas, level++);\r\n\t\t\t\tmatrix.scale(0.5, 0.5);\r\n\t\t\t\tcurrentWidth = currentWidth >> 1;\r\n\t\t\t\tcurrentHeight = currentHeight >> 1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcanvas.dispose();\r\n\t\t}\r\n\t\t\r\n\t\tif (buffer != null)\t\t\t buffer.dispose();\r\n\t\t\r\n\t\tsetDataUploaded();\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function uploadAtfData(data:ByteArray, offset:Int = 0, async:Dynamic = null):Void\r\n\t{\r\n\t\tvar isAsync:Bool = Reflect.isFunction(async) || async == true;\r\n\t\t\r\n\t\tif (Reflect.isFunction(async)) \r\n\t\t{\r\n\t\t\t_textureReadyCallback = untyped async;\r\n\t\t\tbase.addEventListener(Texture.TEXTURE_READY, onTextureReady);\r\n\t\t}\r\n\t\t\r\n\t\tpotBase.uploadCompressedTextureFromByteArray(data, offset, isAsync);\r\n\t\tsetDataUploaded();\r\n\t}\r\n\t\r\n\tprivate function onTextureReady(event:Event):Void\r\n\t{\r\n\t\tbase.removeEventListener(Texture.TEXTURE_READY, onTextureReady);\r\n\t\tExecute.call(_textureReadyCallback, [this]);\r\n\t\t_textureReadyCallback = null;\r\n\t}\r\n\t\r\n\tprivate function get_potBase():openfl.display3D.textures.Texture\r\n\t{\r\n\t\treturn cast(base, openfl.display3D.textures.Texture);\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.textures;\r\n\r\nimport openfl.display3D.Context3DTextureFormat;\r\nimport starling.textures.ConcreteTexture;\r\n\r\nimport openfl.display.BitmapData;\r\nimport openfl.display3D.textures.RectangleTexture;\r\nimport openfl.display3D.textures.TextureBase;\r\n\r\nimport starling.core.Starling;\r\n\r\n/** @private\r\n *\r\n *  A concrete texture that wraps a <code>RectangleTexture</code> base.\r\n *  For internal use only. */\r\nclass ConcreteRectangleTexture extends ConcreteTexture\r\n{\r\n\tprivate var rectangleBase(get, never):RectangleTexture;\r\n\r\n\t/** Creates a new instance with the given parameters. */\r\n\t@:allow(starling.textures)\r\n\tprivate function new(base:RectangleTexture, format:Context3DTextureFormat,\r\n\t\t\twidth:Int, height:Int, premultipliedAlpha:Bool,\r\n\t\t\toptimizedForRenderTexture:Bool = false,\r\n\t\t\tscale:Float = 1)\r\n\t{\r\n\t\tsuper(base, format, width, height, false, premultipliedAlpha,\r\n\t\t\t\toptimizedForRenderTexture, scale);\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function uploadBitmapData(data:BitmapData):Void\r\n\t{\r\n\t\trectangleBase.uploadFromBitmapData(data);\r\n\t\tsetDataUploaded();\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function createBase():TextureBase\r\n\t{\r\n\t\treturn Starling.Context.createRectangleTexture(\r\n\t\t\t\tuntyped nativeWidth, untyped nativeHeight, format, optimizedForRenderTexture);\r\n\t}\r\n\t\r\n\tprivate function get_rectangleBase():RectangleTexture\r\n\t{\r\n\t\treturn cast(base, RectangleTexture);\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.textures;\r\n\r\nimport openfl.display3D.Context3DTextureFormat;\r\nimport openfl.errors.Error;\r\nimport starling.textures.Texture;\r\n\r\nimport openfl.display3D.textures.TextureBase;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\n\r\n/** A SubTexture represents a section of another texture. This is achieved solely by\r\n *  manipulation of texture coordinates, making the class very efficient. \r\n *\r\n *  <p><em>Note that it is OK to create subtextures of subtextures.</em></p>\r\n */\r\nclass SubTexture extends Texture\r\n{\r\n\tpublic var parent(get, never):Texture;\r\n\tpublic var ownsParent(get, never):Bool;\r\n\tpublic var rotated(get, never):Bool;\r\n\tpublic var region(get, never):Rectangle;\r\n\r\n\tprivate var _parent:Texture;\r\n\tprivate var _ownsParent:Bool;\r\n\tprivate var _region:Rectangle;\r\n\tprivate var _frame:Rectangle;\r\n\tprivate var _rotated:Bool;\r\n\tprivate var _width:Float;\r\n\tprivate var _height:Float;\r\n\tprivate var _transformationMatrix:Matrix;\r\n\tprivate var _transformationMatrixToRoot:Matrix;\r\n\t\r\n\t/** Creates a new SubTexture containing the specified region of a parent texture.\r\n\t *\r\n\t *  @param parent\t The texture you want to create a SubTexture from.\r\n\t *  @param region\t The region of the parent texture that the SubTexture will show\r\n\t *\t\t\t\t\t(in points). If <code>null</code>, the complete area of the parent.\r\n\t *  @param ownsParent If <code>true</code>, the parent texture will be disposed\r\n\t *\t\t\t\t\tautomatically when the SubTexture is disposed.\r\n\t *  @param frame\t  If the texture was trimmed, the frame rectangle can be used to restore\r\n\t *\t\t\t\t\tthe trimmed area.\r\n\t *  @param rotated\tIf true, the SubTexture will show the parent region rotated by\r\n\t *\t\t\t\t\t90 degrees (CCW).\r\n\t */\r\n\tpublic function new(parent:Texture, region:Rectangle = null, ownsParent:Bool = false, frame:Rectangle = null, rotated:Bool = false)\r\n\t{\r\n\t\tsuper();\r\n\t\t// TODO: in a future version, the order of arguments of this constructor should\r\n\t\t//\t   be fixed ('ownsParent' at the very end).\r\n\t\t\r\n\t\t_parent = parent;\r\n\t\t_region = (region != null) ? region.clone():new Rectangle(0, 0, parent.width, parent.height);\r\n\t\t_frame = (frame != null) ? frame.clone():null;\r\n\t\t_ownsParent = ownsParent;\r\n\t\t_rotated = rotated;\r\n\t\t_width = (rotated) ? _region.height:_region.width;\r\n\t\t_height = (rotated) ? _region.width:_region.height;\r\n\t\t_transformationMatrixToRoot = new Matrix();\r\n\t\t_transformationMatrix = new Matrix();\r\n\t\t\r\n\t\tif (rotated) \r\n\t\t{\r\n\t\t\t_transformationMatrix.translate(0, -1);\r\n\t\t\t_transformationMatrix.rotate(Math.PI / 2.0);\r\n\t\t}\r\n\t\t\r\n\t\tif (_frame != null && (_frame.x > 0 || _frame.y > 0 ||\r\n\t\t\t_frame.right < _width || _frame.bottom < _height)) \r\n\t\t{\r\n\t\t\ttrace(\"[Starling] Warning: frames inside the texture's region are unsupported.\");\r\n\t\t}\r\n\t\t\r\n\t\t_transformationMatrix.scale(_region.width / _parent.width,\r\n\t\t\t\t_region.height / _parent.height);\r\n\t\t_transformationMatrix.translate(_region.x / _parent.width,\r\n\t\t\t\t_region.y / _parent.height);\r\n\t\t\r\n\t\tvar texture:SubTexture = this;\r\n\t\twhile (texture != null)\r\n\t\t{\r\n\t\t\t_transformationMatrixToRoot.concat(texture._transformationMatrix);\r\n\t\t\t//TODO: trace(\"Check\");\r\n\t\t\t\r\n\t\t\tif (Reflect.hasField(texture, \"parent\")) {\r\n\t\t\t\ttexture = cast(texture.parent, SubTexture);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttexture = null;\r\n\t\t\t}\r\n\t\t\t//try {\r\n\t\t\t\t\r\n\t\t\t//}\r\n\t\t\t//catch (e:Error) {\r\n\t\t\t//\t\r\n\t\t\t//}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Disposes the parent texture if this texture owns it. */\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\tif (_ownsParent)\t\t\t _parent.dispose();\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t/** The texture which the SubTexture is based on. */\r\n\tprivate function get_parent():Texture\r\n\t{\r\n\t\treturn _parent;\r\n\t}\r\n\t\r\n\t/** Indicates if the parent texture is disposed when this object is disposed. */\r\n\tprivate function get_ownsParent():Bool\r\n\t{\r\n\t\treturn _ownsParent;\r\n\t}\r\n\t\r\n\t/** If true, the SubTexture will show the parent region rotated by 90 degrees (CCW). */\r\n\tprivate function get_rotated():Bool\r\n\t{\r\n\t\treturn _rotated;\r\n\t}\r\n\t\r\n\t/** The region of the parent texture that the SubTexture is showing (in points).\r\n\t *\r\n\t *  <p>CAUTION: not a copy, but the actual object! Do not modify!</p> */\r\n\tprivate function get_region():Rectangle\r\n\t{\r\n\t\treturn _region;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_transformationMatrix():Matrix\r\n\t{\r\n\t\treturn _transformationMatrix;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_transformationMatrixToRoot():Matrix\r\n\t{\r\n\t\treturn _transformationMatrixToRoot;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_base():TextureBase\r\n\t{\r\n\t\treturn _parent.base;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_root():ConcreteTexture\r\n\t{\r\n\t\treturn _parent.root;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_format():Context3DTextureFormat\r\n\t{\r\n\t\treturn _parent.format;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_width():Float\r\n\t{\r\n\t\treturn _width;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_height():Float\r\n\t{\r\n\t\treturn _height;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_nativeWidth():Float\r\n\t{\r\n\t\treturn _width * scale;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_nativeHeight():Float\r\n\t{\r\n\t\treturn _height * scale;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_mipMapping():Bool\r\n\t{\r\n\t\treturn _parent.mipMapping;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_premultipliedAlpha():Bool\r\n\t{\r\n\t\treturn _parent.premultipliedAlpha;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_scale():Float\r\n\t{\r\n\t\treturn _parent.scale;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_frame():Rectangle\r\n\t{\r\n\t\treturn _frame;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.textures;\r\n\r\nimport openfl.display3D.Context3DProfile;\r\nimport openfl.display3D.Context3DTextureFormat;\r\nimport haxe.Constraints.Function;\r\nimport openfl.errors.Error;\r\nimport starling.textures.SubTexture;\r\nimport starling.textures.Texture;\r\n\r\nimport openfl.display3D.textures.TextureBase;\r\nimport openfl.errors.IllegalOperationError;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Rectangle;\r\n\r\nimport starling.core.Starling;\r\nimport starling.display.BlendMode;\r\nimport starling.display.DisplayObject;\r\nimport starling.display.Image;\r\nimport starling.filters.FragmentFilter;\r\nimport starling.rendering.Painter;\r\nimport starling.rendering.RenderState;\r\nimport starling.utils.Execute;\r\n\r\n/** A RenderTexture is a dynamic texture onto which you can draw any display object.\r\n * \r\n *  <p>After creating a render texture, just call the <code>drawObject</code> method to render \r\n *  an object directly onto the texture. The object will be drawn onto the texture at its current\r\n *  position, adhering its current rotation, scale and alpha properties.</p> \r\n *  \r\n *  <p>Drawing is done very efficiently, as it is happening directly in graphics memory. After \r\n *  you have drawn objects onto the texture, the performance will be just like that of a normal \r\n *  texture - no matter how many objects you have drawn.</p>\r\n *  \r\n *  <p>If you draw lots of objects at once, it is recommended to bundle the drawing calls in \r\n *  a block via the <code>drawBundled</code> method, like shown below. That will speed it up \r\n *  immensely, allowing you to draw hundreds of objects very quickly.</p>\r\n *  \r\n * \t<pre>\r\n *  renderTexture.drawBundled(function():void\r\n *  {\r\n *\t for (var i:int=0; i&lt;numDrawings; ++i)\r\n *\t {\r\n *\t\t image.rotation = (2 &#42; Math.PI / numDrawings) &#42; i;\r\n *\t\t renderTexture.draw(image);\r\n *\t }   \r\n *  });\r\n *  </pre>\r\n *  \r\n *  <p>To erase parts of a render texture, you can use any display object like a \"rubber\" by\r\n *  setting its blending mode to \"BlendMode.ERASE\".</p>\r\n * \r\n *  <p>Beware that render textures can't be restored when the Starling's render context is lost.\r\n *  </p>\r\n *\r\n *  <strong>Persistence</strong>\r\n *\r\n *  <p>Older devices may require double buffering to support persistent render textures. Thus,\r\n *  you should disable the <code>persistent</code> parameter in the constructor if you only\r\n *  need to make one draw operation on the texture. The static <code>useDoubleBuffering</code>\r\n *  property allows you to customize if new textures will be created with or without double\r\n *  buffering.</p>\r\n */\r\nclass RenderTexture extends SubTexture\r\n{\r\n\tprivate var isDoubleBuffered(get, never):Bool;\r\n\tpublic var isPersistent(get, never):Bool;\r\n\tpublic static var useDoubleBuffering(get, set):Bool;\r\n\r\n\tprivate static var USE_DOUBLE_BUFFERING_DATA_NAME:String = \r\n\t\t\"starling.textures.RenderTexture.useDoubleBuffering\";\r\n\t\r\n\tprivate var _activeTexture:Texture;\r\n\tprivate var _bufferTexture:Texture;\r\n\tprivate var _helperImage:Image;\r\n\tprivate var _drawing:Bool;\r\n\tprivate var _bufferReady:Bool;\r\n\tprivate var _isPersistent:Bool;\r\n\t\r\n\t// helper object\r\n\tprivate static var sClipRect:Rectangle = new Rectangle();\r\n\t\r\n\t/** Creates a new RenderTexture with a certain size (in points). If the texture is\r\n\t *  persistent, its contents remains intact after each draw call, allowing you to use the\r\n\t *  texture just like a canvas. If it is not, it will be cleared before each draw call.\r\n\t *\r\n\t *  <p>Non-persistent textures can be used more efficiently on older devices; on modern\r\n\t *  hardware, it does not make a difference. For more information, have a look at the\r\n\t *  documentation of the <code>useDoubleBuffering</code> property.</p>\r\n\t */\r\n\tpublic function new(width:Int, height:Int, persistent:Bool = true,\r\n\t\t\tscale:Float = -1, format:Context3DTextureFormat = null)\r\n\t{\r\n\t\tif (format == null) format = Context3DTextureFormat.BGRA;\r\n\t\t_isPersistent = persistent;\r\n\t\t_activeTexture = Texture.empty(width, height, true, false, true, scale, format);\r\n\t\t_activeTexture.root.onRestore = _activeTexture.root.clear;\r\n\t\t\r\n\t\tsuper(_activeTexture, new Rectangle(0, 0, width, height), true, null, false);\r\n\t\t\r\n\t\tif (persistent && useDoubleBuffering) \r\n\t\t{\r\n\t\t\t_bufferTexture = Texture.empty(width, height, true, false, true, scale, format);\r\n\t\t\t_bufferTexture.root.onRestore = _bufferTexture.root.clear;\r\n\t\t\t_helperImage = new Image(_bufferTexture);\r\n\t\t\t_helperImage.textureSmoothing = TextureSmoothing.NONE;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\t_activeTexture.dispose();\r\n\t\t\r\n\t\tif (isDoubleBuffered) \r\n\t\t{\r\n\t\t\t_bufferTexture.dispose();\r\n\t\t\t_helperImage.dispose();\r\n\t\t}\r\n\t\t\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\t/** Draws an object into the texture. Note that any filters on the object will currently\r\n\t *  be ignored.\r\n\t * \r\n\t *  @param object\t   The object to draw.\r\n\t *  @param matrix\t   If 'matrix' is null, the object will be drawn adhering its \r\n\t *\t\t\t\t\t  properties for position, scale, and rotation. If it is not null,\r\n\t *\t\t\t\t\t  the object will be drawn in the orientation depicted by the matrix.\r\n\t *  @param alpha\t\tThe object's alpha value will be multiplied with this value.\r\n\t *  @param antiAliasing Only supported on Desktop.\r\n\t *\t\t\t\t\t  Values range from 0 (no anti-aliasing) to 4 (best quality).\r\n\t */\r\n\tpublic function draw(object:DisplayObject, matrix:Matrix = null, alpha:Float = 1.0,\r\n\t\t\tantiAliasing:Int = 0):Void\r\n\t{\r\n\t\tif (object == null)\t\t\t return;\r\n\t\t\r\n\t\tif (_drawing) \r\n\t\t\trender(object, matrix, alpha)\r\n\t\telse \r\n\t\trenderBundled(render, object, matrix, alpha, antiAliasing);\r\n\t}\r\n\t\r\n\t/** Bundles several calls to <code>draw</code> together in a block. This avoids buffer \r\n\t *  switches and allows you to draw multiple objects into a non-persistent texture.\r\n\t *  Note that the 'antiAliasing' setting provided here overrides those provided in\r\n\t *  individual 'draw' calls.\r\n\t *  \r\n\t *  @param drawingBlock  a callback with the form: <pre>function():void;</pre>\r\n\t *  @param antiAliasing  Only supported beginning with AIR 13, and only on Desktop.\r\n\t *\t\t\t\t\t   Values range from 0 (no antialiasing) to 4 (best quality). */\r\n\tpublic function drawBundled(drawingBlock:Function, antiAliasing:Int = 0):Void\r\n\t{\r\n\t\trenderBundled(drawingBlock, null, null, 1.0, antiAliasing);\r\n\t}\r\n\t\r\n\tprivate function render(object:DisplayObject, matrix:Matrix = null, alpha:Float = 1.0):Void\r\n\t{\r\n\t\tvar painter:Painter = Starling.Painter;\r\n\t\tvar state:RenderState = painter.state;\r\n\t\tvar filter:FragmentFilter = object.filter;\r\n\t\tvar mask:DisplayObject = object.mask;\r\n\t\t\r\n\t\tpainter.pushState();\r\n\t\t\r\n\t\tstate.alpha *= alpha;\r\n\t\tstate.setModelviewMatricesToIdentity();\r\n\t\tstate.blendMode = object.blendMode == (BlendMode.AUTO) ? \r\n\t\t\t\tBlendMode.NORMAL:object.blendMode;\r\n\t\t\r\n\t\tif (matrix != null)\t\t\t state.transformModelviewMatrix(matrix)\r\n\t\telse state.transformModelviewMatrix(object.transformationMatrix);\r\n\t\t\r\n\t\tif (mask != null)\t\t\t painter.drawMask(mask);\r\n\t\t\r\n\t\tif (filter != null)\t\t\t filter.render(painter)\r\n\t\telse object.render(painter);\r\n\t\t\r\n\t\tif (mask != null)\t\t\t painter.eraseMask(mask);\r\n\t\t\r\n\t\tpainter.popState();\r\n\t}\r\n\t\r\n\tprivate function renderBundled(renderBlock:Function, object:DisplayObject = null,\r\n\t\t\tmatrix:Matrix = null, alpha:Float = 1.0,\r\n\t\t\tantiAliasing:Int = 0):Void\r\n\t{\r\n\t\tvar painter:Painter = Starling.Painter;\r\n\t\tvar state:RenderState = painter.state;\r\n\t\t\r\n\t\tif (!Starling.Current.contextValid)\t\t\t return;  // switch buffers\r\n\t\t\r\n\t\tif (isDoubleBuffered) \r\n\t\t{\r\n\t\t\tvar tmpTexture:Texture = _activeTexture;\r\n\t\t\t_activeTexture = _bufferTexture;\r\n\t\t\t_bufferTexture = tmpTexture;\r\n\t\t\t_helperImage.texture = _bufferTexture;\r\n\t\t}\r\n\t\t\r\n\t\tpainter.pushState();\r\n\t\t\r\n\t\tvar rootTexture:Texture = _activeTexture.root;\r\n\t\tstate.setProjectionMatrix(0, 0, rootTexture.width, rootTexture.height, width, height);\r\n\t\t\r\n\t\t// limit drawing to relevant area\r\n\t\tsClipRect.setTo(0, 0, _activeTexture.width, _activeTexture.height);\r\n\t\t\r\n\t\tstate.clipRect = sClipRect;\r\n\t\tstate.setRenderTarget(_activeTexture, true, antiAliasing);\r\n\t\tpainter.prepareToDraw();\r\n\t\t\r\n\t\tif (isDoubleBuffered || !isPersistent || !_bufferReady) \r\n\t\t\tpainter.clear();  // draw buffer\r\n\t\t\r\n\t\tif (isDoubleBuffered && _bufferReady) \r\n\t\t\t_helperImage.render(painter)\r\n\t\telse \r\n\t\t_bufferReady = true;\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\t_drawing = true;\r\n\t\t\tExecute.call(renderBlock, [object, matrix, alpha]);\r\n\t\t}\r\n\t\tcatch (e:Error) {\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t_drawing = false;\r\n\t\tpainter.popState();\r\n\t}\r\n\t\r\n\t/** Clears the render texture with a certain color and alpha value. Call without any\r\n\t *  arguments to restore full transparency. */\r\n\tpublic function clear(color:Int = 0, alpha:Float = 0.0):Void\r\n\t{\r\n\t\t_activeTexture.root.clear(color, alpha);\r\n\t\t_bufferReady = true;\r\n\t}\r\n\t\r\n\t// properties\r\n\t\r\n\t/** Indicates if the render texture is using double buffering. This might be necessary for\r\n\t *  persistent textures, depending on the runtime version and the value of\r\n\t *  'forceDoubleBuffering'. */\r\n\tprivate function get_isDoubleBuffered():Bool\r\n\t{\r\n\t\treturn _bufferTexture != null;\r\n\t}\r\n\t\r\n\t/** Indicates if the texture is persistent over multiple draw calls. */\r\n\tprivate function get_isPersistent():Bool\r\n\t{\r\n\t\treturn _isPersistent;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_base():TextureBase\r\n\t{\r\n\t\treturn _activeTexture.base;\r\n\t}\r\n\t\r\n\t/** @inheritDoc */\r\n\toverride private function get_root():ConcreteTexture\r\n\t{\r\n\t\treturn _activeTexture.root;\r\n\t}\r\n\t\r\n\t/** Indicates if new persistent textures should use double buffering. Single buffering\r\n\t *  is faster and requires less memory, but is not supported on all hardware.\r\n\t *\r\n\t *  <p>By default, applications running with the profile \"baseline\" or \"baselineConstrained\"\r\n\t *  will use double buffering; all others use just a single buffer. You can override this\r\n\t *  behavior, though, by assigning a different value at runtime.</p>\r\n\t *\r\n\t *  @default true for \"baseline\" and \"baselineConstrained\", false otherwise\r\n\t */\r\n\tprivate static function get_useDoubleBuffering():Bool\r\n\t{\r\n\t\tif (Starling.Current != null) \r\n\t\t{\r\n\t\t\tvar painter:Painter = Starling.Painter;\r\n\t\t\tvar sharedData:Map<String, Dynamic> = painter.sharedData;\r\n\t\t\t\r\n\t\t\tif (sharedData.exists(USE_DOUBLE_BUFFERING_DATA_NAME)) \r\n\t\t\t{\r\n\t\t\t\treturn sharedData.get(USE_DOUBLE_BUFFERING_DATA_NAME);\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tvar profile:Context3DProfile = (painter.profile != null) ? painter.profile:Context3DProfile.BASELINE;\r\n\t\t\t\tvar value:Bool = profile == Context3DProfile.BASELINE || profile == Context3DProfile.BASELINE_CONSTRAINED;\r\n\t\t\t\tsharedData.set(USE_DOUBLE_BUFFERING_DATA_NAME, value);\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\t\r\n\tprivate static function set_useDoubleBuffering(value:Bool):Bool\r\n\t{\r\n\t\tif (Starling.Current == null) \r\n\t\t\tthrow new IllegalOperationError(\"Starling not yet initialized\")\r\n\t\telse \r\n\t\tStarling.Painter.sharedData.set(USE_DOUBLE_BUFFERING_DATA_NAME, value);\r\n\t\treturn value;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.textures;\r\n\r\n\r\nimport openfl.geom.Rectangle;\r\n\r\nimport starling.utils.StringUtil;\r\n\r\n/** A texture atlas is a collection of many smaller textures in one big image. This class\r\n *  is used to access textures from such an atlas.\r\n *  \r\n *  <p>Using a texture atlas for your textures solves two problems:</p>\r\n *  \r\n *  <ul>\r\n *\t<li>Whenever you switch between textures, the batching of image objects is disrupted.</li>\r\n *\t<li>Any Stage3D texture has to have side lengths that are powers of two. Starling hides \r\n *\t\tthis limitation from you, but at the cost of additional graphics memory.</li>\r\n *  </ul>\r\n *  \r\n *  <p>By using a texture atlas, you avoid both texture switches and the power-of-two \r\n *  limitation. All textures are within one big \"super-texture\", and Starling takes care that \r\n *  the correct part of this texture is displayed.</p>\r\n *  \r\n *  <p>There are several ways to create a texture atlas. One is to use the atlas generator \r\n *  script that is bundled with Starling's sibling, the <a href=\"http://www.sparrow-framework.org\">\r\n *  Sparrow framework</a>. It was only tested in Mac OS X, though. A great multi-platform \r\n *  alternative is the commercial tool <a href=\"http://www.texturepacker.com\">\r\n *  Texture Packer</a>.</p>\r\n *  \r\n *  <p>Whatever tool you use, Starling expects the following file format:</p>\r\n * \r\n *  <listing>\r\n * \t&lt;TextureAtlas imagePath='atlas.png'&gt;\r\n * \t  &lt;SubTexture name='texture_1' x='0'  y='0' width='50' height='50'/&gt;\r\n * \t  &lt;SubTexture name='texture_2' x='50' y='0' width='20' height='30'/&gt; \r\n * \t&lt;/TextureAtlas&gt;\r\n *  </listing>\r\n *  \r\n *  <strong>Texture Frame</strong>\r\n *\r\n *  <p>If your images have transparent areas at their edges, you can make use of the \r\n *  <code>frame</code> property of the Texture class. Trim the texture by removing the \r\n *  transparent edges and specify the original texture size like this:</p>\r\n * \r\n *  <listing>\r\n * \t&lt;SubTexture name='trimmed' x='0' y='0' height='10' width='10'\r\n * \t\tframeX='-10' frameY='-10' frameWidth='30' frameHeight='30'/&gt;\r\n *  </listing>\r\n *\r\n *  <strong>Texture Rotation</strong>\r\n *\r\n *  <p>Some atlas generators can optionally rotate individual textures to optimize the texture\r\n *  distribution. This is supported via the boolean attribute \"rotated\". If it is set to\r\n *  <code>true</code> for a certain subtexture, this means that the texture on the atlas\r\n *  has been rotated by 90 degrees, clockwise. Starling will undo that rotation by rotating\r\n *  it counter-clockwise.</p>\r\n *\r\n *  <p>In this case, the positional coordinates (<code>x, y, width, height</code>)\r\n *  are expected to point at the subtexture as it is present on the atlas (in its rotated\r\n *  form), while the \"frame\" properties must describe the texture in its upright form.</p>\r\n *\r\n */\r\nclass TextureAtlas\r\n{\r\n\tpublic var texture(get, never):Texture;\r\n\r\n\tprivate var _atlasTexture:Texture;\r\n\tprivate var _subTextures:Map<String,SubTexture>;\r\n\tprivate var _subTextureNames:Array<String>;\r\n\t\r\n\t/** helper objects */\r\n\tprivate static var sNames:Array<String> = [];\r\n\t\r\n\t/** Create a texture atlas from a texture by parsing the regions from an XML file. */\r\n\tpublic function new(texture:Texture, atlasXml:Xml=null)\r\n\t{\r\n\t\t_subTextures = new Map<String, SubTexture>();\r\n\t\t_atlasTexture = texture;\r\n\t\tif (atlasXml != null)\r\n\t\t\tparseAtlasXml(atlasXml);\r\n\t}\r\n\t\r\n\t/** Disposes the atlas texture. */\r\n\tpublic function dispose():Void\r\n\t{\r\n\t\t_atlasTexture.dispose();\r\n\t}\r\n\t\r\n\t/** This function is called by the constructor and will parse an XML in Starling's \r\n\t *  default atlas file format. Override this method to create custom parsing logic\r\n\t *  (e.g. to support a different file format). */\r\n\tprivate function parseAtlasXml(atlasXml:Xml):Void\r\n\t{\r\n\t\tvar scale = _atlasTexture.scale;\r\n\t\tvar frame  = new Rectangle();\r\n\t\tvar region = new Rectangle();\r\n\t\t\r\n\t\tfor (subTexture in atlasXml.firstElement()) {\r\n\t\t\tif (subTexture.nodeType == Xml.Element ) {\r\n\t\t\t\tvar name        = StringUtil.clean(subTexture.get(\"name\"));\r\n\t\t\t\tvar x           = Std.parseFloat(subTexture.get(\"x\")) / scale;\r\n\t\t\t\tvar y           = Std.parseFloat(subTexture.get(\"y\")) / scale;\r\n\t\t\t\tvar width       = Std.parseFloat(subTexture.get(\"width\")) / scale;\r\n\t\t\t\tvar height      = Std.parseFloat(subTexture.get(\"height\")) / scale;\r\n\t\t\t\tvar frameWidth  = Std.parseFloat(subTexture.get(\"frameWidth\")) / scale;\r\n\t\t\t\tvar frameHeight = Std.parseFloat(subTexture.get(\"frameHeight\")) / scale;\r\n\t\t\t\tvar frameX      = Std.parseFloat(subTexture.get(\"frameX\")) / scale;\r\n\t\t\t\tvar frameY      = Std.parseFloat(subTexture.get(\"frameY\")) / scale;\r\n\t\t\t\tvar rotatedStr = subTexture.get(\"rotated\");\r\n\t\t\t\tvar rotated:Bool    = false;\r\n\t\t\t\tif (rotatedStr != null) rotated = parseBool(subTexture.get(\"rotated\"));\r\n\t\t\t\t\r\n\t\t\t\tregion.setTo(x, y, width, height);\r\n\t\t\t\tframe.setTo(frameX, frameY, frameWidth, frameHeight);\r\n\t\t\t\t\r\n\t\t\t\tif (frameWidth > 0 && frameHeight > 0) addRegion(name, region, frame, rotated);\r\n\t\t\t\telse addRegion(name, region, null,  rotated);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//var scale:Float = _atlasTexture.scale;\r\n\t\t//var region:Rectangle = new Rectangle();\r\n\t\t//var frame:Rectangle = new Rectangle();\r\n\t\t\r\n\t\t//for (subTexture in atlasXml.nodes.SubTexture)\r\n\t\t//{\r\n\t\t/*\tvar name:String = StringTools.clean(subTexture.att.name);\r\n\t\t\tvar x:Float = parseFloat(subTexture.att.x) / scale;\r\n\t\t\tvar y:Float = parseFloat(subTexture.att.y) / scale;\r\n\t\t\tvar width:Float = parseFloat(subTexture.att.width) / scale;\r\n\t\t\tvar height:Float = parseFloat(subTexture.att.height) / scale;\r\n\t\t\tvar frameX:Float = parseFloat(subTexture.att.frameX) / scale;\r\n\t\t\tvar frameY:Float = parseFloat(subTexture.att.frameY) / scale;\r\n\t\t\tvar frameWidth:Float = parseFloat(subTexture.att.frameWidth) / scale;\r\n\t\t\tvar frameHeight:Float = parseFloat(subTexture.att.frameHeight) / scale;\r\n\t\t\tvar rotated:Bool = parseBool(subTexture.att.rotated);\r\n\t\t\t\r\n\t\t\tregion.setTo(x, y, width, height);\r\n\t\t\tframe.setTo(frameX, frameY, frameWidth, frameHeight);\r\n\t\t\t\r\n\t\t\tif (frameWidth > 0 && frameHeight > 0) \r\n\t\t\t\taddRegion(name, region, frame, rotated)\r\n\t\t\telse \r\n\t\t\taddRegion(name, region, null, rotated);\r\n\t\t}*/\r\n\t}\r\n\t\r\n\t/** Retrieves a SubTexture by name. Returns <code>null</code> if it is not found. */\r\n\tpublic function getTexture(name:String):Texture\r\n\t{\r\n\t\treturn _subTextures.get(name);\r\n\t}\r\n\t\r\n\t/** Returns all textures that start with a certain string, sorted alphabetically\r\n\t *  (especially useful for \"MovieClip\"). */\r\n\tpublic function getTextures(prefix:String = \"\", out:Array<Texture> = null):Array<Texture>\r\n\t{\r\n\t\tif (out == null) out = [];\r\n\t\t\r\n\t\tfor (name in getNames(prefix, sNames))\r\n\t\tout[out.length] = getTexture(name);  // avoid 'push'  \r\n\t\t\r\n\t\tsNames.splice(0, sNames.length);\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Returns all texture names that start with a certain string, sorted alphabetically. */\r\n\tpublic function getNames(prefix:String = \"\", out:Array<String> = null):Array<String>\r\n\t{\r\n\t\tvar name:String;\r\n        if (out == null) out = [];\r\n        \r\n        if (_subTextureNames == null)\r\n        {\r\n            // optimization: store sorted list of texture names\r\n            _subTextureNames = new Array<String>();\r\n            for (name in _subTextures.keys()) _subTextureNames[_subTextureNames.length] = name;\r\n            _subTextureNames.sort(compare);\r\n        }\r\n\r\n        for (name in _subTextureNames)\r\n            if (name.indexOf(prefix) == 0)\r\n                out[out.length] = name;\r\n        \r\n        return out;\r\n\t}\r\n\t\r\n\tprivate function compare(a:String, b:String) {return (a < b) ? -1 : (a > b) ? 1 : 0;}\r\n\t\r\n\t/** Returns the region rectangle associated with a specific name, or <code>null</code>\r\n\t *  if no region with that name has been registered. */\r\n\tpublic function getRegion(name:String):Rectangle\r\n\t{\r\n\t\tvar subTexture:SubTexture = _subTextures.get(name);\r\n\t\treturn (subTexture != null) ? subTexture.region:null;\r\n\t}\r\n\t\r\n\t/** Returns the frame rectangle of a specific region, or <code>null</code> if that region \r\n\t *  has no frame. */\r\n\tpublic function getFrame(name:String):Rectangle\r\n\t{\r\n\t\tvar subTexture:SubTexture = _subTextures.get(name);\r\n\t\treturn (subTexture != null) ? subTexture.frame:null;\r\n\t}\r\n\t\r\n\t/** If true, the specified region in the atlas is rotated by 90 degrees (clockwise). The\r\n\t *  SubTexture is thus rotated counter-clockwise to cancel out that transformation. */\r\n\tpublic function getRotation(name:String):Bool\r\n\t{\r\n\t\tvar subTexture:SubTexture = _subTextures.get(name);\r\n\t\treturn (subTexture != null) ? subTexture.rotated:false;\r\n\t}\r\n\t\r\n\t/** Adds a named region for a SubTexture (described by rectangle with coordinates in\r\n\t *  points) with an optional frame. */\r\n\tpublic function addRegion(name:String, region:Rectangle, frame:Rectangle = null,\r\n\t\t\trotated:Bool = false):Void\r\n\t{\r\n\t\t_subTextures.set(name, new SubTexture(_atlasTexture, region, false, frame, rotated));\r\n\t\t_subTextureNames = null;\r\n\t}\r\n\t\r\n\t/** Removes a region with a certain name. */\r\n\tpublic function removeRegion(name:String):Void\r\n\t{\r\n\t\tvar subTexture:SubTexture = _subTextures.get(name);\r\n\t\tif (subTexture != null)\tsubTexture.dispose();\r\n\t\t_subTextures.remove(name);\r\n\t\t_subTextureNames = null;\r\n\t}\r\n\t\r\n\t/** The base texture that makes up the atlas. */\r\n\tprivate function get_texture():Texture\r\n\t{\r\n\t\treturn _atlasTexture;\r\n\t}\r\n\t\r\n\t// utility methods\r\n\t\r\n\tprivate static function parseBool(value:String):Bool\r\n\t{\r\n\t\treturn value.toLowerCase() == \"true\";\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.textures;\r\n\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** A class that provides constant values for the possible smoothing algorithms of a texture. */\r\nclass TextureSmoothing\r\n{\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** No smoothing, also called \"Nearest Neighbor\". Pixels will scale up as big rectangles. */\r\n\tpublic static var NONE:String = \"none\";\r\n\t\r\n\t/** Bilinear filtering. Creates smooth transitions between pixels. */\r\n\tpublic static var BILINEAR:String = \"bilinear\";\r\n\t\r\n\t/** Trilinear filtering. Highest quality by taking the next mip map level into account. */\r\n\tpublic static var TRILINEAR:String = \"trilinear\";\r\n\t\r\n\t/** Determines whether a smoothing value is valid. */\r\n\tpublic static function isValid(smoothing:String):Bool\r\n\t{\r\n\t\treturn smoothing == NONE || smoothing == BILINEAR || smoothing == TRILINEAR;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** A class that provides constant values for horizontal and vertical alignment of objects. */\r\n@:final class Align\r\n{\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** Horizontal left alignment. */\r\n\tpublic static var LEFT:String = \"left\";\r\n\t\r\n\t/** Horizontal right alignment. */\r\n\tpublic static var RIGHT:String = \"right\";\r\n\t\r\n\t/** Vertical top alignment. */\r\n\tpublic static var TOP:String = \"top\";\r\n\t\r\n\t/** Vertical bottom alignment. */\r\n\tpublic static var BOTTOM:String = \"bottom\";\r\n\t\r\n\t/** Centered alignment. */\r\n\tpublic static var CENTER:String = \"center\";\r\n\t\r\n\t/** Indicates whether the given alignment string is valid. */\r\n\tpublic static function isValid(align:String):Bool\r\n\t{\r\n\t\treturn align == LEFT || align == RIGHT || align == CENTER ||\r\n\t\talign == TOP || align == BOTTOM;\r\n\t}\r\n\t\r\n\t/** Indicates if the given string is a valid horizontal alignment. */\r\n\tpublic static function isValidHorizontal(align:String):Bool\r\n\t{\r\n\t\treturn align == LEFT || align == CENTER || align == RIGHT;\r\n\t}\r\n\t\r\n\t/** Indicates if the given string is a valid vertical alignment. */\r\n\tpublic static function isValidVertical(align:String):Bool\r\n\t{\r\n\t\treturn align == TOP || align == CENTER || align == BOTTOM;\r\n\t}\r\n}\r\n","package starling.utils;\r\n\r\nimport haxe.Timer;\r\nimport openfl.display.Bitmap;\r\nimport openfl.display.BitmapData;\r\nimport openfl.display.Loader;\r\nimport openfl.display.LoaderInfo;\r\nimport openfl.display3D.Context3DTextureFormat;\r\nimport openfl.errors.ArgumentError;\r\nimport openfl.errors.Error;\r\nimport openfl.events.HTTPStatusEvent;\r\nimport openfl.events.IOErrorEvent;\r\nimport openfl.events.ProgressEvent;\r\nimport openfl.events.SecurityErrorEvent;\r\nimport openfl.media.Sound;\r\nimport openfl.media.SoundChannel;\r\nimport openfl.media.SoundTransform;\r\nimport openfl.net.URLLoader;\r\nimport openfl.net.URLLoaderDataFormat;\r\nimport openfl.net.URLRequest;\r\nimport openfl.system.LoaderContext;\r\nimport openfl.system.System;\r\nimport openfl.utils.ByteArray;\r\n\r\nimport starling.core.Starling;\r\nimport starling.events.Event;\r\nimport starling.events.EventDispatcher;\r\nimport starling.text.BitmapFont;\r\nimport starling.text.TextField;\r\nimport starling.textures.AtfData;\r\nimport starling.textures.Texture;\r\nimport starling.textures.TextureAtlas;\r\nimport starling.textures.TextureOptions;\r\n\r\n/** Dispatched when all textures have been restored after a context loss. */\r\n@:meta(Event(name='texturesRestored', type='starling.events.Event'))\r\n\r\n/** Dispatched when an URLLoader fails with an IO_ERROR while processing the queue.\r\n *  The 'data' property of the Event contains the URL-String that could not be loaded. */\r\n@:meta(Event(name='ioError', type='starling.events.Event'))\r\n\r\n/** Dispatched when an URLLoader fails with a SECURITY_ERROR while processing the queue.\r\n *  The 'data' property of the Event contains the URL-String that could not be loaded. */\r\n@:meta(Event(name='securityError', type='starling.events.Event'))\r\n\r\n/** Dispatched when an Xml or JSON file couldn't be parsed.\r\n *  The 'data' property of the Event contains the name of the asset that could not be parsed. */\r\n@:meta(Event(name='parseError', type='starling.events.Event'))\r\n\r\n/** The AssetManager handles loading and accessing a variety of asset types. You can \r\n *  add assets directly (via the 'add...' methods) or asynchronously via a queue. This allows\r\n *  you to deal with assets in a unified way, no matter if they are loaded from a file, \r\n *  directory, URL, or from an embedded object.\r\n *  \r\n *  <p>The class can deal with the following media types:\r\n *  <ul>\r\n *    <li>Textures, either from Bitmaps or ATF data</li>\r\n *    <li>Texture atlases</li>\r\n *    <li>Bitmap Fonts</li>\r\n *    <li>Sounds</li>\r\n *    <li>Xml data</li>\r\n *    <li>JSON data</li>\r\n *    <li>ByteArrays</li>\r\n *  </ul>\r\n *  </p>\r\n *  \r\n *  <p>For more information on how to add assets from different sources, read the documentation\r\n *  of the \"enqueue()\" method.</p>\r\n * \r\n *  <strong>Context Loss</strong>\r\n *  \r\n *  <p>When the stage3D context is lost (and you have enabled 'Starling.handleLostContext'),\r\n *  the AssetManager will automatically restore all loaded textures. To save memory, it will\r\n *  get them from their original sources. Since this is done asynchronously, your images might\r\n *  not reappear all at once, but during a timeframe of several seconds. If you want, you can\r\n *  pause your game during that time; the AssetManager dispatches an \"Event.TEXTURES_RESTORED\"\r\n *  event when all textures have been restored.</p>\r\n *\r\n *  <strong>Error handling</strong>\r\n *\r\n *  <p>Loading of some assets may fail while the queue is being processed. In that case, the\r\n *  AssetManager will dispatch events of type \"IO_ERROR\", \"SECURITY_ERROR\" or \"PARSE_ERROR\".\r\n *  You can listen to those events and handle the errors manually (e.g., you could enqueue\r\n *  them once again and retry, or provide placeholder textures). Queue processing will\r\n *  continue even when those events are dispatched.</p>\r\n *\r\n *  <strong>Using variable texture formats</strong>\r\n *\r\n *  <p>When you enqueue a texture, its properties for \"format\", \"scale\", \"mipMapping\", and\r\n *  \"repeat\" will reflect the settings of the AssetManager at the time they were enqueued.\r\n *  This means that you can enqueue a bunch of textures, then change the settings and enqueue\r\n *  some more. Like this:</p>\r\n *\r\n *  <listing>\r\n *  var appDir:File = File.applicationDirectory;\r\n *  var assets:AssetManager = new AssetManager();\r\n *  \r\n *  assets.textureFormat = Context3DTextureFormat.BGRA;\r\n *  assets.enqueue(appDir.resolvePath(\"textures/32bit\"));\r\n *  \r\n *  assets.textureFormat = Context3DTextureFormat.BGRA_PACKED;\r\n *  assets.enqueue(appDir.resolvePath(\"textures/16bit\"));\r\n *  \r\n *  assets.loadQueue(...);</listing>\r\n */\r\nclass AssetManager extends EventDispatcher\r\n{\r\n\t// This HTTPStatusEvent is only available in AIR\r\n\tprivate static var HTTP_RESPONSE_STATUS:String = \"httpResponseStatus\";\r\n\r\n\tprivate var mStarling:Starling;\r\n\tprivate var mNumLostTextures:Int = 0;\r\n\tprivate var mNumRestoredTextures:Int = 0;\r\n\tprivate var mNumLoadingQueues:Int = 0;\r\n\r\n\tprivate var mDefaultTextureOptions:TextureOptions;\r\n\tprivate var mCheckPolicyFile:Bool = false;\r\n\tprivate var mKeepAtlasXmls:Bool = false;\r\n\tprivate var mKeepFontXmls:Bool = false;\r\n\tprivate var mNumConnections:Int = 0;\r\n\tprivate var mVerbose:Bool = false;\r\n\tprivate var mQueue:Array<Dynamic>;\r\n\t\r\n\tprivate var mTextures:Map<String, Texture>;\r\n\tprivate var mAtlases:Map<String, TextureAtlas>;\r\n\tprivate var mSounds:Map<String, Sound>;\r\n\tprivate var mXmls:Map<String, Xml>;\r\n\tprivate var mObjects:Map<String, Dynamic>;\r\n\tprivate var mByteArrays:Map<String, ByteArray>;\r\n\t\r\n\t/** helper objects */\r\n\tprivate static var sNames = new Array<String>();\r\n\t\r\n\t/** Regex for name / extension extraction from URL. */\r\n\tprivate static var NAME_REGEX = ~/([^\\?\\/\\\\]+?)(?:\\.([\\w\\-]+))?(?:\\?.*)?$/;\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate var queue(get, null):Array<Dynamic>;\r\n\tpublic var numQueuedAssets(get, null):Int;\r\n\tpublic var verbose(get, set):Bool;\r\n\tpublic var isLoading(get, null):Bool;\r\n\tpublic var useMipMaps(get, set):Bool;\r\n\tpublic var scaleFactor(get, set):Float;\r\n\tpublic var textureFormat(get, set):Context3DTextureFormat;\r\n\tpublic var checkPolicyFile(get, set):Bool;\r\n\tpublic var keepAtlasXmls(get, set):Bool;\r\n\tpublic var keepFontXmls(get, set):Bool;\r\n\tpublic var numConnections(get, set):Int;\r\n\t\r\n\t\r\n\t/** Create a new AssetManager. The 'scaleFactor' and 'useMipmaps' parameters define\r\n\t *  how enqueued bitmaps will be converted to textures. */\r\n\tpublic function new(scaleFactor:Float=1, useMipmaps:Bool=false)\r\n\t{\r\n\t\tmQueue = new Array<Dynamic>();\r\n\t\tmDefaultTextureOptions = new TextureOptions(scaleFactor, useMipmaps);\r\n\t\tmTextures = new Map<String, Texture>();\r\n\t\tmAtlases = new Map<String, TextureAtlas>();\r\n\t\tmSounds = new Map<String, Sound>();\r\n\t\tmXmls = new Map<String, Xml>();\r\n\t\tmObjects = new Map<String, Dynamic>();\r\n\t\tmByteArrays = new Map<String, ByteArray>();\r\n\t\tmNumConnections = 1;\r\n\t\tmVerbose = true;\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t/** Disposes all contained textures. */\r\n\tpublic function dispose():Void\r\n\t{\r\n\t\tfor (texture in mTextures)\r\n\t\t\ttexture.dispose();\r\n\t\t\r\n\t\tfor (atlas in mAtlases)\r\n\t\t\tatlas.dispose();\r\n\t\t\r\n\t\t//for (xml in mXmls)\r\n\t\t//\tSystem.disposeXML(xml);\r\n\t\t\r\n\t\tfor (byteArray in mByteArrays)\r\n\t\t\tbyteArray.clear();\r\n\t}\r\n\t\r\n\t// retrieving\r\n\t\r\n\t/** Returns a texture with a certain name. The method first looks through the directly\r\n\t *  added textures; if no texture with that name is found, it scans through all \r\n\t *  texture atlases. */\r\n\tpublic function getTexture(name:String):Texture\r\n\t{\r\n\t\tif (mTextures.exists(name)) {\r\n\t\t\treturn mTextures.get(name);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor (atlas in mAtlases)\r\n\t\t\t{\r\n\t\t\t\tvar texture:Texture = atlas.getTexture(name);\r\n\t\t\t\tif (texture != null) {\r\n\t\t\t\t\treturn texture;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Returns all textures that start with a certain string, sorted alphabetically\r\n\t *  (especially useful for \"MovieClip\"). */\r\n\tpublic function getTextures(prefix:String=\"\", result:Array<Texture>=null):Array<Texture>\r\n\t{\r\n\t\tif (result == null) result = new Array<Texture>();\r\n\t\t\r\n\t\tvar names = getTextureNames(prefix, sNames);\r\n\t\tfor (name in names)\r\n\t\t\tresult[result.length] = getTexture(name); // avoid 'push'\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tsNames.splice(0, sNames.length);\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/** Returns all texture names that start with a certain string, sorted alphabetically. */\r\n\tpublic function getTextureNames(prefix:String=\"\", result:Array<String>=null):Array<String>\r\n\t{\r\n\t\tresult = getDictionaryKeys(mTextures, prefix, result);\r\n\t\t\r\n\t\tfor (atlas in mAtlases) {\r\n\t\t\tresult = atlas.getNames(prefix, result);\r\n\t\t}\r\n\t\t\r\n\t\tresult.sort( function(a:String, b:String):Int\r\n\t\t{\r\n\t\t\ta = a.toLowerCase();\r\n\t\t\tb = b.toLowerCase();\r\n\t\t\tif (a < b) return -1;\r\n\t\t\tif (a > b) return 1;\r\n\t\t\treturn 0;\r\n\t\t} );\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/** Returns a texture atlas with a certain name, or null if it's not found. */\r\n\tpublic function getTextureAtlas(name:String):TextureAtlas\r\n\t{\r\n\t\treturn mAtlases.get(name);\r\n\t}\r\n\t\r\n\t/** Returns a sound with a certain name, or null if it's not found. */\r\n\tpublic function getSound(name:String):Sound\r\n\t{\r\n\t\treturn mSounds[name];\r\n\t}\r\n\t\r\n\t/** Returns all sound names that start with a certain string, sorted alphabetically.\r\n\t *  If you pass a result Array, the names will be added to that Array. */\r\n\tpublic function getSoundNames(prefix:String=\"\", result:Array<String>=null):Array<String>\r\n\t{\r\n\t\treturn getDictionaryKeys(mSounds, prefix, result);\r\n\t}\r\n\t\r\n\t/** Generates a new SoundChannel object to play back the sound. This method returns a \r\n\t *  SoundChannel object, which you can access to stop the sound and to control volume. */ \r\n\tpublic function playSound(name:String, startTime:Float=0, loops:Int=0, \r\n\t\t\t\t\t\t\t  transform:SoundTransform=null):SoundChannel\r\n\t{\r\n\t\tif (mSounds.exists(name))\r\n\t\t\treturn getSound(name).play(startTime, loops, transform);\r\n\t\telse \r\n\t\t\treturn null;\r\n\t}\r\n\t\r\n\t/** Returns an Xml with a certain name, or null if it's not found. */\r\n\tpublic function getXml(name:String):Xml\r\n\t{\r\n\t\treturn mXmls[name];\r\n\t}\r\n\t\r\n\t/** Returns all Xml names that start with a certain string, sorted alphabetically. \r\n\t *  If you pass a result Array, the names will be added to that vector. */\r\n\tpublic function getXmlNames(prefix:String=\"\", result:Array<String>=null):Array<String>\r\n\t{\r\n\t\treturn getDictionaryKeys(mXmls, prefix, result);\r\n\t}\r\n\r\n\t/** Returns an object with a certain name, or null if it's not found. Enqueued JSON\r\n\t *  data is parsed and can be accessed with this method. */\r\n\tpublic function getObject(name:String):Dynamic\r\n\t{\r\n\t\treturn mObjects[name];\r\n\t}\r\n\t\r\n\t/** Returns all object names that start with a certain string, sorted alphabetically. \r\n\t *  If you pass a result vector, the names will be added to that vector. */\r\n\tpublic function getObjectNames(prefix:String=\"\", result:Array<String>=null):Array<String>\r\n\t{\r\n\t\treturn getDictionaryKeys(mObjects, prefix, result);\r\n\t}\r\n\t\r\n\t/** Returns a byte array with a certain name, or null if it's not found. */\r\n\tpublic function getByteArray(name:String):ByteArray\r\n\t{\r\n\t\treturn mByteArrays[name];\r\n\t}\r\n\t\r\n\t/** Returns all byte array names that start with a certain string, sorted alphabetically. \r\n\t *  If you pass a result vector, the names will be added to that vector. */\r\n\tpublic function getByteArrayNames(prefix:String=\"\", result:Array<String>=null):Array<String>\r\n\t{\r\n\t\treturn getDictionaryKeys(mByteArrays, prefix, result);\r\n\t}\r\n\t\r\n\t// direct adding\r\n\t\r\n\t/** Register a texture under a certain name. It will be available right away.\r\n\t *  If the name was already taken, the existing texture will be disposed and replaced\r\n\t *  by the new one. */\r\n\tpublic function addTexture(name:String, texture:Texture):Void\r\n\t{\r\n\t\tlog(\"Adding texture '\" + name + \"'\");\r\n\t\t\r\n\t\tif (mTextures.exists(name))\r\n\t\t{\r\n\t\t\tlog(\"Warning: name was already in use; the previous texture will be replaced.\");\r\n\t\t\tmTextures.get(name).dispose();\r\n\t\t}\r\n\t\t\r\n\t\tmTextures.set(name, texture);\r\n\t}\r\n\t\r\n\t/** Register a texture atlas under a certain name. It will be available right away. \r\n\t *  If the name was already taken, the existing atlas will be disposed and replaced\r\n\t *  by the new one. */\r\n\tpublic function addTextureAtlas(name:String, atlas:TextureAtlas):Void\r\n\t{\r\n\t\tlog(\"Adding texture atlas '\" + name + \"'\");\r\n\t\t\r\n\t\tif (mAtlases.exists(name))\r\n\t\t{\r\n\t\t\tlog(\"Warning: name was already in use; the previous atlas will be replaced.\");\r\n\t\t\tmAtlases.get(name).dispose();\r\n\t\t}\r\n\t\t\r\n\t\tmAtlases.set(name, atlas);\r\n\t}\r\n\t\r\n\t/** Register a sound under a certain name. It will be available right away.\r\n\t *  If the name was already taken, the existing sound will be replaced by the new one. */\r\n\tpublic function addSound(name:String, sound:Sound):Void\r\n\t{\r\n\t\tlog(\"Adding sound '\" + name + \"'\");\r\n\t\t\r\n\t\tif (mSounds.exists(name))\r\n\t\t\tlog(\"Warning: name was already in use; the previous sound will be replaced.\");\r\n\r\n\t\tmSounds[name] = sound;\r\n\t}\r\n\t\r\n\t/** Register an Xml object under a certain name. It will be available right away.\r\n\t *  If the name was already taken, the existing Xml will be disposed and replaced\r\n\t *  by the new one. */\r\n\tpublic function addXml(name:String, xml:Xml):Void\r\n\t{\r\n\t\tlog(\"Adding Xml '\" + name + \"'\");\r\n\t\t\r\n\t\tif (mXmls.exists(name))\r\n\t\t{\r\n\t\t\tlog(\"Warning: name was already in use; the previous Xml will be replaced.\");\r\n\t\t\t//System.disposeXML(mXmls[name]);\r\n\t\t}\r\n\r\n\t\tmXmls[name] = xml;\r\n\t}\r\n\t\r\n\t/** Register an arbitrary object under a certain name. It will be available right away. \r\n\t *  If the name was already taken, the existing object will be replaced by the new one. */\r\n\tpublic function addObject(name:String, object:Dynamic):Void\r\n\t{\r\n\t\tlog(\"Adding object '\" + name + \"'\");\r\n\t\t\r\n\t\tif (mObjects.exists(name))\r\n\t\t\tlog(\"Warning: name was already in use; the previous object will be replaced.\");\r\n\t\t\r\n\t\tmObjects[name] = object;\r\n\t}\r\n\t\r\n\t/** Register a byte array under a certain name. It will be available right away.\r\n\t *  If the name was already taken, the existing byte array will be cleared and replaced\r\n\t *  by the new one. */\r\n\tpublic function addByteArray(name:String, byteArray:ByteArray):Void\r\n\t{\r\n\t\tlog(\"Adding byte array '\" + name + \"'\");\r\n\t\t\r\n\t\tif (mByteArrays.exists(name))\r\n\t\t{\r\n\t\t\tlog(\"Warning: name was already in use; the previous byte array will be replaced.\");\r\n\t\t\tmByteArrays.get(name).clear();\r\n\t\t}\r\n\t\t\r\n\t\tmByteArrays.set(name, byteArray);\r\n\t}\r\n\t\r\n\t// removing\r\n\t\r\n\t/** Removes a certain texture, optionally disposing it. */\r\n\tpublic function removeTexture(name:String, dispose:Bool=true):Void\r\n\t{\r\n\t\tlog(\"Removing texture '\" + name + \"'\");\r\n\t\t\r\n\t\tif (dispose && mTextures.exists(name))\r\n\t\t\tmTextures.get(name).dispose();\r\n\t\t\r\n\t\tmTextures.remove(name);\r\n\t}\r\n\t\r\n\t/** Removes a certain texture atlas, optionally disposing it. */\r\n\tpublic function removeTextureAtlas(name:String, dispose:Bool=true):Void\r\n\t{\r\n\t\tlog(\"Removing texture atlas '\" + name + \"'\");\r\n\t\t\r\n\t\tif (dispose && mAtlases.exists(name))\r\n\t\t\tmAtlases.get(name).dispose();\r\n\t\t\r\n\t\tmAtlases.remove(name);\r\n\t}\r\n\t\r\n\t/** Removes a certain sound. */\r\n\tpublic function removeSound(name:String):Void\r\n\t{\r\n\t\tlog(\"Removing sound '\"+ name + \"'\");\r\n\t\tmSounds.remove(name);\r\n\t}\r\n\t\r\n\t/** Removes a certain Xml object, optionally disposing it. */\r\n\tpublic function removeXml(name:String, dispose:Bool=true):Void\r\n\t{\r\n\t\tlog(\"Removing xml '\"+ name + \"'\");\r\n\t\t\r\n\t\tif (dispose && mXmls.exists(name))\r\n\t\t\t//System.disposeXML(mXmls[name]);\r\n\t\t\r\n\t\tmXmls.remove(name);\r\n\t}\r\n\t\r\n\t/** Removes a certain object. */\r\n\tpublic function removeObject(name:String):Void\r\n\t{\r\n\t\tlog(\"Removing object '\"+ name + \"'\");\r\n\t\tmObjects.remove(name);\r\n\t}\r\n\t\r\n\t/** Removes a certain byte array, optionally disposing its memory right away. */\r\n\tpublic function removeByteArray(name:String, dispose:Bool=true):Void\r\n\t{\r\n\t\tlog(\"Removing byte array '\"+ name + \"'\");\r\n\t\t\r\n\t\tif (dispose && mByteArrays.exists(name))\r\n\t\t\tmByteArrays.get(name).clear();\r\n\t\t\r\n\t\tmByteArrays.remove(name);\r\n\t}\r\n\t\r\n\t/** Empties the queue and aborts any pending load operations. */\r\n\tpublic function purgeQueue():Void\r\n\t{\r\n\t\tmQueue.splice(0, mQueue.length);\r\n\t\tdispatchEventWith(Event.CANCEL);\r\n\t}\r\n\t\r\n\t/** Removes assets of all types, empties the queue and aborts any pending load operations.*/\r\n\tpublic function purge():Void\r\n\t{\r\n\t\tlog(\"Purging all assets, emptying queue\");\r\n\t\t\r\n\t\tpurgeQueue();\r\n\t\tdispose();\r\n\r\n\t\tmTextures = new Map<String, Texture>();\r\n\t\tmAtlases = new Map<String, TextureAtlas>();\r\n\t\tmSounds = new Map<String, Sound>();\r\n\t\tmXmls = new Map<String, Xml>();\r\n\t\tmObjects = new Map<String, Dynamic>();\r\n\t\tmByteArrays = new Map<String, ByteArray>();\r\n\t}\r\n\t\r\n\t// queued adding\r\n\t\r\n\t/** Enqueues one or more raw assets; they will only be available after successfully \r\n\t *  executing the \"loadQueue\" method. This method accepts a variety of different objects:\r\n\t *  \r\n\t *  <ul>\r\n\t *    <li>Strings or URLRequests containing an URL to a local or remote resource. Supported\r\n\t *        types: <code>png, jpg, gif, atf, mp3, xml, fnt, json, binary</code>.</li>\r\n\t *    <li>Instances of the File class (AIR only) pointing to a directory or a file.\r\n\t *        Directories will be scanned recursively for all supported types.</li>\r\n\t *    <li>Classes that contain <code>static</code> embedded assets.</li>\r\n\t *    <li>If the file extension is not recognized, the data is analyzed to see if\r\n\t *        contains Xml or JSON data. If it's neither, it is stored as ByteArray.</li>\r\n\t *  </ul>\r\n\t *  \r\n\t *  <p>Suitable object names are extracted automatically: A file named \"image.png\" will be\r\n\t *  accessible under the name \"image\". When enqueuing embedded assets via a class, \r\n\t *  the variable name of the embedded object will be used as its name. An exception\r\n\t *  are texture atlases: they will have the same name as the actual texture they are\r\n\t *  referencing.</p>\r\n\t *  \r\n\t *  <p>XMLs that contain texture atlases or bitmap fonts are processed directly: fonts are\r\n\t *  registered at the TextField class, atlas textures can be acquired with the\r\n\t *  \"getTexture()\" method. All other XMLs are available via \"getXml()\".</p>\r\n\t *  \r\n\t *  <p>If you pass in JSON data, it will be parsed into an object and will be available via\r\n\t *  \"getObject()\".</p>\r\n\t */\r\n\tpublic function enqueue(rawAssets:Dynamic):Void\r\n\t{\r\n\t\tif (Std.is(rawAssets, Array)) {\r\n\t\t\tvar rawAssetsArray:Array<Dynamic> = rawAssets;\r\n\t\t\tfor (i in 0...rawAssetsArray.length) \r\n\t\t\t{\r\n\t\t\t\tenqueueItem(rawAssetsArray[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tenqueueItem(rawAssets);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function enqueueItem(rawAssets:Dynamic):Void\r\n\t{\r\n\t\tvar fields:Array<String> = Reflect.fields(rawAssets);\r\n\t\t//for (rawAsset in rawAssets)\r\n\t\tfor (field in fields)\r\n\t\t{\r\n\t\t\tvar child = Reflect.getProperty(rawAssets, field);\r\n\t\t\tif (Std.is(child, Array))\r\n\t\t\t{\r\n\t\t\t\tenqueue(child);\r\n\t\t\t}\r\n\t\t\t/*else if (Std.is(child, Class))\r\n\t\t\t{\r\n\t\t\t\ttrace(\"child = \" + child);\r\n\t\t\t\tvar typeXml:Xml = describeType(child);\r\n\t\t\t\tvar childNode:Xml;\r\n\t\t\t\t\r\n\t\t\t\ttrace(\"typeXml = \" + typeXml);*/\r\n\t\t\t\t\r\n\t\t\t\t/*if (mVerbose)\r\n\t\t\t\t\tlog(\"Looking for static embedded assets in '\" + \r\n\t\t\t\t\t\t(typeXml.@name).split(\"::\").pop() + \"'\"); \r\n\t\t\t\t\r\n\t\t\t\tfor each (childNode in typeXml.constant.(@type == \"Class\"))\r\n\t\t\t\t\tenqueueWithName(child[childNode.@name], childNode.@name);\r\n\t\t\t\t\r\n\t\t\t\tfor each (childNode in typeXml.variable.(@type == \"Class\"))\r\n\t\t\t\t\tenqueueWithName(child[childNode.@name], childNode.@name);*/\r\n\t\t\t//}\r\n\t\t\t/*else if (Type.getClassName(Type.getClass(child)) == \"openfl.filesystem.File\")\r\n\t\t\t{\r\n\t\t\t\tif (!child[\"exists\"])\r\n\t\t\t\t{\r\n\t\t\t\t\tlog(\"File or directory not found: '\" + child[\"url\"] + \"'\");\r\n\t\t\t\t}\r\n\t\t\t\telse if (!child[\"isHidden\"])\r\n\t\t\t\t{\r\n\t\t\t\t\tif (child[\"isDirectory\"])\r\n\t\t\t\t\t\tenqueue.apply(this, child[\"getDirectoryListing\"]());\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tenqueueWithName(child);\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\telse if (Std.is(child, String) || Std.is(child, URLRequest))\r\n\t\t\t{\r\n\t\t\t\tenqueueWithName(child);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlog(\"Ignoring unsupported asset type: \" + Type.getClassName(Type.getClass(child)));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Enqueues a single asset with a custom name that can be used to access it later.\r\n\t *  If the asset is a texture, you can also add custom texture options.\r\n\t *  \r\n\t *  @param asset    The asset that will be enqueued; accepts the same objects as the\r\n\t *                  'enqueue' method.\r\n\t *  @param name     The name under which the asset will be found later. If you pass null or\r\n\t *                  omit the parameter, it's attempted to generate a name automatically.\r\n\t *  @param options  Custom options that will be used if 'asset' points to texture data.\r\n\t *  @return         the name with which the asset was registered.\r\n\t */\r\n\tpublic function enqueueWithName(asset:Dynamic, name:String=null,\r\n\t\t\t\t\t\t\t\t\toptions:TextureOptions=null):String\r\n\t{\r\n\t\ttrace(\"CHECK\");\r\n\t\tif (Type.getClassName(Type.getClass(asset)) == \"openfl.filesystem.File\")\r\n\t\t\tasset = StringTools.urlDecode(Reflect.getProperty(asset, \"url\"));\r\n\t\t\r\n\t\tif (name == null)    name = getName(asset);\r\n\t\tif (options == null) options = mDefaultTextureOptions.clone();\r\n\t\telse                 options = options.clone();\r\n\t\t\r\n\t\tlog(\"Enqueuing '\" + name + \"'\");\r\n\t\t\r\n\t\tmQueue.push({\r\n\t\t\tname: name,\r\n\t\t\tasset: asset,\r\n\t\t\toptions: options\r\n\t\t});\r\n\t\t\r\n\t\treturn name;\r\n\t}\r\n\t\r\n\t/** Loads all enqueued assets asynchronously. The 'onProgress' function will be called\r\n\t *  with a 'ratio' between '0.0' and '1.0', with '1.0' meaning that it's complete.\r\n\t *\r\n\t *  <p>When you call this method, the manager will save a reference to \"Starling.current\";\r\n\t *  all textures that are loaded will be accessible only from within this instance. Thus,\r\n\t *  if you are working with more than one Starling instance, be sure to call\r\n\t *  \"makeCurrent()\" on the appropriate instance before processing the queue.</p>\r\n\t *\r\n\t *  @param onProgress <code>function(ratio:Float):Void;</code>\r\n\t */\r\n\tpublic function loadQueue(onProgress:EDFunction):Void\r\n\t{\r\n\t\tif (onProgress == null)\r\n\t\t\tthrow new ArgumentError(\"Argument 'onProgress' must not be null\");\r\n\t\t\r\n\t\tif (mQueue.length == 0)\r\n\t\t{\r\n\t\t\tonProgress(1.0);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tmStarling = Starling.Current;\r\n\t\t\r\n\t\tif (mStarling == null || mStarling.context == null)\r\n\t\t\tthrow new Error(\"The Starling instance needs to be ready before assets can be loaded.\");\r\n\r\n\t\tvar PROGRESS_PART_ASSETS:Float = 0.9;\r\n\t\tvar PROGRESS_PART_XMLS:Float = 1.0 - PROGRESS_PART_ASSETS;\r\n\r\n\t\tvar i:Int;\r\n\t\tvar canceled:Bool = false;\r\n\t\tvar xmls = new Array<Xml>();\r\n\t\tvar assetInfos = mQueue.concat(new Array<Dynamic>());\r\n\t\tfor (j in 0...mQueue.length) \r\n\t\t{\r\n\t\t\tassetInfos.push(mQueue[j]);\r\n\t\t}\r\n\t\t\r\n\t\tvar assetCount:Int = mQueue.length;\r\n\t\tvar assetProgress = new Array<Float>();\r\n\t\tvar assetIndex:Int = 0;\r\n\t\t\r\n\t\tvar updateAssetProgress:EDFunction = null;\r\n\t\tvar loadQueueElement:EDFunction = null;\r\n\t\tvar loadNextQueueElement:EDFunction = null;\r\n\t\tvar processXmls:EDFunction = null;\r\n\t\tvar processXml:EDFunction = null;\r\n\t\tvar cancel:EDFunction = null;\r\n\t\tvar finish:EDFunction = null;\r\n\t\t\r\n\t\tupdateAssetProgress = function(index:Int, progress:Float):Void\r\n\t\t{\r\n\t\t\tassetProgress[index] = progress;\r\n\r\n\t\t\tvar sum:Float = 0.0;\r\n\t\t\tvar len:Int = assetProgress.length;\r\n\r\n\t\t\tfor (i in 0...len)\r\n\t\t\t\tsum += assetProgress[i];\r\n\r\n\t\t\tonProgress(sum / len * PROGRESS_PART_ASSETS);\r\n\t\t};\r\n\t\t\r\n\t\tloadQueueElement = function(index:Int, assetInfo:Dynamic):Void\r\n\t\t{\r\n\t\t\tif (canceled) return;\r\n\t\t\t\r\n\t\t\tvar onElementProgress:EDFunction = function(progress:Float):Void\r\n\t\t\t{\r\n\t\t\t\tupdateAssetProgress(index, progress * 0.8); // keep 20 % for completion\r\n\t\t\t};\r\n\t\t\tvar onElementLoaded:EDFunction = function():Void\r\n\t\t\t{\r\n\t\t\t\tupdateAssetProgress(index, 1.0);\r\n\t\t\t\tassetCount--;\r\n\r\n\t\t\t\tif (assetCount > 0) loadNextQueueElement();\r\n\t\t\t\telse                processXmls();\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tprocessRawAsset(assetInfo.name, assetInfo.asset, assetInfo.options,\r\n\t\t\t\txmls, onElementProgress, onElementLoaded);\r\n\t\t};\r\n\t\t\r\n\t\tloadNextQueueElement = function():Void\r\n\t\t{\r\n\t\t\tif (assetIndex < assetInfos.length)\r\n\t\t\t{\r\n\t\t\t\t// increment asset index *before* using it, since\r\n\t\t\t\t// 'loadQueueElement' could by synchronous in subclasses.\r\n\t\t\t\tvar index:Int = assetIndex++;\r\n\t\t\t\tloadQueueElement(index, assetInfos[index]);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tprocessXmls = function():Void\r\n\t\t{\r\n\t\t\t// xmls are processed separately at the end, because the textures they reference\r\n\t\t\t// have to be available for other XMLs. Texture atlases are processed first:\r\n\t\t\t// that way, their textures can be referenced, too.\r\n\t\t\t\r\n\t\t\ttrace(\"FIX\");\r\n\t\t\t/*xmls.sort(function(a:Xml, b:Xml):Int { \r\n\t\t\t\treturn a.localName() == \"TextureAtlas\" ? -1 : 1; \r\n\t\t\t});*/\r\n\r\n\t\t\t//Timer.delay(processXml, 1); //setTimeout(processXml, 1, 0);\r\n\t\t\tTimer.delay(function () {\r\n\t\t\t\tprocessXml(0);\r\n\t\t\t}, 1);\r\n\t\t};\r\n\t\t\r\n\t\tprocessXml = function(index:Int):Void\r\n\t\t{\r\n\t\t\tif (canceled) return;\r\n\t\t\telse if (index == xmls.length)\r\n\t\t\t{\r\n\t\t\t\tfinish();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttrace(\"FIX\");\r\n\t\t\tvar name:String;\r\n\t\t\tvar texture:Texture;\r\n\t\t\tvar xml:Xml = xmls[index];\r\n\t\t\tvar rootNode:String = \"\";\r\n\t\t\tvar xmlProgress:Float = (index + 1) / (xmls.length + 1);\r\n\t\t\t\r\n\t\t\tvar firstElement:Xml = xml.firstElement();\r\n\t\t\tif(firstElement.nodeType == Xml.Element ) {\r\n\t\t\t\trootNode = firstElement.nodeName;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (rootNode == \"TextureAtlas\")\r\n\t\t\t{\r\n\t\t\t\tname = firstElement.get(\"imagePath\").split(\".\")[0];// name = getName(xml.@imagePath.toString());\r\n\t\t\t\ttexture = getTexture(name);\r\n\t\t\t\t\r\n\t\t\t\tif (texture != null)\r\n\t\t\t\t{\r\n\t\t\t\t\taddTextureAtlas(name, new TextureAtlas(texture, xml));\r\n\t\t\t\t\tremoveTexture(name, false);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (mKeepAtlasXmls) addXml(name, xml);\r\n\t\t\t\t\t//else System.disposeXML(xml);\r\n\t\t\t\t}\r\n\t\t\t\telse log(\"Cannot create atlas: texture '\" + name + \"' is missing.\");\r\n\t\t\t}\r\n\t\t\telse if (rootNode == \"font\")\r\n\t\t\t{\r\n\t\t\t\tname = \"\";\r\n\t\t\t\tfor (font in xml.elementsNamed(\"font\")) {\r\n\t\t\t\t\tif (font.nodeType == Xml.Element ) {\r\n\t\t\t\t\t\tfor (pages in font.elementsNamed(\"pages\")) {\r\n\t\t\t\t\t\t\tif (pages.nodeType == Xml.Element ) {\r\n\t\t\t\t\t\t\t\tfor (page in pages.elementsNamed(\"page\")) {\r\n\t\t\t\t\t\t\t\t\tif (page.nodeType == Xml.Element ) {\r\n\t\t\t\t\t\t\t\t\t\tname = page.get(\"file\").split(\".\")[0];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\ttexture = getTexture(name);\r\n\t\t\t\t\r\n\t\t\t\tif (texture != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tlog(\"Adding bitmap font '\" + name + \"'\");\r\n\t\t\t\t\tTextField.registerBitmapFont(new BitmapFont(texture, xml), name);\r\n\t\t\t\t\tremoveTexture(name, false);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (mKeepFontXmls) addXml(name, xml);\r\n\t\t\t\t\t//else System.disposeXML(xml);\r\n\t\t\t\t}\r\n\t\t\t\telse log(\"Cannot create bitmap font: texture '\" + name + \"' is missing.\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tthrow new Error(\"Xml contents not recognized: \" + rootNode);\r\n\t\t\t\r\n\t\t\tonProgress(PROGRESS_PART_ASSETS + PROGRESS_PART_XMLS * xmlProgress);\r\n\t\t\t//setTimeout(processXml, 1, index + 1);\r\n\t\t\tTimer.delay(function () {\r\n\t\t\t\tprocessXml(index + 1);\r\n\t\t\t}, 1);\r\n\t\t};\r\n\t\t\r\n\t\tcancel = function():Void\r\n\t\t{\r\n\t\t\tremoveEventListener(Event.CANCEL, cancel);\r\n\t\t\tmNumLoadingQueues--;\r\n\t\t\tcanceled = true;\r\n\t\t};\r\n\t\t\r\n\t\tfinish = function():Void\r\n\t\t{\r\n\t\t\t// now would be a good time for a clean-up\r\n\t\t\t//System.pauseForGCIfCollectionImminent(0);\r\n\t\t\tSystem.gc();\r\n\r\n\t\t\t// We dance around the final \"onProgress\" call with some \"setTimeout\" calls here\r\n\t\t\t// to make sure the progress bar gets the chance to be rendered. Otherwise, all\r\n\t\t\t// would happen in one frame.\r\n\t\t\t\r\n\t\t\tTimer.delay(function():Void\r\n\t\t\t{\r\n\t\t\t\tif (!canceled)\r\n\t\t\t\t{\r\n\t\t\t\t\tcancel();\r\n\t\t\t\t\tonProgress(1.0);\r\n\t\t\t\t}\r\n\t\t\t}, 1);\r\n\t\t};\r\n\t\t\r\n\t\tfor (i in 0...assetCount)\r\n\t\t\tassetProgress[i] = 0.0;\r\n\r\n\t\tfor (i in 0...mNumConnections)\r\n\t\t\tloadNextQueueElement();\r\n\t\t\r\n\t\tmQueue.splice(0, mQueue.length);\r\n\t\tmNumLoadingQueues++;\r\n\t\taddEventListener(Event.CANCEL, cancel);\r\n\t}\r\n\t\r\n\tprivate function processRawAsset(name:String, rawAsset:Dynamic, options:TextureOptions,\r\n\t\t\t\t\t\t\t\t\t xmls:Array<Xml>,\r\n\t\t\t\t\t\t\t\t\t onProgress:EDFunction, onComplete:EDFunction):Void\r\n\t{\r\n\t\tvar canceled:Bool = false;\r\n\t\tvar process:EDFunction = null;\r\n\t\tvar progress:EDFunction = null;\r\n\t\tvar cancel:EDFunction = null;\r\n\t\t\r\n\t\tprocess = function(asset:Dynamic):Void\r\n\t\t{\r\n\t\t\tvar texture:Texture;\r\n\t\t\tvar bytes:ByteArray;\r\n\t\t\tvar object:Dynamic = null;\r\n\t\t\tvar xml:Xml = null;\r\n\t\t\t\r\n\t\t\t// the 'current' instance might have changed by now\r\n\t\t\t// if we're running in a set-up with multiple instances.\r\n\t\t\tmStarling.makeCurrent();\r\n\t\t\t\r\n\t\t\tif (canceled)\r\n\t\t\t{\r\n\t\t\t\t// do nothing\r\n\t\t\t}\r\n\t\t\telse if (asset == null)\r\n\t\t\t{\r\n\t\t\t\tonComplete();\r\n\t\t\t}\r\n\t\t\telse if (Std.is(asset, Sound))\r\n\t\t\t{\r\n\t\t\t\taddSound(name, cast asset);\r\n\t\t\t\tonComplete();\r\n\t\t\t}\r\n\t\t\telse if (Std.is(asset, Xml))\r\n\t\t\t{\r\n\t\t\t\ttrace(\"CHECK\");\r\n\t\t\t\txml = cast asset;\r\n\t\t\t\t\r\n\t\t\t\tvar firstNodeName:String = \"\";\r\n\t\t\t\tif( xml.firstElement().nodeType == Xml.Element ) {\r\n\t\t\t\t\tfirstNodeName = xml.firstElement().nodeName;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (firstNodeName == \"TextureAtlas\" || firstNodeName == \"font\")\r\n\t\t\t\t\txmls.push(xml);\r\n\t\t\t\telse\r\n\t\t\t\t\taddXml(name, xml);\r\n\t\t\t\t\r\n\t\t\t\tonComplete();\r\n\t\t\t}\r\n\t\t\telse if (mStarling.context.driverInfo == \"Disposed\")\r\n\t\t\t{\r\n\t\t\t\tlog(\"Context lost while processing assets, retrying ...\");\r\n\t\t\t\tTimer.delay(function () { // setTimeout(process, 1, asset);\r\n\t\t\t\t\tprocess(asset);\r\n\t\t\t\t}, 1);\r\n\t\t\t\treturn; // to keep CANCEL event listener intact\r\n\t\t\t}\r\n\t\t\telse if (Std.is(asset, Bitmap))\r\n\t\t\t{\r\n\t\t\t\ttexture = Texture.fromData(asset, options);\r\n\t\t\t\ttexture.root.onRestore = function():Void\r\n\t\t\t\t{\r\n\t\t\t\t\tmNumLostTextures++;\r\n\t\t\t\t\tloadRawAsset(rawAsset, null, function(asset:Dynamic):Void\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttry { texture.root.uploadBitmap(cast asset); }\r\n\t\t\t\t\t\tcatch (e:Error) { log(\"Texture restoration failed: \" + e.message); }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tasset.bitmapData.dispose();\r\n\t\t\t\t\t\tmNumRestoredTextures++;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (mNumLostTextures == mNumRestoredTextures)\r\n\t\t\t\t\t\t\tdispatchEventWith(Event.TEXTURES_RESTORED);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\tasset.bitmapData.dispose();\r\n\t\t\t\taddTexture(name, texture);\r\n\t\t\t\tonComplete();\r\n\t\t\t}\r\n\t\t\telse if (Std.is(asset, BitmapData))\r\n\t\t\t{\r\n\t\t\t\ttexture = Texture.fromData(asset, options);\r\n\t\t\t\ttexture.root.onRestore = function():Void\r\n\t\t\t\t{\r\n\t\t\t\t\tmNumLostTextures++;\r\n\t\t\t\t\tloadRawAsset(rawAsset, null, function(asset:Dynamic):Void\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttry { texture.root.uploadBitmapData(cast asset); }\r\n\t\t\t\t\t\tcatch (e:Error) { log(\"Texture restoration failed: \" + e.message); }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tasset.dispose();\r\n\t\t\t\t\t\tmNumRestoredTextures++;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (mNumLostTextures == mNumRestoredTextures)\r\n\t\t\t\t\t\t\tdispatchEventWith(Event.TEXTURES_RESTORED);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\tasset.dispose();\r\n\t\t\t\taddTexture(name, texture);\r\n\t\t\t\tonComplete();\r\n\t\t\t}\r\n\t\t\telse if (Std.is(asset, ByteArrayData))\r\n\t\t\t{\r\n\t\t\t\tbytes = cast asset;\r\n\t\t\t\t\r\n\t\t\t\tvar isAtfData = AtfData.isAtfData(bytes);\r\n\t\t\t\tif (isAtfData)\r\n\t\t\t\t{\r\n\t\t\t\t\toptions.onReady = prependCallback(options.onReady, onComplete);\r\n\t\t\t\t\ttexture = Texture.fromData(bytes, options);\r\n\t\t\t\t\ttexture.root.onRestore = function():Void\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmNumLostTextures++;\r\n\t\t\t\t\t\tloadRawAsset(rawAsset, null, function(asset:Dynamic):Void\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttry { texture.root.uploadAtfData(cast asset, 0, true); }\r\n\t\t\t\t\t\t\tcatch (e:Error) { log(\"Texture restoration failed: \" + e.message); }\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tasset.clear();\r\n\t\t\t\t\t\t\tmNumRestoredTextures++;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (mNumLostTextures == mNumRestoredTextures)\r\n\t\t\t\t\t\t\t\tdispatchEventWith(Event.TEXTURES_RESTORED);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tbytes.clear();\r\n\t\t\t\t\taddTexture(name, texture);\r\n\t\t\t\t\tonComplete();\r\n\t\t\t\t}\r\n\t\t\t\telse if (byteArrayStartsWith(bytes, \"{\") || byteArrayStartsWith(bytes, \"[\"))\r\n\t\t\t\t{\r\n\t\t\t\t\ttrace(\"FIX\");\r\n\t\t\t\t\t/*try { object = JSON.parse(bytes.readUTFBytes(bytes.length)); }\r\n\t\t\t\t\tcatch (e:Error)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlog(\"Could not parse JSON: \" + e.message);\r\n\t\t\t\t\t\tdispatchEventWith(Event.PARSE_ERROR, false, name);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (object) addObject(name, object);\r\n\r\n\t\t\t\t\tbytes.clear();\r\n\t\t\t\t\tonComplete();*/\r\n\t\t\t\t}\r\n\t\t\t\telse if (byteArrayStartsWith(bytes, \"<\"))\r\n\t\t\t\t{\r\n\t\t\t\t\ttrace(\"FIX\");\r\n\t\t\t\t\t/*try { xml = Xml.parse(bytes); }\r\n\t\t\t\t\tcatch (e:Error)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlog(\"Could not parse Xml: \" + e.message);\r\n\t\t\t\t\t\tdispatchEventWith(Event.PARSE_ERROR, false, name);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprocess(xml);\r\n\t\t\t\t\tbytes.clear();*/\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\taddByteArray(name, bytes);\r\n\t\t\t\t\tonComplete();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\taddObject(name, asset);\r\n\t\t\t\tonComplete();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// avoid that objects stay in memory (through 'onRestore' functions)\r\n\t\t\tasset = null;\r\n\t\t\tbytes = null;\r\n\t\t\t\r\n\t\t\tremoveEventListener(Event.CANCEL, cancel);\r\n\t\t};\r\n\t\t\r\n\t\tprogress = function(ratio:Float):Void\r\n\t\t{\r\n\t\t\tif (!canceled) onProgress(ratio);\r\n\t\t};\r\n\t\t\r\n\t\tcancel = function():Void\r\n\t\t{\r\n\t\t\tcanceled = true;\r\n\t\t};\r\n\t\t\r\n\t\taddEventListener(Event.CANCEL, cancel);\r\n\t\tloadRawAsset(rawAsset, progress, process);\r\n\t}\r\n\t\r\n\t/** This method is called internally for each element of the queue when it is loaded.\r\n\t *  'rawAsset' is typically either a class (pointing to an embedded asset) or a string\r\n\t *  (containing the path to a file). For texture data, it will also be called after a\r\n\t *  context loss.\r\n\t *\r\n\t *  <p>The method has to transform this object into one of the types that the AssetManager\r\n\t *  can work with, e.g. a Bitmap, a Sound, Xml data, or a ByteArray. This object needs to\r\n\t *  be passed to the 'onComplete' callback.</p>\r\n\t *\r\n\t *  <p>The calling method will then process this data accordingly (e.g. a Bitmap will be\r\n\t *  transformed into a texture). Unknown types will be available via 'getObject()'.</p>\r\n\t *\r\n\t *  <p>When overriding this method, you can call 'onProgress' with a number between 0 and 1\r\n\t *  to update the total queue loading progress.</p>\r\n\t */\r\n\tprivate function loadRawAsset(rawAsset:Dynamic, onProgress:EDFunction, onComplete:EDFunction):Void\r\n\t{\r\n\t\tvar onIoError:EDFunction = null;\r\n\t\tvar onSecurityError:EDFunction = null;\r\n\t\tvar onHttpResponseStatus:EDFunction = null;\r\n\t\tvar onLoadProgress:EDFunction = null;\r\n\t\tvar onUrlLoaderComplete:EDFunction = null;\r\n\t\tvar onLoaderComplete:EDFunction = null;\r\n\t\tvar complete:EDFunction = null;\r\n\t\t\r\n\t\tvar extension:String = null;\r\n\t\tvar loaderInfo:LoaderInfo = null;\r\n\t\tvar urlLoader:URLLoader = null;\r\n\t\tvar urlRequest:URLRequest = null;\r\n\t\tvar url:String = null;\r\n\t\t\r\n\t\tonIoError = function(event:IOErrorEvent):Void\r\n\t\t{\r\n\t\t\tlog(\"IO error: \" + event.text);\r\n\t\t\tdispatchEventWith(Event.IO_ERROR, false, url);\r\n\t\t\tcomplete(null);\r\n\t\t};\r\n\r\n\t\tonSecurityError = function(event:SecurityErrorEvent):Void\r\n\t\t{\r\n\t\t\tlog(\"security error: \" + event.text);\r\n\t\t\tdispatchEventWith(Event.SECURITY_ERROR, false, url);\r\n\t\t\tcomplete(null);\r\n\t\t};\r\n\r\n\t\tonHttpResponseStatus = function(event:HTTPStatusEvent):Void\r\n\t\t{\r\n\t\t\ttrace(\"FIX\");\r\n\t\t\t/*if (extension == null)\r\n\t\t\t{\r\n\t\t\t\tvar headers:Array<Dynamic> = event.responseHeaders;// event[\"responseHeaders\"];\r\n\t\t\t\tvar contentType:String = getHttpHeader(headers, \"Content-Type\");\r\n\r\n\t\t\t\tif (contentType != null && ~/(audio|image)\\//.exec(contentType))\r\n\t\t\t\t\textension = contentType.split(\"/\").pop();\r\n\t\t\t}*/\r\n\t\t};\r\n\r\n\t\tonLoadProgress = function(event:ProgressEvent):Void\r\n\t\t{\r\n\t\t\tif (onProgress != null && event.bytesTotal > 0)\r\n\t\t\t\tonProgress(event.bytesLoaded / event.bytesTotal);\r\n\t\t};\r\n\t\t\r\n\t\tonUrlLoaderComplete = function(event:Dynamic):Void\r\n\t\t{\r\n\t\t\tvar bytes:ByteArray = transformData(cast urlLoader.data, url);\r\n\t\t\tvar sound:Sound;\r\n\t\t\t\r\n\t\t\tif (bytes == null)\r\n\t\t\t{\r\n\t\t\t\tcomplete(null);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (extension != null)\r\n\t\t\t\textension = extension.toLowerCase();\r\n\t\t\t\r\n\t\t\tswitch (extension)\r\n\t\t\t{\r\n\t\t\t\tcase \"mpeg\":\r\n\t\t\t\tcase \"mp3\":\r\n\t\t\t\t\tsound = new Sound();\r\n\t\t\t\t\tsound.loadCompressedDataFromByteArray(bytes, bytes.length);\r\n\t\t\t\t\tbytes.clear();\r\n\t\t\t\t\tcomplete(sound);\r\n\t\t\t\tcase \"jpg\":\r\n\t\t\t\tcase \"jpeg\":\r\n\t\t\t\tcase \"png\":\r\n\t\t\t\tcase \"gif\":\r\n\t\t\t\t\tvar loaderContext:LoaderContext = new LoaderContext(mCheckPolicyFile);\r\n\t\t\t\t\tvar loader:Loader = new Loader();\r\n\t\t\t\t\t//loaderContext.imageDecodingPolicy = ImageDecodingPolicy.ON_LOAD;\r\n\t\t\t\t\tloaderInfo = loader.contentLoaderInfo;\r\n\t\t\t\t\tloaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onIoError);\r\n\t\t\t\t\tloaderInfo.addEventListener(Event.COMPLETE, onLoaderComplete);\r\n\t\t\t\t\tloader.loadBytes(bytes); // loader.loadBytes(bytes, loaderContext);\r\n\t\t\t\tdefault: // any Xml / JSON / binary data \r\n\t\t\t\t\tcomplete(bytes);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tonLoaderComplete = function(event:Dynamic):Void\r\n\t\t{\r\n\t\t\turlLoader.data.clear();\r\n\t\t\tcomplete(event.target.content);\r\n\t\t};\r\n\t\t\r\n\t\tcomplete = function(asset:Dynamic):Void\r\n\t\t{\r\n\t\t\t// clean up event listeners\r\n\t\t\t\r\n\t\t\tif (urlLoader != null)\r\n\t\t\t{\r\n\t\t\t\turlLoader.removeEventListener(IOErrorEvent.IO_ERROR, onIoError);\r\n\t\t\t\turlLoader.removeEventListener(SecurityErrorEvent.SECURITY_ERROR, onSecurityError);\r\n\t\t\t\turlLoader.removeEventListener(HTTP_RESPONSE_STATUS, onHttpResponseStatus);\r\n\t\t\t\turlLoader.removeEventListener(ProgressEvent.PROGRESS, onLoadProgress);\r\n\t\t\t\turlLoader.removeEventListener(Event.COMPLETE, onUrlLoaderComplete);\r\n\t\t\t}\r\n\r\n\t\t\tif (loaderInfo != null)\r\n\t\t\t{\r\n\t\t\t\tloaderInfo.removeEventListener(IOErrorEvent.IO_ERROR, onIoError);\r\n\t\t\t\tloaderInfo.removeEventListener(Event.COMPLETE, onLoaderComplete);\r\n\t\t\t}\r\n\r\n\t\t\t// On mobile, it is not allowed / endorsed to make stage3D calls while the app\r\n\t\t\t// is in the background. Thus, we pause queue processing if that's the case.\r\n\t\t\t\r\n\t\t\t//if (SystemUtil.isDesktop)\r\n\t\t\t\tonComplete(asset);\r\n\t\t\t//else\r\n\t\t\t//\tSystemUtil.executeWhenApplicationIsActive(onComplete, asset);\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\tif (Std.is(rawAsset, Class))\r\n\t\t{\r\n\t\t\tTimer.delay(function () { // setTimeout(complete, 1, Type.createInstance(rawAsset));\r\n\t\t\t\tcomplete(Type.createInstance(rawAsset, []));\r\n\t\t\t}, 1);\r\n\t\t}\r\n\t\telse if (Std.is(rawAsset, String) || Std.is(rawAsset, URLRequest))\r\n\t\t{\r\n\t\t\tif (Std.is(rawAsset, String)) {\r\n\t\t\t\turlRequest = new URLRequest(rawAsset);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\turlRequest = cast rawAsset;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//if (urlRequest == null) urlRequest = new URLRequest(cast rawAsset);\r\n\t\t\turl = urlRequest.url;\r\n\t\t\textension = getExtensionFromUrl(url);\r\n\r\n\t\t\turlLoader = new URLLoader();\r\n\t\t\turlLoader.dataFormat = URLLoaderDataFormat.BINARY;\r\n\t\t\turlLoader.addEventListener(IOErrorEvent.IO_ERROR, onIoError);\r\n\t\t\turlLoader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, onSecurityError);\r\n\t\t\turlLoader.addEventListener(HTTP_RESPONSE_STATUS, onHttpResponseStatus);\r\n\t\t\turlLoader.addEventListener(ProgressEvent.PROGRESS, onLoadProgress);\r\n\t\t\turlLoader.addEventListener(Event.COMPLETE, onUrlLoaderComplete);\r\n\t\t\turlLoader.load(urlRequest);\r\n\t\t}\r\n\t\telse if (Std.is(rawAsset, Dynamic)) {\r\n\t\t\tTimer.delay(function () {\r\n\t\t\t\tcomplete(rawAsset);\r\n\t\t\t}, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// helpers\r\n\r\n\t/** This method is called by 'enqueue' to determine the name under which an asset will be\r\n\t *  accessible; override it if you need a custom naming scheme. Note that this method won't\r\n\t *  be called for embedded assets.\r\n\t *\r\n\t *  @param rawAsset   either a String, an URLRequest or a FileReference.\r\n\t */\r\n\tprivate function getName(rawAsset:Dynamic):String\r\n\t{\r\n\t\tvar name:String = null;\r\n\r\n\t\tif      (Std.is(rawAsset, String))        name =  cast(rawAsset, String);\r\n\t\telse if (Std.is(rawAsset, URLRequest))    name =  cast(rawAsset, URLRequest).url;\r\n\t\t//else if (Std.is(rawAsset, FileReference)) name =  cast(rawAsset, FileReference).name;\r\n\r\n\t\tif (name != null)\r\n\t\t{\r\n\t\t\tname = StringTools.replace(name, \"%20\", \" \");// name.replace(~/%20/g, \" \"); // URLs use '%20' for spaces\r\n\t\t\tname = getBasenameFromUrl(name);\r\n\r\n\t\t\tif (name != null) return name;\r\n\t\t\telse throw new ArgumentError(\"Could not extract name from String '\" + rawAsset + \"'\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tname = Type.getClassName(Type.getClass(rawAsset));\r\n\t\t\tthrow new ArgumentError(\"Cannot extract names for objects of type '\" + name + \"'\");\r\n\t\t}\r\n\t}\r\n\r\n\t/** This method is called when raw byte data has been loaded from an URL or a file.\r\n\t *  Override it to process the downloaded data in some way (e.g. decompression) or\r\n\t *  to cache it on disk.\r\n\t *\r\n\t *  <p>It's okay to call one (or more) of the 'add...' methods from here. If the binary\r\n\t *  data contains multiple objects, this allows you to process all of them at once.\r\n\t *  Return 'null' to abort processing of the current item.</p> */\r\n\tprivate function transformData(data:ByteArray, url:String):ByteArray\r\n\t{\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/** This method is called during loading of assets when 'verbose' is activated. Per\r\n\t *  default, it traces 'message' to the console. */\r\n\tprivate function log(message:String):Void\r\n\t{\r\n\t\tif (mVerbose) trace(\"[AssetManager]\", message);\r\n\t}\r\n\t\r\n\tprivate function byteArrayStartsWith(bytes:ByteArray, char:String):Bool\r\n\t{\r\n\t\tvar start:Int = 0;\r\n\t\tvar length:Int = bytes.length;\r\n\t\tvar wanted:Int = char.charCodeAt(0);\r\n\t\t\r\n\t\tvar b0:Int = 0;\r\n\t\tvar b1:Int = 0;\r\n\t\tvar b2:Int = 0;\r\n\t\tvar b3:Int = 0;\r\n\t\t\r\n\t\t\r\n\t\tvar pass:Bool = false;\r\n\t\t// recognize BOMs\r\n\t\tif (pass == false && length >= 4) {\r\n\t\t\tbytes.position = 0;\r\n\t\t\tb0 = bytes.readByte();\r\n\t\t\tb1 = bytes.readByte();\r\n\t\t\tb2 = bytes.readByte();\r\n\t\t\tb3 = bytes.readByte();\r\n\t\t\t\r\n\t\t\tif ((b0 == 0x00 && b1 == 0x00 && b2 == 0xfe && b3 == 0xff) || (b0 == 0xff && b1 == 0xfe && b2 == 0x00 && b3 == 0x00)) {\r\n\t\t\t\tstart = 4; // UTF-32\r\n\t\t\t\tpass = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pass == false && length >= 3) {\r\n\t\t\tbytes.position = 0;\r\n\t\t\tb0 = bytes.readByte();\r\n\t\t\tb1 = bytes.readByte();\r\n\t\t\tb2 = bytes.readByte();\r\n\t\t\t\r\n\t\t\tif (b0 == 0xef && b1 == 0xbb && b2 == 0xbf) {\r\n\t\t\t\tstart = 3; // UTF-8\r\n\t\t\t\tpass = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pass == false && length >= 2) {\r\n\t\t\tbytes.position = 0;\r\n\t\t\tb0 = bytes.readByte();\r\n\t\t\tb1 = bytes.readByte();\r\n\t\t\t\r\n\t\t\tif ((b0 == 0xfe && b1 == 0xff) || (b0 == 0xff && b1 == 0xfe)) {\r\n\t\t\t\tstart = 2; // UTF-16\r\n\t\t\t\tpass = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// find first meaningful letter\r\n\t\t\r\n\t\tbytes.position = start;\r\n\t\tfor (i in start...length)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tvar byte:Int = bytes.readByte();// bytes[i];\r\n\t\t\tif (byte == 0 || byte == 10 || byte == 13 || byte == 32) continue; // null, \\n, \\r, space\r\n\t\t\telse return byte == wanted;\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tprivate function getDictionaryKeys(map:Map<String,Dynamic>, prefix:String=\"\", result:Array<String>=null):Array<String>\r\n\t{\r\n\t\tif (result == null) result = new Array<String>();\r\n\t\t\r\n\t\ttrace(\"CHECK!\");\r\n\t\tfor (key in map.keys())\r\n\t\t{\r\n\t\t\tif (key.indexOf(prefix) == 0) {\r\n\t\t\t\t//result[result.length] = name; // avoid 'push'\r\n\t\t\t\tresult.push(key); // why do we avoid 'push'?\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*for (name in map) {\r\n\t\t\tif (name.indexOf(prefix) == 0) {\r\n\t\t\t\t//result[result.length] = name; // avoid 'push'\r\n\t\t\t\tresult.push(cast name); // why do we avoid 'push'?\r\n\t\t\t}\r\n\t\t}*/\r\n\t\t\r\n\t\ttrace(\"CHECK Array.CASEINSENSITIVE is needed\");\r\n\t\t//result.sort(Array.CASEINSENSITIVE);\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tprivate function getHttpHeader(headers:Array<Dynamic>, headerName:String):String\r\n\t{\r\n\t\tif (headers != null)\r\n\t\t{\r\n\t\t\tfor (i in 0...headers.length) \r\n\t\t\t{\r\n\t\t\t\tvar header:Dynamic = headers[i];\r\n\t\t\t\tif (Reflect.getProperty(header, \"name\") == headerName) return Reflect.getProperty(header, \"value\");\r\n\t\t\t}\r\n\t\t\t//for (var header:Dynamic in headers)\r\n\t\t\t//\tif (header.name == headerName) return header.value;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/** Extracts the base name of a file path or URL, i.e. the file name without extension. */\r\n\tprivate function getBasenameFromUrl(url:String):String\r\n\t{\r\n\t\ttrace(\"RESTORE REGEX\");\r\n\t\tvar split:Array<String> = url.split(\"/\");\r\n\t\tvar returnVal:String = split[split.length - 1];\r\n\t\tvar split1:Array<String> = url.split(\".\");\r\n\t\treturn split1[0];\r\n\t\t/*var matches:Array = NAME_REGEX.exec(url);\r\n\t\tif (matches && matches.length > 0) return matches[1];\r\n\t\telse return null;*/\r\n\t}\r\n\r\n\t/** Extracts the file extension from an URL. */\r\n\tprivate function getExtensionFromUrl(url:String):String\r\n\t{\r\n\t\ttrace(\"RESTORE REGEX\");\r\n\t\tvar split:Array<String> = url.split(\"/\");\r\n\t\tvar returnVal:String = split[split.length - 1];\r\n\t\tvar split1:Array<String> = url.split(\".\");\r\n\t\treturn split1[split1.length - 1];\r\n\t\t/*var matches:Array = NAME_REGEX.exec(url);\r\n\t\tif (matches && matches.length > 1) return matches[2];\r\n\t\telse return null;*/\r\n\t}\r\n\r\n\tprivate function prependCallback(oldCallback:EDFunction, newCallback:EDFunction):EDFunction\r\n\t{\r\n\t\t// TODO: it might make sense to add this (together with \"appendCallback\")\r\n\t\t//       as a public utility method (\"FunctionUtil\"?)\r\n\r\n\t\tif (oldCallback == null) return newCallback;\r\n\t\telse if (newCallback == null) return oldCallback;\r\n\t\telse return function():Void\r\n\t\t{\r\n\t\t\tnewCallback();\r\n\t\t\toldCallback();\r\n\t\t};\r\n\t}\r\n\r\n\t// properties\r\n\t\r\n\t/** The queue contains one 'Dynamic' for each enqueued asset. Each object has 'asset'\r\n\t *  and 'name' properties, pointing to the raw asset and its name, respectively. */\r\n\tprivate function get_queue():Array<Dynamic> { return mQueue; }\r\n\t\r\n\t/** Returns the number of raw assets that have been enqueued, but not yet loaded. */\r\n\tprivate function get_numQueuedAssets():Int { return mQueue.length; }\r\n\t\r\n\t/** When activated, the class will trace information about added/enqueued assets.\r\n\t *  @default true */\r\n\tprivate function get_verbose():Bool { return mVerbose; }\r\n\tprivate function set_verbose(value:Bool):Bool\r\n\t{\r\n\t\tmVerbose = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Indicates if a queue is currently being loaded. */\r\n\tprivate function get_isLoading():Bool { return mNumLoadingQueues > 0; }\r\n\r\n\t/** For bitmap textures, this flag indicates if mip maps should be generated when they \r\n\t *  are loaded; for ATF textures, it indicates if mip maps are valid and should be\r\n\t *  used. @default false */\r\n\tprivate function get_useMipMaps():Bool { return mDefaultTextureOptions.mipMapping; }\r\n\tprivate function set_useMipMaps(value:Bool):Bool\r\n\t{\r\n\t\tmDefaultTextureOptions.mipMapping = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Textures that are created from Bitmaps or ATF files will have the scale factor \r\n\t *  assigned here. @default 1 */\r\n\tprivate function get_scaleFactor():Float { return mDefaultTextureOptions.scale; }\r\n\tprivate function set_scaleFactor(value:Float):Float\r\n\t{\r\n\t\tmDefaultTextureOptions.scale = value;\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/** Textures that are created from Bitmaps will be uploaded to the GPU with the\r\n\t *  <code>Context3DTextureFormat</code> assigned to this property. @default \"bgra\" */\r\n\tprivate function get_textureFormat():Context3DTextureFormat { return mDefaultTextureOptions.format; }\r\n\tprivate function set_textureFormat(value:Context3DTextureFormat):Context3DTextureFormat\r\n\t{\r\n\t\tmDefaultTextureOptions.format = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\t/** Specifies whether a check should be made for the existence of a URL policy file before\r\n\t *  loading an object from a remote server. More information about this topic can be found \r\n\t *  in the 'openfl.system.LoaderContext' documentation. @default false */\r\n\tprivate function get_checkPolicyFile():Bool { return mCheckPolicyFile; }\r\n\tprivate function set_checkPolicyFile(value:Bool):Bool\r\n\t{\r\n\t\tmCheckPolicyFile = value;\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/** Indicates if atlas Xml data should be stored for access via the 'getXml' method.\r\n\t *  If true, you can access an Xml under the same name as the atlas.\r\n\t *  If false, XMLs will be disposed when the atlas was created. @default false. */\r\n\tprivate function get_keepAtlasXmls():Bool { return mKeepAtlasXmls; }\r\n\tprivate function set_keepAtlasXmls(value:Bool):Bool\r\n\t{\r\n\t\tmKeepAtlasXmls = value;\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/** Indicates if bitmap font Xml data should be stored for access via the 'getXml' method.\r\n\t *  If true, you can access an Xml under the same name as the bitmap font.\r\n\t *  If false, XMLs will be disposed when the font was created. @default false. */\r\n\tprivate function get_keepFontXmls():Bool { return mKeepFontXmls; }\r\n\tprivate function set_keepFontXmls(value:Bool):Bool\r\n\t{\r\n\t\tmKeepFontXmls = value;\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/** The maximum number of parallel connections that are spawned when loading the queue.\r\n\t *  More connections can reduce loading times, but require more memory. @default 3. */\r\n\tprivate function get_numConnections():Int { return mNumConnections; }\r\n\tprivate function set_numConnections(value:Int):Int\r\n\t{\r\n\t\tmNumConnections = value;\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\ntypedef EDFunction = Dynamic","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** A utility class containing predefined colors and methods converting between different\r\n *  color representations. */\r\nclass Color\r\n{\r\n\tpublic static var WHITE:Int = 0xffffff;\r\n\tpublic static var SILVER:Int = 0xc0c0c0;\r\n\tpublic static var GRAY:Int = 0x808080;\r\n\tpublic static var BLACK:Int = 0x000000;\r\n\tpublic static var RED:Int = 0xff0000;\r\n\tpublic static var MAROON:Int = 0x800000;\r\n\tpublic static var YELLOW:Int = 0xffff00;\r\n\tpublic static var OLIVE:Int = 0x808000;\r\n\tpublic static var LIME:Int = 0x00ff00;\r\n\tpublic static var GREEN:Int = 0x008000;\r\n\tpublic static var AQUA:Int = 0x00ffff;\r\n\tpublic static var TEAL:Int = 0x008080;\r\n\tpublic static var BLUE:Int = 0x0000ff;\r\n\tpublic static var NAVY:Int = 0x000080;\r\n\tpublic static var FUCHSIA:Int = 0xff00ff;\r\n\tpublic static var PURPLE:Int = 0x800080;\r\n\t\r\n\t/** Returns the alpha part of an ARGB color (0 - 255). */\r\n\tpublic static function getAlpha(color:Int):Int\r\n\t{\r\n\t\treturn (color >> 24) & 0xff;\r\n\t}\r\n\t\r\n\t/** Returns the red part of an (A)RGB color (0 - 255). */\r\n\tpublic static function getRed(color:Int):Int\r\n\t{\r\n\t\treturn (color >> 16) & 0xff;\r\n\t}\r\n\t\r\n\t/** Returns the green part of an (A)RGB color (0 - 255). */\r\n\tpublic static function getGreen(color:Int):Int\r\n\t{\r\n\t\treturn (color >> 8) & 0xff;\r\n\t}\r\n\t\r\n\t/** Returns the blue part of an (A)RGB color (0 - 255). */\r\n\tpublic static function getBlue(color:Int):Int\r\n\t{\r\n\t\treturn color & 0xff;\r\n\t}\r\n\t\r\n\t/** Creates an RGB color, stored in an unsigned integer. Channels are expected\r\n\t *  in the range 0 - 255. */\r\n\tpublic static function rgb(red:Int, green:Int, blue:Int):Int\r\n\t{\r\n\t\treturn (red << 16) | (green << 8) | blue;\r\n\t}\r\n\t\r\n\t/** Creates an ARGB color, stored in an unsigned integer. Channels are expected\r\n\t *  in the range 0 - 255. */\r\n\tpublic static function argb(alpha:Int, red:Int, green:Int, blue:Int):Int\r\n\t{\r\n\t\treturn (alpha << 24) | (red << 16) | (green << 8) | blue;\r\n\t}\r\n\t\r\n\t/** Converts a color to a vector containing the RGBA components (in this order) scaled\r\n\t *  between 0 and 1. */\r\n\tpublic static function toVector(color:Int, out:Array<Float> = null):Array<Float>\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Array<Float>();\r\n\t\t\r\n\t\tout[0] = ((color >> 16) & 0xff) / 255.0;\r\n\t\tout[1] = ((color >> 8) & 0xff) / 255.0;\r\n\t\tout[2] = (color & 0xff) / 255.0;\r\n\t\tout[3] = ((color >> 24) & 0xff) / 255.0;\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Multiplies all channels of an (A)RGB color with a certain factor. */\r\n\tpublic static function multiply(color:Int, factor:Float):Int\r\n\t{\r\n\t\tvar alpha:Int = untyped ((color >> 24) & 0xff) * factor;\r\n\t\tvar red:Int = untyped ((color >> 16) & 0xff) * factor;\r\n\t\tvar green:Int = untyped ((color >> 8) & 0xff) * factor;\r\n\t\tvar blue:Int = untyped (color & 0xff) * factor;\r\n\t\t\r\n\t\tif (alpha > 255)\t\t\t alpha = 255;\r\n\t\tif (red > 255)\t\t\t red = 255;\r\n\t\tif (green > 255)\t\t\t green = 255;\r\n\t\tif (blue > 255)\t\t\t blue = 255;\r\n\t\t\r\n\t\treturn argb(alpha, red, green, blue);\r\n\t}\r\n\t\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\n\r\n/**\r\n * Class for Deg2rad.call\r\n */\r\n@:final class Deg2rad\r\n{\r\n\t/** Converts an angle from degrees into radians. */\r\n\tpublic static inline function call(deg:Float):Float\r\n\t{\r\n\t\treturn deg / 180.0 * Math.PI;\r\n\t}\r\n\r\n\tpublic function new() { }\t\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\nimport haxe.Constraints.Function;\r\n\r\n\r\n/**\r\n * Class for execute\r\n */\r\n@:final class Execute\r\n{\r\n\t/** Executes a function with the specified arguments. If the argument count does not match\r\n\t *  the function, the argument list is cropped / filled up with <code>null</code> values. */\r\n\tpublic static function call(func:Function, args:Array<Dynamic>):Void\r\n\t{\r\n\t\tif (func != null) \r\n\t\t{\r\n\t\t\tvar maxNumArgs:Int = 0;\r\n\t\t\t#if flash\r\n\t\t\t\tmaxNumArgs = Reflect.getProperty(func, \"length\");\r\n\t\t\t#else \r\n\t\t\t\tmaxNumArgs = args.length;\r\n\t\t\t#end\r\n\t\t\tif (args != null) {\t\t\t\t\r\n\t\t\t\tfor (i in args.length...maxNumArgs)\r\n\t\t\t\t\targs[i] = null;\r\n\t\t\t}\r\n\t\t\t// In theory, the 'default' case would always work,\r\n\t\t\t// but we want to avoid the 'slice' allocations.\r\n\t\t\t\r\n\t\t\tswitch (maxNumArgs)\r\n\t\t\t{\r\n\t\t\t\tcase 0:func();\r\n\t\t\t\tcase 1:func(args[0]);\r\n\t\t\t\tcase 2:func(args[0], args[1]);\r\n\t\t\t\tcase 3:func(args[0], args[1], args[2]);\r\n\t\t\t\tcase 4:func(args[0], args[1], args[2], args[3]);\r\n\t\t\t\tcase 5:func(args[0], args[1], args[2], args[3], args[4]);\r\n\t\t\t\tcase 6:func(args[0], args[1], args[2], args[3], args[4], args[5]);\r\n\t\t\t\tcase 7:func(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function new()\r\n\t{\r\n\t}\r\n}\r\n\r\n","package starling.utils;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\nclass FloatUtil\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Returns a string representation of the number <code>x</code> in fixed-point notation.\r\n\t * @param decimalPlaces the number of decimal places.\r\n\t */\r\n\tpublic static function toFixed(x:Float, decimalPlaces:Int):String\r\n\t{\r\n\t\tif (Math.isNaN(x))\r\n\t\t\treturn \"NaN\";\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar t = exp(10, decimalPlaces);\r\n\t\t\tvar s = Std.string(Std.int(x * t) / t);\r\n\t\t\tvar i = s.indexOf(\".\");\r\n\t\t\tif (i != -1)\r\n\t\t\t{\r\n\t\t\t\tfor (i in s.substr(i + 1).length...decimalPlaces)\r\n\t\t\t\t\ts += \"0\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ts += \".\";\r\n\t\t\t\tfor (i in 0...decimalPlaces)\r\n\t\t\t\t\ts += \"0\";\r\n\t\t\t}\r\n\t\t\treturn s;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Fast integer exponentiation for base <code>a</code> and exponent <code>n</code>.\r\n\t */\r\n\tpublic static function exp(a:Int, n:Int):Int\r\n\t{\r\n\t\tvar t = 1;\r\n\t\tvar r = 0;\r\n\t\twhile (true)\r\n\t\t{\r\n\t\t\tif (n & 1 != 0) t = a * t;\r\n\t\t\tn >>= 1;\r\n\t\t\tif (n == 0)\r\n\t\t\t{\r\n\t\t\t\tr = t;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ta *= a;\r\n\t\t}\r\n\t\treturn r;\r\n\t}\r\n}","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\n\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Vector3D;\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** A utility class containing methods you might need for math problems. */\r\nclass MathUtil\r\n{\r\n\tprivate static var TWO_PI:Float = Math.PI * 2.0;\r\n\t\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** Calculates the intersection point between the xy-plane and an infinite line\r\n\t *  that is defined by two 3D points in the same coordinate system. */\r\n\tpublic static function intersectLineWithXYPlane(pointA:Vector3D, pointB:Vector3D,\r\n\t\t\tout:Point = null):Point\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Point();\r\n\t\t\r\n\t\tvar vectorX:Float = pointB.x - pointA.x;\r\n\t\tvar vectorY:Float = pointB.y - pointA.y;\r\n\t\tvar vectorZ:Float = pointB.z - pointA.z;\r\n\t\tvar lambda:Float = -pointA.z / vectorZ;\r\n\t\t\r\n\t\tout.x = pointA.x + lambda * vectorX;\r\n\t\tout.y = pointA.y + lambda * vectorY;\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Calculates if the point <code>p</code> is inside the triangle <code>a-b-c</code>. */\r\n\tpublic static function isPointInTriangle(p:Point, a:Point, b:Point, c:Point):Bool\r\n\t{\r\n\t\t// This algorithm is described well in this article:\r\n\t\t// http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\t\t\r\n\t\tvar v0x:Float = c.x - a.x;\r\n\t\tvar v0y:Float = c.y - a.y;\r\n\t\tvar v1x:Float = b.x - a.x;\r\n\t\tvar v1y:Float = b.y - a.y;\r\n\t\tvar v2x:Float = p.x - a.x;\r\n\t\tvar v2y:Float = p.y - a.y;\r\n\t\t\r\n\t\tvar dot00:Float = v0x * v0x + v0y * v0y;\r\n\t\tvar dot01:Float = v0x * v1x + v0y * v1y;\r\n\t\tvar dot02:Float = v0x * v2x + v0y * v2y;\r\n\t\tvar dot11:Float = v1x * v1x + v1y * v1y;\r\n\t\tvar dot12:Float = v1x * v2x + v1y * v2y;\r\n\t\t\r\n\t\tvar invDen:Float = 1.0 / (dot00 * dot11 - dot01 * dot01);\r\n\t\tvar u:Float = (dot11 * dot02 - dot01 * dot12) * invDen;\r\n\t\tvar v:Float = (dot00 * dot12 - dot01 * dot02) * invDen;\r\n\t\t\r\n\t\treturn (u >= 0) && (v >= 0) && (u + v < 1);\r\n\t}\r\n\t\r\n\t/** Moves a radian angle into the range [-PI, +PI], while keeping the direction intact. */\r\n\tpublic static function normalizeAngle(angle:Float):Float\r\n\t{\r\n\t\t// move to equivalent value in range [0 deg, 360 deg] without a loop\r\n\t\tangle = angle % TWO_PI;\r\n\t\t\r\n\t\t// move to [-180 deg, +180 deg]\r\n\t\tif (angle < -Math.PI)\t\t\t angle += TWO_PI;\r\n\t\tif (angle > Math.PI)\t\t\t angle -= TWO_PI;\r\n\t\t\r\n\t\treturn angle;\r\n\t}\r\n\t\r\n\t/** Returns the next power of two that is equal to or bigger than the specified number. */\r\n\tpublic static function getNextPowerOfTwo(number:Int):Int\r\n\t{\r\n\t\tif (number > 0 && (number & (number - 1)) == 0) // see: http://goo.gl/D9kPj\r\n\t\t\treturn number;\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar result:Int = 1;\r\n\t\t\twhile (result < number) result <<= 1;\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Indicates if two float (Number) values are equal, give or take <code>epsilon</code>. */\r\n\tpublic static function isEquivalent(a:Float, b:Float, epsilon:Float = 0.0001):Bool\r\n\t{\r\n\t\treturn (a - epsilon < b) && (a + epsilon > b);\r\n\t}\r\n\t\r\n\t/** Returns the larger of the two values. Different to the native <code>Math.max</code>,\r\n\t *  this doesn't create any temporary objects when using the AOT compiler. */\r\n\t//public static function max(a:Float, b:Float):Float\r\n\t//{\r\n\t//\treturn a > (b != 0) ? a:b;\r\n\t//}\r\n\t\r\n\t/** Returns the smaller of the two values. Different to the native <code>Math.min</code>,\r\n\t *  this doesn't create any temporary objects when using the AOT compiler. */\r\n\t//public static function min(a:Float, b:Float):Float\r\n\t//{\r\n\t//\treturn a < (b != 0) ? a:b;\r\n\t//}\r\n\t\r\n\t/** Moves <code>value</code> into the range between <code>min</code> and <code>max</code>. */\r\n\tpublic static function clamp(value:Float, min:Float, max:Float):Float\r\n\t{\r\n\t\treturn value < min ? min : (value > max ? max : value);\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\n\r\nimport openfl.Vector;\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Matrix3D;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Vector3D;\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** A utility class containing methods related to the Matrix class. */\r\nclass MatrixUtil\r\n{\r\n\t// helper objects\r\n\tprivate static var sRawData:Vector<Float> = Vector.ofArray(\r\n\t[\r\n\t\t1, 0, 0, 0, \r\n\t\t0, 1, 0, 0, \r\n\t\t0, 0, 1, 0, \r\n\t\t0, 0, 0, 1\r\n\t]);\r\n\tprivate static var sRawData2:Vector<Float> = Vector.ofArray(\r\n\t[\r\n\t\t0, 0, 0, 0, \r\n\t\t0, 0, 0, 0, \r\n\t\t0, 0, 0, 0, \r\n\t\t0, 0, 0, 0\r\n\t]);\r\n\tprivate static var sPoint3D:Vector3D = new Vector3D();\r\n\tprivate static var sMatrixData:Vector<Float> = Vector.ofArray(\r\n\t[\r\n\t\t0, 0, 0, 0, \r\n\t\t0, 0, 0, 0, \r\n\t\t0, 0, 0, 0, \r\n\t\t0, 0, 0, 0\r\n\t]);\r\n\t\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** Converts a 2D matrix to a 3D matrix. If you pass an <code>out</code>-matrix,\r\n\t *  the result will be stored in this matrix instead of creating a new object. */\r\n\tpublic static function convertTo3D(matrix:Matrix, out:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tif (out == null) out = new Matrix3D();\r\n\t\t\r\n\t\tsRawData[0] = matrix.a;\r\n\t\tsRawData[1] = matrix.b;\r\n\t\tsRawData[4] = matrix.c;\r\n\t\tsRawData[5] = matrix.d;\r\n\t\tsRawData[12] = matrix.tx;\r\n\t\tsRawData[13] = matrix.ty;\r\n\t\t\r\n\t\tout.copyRawDataFrom(sRawData);\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Converts a 3D matrix to a 2D matrix. Beware that this will work only for a 3D matrix\r\n\t *  describing a pure 2D transformation. */\r\n\tpublic static function convertTo2D(matrix3D:Matrix3D, out:Matrix = null):Matrix\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Matrix();\r\n\t\t\r\n\t\tmatrix3D.copyRawDataTo(sRawData2);\r\n\t\tout.a = sRawData2[0];\r\n\t\tout.b = sRawData2[1];\r\n\t\tout.c = sRawData2[4];\r\n\t\tout.d = sRawData2[5];\r\n\t\tout.tx = sRawData2[12];\r\n\t\tout.ty = sRawData2[13];\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Determines if the matrix is an identity matrix. */\r\n\tpublic static function isIdentity(matrix:Matrix):Bool\r\n\t{\r\n\t\treturn matrix.a == 1.0 && matrix.b == 0.0 && matrix.c == 0.0 && matrix.d == 1.0 &&\r\n\t\tmatrix.tx == 0.0 && matrix.ty == 0.0;\r\n\t}\r\n\t\r\n\t/** Determines if the 3D matrix is an identity matrix. */\r\n\tpublic static function isIdentity3D(matrix:Matrix3D):Bool\r\n\t{\r\n\t\tvar data:Vector<Float> = sRawData2;\r\n\t\tmatrix.copyRawDataTo(data);\r\n\t\t\r\n\t\treturn data[0] == 1.0 && data[1] == 0.0 && data[2] == 0.0 && data[3] == 0.0 &&\r\n\t\tdata[4] == 0.0 && data[5] == 1.0 && data[6] == 0.0 && data[7] == 0.0 &&\r\n\t\tdata[8] == 0.0 && data[9] == 0.0 && data[10] == 1.0 && data[11] == 0.0 &&\r\n\t\tdata[12] == 0.0 && data[13] == 0.0 && data[14] == 0.0 && data[15] == 1.0;\r\n\t}\r\n\t\r\n\t/** Transform a point with the given matrix. */\r\n\tpublic static function transformPoint(matrix:Matrix, point:Point,\r\n\t\t\tout:Point = null):Point\r\n\t{\r\n\t\treturn transformCoords(matrix, point.x, point.y, out);\r\n\t}\r\n\t\r\n\t/** Transforms a 3D point with the given matrix. */\r\n\tpublic static function transformPoint3D(matrix:Matrix3D, point:Vector3D,\r\n\t\t\tout:Vector3D = null):Vector3D\r\n\t{\r\n\t\treturn transformCoords3D(matrix, point.x, point.y, point.z, out);\r\n\t}\r\n\t\r\n\t/** Uses a matrix to transform 2D coordinates into a different space. If you pass an\r\n\t *  <code>out</code>-point, the result will be stored in this point instead of creating\r\n\t *  a new object. */\r\n\tpublic static function transformCoords(matrix:Matrix, x:Float, y:Float,\r\n\t\t\tout:Point = null):Point\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Point();\r\n\t\t\r\n\t\tout.x = matrix.a * x + matrix.c * y + matrix.tx;\r\n\t\tout.y = matrix.d * y + matrix.b * x + matrix.ty;\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Uses a matrix to transform 3D coordinates into a different space. If you pass a\r\n\t *  'resultVector', the result will be stored in this vector3D instead of creating a\r\n\t *  new object. */\r\n\tpublic static function transformCoords3D(matrix:Matrix3D, x:Float, y:Float, z:Float,\r\n\t\t\tout:Vector3D = null):Vector3D\r\n\t{\r\n\t\tif (out == null) out = new Vector3D();\r\n\t\tmatrix.copyRawDataTo(sRawData2);\r\n\t\tout.x = x * sRawData2[0] + y * sRawData2[4] + z * sRawData2[8] + sRawData2[12];\r\n\t\tout.y = x * sRawData2[1] + y * sRawData2[5] + z * sRawData2[9] + sRawData2[13];\r\n\t\tout.z = x * sRawData2[2] + y * sRawData2[6] + z * sRawData2[10] + sRawData2[14];\r\n\t\tout.w = x * sRawData2[3] + y * sRawData2[7] + z * sRawData2[11] + sRawData2[15];\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Appends a skew transformation to a matrix (angles in radians). The skew matrix\r\n\t *  has the following form:\r\n\t *  <pre>\r\n\t *  | cos(skewY)  -sin(skewX)  0 |\r\n\t *  | sin(skewY)   cos(skewX)  0 |\r\n\t *  |\t 0\t\t\t0\t   1 |\r\n\t *  </pre>\r\n\t */\r\n\tpublic static function skew(matrix:Matrix, skewX:Float, skewY:Float):Void\r\n\t{\r\n\t\tvar sinX:Float = Math.sin(skewX);\r\n\t\tvar cosX:Float = Math.cos(skewX);\r\n\t\tvar sinY:Float = Math.sin(skewY);\r\n\t\tvar cosY:Float = Math.cos(skewY);\r\n\t\t\r\n\t\tmatrix.setTo(matrix.a * cosY - matrix.b * sinX,\r\n\t\t\t\tmatrix.a * sinY + matrix.b * cosX,\r\n\t\t\t\tmatrix.c * cosY - matrix.d * sinX,\r\n\t\t\t\tmatrix.c * sinY + matrix.d * cosX,\r\n\t\t\t\tmatrix.tx * cosY - matrix.ty * sinX,\r\n\t\t\t\tmatrix.tx * sinY + matrix.ty * cosX);\r\n\t}\r\n\t\r\n\t/** Prepends a matrix to 'base' by multiplying it with another matrix. */\r\n\tpublic static function prependMatrix(base:Matrix, prep:Matrix):Void\r\n\t{\r\n\t\tbase.setTo(base.a * prep.a + base.c * prep.b,\r\n\t\t\t\tbase.b * prep.a + base.d * prep.b,\r\n\t\t\t\tbase.a * prep.c + base.c * prep.d,\r\n\t\t\t\tbase.b * prep.c + base.d * prep.d,\r\n\t\t\t\tbase.tx + base.a * prep.tx + base.c * prep.ty,\r\n\t\t\t\tbase.ty + base.b * prep.tx + base.d * prep.ty);\r\n\t}\r\n\t\r\n\t/** Prepends an incremental translation to a Matrix object. */\r\n\tpublic static function prependTranslation(matrix:Matrix, tx:Float, ty:Float):Void\r\n\t{\r\n\t\tmatrix.tx += matrix.a * tx + matrix.c * ty;\r\n\t\tmatrix.ty += matrix.b * tx + matrix.d * ty;\r\n\t}\r\n\t\r\n\t/** Prepends an incremental scale change to a Matrix object. */\r\n\tpublic static function prependScale(matrix:Matrix, sx:Float, sy:Float):Void\r\n\t{\r\n\t\tmatrix.setTo(matrix.a * sx, matrix.b * sx,\r\n\t\t\t\tmatrix.c * sy, matrix.d * sy,\r\n\t\t\t\tmatrix.tx, matrix.ty);\r\n\t}\r\n\t\r\n\t/** Prepends an incremental rotation to a Matrix object (angle in radians). */\r\n\tpublic static function prependRotation(matrix:Matrix, angle:Float):Void\r\n\t{\r\n\t\tvar sin:Float = Math.sin(angle);\r\n\t\tvar cos:Float = Math.cos(angle);\r\n\t\t\r\n\t\tmatrix.setTo(matrix.a * cos + matrix.c * sin, matrix.b * cos + matrix.d * sin,\r\n\t\t\t\tmatrix.c * cos - matrix.a * sin, matrix.d * cos - matrix.b * sin,\r\n\t\t\t\tmatrix.tx, matrix.ty);\r\n\t}\r\n\t\r\n\t/** Prepends a skew transformation to a Matrix object (angles in radians). The skew matrix\r\n\t *  has the following form:\r\n\t *  <pre>\r\n\t *  | cos(skewY)  -sin(skewX)  0 |\r\n\t *  | sin(skewY)   cos(skewX)  0 |\r\n\t *  |\t 0\t\t\t0\t   1 |\r\n\t *  </pre>\r\n\t */\r\n\tpublic static function prependSkew(matrix:Matrix, skewX:Float, skewY:Float):Void\r\n\t{\r\n\t\tvar sinX:Float = Math.sin(skewX);\r\n\t\tvar cosX:Float = Math.cos(skewX);\r\n\t\tvar sinY:Float = Math.sin(skewY);\r\n\t\tvar cosY:Float = Math.cos(skewY);\r\n\t\t\r\n\t\tmatrix.setTo(matrix.a * cosY + matrix.c * sinY,\r\n\t\t\t\tmatrix.b * cosY + matrix.d * sinY,\r\n\t\t\t\tmatrix.c * cosX - matrix.a * sinX,\r\n\t\t\t\tmatrix.d * cosX - matrix.b * sinX,\r\n\t\t\t\tmatrix.tx, matrix.ty);\r\n\t}\r\n\t\r\n\t/** Converts a Matrix3D instance to a String, which is useful when debugging. Per default,\r\n\t *  the raw data is displayed transposed, so that the columns are displayed vertically. */\r\n\tpublic static function toString3D(matrix:Matrix3D, transpose:Bool = true,\r\n\t\t\tprecision:Int = 3):String\r\n\t{\r\n\t\tif (transpose)\t\t\t matrix.transpose();\r\n\t\tmatrix.copyRawDataTo(sRawData2);\r\n\t\tif (transpose)\t\t\t matrix.transpose();\r\n\t\t\r\n\t\treturn \"[Matrix3D rawData=\\n\" + formatRawData(sRawData2, 4, 4, precision) + \"\\n]\";\r\n\t}\r\n\t\r\n\t/** Converts a Matrix instance to a String, which is useful when debugging. */\r\n\tpublic static function toString(matrix:Matrix, precision:Int = 3):String\r\n\t{\r\n\t\tsRawData2[0] = matrix.a;sRawData2[1] = matrix.c;sRawData2[2] = matrix.tx;\r\n\t\tsRawData2[3] = matrix.b;sRawData2[4] = matrix.d;sRawData2[5] = matrix.ty;\r\n\t\t\r\n\t\treturn \"[Matrix rawData=\\n\" + formatRawData(sRawData2, 3, 2, precision) + \"\\n]\";\r\n\t}\r\n\t\r\n\tprivate static function formatRawData(data:Array<Float>, numCols:Int, numRows:Int,\r\n\t\t\tprecision:Int, indent:String = \"  \"):String\r\n\t{\r\n\t\tvar result:String = indent;\r\n\t\tvar numValues:Int = numCols * numRows;\r\n\t\tvar highestValue:Float = 0.0;\r\n\t\tvar valueString:String;\r\n\t\tvar value:Float;\r\n\t\t\r\n\t\tfor (i in 0...numValues){\r\n\t\t\tvalue = Math.abs(data[i]);\r\n\t\t\tif (value > highestValue)\t\t\t\t highestValue = value;\r\n\t\t}\r\n\t\t\r\n\t\tvar numChars:Int = FloatUtil.toFixed(highestValue, precision).length + 1;\r\n\t\t\r\n\t\tfor (y in 0...numRows){\r\n\t\t\tfor (x in 0...numCols){\r\n\t\t\t\tvalue = data[numCols * y + x];\r\n\t\t\t\tvalueString = FloatUtil.toFixed(value, precision);\r\n\t\t\t\t\r\n\t\t\t\twhile (valueString.length < numChars)valueString = \" \" + valueString;\r\n\t\t\t\t\r\n\t\t\t\tresult += valueString;\r\n\t\t\t\tif (x != numCols - 1)\t\t\t\t\t result += \", \";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (y != numRows - 1)\t\t\t\t result += \"\\n\" + indent;\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/** Creates a perspective projection matrix suitable for 2D and 3D rendering.\r\n\t *\r\n\t *  <p>The first 4 parameters define which area of the stage you want to view (the camera\r\n\t *  will 'zoom' to exactly this region). The final 3 parameters determine the perspective\r\n\t *  in which you're looking at the stage.</p>\r\n\t *\r\n\t *  <p>The stage is always on the rectangle that is spawned up between x- and y-axis (with\r\n\t *  the given size). All objects that are exactly on that rectangle (z equals zero) will be\r\n\t *  rendered in their true size, without any distortion.</p>\r\n\t *\r\n\t *  <p>If you pass only the first 4 parameters, the camera will be set up above the center\r\n\t *  of the stage, with a field of view of 1.0 rad.</p>\r\n\t */\r\n\tpublic static function createPerspectiveProjectionMatrix(\r\n\t\t\tx:Float, y:Float, width:Float, height:Float,\r\n\t\t\tstageWidth:Float = 0, stageHeight:Float = 0, cameraPos:Vector3D = null,\r\n\t\t\tout:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Matrix3D();\r\n\t\tif (stageWidth <= 0)\t\t\t stageWidth = width;\r\n\t\tif (stageHeight <= 0)\t\t\t stageHeight = height;\r\n\t\tif (cameraPos == null) \r\n\t\t{\r\n\t\t\tcameraPos = sPoint3D;\r\n\t\t\tcameraPos.setTo(\r\n\t\t\t\t\tstageWidth / 2, stageHeight / 2,  // -> center of stage  \r\n\t\t\t\t\tstageWidth / Math.tan(0.5) * 0.5);\r\n\t\t}\r\n\t\t\r\n\t\tvar focalLength:Float = Math.abs(cameraPos.z);\r\n\t\tvar offsetX:Float = cameraPos.x - stageWidth / 2;\r\n\t\tvar offsetY:Float = cameraPos.y - stageHeight / 2;\r\n\t\tvar far:Float = focalLength * 20;\r\n\t\tvar near:Float = 1;\r\n\t\tvar scaleX:Float = stageWidth / width;\r\n\t\tvar scaleY:Float = stageHeight / height;\r\n\t\t\r\n\t\t// set up general perspective\r\n\t\tsMatrixData[0] = 2 * focalLength / stageWidth;  // 0,0  \r\n\t\tsMatrixData[5] = -2 * focalLength / stageHeight;  // 1,1  [negative to invert y-axis]  \r\n\t\tsMatrixData[10] = far / (far - near);  // 2,2  \r\n\t\tsMatrixData[14] = -far * near / (far - near);  // 2,3  \r\n\t\tsMatrixData[11] = 1;  // 3,2  \r\n\t\t\r\n\t\t// now zoom in to visible area\r\n\t\tsMatrixData[0] *= scaleX;\r\n\t\tsMatrixData[5] *= scaleY;\r\n\t\tsMatrixData[8] = scaleX - 1 - 2 * scaleX * (x - offsetX) / stageWidth;\r\n\t\tsMatrixData[9] = -scaleY + 1 + 2 * scaleY * (y - offsetY) / stageHeight;\r\n\t\t\r\n\t\tout.copyRawDataFrom(sMatrixData);\r\n\t\tout.prependTranslation(\r\n\t\t\t\t-stageWidth / 2.0 - offsetX,\r\n\t\t\t\t-stageHeight / 2.0 - offsetY,\r\n\t\t\t\tfocalLength);\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Creates a orthographic projection matrix suitable for 2D rendering. */\r\n\tpublic static function createOrthographicProjectionMatrix(\r\n\t\t\tx:Float, y:Float, width:Float, height:Float, out:Matrix = null):Matrix\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Matrix();\r\n\t\t\r\n\t\tout.setTo(2.0 / width, 0, 0, -2.0 / height,\r\n\t\t\t\t-(2 * x + width) / width, (2 * y + height) / height);\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\n\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Matrix3D;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.geom.Vector3D;\r\n\r\nimport starling.display.DisplayObject;\r\nimport starling.display.Stage;\r\nimport starling.errors.AbstractClassError;\r\nimport starling.rendering.IndexData;\r\nimport starling.rendering.VertexData;\r\n\r\n/** A utility class that helps with tasks that are common when working with meshes. */\r\nclass MeshUtil\r\n{\r\n\t// helper objects\r\n\tprivate static var sPoint3D:Vector3D = new Vector3D();\r\n\tprivate static var sMatrix:Matrix = new Matrix();\r\n\tprivate static var sMatrix3D:Matrix3D = new Matrix3D();\r\n\t\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** Determines if a point is inside a mesh that is spawned up by the given\r\n\t *  vertex- and index-data. */\r\n\tpublic static function containsPoint(vertexData:VertexData, indexData:IndexData,\r\n\t\t\tpoint:Point):Bool\r\n\t{\r\n\t\tvar i:Int;\r\n\t\tvar result:Bool = false;\r\n\t\tvar numIndices:Int = indexData.numIndices;\r\n\t\tvar p0:Point = Pool.getPoint();\r\n\t\tvar p1:Point = Pool.getPoint();\r\n\t\tvar p2:Point = Pool.getPoint();\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices){\r\n\t\t\tvertexData.getPoint(indexData.getIndex(i), \"position\", p0);\r\n\t\t\tvertexData.getPoint(indexData.getIndex(i + 1), \"position\", p1);\r\n\t\t\tvertexData.getPoint(indexData.getIndex(i + 2), \"position\", p2);\r\n\t\t\t\r\n\t\t\tif (MathUtil.isPointInTriangle(point, p0, p1, p2)) \r\n\t\t\t{\r\n\t\t\t\tresult = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti += 3;\r\n\t\t}\r\n\t\t\r\n\t\tPool.putPoint(p0);\r\n\t\tPool.putPoint(p1);\r\n\t\tPool.putPoint(p2);\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/** Calculates the bounds of the given vertices in the target coordinate system. */\r\n\tpublic static function calculateBounds(vertexData:VertexData,\r\n\t\t\tsourceSpace:DisplayObject,\r\n\t\t\ttargetSpace:DisplayObject,\r\n\t\t\tout:Rectangle = null):Rectangle\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Rectangle();\r\n\t\t\r\n\t\tvar stage:Stage = sourceSpace.stage;\r\n\t\t\r\n\t\tif (sourceSpace.is3D && stage != null) \r\n\t\t{\r\n\t\t\tstage.getCameraPosition(targetSpace, sPoint3D);\r\n\t\t\tsourceSpace.getTransformationMatrix3D(targetSpace, sMatrix3D);\r\n\t\t\tvertexData.getBoundsProjected(\"position\", sMatrix3D, sPoint3D, 0, -1, out);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tsourceSpace.getTransformationMatrix(targetSpace, sMatrix);\r\n\t\t\tvertexData.getBounds(\"position\", sMatrix, 0, -1, out);\r\n\t\t}\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\n\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Matrix3D;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.geom.Vector3D;\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** A simple object pool supporting the most basic utility objects.\r\n *\r\n *  <p>If you want to retrieve an object, but the pool does not contain any more instances,\r\n *  it will silently create a new one.</p>\r\n *\r\n *  <p>It's important that you use the pool in a balanced way, i.e. don't just \"get\" or \"put\"\r\n *  alone! Always make the calls in pairs; whenever you get an object, be sure to put it back\r\n *  later, and the other way round. Otherwise, the pool will empty or (even worse) grow\r\n *  in size uncontrolled.</p>\r\n */\r\nclass Pool\r\n{\r\n\tprivate static var sPoints:Array<Point> = [];\r\n\tprivate static var sPoints3D:Array<Vector3D> = [];\r\n\tprivate static var sMatrices:Array<Matrix> = [];\r\n\tprivate static var sMatrices3D:Array<Matrix3D> = [];\r\n\tprivate static var sRectangles:Array<Rectangle> = [];\r\n\t\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** Retrieves a Point instance from the pool. */\r\n\tpublic static function getPoint(x:Float = 0, y:Float = 0):Point\r\n\t{\r\n\t\tif (sPoints.length == 0)\t\t\t return new Point(x, y)\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar point:Point = sPoints.pop();\r\n\t\t\tpoint.x = x;point.y = y;\r\n\t\t\treturn point;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Stores a Point instance in the pool.\r\n\t *  Don't keep any references to the object after moving it to the pool! */\r\n\tpublic static function putPoint(point:Point):Void\r\n\t{\r\n\t\tif (point != null)\t\t\t sPoints[sPoints.length] = point;\r\n\t}\r\n\t\r\n\t/** Retrieves a Vector3D instance from the pool. */\r\n\tpublic static function getPoint3D(x:Float = 0, y:Float = 0, z:Float = 0):Vector3D\r\n\t{\r\n\t\tif (sPoints.length == 0)\t\t\t return new Vector3D(x, y, z)\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar point:Vector3D = sPoints3D.pop();\r\n\t\t\tpoint.x = x;point.y = y;point.z = z;\r\n\t\t\treturn point;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Stores a Vector3D instance in the pool.\r\n\t *  Don't keep any references to the object after moving it to the pool! */\r\n\tpublic static function putPoint3D(point:Vector3D):Void\r\n\t{\r\n\t\tif (point != null)\t\t\t sPoints3D[sPoints3D.length] = point;\r\n\t}\r\n\t\r\n\t/** Retrieves a Matrix instance from the pool. */\r\n\tpublic static function getMatrix(a:Float = 1, b:Float = 0, c:Float = 0, d:Float = 1,\r\n\t\t\ttx:Float = 0, ty:Float = 0):Matrix\r\n\t{\r\n\t\tif (sMatrices.length == 0)\t\t\t return new Matrix(a, b, c, d, tx, ty)\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar matrix:Matrix = sMatrices.pop();\r\n\t\t\tmatrix.setTo(a, b, c, d, tx, ty);\r\n\t\t\treturn matrix;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Stores a Matrix instance in the pool.\r\n\t *  Don't keep any references to the object after moving it to the pool! */\r\n\tpublic static function putMatrix(matrix:Matrix):Void\r\n\t{\r\n\t\tif (matrix != null)\t\t\t sMatrices[sMatrices.length] = matrix;\r\n\t}\r\n\t\r\n\t/** Retrieves a Matrix3D instance from the pool.\r\n\t *\r\n\t *  @param identity   If enabled, the matrix will be reset to the identity.\r\n\t *\t\t\t\t\tOtherwise, its contents is undefined.\r\n\t */\r\n\tpublic static function getMatrix3D(identity:Bool = true):Matrix3D\r\n\t{\r\n\t\tif (sMatrices3D.length == 0)\t\t\t return new Matrix3D()\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar matrix:Matrix3D = sMatrices3D.pop();\r\n\t\t\tif (identity)\t\t\t\t matrix.identity();\r\n\t\t\treturn matrix;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Stores a Matrix3D instance in the pool.\r\n\t *  Don't keep any references to the object after moving it to the pool! */\r\n\tpublic static function putMatrix3D(matrix:Matrix3D):Void\r\n\t{\r\n\t\tif (matrix != null)\t\t\t sMatrices3D[sMatrices3D.length] = matrix;\r\n\t}\r\n\t\r\n\t/** Retrieves a Rectangle instance from the pool. */\r\n\tpublic static function getRectangle(x:Float = 0, y:Float = 0,\r\n\t\t\twidth:Float = 0, height:Float = 0):Rectangle\r\n\t{\r\n\t\tif (sRectangles.length == 0)\t\t\t return new Rectangle(x, y, width, height)\r\n\t\telse \r\n\t\t{\r\n\t\t\tvar rectangle:Rectangle = sRectangles.pop();\r\n\t\t\trectangle.setTo(x, y, width, height);\r\n\t\t\treturn rectangle;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Stores a Rectangle instance in the pool.\r\n\t *  Don't keep any references to the object after moving it to the pool! */\r\n\tpublic static function putRectangle(rectangle:Rectangle):Void\r\n\t{\r\n\t\tif (rectangle != null)\t\t\t sRectangles[sRectangles.length] = rectangle;\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\n\r\n/**\r\n * Class for rad2deg\r\n */\r\n@:final class Rad2deg\r\n{\r\n\t/** Converts an angle from radians into degrees. */\r\n\tpublic static inline function call(rad:Float):Float\r\n\t{\r\n\t\treturn rad / Math.PI * 180.0;\r\n\t}\r\n\r\n\tpublic function new() { }\t\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\nimport openfl.errors.ArgumentError;\r\n\r\nimport openfl.geom.Matrix;\r\nimport openfl.geom.Matrix3D;\r\nimport openfl.geom.Point;\r\nimport openfl.geom.Rectangle;\r\nimport openfl.geom.Vector3D;\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** A utility class containing methods related to the Rectangle class. */\r\nclass RectangleUtil\r\n{\r\n\t// helper objects\r\n\tprivate static var sPoint:Point = new Point();\r\n\tprivate static var sPoint3D:Vector3D = new Vector3D();\r\n\tprivate static var sPositions:Array<Point> = \r\n\t\t[new Point(), new Point(), new Point(), new Point()];\r\n\t\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** Calculates the intersection between two Rectangles. If the rectangles do not intersect,\r\n\t *  this method returns an empty Rectangle object with its properties set to 0. */\r\n\tpublic static function intersect(rect1:Rectangle, rect2:Rectangle,\r\n\t\t\tout:Rectangle = null):Rectangle\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Rectangle();\r\n\t\t\r\n\t\tvar left:Float = rect1.x > (rect2.x) ? rect1.x:rect2.x;\r\n\t\tvar right:Float = rect1.right < (rect2.right) ? rect1.right:rect2.right;\r\n\t\tvar top:Float = rect1.y > (rect2.y) ? rect1.y:rect2.y;\r\n\t\tvar bottom:Float = rect1.bottom < (rect2.bottom) ? rect1.bottom:rect2.bottom;\r\n\t\t\r\n\t\tif (left > right || top > bottom) \r\n\t\t\tout.setEmpty()\r\n\t\telse \r\n\t\tout.setTo(left, top, right - left, bottom - top);\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Calculates a rectangle with the same aspect ratio as the given 'rectangle',\r\n\t *  centered within 'into'.  \r\n\t * \r\n\t *  <p>This method is useful for calculating the optimal viewPort for a certain display \r\n\t *  size. You can use different scale modes to specify how the result should be calculated;\r\n\t *  furthermore, you can avoid pixel alignment errors by only allowing whole-number  \r\n\t *  multipliers/divisors (e.g. 3, 2, 1, 1/2, 1/3).</p>\r\n\t *  \r\n\t *  @see starling.utils.ScaleMode\r\n\t */\r\n\tpublic static function fit(rectangle:Rectangle, into:Rectangle,\r\n\t\t\tscaleMode:String = \"showAll\", pixelPerfect:Bool = false,\r\n\t\t\tout:Rectangle = null):Rectangle\r\n\t{\r\n\t\tif (!ScaleMode.isValid(scaleMode))\t\t\t throw new ArgumentError(\"Invalid scaleMode: \" + scaleMode);\r\n\t\tif (out == null)\t\t\t out = new Rectangle();\r\n\t\t\r\n\t\tvar width:Float = rectangle.width;\r\n\t\tvar height:Float = rectangle.height;\r\n\t\tvar factorX:Float = into.width / width;\r\n\t\tvar factorY:Float = into.height / height;\r\n\t\tvar factor:Float = 1.0;\r\n\t\t\r\n\t\tif (scaleMode == ScaleMode.SHOW_ALL) \r\n\t\t{\r\n\t\t\tfactor = factorX < factorY ? factorX : factorY;\r\n\t\t\tif (pixelPerfect) factor = nextSuitableScaleFactor(factor, false);\r\n\t\t}\r\n\t\telse if (scaleMode == ScaleMode.NO_BORDER) \r\n\t\t{\r\n\t\t\tfactor = factorX > factorY ? factorX : factorY;\r\n\t\t\tif (pixelPerfect) factor = nextSuitableScaleFactor(factor, true);\r\n\t\t}\r\n\t\t\r\n\t\twidth *= factor;\r\n\t\theight *= factor;\r\n\t\t\r\n\t\tout.setTo(\r\n\t\t\t\tinto.x + (into.width - width) / 2,\r\n\t\t\t\tinto.y + (into.height - height) / 2,\r\n\t\t\t\twidth, height);\r\n\t\t\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Calculates the next whole-number multiplier or divisor, moving either up or down. */\r\n\tprivate static function nextSuitableScaleFactor(factor:Float, up:Bool):Float\r\n\t{\r\n\t\tvar divisor:Float = 1.0;\r\n\t\t\r\n\t\tif (up) \r\n\t\t{\r\n\t\t\tif (factor >= 0.5)\t\t\t\t return Math.ceil(factor)\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\twhile (1.0 / (divisor + 1) > factor)\r\n\t\t\t\t++divisor;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tif (factor >= 1.0)\t\t\t\t return Math.floor(factor)\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\twhile (1.0 / divisor > factor)\r\n\t\t\t\t++divisor;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn 1.0 / divisor;\r\n\t}\r\n\t\r\n\t/** If the rectangle contains negative values for width or height, all coordinates\r\n\t *  are adjusted so that the rectangle describes the same region with positive values. */\r\n\tpublic static function normalize(rect:Rectangle):Void\r\n\t{\r\n\t\tif (rect.width < 0) \r\n\t\t{\r\n\t\t\trect.width = -rect.width;\r\n\t\t\trect.x -= rect.width;\r\n\t\t}\r\n\t\t\r\n\t\tif (rect.height < 0) \r\n\t\t{\r\n\t\t\trect.height = -rect.height;\r\n\t\t\trect.y -= rect.height;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/** Extends the bounds of the rectangle in all four directions. */\r\n\tpublic static function extend(rect:Rectangle, left:Float = 0, right:Float = 0,\r\n\t\t\ttop:Float = 0, bottom:Float = 0):Void\r\n\t{\r\n\t\trect.x -= left;\r\n\t\trect.y -= top;\r\n\t\trect.width += left + right;\r\n\t\trect.height += top + bottom;\r\n\t}\r\n\t\r\n\t/** Calculates the bounds of a rectangle after transforming it by a matrix.\r\n\t *  If you pass an <code>out</code>-rectangle, the result will be stored in this rectangle\r\n\t *  instead of creating a new object. */\r\n\tpublic static function getBounds(rectangle:Rectangle, matrix:Matrix,\r\n\t\t\tout:Rectangle = null):Rectangle\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Rectangle();\r\n\t\t\r\n\t\tvar minX:Float = Math.POSITIVE_INFINITY;\r\n\t\tvar maxX:Float = Math.NEGATIVE_INFINITY;\r\n\t\tvar minY:Float = Math.POSITIVE_INFINITY;\r\n\t\tvar maxY:Float = Math.NEGATIVE_INFINITY;\r\n\t\tvar positions:Array<Point> = getPositions(rectangle, sPositions);\r\n\t\t\r\n\t\tfor (i in 0...4){\r\n\t\t\tMatrixUtil.transformCoords(matrix, positions[i].x, positions[i].y, sPoint);\r\n\t\t\t\r\n\t\t\tif (minX > sPoint.x)\t\t\t\t minX = sPoint.x;\r\n\t\t\tif (maxX < sPoint.x)\t\t\t\t maxX = sPoint.x;\r\n\t\t\tif (minY > sPoint.y)\t\t\t\t minY = sPoint.y;\r\n\t\t\tif (maxY < sPoint.y)\t\t\t\t maxY = sPoint.y;\r\n\t\t}\r\n\t\t\r\n\t\tout.setTo(minX, minY, maxX - minX, maxY - minY);\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Calculates the bounds of a rectangle projected into the XY-plane of a certain 3D space\r\n\t *  as they appear from the given camera position. Note that 'camPos' is expected in the\r\n\t *  target coordinate system (the same that the XY-plane lies in).\r\n\t *\r\n\t *  <p>If you pass an 'out' Rectangle, the result will be stored in this rectangle\r\n\t *  instead of creating a new object.</p> */\r\n\tpublic static function getBoundsProjected(rectangle:Rectangle, matrix:Matrix3D,\r\n\t\t\tcamPos:Vector3D, out:Rectangle = null):Rectangle\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Rectangle();\r\n\t\tif (camPos == null)\t\t\t throw new ArgumentError(\"camPos must not be null\");\r\n\t\t\r\n\t\tvar minX:Float = Math.POSITIVE_INFINITY;\r\n\t\tvar maxX:Float = Math.NEGATIVE_INFINITY;\r\n\t\tvar minY:Float = Math.POSITIVE_INFINITY;\r\n\t\tvar maxY:Float = Math.NEGATIVE_INFINITY;\r\n\t\tvar positions:Array<Point> = getPositions(rectangle, sPositions);\r\n\t\t\r\n\t\tfor (i in 0...4){\r\n\t\t\tvar position:Point = positions[i];\r\n\t\t\t\r\n\t\t\tif (matrix != null) \r\n\t\t\t\tMatrixUtil.transformCoords3D(matrix, position.x, position.y, 0, sPoint3D)\r\n\t\t\telse \r\n\t\t\tsPoint3D.setTo(position.x, position.y, 0);\r\n\t\t\t\r\n\t\t\tMathUtil.intersectLineWithXYPlane(camPos, sPoint3D, sPoint);\r\n\t\t\t\r\n\t\t\tif (minX > sPoint.x)\t\t\t\t minX = sPoint.x;\r\n\t\t\tif (maxX < sPoint.x)\t\t\t\t maxX = sPoint.x;\r\n\t\t\tif (minY > sPoint.y)\t\t\t\t minY = sPoint.y;\r\n\t\t\tif (maxY < sPoint.y)\t\t\t\t maxY = sPoint.y;\r\n\t\t}\r\n\t\t\r\n\t\tout.setTo(minX, minY, maxX - minX, maxY - minY);\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Returns a vector containing the positions of the four edges of the given rectangle. */\r\n\tpublic static function getPositions(rectangle:Rectangle,\r\n\t\t\tout:Array<Point> = null):Array<Point>\r\n\t{\r\n\t\tif (out == null)\t\t\t out = new Array<Point>();\r\n\t\t\r\n\t\tfor (i in 0...4){if (out[i] == null)\t\t\t\t out[i] = new Point();\r\n\t\t}\r\n\t\t\r\n\t\tout[0].x = rectangle.left;out[0].y = rectangle.top;\r\n\t\tout[1].x = rectangle.right;out[1].y = rectangle.top;\r\n\t\tout[2].x = rectangle.left;out[2].y = rectangle.bottom;\r\n\t\tout[3].x = rectangle.right;out[3].y = rectangle.bottom;\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\t/** Compares all properties of the given rectangle, returning true only if\r\n\t *  they are equal (with the given accuracy 'e'). */\r\n\tpublic static function compare(r1:Rectangle, r2:Rectangle, e:Float = 0.0001):Bool\r\n\t{\r\n\t\tif (r1 == null)\t\t\t return r2 == null\r\n\t\telse if (r2 == null)\t\t\t return false\r\n\t\telse \r\n\t\t{\r\n\t\t\treturn r1.x > r2.x - e && r1.x < r2.x + e &&\r\n\t\t\tr1.y > r2.y - e && r1.y < r2.y + e &&\r\n\t\t\tr1.width > r2.width - e && r1.width < r2.width + e &&\r\n\t\t\tr1.height > r2.height - e && r1.height < r2.height + e;\r\n\t\t}\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\nimport openfl.display3D.Context3DProfile;\r\nimport openfl.errors.ArgumentError;\r\nimport openfl.errors.Error;\r\nimport haxe.Timer;\r\n\r\nimport openfl.display.Stage3D;\r\nimport openfl.display3D.Context3D;\r\nimport openfl.display3D.Context3DMipFilter;\r\nimport openfl.display3D.Context3DRenderMode;\r\nimport openfl.display3D.Context3DTextureFilter;\r\nimport openfl.display3D.Context3DTextureFormat;\r\nimport openfl.display3D.Context3DWrapMode;\r\nimport openfl.events.ErrorEvent;\r\nimport openfl.events.Event;\r\n\r\nimport starling.core.Starling;\r\nimport starling.errors.AbstractClassError;\r\nimport starling.textures.Texture;\r\nimport starling.textures.TextureSmoothing;\r\n\r\n/** A utility class containing methods related to Stage3D and rendering in general. */\r\nclass RenderUtil\r\n{\r\n\tstatic private var profiles:Array<Context3DProfile>;\r\n\tstatic private var currentProfile:Context3DProfile;\r\n\tstatic private var stage3D:Stage3D;\r\n\tstatic private var renderMode:Context3DRenderMode;\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{\r\n\t\tthrow new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** Clears the render context with a certain color and alpha value. */\r\n\tpublic static function clear(rgb:Int = 0, alpha:Float = 0.0):Void\r\n\t{\r\n\t\tStarling.Context.clear(\r\n\t\t\t\tColor.getRed(rgb) / 255.0,\r\n\t\t\t\tColor.getGreen(rgb) / 255.0,\r\n\t\t\t\tColor.getBlue(rgb) / 255.0,\r\n\t\t\t\talpha);\r\n\t}\r\n\t\r\n\t/** Returns the flags that are required for AGAL texture lookup,\r\n\t *  including the '&lt;' and '&gt;' delimiters. */\r\n\tpublic static function getTextureLookupFlags(format:Context3DTextureFormat, mipMapping:Bool, repeat:Bool = false, smoothing:String = null):String\r\n\t{\r\n\t\t// TODO this method can probably be removed\r\n\t\tif (smoothing == null) smoothing = TextureSmoothing.BILINEAR;\r\n\t\tvar options:Array<Dynamic> = [\"2d\", (repeat) ? \"repeat\":\"clamp\"];\r\n\t\t\r\n\t\tif (format == Context3DTextureFormat.COMPRESSED) \r\n\t\t\toptions.push(\"dxt1\")\r\n\t\telse if (format == Context3DTextureFormat.COMPRESSED_ALPHA) \r\n\t\t\toptions.push(\"dxt5\");\r\n\t\t\r\n\t\tif (smoothing == TextureSmoothing.NONE) {\r\n\t\t\toptions.push(\"nearest\");\r\n\t\t\toptions.push(mipMapping ? \"mipnearest\":\"mipnone\");\r\n\t\t}\r\n\t\telse if (smoothing == TextureSmoothing.BILINEAR) {\r\n\t\t\toptions.push(\"linear\");\r\n\t\t\toptions.push(mipMapping ? \"mipnearest\":\"mipnone\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\toptions.push(\"linear\");\r\n\t\t\toptions.push(mipMapping ? \"miplinear\":\"mipnone\");\r\n\t\t}\r\n\t\t\r\n\t\treturn \"<\" + options.join(\",\") + \">\";\r\n\t}\r\n\t\r\n\t/** Returns a bit field uniquely describing texture format and premultiplied alpha,\r\n\t *  so that each required AGAL variant will get its unique ID. This method is most\r\n\t *  useful when overriding the <code>programVariantName</code> method of custom\r\n\t *  effects.\r\n\t *\r\n\t *  @return a bit field using the 3 least significant bits.\r\n\t */\r\n\tpublic static function getTextureVariantBits(texture:Texture):Int\r\n\t{\r\n\t\tif (texture == null)\t\t\t return 0;\r\n\t\t\r\n\t\tvar bitField:Int = 0;\r\n\t\tvar formatBits:Int = 0;\r\n\t\t\r\n\t\tvar _sw0_ = (texture.format);\t\t\r\n\r\n\t\tswitch (_sw0_)\r\n\t\t{\r\n\t\t\tcase Context3DTextureFormat.COMPRESSED_ALPHA:\r\n\t\t\t\tformatBits = 3;\r\n\t\t\tcase Context3DTextureFormat.COMPRESSED:\r\n\t\t\t\tformatBits = 2;\r\n\t\t\tdefault:\r\n\t\t\t\tformatBits = 1;\r\n\t\t}\r\n\t\t\r\n\t\tbitField |= formatBits;\r\n\t\t\r\n\t\tif (!texture.premultipliedAlpha) \r\n\t\t\tbitField |= 1 << 2;\r\n\t\t\r\n\t\treturn bitField;\r\n\t}\r\n\t\r\n\t/** Calls <code>setSamplerStateAt</code> at the current context,\r\n\t *  converting the given parameters to their low level counterparts. */\r\n\tpublic static function setSamplerStateAt(sampler:Int, mipMapping:Bool, smoothing:String = \"bilinear\", repeat:Bool = false):Void\r\n\t{\r\n\t\tvar wrap:Context3DWrapMode = (repeat) ? Context3DWrapMode.REPEAT:Context3DWrapMode.CLAMP;\r\n\t\tvar filter:Context3DTextureFilter;\r\n\t\tvar mipFilter:Context3DMipFilter;\r\n\t\t\r\n\t\tif (smoothing == TextureSmoothing.NONE) \r\n\t\t{\r\n\t\t\tfilter = Context3DTextureFilter.NEAREST;\r\n\t\t\tmipFilter = (mipMapping) ? Context3DMipFilter.MIPNEAREST:Context3DMipFilter.MIPNONE;\r\n\t\t}\r\n\t\telse if (smoothing == TextureSmoothing.BILINEAR) \r\n\t\t{\r\n\t\t\tfilter = Context3DTextureFilter.LINEAR;\r\n\t\t\tmipFilter = (mipMapping) ? Context3DMipFilter.MIPNEAREST:Context3DMipFilter.MIPNONE;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tfilter = Context3DTextureFilter.LINEAR;\r\n\t\t\tmipFilter = (mipMapping) ? Context3DMipFilter.MIPLINEAR:Context3DMipFilter.MIPNONE;\r\n\t\t}\r\n\t\t\r\n\t\tStarling.Context.setSamplerStateAt(sampler, wrap, filter, mipFilter);\r\n\t}\r\n\t\r\n\t/** Creates an AGAL source string with a <code>tex</code> operation, including an options\r\n\t *  list with the appropriate format flag.\r\n\t *\r\n\t *  <p>Note that values for <code>repeat/clamp</code>, <code>filter</code> and\r\n\t *  <code>mip-filter</code> are not included in the options list, since it's preferred\r\n\t *  to set those values at runtime via <code>setSamplerStateAt</code>.</p>\r\n\t *\r\n\t *  <p>Starling expects every color to have its alpha value premultiplied into\r\n\t *  the RGB channels. Thus, if this method encounters a non-PMA texture, it will\r\n\t *  (per default) convert the color in the result register to PMA mode, resulting\r\n\t *  in an additional <code>mul</code>-operation.</p>\r\n\t *\r\n\t *  @param resultReg  the register to write the result into.\r\n\t *  @param uvReg\t  the register containing the texture coordinates.\r\n\t *  @param sampler\tthe texture sampler to use.\r\n\t *  @param texture\tthe texture that's active in the given texture sampler.\r\n\t *  @param convertToPmaIfRequired  indicates if a non-PMA color should be converted to PMA.\r\n\t *\r\n\t *  @return the AGAL source code, line break(s) included.\r\n\t */\r\n\tpublic static function createAGALTexOperation(resultReg:String, uvReg:String, sampler:Int, texture:Texture, convertToPmaIfRequired:Bool = true):String\r\n\t{\r\n\t\tvar format:Context3DTextureFormat = texture.format;\r\n\t\tvar formatFlag:String;\r\n\t\t\r\n\t\tswitch (format)\r\n\t\t{\r\n\t\t\tcase Context3DTextureFormat.COMPRESSED:\r\n\t\t\t\tformatFlag = \"dxt1\";\r\n\t\t\tcase Context3DTextureFormat.COMPRESSED_ALPHA:\r\n\t\t\t\tformatFlag = \"dxt5\";\r\n\t\t\tdefault:\r\n\t\t\t\tformatFlag = \"rgba\";\r\n\t\t}\r\n\t\t\r\n\t\tvar operation:String = \"tex \" + resultReg + \", \" + uvReg + \", fs\" + sampler +\r\n\t\t\" <2d, \" + formatFlag + \">\\n\";\r\n\t\t\r\n\t\tif (convertToPmaIfRequired && !texture.premultipliedAlpha) \r\n\t\t\toperation += \"mul \" + resultReg + \".xyz, \" + resultReg + \".xyz, \" + resultReg + \".www\\n\";\r\n\t\t\r\n\t\treturn operation;\r\n\t}\r\n\t\r\n\t/** Requests a context3D object from the given Stage3D object.\r\n\t *\r\n\t * @param stage3D\tThe stage3D object the context needs to be requested from.\r\n\t * @param renderMode The 'Context3DRenderMode' to use when requesting the context.\r\n\t * @param profile\tIf you know exactly which 'Context3DProfile' you want to use, simply\r\n\t *\t\t\t\t   pass a String with that profile.\r\n\t *\r\n\t *\t\t\t\t   <p>If you are unsure which profiles are supported on the current\r\n\t *\t\t\t\t   device, you can also pass an Array of profiles; they will be\r\n\t *\t\t\t\t   tried one after the other (starting at index 0), until a working\r\n\t *\t\t\t\t   profile is found. If none of the given profiles is supported,\r\n\t *\t\t\t\t   the Stage3D object will dispatch an ERROR event.</p>\r\n\t *\r\n\t *\t\t\t\t   <p>You can also pass the String 'auto' to use the best available\r\n\t *\t\t\t\t   profile automatically. This will try all known Stage3D profiles,\r\n\t *\t\t\t\t   beginning with the most powerful.</p>\r\n\t */\r\n\tpublic static function requestContext3D(stage3D:Stage3D, renderMode:Context3DRenderMode, profiles:Array<Context3DProfile>=null):Void\r\n\t{\r\n\t\tRenderUtil.profiles = profiles;\r\n\t\tRenderUtil.renderMode = renderMode;\r\n\t\tRenderUtil.stage3D = stage3D;\r\n\t\t\r\n\t\tif (RenderUtil.profiles == null) {\r\n\t\t\tRenderUtil.profiles = [\r\n\t\t\t\t#if flash\r\n\t\t\t\tContext3DProfile.STANDARD, \r\n\t\t\t\tContext3DProfile.STANDARD_CONSTRAINED, \r\n\t\t\t\t#end\r\n\t\t\t\tContext3DProfile.BASELINE_EXTENDED, \r\n\t\t\t\tContext3DProfile.BASELINE, \r\n\t\t\t\tContext3DProfile.BASELINE_CONSTRAINED\r\n\t\t\t];\r\n\t\t}\r\n\t\t\r\n\t\tstage3D.addEventListener(Event.CONTEXT3D_CREATE, onCreated, false, 100);\r\n\t\tstage3D.addEventListener(ErrorEvent.ERROR, onError, false, 100);\r\n\t\t\r\n\t\trequestNextProfile();\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate static function requestNextProfile():Void\r\n\t{\r\n\t\tcurrentProfile = profiles.shift();\r\n\t\t\r\n\t\ttry{Execute.call(stage3D.requestContext3D, [renderMode, currentProfile]);\r\n\t\t}\t\t\tcatch (error:Error)\r\n\t\t{\r\n\t\t\tif (profiles.length != 0) {\r\n\t\t\t\tTimer.delay(requestNextProfile, 1);\r\n\t\t\t}\r\n\t\t\telse throw error;\r\n\t\t}\r\n\t};\r\n\t\r\n\tprivate static function onCreated(event:Event):Void\r\n\t{\r\n\t\tvar context:Context3D = stage3D.context3D;\r\n\t\t\r\n\t\tif (renderMode == Context3DRenderMode.AUTO && profiles.length != 0 &&\r\n\t\t\tcontext.driverInfo.indexOf(\"Software\") != -1) \r\n\t\t{\r\n\t\t\tonError(event);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tonFinished();\r\n\t\t}\r\n\t};\r\n\t\r\n\tprivate static function onError(event:Event):Void\r\n\t{\r\n\t\tif (profiles.length != 0) \r\n\t\t{\r\n\t\t\tevent.stopImmediatePropagation();\r\n\t\t\tTimer.delay(requestNextProfile, 1);\r\n\t\t}\r\n\t\telse onFinished();\r\n\t};\r\n\t\r\n\tprivate static function onFinished():Void\r\n\t{\r\n\t\tstage3D.removeEventListener(Event.CONTEXT3D_CREATE, onCreated);\r\n\t\tstage3D.removeEventListener(ErrorEvent.ERROR, onError);\r\n\t};\r\n}\r\n\r\n","package starling.utils;\r\n\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** A class that provides constant values for the 'RectangleUtil.fit' method. */\r\nclass ScaleMode\r\n{\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** Specifies that the rectangle is not scaled, but simply centered within the \r\n\t *  specified area. */\r\n\tpublic static var NONE:String = \"none\";\r\n\t\r\n\t/** Specifies that the rectangle fills the specified area without distortion \r\n\t *  but possibly with some cropping, while maintaining the original aspect ratio. */\r\n\tpublic static var NO_BORDER:String = \"noBorder\";\r\n\t\r\n\t/** Specifies that the entire rectangle will be scaled to fit into the specified \r\n\t *  area, while maintaining the original aspect ratio. This might leave empty bars at\r\n\t *  either the top and bottom, or left and right. */\r\n\tpublic static var SHOW_ALL:String = \"showAll\";\r\n\t\r\n\t/** Indicates whether the given scale mode string is valid. */\r\n\tpublic static function isValid(scaleMode:String):Bool\r\n\t{\r\n\t\treturn scaleMode == NONE || scaleMode == NO_BORDER || scaleMode == SHOW_ALL;\r\n\t}\r\n}\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** A utility class with methods related to the String class. */\r\nclass StringUtil\r\n{\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{\r\n\t\tthrow new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** Formats a String in .Net-style, with curly braces (\"{0}\"). Does not support any\r\n\t *  number formatting options yet. */\r\n\tpublic static function format(format:String, args:Array<Dynamic>):String\r\n\t{\r\n\t\t// TODO: add number formatting options\r\n\t\t\r\n\t\tfor (i in 0...args.length) {\r\n\t\t\tformat = format.split(\"{\" + i + \"}\").join(args[i]);\r\n\t\t}\r\n\t\t\r\n\t\treturn format;\r\n\t}\r\n\t\r\n\t/** Replaces a string's \"master string\" — the string it was built from —\r\n\t *  with a single character to save memory. Find more information about this AS3 oddity\r\n\t *  <a href=\"http://jacksondunstan.com/articles/2260\">here</a>.\r\n\t *\r\n\t *  @param  string The String to clean\r\n\t *  @return The input string, but with a master string only one character larger than it.\r\n\t *  @author Jackson Dunstan, JacksonDunstan.com\r\n\t */\r\n\tpublic static function clean(string:String):String\r\n\t{\r\n\t\treturn (\"_\" + string).substr(1);\r\n\t}\r\n\t\r\n\t/** Removes all leading white-space and control characters from the given String.\r\n\t *\r\n\t *  <p>Beware: this method does not make a proper Unicode white-space check,\r\n\t *  but simply trims all character codes of '0x20' or below.</p>\r\n\t */\r\n\tpublic static function trimStart(string:String):String\r\n\t{\r\n\t\tvar pos:Int = 0;\r\n\t\tvar length:Int = string.length;\r\n\t\t\r\n\t\tfor (i in 0...length) {\r\n\t\t\tpos = i;\r\n\t\t\tif (string.charCodeAt(pos) > 0x20) break;\r\n\t\t}\r\n\r\n\t\treturn string.substring(pos, length);\r\n\t}\r\n\t\r\n\t/** Removes all trailing white-space and control characters from the given String.\r\n\t *\r\n\t *  <p>Beware: this method does not make a proper Unicode white-space check,\r\n\t *  but simply trims all character codes of '0x20' or below.</p>\r\n\t */\r\n\tpublic static function trimEnd(string:String):String\r\n\t{\r\n\t\tvar pos:Int = string.length - 1;\r\n\t\twhile (pos >= 0){if (string.charCodeAt(pos) > 0x20)\t\t\t\t break;\r\n\t\t\t--pos;\r\n\t\t}\r\n\t\t\r\n\t\treturn string.substring(0, pos + 1);\r\n\t}\r\n\t\r\n\t/** Removes all leading and trailing white-space and control characters from the given\r\n\t *  String.\r\n\t *\r\n\t *  <p>Beware: this method does not make a proper Unicode white-space check,\r\n\t *  but simply trims all character codes of '0x20' or below.</p>\r\n\t */\r\n\tpublic static function trim(string:String):String\r\n\t{\r\n\t\tvar startPos:Int = 0;\r\n\t\tvar endPos:Int = 0;\r\n\t\tvar length:Int = string.length;\r\n\t\t\r\n\t\tfor (startPos in 0...length) {\r\n\t\t\tif (string.charCodeAt(startPos) > 0x20)\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\tendPos = string.length - 1;\r\n\t\twhile (endPos >= startPos) {\r\n\t\t\tif (string.charCodeAt(endPos) > 0x20) break;\r\n\t\t\t--endPos;\r\n\t\t}\r\n\t\t\r\n\t\treturn string.substring(startPos, endPos + 1);\r\n\t}\r\n}\r\n\r\n","// =================================================================================================\r\n//\r\n//\tStarling Framework\r\n//\tCopyright Gamua GmbH. All Rights Reserved.\r\n//\r\n//\tThis program is free software. You can redistribute and/or modify it\r\n//\tin accordance with the terms of the accompanying license agreement.\r\n//\r\n// =================================================================================================\r\n\r\npackage starling.utils;\r\n\r\nimport openfl.errors.Error;\r\nimport haxe.Constraints.Function;\r\n\r\nimport openfl.display3D.Context3D;\r\nimport openfl.events.Event;\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.system.Capabilities;\r\n\r\n\r\nimport starling.errors.AbstractClassError;\r\n\r\n/** A utility class with methods related to the current platform and runtime. */\r\nclass SystemUtil\r\n{\r\n\tpublic static var isApplicationActive(get, never):Bool;\r\n\tpublic static var isAIR(get, never):Bool;\r\n\tpublic static var isDesktop(get, never):Bool;\r\n\tpublic static var platform(get, never):String;\r\n\tpublic static var version(get, never):String;\r\n\tpublic static var supportsDepthAndStencil(get, never):Bool;\r\n\tpublic static var supportsVideoTexture(get, never):Bool;\r\n\r\n\tprivate static var sInitialized:Bool = false;\r\n\tprivate static var sApplicationActive:Bool = true;\r\n\tprivate static var sWaitingCalls:Array<Dynamic> = [];\r\n\tprivate static var sPlatform:String;\r\n\tprivate static var sVersion:String;\r\n\tprivate static var sAIR:Bool;\r\n\tprivate static var sSupportsDepthAndStencil:Bool = true;\r\n\t\r\n\t/** @private */\r\n\tpublic function new()\r\n\t{throw new AbstractClassError();\r\n\t}\r\n\t\r\n\t/** Initializes the <code>ACTIVATE/DEACTIVATE</code> event handlers on the native\r\n\t *  application. This method is automatically called by the Starling constructor. */\r\n\tpublic static function initialize():Void\r\n\t{\r\n\t\tif (sInitialized)\t\t\t return;\r\n\t\t\r\n\t\tsInitialized = true;\r\n\t\tsPlatform = Capabilities.version.substr(0, 3);\r\n\t\tsVersion = Capabilities.version.substr(4);\r\n\t\t\r\n\t\ttrace(\"FIX\");\r\n\t\t/*try\r\n\t\t{\r\n\t\t\tvar nativeAppClass:Dynamic = Type.resolveClass(\"openfl.desktop::NativeApplication\");\r\n\t\t\tvar nativeApp:EventDispatcher = cast(Reflect.field(nativeAppClass, \"nativeApplication\"), EventDispatcher);\r\n\t\t\t\r\n\t\t\tnativeApp.addEventListener(Event.ACTIVATE, onActivate, false, 0, true);\r\n\t\t\tnativeApp.addEventListener(Event.DEACTIVATE, onDeactivate, false, 0, true);\r\n\t\t\t\r\n\t\t\tvar appDescriptor:FastXML = Reflect.field(nativeApp, \"applicationDescriptor\");\r\n\t\t\tvar ns:Namespace = appDescriptor.node.namespace.innerData();\r\n\t\t\tvar ds:String = Std.string(appDescriptor.node.ns::initialWindow.innerData.node.ns::depthAndStencil.innerData).toLowerCase();\r\n\t\t\t\r\n\t\t\tsSupportsDepthAndStencil = (ds == \"true\");\r\n\t\t\tsAIR = true;\r\n\t\t}\t\tcatch (e:Error)\r\n\t\t{*/\r\n\t\t\tsAIR = false;\r\n\t\t//}\r\n\t}\r\n\t\r\n\tprivate static function onActivate(event:Dynamic):Void\r\n\t{\r\n\t\tsApplicationActive = true;\r\n\t\t\r\n\t\tfor (call in sWaitingCalls)\r\n\t\t{\r\n\t\t\ttry{call[0].apply(null, call[1]);\r\n\t\t\t}\t\t\tcatch (e:Error)\r\n\t\t\t{\r\n\t\t\t\ttrace(\"[Starling] Error in 'executeWhenApplicationIsActive' call:\", e.message);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tsWaitingCalls = [];\r\n\t}\r\n\t\r\n\tprivate static function onDeactivate(event:Dynamic):Void\r\n\t{\r\n\t\tsApplicationActive = false;\r\n\t}\r\n\t\r\n\t/** Executes the given function with its arguments the next time the application is active.\r\n\t *  (If it <em>is</em> active already, the call will be executed right away.) */\r\n\tpublic static function executeWhenApplicationIsActive(call:Function, args:Array<Dynamic>):Void\r\n\t{\r\n\t\tinitialize();\r\n\t\t\r\n\t\tif (sApplicationActive) Execute.call(call, args)\r\n\t\telse sWaitingCalls.push([call, args]);\r\n\t}\r\n\t\r\n\t/** Indicates if the application is currently active. On Desktop, this means that it has\r\n\t *  the focus; on mobile, that it is in the foreground. In the Flash Plugin, always\r\n\t *  returns true. */\r\n\tprivate static function get_isApplicationActive():Bool\r\n\t{\r\n\t\tinitialize();\r\n\t\treturn sApplicationActive;\r\n\t}\r\n\t\r\n\t/** Indicates if the code is executed in an Adobe AIR runtime (true)\r\n\t *  or Flash plugin/projector (false). */\r\n\tprivate static function get_isAIR():Bool\r\n\t{\r\n\t\tinitialize();\r\n\t\treturn sAIR;\r\n\t}\r\n\t\r\n\t/** Indicates if the code is executed on a Desktop computer with Windows, OS X or Linux\r\n\t *  operating system. If the method returns 'false', it's probably a mobile device\r\n\t *  or a Smart TV. */\r\n\tprivate static function get_isDesktop():Bool\r\n\t{\r\n\t\tinitialize();\r\n\t\treturn ~/(WIN|MAC|LNX)/.match(sPlatform);\r\n\t}\r\n\t\r\n\t/** Returns the three-letter platform string of the current system. These are\r\n\t *  the most common platforms: <code>WIN, MAC, LNX, IOS, AND, QNX</code>. Except for the\r\n\t *  last one, which indicates \"Blackberry\", all should be self-explanatory. */\r\n\tprivate static function get_platform():String\r\n\t{\r\n\t\tinitialize();\r\n\t\treturn sPlatform;\r\n\t}\r\n\t\r\n\t/** Returns the Flash Player/AIR version string. The format of the version number is:\r\n\t *  <em>majorVersion,minorVersion,buildNumber,internalBuildNumber</em>. */\r\n\tprivate static function get_version():String\r\n\t{\r\n\t\tinitialize();\r\n\t\treturn sVersion;\r\n\t}\r\n\t\r\n\t/** Returns the value of the 'initialWindow.depthAndStencil' node of the application\r\n\t *  descriptor, if this in an AIR app; otherwise always <code>true</code>. */\r\n\tprivate static function get_supportsDepthAndStencil():Bool\r\n\t{\r\n\t\treturn sSupportsDepthAndStencil;\r\n\t}\r\n\t\r\n\t/** Indicates if Context3D supports video textures. At the time of this writing,\r\n\t *  video textures are only supported on Windows, OS X and iOS, and only in AIR\r\n\t *  applications (not the Flash Player). */\r\n\tprivate static function get_supportsVideoTexture():Bool\r\n\t{\r\n\t\treturn cast Reflect.getProperty(Context3D, \"supportsVideoTexture\");\r\n\t   // return Context3D[\"supportsVideoTexture\"];\r\n\t}\r\n}\r\n","package utils;\r\n\r\n#if js\r\nimport js.Browser;\r\n#end\r\n\r\nimport openfl.system.Capabilities;\r\n\r\nclass DeviceInfo \r\n{\r\n\tstatic private var _checked:Bool;\r\n\tstatic private var _os:String;\r\n\tstatic private var _manufacturer:String;\r\n\t\r\n\tstatic private var _isMobile:Bool;\r\n\tstatic private var _isDesktop:Bool;\r\n\tstatic private var _isAndroid:Bool;\r\n\tstatic private var _isIOS:Bool;\r\n\tstatic private var _isTablet:Bool;\r\n\tstatic private var _isPhone:Bool;\r\n\tstatic private var _isCardboardCompatible:Bool;\r\n\t\r\n\tstatic private var _tabletScreenMinimumInches:Float = 6.2;\r\n\tstatic private var dpi:Float;\r\n\tstatic private var physicalScreenSize:Float;\r\n\t\r\n\tstatic public var screenWidth:Float;\r\n\tstatic public var screenHeight:Float;\r\n\t\r\n\tpublic static var isMobile(get, null):Bool;\r\n\tpublic static var isDesktop(get, null):Bool;\r\n\tpublic static var isTablet(get, null):Bool;\r\n\tpublic static var isPhone(get, null):Bool;\r\n\tpublic static var isIOS(get, null):Bool;\r\n\tpublic static var isAndroid(get, null):Bool;\r\n\tpublic static var isCardboardCompatible(get, null):Bool; \r\n\t\r\n\tpublic static function get_isMobile():Bool\r\n\t{\r\n\t\tif ( !_checked )\r\n\t\t\tcheckDevice();\r\n\t\t\t\r\n\t\treturn _isMobile;\r\n\t}\r\n\t\r\n\tpublic static function get_isDesktop():Bool\r\n\t{\r\n\t\tif ( !_checked )\r\n\t\t\tcheckDevice();\r\n\t\t\t\r\n\t\treturn _isDesktop;\r\n\t}\r\n\t\r\n\tpublic static function get_isTablet():Bool\r\n\t{\r\n\t\tif ( !_checked )\r\n\t\t\tcheckDevice();\r\n\t\t\t\r\n\t\treturn _isTablet;\r\n\t}\r\n\t\r\n\tpublic static function get_isPhone():Bool\r\n\t{\r\n\t\tif ( !_checked )\r\n\t\t\tcheckDevice();\r\n\t\t\t\r\n\t\treturn _isPhone;\r\n\t}\r\n\t\r\n\tpublic static function get_isIOS():Bool\r\n\t{\r\n\t\tif ( !_checked )\r\n\t\t\tcheckDevice();\r\n\t\t\t\r\n\t\treturn _isIOS;\r\n\t}\r\n\t\r\n\tpublic static function get_isAndroid():Bool\r\n\t{\r\n\t\tif ( !_checked ) checkDevice();\r\n\t\treturn _isAndroid;\r\n\t}\r\n\t\r\n\tstatic public function get_isCardboardCompatible():Bool \r\n\t{\r\n\t\tif ( !_checked ) checkDevice();\r\n\t\treturn _isCardboardCompatible;\r\n\t}\r\n\t\r\n\tprivate static function checkDevice():Void\r\n\t{\r\n\t\t_checked = true;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t#if js\r\n\t\t\t// This class is incomplete!\r\n\t\t\tvar match = [\"Android\", \"BlackBerry\", \"iPhone\", \"iPad\", \"iPod\", \"Opera Mini\", \"IEMobile\", \"WPDesktop\"];\r\n\t\t\tvar mobileFound:Bool = false;\r\n\t\t\tfor (i in 0...match.length) \r\n\t\t\t{\r\n\t\t\t\tif (Browser.navigator.userAgent.indexOf(match[i]) != -1) {\r\n\t\t\t\t\tmobileFound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (mobileFound) {\r\n\t\t\t\t_manufacturer = \"mobile\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t_manufacturer = \"windows\";\r\n\t\t\t}\r\n\t\t#else\r\n\t\t\t_os = Capabilities.os.toLowerCase();\r\n\t\t\t_manufacturer = Capabilities.manufacturer.toLowerCase();\r\n\t\t#end\r\n\t\t\r\n\t\tif (_manufacturer.indexOf(\"windows\") != -1 || _manufacturer.indexOf(\"osx\") != -1 )\r\n\t\t\t_isMobile = false;\r\n\t\telse\r\n\t\t\t_isMobile = true;\r\n\r\n\t\t_isDesktop = !_isMobile;\r\n\t\t\t\r\n\t\tscreenWidth = Math.max( Capabilities.screenResolutionX, Capabilities.screenResolutionY);\r\n\t\tscreenHeight = Math.min( Capabilities.screenResolutionX, Capabilities.screenResolutionY);\r\n\t\tdpi = Capabilities.screenDPI;\r\n\t\t\r\n\t\tvar dPixel:Float = Math.sqrt( Math.pow(screenWidth, 2) + Math.pow(screenHeight, 2) );\r\n\t\tphysicalScreenSize = dPixel / dpi; \r\n\t\t\r\n\t\tif (_isMobile)\r\n\t\t{\r\n\t\t\tif (_manufacturer.indexOf(\"android\") != -1 )\r\n\t\t\t\t_isAndroid = true;\r\n\t\t\t\t\r\n\t\t\t//TODO: check if on ios manufacturer returns 'apple'\r\n\t\t\tif (_manufacturer.indexOf(\"apple\") != -1 )\r\n\t\t\t\t_isIOS = true;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif ((physicalScreenSize > _tabletScreenMinimumInches) )\r\n\t\t\t\t_isTablet = true;\r\n\t\t\telse\r\n\t\t\t\t_isPhone = true;\r\n\t\t\t\r\n\t\t\tif (physicalScreenSize < 7){\r\n\t\t\t\t_isCardboardCompatible = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t_isCardboardCompatible = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n}","package utils;\r\n\r\n\r\nimport flash.geom.Rectangle;\r\nimport starling.textures.Texture;\r\nimport starling.utils.AssetManager;\r\n\r\nimport starling.display.Button;\r\n\r\n/** A simple button that uses \"scale9grid\" with a single texture. */\r\nclass MenuButton extends Button\r\n{\r\n\tpublic function new(text:String, width:Float = 128, height:Float = 32)\r\n\t{\r\n\t\tvar assets:AssetManager = Game.assets;\r\n\t\tvar upState:Texture = assets.getTexture(\"button\");\r\n\t\tsuper(upState, text);\r\n\t\t\r\n\t\tthis.scale9Grid = new Rectangle(12.5, 12.5, 20, 20);\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n}\r\n\r\n","package utils;\r\n\r\n\r\nimport flash.display.GradientType;\r\nimport flash.display.Shape;\r\nimport flash.display.Sprite;\r\nimport flash.geom.Matrix;\r\n\r\nclass ProgressBar extends Sprite\r\n{\r\n\tpublic var ratio(get, set):Float;\r\n\r\n\tprivate var _background:Shape;\r\n\tprivate var _bar:Shape;\r\n\t\r\n\tpublic function new(width:Int, height:Int)\r\n\t{\r\n\t\tsuper();\r\n\t\tinit(width, height);\r\n\t}\r\n\t\r\n\tprivate function init(width:Int, height:Int):Void\r\n\t{\r\n\t\tvar padding:Float = height * 0.2;\r\n\t\tvar cornerRadius:Float = padding * 2;\r\n\t\t\r\n\t\t// create black rounded box for background\r\n\t\t\r\n\t\t_background = new Shape();\r\n\t\t_background.graphics.beginFill(0x0, 0.5);\r\n\t\t_background.graphics.drawRoundRect(0, 0, width, height, cornerRadius, cornerRadius);\r\n\t\t_background.graphics.endFill();\r\n\t\taddChild(_background);\r\n\t\t\r\n\t\t// create progress bar shape\r\n\t\t\r\n\t\tvar barWidth:Float = width - 2 * padding;\r\n\t\tvar barHeight:Float = height - 2 * padding;\r\n\t\tvar barMatrix:Matrix = new Matrix();\r\n\t\tbarMatrix.createGradientBox(barWidth, barHeight, Math.PI / 2);\r\n\t\t\r\n\t\t_bar = new Shape();\r\n\t\t_bar.graphics.beginGradientFill(GradientType.LINEAR,\r\n\t\t\t\t[0xeeeeee, 0xaaaaaa], [1, 1], [0, 255], barMatrix);\r\n\t\t_bar.graphics.drawRect(0, 0, barWidth, barHeight);\r\n\t\t_bar.x = padding;\r\n\t\t_bar.y = padding;\r\n\t\t_bar.scaleX = 0.0;\r\n\t\taddChild(_bar);\r\n\t}\r\n\t\r\n\tprivate function get_ratio():Float\r\n\t{\r\n\t\treturn _bar.scaleX;\r\n\t}\r\n\t\r\n\tprivate function set_ratio(value:Float):Float\r\n\t{\r\n\t\t_bar.scaleX = Math.max(0.0, Math.min(1.0, value));\r\n\t\treturn value;\r\n\t}\r\n}\r\n","package utils;\r\n\r\n\r\nimport flash.geom.Point;\r\nimport flash.geom.Rectangle;\r\n\r\nimport starling.display.Button;\r\nimport starling.display.DisplayObject;\r\nimport starling.textures.Texture;\r\n\r\nclass RoundButton extends Button\r\n{\r\n\tpublic function new(upState:Texture, text:String = \"\", downState:Texture = null)\r\n\t{\r\n\t\tsuper(upState, text, downState);\r\n\t}\r\n\t\r\n\toverride public function hitTest(localPoint:Point):DisplayObject\r\n\t{\r\n\t\t// When the user touches the screen, this method is used to find out if an object was\r\n\t\t// hit. By default, this method uses the bounding box, but by overriding it,\r\n\t\t// we can change the box (rectangle) to a circle (or whatever necessary).\r\n\t\t\r\n\t\t// these are the cases in which a hit test must always fail\r\n\t\tif (!visible || !touchable || !hitTestMask(localPoint))\treturn null;  // get center of button  ;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tvar bounds:Rectangle = this.bounds;\r\n\t\tvar centerX:Float = bounds.width / 2;\r\n\t\tvar centerY:Float = bounds.height / 2;\r\n\t\t\r\n\t\t// calculate distance of localPoint to center.\r\n\t\t// we keep it squared, since we want to avoid the 'sqrt()'-call.\r\n\t\tvar sqDist:Float = Math.pow(localPoint.x - centerX, 2) +\r\n\t\tMath.pow(localPoint.y - centerY, 2);\r\n\t\t\r\n\t\t// when the squared distance is smaller than the squared radius,\r\n\t\t// the point is inside the circle\r\n\t\tvar radius:Float = bounds.width / 2 - 8;\r\n\t\tif (sqDist < Math.pow(radius, 2))\t\t\t return this\r\n\t\telse return null;\r\n\t}\r\n}\r\n","package utils;\r\n\r\n\r\nimport flash.geom.Point;\r\n\r\nimport starling.display.DisplayObject;\r\nimport starling.display.Sprite;\r\nimport starling.events.Touch;\r\nimport starling.events.TouchEvent;\r\nimport starling.events.TouchPhase;\r\n\r\nclass TouchSheet extends Sprite\r\n{\r\n\tpublic function new(contents:DisplayObject = null)\r\n\t{\r\n\t\tsuper();\r\n\t\taddEventListener(TouchEvent.TOUCH, onTouch);\r\n\t\tuseHandCursor = true;\r\n\t\t\r\n\t\tif (contents != null) \r\n\t\t{\r\n\t\t\tcontents.x = (contents.width / -2);\r\n\t\t\tcontents.y = (contents.height / -2);\r\n\t\t\taddChild(contents);\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride private function onTouch(event:TouchEvent):Void\r\n\t{\r\n\t\tvar touches:Array<Touch> = event.getTouches(this, TouchPhase.MOVED);\r\n\t\t\r\n\t\tif (touches.length == 1) \r\n\t\t{\r\n\t\t\t// one finger touching -> move\r\n\t\t\tvar delta:Point = touches[0].getMovement(parent);\r\n\t\t\tx += delta.x;\r\n\t\t\ty += delta.y;\r\n\t\t}\r\n\t\telse if (touches.length == 2) \r\n\t\t{\r\n\t\t\t// two fingers touching -> rotate and scale\r\n\t\t\tvar touchA:Touch = touches[0];\r\n\t\t\tvar touchB:Touch = touches[1];\r\n\t\t\t\r\n\t\t\tvar currentPosA:Point = touchA.getLocation(parent);\r\n\t\t\tvar previousPosA:Point = touchA.getPreviousLocation(parent);\r\n\t\t\tvar currentPosB:Point = touchB.getLocation(parent);\r\n\t\t\tvar previousPosB:Point = touchB.getPreviousLocation(parent);\r\n\t\t\t\r\n\t\t\tvar currentVector:Point = currentPosA.subtract(currentPosB);\r\n\t\t\tvar previousVector:Point = previousPosA.subtract(previousPosB);\r\n\t\t\t\r\n\t\t\tvar currentAngle:Float = Math.atan2(currentVector.y, currentVector.x);\r\n\t\t\tvar previousAngle:Float = Math.atan2(previousVector.y, previousVector.x);\r\n\t\t\tvar deltaAngle:Float = currentAngle - previousAngle;\r\n\t\t\t\r\n\t\t\t// update pivot point based on previous center\r\n\t\t\tvar previousLocalA:Point = touchA.getPreviousLocation(this);\r\n\t\t\tvar previousLocalB:Point = touchB.getPreviousLocation(this);\r\n\t\t\tpivotX = (previousLocalA.x + previousLocalB.x) * 0.5;\r\n\t\t\tpivotY = (previousLocalA.y + previousLocalB.y) * 0.5;\r\n\t\t\t\r\n\t\t\t// update location based on the current center\r\n\t\t\tx = (currentPosA.x + currentPosB.x) * 0.5;\r\n\t\t\ty = (currentPosA.y + currentPosB.y) * 0.5;\r\n\t\t\t\r\n\t\t\t// rotate\r\n\t\t\trotation += deltaAngle;\r\n\t\t\t\r\n\t\t\t// scale\r\n\t\t\tvar sizeDiff:Float = currentVector.length / previousVector.length;\r\n\t\t\tscaleX *= sizeDiff;\r\n\t\t\tscaleY *= sizeDiff;\r\n\t\t}\r\n\t\t\r\n\t\tvar touch:Touch = event.getTouch(this, TouchPhase.ENDED);\r\n\t\t\r\n\t\tif (touch != null && touch.tapCount == 2) \r\n\t\t\tparent.addChild(this);  // bring self to front\r\n\t\t\t\r\n\t\t\t// enable this code to see when you're hovering over the object\t\r\n\t\t\t// alpha = touch ? 0.8:1.0;\t\r\n\t\t\t// touch = event.getTouch(this, TouchPhase.HOVER);\t\r\n\t}\r\n\t\r\n\toverride public function dispose():Void\r\n\t{\r\n\t\tremoveEventListener(TouchEvent.TOUCH, onTouch);\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage;\n\n// Can't enable @:coreApi because some fields are now inline getters\n// @:coreApi\n@:keepInit\nextern class Math\n{\n\tstatic var PI(default,null) : Float;\n\n\tstatic var NEGATIVE_INFINITY(get, null) : Float;\n\tprivate static inline function get_NEGATIVE_INFINITY () : Float {\n\t\treturn -(untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var POSITIVE_INFINITY(get,null) : Float;\n\tprivate static inline function get_POSITIVE_INFINITY () : Float {\n\t\treturn (untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var NaN(get, null) : Float;\n\tprivate static inline function get_NaN () : Float {\n\t\treturn (untyped __js__(\"NaN\"));\n\t}\n\n\tstatic function abs(v:Float):Float;\n\tstatic function acos(v:Float):Float;\n\tstatic function asin(v:Float):Float;\n\tstatic function atan(v:Float):Float;\n\tstatic function atan2(y:Float, x:Float):Float;\n\tstatic function ceil(v:Float):Int;\n\tstatic function cos(v:Float):Float;\n\tstatic function exp(v:Float):Float;\n\tstatic function floor(v:Float):Int;\n\tstatic function log(v:Float):Float;\n\tstatic function max(a:Float, b:Float):Float;\n\tstatic function min(a:Float, b:Float):Float;\n\tstatic function pow(v:Float, exp:Float):Float;\n\tstatic function random() : Float;\n\tstatic function round(v:Float):Int;\n\tstatic function sin(v:Float):Float;\n\tstatic function sqrt(v:Float):Float;\n\tstatic function tan(v:Float):Float;\n\n\tstatic inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\tstatic inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\tstatic inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\tstatic inline function isFinite( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isFinite\"))(f);\n\t}\n\n\tstatic inline function isNaN( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isNaN\"))(f);\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\n\t}\n}\n","package openfl._internal.aglsl;\r\n\r\n\r\nclass Context3D {\r\n\t\r\n\t\r\n\tpublic static var defaultsampler = new Sampler ();\r\n\tpublic static var driverInfo = \"Call getter function instead\";\r\n\tpublic static var enableErrorChecking = false;\r\n\tpublic static var maxfragconstants = 28;\r\n\tpublic static var maxstreams = 8;\r\n\tpublic static var maxtemp = 8;\r\n\tpublic static var maxtextures = 8;\r\n\tpublic static var maxvertexconstants = 128;\r\n\tpublic static var resources:Array<Dynamic> = [];\r\n\t\r\n\t\r\n}","package openfl.display3D;\r\n\r\n\r\nimport openfl.gl.GL;\r\n\r\n\r\nclass Context3DClearMask {\r\n\t\r\n\t\r\n\tpublic static inline var ALL:Int = COLOR | DEPTH | STENCIL;\r\n\tpublic static inline var COLOR:Int = GL.COLOR_BUFFER_BIT;\r\n\tpublic static inline var DEPTH:Int = GL.DEPTH_BUFFER_BIT;\r\n\tpublic static inline var STENCIL:Int = GL.STENCIL_BUFFER_BIT;\r\n\t\r\n\t\r\n}"],
"names":[],
"mappings":"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C;sCACA;wCACE;uCACD;iDACU;yCACR;mCACN;0CACO;sDACY;8CACR;oCKiClB;uFOpDe;2CauBN;6CACE;2CACF;iCAEV;gCACD;oCACI;qCACC;oCACD;yCACK;uCACF;+BAER;8BACD;oCACM;8CACU;oCACV;8CACU;oCACV;8CACU;oCAEV;8CACU;6CACD;mCAEV;yCACM;6CACI;+CACE;wCAEP;gDACQ;wCAER;wCACA;0CACE;0CACA;yCACD;mDACU;yCACV;mDACU;sCACb;uCAEC;+CACQ;+CACA;uDACQ;sCAEjB;sCACA;uCACC;sCAED;uCACC;gDAES;gCAEhB;+BACD;yCACU;oCAEL;gCACJ;iCACC;uCACM;qCACF;uCACE;8CACO;mDACK;0CACT;mCAEP;uCACI;wCACC;4CACI;wCACJ;6BAEV;8BACA;qCAEO;mDACc;mDACA;yCACV;qCACJ;sCACC;0CACI;4CACE;qCACP;8CACS;uCACP;uCACA;kDACW;kDACA;sCACZ;6CACO;4CACD;4CACA;4CACA;uDACW;uDACA;2CACZ;kDACO;iDACD;mCACd;sCACG;4CAEM;0CACF;2CACC;yCACF;2CACE;4CACC;wCACJ;mCACL;qCACE;oCACD;qCACC;qCACA;uCACE;+CACQ;gDAEC;6CACH;yCACJ;kCACP;gDACc;iDACC;qDAEI;oCAEjB;kCACF;iCACD;+CAEc;+BAEhB;wCACS;gCACR;yCACS;8BACX;uCACS;gCACP;0CAEU;gCACV;8BACF;+BACC;kCACG;mCACC;oCACC;0CACM;iDAEO;iDACA;+CACF;0CAEL;wCACF;6CACK;qDACQ;8CACP;2DACa;yDACF;kDACP;uDACK;sCACjB;wCACE;sCACF;0CACI;2CACC;0CACD;4CACE;mDACO;0CACT;gCAEV;+BACD;gCACC;iCACC;kCACC;mCACC;iCACF;iCACA;+BAEF;kCACG;+BACH;+BACA;iCACE;oCACG;oCACA;iCAEH;mCACE;kCACD;kCAEA;iCACD;iDAEgB;gDACD;gDACA;+CACD;6CAEF;6CACA;yCACJ;yCACA;qCAEJ;kCACH;2CAES;mDACQ;sDACG;sDACA;sDACA;sDACA;sDACA;sDACA;oDACF;mCAEjB;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;oCACC;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;yCACK;iCAER;wCACO;0CACE;qCAEL;qCACA;qCACA;mCACF;mCACA;mCACA;+BACJ;oCACK;oCACA;oCACA;qCACC;qCACA;qCACA;qCACA;uCACE;sDAEe;mDACH;qDACE;mDACF;yDACM;sDACH;6DACO;oDAET;uCACb;yCAEE;oCAEL;uCACG;qCACF;kCACH;qCACG;mCACF;sCAEG;uCACC;gCAEP;kCACE;iCACD;4CACW;wCACJ;yCACC;wCACD;6CAEK;8CACC;uDACS;gDACP;kDACE;iDACD;kDACC;kDACA;oDACE;6DAES;6DACA;+DACE;uEACQ;4CAE3B;2CACD;6CACE;mDACM;+BAEpB;+CAEgB;4DACa;oEACQ;4DACR;kDACV;8CAEJ;+CACC;gDACC;wDAEQ;8CAEV;yDACW;6CACZ;6DACgB;gDACb;yDGlXjB,xDAAE,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK;+BCDjG;iDCJA,hDAAE,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK,AAAK;+CKEnE;iDACE;+CACF;mDACI;mDACA;qDACE;gDEEV;6CACH;iCCRmC;0DSLtE,AAAc;gEACd,AAAoB;gEACpB,AAAoB;gEACpB,AAAoB;gEACpB,AAAoB;mDELpB,AAAa;sDACb,AAAgB;oDAChB,AAAc;mDAEd,AAAa;qDACb,AAAe;oDACf,AAAc;qDACd,AAAe;uDACf,AAAiB;qDACjB,AAAe;kDACf,AAAY;qDACZ,AAAe;qDACf,AAAe;mDACf,AAAa;gDACb,AAAU;mDACV,AAAa;qDACb,AAAe;oDACf,AAAc;qDACd,AAA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wCACO;wCACA;6CACK;2CACF;sCACL;sCACA;qCACD;sCACC;oCACF;uCACG;uCACA;4CACK;0CACF;oCACN;qCACC;0CCnBC;uCCAF;0CACG;kDCDG;qECEU;uCCGb;qCACF;sCACC;qCACD;sCACC;0CACI;2CACC;qCACN;+DEb9B,AAAiB;iEACjB,AAAmB;+DACnB,AAAiB;wCGYgB;gDKXH;kDACE;2CCCW;sEGL3C,AAAa;oEACb,AAAW;yEACX,AAAgB;gEGFhB,AAAa;6DACb,AAAU;8DACV,AAAW;iEACX,AAAc;8DACd,AAAW;6DACX,AAAU;+CEKqC;6CACF;8CACC;sCACR;6CACO;8CACC;oCACV;oCACA;yCACK;gDACO;+CACD;+CACA;+CACA;oCACX;6CACS;wCACK;iDACD;kDAEW;0CAClB;yCACD;wCAGD;yCACC;0CAIC;oDAC6B;oDACI;6CAC9B;6CGxCF;mCCWb;iECZ9B,AAAa;+DACb,AAAW;iEACX,AAAa;6DCFb,AAAe;2DACf,AAAa;iDCDb,AAAW;wDACX,AAAkB;mDAClB,AAAa;oDACb,AAAc;iDCHd,AAAa;mDACb,AAAe;uDACf,AAAmB;qDCFnB,AAAW;sDACX,AAAY;yDACZ,AAAe;mEEFf,AAAa;iEACb,AAAW;iEACX,AAAW;kEACX,AAAY;4DCHZ,AAAc;0DACd,AAAY;+DEDZ,AAAa;4DACb,AAAU;gEACV,AAAc;6DACd,AAAW;8DACX,AAAY;8DACZ,AAAY;kCEO6B;iCACD;mCAEb;gCACH;kCACE;4CEVG;8BCHA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;uBACP;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;8BACO;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;qCACO;gCACL;kCACE;qCACG;oCACD;mCACD;wBACX;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA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"
}